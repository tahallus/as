#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Задать настройки формы отчета.
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения	 - Форма отчета
//  КлючВарианта - Строка						 - Ключ загружаемого варианта
//  Настройки	 - Структура					 - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

// Процедура - Обработчик заполнения настроек отчета и варианта
//
// Параметры:
//  НастройкиОтчета		 - Структура - Настройки отчета, подробнее см. процедуру ОтчетыУНФ.ИнициализироватьНастройкиОтчета 
//  НастройкиВариантов	 - Структура - Настройки варианта отчета, подробнее см. процедуру ОтчетыУНФ.ИнициализироватьНастройкиВарианта
//
Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	УстановитьТегиВариантов(НастройкиВариантов);
	ДобавитьОписанияСвязанныхПолей(НастройкиВариантов);
	
КонецПроцедуры

// Обработчик контекстного открытия отчета
//
// Параметры:
//  Объект		 - Произвольный	 - Источник контекстного открытия отчета
//  ПолеСвязи	 - Строка		 - Поле из настроек связи контекстного открытия
//  Отборы		 - Структура	 - Изменяемая структура отборов отчета
//  Отказ		 - Булево		 - Признак отмены открытия отчета
//
Процедура ПриКонтекстномОткрытии(Объект, ПолеСвязи, Отборы, Отказ) Экспорт
	
	Если ПолеСвязи = "Сотрудник" Тогда
		Отборы.Вставить(ПолеСвязи, МассивСотрудников(Объект));
		Отборы.Вставить("СтПериод", Новый СтандартныйПериод);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ОтчетыУНФ.ФормаОтчетаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// Обработчик события ПриЗагрузкеВариантаНаСервере
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения	 - Форма отчета
//  НовыеНастройкиКД - НастройкиКомпоновкиДанных	 - Загружаемые настройки КД
//
Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
	
	ОтчетыУНФ.ПреобразоватьСтарыеНастройки(Форма, НовыеНастройкиКД);	
	ОтчетыУНФ.ОбновитьВидимостьОтбораОрганизация(Форма.Отчет.КомпоновщикНастроек);	
	ОтчетыУНФ.ФормаОтчетаПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД);
	
КонецПроцедуры

// Обработчик события ПриЗагрузкеПользовательскихНастроекНаСервере
//
// Параметры:
//  Форма							 - ФормаКлиентскогоПриложения				 - Форма отчета
//  НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных - Загружаемые пользовательские настройки КД
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ОтчетыУНФ.ПеренестиПараметрыЗаголовкаВНастройки(КомпоновщикНастроек.Настройки, НовыеПользовательскиеНастройкиКД);	
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ОтчетыУНФ.ОбъединитьСПользовательскимиНастройками(КомпоновщикНастроек);
	ОтчетыУНФ.ПриКомпоновкеРезультата(КомпоновщикНастроек, СхемаКомпоновкиДанных, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	Для Каждого НастройкиТекВарианта Из НастройкиВариантов Цикл
		НастройкиТекВарианта.Значение.Теги = НСтр("ru = 'Деньги,Персонал'");
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьОписанияСвязанныхПолей(НастройкиВариантов)
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ВедомостьВВалюте"].СвязанныеПоля, "Сотрудник", "Справочник.Сотрудники");
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ВедомостьВВалюте"].СвязанныеПоля, "Сотрудник", "Документ.РасходСоСчета", Перечисления.ВидыОперацийРасходСоСчета.Подотчетнику, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ВедомостьВВалюте"].СвязанныеПоля, "Сотрудник", "Документ.АвансовыйОтчет",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ВедомостьВВалюте"].СвязанныеПоля, "Сотрудник", "Документ.ПоступлениеВКассу", Перечисления.ВидыОперацийПоступлениеВКассу.ОтПодотчетника, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ВедомостьВВалюте"].СвязанныеПоля, "Сотрудник", "Документ.РасходИзКассы", Перечисления.ВидыОперацийРасходИзКассы.Подотчетнику, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ВедомостьВВалюте"].СвязанныеПоля, "Сотрудник", "Документ.ПоступлениеНаСчет", Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника, Истина, Истина);
	
КонецПроцедуры

Функция МассивСотрудников(ПараметрКоманды)
	
	Результат = Новый Массив;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		МассивДокументов = ПараметрКоманды;
	Иначе
		МассивДокументов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрКоманды);
	КонецЕсли;
	
	Для каждого Документ Из МассивДокументов Цикл
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Сотрудник");
			Результат.Добавить(Сотрудник);
		Иначе
			Подотчетник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Подотчетник");
			Результат.Добавить(Подотчетник);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Инициализация

ЭтоОтчетУНФ = Истина;

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
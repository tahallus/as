#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2021_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 17.08.2021 № ЕД-7-8/757@";
	Стр.ДатаНачала = '20211023';
	Стр.ДатаКонца = '20990101';
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2018_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 30.11.2018 № ММВ-7-8/670@";
	Стр.ДатаНачала = '20180101';
	Стр.ДатаКонца = '20211231';
	
	Возврат Результат;
КонецФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2018_1";
	Стр.КНД = "1150057";
	Стр.ВерсияФормата = "5.02";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2021_1";
	Стр.КНД = "1150057";
	Стр.ВерсияФормата = "5.03";
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2018_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2018_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2021_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2021_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2018_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2018_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2021_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2021_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2018_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2018_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2021_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2021_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "UT_ZZIUN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2018_1(СведенияОтправки)
	Префикс = "UT_ZZIUN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
		"Редакция формы устарела", "Титульная", "ДАТА_ПОДПИСИ"));
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2018_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) 
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Титульная.ИНН) 
			И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.НомерЗаявления) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
		"Не указан номер заявления", "Титульная", "НомерЗаявления"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации/ФИО физлица", "Титульная", "Наименование"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Пункт) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан пункт статьи НК РФ", "Титульная", "Пункт"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Пункт) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан пункт статьи НК РФ", "Титульная", "Пункт"));
	Иначе 
		МассивДляПроверки = Новый Массив;
		МассивДляПроверки.Добавить("78.");
		МассивДляПроверки.Добавить("79.");
		МассивДляПроверки.Добавить("176.");
		МассивДляПроверки.Добавить("203.");
		МассивДляПроверки.Добавить("333.40");
		Если МассивДляПроверки.Найти(СокрЛП(Титульная.Пункт) + "." + СокрЛП(Титульная.Подпункт)) = Неопределено Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Допустимы только следующие статьи НК: 78, 79, 176, 203, 333.40", "Титульная", "Пункт"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Год)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Год))
		Или (СтрДлина(СокрЛП(Титульная.Год)) <> 4)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан год (год должен состоять из 4 цифр, например, 2020)", "Титульная", "Год"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Месяц)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.Месяц))
		Или (СтрДлина(СокрЛП(Титульная.Месяц)) <> 2)Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан период (период должен состоять из 2 цифр, например, 02)", "Титульная", "Месяц"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодПериода) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан налоговый период", "Титульная", "КодПериода"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОКТМО) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ОКТМО)) 
		Или (Не (СтрДлина(СокрЛП(Титульная.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Титульная.ОКТМО)) = 11)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно заполнен ОКТМО", "Титульная", "ОКТМО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КБК) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КБК))
		Или (Не (СтрДлина(СокрЛП(Титульная.КБК)) = 20))Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно заполнен КБК", "Титульная", "КБК"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНОИзл)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНОИзл))
		Или СтрДлина(СокрЛП(Титульная.КодНОИзл)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый орган", "Титульная", "КодНОИзл"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрСтПлат) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан статус плательщика", "Титульная", "ПрСтПлат"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрИзлПлат) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак излишне уплаченной суммы", "Титульная", "ПрИзлПлат"));
	КонецЕсли;
	
	Если Данные.ДанныеУведомления.Свойство("Лист002")
		И Не ЗначениеЗаполнено(Титульная.ИНН) Тогда
		
		Лист002 = Данные.ДанныеУведомления.Лист002;
		Если Не ЗначениеЗаполнено(Лист002.Л201) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида документа", "Лист002", "Л201"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л202) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указаны серия и номер документа", "Лист002", "Л202"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л203) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан орган, выдавший документ", "Лист002", "Л203"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист002.Л0204) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата выдачи документа", "Лист002", "Л0204"));
		КонецЕсли;
	КонецЕсли;
	
	ЕстьЗаполненные = Ложь;
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.Свед Цикл 
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ЕстьЗаполненные = Истина;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "Свед", "ПрЗач", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Сумма) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана сумма", "Свед", "Сумма", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КодПериода) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код периода", "Свед", "КодПериода", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Месяц)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.Месяц))
			Или (СтрДлина(СокрЛП(Свед.Месяц)) <> 2)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан период", "Свед", "Месяц", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Год)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.Год))
			Или (СтрДлина(СокрЛП(Свед.Год)) <> 4)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан период", "Свед", "Год", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КодНОПрПост)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.КодНОПрПост))
			Или (СтрДлина(СокрЛП(Свед.КодНОПрПост)) <> 4)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан налоговый орган", "Свед", "КодНОПрПост", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.ОКТМО) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.ОКТМО)) 
			Или (Не (СтрДлина(СокрЛП(Свед.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Свед.ОКТМО)) = 11)) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно заполнен ОКТМО", "Свед", "ОКТМО", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КБК) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.КБК))
			Или (Не (СтрДлина(СокрЛП(Свед.КБК)) = 20))Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно заполнен КБК", "Свед", "КБК", Свед.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьЗаполненные Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнены сведения", "Свед", "ПрЗач", Данные.ДанныеМногостраничныхРазделов.Свед[0].Значение.УИД));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2021_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
		"Формат выгрузки 5.03 не утвержден", "Титульная", "ИНН"));
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) 
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Титульная.ИНН) 
			И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаяв) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер заявления", "Титульная", "НомерЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации/ФИО физлица", "Титульная", "Наименование"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ОКТМО) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.ОКТМО)) 
		Или (Не (СтрДлина(СокрЛП(Титульная.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Титульная.ОКТМО)) = 11)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно заполнен ОКТМО", "Титульная", "ОКТМО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КБК) 
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КБК))
		Или (Не (СтрДлина(СокрЛП(Титульная.КБК)) = 20))Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно заполнен КБК", "Титульная", "КБК"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНОИзл)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНОИзл))
		Или СтрДлина(СокрЛП(Титульная.КодНОИзл)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый орган", "Титульная", "КодНОИзл"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрСтПлат) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан статус плательщика", "Титульная", "ПрСтПлат"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерСтНК) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер статьи НК РФ", "Титульная", "НомерСтНК"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрИзлПлат) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак излишне уплаченной суммы", "Титульная", "ПрИзлПлат"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерП) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер п/п", "Титульная", "НомерП"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаП) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата п/п", "Титульная", "ДатаП"));
	КонецЕсли;
	
	Если Данные.ДанныеУведомления.Свойство("УдЛичнФЛ")
		И Не ЗначениеЗаполнено(Титульная.ИНН) Тогда
		
		УдЛичнФЛ = Данные.ДанныеУведомления.УдЛичнФЛ;
		Если Не ЗначениеЗаполнено(УдЛичнФЛ.КодВидДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида документа", "УдЛичнФЛ", "КодВидДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УдЛичнФЛ.СерНомДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указаны серия и номер документа", "УдЛичнФЛ", "СерНомДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УдЛичнФЛ.ВыдДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан орган, выдавший документ", "УдЛичнФЛ", "ВыдДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УдЛичнФЛ.ДатаДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата выдачи документа", "УдЛичнФЛ", "ДатаДок"));
		КонецЕсли;
	КонецЕсли;
	
	ЕстьЗаполненные = Ложь;
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.СвНОПрПост Цикл 
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ЕстьЗаполненные = Истина;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СвНОПрПост", "ПрЗач", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.Сумма) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана сумма", "СвНОПрПост", "Сумма", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КодНОПрПост)
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.КодНОПрПост))
			Или (СтрДлина(СокрЛП(Свед.КодНОПрПост)) <> 4)Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан налоговый орган", "СвНОПрПост", "КодНОПрПост", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.ОКТМО) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.ОКТМО)) 
			Или (Не (СтрДлина(СокрЛП(Свед.ОКТМО)) = 8 Или СтрДлина(СокрЛП(Свед.ОКТМО)) = 11)) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно заполнен ОКТМО", "СвНОПрПост", "ОКТМО", Свед.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Свед.КБК) 
			Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Свед.КБК))
			Или (Не (СтрДлина(СокрЛП(Свед.КБК)) = 20))Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно заполнен КБК", "СвНОПрПост", "КБК", Свед.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьЗаполненные Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнены сведения", "СвНОПрПост", "ПрЗач", Данные.ДанныеМногостраничныхРазделов.СвНОПрПост[0].Значение.УИД));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2021_1", "СхемаВыгрузкиФорма2021_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2018_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2018_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2021_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2018_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ДополнитьПараметры(ДанныеУведомления);
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2018_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2018_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2018_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2018_1");
	ДополнитьПараметры_2018(ДанныеУведомления);
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2021_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2021_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2021_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2021_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ДополнитьПараметры(Параметры)
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Месяц) Тогда 
		Месяц = Прав("00" + Параметры.ДанныеУведомления.Титульная.Месяц, 2);
	Иначе
		Месяц = "00";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Год) Тогда 
		Год = Прав("0000" + Параметры.ДанныеУведомления.Титульная.Год, 4);
	Иначе
		Год = "0000";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Месяц2) Тогда 
		Месяц2 = Прав("00" + Параметры.ДанныеУведомления.Титульная.Месяц2, 2);
	Иначе
		Месяц2 = "00";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Год2) Тогда 
		Год2 = Прав("0000" + Параметры.ДанныеУведомления.Титульная.Год2, 4);
	Иначе
		Год2 = "0000";
	КонецЕсли;
	
	Параметры.ДанныеУведомления.Титульная.Вставить("НалПериод1", Строка(Параметры.ДанныеУведомления.Титульная.КодПериода) + "." + Месяц + "." + Год);
	Параметры.ДанныеУведомления.Титульная.Вставить("НалПериод2", Строка(Параметры.ДанныеУведомления.Титульная.КодПериода2) + "." + Месяц2 + "." + Год2);
	
	НомерСтНК = Строка(Параметры.ДанныеУведомления.Титульная.Пункт);
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Подпункт) Тогда 
		НомерСтНК = НомерСтНК + "." + Строка(Параметры.ДанныеУведомления.Титульная.Подпункт);
	КонецЕсли;
	Параметры.ДанныеУведомления.Титульная.Вставить("НомерСтНК", НомерСтНК);
КонецПроцедуры

Процедура ДополнитьПараметры_2018(Параметры)
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Месяц) Тогда 
		Месяц = Прав("00" + Параметры.ДанныеУведомления.Титульная.Месяц, 2);
	Иначе
		Месяц = "00";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Год) Тогда 
		Год = Прав("0000" + Параметры.ДанныеУведомления.Титульная.Год, 4);
	Иначе
		Год = "0000";
	КонецЕсли;
	
	Параметры.ДанныеУведомления.Титульная.Вставить("НалПериодСтр", Строка(Параметры.ДанныеУведомления.Титульная.КодПериода) + "." + Месяц + "." + Год);
	
	Для Каждого Элт Из Параметры.ДанныеМногостраничныхРазделов.Свед Цикл 
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Свед.Месяц) Тогда 
			Месяц = Прав("00" + Свед.Месяц, 2);
		Иначе
			Месяц = "00";
		КонецЕсли;
		Если ЗначениеЗаполнено(Свед.Год) Тогда 
			Год = Прав("0000" + Свед.Год, 4);
		Иначе
			Год = "0000";
		КонецЕсли;
		Свед.Вставить("НалПериодСтр", Строка(Свед.КодПериода) + "." + Месяц + "." + Год);
	КонецЦикла;
	
	НомерСтНК = Строка(Параметры.ДанныеУведомления.Титульная.Пункт);
	Если ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.Подпункт) Тогда 
		НомерСтНК = НомерСтНК + "." + Строка(Параметры.ДанныеУведомления.Титульная.Подпункт);
	КонецЕсли;
	Параметры.ДанныеУведомления.Титульная.Вставить("НомерСтНК", НомерСтНК);
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("РегламентированноеУведомлениеЗачетНалога",
		СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, "Печать_Форма2017_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("РегламентированноеУведомлениеЗачетНалога",
			СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, "Печать_Форма2017_1_Лист002", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Процедура НапечататьЛистыСвед_2018(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеЗачетНалога.ПолучитьМакет("Печать_Форма2018_1_Свед");
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	ТекИнд = 1;
	Для Каждого Элт Из СтруктураПараметров.ДанныеМногостраничныхРазделов.Свед Цикл
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ПФкс = "_" + ТекИнд;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ПрЗач, "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодПериода, "КодПериода" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.Месяц, "Месяц" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.Год, "Год" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ОКТМО, "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КБК, "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодНОПрПост, "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(ОТЧ.ПривестиЗначение(Свед.Сумма), "Сумма" + ПФкс, ПечатнаяФорма.Области);
		
		Если ТекИнд = 5 Тогда 
			ТекИнд = 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(МакетПФ);
			Продолжить;
		КонецЕсли;
		
		ТекИнд = ТекИнд + 1;
	КонецЦикла;
	
	Если ТекИнд <> 1 Тогда
		Пока ТекИнд <> 5 Цикл
			ПФкс = "_" + ТекИнд;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодПериода" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Месяц" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Год" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Сумма" + ПФкс, ПечатнаяФорма.Области, "-");
			ТекИнд = ТекИнд + 1;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
	КонецЕсли;
КонецПроцедуры

Процедура НапечататьЛистыСвед_2021(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеЗачетНалога.ПолучитьМакет("Печать_Форма2021_1_СвНОПрПост");
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	ТекИнд = 1;
	Для Каждого Элт Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СвНОПрПост Цикл
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ПФкс = "_" + ТекИнд;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ПрЗач, "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ОКТМО, "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КБК, "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодНОПрПост, "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(ОТЧ.ПривестиЗначение(Свед.Сумма), "Сумма" + ПФкс, ПечатнаяФорма.Области);
		
		Если ТекИнд = 5 Тогда 
			ТекИнд = 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(МакетПФ);
			Продолжить;
		КонецЕсли;
		
		ТекИнд = ТекИнд + 1;
	КонецЦикла;
	
	Если ТекИнд <> 1 Тогда
		Пока ТекИнд <= 5 Цикл
			ПФкс = "_" + ТекИнд;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Сумма" + ПФкс, ПечатнаяФорма.Области, "-");
			ТекИнд = ТекИнд + 1;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2018_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("РегламентированноеУведомлениеЗачетНалога",
		СтруктураПараметров.ДанныеУведомления["Титульная"], 0, "Печать_Форма2018_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1);
	
	НомСтр = 2;
	НапечататьЛистыСвед_2018(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП);
	НомСтр = НомСтр - 1;
	
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("РегламентированноеУведомлениеЗачетНалога",
			СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, "Печать_Форма2018_1_Лист002", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2021_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("РегламентированноеУведомлениеЗачетНалога",
		СтруктураПараметров.ДанныеУведомления["Титульная"], 0, "Печать_Форма2021_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
	РазложениеСтатьиНК = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
		Строка(СтруктураПараметров.ДанныеУведомления["Титульная"].НомерСтНК), ".");
	Если РазложениеСтатьиНК.Количество() > 1 Тогда 
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(РазложениеСтатьиНК[0], "Пункт", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(РазложениеСтатьиНК[1], "Подпункт", ПечатнаяФорма.Области, "-");
	ИначеЕсли РазложениеСтатьиНК.Количество() = 1 Тогда 
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(РазложениеСтатьиНК[0], "Пункт", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Подпункт", ПечатнаяФорма.Области, "-");
	Иначе
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Пункт", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Подпункт", ПечатнаяФорма.Области, "-");
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1);
	
	НомСтр = 2;
	НапечататьЛистыСвед_2021(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП);
	НомСтр = НомСтр - 1;
	
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("РегламентированноеУведомлениеЗачетНалога",
			СтруктураПараметров.ДанныеУведомления["УдЛичнФЛ"], НомСтр, "Печать_Форма2021_1_УдЛичнФЛ", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Процедура КонвертацияИзРегламентированногоОтчета(ВыборкаСтрока) Экспорт
	Попытка
		Если ВыборкаСтрока.ВыбраннаяФорма = "ФормаОтчета2017Кв1" Тогда
			КонвертироватьНаСервере_2017(ВыборкаСтрока.Ссылка);
		ИначеЕсли ВыборкаСтрока.ВыбраннаяФорма = "ФормаОтчета2018Кв1" Тогда
			КонвертироватьНаСервере_2018(ВыборкаСтрока.Ссылка);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция СформироватьПустоеДеревоСтраниц_2017(Организация)
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	Дерево.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	Дерево.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	Стр001 = Дерево.Строки.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Титульная";
	Стр001.МногострочныеЧасти = Новый СписокЗначений;
	
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда
		Стр001 = Дерево.Строки.Добавить();
		Стр001.Наименование = "Сведения о физическом"+символы.ПС+"лице, не являющимся"+символы.ПС+"индивидуальным предпринимателем";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "Лист002";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "Лист002";
		Стр001.МакетыПФ = "Печать_Форма2017_1_Лист002";
		Стр001.МногострочныеЧасти = Новый СписокЗначений;
	КонецЕсли;
	
	Возврат Дерево;
КонецФункции

Функция СформироватьПустоеДеревоСтраниц_2018(Организация, ДанныеОтчета)
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	Дерево.Колонки.Добавить("ИмяМакета", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Многостраничность", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("Многострочность", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("ИДНаименования", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("МногострочныеЧасти", Новый ОписаниеТипов("СписокЗначений"));
	Дерево.Колонки.Добавить("МакетыПФ", Новый ОписаниеТипов("Строка"));
	
	Стр001 = Дерево.Строки.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2018";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2018_1_Титульная";
	Стр001.МногострочныеЧасти = Новый СписокЗначений;
	
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда
		Стр001 = Дерево.Строки.Добавить();
		Стр001.Наименование = "Сведения о физическом"+символы.ПС+"лице, не являющимся"+символы.ПС+"индивидуальным предпринимателем";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "Лист002_2018";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "Лист002";
		Стр001.МакетыПФ = "Печать_Форма2018_1_Лист002";
		Стр001.МногострочныеЧасти = Новый СписокЗначений;
	КонецЕсли;
	
	СтрРег = Дерево.Строки.Добавить();
	СтрРег.Наименование = "Сведения о налоговом органе";
	СтрРег.ИндексКартинки = 1;
	СтрРег.Многостраничность = Истина;
	СтрРег.Многострочность = Истина;
	СтрРег.МногострочныеЧасти = Новый СписокЗначений;
	
	Инд = 0;
	Для Каждого СтрСвед Из ДанныеОтчета.ДанныеМногостраничныхРазделов.Свед Цикл 
		Инд = Инд + 1;
		СтрРег0 = СтрРег.Строки.Добавить();
		СтрРег0.Наименование = "Стр. " + Формат(Инд, "ЧГ=");
		СтрРег0.ИндексКартинки = 1;
		СтрРег0.ИмяМакета = "Свед_2018";
		СтрРег0.Многостраничность = Истина;
		СтрРег0.Многострочность = Ложь;
		СтрРег0.УИД = Новый УникальныйИдентификатор;
		СтрРег0.ИДНаименования = "Свед";
		СтрРег0.МногострочныеЧасти = Новый СписокЗначений;
	КонецЦикла;
	
	Возврат Дерево;
КонецФункции

Процедура КонвертироватьНаСервере_2017(РегОтчет)
	Попытка
		РО = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегОтчет, "КодНалоговогоОргана,ДанныеОтчета,ДатаПодписи,Организация,Дата");
		ДанныеОтчета = РО.ДанныеОтчета.Получить();
		
		Уведомление = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		Уведомление.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОЗачетеНалога;
		Уведомление.Организация = РО.Организация;
		Уведомление.ИмяОтчета = "РегламентированноеУведомлениеЗачетНалога";
		Уведомление.ИмяФормы = "Форма2017_1";
		Уведомление.ПодписантФамилия = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпФ;
		Уведомление.ПодписантИмя = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпИ;
		Уведомление.ПодписантОтчество = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпО;
		Уведомление.ДатаПодписи = РО.Дата;
		Уведомление.Дата = ТекущаяДатаСеанса();
		
		ДанныеУведомления = Новый Структура;
		Титульный = Новый Структура;
		Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный Цикл 
			Титульный.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		Титульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", СокрЛП(Титульный.ПодпФ + " " + Титульный.ПодпИ + " " + Титульный.ПодпО));
		Титульный.Вставить("ИНН", Титульный.ИННШапка);
		Титульный.Вставить("КПП", Титульный.КППШапка);
		Титульный.Вставить("ВсегоСтраниц", Титульный.Страниц);
		Титульный.Вставить("ВсегоЛистов", Титульный.Листов);
		ДанныеУведомления.Вставить("Титульная", Титульный);
		
		Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(РО.Организация) Тогда
			Лист002 = Новый Структура;
			Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаЛист002 Цикл 
				Лист002.Вставить(КЗ.Ключ, КЗ.Значение);
			КонецЦикла;
			ДанныеУведомления.Вставить("Лист002", Лист002);
		КонецЕсли;
		
		Уведомление.РегистрацияВИФНС = УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьРегистрациюВИФНСПоКоду(Титульный.КодНО, РО.Организация);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ДеревоСтраниц", СформироватьПустоеДеревоСтраниц_2017(РО.Организация));
		СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		Уведомление.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Уведомление);
		
		ЗаписьСоответствия = РегистрыСведений["СоответствиеРегОтчетовУведомлениям"].СоздатьМенеджерЗаписи();
		ЗаписьСоответствия.РегОтчет = РегОтчет.Ссылка;
		ЗаписьСоответствия.Прочитать();
		ЗаписьСоответствия.РегОтчет = РегОтчет.Ссылка;
		ЗаписьСоответствия.Уведомление = Уведомление.Ссылка;
		ЗаписьСоответствия.Записать(Истина);
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура КонвертироватьНаСервере_2018(РегОтчет)
	Попытка
		РО = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегОтчет, "КодНалоговогоОргана,ДанныеОтчета,ДатаПодписи,Организация,Дата");
		ДанныеОтчета = РО.ДанныеОтчета.Получить();
		
		Уведомление = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		Уведомление.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОЗачетеНалога;
		Уведомление.Организация = РО.Организация;
		Уведомление.ИмяОтчета = "РегламентированноеУведомлениеЗачетНалога";
		Уведомление.ИмяФормы = "Форма2018_1";
		Уведомление.ПодписантФамилия = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпФ;
		Уведомление.ПодписантИмя = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпИ;
		Уведомление.ПодписантОтчество = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный.ПодпО;
		Уведомление.ДатаПодписи = РО.Дата;
		Уведомление.Дата = ТекущаяДатаСеанса();
		
		ИдентификаторыОбычныхСтраниц = Новый Структура;
		ДанныеУведомления = Новый Структура;
		ДанныеМногостраничныхРазделов = Новый Структура("Свед", Новый СписокЗначений);
		Титульный = Новый Структура;
		Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаТитульный Цикл 
			Титульный.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		Титульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", СокрЛП(Титульный.ПодпФ + " " + Титульный.ПодпИ + " " + Титульный.ПодпО));
		Титульный.Вставить("УИД", Новый УникальныйИдентификатор);
		ДанныеУведомления.Вставить("Титульная", Титульный);
		ИдентификаторыОбычныхСтраниц.Вставить("Титульная", Титульный.УИД);
		
		Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(РО.Организация) Тогда
			Лист002 = Новый Структура;
			Для Каждого КЗ Из ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаЛист002 Цикл 
				Лист002.Вставить(КЗ.Ключ, КЗ.Значение);
			КонецЦикла;
			Лист002.Вставить("УИД", Новый УникальныйИдентификатор);
			ДанныеУведомления.Вставить("Лист002", Лист002);
			ИдентификаторыОбычныхСтраниц.Вставить("Лист002", Лист002.УИД);
		КонецЕсли;
		
		Уведомление.РегистрацияВИФНС = УведомлениеОСпецрежимахНалогообложенияПовтИсп.ПолучитьРегистрациюВИФНСПоКоду(Титульный.КодНО, РО.Организация);
		ДеревоСтраницУведомления = СформироватьПустоеДеревоСтраниц_2018(РО.Организация, ДанныеОтчета);
		
		СтрокиУИД = ДеревоСтраницУведомления.Строки[ДеревоСтраницУведомления.Строки.Количество() - 1].Строки;
		Инд = 0;
		Для Каждого СтрСвед Из ДанныеОтчета.ДанныеМногостраничныхРазделов.Свед Цикл 
			СтрСведСтр = СтрСвед.Данные;
			СтрСведСтр.Вставить("УИД", СтрокиУИД[Инд].УИД);
			ДанныеМногостраничныхРазделов.Свед.Добавить(СтрСведСтр);
			Инд = Инд + 1;
		КонецЦикла;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ДеревоСтраниц", ДеревоСтраницУведомления);
		СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
		СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
		Уведомление.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Уведомление);
		
		ЗаписьСоответствия = РегистрыСведений["СоответствиеРегОтчетовУведомлениям"].СоздатьМенеджерЗаписи();
		ЗаписьСоответствия.РегОтчет = РегОтчет.Ссылка;
		ЗаписьСоответствия.Прочитать();
		ЗаписьСоответствия.РегОтчет = РегОтчет.Ссылка;
		ЗаписьСоответствия.Уведомление = Уведомление.Ссылка;
		ЗаписьСоответствия.Записать(Истина);
	Исключение
	КонецПопытки;
КонецПроцедуры

#КонецОбласти
#КонецЕсли

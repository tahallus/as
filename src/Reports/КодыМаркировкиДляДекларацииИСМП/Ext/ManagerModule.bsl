#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область КомандыПодменюОтчеты

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов.
//
// Возвращаемое значение:
//   СтрокаТаблицыЗначений, Неопределено - в зависимости от факта добавления отчета
//
Функция ДобавитьКомандуОтчета(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.КодыМаркировкиДляДекларацииИСМП) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер = Метаданные.Отчеты.КодыМаркировкиДляДекларацииИСМП.ПолноеИмя();
		КомандаОтчет.Представление = НСтр("ru='Коды маркировки для декларации ИС МП'");
		КомандаОтчет.МножественныйВыбор = Ложь;
		КомандаОтчет.Важность = "Обычное";
		КомандаОтчет.ДополнительныеПараметры.Вставить("ИмяКоманды", "КодыМаркировкиДляДекларацииИСМП");
		КомандаОтчет.КлючВарианта = "Основной";
		КомандаОтчет.ЕстьУсловияВидимости = Ложь;
		
		//ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаОтчет, "ДокументОснование",, ВидСравненияКомпоновкиДанных.Заполнено);
		
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Структура - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки размещения всех вариантов отчета.
//       См. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); 
// Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	
	НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	НастройкиВарианта.Описание = НСтр("ru= 'Формирование кодов маркировки для декларации ИС МП'");
	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Маркировка
		|ИСМП'");
	
КонецПроцедуры

#КонецОбласти

// Возвращает внешний набор данных для построения отчета.
//
// Параметры:
//  СписокДокументов - Массив - массив документов.
//
// Возвращаемое значение:
//  ТаблицаЗначений - внешний набор данных.
//
Функция ДанныеИнформационнойБазы(ДокументСсылка) Экспорт
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Номенклатура",      Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	Результат.Колонки.Добавить("ЗначениеШтрихкода", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	Результат.Колонки.Добавить("Штрихкод",  Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	Результат.Колонки.Добавить("Ссылка",      Новый ОписаниеТипов("ДокументСсылка.МаркировкаТоваровИСМП"));
	
	Если ТипЗнч(ДокументСсылка) = Тип("СписокЗначений") И ДокументСсылка.Количество() Тогда
		ДанныеШапки           = ШтрихкодированиеИС.ПолучитьСтруктуруРеквизитовДокумента(ДокументСсылка[0].Значение);
	ИначеЕсли ЗначениеЗаполнено(ДокументСсылка) Тогда
		ДанныеШапки           = ШтрихкодированиеИС.ПолучитьСтруктуруРеквизитовДокумента(ДокументСсылка);
	Иначе
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыСканирования = ШтрихкодированиеИС.ПараметрыСканирования(ДанныеШапки);
	ПараметрыСканирования.ЗапрашиватьДанныеСервисаИСМП = Ложь;
	
	Если ДанныеШапки.ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.АТК Тогда
		ИмяТабличнойЧасти = "ШтрихкодыАТК";
	Иначе
		ИмяТабличнойЧасти = "ШтрихкодыУпаковок";
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
					|	Штрихкоды.Ссылка           КАК Ссылка,
					|	Штрихкоды.ШтрихкодУпаковки КАК Штрихкод
					|ИЗ
					|	Документ.МаркировкаТоваровИСМП.%1 КАК Штрихкоды
					|ГДЕ
					|	Штрихкоды.Ссылка В (&ДокументИСМП)" ;
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяТабличнойЧасти);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументИСМП", ДокументСсылка);
	
	ТаблицаУпаковок   = Запрос.Выполнить().Выгрузить();
	
	Если ДанныеШапки.ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.КодыМаркировки Тогда
		
		РезультатПоиска = ШтрихкодированиеИС.ВложенныеШтрихкодыУпаковок(
			ТаблицаУпаковок.ВыгрузитьКолонку("Штрихкод"),
			ПараметрыСканирования);
		Маркировка = РезультатПоиска.МаркированныеТовары;
		КолонкаЗначениеШтрихкода=Маркировка.Колонки.Найти("Штрихкод");
		Если КолонкаЗначениеШтрихкода <> Неопределено Тогда
			
			// Нормализовать таблицу для заполнения внешнего источника данных
			КолонкаЗначениеШтрихкода.Имя = "ЗначениеШтрихкода";
			Маркировка.Колонки.Добавить("Ссылка",  Новый ОписаниеТипов("ДокументСсылка.МаркировкаТоваровИСМП"));
			Маркировка.ЗаполнитьЗначения(ДанныеШапки.Ссылка, "Ссылка");
			
			// Нормализовать значение кода маркировки для выгрузки в декларации
			ПараметрыНормализацииПрочее = РазборКодаМаркировкиИССлужебныйКлиентСервер.ПараметрыНормализацииКодаМаркировки();
			ПараметрыНормализацииПрочее.ИмяСвойстваКодМаркировки = "Штрихкод";
			ПараметрыНормализацииПрочее.НачинаетсяСоСкобки       = Ложь;
			
			Для Каждого СтрокаТаблицы Из Маркировка Цикл
				
				РезультатРазбора = ШтрихкодированиеИС.НоваяСтруктураОбработкиШтрихкода(
					СтрокаТаблицы.ЗначениеШтрихкода, СтрокаТаблицы.ВидПродукции, Ложь);
						
				НормализованныйКодМаркировки = ШтрихкодированиеИСМП.КодМаркировкиДляПередачиИСМП(
					РезультатРазбора, ПараметрыНормализацииПрочее);
				
				СтрокаТаблицы.ЗначениеШтрихкода = НормализованныйКодМаркировки;
				СтрокаТаблицы.Ссылка = ДанныеШапки.Ссылка;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Маркировка = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимое(ТаблицаУпаковок);
	КонецЕсли;
	
	Для Каждого СтрокаУпаковки Из Маркировка Цикл
		СтрокаТаблицы = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаУпаковки);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
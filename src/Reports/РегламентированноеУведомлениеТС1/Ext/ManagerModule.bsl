#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.КНД = "1110050";
	Стр.ВерсияФормата = "5.02";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 22.01.2021 № ЕД-7-3/91@";
	Стр.ДатаНачала = '20210619';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат ПечатьСразу_Форма2015_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат СформироватьМакет_Форма2015_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2020_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2020_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_1");
	ДополнитьПараметры_2020(ДанныеУведомления);
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ДополнитьПараметры_2020(Параметры)
	Параметры.Вставить("ДанныеДопСтрокБД", Новый Структура);
	Параметры.ДанныеДопСтрокБД.Вставить("МнгСтр", Новый ТаблицаЗначений);
	Параметры.ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("УИД");
	Параметры.ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("Аддр_ЗданиеТип");
	Параметры.ДанныеДопСтрокБД.МнгСтр.Колонки.Добавить("Аддр_ЗданиеНомер");
	
	Инд = 1;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ОбТоргСбор Цикл
		ОбТоргСбор = Стр.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ОбТоргСбор) Тогда 
			Продолжить;
		КонецЕсли;
		Инд = Инд + 1;
		ОбТоргСбор.Вставить("НомОбъект", Формат(Инд, "ЧЦ=3; ЧВН=; ЧГ="));
		
		Для Ит = 1 По 3 Цикл 
			НовСтр = Параметры.ДанныеДопСтрокБД.МнгСтр.Добавить();
			НовСтр.УИД = ОбТоргСбор.УИД;
			НовСтр.Аддр_ЗданиеТип = ОбТоргСбор["Аддр_ЗданиеТип" + Ит];
			НовСтр.Аддр_ЗданиеНомер = ОбТоргСбор["Аддр_ЗданиеНомер" + Ит];
		КонецЦикла;
		
		ОбТоргСбор.ИсчислКв = ?(ОбТоргСбор.ИсчислКв = Неопределено, 0, ОбТоргСбор.ИсчислКв);
		ОбТоргСбор.СумСборКв = ?(ОбТоргСбор.СумСборКв = Неопределено, 0, ОбТоргСбор.СумСборКв);
		Если ЗначениеЗаполнено(ОбТоргСбор.СтавкаОбТорг) Тогда 
			ОбТоргСбор.Вставить("СтавкаОбТоргСтр", Формат(ОбТоргСбор.СтавкаОбТорг, "ЧРД=.; ЧГ="));
		ИначеЕсли ЗначениеЗаполнено(ОбТоргСбор.СтавкаКвМ) Тогда 
			ОбТоргСбор.Вставить("СтавкаКвМСтр", Формат(ОбТоргСбор.СтавкаКвМ, "ЧРД=.; ЧГ="));
		Иначе
			ОбТоргСбор.Вставить("СтавкаОбТоргСтр", "0");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2020_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2020_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(СведенияОтправки)
	Префикс = "UT_UVTORGSB";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	ОТЧ = Новый ОписаниеТипов("Число");
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) 
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Титульная.ОГРН) 
			И Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(Титульная.ОГРН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан ОГРН", "Титульная", "ОГРН"));
		КонецЕсли;
		Если Титульная.ПРИЗНАК_НП_ПОДВАЛ <> "3" И Титульная.ПРИЗНАК_НП_ПОДВАЛ <> "4" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Титульная.ИНН) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН индивидуального предпринимателя", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ОГРНИП) 
			Или Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(Титульная.ОГРНИП, Ложь, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан ОГРН индивидуального предпринимателя", "Титульная", "ОГРНИП"));
		КонецЕсли;
		Если Титульная.ПРИЗНАК_НП_ПОДВАЛ <> "1" И Титульная.ПРИЗНАК_НП_ПОДВАЛ <> "2" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "3" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "4" Тогда 
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "4") И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации / ФИО индивидуального предпринимателя", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ)
		И (Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Или Не ЗначениеЗаполнено(Данные.ПодписантИмя))Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны фамилия/имя представителя", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрТоргСбор) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак уведомления", "Титульная", "ПрТоргСбор"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Титульная.ИННФЛ) 
		И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИННФЛ, Ложь, "") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан ИНН", "Титульная", "ИННФЛ"));
	КонецЕсли;
	
	ЕстьЗаполненныеЛисты = Ложь;
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.ОбТоргСбор Цикл
		ОбТоргСбор = Стр.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ОбТоргСбор) Тогда 
			Продолжить;
		КонецЕсли;
		ЕстьЗаполненныеЛисты = Истина;
		
		Если Титульная.ПрТоргСбор = "2" Или Титульная.ПрТоргСбор = "3" Тогда 
			Если ОбТоргСбор.ИспользоватьФайл <> Истина И ОбТоргСбор.ИспользоватьАкт <> Истина Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Необходимо заполнить информацию о первичном уведомлении", "ОбТоргСбор", "ИспользоватьФайл", ОбТоргСбор.УИД));
			ИначеЕсли ОбТоргСбор.ИспользоватьФайл = Истина Тогда
				Если Не ЗначениеЗаполнено(ОбТоргСбор.НомОбъектУв) 
					Или СтрДлина(СокрЛП(ОбТоргСбор.НомОбъектУв)) <> 3 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан / неправильно указан номер объекта из первичного уведомления", "ОбТоргСбор", "НомОбъектУв", ОбТоргСбор.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ОбТоргСбор.ИдФайлУв) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан идентификатор файла первичного уведомления", "ОбТоргСбор", "ИдФайлУв", ОбТоргСбор.УИД));
				ИначеЕсли Не СтрНачинаетсяС(ВРег(ОбТоргСбор.ИдФайлУв), "UT_UVTORGSB") Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Имя файла первичного уведомления должно начинаться на UT_UVTORGSB", "ОбТоргСбор", "ИдФайлУв", ОбТоргСбор.УИД));
				КонецЕсли;
			ИначеЕсли ОбТоргСбор.ИспользоватьАкт = Истина Тогда 
				Если Не ЗначениеЗаполнено(ОбТоргСбор.НомАкт) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан номер акта", "ОбТоргСбор", "НомАкт", ОбТоргСбор.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ОбТоргСбор.ДатаАкт) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана дата акта", "ОбТоргСбор", "ДатаАкт", ОбТоргСбор.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОбТоргСбор.НомерАктОбщ) Или ЗначениеЗаполнено(ОбТоргСбор.ДатаАктОбщ) Тогда 
			Если Не ЗначениеЗаполнено(ОбТоргСбор.НомерАктОбщ) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер акта", "ОбТоргСбор", "НомерАктОбщ", ОбТоргСбор.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ОбТоргСбор.ДатаАктОбщ) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата акта", "ОбТоргСбор", "ДатаАктОбщ", ОбТоргСбор.УИД));
			КонецЕсли;
		КонецЕсли;
		
		Если СтрДлина(СокрЛП(ОбТоргСбор.ОКТМО)) <> 8 И СтрДлина(СокрЛП(ОбТоргСбор.ОКТМО)) <> 11 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан ОКТМО", "ОбТоргСбор", "ОКТМО", ОбТоргСбор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбТоргСбор.КодВидОб) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида деятельности", "ОбТоргСбор", "КодВидОб", ОбТоргСбор.УИД));
		ИначеЕсли СтрНайти(";01;02;03;04;05;06;07;08;", ";" + ОбТоргСбор.КодВидОб + ";") = 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код вида деятельности", "ОбТоргСбор", "КодВидОб", ОбТоргСбор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбТоргСбор.КодВидТорг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида деятельности", "ОбТоргСбор", "КодВидТорг", ОбТоргСбор.УИД));
		ИначеЕсли СтрНайти(";01;02;03;04;05;", ";" + ОбТоргСбор.КодВидТорг + ";") = 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код вида деятельности", "ОбТоргСбор", "КодВидТорг", ОбТоргСбор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбТоргСбор.НомерРазр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер разрешения", "ОбТоргСбор", "НомерРазр", ОбТоргСбор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбТоргСбор.ОснПользОб) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано основание использования", "ОбТоргСбор", "ОснПользОб", ОбТоргСбор.УИД));
		ИначеЕсли СтрНайти(";1;2;3;", ";" + ОбТоргСбор.ОснПользОб + ";") = 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указано основание использования", "ОбТоргСбор", "ОснПользОб", ОбТоргСбор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбТоргСбор.ПризИспОб) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак использования", "ОбТоргСбор", "ПризИспОб", ОбТоргСбор.УИД));
		ИначеЕсли СтрНайти(";1;0;", ";" + ОбТоргСбор.ПризИспОб + ";") = 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан признак использования", "ОбТоргСбор", "ПризИспОб", ОбТоргСбор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбТоргСбор.ДатаВозникИсп) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата возникновения (прекращения) объекта обложения сбором", "ОбТоргСбор", "ДатаВозникИсп", ОбТоргСбор.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(ОбТоргСбор.СтавкаКвМ)
			Или (ЗначениеЗаполнено(ОбТоргСбор.СтавкаОбТорг) И (ОбТоргСбор.КодВидТорг = "03" Или ОбТоргСбор.КодВидТорг = "05")) Тогда 
			
			Если Не ЗначениеЗаполнено(ОбТоргСбор.ПлощОбТорг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана площадь торгового зала", "ОбТоргСбор", "ПлощОбТорг", ОбТоргСбор.УИД));
			КонецЕсли;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ПроверитьАдресВМногостраничнойСтранице(ТаблицаОшибок, ОбТоргСбор, "ОбТоргСбор");
	КонецЦикла;
	
	Если Не ЕстьЗаполненныеЛисты Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнены сведения об объектах торговли", "ОбТоргСбор", "НомерАктОбщ", Данные.ДанныеМногостраничныхРазделов.ОбТоргСбор[0].Значение.УИД));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);;
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьМакет_Форма2015_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОСпецрежимах_"+Объект.ВидУведомления.Метаданные().Имя;
	
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2015_1");
	ОбластьТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ПараметрыМакета = ОбластьТитульный.Параметры;
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.Титульный[0];
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.КОД_НО, "КОД_НО_", ПараметрыМакета, 4, "-");
	ПараметрыМакета.КодПричины = ?(ЗначениеЗаполнено(Титульный.КодПричины), Титульный.КодПричины, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ, "ОрганизацияНазвание_", ПараметрыМакета, 160, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ОГРН, "ОГРН_", ПараметрыМакета, 13, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ОГРНИП, "ОГРНИП_", ПараметрыМакета, 15, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Титульный.ПРИЛОЖЕНО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3, Истина, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Титульный.КОЛИЧЕСТВО_СТРАНИЦ, "КоличествоСтраниц_", ПараметрыМакета, 3, Истина, "-");
	
	ПараметрыМакета.ПризнакПодписанта = Титульный.ПРИЗНАК_НП_ПОДВАЛ;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ИНН_ПОДПИСАНТА, "ИНН_ПОДПИСАНТ_", ПараметрыМакета, 12, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20, "-");
	ПараметрыМакета.Email = Титульный.EMAIL_ПОДПИСАНТА;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40, "-");
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета, "-");
	
	ПечатнаяФорма.Вывести(ОбластьТитульный);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	Страница = 1;
	Для Каждого ДопЛист Из СтруктураПараметров.Сведения Цикл 
		ОбластьДопЛист = МакетУведомления.ПолучитьОбласть("Сведения");
		ПараметрыМакета = ОбластьДопЛист.Параметры;
		Страница = Страница + 1;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета("000", "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Страница, "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.ИНДЕКС, "Индекс_", ПараметрыМакета, 6, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.КОД_РЕГИОНА, "КодСубъекта_", ПараметрыМакета, 2, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.РАЙОН, "Район_", ПараметрыМакета, 34, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.ГОРОД, "Город_", ПараметрыМакета, 34, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.НАСЕЛЕННЫЙ_ПУНКТ, "НаселенныйПункт_", ПараметрыМакета, 34, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.УЛИЦА, "Улица_", ПараметрыМакета, 34, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.ДОМ, "Дом_", ПараметрыМакета, 8, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.КОРПУС, "Корпус_", ПараметрыМакета, 8, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.КВАРТИРА, "Квартира_", ПараметрыМакета, 8, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(ДопЛист.КодВидаПД, "ЧЦ=2; ЧН=--; ЧВН="), "КодВД_", ПараметрыМакета, 2, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(ДопЛист.КодВидаТоргОбъекта, "ЧЦ=2; ЧН=--; ЧВН="), "КодТорг_", ПараметрыМакета, 2, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.ОКТМО, "ОКТМО_", ПараметрыМакета, 11, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.НаимТоргОб, "НаимТорг_", ПараметрыМакета, 40, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(ДопЛист.ДАТА_ПРАВА, "ДатаИсп_", ПараметрыМакета, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.НомерРазр, "НомерРазр_", ПараметрыМакета, 15, "-");
		ПараметрыМакета.КодОснования  = ДопЛист.ОснИсп;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.НомЗдание, "КадастровыйНомерЗдания_", ПараметрыМакета, 40, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.НомПомещ, "КадастровыйНомерПомещения_", ПараметрыМакета, 40, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.НомУч, "КадастровыйНомерУчастка_", ПараметрыМакета, 40, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ДопЛист.КодЛьготы, "КодЛьготы_", ПараметрыМакета, 12, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ДопЛист.СтавкаСбораРуб, "СтавкаТорг_", ПараметрыМакета, 8, , "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ДопЛист.ИсчСуммаСбора, "ИсчСбор_", ПараметрыМакета, 8, , "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ДопЛист.СуммаЛьготы, "Льгота_", ПараметрыМакета, 8, , "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(ДопЛист.СуммаСбораИтого, "СуммаСбора_", ПараметрыМакета, 8, ,"-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(ДопЛист.ПлощТоргЗала, 7, 2, "ПлощТоргЗала_", ПараметрыМакета, "-");
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(ДопЛист.СтавкаСбораКвм, 8, 2, "СтавкаПлощ_", ПараметрыМакета, "-");
		
		ПечатнаяФорма.Вывести(ОбластьДопЛист);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьСразу_Форма2015_1(Объект)
	
	ПечатнаяФорма = СформироватьМакет_Форма2015_1(Объект);
	
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.ОбластьПечати = ПечатнаяФорма.Область();
	
	Возврат ПечатнаяФорма;
	
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(СведенияОтправки)
	Префикс = "UT_UVTORGSB";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2015_1(Данные, УникальныйИдентификатор)
	РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Редакция формы устарела", УникальныйИдентификатор);
	ВызватьИсключение "";
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
	Титульный = Данные.Титульный[0];
	
	ОсновныеСведения.Вставить("ПрТоргСбор", Титульный.КодПричины);
	ОсновныеСведения.Вставить("ИННПодп", Титульный.ИНН_ПОДПИСАНТА);
	ОсновныеСведения.Вставить("EmailПодп", Титульный.EMAIL_ПОДПИСАНТА);
	ОсновныеСведения.Вставить("Тлф", Титульный.ТЕЛЕФОН);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("НаимОргПредст", Титульный.ОРГ_ПРЕДСТАВИТЕЛЬ);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2015_1");
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(ОсновныеСведения, СтруктураВыгрузки);
	ЗаполнитьДанными_Форма2015_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2015_1(Объект, Параметры, ДеревоВыгрузки)
	Данные = Объект.ДанныеУведомления.Получить();
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_УчетТоргСбор = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "УчетТоргСбор");
	Узел_ОбТоргСбор = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УчетТоргСбор, "ОбТоргСбор");
	
	Нумератор = 1;
	КП = Данные.Титульный[0].КодПричины;
	Для Каждого СтрСвед Из Данные.Сведения Цикл
		НовыйУзел_ОбТоргСбор = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ОбТоргСбор);
		Узел_СведВидПД = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_ОбТоргСбор, "СведВидПД");
		Узел_СведОбТорг = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_ОбТоргСбор, "СведОбТорг");
		Узел_АдрОбТорг = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведОбТорг, "АдрОбТорг");
		Узел_РасчСумСбор = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_ОбТоргСбор, "РасчСумСбор");
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведВидПД, "ДатаВозникИсп", Формат(СтрСвед.ДАТА_ПРАВА, "ДФ=dd.MM.yyyy"));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведВидПД, "КодВидТорг", Формат(СтрСвед.КодВидаПД, "ЧЦ=2; ЧВН="));
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "ОКТМО", СтрСвед.ОКТМО);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "КодВидОб", Формат(СтрСвед.КодВидаТоргОбъекта, "ЧЦ=2; ЧВН="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "НаимТоргОб", СтрСвед.НаимТоргОб);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "ОснПользОб", СтрСвед.ОснИсп);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "НомерРазр", СтрСвед.НомерРазр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "КадастрНомЗд", СтрСвед.НомЗдание);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "КадастНомПом", СтрСвед.НомПомещ);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "КадастНомЗУ", СтрСвед.НомУч);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "ПлощОбТорг", СтрСвед.ПлощТоргЗала);
		Если КП = "1" Тогда
			Нумератор = Нумератор + 1;
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведОбТорг, "НомОбъект", Формат(Нумератор, "ЧЦ=3; ЧВН="));
			РегламентированнаяОтчетность.УдалитьУзел(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведОбТорг, "ИдОбъект"));
		ИначеЕсли КП = "2" Или КП = "3" Тогда
			Если СтрСвед.ИспользоватьФайлАкт Тогда
				Узел_ИдОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведОбТорг, "ИдОбъект");
				Узел_СведАкт = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ИдОбъект, "СведАкт");
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведАкт, "НомАкт", СтрСвед.НомерАкт);
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведАкт, "ДатаАкт", Формат(СтрСвед.ДатаАкт, "ДФ=dd.MM.yyyy"));
				РегламентированнаяОтчетность.УдалитьУзел(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ИдОбъект, "СведУвед"));
			Иначе
				Узел_ИдОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведОбТорг, "ИдОбъект");
				Узел_СведУвед = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ИдОбъект, "СведУвед");
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведУвед, "НомОбъектУв", Формат(СтрСвед.НомОбъектУв, "ЧЦ=3; ЧВН="));
				Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведУвед, "ИдФайлУв", СтрСвед.ИдФайлУв);
				РегламентированнаяОтчетность.УдалитьУзел(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ИдОбъект, "СведАкт"));
			КонецЕсли;
		Иначе
			РегламентированнаяОтчетность.УдалитьУзел(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведОбТорг, "ИдОбъект"));
		КонецЕсли;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Индекс", СтрСвед.ИНДЕКС);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "КодРегион", СтрСвед.КОД_РЕГИОНА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Район", СтрСвед.РАЙОН);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Город", СтрСвед.ГОРОД);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "НаселПункт", СтрСвед.НАСЕЛЕННЫЙ_ПУНКТ);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Улица", СтрСвед.УЛИЦА);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Дом", СтрСвед.ДОМ);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Корпус", СтрСвед.КОРПУС);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_АдрОбТорг, "Кварт", СтрСвед.КВАРТИРА);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "СумЛьгот", СтрСвед.СуммаЛьготы);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "КодЛьгот", СтрСвед.КодЛьготы);
		
		Если ЗначениеЗаполнено(СтрСвед.СтавкаСбораРуб) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "ИсчислКв", СтрСвед.СтавкаСбораРуб);
			Итог = СтрСвед.СтавкаСбораРуб - СтрСвед.СуммаЛьготы;
			Если Итог < 0 Тогда 
				Итог = 0;
			КонецЕсли;
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "СумСборКв", Итог);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "СтавкаОбТорг", СтрСвед.СтавкаСбораРуб);
		ИначеЕсли ЗначениеЗаполнено(СтрСвед.СтавкаСбораКвм) Тогда
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "ИсчислКв", Окр(СтрСвед.СтавкаСбораКвм*СтрСвед.ПлощТоргЗала, 0, РежимОкругления.Окр15как20));
			Итог = Окр(СтрСвед.СтавкаСбораКвм*СтрСвед.ПлощТоргЗала, 0, РежимОкругления.Окр15как20) - СтрСвед.СуммаЛьготы;
			Если Итог < 0 Тогда 
				Итог = 0;
			КонецЕсли;
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "СумСборКв", Итог);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РасчСумСбор, "СтавкаКвМ", СтрСвед.СтавкаСбораКвм);
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_ОбТоргСбор);
КонецПроцедуры

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2020_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2020_1(Объект);
	КонецЕсли;
КонецФункции

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП, ВыводитьМакет = Истина, МакетПФ = Неопределено)
	Попытка
		Если МакетПФ = Неопределено Тогда 
			МакетПФ = Отчеты.РегламентированноеУведомлениеТС1.ПолучитьМакет(ИмяМакета);
		КонецЕсли;
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", МакетПФ.Области, "-");
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	Если ВыводитьМакет Тогда 
		ПечатнаяФорма.Вывести(МакетПФ);
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2020_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 0;
	НапечататьСтруктуру(СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, "Печать_Форма2020_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантФамилия), "ПодпФ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантИмя), "ПодпИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Объект.ПодписантОтчество), "ПодпО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	НомСтр = 2;
	НапечататьЛистыДоп("ОбТоргСбор", 2, НомСтр, Листы, ИННКПП, СтруктураПараметров, Объект);
	Возврат Листы;
КонецФункции

Процедура НапечататьЛистыДоп(ИмяМакета, КоличествоСтрок, НомСтр, Листы, ИННКПП, СтруктураПараметров, Объект)
	Попытка
		Свед01 = Отчеты.РегламентированноеУведомлениеТС1.ПолучитьМакет("Печать_Форма2020_1_Свед001");
		Свед02 = Отчеты.РегламентированноеУведомлениеТС1.ПолучитьМакет("Печать_Форма2020_1_Свед002");
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	Для Каждого Элт0 Из СтруктураПараметров.ДанныеМногостраничныхРазделов[ИмяМакета] Цикл
		Свед0 = Элт0.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Свед0) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КЗ Из Свед0 Цикл
			Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, Свед01.Области, "-");
			ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, Свед01.Области, "-");
			ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(КЗ.Значение, КЗ.Ключ, Свед01.Области);
			ИначеЕсли КЗ.Значение = Неопределено Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, Свед01.Области, "-");
			КонецЕсли;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", Свед01.Области);
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", Свед01.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", Свед01.Области, "-");
		ПечатнаяФорма.Вывести(Свед01);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;

		Для Каждого КЗ Из Свед0 Цикл
			Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, Свед02.Области, "-");
			ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, Свед02.Области, "-");
			ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(КЗ.Значение, КЗ.Ключ, Свед02.Области);
			ИначеЕсли КЗ.Значение = Неопределено Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, Свед02.Области, "-");
			КонецЕсли;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", Свед02.Области);
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", Свед02.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", Свед02.Области, "-");
		ПечатнаяФорма.Вывести(Свед02);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Задать настройки формы отчета.
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения	 - Форма отчета
//  КлючВарианта - Строка						 - Ключ загружаемого варианта
//  Настройки	 - Структура					 - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

// Процедура - Обработчик заполнения настроек отчета и варианта
//
// Параметры:
//  НастройкиОтчета		 - Структура - Настройки отчета, подробнее см. процедуру ОтчетыУНФ.ИнициализироватьНастройкиОтчета 
//  НастройкиВариантов	 - Структура - Настройки варианта отчета, подробнее см. процедуру ОтчетыУНФ.ИнициализироватьНастройкиВарианта
//
Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	Если ТипЗнч(НастройкиВариантов.Получить("Основной")) = Тип("Структура") Тогда
		УстановитьТегиВариантов(НастройкиВариантов);
		ДобавитьОписанияСвязанныхПолей(НастройкиВариантов);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ОтчетыУНФ.ФормаОтчетаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	ОтчетыУНФ.ОбъединитьСПользовательскимиНастройками(КомпоновщикНастроек); 
	
	ПараметрНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	Если ПараметрНачалоПериода = Неопределено ИЛИ НЕ ПараметрНачалоПериода.Использование Тогда
		ПараметрНачалоПериода = ПользовательскаяНастройкаПоПараметру("НачалоПериода");
	КонецЕсли; 
	Если ПараметрНачалоПериода = Неопределено ИЛИ НЕ ПараметрНачалоПериода.Использование Тогда
		ДатаНачала = '0001-01-01';
	Иначе
		ДатаНачала = ПараметрНачалоПериода.Значение;
	КонецЕсли; 
	ПараметрКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	Если ПараметрКонецПериода = Неопределено ИЛИ НЕ ПараметрКонецПериода.Использование Тогда
		ПараметрКонецПериода = ПользовательскаяНастройкаПоПараметру("КонецПериода");
	КонецЕсли; 
	Если ПараметрКонецПериода = Неопределено ИЛИ НЕ ПараметрКонецПериода.Использование Тогда
		ДатаОкончания = '0001-01-01';
	Иначе
		ДатаОкончания = ПараметрНачалоПериода.Значение;
	КонецЕсли; 
	
	Если ДатаНачала <> Дата(1,1,1)
		И ДатаОкончания <> Дата(1,1,1)
		И ДатаНачала > ДатаОкончания Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст	 = НСтр("ru = 'Дата начала периода не должна превышать дату окончания!'");
		Сообщение.Сообщить();
		
		СтандартнаяОбработка = Ложь;
		Возврат;
		
	КонецЕсли;
	
	ЗаголовокКД = КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок");
	ЗаголовокКД.Значение = СтрШаблон(НСтр("ru = 'Отчет о закрытии месяца за %1 г.'"), Формат(ДатаОкончания, НСтр("ru = 'ДФ=''ММММ гггг'''")));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	НастройкиВариантов["Основной"].Теги = НСТР("ru = 'Закрытие месяца'");
	
КонецПроцедуры

Процедура ДобавитьОписанияСвязанныхПолей(НастройкиВариантов)
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["Основной"].СвязанныеПоля, "", "Обработка.ЗакрытиеМесяца", , Истина);
	
КонецПроцедуры

Функция ПользовательскаяНастройкаПоПараметру(ИмяПараметра)
	
	Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	Результат = Неопределено;
	Для каждого Настройка Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если Настройка.Параметр <> Параметр Тогда
			Продолжить;
		КонецЕсли;
		Результат = Настройка;
		Прервать;
	КонецЦикла; 
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область Инициализация

ЭтоОтчетУНФ = Истина;

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
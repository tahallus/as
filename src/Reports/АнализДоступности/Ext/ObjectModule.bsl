#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Задать настройки формы отчета.
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения	 - Форма отчета
//  КлючВарианта - Строка						 - Ключ загружаемого варианта
//  Настройки	 - Структура					 - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

// Процедура - Обработчик заполнения настроек отчета и варианта
//
// Параметры:
//  НастройкиОтчета		 - Структура - Настройки отчета, подробнее см. процедуру ОтчетыУНФ.ИнициализироватьНастройкиОтчета 
//  НастройкиВариантов	 - Структура - Настройки варианта отчета, подробнее см. процедуру ОтчетыУНФ.ИнициализироватьНастройкиВарианта
//
Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиВариантов["Основной"].Теги = НСтр("ru = 'Продажи,Закупки,Запасы,Работы,Производство,Номенклатура'");
	ДобавитьОписанияСвязанныхПолей(НастройкиВариантов);
	
	Если ПолучитьФункциональнуюОпцию("РезервированиеЗапасов") Тогда
		ВключитьГруппировкуПоЗаказуПокупателяРекурсивно(КомпоновщикНастроек.Настройки.Структура);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик контекстного открытия отчета
//
// Параметры:
//  Объект		 - Произвольный	 - Источник контекстного открытия отчета
//  ПолеСвязи	 - Строка		 - Поле из настроек связи контекстного открытия
//  Отборы		 - Структура	 - Изменяемая структура отборов отчета
//  Отказ		 - Булево		 - Признак отмены открытия отчета
//
Процедура ПриКонтекстномОткрытии(Объект, ПолеСвязи, Отборы, Отказ) Экспорт
	
	Если ПолеСвязи <> "Номенклатура" Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.РасходнаяНакладная")
		Или ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Отборы.Вставить(ПолеСвязи, СписокНоменклатурыИзДокумента(Объект));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ОтчетыУНФ.ФормаОтчетаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// Обработчик события ПриЗагрузкеВариантаНаСервере
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения	 - Форма отчета
//  НовыеНастройкиКД - НастройкиКомпоновкиДанных	 - Загружаемые настройки КД
//
Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
	
	ОтчетыУНФ.ПреобразоватьСтарыеНастройки(Форма, НовыеНастройкиКД);	
	ОтчетыУНФ.ОбновитьВидимостьОтбораОрганизация(Форма.Отчет.КомпоновщикНастроек);	
	ОтчетыУНФ.ФормаОтчетаПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД);
	
КонецПроцедуры

// Обработчик события ПриЗагрузкеПользовательскихНастроекНаСервере
//
// Параметры:
//  Форма							 - ФормаКлиентскогоПриложения				 - Форма отчета
//  НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных - Загружаемые пользовательские настройки КД
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ОтчетыУНФ.ПеренестиПараметрыЗаголовкаВНастройки(КомпоновщикНастроек.Настройки, НовыеПользовательскиеНастройкиКД);	
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("РезервированиеЗапасов") Тогда
		ОграничитьИспользованиеПоля(СхемаКомпоновкиДанных, "Резерв");
		ОграничитьИспользованиеПоля(СхемаКомпоновкиДанных, "Свободно");
	КонецЕсли;
	ОтчетыУНФ.ОбъединитьСПользовательскимиНастройками(КомпоновщикНастроек);
	ОтчетыУНФ.ПриКомпоновкеРезультата(КомпоновщикНастроек, СхемаКомпоновкиДанных, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СписокНоменклатурыИзДокумента(Документ)
	
	Результат = Документ.Запасы.ВыгрузитьКолонку("Номенклатура");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЗаказПокупателя")
		И Документ.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		
		Для каждого СтрокаТаблицы Из Документ.Материалы Цикл
			Результат.Добавить(СтрокаТаблицы.Номенклатура);
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из Документ.МатериалыЗаказчика Цикл
			Результат.Добавить(СтрокаТаблицы.Номенклатура);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьОписанияСвязанныхПолей(НастройкиВариантов)
	
	СтруктураВарианта = НастройкиВариантов["СвободныеОстаткиКонтекст"];
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Номенклатура", "Справочник.Номенклатура",,, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Номенклатура", "Документ.РасходнаяНакладная",, Истина, Истина);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(СтруктураВарианта.СвязанныеПоля, "Номенклатура", "Документ.ЗаказПокупателя",, Истина, Истина);
	
КонецПроцедуры

Процедура ОграничитьИспользованиеПоля(СхемаКомпоновкиДанных, ИмяПоля)
	
	ПолеСКД = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Поля.Найти(ИмяПоля);
	Если ПолеСКД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеСКД.ОграничениеИспользования.Группировка = Истина;
	ПолеСКД.ОграничениеИспользования.Поле = Истина;
	ПолеСКД.ОграничениеИспользования.Порядок = Истина;
	ПолеСКД.ОграничениеИспользования.Условие = Истина;
	
КонецПроцедуры

Процедура ВключитьГруппировкуПоЗаказуПокупателяРекурсивно(СтруктураНастроекКД)
	
	Для Каждого ТекЭлемент Из СтруктураНастроекКД Цикл
		
		Если ТипЗнч(ТекЭлемент) = Тип("ТаблицаКомпоновкиДанных") Тогда
			Для Каждого ТекГруппировка Из ТекЭлемент.Строки Цикл
				ВключитьГруппировкуПоЗаказуПокупателя(ТекГруппировка);
			КонецЦикла;
		ИначеЕсли ТипЗнч(ТекЭлемент) = Тип("ГруппировкаТаблицыКомпоновкиДанных") Тогда
			ВключитьГруппировкуПоЗаказуПокупателя(ТекЭлемент);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВключитьГруппировкуПоЗаказуПокупателя(Знач ТекГруппировка)
	
	Для Каждого ТекПолеГруппировки Из ТекГруппировка.ПоляГруппировки.Элементы Цикл
		Если ТекПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("ЗаказПокупателя") Тогда
			ТекГруппировка.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ВключитьГруппировкуПоЗаказуПокупателяРекурсивно(ТекГруппировка.Структура)
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ЭтоОтчетУНФ = Истина;

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Вызывается при работе в модели сервиса для получения сведений о предопределенных вариантах отчета.
//
// Возвращаемое значение:
//  Массив из Структура:
//    * Имя           - Строка - имя варианта отчета; например, "Основной";
//    * Представление - Строка - имя варианта отчета; например, НСтр("ru = 'Динамика изменений файлов'").
//
Функция ВариантыНастроек() Экспорт 
	
	Результат = Новый Массив;
	Результат.Добавить(Новый Структура("Имя, Представление", "ВоронкаПродажОбщая", 
		НСтр("ru = 'Воронка продаж'")));
	Результат.Добавить(Новый Структура("Имя, Представление", "ВоронкаПродажПоЛидам", 
		НСтр("ru = 'Воронка продаж по лидам'")));
	Результат.Добавить(Новый Структура("Имя, Представление", "ВоронкаПродажПоПокупателям", 
		НСтр("ru = 'Воронка продаж по покупателям'")));
	Результат.Добавить(Новый Структура("Имя, Представление", "ВоронкаПродаж", 
		НСтр("ru = 'Воронка продаж по заказам'")));
	Возврат Результат;
	
КонецФункции

// Параметры:
//   Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки.
//   НастройкиОтчета - см. ВариантыОтчетов.ОписаниеОтчета.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Метаданные.Отчеты.ВоронкаПродаж, Истина);
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоронкаПродаж, "ВоронкаПродажОбщая");
	Вариант.Описание = НСтр("ru = 'Наглядно отображает распределение лидов, покупателей, заказов по стадиям процесса продаж.'");
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.Продажи.Подсистемы.Продажи, "Важный");
	Вариант.Размещение.Вставить(Метаданные.Подсистемы.CRM.Подсистемы.CRMПодраздел, "Важный");
		
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоронкаПродаж, "ВоронкаПродажПоЛидам");
	Вариант.Описание = НСтр("ru = 'Наглядно отображает распределение лидов по стадиям процесса продаж.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоронкаПродаж, "ВоронкаПродажПоПокупателям");
	Вариант.Описание = НСтр("ru = 'Наглядно отображает распределение покупателей по стадиям процесса продаж.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ВоронкаПродаж, "ВоронкаПродаж");
	Вариант.Описание = НСтр("ru = 'Наглядно отображает распределение заказов по стадиям процесса продаж.'");
	Вариант.ВидимостьПоУмолчанию = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#Область ВременныеТаблицыВидовВоронки

Функция ВременныеТаблицыВоронкиПродажПоЛидам(НастройкиКД) Экспорт 
	
	Результат = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИсторияСостоянийЗаказов.Заказ КАК Заказ,
	|	ИсторияСостоянийЗаказов.Период КАК ПоследнийПериод,
	|	ИсторияСостоянийЗаказов.Заказ.ВариантЗавершения КАК ВариантЗавершения,
	|	ИсторияСостоянийЗаказов.Состояние КАК Состояние,
	|	ИсторияСостоянийЗаказов.Заказ.ВидЗаказа КАК ВидЗаказа,
	|	ИсторияСостоянийЗаказов.Заказ.ВидОперации КАК ВидОперации,
	|	ИсторияСостоянийЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
	|	ИсторияСостоянийЗаказов.Заказ.ПричинаОтмены КАК ПричинаОтмены,
	|	ИсторияСостоянийЗаказов.Заказ.Курс КАК Курс,
	|	ИсторияСостоянийЗаказов.Заказ.Кратность КАК Кратность,
	|	ИсторияСостоянийЗаказов.Заказ.ВалютаДокумента КАК ВалютаДокумента
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрСведений.ИсторияСостоянийЗаказов.СрезПоследних КАК ИсторияСостоянийЗаказов
	|ГДЕ
	|	НЕ ИсторияСостоянийЗаказов.Заказ.ВидЗаказа ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) КАК ПоследнийПериод,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютПериод
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) >= КурсыВалют.Период)
	|ГДЕ
	|	КурсыВалют.Валюта В (&ВалютаУчета, &ВалютаНациональная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.ПоследнийПериод,
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаКурсыВалютПериод.ПоследнийПериод КАК ПоследнийПериод,
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютУчета
	|ИЗ
	|	ВременнаяТаблицаКурсыВалютПериод КАК ВременнаяТаблицаКурсыВалютПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта = КурсыВалют.Период
	|ГДЕ
	|	ВременнаяТаблицаКурсыВалютПериод.Валюта = &ВалютаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаКурсыВалютПериод.ПоследнийПериод КАК ПоследнийПериод,
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыНацВалют
	|ИЗ
	|	ВременнаяТаблицаКурсыВалютПериод КАК ВременнаяТаблицаКурсыВалютПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта = КурсыВалют.Период
	|ГДЕ
	|	ВременнаяТаблицаКурсыВалютПериод.Валюта = &ВалютаНациональная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ПолеГруппировкиЛиды КАК ПолеГруппировки,
	|	ИсторияСостоянийЛидов.Лид КАК Лид,
	|	ИсторияСостоянийЛидов.Лид.СостояниеЛида КАК Состояние,
	|	ИсторияСостоянийЛидов.Лид.ИсточникПривлечения КАК ИсточникПривлечения,
	|	СвязиКонтрагентЛид.Контрагент КАК Покупатель,
	|	ВТ_Заказы.ПоследнийПериод КАК ПоследнийПериод,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Состояние КАК СостояниеЗаказа,
	|	ВТ_Заказы.ВариантЗавершения КАК ВариантЗавершения,
	|	ВТ_Заказы.ПричинаОтмены КАК ПричинаОтмены,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВТ_Заказы.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ВТ_Заказы.СуммаДокумента * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ВТ_Заказы.СуммаДокумента * ВТ_Заказы.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ВТ_Заказы.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
	|ПОМЕСТИТЬ ВТ_Лиды
	|ИЗ
	|	РегистрСведений.ИсторияСостоянийЛидов КАК ИсторияСостоянийЛидов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиКонтрагентЛид КАК СвязиКонтрагентЛид
	|		ПО (СвязиКонтрагентЛид.Лид = ИсторияСостоянийЛидов.Лид)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО (СвязиКонтрагентЛид.Контрагент = ВТ_Заказы.Заказ.Контрагент)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютУчета КАК КурсыУпрВалюты
	|		ПО (КурсыУпрВалюты.Валюта = &ВалютаУчета)
	|			И (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) = КурсыУпрВалюты.ПоследнийПериод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыНацВалют КАК КурсыРегВалюты
	|		ПО (КурсыРегВалюты.Валюта = &ВалютаНациональная)
	|			И (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) = КурсыРегВалюты.ПоследнийПериод)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериодаЛиды = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИсторияСостоянийЛидов.Период >= &НачалоПериодаЛиды
	|			ИНАЧЕ ИсторияСостоянийЛидов.Период МЕЖДУ &НачалоПериодаЛиды И &КонецПериодаЛиды
	|		КОНЕЦ
	|	И ИсторияСостоянийЛидов.Лид.ЭтоГруппа = ЛОЖЬ
	|	И &ФильтрыПоЛидам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Лиды.ПолеГруппировки КАК ПолеГруппировки,
	|	ВТ_Лиды.Покупатель КАК Покупатель,
	|	ВТ_Лиды.ИсточникПривлечения КАК ИсточникПривлечения,
	|	МАКСИМУМ(ПродажиОбороты.СуммаОборот) КАК Выручка,
	|	МАКСИМУМ(ПродажиОбороты.СуммаОборот - ПродажиОбороты.СебестоимостьОборот) КАК Прибыль,
	|	КОЛИЧЕСТВО(ВТ_Лиды.Заказ) КАК КоличествоЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Лиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоАктивныхЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Лиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.ПустаяСсылка)
	|				ТОГДА ВТ_Лиды.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаАктивныхЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Лиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОтмененныхЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Лиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|				ТОГДА ВТ_Лиды.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОтмененныхЗаказов
	|ПОМЕСТИТЬ ВТ_ДанныеВоронкиПоПокупателям
	|ИЗ
	|	ВТ_Лиды КАК ВТ_Лиды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты КАК ПродажиОбороты
	|		ПО ВТ_Лиды.Покупатель = ПродажиОбороты.Контрагент
	|ГДЕ
	|	НЕ ВТ_Лиды.Покупатель ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Лиды.ПолеГруппировки,
	|	ВТ_Лиды.Покупатель,
	|	ВТ_Лиды.ИсточникПривлечения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_Лиды.ПолеГруппировки КАК ПолеГруппировки,
	|	ВТ_Лиды.Лид КАК Лид,
	|	ВТ_Лиды.Лид.ВариантЗавершения КАК ВариантЗавершения,
	|	ВТ_Лиды.ИсточникПривлечения КАК ИсточникПривлечения,
	|	СостоянияЛидов.РеквизитДопУпорядочивания КАК Порядок,
	|	СостоянияЛидов.Ссылка КАК Состояние,
	|	СостоянияЛидов1.Ссылка КАК СледующееСостояние
	|ПОМЕСТИТЬ ВТ_СостоянияЛиды
	|ИЗ
	|	ВТ_Лиды КАК ВТ_Лиды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СостоянияЛидов КАК СостоянияЛидов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СостоянияЛидов КАК СостоянияЛидов1
	|			ПО СостоянияЛидов.Ссылка = СостоянияЛидов1.Ссылка
	|				И (СостоянияЛидов1.РеквизитДопУпорядочивания = СостоянияЛидов.РеквизитДопУпорядочивания + 1)
	|		ПО (ВТ_Лиды.Состояние <> СостоянияЛидов.Ссылка
	|				ИЛИ ВТ_Лиды.Состояние = СостоянияЛидов.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИсторияСостоянийЛидовСрезПоследних.Лид КАК Лид,
	|	ИсторияСостоянийЛидовСрезПоследних.Состояние КАК Состояние,
	|	ИсторияСостоянийЛидовСрезПоследних.Период КАК ПоследнийПериод,
	|	СостоянияЛидов.РеквизитДопУпорядочивания КАК ПоследнийПорядок
	|ПОМЕСТИТЬ ВТ_СрезПоследнихЛиды
	|ИЗ
	|	ВТ_Лиды КАК ВТ_Лиды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийЛидов.СрезПоследних(
	|				,
	|				Лид В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТ_Лиды.Лид
	|					ИЗ
	|						ВТ_Лиды)) КАК ИсторияСостоянийЛидовСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СостоянияЛидов КАК СостоянияЛидов
	|			ПО ИсторияСостоянийЛидовСрезПоследних.Состояние = СостоянияЛидов.Ссылка
	|		ПО ВТ_Лиды.Лид = ИсторияСостоянийЛидовСрезПоследних.Лид
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИсторияСостоянийЛидовСрезПоследних.Лид КАК Лид,
	|	ИсторияСостоянийЛидовСрезПоследних.Состояние КАК Состояние,
	|	ИсторияСостоянийЛидовСрезПоследних.Период КАК ПоследнийПериод,
	|	СостоянияЛидов.РеквизитДопУпорядочивания КАК ПоследнийПорядок
	|ПОМЕСТИТЬ ВТ_СрезПоследнихДоОтменыЛиды
	|ИЗ
	|	ВТ_Лиды КАК ВТ_Лиды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийЛидов.СрезПоследних(
	|				,
	|				Лид.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантЗавершенияРаботыСЛидом.НекачественныйЛид)
	|					И Состояние <> ЗНАЧЕНИЕ(Справочник.СостоянияЛидов.Завершен)
	|					И Лид В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВТ_Лиды.Лид
	|						ИЗ
	|							ВТ_Лиды)) КАК ИсторияСостоянийЛидовСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СостоянияЛидов КАК СостоянияЛидов
	|			ПО ИсторияСостоянийЛидовСрезПоследних.Состояние = СостоянияЛидов.Ссылка
	|		ПО ВТ_Лиды.Лид = ИсторияСостоянийЛидовСрезПоследних.Лид
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_СостоянияЛиды.ПолеГруппировки КАК ПолеГруппировки,
	|	ВТ_СостоянияЛиды.Лид КАК Лид,
	|	ВТ_СостоянияЛиды.Порядок КАК Порядок,
	|	ВТ_СостоянияЛиды.Состояние КАК Состояние,
	|	ВТ_СостоянияЛиды.ИсточникПривлечения КАК ИсточникПривлечения,
	|	ИсторияСостоянийЛидов.Период КАК Старт,
	|	ИсторияСостоянийЛидов1.Период КАК Финиш,
	|	ВТ_СрезПоследнихЛиды.ПоследнийПериод КАК ДатаПоследнегоСостояния,
	|	ВТ_СрезПоследнихЛиды.ПоследнийПорядок КАК ПорядокПоследнегоСостояния,
	|	0 КАК ИтогСуммаДокумента,
	|	ВЫБОР
	|		КОГДА ИсторияСостоянийЛидов1.Период ЕСТЬ NULL
	|			ТОГДА РАЗНОСТЬДАТ(ИсторияСостоянийЛидов.Период, ВТ_СрезПоследнихЛиды.ПоследнийПериод, СЕКУНДА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ИсторияСостоянийЛидов.Период, ИсторияСостоянийЛидов1.Период, СЕКУНДА)
	|	КОНЕЦ КАК Длительность,
	|	ВЫБОР
	|		КОГДА ВТ_СостоянияЛиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантЗавершенияРаботыСЛидом.НекачественныйЛид)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_СрезПоследнихДоОтменыЛиды.ПоследнийПорядок >= ВТ_СостоянияЛиды.Порядок
	|						ТОГДА 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_СрезПоследнихЛиды.ПоследнийПорядок >= ВТ_СостоянияЛиды.Порядок
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК УчитыватьВВоронке,
	|	ВЫБОР
	|		КОГДА ВТ_СостоянияЛиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантЗавершенияРаботыСЛидом.ПереведенВПокупателя)
	|				И ВТ_СостоянияЛиды.Порядок = 1
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогУспешные,
	|	ВЫБОР
	|		КОГДА ВТ_СостоянияЛиды.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантЗавершенияРаботыСЛидом.НекачественныйЛид)
	|				И ВТ_СостоянияЛиды.Порядок = 1
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогОтмененные,
	|	ВЫБОР
	|		КОГДА ВТ_СостоянияЛиды.Порядок = 1
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогВсего,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА 0
	|	КОНЕЦ КАК ИтогСуммаУспешных,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА 0
	|	КОНЕЦ КАК ИтогСуммаОтмененных
	|ПОМЕСТИТЬ ВТ_ДанныеВоронкиПродажЛиды
	|ИЗ
	|	ВТ_СостоянияЛиды КАК ВТ_СостоянияЛиды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийЛидов КАК ИсторияСостоянийЛидов
	|		ПО ВТ_СостоянияЛиды.Лид = ИсторияСостоянийЛидов.Лид
	|			И ВТ_СостоянияЛиды.Состояние = ИсторияСостоянийЛидов.Состояние
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийЛидов КАК ИсторияСостоянийЛидов1
	|		ПО ВТ_СостоянияЛиды.Лид = ИсторияСостоянийЛидов1.Лид
	|			И ВТ_СостоянияЛиды.СледующееСостояние = ИсторияСостоянийЛидов1.Состояние
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрезПоследнихЛиды КАК ВТ_СрезПоследнихЛиды
	|		ПО ВТ_СостоянияЛиды.Лид = ВТ_СрезПоследнихЛиды.Лид
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрезПоследнихДоОтменыЛиды КАК ВТ_СрезПоследнихДоОтменыЛиды
	|		ПО ВТ_СостоянияЛиды.Лид = ВТ_СрезПоследнихДоОтменыЛиды.Лид";

	Запрос = Новый Запрос(ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, "ИсторияСостоянийЛидов", НастройкиКД, "Лид"));
	
	Запрос.УстановитьПараметр("ВалютаНациональная", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());

	Запрос.УстановитьПараметр("НачалоПериодаЛиды", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериодаЛиды", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
	
	МассивФильтров = МассивФильтровВоронки("Лид", НастройкиКД, Запрос);
	
	Если ЗначениеЗаполнено(МассивФильтров) Тогда
		СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
	Иначе
		СтрПараметрФильтры = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоЛидам", СтрПараметрФильтры);
	
	Запрос.МенеджерВременныхТаблиц = Результат;
	
	Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ВременныеТаблицыВоронкиПродажПоПокупателям(НастройкиКД) Экспорт 
	
	Результат = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИсторияСостоянийЗаказов.Заказ КАК Заказ,
	|	ИсторияСостоянийЗаказов.Период КАК ПоследнийПериод,
	|	ИсторияСостоянийЗаказов.Заказ.ВариантЗавершения КАК ВариантЗавершения,
	|	ИсторияСостоянийЗаказов.Состояние КАК Состояние,
	|	ИсторияСостоянийЗаказов.Заказ.ВидЗаказа КАК ВидЗаказа,
	|	ИсторияСостоянийЗаказов.Заказ.ВидОперации КАК ВидОперации,
	|	ИсторияСостоянийЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
	|	ИсторияСостоянийЗаказов.Заказ.ПричинаОтмены КАК ПричинаОтмены,
	|	ИсторияСостоянийЗаказов.Заказ.Курс КАК Курс,
	|	ИсторияСостоянийЗаказов.Заказ.Кратность КАК Кратность,
	|	ИсторияСостоянийЗаказов.Заказ.ВалютаДокумента КАК ВалютаДокумента
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрСведений.ИсторияСостоянийЗаказов.СрезПоследних КАК ИсторияСостоянийЗаказов
	|ГДЕ
	|	НЕ ИсторияСостоянийЗаказов.Заказ.ВидЗаказа ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) КАК ПоследнийПериод,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютПериод
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) >= КурсыВалют.Период)
	|ГДЕ
	|	КурсыВалют.Валюта В (&ВалютаУчета, &ВалютаНациональная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.ПоследнийПериод,
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаКурсыВалютПериод.ПоследнийПериод КАК ПоследнийПериод,
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютУчета
	|ИЗ
	|	ВременнаяТаблицаКурсыВалютПериод КАК ВременнаяТаблицаКурсыВалютПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта = КурсыВалют.Период
	|ГДЕ
	|	ВременнаяТаблицаКурсыВалютПериод.Валюта = &ВалютаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаКурсыВалютПериод.ПоследнийПериод КАК ПоследнийПериод,
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыНацВалют
	|ИЗ
	|	ВременнаяТаблицаКурсыВалютПериод КАК ВременнаяТаблицаКурсыВалютПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта = КурсыВалют.Период
	|ГДЕ
	|	ВременнаяТаблицаКурсыВалютПериод.Валюта = &ВалютаНациональная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ПолеГруппировкиПокупатели КАК ПолеГруппировки,
	|	Контрагенты.Ссылка КАК Покупатель,
	|	Контрагенты.ИсточникПривлеченияПокупателя КАК ИсточникПривлечения,
	|	ВТ_Заказы.ПоследнийПериод КАК ПоследнийПериод,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Состояние КАК СостояниеЗаказа,
	|	ВТ_Заказы.ВариантЗавершения КАК ВариантЗавершения,
	|	ВТ_Заказы.ПричинаОтмены КАК ПричинаОтмены,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВТ_Заказы.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ВТ_Заказы.СуммаДокумента * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ВТ_Заказы.СуммаДокумента * ВТ_Заказы.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ВТ_Заказы.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
	|ПОМЕСТИТЬ ВТ_Покупатели
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиКонтрагентЛид КАК СвязиКонтрагентЛид
	|		ПО (СвязиКонтрагентЛид.Контрагент = Контрагенты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО Контрагенты.Ссылка = ВТ_Заказы.Заказ.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютУчета КАК КурсыУпрВалюты
	|		ПО (КурсыУпрВалюты.Валюта = &ВалютаУчета)
	|			И (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) = КурсыУпрВалюты.ПоследнийПериод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыНацВалют КАК КурсыРегВалюты
	|		ПО (КурсыРегВалюты.Валюта = &ВалютаНациональная)
	|			И (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПоследнийПериод, ДЕНЬ) = КурсыРегВалюты.ПоследнийПериод)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериодаПокупатели = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА Контрагенты.ДатаСоздания >= &НачалоПериодаПокупатели
	|			ИНАЧЕ Контрагенты.ДатаСоздания МЕЖДУ &НачалоПериодаПокупатели И &КонецПериодаПокупатели
	|		КОНЕЦ
	|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
	|	И Контрагенты.Покупатель = ИСТИНА
	|	И &ФильтрыПоПокупателям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Покупатели.ПолеГруппировки КАК ПолеГруппировки,
	|	ВТ_Покупатели.Покупатель КАК Покупатель,
	|	ВТ_Покупатели.ИсточникПривлечения КАК ИсточникПривлечения,
	|	МАКСИМУМ(ПродажиОбороты.СуммаОборот) КАК Выручка,
	|	МАКСИМУМ(ПродажиОбороты.СуммаОборот - ПродажиОбороты.СебестоимостьОборот) КАК Прибыль,
	|	КОЛИЧЕСТВО(ВТ_Покупатели.Заказ) КАК КоличествоЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Покупатели.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоАктивныхЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Покупатели.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.ПустаяСсылка)
	|				ТОГДА ВТ_Покупатели.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаАктивныхЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Покупатели.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОтмененныхЗаказов,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Покупатели.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|				ТОГДА ВТ_Покупатели.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОтмененныхЗаказов
	|ПОМЕСТИТЬ ВТ_ДанныеВоронкиПоПокупателям
	|ИЗ
	|	ВТ_Покупатели КАК ВТ_Покупатели
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты КАК ПродажиОбороты
	|		ПО ВТ_Покупатели.Покупатель = ПродажиОбороты.Контрагент
	|ГДЕ
	|	НЕ ВТ_Покупатели.Покупатель ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Покупатели.ПолеГруппировки,
	|	ВТ_Покупатели.Покупатель,
	|	ВТ_Покупатели.ИсточникПривлечения";

	Запрос = Новый Запрос(ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, "Контрагенты", НастройкиКД, "Покупатель"));
	
	Запрос.УстановитьПараметр("ВалютаНациональная", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());

	Запрос.УстановитьПараметр("НачалоПериодаПокупатели", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериодаПокупатели", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
	
	МассивФильтров = МассивФильтровВоронки("Покупатель", НастройкиКД, Запрос);
	
	Если ЗначениеЗаполнено(МассивФильтров) Тогда
		СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
	Иначе
		СтрПараметрФильтры = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоПокупателям", СтрПараметрФильтры);
	
	Запрос.МенеджерВременныхТаблиц = Результат;
	
	Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ВременныеТаблицыВоронкиПродажПоЗаказам(НастройкиКД, ОбъектВоронки) Экспорт 
	
	Результат = Новый МенеджерВременныхТаблиц;
	ВариантВоронки = ВариантВоронки(НастройкиКД);
	
	Если ОбъектВоронки = "Лид" Тогда
		
		МассивСтрок = Новый Массив;
		
		ТаблицыПоЛидам = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ИсторияСостоянийЗаказов.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу)
		|				ИЛИ ИсторияСостоянийЗаказов.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку)
		|			ТОГДА ""ЗаказПокупателя""
		|		ИНАЧЕ ""ЗаказНаряд""
		|	КОНЕЦ КАК ГруппировкаВидОперации,
		|	&ПолеГруппировкиЗаказы КАК ПолеГруппировки,
		|	ИсторияСостоянийЗаказов.Период КАК ПериодСостояния,
		|	ИсторияСостоянийЗаказов.Заказ КАК Заказ,
		|	ИсторияСостоянийЗаказов.Заказ.ВидЗаказа КАК ВидЗаказа,
		|	ИсторияСостоянийЗаказов.Заказ.ВариантЗавершения КАК ВариантЗавершения,
		|	ИсторияСостоянийЗаказов.Заказ.ВидОперации КАК ВидОперации,
		|	ИсторияСостоянийЗаказов.Состояние КАК Состояние,
		|	ИсторияСостоянийЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
		|	ИсторияСостоянийЗаказов.Заказ.ВалютаДокумента КАК ВалютаДокумента,
		|	ИсторияСостоянийЗаказов.Заказ.Курс КАК Курс,
		|	ИсторияСостоянийЗаказов.Заказ.Кратность КАК Кратность,
		|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК Порядок
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийЗаказов КАК ИсторияСостоянийЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиКонтрагентЛид КАК СвязиКонтрагентЛид
		|		ПО (СвязиКонтрагентЛид.Контрагент = ИсторияСостоянийЗаказов.Заказ.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
		|		ПО ИсторияСостоянийЗаказов.Заказ.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
		|			И ИсторияСостоянийЗаказов.Состояние = ВидыЗаказовПокупателейПорядокСостояний.Состояние
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ИсторияСостоянийЗаказов.Заказ.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ИсторияСостоянийЗаказов.Состояние = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	НЕ ИсторияСостоянийЗаказов.Заказ.ВидЗаказа ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_Заказы.ПолеГруппировки КАК ПолеГруппировки,
		|	ВТ_Заказы.ГруппировкаВидОперации КАК ГруппировкаВидОперации,
		|	ИсторияСостоянийЛидов.Лид КАК Лид,
		|	ИсторияСостоянийЛидов.Лид.СостояниеЛида КАК Состояние,
		|	СвязиКонтрагентЛид.Контрагент КАК Покупатель,
		|	ВТ_Заказы.ПериодСостояния КАК ПериодСостояния,
		|	ВТ_Заказы.Заказ КАК Заказ,
		|	ВТ_Заказы.ВидЗаказа КАК ВидЗаказа,
		|	ВТ_Заказы.ВидОперации КАК ВидОперации,
		|	ВТ_Заказы.СуммаДокумента КАК СуммаДокумента,
		|	ВТ_Заказы.ВалютаДокумента КАК ВалютаДокумента,
		|	ВТ_Заказы.Курс КАК Курс,
		|	ВТ_Заказы.Кратность КАК Кратность,
		|	ВТ_Заказы.Порядок КАК Порядок
		|ПОМЕСТИТЬ ВТ_Лиды
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийЛидов КАК ИсторияСостоянийЛидов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиКонтрагентЛид КАК СвязиКонтрагентЛид
		|		ПО (СвязиКонтрагентЛид.Лид = ИсторияСостоянийЛидов.Лид)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|		ПО (СвязиКонтрагентЛид.Контрагент = ВТ_Заказы.Заказ.Контрагент)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &КонецПериодаЛиды = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИсторияСостоянийЛидов.Период >= &НачалоПериодаЛиды
		|			ИНАЧЕ ИсторияСостоянийЛидов.Период МЕЖДУ &НачалоПериодаЛиды И &КонецПериодаЛиды
		|		КОНЕЦ
		|	И ИсторияСостоянийЛидов.Лид.ЭтоГруппа = ЛОЖЬ
		|	И &ФильтрыПоЛидам";
		
		ТаблицыДанныхВоронкиПоЗаказам = СтрЗаменить(ТаблицыДанныхВоронкиПоЗаказам(),"ВТ_Заказы","ВТ_Лиды");
		
		МассивСтрок.Добавить(ТаблицыПоЛидам);
		МассивСтрок.Добавить(ТаблицыДанныхВоронкиПоЗаказам);
		
		ТекстЗапроса = СтрСоединить(МассивСтрок,";" + Символы.ПС);
		
		Если ВариантВоронки <> "ПоЗаказам" Тогда
			Запрос = Новый Запрос(ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, "СвязиКонтрагентЛид", НастройкиКД, "Заказ"));
		Иначе
			Запрос = Новый Запрос(ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, "ИсторияСостоянийЗаказов", НастройкиКД, "Заказ"));
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачалоПериодаЛиды", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериодаЛиды", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
		
		МассивФильтров = МассивФильтровВоронки("Лид", НастройкиКД, Запрос);
	
		Если ЗначениеЗаполнено(МассивФильтров) Тогда
			СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
		Иначе
			СтрПараметрФильтры = "ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоЛидам", СтрПараметрФильтры);

	КонецЕсли;
	
	Если ОбъектВоронки = "Покупатель" Тогда
		
		МассивСтрок = Новый Массив;
		
		ТаблицыПоПокупателям = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ИсторияСостоянийЗаказов.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу)
		|				ИЛИ ИсторияСостоянийЗаказов.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку)
		|			ТОГДА ""ЗаказПокупателя""
		|		ИНАЧЕ ""ЗаказНаряд""
		|	КОНЕЦ КАК ГруппировкаВидОперации,
		|	&ПолеГруппировкиЗаказы КАК ПолеГруппировки,
		|	ИсторияСостоянийЗаказов.Период КАК ПериодСостояния,
		|	ИсторияСостоянийЗаказов.Заказ КАК Заказ,
		|	ИсторияСостоянийЗаказов.Заказ.ВидЗаказа КАК ВидЗаказа,
		|	ИсторияСостоянийЗаказов.Заказ.ВариантЗавершения КАК ВариантЗавершения,
		|	ИсторияСостоянийЗаказов.Заказ.ВидОперации КАК ВидОперации,
		|	ИсторияСостоянийЗаказов.Состояние КАК Состояние,
		|	ИсторияСостоянийЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
		|	ИсторияСостоянийЗаказов.Заказ.ВалютаДокумента КАК ВалютаДокумента,
		|	ИсторияСостоянийЗаказов.Заказ.Курс КАК Курс,
		|	ИсторияСостоянийЗаказов.Заказ.Кратность КАК Кратность,
		|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК Порядок
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийЗаказов КАК ИсторияСостоянийЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
		|		ПО ИсторияСостоянийЗаказов.Заказ.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
		|			И ИсторияСостоянийЗаказов.Состояние = ВидыЗаказовПокупателейПорядокСостояний.Состояние
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ИсторияСостоянийЗаказов.Заказ.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ИсторияСостоянийЗаказов.Состояние = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	НЕ ИсторияСостоянийЗаказов.Заказ.ВидЗаказа ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_Заказы.ГруппировкаВидОперации КАК ГруппировкаВидОперации,
		|	ВТ_Заказы.ПолеГруппировки КАК ПолеГруппировки,
		|	Контрагенты.Ссылка КАК Покупатель,
		|	ВТ_Заказы.ПериодСостояния КАК ПериодСостояния,
		|	ВТ_Заказы.Заказ КАК Заказ,
		|	ВТ_Заказы.ВидЗаказа КАК ВидЗаказа,
		|	ВТ_Заказы.ВидОперации КАК ВидОперации,
		|	ВТ_Заказы.СуммаДокумента КАК СуммаДокумента,
		|	ВТ_Заказы.ВалютаДокумента КАК ВалютаДокумента,
		|	ВТ_Заказы.Курс КАК Курс,
		|	ВТ_Заказы.Кратность КАК Кратность,
		|	ВТ_Заказы.Порядок КАК Порядок
		|ПОМЕСТИТЬ ВТ_Покупатели
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиКонтрагентЛид КАК СвязиКонтрагентЛид
		|		ПО (СвязиКонтрагентЛид.Контрагент = Контрагенты.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|		ПО Контрагенты.Ссылка = ВТ_Заказы.Заказ.Контрагент
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &КонецПериодаПокупатели = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА Контрагенты.ДатаСоздания >= &НачалоПериодаПокупатели
		|			ИНАЧЕ Контрагенты.ДатаСоздания МЕЖДУ &НачалоПериодаПокупатели И &КонецПериодаПокупатели
		|		КОНЕЦ
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|	И Контрагенты.Покупатель = ИСТИНА
		|	И &ФильтрыПоПокупателям";
		
		ТаблицыДанныхВоронкиПоЗаказам = СтрЗаменить(ТаблицыДанныхВоронкиПоЗаказам(),"ВТ_Заказы","ВТ_Покупатели");
		
		МассивСтрок.Добавить(ТаблицыПоПокупателям);
		МассивСтрок.Добавить(ТаблицыДанныхВоронкиПоЗаказам);
		
		ТекстЗапроса = СтрСоединить(МассивСтрок,";" + Символы.ПС);
		
		Запрос = Новый Запрос(ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, "ИсторияСостоянийЗаказов", НастройкиКД, "Заказ"));
		
		Запрос.УстановитьПараметр("НачалоПериодаПокупатели", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериодаПокупатели", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
		
		МассивФильтров = МассивФильтровВоронки("Покупатель", НастройкиКД, Запрос);
	
		Если ЗначениеЗаполнено(МассивФильтров) Тогда
			СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
		Иначе
			СтрПараметрФильтры = "ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоПокупателям", СтрПараметрФильтры);
		
	КонецЕсли;
	
	Если ОбъектВоронки = "Заказ" ИЛИ ОбъектВоронки = "Общая" Тогда
		
		МассивСтрок = Новый Массив;
		
		ТаблицыПоЗаказам = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ИсторияСостоянийЗаказов.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу)
		|				ИЛИ ИсторияСостоянийЗаказов.Заказ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку)
		|			ТОГДА ""ЗаказПокупателя""
		|		ИНАЧЕ ""ЗаказНаряд""
		|	КОНЕЦ КАК ГруппировкаВидОперации,
		|	&ПолеГруппировкиЗаказы КАК ПолеГруппировки,
		|	ИсторияСостоянийЗаказов.Период КАК ПериодСостояния,
		|	ИсторияСостоянийЗаказов.Заказ КАК Заказ,
		|	ИсторияСостоянийЗаказов.Заказ.ВидЗаказа КАК ВидЗаказа,
		|	ИсторияСостоянийЗаказов.Заказ.ВариантЗавершения КАК ВариантЗавершения,
		|	ИсторияСостоянийЗаказов.Заказ.ИсточникПривлечения КАК ИсточникПривлечения,
		|	ИсторияСостоянийЗаказов.Заказ.ВидОперации КАК ВидОперации,
		|	ИсторияСостоянийЗаказов.Состояние КАК Состояние,
		|	ИсторияСостоянийЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
		|	ИсторияСостоянийЗаказов.Заказ.ВалютаДокумента КАК ВалютаДокумента,
		|	ИсторияСостоянийЗаказов.Заказ.Курс КАК Курс,
		|	ИсторияСостоянийЗаказов.Заказ.Кратность КАК Кратность,
		|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК Порядок
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийЗаказов КАК ИсторияСостоянийЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиКонтрагентЛид КАК СвязиКонтрагентЛид
		|		ПО (СвязиКонтрагентЛид.Контрагент = ИсторияСостоянийЗаказов.Заказ.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
		|		ПО ИсторияСостоянийЗаказов.Заказ.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
		|			И ИсторияСостоянийЗаказов.Состояние = ВидыЗаказовПокупателейПорядокСостояний.Состояние
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ИсторияСостоянийЗаказов.Заказ.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ИсторияСостоянийЗаказов.Состояние = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &КонецПериодаЗаказы = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИсторияСостоянийЗаказов.Период >= &НачалоПериодаЗаказы
		|			ИНАЧЕ ИсторияСостоянийЗаказов.Период МЕЖДУ &НачалоПериодаЗаказы И &КонецПериодаЗаказы
		|		КОНЕЦ
		|	И НЕ ИсторияСостоянийЗаказов.Заказ.ВидЗаказа ЕСТЬ NULL
		|	И &ФильтрыПоЗаказам";
		
		ТаблицыДанныхВоронкиПоЗаказам = ТаблицыДанныхВоронкиПоЗаказам();
		
		МассивСтрок.Добавить(ТаблицыПоЗаказам);
		МассивСтрок.Добавить(ТаблицыДанныхВоронкиПоЗаказам);
		
		ТекстЗапроса = СтрСоединить(МассивСтрок,";" + Символы.ПС);
		
		Запрос = Новый Запрос(ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, "ИсторияСостоянийЗаказов", НастройкиКД, "Заказ"));
	
		Запрос.УстановитьПараметр("НачалоПериодаЗаказы", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериодаЗаказы", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
		
		МассивФильтров = МассивФильтровВоронки("Заказ", НастройкиКД, Запрос);
	
		Если ЗначениеЗаполнено(МассивФильтров) Тогда
			СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
		Иначе
			СтрПараметрФильтры = "ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоЗаказам", СтрПараметрФильтры);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВалютаНациональная", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	
	Запрос.МенеджерВременныхТаблиц = Результат;
	
	Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ВременныеТаблицыОбщейВоронкиПродаж(НастройкиКД) Экспорт 
	
	Результат = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапросаПоЛидам = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ПолеГруппировкиЛиды КАК ПолеГруппировки,
	|	ИсторияСостоянийЛидов.Лид КАК Лид,
	|	ИсторияСостоянийЛидов.Лид.СостояниеЛида КАК Состояние,
	|	ИсторияСостоянийЛидов.Лид.ИсточникПривлечения КАК ИсточникПривлеченияЛида,
	|	ИсторияСостоянийЛидов.Лид.ВариантЗавершения КАК ВариантЗавершенияЛида
	|ПОМЕСТИТЬ ВТ_Лиды
	|ИЗ
	|	РегистрСведений.ИсторияСостоянийЛидов КАК ИсторияСостоянийЛидов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериодаЛиды = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИсторияСостоянийЛидов.Период >= &НачалоПериодаЛиды
	|			ИНАЧЕ ИсторияСостоянийЛидов.Период МЕЖДУ &НачалоПериодаЛиды И &КонецПериодаЛиды
	|		КОНЕЦ
	|	И ИсторияСостоянийЛидов.Лид.ЭтоГруппа = ЛОЖЬ
	|	И &ФильтрыПоЛидам";
	
	ТаблицаПоЛидам = ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапросаПоЛидам, "ИсторияСостоянийЛидов", НастройкиКД, "Лид");
	
	ТекстЗапросаПоПокупателям = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ПолеГруппировкиПокупатели КАК ПолеГруппировки,
	|	Контрагенты.Ссылка КАК Покупатель,
	|	Контрагенты.ИсточникПривлеченияПокупателя КАК ИсточникПривлеченияПокупателя
	|ПОМЕСТИТЬ ВТ_Покупатели
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериодаПокупатели = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА Контрагенты.ДатаСоздания >= &НачалоПериодаПокупатели
	|			ИНАЧЕ Контрагенты.ДатаСоздания МЕЖДУ &НачалоПериодаПокупатели И &КонецПериодаПокупатели
	|		КОНЕЦ
	|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
	|	И Контрагенты.Покупатель = ИСТИНА
	|	И &ФильтрыПоПокупателям";
	
	ТаблицаПоПокупателям = ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапросаПоПокупателям, "Контрагент", НастройкиКД, "Покупатель");
	
	ТекстЗапросаПоЗаказам = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ПолеГруппировкиЗаказы КАК ПолеГруппировки,
	|	ИсторияСостоянийЗаказов.Заказ КАК Заказ,
	|	ИсторияСостоянийЗаказов.Заказ.ИсточникПривлечения КАК ИсточникПривлеченияЗаказа,
	|	ИсторияСостоянийЗаказов.Заказ.ВариантЗавершения КАК ВариантЗавершения,
	|	ИсторияСостоянийЗаказов.Заказ.ВидЗаказа КАК ВидЗаказа,
	|	ИсторияСостоянийЗаказов.Заказ.ВидОперации КАК ВидОперации,
	|	ИсторияСостоянийЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрСведений.ИсторияСостоянийЗаказов КАК ИсторияСостоянийЗаказов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &КонецПериодаЗаказы = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИсторияСостоянийЗаказов.Период >= &НачалоПериодаЗаказы
	|			ИНАЧЕ ИсторияСостоянийЗаказов.Период МЕЖДУ &НачалоПериодаЗаказы И &КонецПериодаЗаказы
	|		КОНЕЦ
	|	И НЕ ИсторияСостоянийЗаказов.Заказ.ВидЗаказа ЕСТЬ NULL
	|	И &ФильтрыПоЗаказам";

	ТаблицаПоЗаказам = ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапросаПоЗаказам, "ИсторияСостоянийЗаказов", НастройкиКД, "Заказ");
	
	МассивСтрок = Новый Массив;
	
	МассивСтрок.Добавить(ТаблицаПоЛидам);
	МассивСтрок.Добавить(ТаблицаПоПокупателям);
	МассивСтрок.Добавить(ТаблицаПоЗаказам);
		
	ТекстЗапроса = СтрСоединить(МассивСтрок,";" + Символы.ПС);
		
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НачалоПериодаЛиды", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериодаЛиды", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
	
	Запрос.УстановитьПараметр("НачалоПериодаПокупатели", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериодаПокупатели", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
	
	Запрос.УстановитьПараметр("НачалоПериодаЗаказы", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериодаЗаказы", НастройкиКД.ПараметрыДанных.Элементы.Найти("СтПериод").Значение.ДатаОкончания);
	
	МассивФильтров = МассивФильтровВоронки("Лид", НастройкиКД, Запрос);
	
	Если ЗначениеЗаполнено(МассивФильтров) Тогда
		СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
	Иначе
		СтрПараметрФильтры = "ИСТИНА";
	КонецЕсли;
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоЛидам", СтрПараметрФильтры);
	
	МассивФильтров = МассивФильтровВоронки("Покупатель", НастройкиКД, Запрос);
	
	Если ЗначениеЗаполнено(МассивФильтров) Тогда
		СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
	Иначе
		СтрПараметрФильтры = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоПокупателям", СтрПараметрФильтры);
	
	МассивФильтров = МассивФильтровВоронки("Заказ", НастройкиКД, Запрос);
	
	Если ЗначениеЗаполнено(МассивФильтров) Тогда
		СтрПараметрФильтры = СтрСоединить(МассивФильтров, Символы.ПС + " И ");
	Иначе
		СтрПараметрФильтры = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрыПоЗаказам", СтрПараметрФильтры);
	Запрос.МенеджерВременныхТаблиц = Результат;
	Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

Функция ВариантВоронки(НастройкиКД) Экспорт
	
	Возврат НастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВариантВоронки")).Значение;
	
КонецФункции

Функция ВидВоронки(НастройкиКД) Экспорт
	
	ВидВоронки = НастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидВоронки"));
	
	Если ВидВоронки = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ВидВоронки.Значение) Тогда
		Возврат ВидВоронкиПоЗаказам();
	КонецЕсли;
	
	Возврат ВидВоронки.Значение;
	
КонецФункции

Функция ТекстЗапросаСУстановленнымПолемГруппировки(ТекстЗапроса, ИмяТаблицы, НастройкиКД, ОбъектВоронки) Экспорт
	
	Если ОбъектВоронки = "Заказ" Тогда
		Возврат СтрЗаменить(ТекстЗапроса, "&ПолеГруппировкиЗаказы", ПутьПоляГруппировкиПоЗаказам(ИмяТаблицы, НастройкиКД));
	КонецЕсли;
	
	Если ОбъектВоронки = "Лид" Тогда
		Возврат СтрЗаменить(ТекстЗапроса, "&ПолеГруппировкиЛиды", ПутьПоляГруппировкиПоЛидам(ИмяТаблицы, НастройкиКД));
	КонецЕсли;
	
	Если ОбъектВоронки = "Покупатель" Тогда
		Возврат СтрЗаменить(ТекстЗапроса, "&ПолеГруппировкиПокупатели", ПутьПоляГруппировкиПоПокупателям(НастройкиКД));
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МассивФильтровВоронки(ОбъектВоронки, НастройкиКД, Запрос)
	
	МассивФильтров = Новый Массив;
	
	ДоступныеПоляОтбора = ДоступныеПоляОтбора(НастройкиКД);
	
	Для Каждого ТекЭлементОтбора Из НастройкиКД.Отбор.Элементы Цикл
		
		Если Не ТекЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ТекЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			
			Для Каждого ТекЭлементГруппыОтбора Из ТекЭлементОтбора.Элементы Цикл
				
				ИмяПараметра = "Значение" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
				ТекстФильтра = СтрокаОтбора(ОбъектВоронки, ТекЭлементГруппыОтбора, ИмяПараметра);
				Если ПустаяСтрока(ТекстФильтра) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ТекЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе Тогда
					МассивФильтров.Добавить(СтрШаблон("НЕ (%1)", ТекстФильтра));
				Иначе
					МассивФильтров.Добавить(ТекстФильтра);
				КонецЕсли;
				
				Запрос.УстановитьПараметр(ИмяПараметра, ?(ТипЗнч(ТекЭлементГруппыОтбора.ПравоеЗначение) = Тип("СписокЗначений"), ТекЭлементГруппыОтбора.ПравоеЗначение.ВыгрузитьЗначения(), ТекЭлементГруппыОтбора.ПравоеЗначение));
				
			КонецЦикла;
			
		ИначеЕсли ЭтоОтборПоДопРеквизиту(ТекЭлементОтбора) Тогда
			
			ИмяПараметраСвойство = "Свойство" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
			ИмяПараметраЗначение = "Значение" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
			
			ТекстФильтра = СтрокаОтбораПоДопРеквизиту(ТекЭлементОтбора, ИмяПараметраСвойство, ИмяПараметраЗначение, ДоступныеПоляОтбора, ОбъектВоронки);
			Если ПустаяСтрока(ТекстФильтра) Тогда
				Продолжить;
			КонецЕсли;
			
			МассивФильтров.Добавить(ТекстФильтра);
			Запрос.УстановитьПараметр(ИмяПараметраСвойство, ЗначениеПараметраСвойство(ТекЭлементОтбора));
			Запрос.УстановитьПараметр(ИмяПараметраЗначение, ?(ТипЗнч(ТекЭлементОтбора.ПравоеЗначение) = Тип("СписокЗначений"), ТекЭлементОтбора.ПравоеЗначение.ВыгрузитьЗначения(), ТекЭлементОтбора.ПравоеЗначение));
			
		Иначе
			
			ИмяПараметра = "Значение" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
			
			ТекстФильтра = СтрокаОтбора(ОбъектВоронки, ТекЭлементОтбора, ИмяПараметра);
			Если ПустаяСтрока(ТекстФильтра) Тогда
				Продолжить;
			КонецЕсли;
			
			МассивФильтров.Добавить(ТекстФильтра);
			Запрос.УстановитьПараметр(ИмяПараметра, ?(ТипЗнч(ТекЭлементОтбора.ПравоеЗначение) = Тип("СписокЗначений"), ТекЭлементОтбора.ПравоеЗначение.ВыгрузитьЗначения(), ТекЭлементОтбора.ПравоеЗначение));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивФильтров;
	
КонецФункции

Функция СтрокаОтбораПоЗаказам(ЭлементОтбора, ИмяПараметра)
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
		
	Если КомпонентыПути.Найти("Контрагент") <> Неопределено
		И КомпонентыПути.Найти("Тег") <> Неопределено Тогда
		Возврат СтрокаОтбораПоТегуКонтрагента(ЭлементОтбора, ИмяПараметра, "Заказы");
	КонецЕсли;
	
	Если КомпонентыПути.Найти("Лид") <> Неопределено Тогда
		Результат = СтрШаблон("СвязиКонтрагентЛид.%1", ЭлементОтбора.ЛевоеЗначение);
	ИначеЕсли КомпонентыПути.Найти("Заказ") = Неопределено  Тогда
		Результат = СтрШаблон("ИсторияСостоянийЗаказов.Заказ.%1", ЭлементОтбора.ЛевоеЗначение);
	Иначе
		Результат  = СтрШаблон("ИсторияСостоянийЗаказов.%1", ЭлементОтбора.ЛевоеЗначение);
	КонецЕсли;
	
	Результат = СтрокаОтбораСУстановленнымВидомСравнения(Результат, ЭлементОтбора, ИмяПараметра);
	
	Возврат Результат;
	
КонецФункции

Функция СтрокаОтбораПоПокупателям(ЭлементОтбора, ИмяПараметра)
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
		
	Если КомпонентыПути.Найти("Контрагент") <> Неопределено
		И КомпонентыПути.Найти("Тег") <> Неопределено Тогда
		Возврат СтрокаОтбораПоТегуКонтрагента(ЭлементОтбора, ИмяПараметра, "Покупатели");
	КонецЕсли;
	
	Если КомпонентыПути.Найти("Лид") <> Неопределено Тогда
		
		Результат  = СтрШаблон("СвязиКонтрагентЛид.%1", ЭлементОтбора.ЛевоеЗначение);
				
	ИначеЕсли КомпонентыПути.Найти("Заказ") <> Неопределено Тогда
		
		Результат = СтрШаблон("ВТ_Заказы.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли (КомпонентыПути.Найти("СтруктурнаяЕдиницаПродажи") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидОперации") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидЗаказа") <> Неопределено
		ИЛИ КомпонентыПути.Найти("СуммаДокумента") <> Неопределено
		ИЛИ КомпонентыПути.Найти("Организация") <> Неопределено) Тогда
		
		Результат = СтрШаблон("ВТ_Заказы.Заказ.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли КомпонентыПути.Найти("ИсточникПривлечения") <> Неопределено Тогда
		
		Результат = "Контрагенты.ИсточникПривлеченияПокупателя";
		
	ИначеЕсли КомпонентыПути.Найти("Контрагент") <> Неопределено И КомпонентыПути.Количество() = 1 Тогда
		
		Результат = "Контрагенты.Ссылка";
		
	Иначе
		
		Результат = СтрШаблон("Контрагенты.%1", ЭлементОтбора.ЛевоеЗначение);
		
	КонецЕсли;
	
	Результат = СтрокаОтбораСУстановленнымВидомСравнения(Результат, ЭлементОтбора, ИмяПараметра);
	
	Возврат Результат;
	
КонецФункции

Функция СтрокаОтбораПоЛидам(ЭлементОтбора, ИмяПараметра)
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
	
	Если КомпонентыПути.Найти("Контрагент") <> Неопределено
		И КомпонентыПути.Найти("Тег") <> Неопределено Тогда
		Возврат СтрокаОтбораПоТегуКонтрагента(ЭлементОтбора, ИмяПараметра, "Лиды");
	КонецЕсли;
	
	Если КомпонентыПути.Найти("Лид") <> Неопределено Тогда
		
		Результат  = СтрШаблон("ИсторияСостоянийЛидов.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли КомпонентыПути.Найти("Ответственный") <> Неопределено И КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		
		Результат = СтрШаблон("ИсторияСостоянийЛидов.Лид.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли КомпонентыПути.Найти("ИсточникПривлечения") <> Неопределено И КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		
		Результат = СтрШаблон("ИсторияСостоянийЛидов.Лид.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли КомпонентыПути.Найти("Контрагент") <> Неопределено И КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		
		Результат = СтрШаблон("СвязиКонтрагентЛид.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли КомпонентыПути.Найти("Заказ") <> Неопределено Тогда
		
		Результат = СтрШаблон("ВТ_Заказы.%1", ЭлементОтбора.ЛевоеЗначение);
		
	ИначеЕсли (КомпонентыПути.Найти("СтруктурнаяЕдиницаПродажи") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидОперации") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидЗаказа") <> Неопределено
		ИЛИ КомпонентыПути.Найти("СуммаДокумента") <> Неопределено
		ИЛИ КомпонентыПути.Найти("Организация") <> Неопределено) Тогда
		
		Результат = СтрШаблон("ВТ_Заказы.Заказ.%1", ЭлементОтбора.ЛевоеЗначение);
		
	КонецЕсли;
		
	Результат = СтрокаОтбораСУстановленнымВидомСравнения(Результат, ЭлементОтбора, ИмяПараметра);
	
	Возврат Результат;
	
КонецФункции

Функция КомпонентыПутиЛид(ЭлементОтбора)
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
		
	Если КомпонентыПути.Найти("Лид") <> Неопределено Тогда
		Возврат СтрШаблон("ИсторияСостоянийЛидов.%1", КомпонентыПути[0]);
	КонецЕсли;
		
	Если КомпонентыПути.Найти("Ответственный") <> Неопределено И КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		Возврат СтрШаблон("ИсторияСостоянийЛидов.Лид.%1", КомпонентыПути[0]);
	КонецЕсли;
		
	Если КомпонентыПути.Найти("Контрагент") <> Неопределено И КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		Возврат СтрШаблон("СвязиКонтрагентЛид.%1", КомпонентыПути[0]);
	КонецЕсли;
	
	Если КомпонентыПути.Найти("ИсточникПривлечения") <> Неопределено И КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		Возврат СтрШаблон("ИсторияСостоянийЛидов.Лид.%1", КомпонентыПути[0]);
	КонецЕсли;
		
	Если КомпонентыПути.Найти("Заказ") <> Неопределено Тогда
		Возврат СтрШаблон("ВТ_Заказы.%1", КомпонентыПути[0]);
	КонецЕсли;
	
	Если (КомпонентыПути.Найти("СтруктурнаяЕдиницаПродажи") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидОперации") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидЗаказа") <> Неопределено
		ИЛИ КомпонентыПути.Найти("СуммаДокумента") <> Неопределено) Тогда
		
		Возврат СтрШаблон("ВТ_Заказы.Заказ.%1", КомпонентыПути[0]);
	КонецЕсли;
	
КонецФункции

Функция КомпонентыПутиЗаказ(ЭлементОтбора)
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
	
	Если КомпонентыПути.Найти("Лид") <> Неопределено Тогда
		Возврат СтрШаблон("СвязиКонтрагентЛид.%1", КомпонентыПути[0]);
	КонецЕсли;
	
	Если КомпонентыПути.Найти("Заказ") = Неопределено Тогда
		Возврат СтрШаблон("ИсторияСостоянийЗаказов.Заказ.%1", КомпонентыПути[0]);
	Иначе
		Возврат СтрШаблон("ИсторияСостоянийЗаказов.%1", КомпонентыПути[0]);
	КонецЕсли;
	
КонецФункции

Функция КомпонентыПутиПокупатель(ЭлементОтбора)
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
		
	Если КомпонентыПути.Найти("Лид") <> Неопределено Тогда
		Возврат СтрШаблон("СвязиКонтрагентЛид.%1", КомпонентыПути[0]);
	КонецЕсли;
	
	Если КомпонентыПути.Найти("Заказ") <> Неопределено Тогда
		Возврат СтрШаблон("ВТ_Заказы.%1",  КомпонентыПути[0]);
	КонецЕсли;
	
	Если (КомпонентыПути.Найти("СтруктурнаяЕдиницаПродажи") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидОперации") <> Неопределено
		ИЛИ КомпонентыПути.Найти("ВидЗаказа") <> Неопределено
		ИЛИ КомпонентыПути.Найти("СуммаДокумента") <> Неопределено) Тогда
		
		Возврат СтрШаблон("ВТ_Заказы.Заказ.%1",  КомпонентыПути[0]);
	КонецЕсли;
		
	Если КомпонентыПути.Найти("Контрагент") <> Неопределено И КомпонентыПути.Количество() = 1 Тогда
		Возврат "Контрагенты.Ссылка";
	Иначе
		Возврат СтрШаблон("Контрагенты.%1",  КомпонентыПути[0]);
	КонецЕсли;
			
КонецФункции

Функция СтрокаОтбора(ОбъектВоронки, ЭлементОтбора, ИмяПараметра)
	
	Если ОбъектВоронки = "Лид" Тогда
		Возврат СтрокаОтбораПоЛидам(ЭлементОтбора, ИмяПараметра);
	КонецЕсли;
	
	Если ОбъектВоронки = "Покупатель" Тогда
		Возврат СтрокаОтбораПоПокупателям(ЭлементОтбора, ИмяПараметра);
	КонецЕсли;
	
	Если ОбъектВоронки = "Заказ" Тогда
		Возврат СтрокаОтбораПоЗаказам(ЭлементОтбора, ИмяПараметра);
	КонецЕсли;
	
КонецФункции

Функция ЭтоОтборПоДопРеквизиту(ЭлементОтбора)
	
	Возврат СтрНайти(ЭлементОтбора.ЛевоеЗначение, ".[") > 0
	И СтрЗаканчиваетсяНа(ЭлементОтбора.ЛевоеЗначение, "]");
	
КонецФункции

Функция СтрокаОтбораПоДопРеквизиту(ЭлементОтбора, ИмяПараметраСвойство, ИмяПараметраЗначение, ДоступныеПоляОтбора, ТипФильтра)
	
	Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		ЧастицаНе = "НЕ ";
	КонецЕсли;
	
	ЗапросОбъектовПоЗначениюДопРеквизитов = ЗапросОбъектовПоЗначениюДопРеквизитов(ЭлементОтбора, ИмяПараметраСвойство, ИмяПараметраЗначение, ДоступныеПоляОтбора);
	Если Не ЗначениеЗаполнено(ЗапросОбъектовПоЗначениюДопРеквизитов) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТипФильтра = "Заказ" Тогда
		Возврат СтрШаблон("%1
			|%2В (%3)",
			КомпонентыПутиЗаказ(ЭлементОтбора),
			ЧастицаНе,
			ЗапросОбъектовПоЗначениюДопРеквизитов);
	КонецЕсли;
		
	Если ТипФильтра = "Лид" Тогда
		Возврат СтрШаблон("%1
		|%2В (%3)",
		КомпонентыПутиЛид(ЭлементОтбора),
		ЧастицаНе,
		ЗапросОбъектовПоЗначениюДопРеквизитов);
	КонецЕсли;
	
	Если ТипФильтра = "Покупатель" Тогда
		
		Возврат СтрШаблон("%1
		|%2В (%3)",
		КомпонентыПутиПокупатель(ЭлементОтбора),
		ЧастицаНе,
		ЗапросОбъектовПоЗначениюДопРеквизитов);
		
	КонецЕсли;
	
КонецФункции

Функция ДоступныеПоляОтбора(НастройкиКД)
	
	Если ЗначениеЗаполнено(НастройкиКД.ДоступныеПоляОтбора.Элементы) Тогда
		Возврат НастройкиКД.ДоступныеПоляОтбора;
	КонецЕсли;
	
	Если Не НастройкиКД.ДополнительныеСвойства.Свойство("АдресСхемы") Тогда
		Возврат НастройкиКД.ДоступныеПоляОтбора;
	КонецЕсли;
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(НастройкиКД.ДополнительныеСвойства.АдресСхемы));
	Возврат КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора;
	
КонецФункции

Функция ЗначениеПараметраСвойство(ЭлементОтбора)
	
	Для Каждого ТекКомпонент Из СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".") Цикл
		
		Если СтрНачинаетсяС(ТекКомпонент, "[")
			И СтрЗаканчиваетсяНа(ТекКомпонент, "]") Тогда
			НаименованиеСвойства = Сред(ТекКомпонент, 2, СтрДлина(ТекКомпонент) - 2);
			Возврат ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(НаименованиеСвойства, Истина);
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ЗапросОбъектовПоЗначениюДопРеквизитов(ЭлементОтбора, ИмяПараметраСвойство, ИмяПараметраЗначение, ДоступныеПоляОтбора)
	
	Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно 
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
		
		КомпонентСравнения = СтрШаблон("= &%1", ИмяПараметраЗначение);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке 
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
		
		КомпонентСравнения = СтрШаблон("В (&%1)", ИмяПараметраЗначение);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		
		КомпонентСравнения = СтрШаблон("В ИЕРАРХИИ (&%1)", ИмяПараметраЗначение);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КомпонентСравнения) Тогда
		Возврат "";
	КонецЕсли;
	
	КомпонентыПути = СтрРазделить(ЭлементОтбора.ЛевоеЗначение, ".");
	
	ПолеКД = ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(КомпонентыПути[0]));
	Если ПолеКД = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	МассивПодзапросов = Новый Массив;
	
	Для Каждого Тип Из ПолеКД.ТипЗначения.Типы() Цикл
		
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
		
		МассивПодзапросов.Добавить(
		СтрШаблон("ВЫБРАТЬ
		|%1ДополнительныеРеквизиты.Ссылка
		|ИЗ
		|%2.%1.ДополнительныеРеквизиты КАК %1ДополнительныеРеквизиты
		|ГДЕ
		|%1ДополнительныеРеквизиты.Свойство = &%3
		|И  %1ДополнительныеРеквизиты.Значение %4",
		ОбъектМетаданных.Имя,
		ОбщегоНазначения.ВидОбъектаПоТипу(Тип),
		ИмяПараметраСвойство,
		КомпонентСравнения));
		
	КонецЦикла;
	
	Возврат СтрСоединить(МассивПодзапросов,
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|");
	
КонецФункции

Функция ПутьПоляГруппировкиПоЗаказам(ИмяТаблицы, НастройкиКД)
	
	ВариантВоронки = ВариантВоронки(НастройкиКД);
	ВидВоронки = ВидВоронки(НастройкиКД);
	
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей["ПоЗаказам"] = "ИСТИНА";
	СоответствиеПолей["ПоПодразделениям"] = "СтруктурнаяЕдиницаПродажи";
	
	Если ВидВоронки = ВидВоронкиПоПокупателям() Тогда
		СоответствиеПолей["ПоМенеджерам"] = "Контрагент.Ответственный";
	Иначе
		СоответствиеПолей["ПоМенеджерам"] = "Ответственный";
	КонецЕсли;
	
	СоответствиеПолей["ПоПокупателям"] = "Контрагент";
	СоответствиеПолей["ПоЛидам"] = "Ссылка";
	СоответствиеПолей["ПоИсточникам"] = "ИсточникПривлечения";
	
	Если ВариантВоронки = "ПоЗаказам" Тогда
		Возврат СоответствиеПолей[ВариантВоронки];
	КонецЕсли;

	Если ВидВоронки = ВидВоронкиПоЛидам() Тогда
		Возврат СтрШаблон("%1.Лид.%2%3", ИмяТаблицы, СоответствиеПолей[ВариантВоронки], СуффиксПутиПоляГруппировки(НастройкиКД, СоответствиеПолей[ВариантВоронки]));
	КонецЕсли;

	Возврат СтрШаблон("%1.Заказ.%2%3", ИмяТаблицы, СоответствиеПолей[ВариантВоронки], СуффиксПутиПоляГруппировки(НастройкиКД, СоответствиеПолей[ВариантВоронки]));
	
КонецФункции

Функция ПутьПоляГруппировкиПоЛидам(ИмяТаблицы, НастройкиКД)
	
	ВариантВоронки = ВариантВоронки(НастройкиКД);
	
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей["ПоЗаказам"] = "ЭтоГруппа";
	СоответствиеПолей["ПоМенеджерам"] = "Ответственный";
	СоответствиеПолей["ПоЛидам"] = "Ссылка";
	СоответствиеПолей["ПоИсточникам"] = "ИсточникПривлечения";
	
	Возврат СтрШаблон("%1.Лид.%2%3", ИмяТаблицы, СоответствиеПолей[ВариантВоронки], СуффиксПутиПоляГруппировки(НастройкиКД, СоответствиеПолей[ВариантВоронки]));
	
КонецФункции

Функция ПутьПоляГруппировкиПоПокупателям(НастройкиКД)
	
	ВариантВоронки = ВариантВоронки(НастройкиКД);
	
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей["ПоЗаказам"] = "ЭтоГруппа";
	СоответствиеПолей["ПоМенеджерам"] = "Ответственный";
	СоответствиеПолей["ПоПокупателям"] = "Ссылка";
	СоответствиеПолей["ПоИсточникам"] = "ИсточникПривлеченияПокупателя";
	
	Возврат СтрШаблон("Контрагенты.%1%2", СоответствиеПолей[ВариантВоронки], СуффиксПутиПоляГруппировки(НастройкиКД, СоответствиеПолей[ВариантВоронки]));
	
КонецФункции

Функция СтрокаОтбораПоТегуКонтрагента(ЭлементОтбора, ИмяПараметра, ТипФильтра)
	
	Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		ЧастицаНе = "НЕ ";
	КонецЕсли;
	
	Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно 
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
		
		КомпонентСравнения = СтрШаблон("= &%1", ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке 
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
		
		КомпонентСравнения = СтрШаблон("В (&%1)", ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
		Или ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		
		КомпонентСравнения = СтрШаблон("В ИЕРАРХИИ (&%1)", ИмяПараметра);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КомпонентСравнения) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТипФильтра = "Заказы" Тогда
		Возврат СтрШаблон("ИсторияСостоянийЗаказов.Заказ.Контрагент
			|%1В (ВЫБРАТЬ Ссылка ИЗ Справочник.Контрагенты.Теги
			|ГДЕ Тег %2)", ЧастицаНе, КомпонентСравнения);
	КонецЕсли;
	
	Если ТипФильтра = "Лиды" Тогда
		Возврат СтрШаблон("ИсторияСостоянийЛидов.Лид.Ссылка
			|%1В (ВЫБРАТЬ Ссылка ИЗ Справочник.Лиды.Теги
			|ГДЕ Тег %2)", ЧастицаНе, КомпонентСравнения);
	КонецЕсли;
	
	Если ТипФильтра = "Покупатели" Тогда
		Возврат СтрШаблон("Контрагенты.Ссылка
			|%1В (ВЫБРАТЬ Ссылка ИЗ Справочник.Контрагенты.Теги
			|ГДЕ Тег %2)", ЧастицаНе, КомпонентСравнения);
	КонецЕсли;

	
КонецФункции

Функция СуффиксПутиПоляГруппировки(НастройкиКД, ИмяПоля)
	
	Для Каждого ТекЭлемент Из НастройкиКД.Отбор.Элементы Цикл
		
		Если ТипЗнч(ТекЭлемент) <> Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ТекЭлемент.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекЭлемент.ЛевоеЗначение <> Новый ПолеКомпоновкиДанных(ИмяПоля) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеСодержитГруппы(ТекЭлемент.ПравоеЗначение) Тогда
			Возврат ".Родитель";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

Функция ЗначениеСодержитГруппы(ПроверяемоеЗначение)
	
	Если ТипЗнч(ПроверяемоеЗначение) <> Тип("СписокЗначений") Тогда
		Возврат ЭтоГруппа(ПроверяемоеЗначение);
	КонецЕсли;
	
	Для Каждого ТекЭлемент Из ПроверяемоеЗначение Цикл
		Если ЭтоГруппа(ТекЭлемент.Значение) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоГруппа(ПроверяемоеЗначение)
	
	Если Не ОбщегоНазначения.ЗначениеСсылочногоТипа(ПроверяемоеЗначение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МетаданныеОбъекта = ПроверяемоеЗначение.Метаданные();
	
	Если Не ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("ЭтоГруппа", МетаданныеОбъекта) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроверяемоеЗначение, "ЭтоГруппа");
	
КонецФункции

Функция ТаблицыДанныхВоронкиПоЗаказам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(ВТ_Заказы.ПериодСостояния) КАК ПериодСостояния,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.ВидЗаказа КАК ВидЗаказа,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК Порядок,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.Состояние, ВидыЗаказНарядовПорядокСостояний.Состояние) КАК Состояние
	|ПОМЕСТИТЬ ВТ_ПериодЗаказы
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
	|		ПО ВТ_Заказы.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
	|			И (ВТ_Заказы.Порядок > ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки
	|				ИЛИ ВТ_Заказы.Порядок = ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|		ПО ВТ_Заказы.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|			И (ВТ_Заказы.Порядок > ВидыЗаказНарядовПорядокСостояний.НомерСтроки
	|				ИЛИ ВТ_Заказы.Порядок = ВидыЗаказНарядовПорядокСостояний.НомерСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.Заказ,
	|	ВТ_Заказы.ВидЗаказа,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки),
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.Состояние, ВидыЗаказНарядовПорядокСостояний.Состояние)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_Заказы.ГруппировкаВидОперации КАК ГруппировкаВидОперации,
	|	ВТ_Заказы.ПолеГруппировки КАК ПолеГруппировки,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Заказ.ВариантЗавершения КАК ВариантЗавершения,
	|	ВТ_Заказы.ВидЗаказа КАК ВидЗаказа,
	|	ВТ_Заказы.ВидОперации КАК ВидОперации,
	|	ВТ_Заказы.СуммаДокумента КАК СуммаДокумента,
	|	ВТ_Заказы.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_Заказы.Курс КАК Курс,
	|	ВТ_Заказы.Кратность КАК Кратность,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК Порядок,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.Состояние, ВидыЗаказНарядовПорядокСостояний.Состояние) КАК Состояние,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний1.Состояние, ВидыЗаказНарядовПорядокСостояний1.Состояние) КАК СледующееСостояние
	|ПОМЕСТИТЬ ВТ_Состояния
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний1
	|			ПО ВидыЗаказовПокупателейПорядокСостояний.Ссылка = ВидыЗаказовПокупателейПорядокСостояний1.Ссылка
	|				И (ВидыЗаказовПокупателейПорядокСостояний1.НомерСтроки = ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки + 1)
	|		ПО ВТ_Заказы.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний1
	|			ПО ВидыЗаказНарядовПорядокСостояний.Ссылка = ВидыЗаказНарядовПорядокСостояний1.Ссылка
	|				И (ВидыЗаказНарядовПорядокСостояний1.НомерСтроки = ВидыЗаказНарядовПорядокСостояний.НомерСтроки + 1)
	|		ПО ВТ_Заказы.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИсторияСостоянийЗаказовСрезПоследних.Заказ КАК Заказ,
	|	ИсторияСостоянийЗаказовСрезПоследних.Состояние КАК Состояние,
	|	ИсторияСостоянийЗаказовСрезПоследних.Период КАК ПоследнийПериод,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК ПоследнийПорядок
	|ПОМЕСТИТЬ ВТ_СрезПоследних
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийЗаказов.СрезПоследних(
	|				,
	|				Заказ В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТ_Заказы.Заказ
	|					ИЗ
	|						ВТ_Заказы)) КАК ИсторияСостоянийЗаказовСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|			ПО ИсторияСостоянийЗаказовСрезПоследних.Заказ.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|				И ИсторияСостоянийЗаказовСрезПоследних.Состояние = ВидыЗаказНарядовПорядокСостояний.Состояние
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
	|			ПО ИсторияСостоянийЗаказовСрезПоследних.Заказ.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
	|				И ИсторияСостоянийЗаказовСрезПоследних.Состояние = ВидыЗаказовПокупателейПорядокСостояний.Состояние
	|		ПО ВТ_Заказы.Заказ = ИсторияСостоянийЗаказовСрезПоследних.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВТ_Заказы.ПериодСостояния, ДЕНЬ) КАК ПериодСостояния,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютПериод
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО (НАЧАЛОПЕРИОДА(ВТ_Заказы.ПериодСостояния, ДЕНЬ) >= КурсыВалют.Период)
	|ГДЕ
	|	КурсыВалют.Валюта В (&ВалютаУчета, &ВалютаНациональная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.ПериодСостояния,
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодСостояния КАК ПериодСостояния,
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютУчета
	|ИЗ
	|	ВременнаяТаблицаКурсыВалютПериод КАК ВременнаяТаблицаКурсыВалютПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта = КурсыВалют.Период
	|ГДЕ
	|	ВременнаяТаблицаКурсыВалютПериод.Валюта = &ВалютаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодСостояния КАК ПериодСостояния,
	|	ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта КАК ПериодВалюта,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыНацВалют
	|ИЗ
	|	ВременнаяТаблицаКурсыВалютПериод КАК ВременнаяТаблицаКурсыВалютПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВременнаяТаблицаКурсыВалютПериод.ПериодВалюта = КурсыВалют.Период
	|ГДЕ
	|	ВременнаяТаблицаКурсыВалютПериод.Валюта = &ВалютаНациональная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИсторияСостоянийЗаказовСрезПоследних.Заказ КАК Заказ,
	|	ИсторияСостоянийЗаказовСрезПоследних.Состояние КАК Состояние,
	|	ИсторияСостоянийЗаказовСрезПоследних.Период КАК ПоследнийПериод,
	|	ЕСТЬNULL(ВидыЗаказовПокупателейПорядокСостояний.НомерСтроки, ВидыЗаказНарядовПорядокСостояний.НомерСтроки) КАК ПоследнийПорядок
	|ПОМЕСТИТЬ ВТ_СрезПоследнихДоОтмены
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийЗаказов.СрезПоследних(
	|				,
	|				Заказ.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|					И Состояние <> ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
	|					И Состояние <> ЗНАЧЕНИЕ(Справочник.СостоянияЗаказНарядов.Завершен)
	|					И Заказ В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВТ_Заказы.Заказ
	|						ИЗ
	|							ВТ_Заказы)) КАК ИсторияСостоянийЗаказовСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|			ПО ИсторияСостоянийЗаказовСрезПоследних.Заказ.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|				И ИсторияСостоянийЗаказовСрезПоследних.Состояние = ВидыЗаказНарядовПорядокСостояний.Состояние
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
	|			ПО ИсторияСостоянийЗаказовСрезПоследних.Заказ.ВидЗаказа = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
	|				И ИсторияСостоянийЗаказовСрезПоследних.Состояние = ВидыЗаказовПокупателейПорядокСостояний.Состояние
	|		ПО ВТ_Заказы.Заказ = ИсторияСостоянийЗаказовСрезПоследних.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_Состояния.ГруппировкаВидОперации КАК ГруппировкаВидОперации,
	|	ВТ_Состояния.ПолеГруппировки КАК ПолеГруппировки,
	|	ВТ_Состояния.Заказ КАК Заказ,
	|	ВТ_Состояния.ВидЗаказа КАК ВидЗаказа,
	|	ВТ_Состояния.ВидОперации КАК ВидОперации,
	|	ВТ_Состояния.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_Состояния.Порядок КАК Порядок,
	|	ВТ_Состояния.Состояние КАК Состояние,
	|	ВТ_ПериодЗаказы.ПериодСостояния КАК Старт,
	|	ВТ_ПериодЗаказы1.ПериодСостояния КАК Финиш,
	|	ВТ_СрезПоследних.ПоследнийПериод КАК ДатаПоследнегоСостояния,
	|	ВТ_СрезПоследних.ПоследнийПорядок КАК ПорядокПоследнегоСостояния,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ВТ_Состояния.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ВТ_Состояния.СуммаДокумента * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ВТ_Состояния.СуммаДокумента * ВТ_Состояния.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ВТ_Состояния.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ВТ_ПериодЗаказы1.ПериодСостояния ЕСТЬ NULL
	|			ТОГДА РАЗНОСТЬДАТ(ВТ_ПериодЗаказы.ПериодСостояния, ВТ_СрезПоследних.ПоследнийПериод, СЕКУНДА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ВТ_ПериодЗаказы.ПериодСостояния, ВТ_ПериодЗаказы1.ПериодСостояния, СЕКУНДА)
	|	КОНЕЦ КАК Длительность,
	|	ВЫБОР
	|		КОГДА ВТ_Состояния.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_СрезПоследнихДоОтмены.ПоследнийПорядок >= ВТ_Состояния.Порядок
	|						ТОГДА 1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_СрезПоследних.ПоследнийПорядок >= ВТ_Состояния.Порядок
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК УчитыватьВВоронке,
	|	ВЫБОР
	|		КОГДА (ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
	|				ИЛИ ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказНарядов.Завершен))
	|				И ВТ_Состояния.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Успешно)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Успешные,
	|	ВЫБОР
	|		КОГДА (ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
	|				ИЛИ ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказНарядов.Завершен))
	|				И ВТ_Состояния.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Отмененные,
	|	ВЫБОР
	|		КОГДА ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
	|				ИЛИ ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказНарядов.Завершен)
	|					И ВТ_Состояния.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Успешно)
	|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА ВТ_Состояния.ВалютаДокумента = &ВалютаНациональная
	|							ТОГДА ВТ_Состояния.СуммаДокумента * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|						ИНАЧЕ ВТ_Состояния.СуммаДокумента * ВТ_Состояния.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ВТ_Состояния.Кратность)
	|					КОНЕЦ КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУспешных,
	|	ВЫБОР
	|		КОГДА (ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
	|				ИЛИ ВТ_Состояния.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказНарядов.Завершен))
	|				И ВТ_Состояния.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен)
	|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА ВТ_Состояния.ВалютаДокумента = &ВалютаНациональная
	|							ТОГДА ВТ_Состояния.СуммаДокумента * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|						ИНАЧЕ ВТ_Состояния.СуммаДокумента * ВТ_Состояния.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ВТ_Состояния.Кратность)
	|					КОНЕЦ КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОтмененных
	|ПОМЕСТИТЬ ВТ_ДанныеВоронкиПродаж
	|ИЗ
	|	ВТ_Состояния КАК ВТ_Состояния
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодЗаказы КАК ВТ_ПериодЗаказы
	|		ПО ВТ_Состояния.Заказ = ВТ_ПериодЗаказы.Заказ
	|			И ВТ_Состояния.Состояние = ВТ_ПериодЗаказы.Состояние
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодЗаказы КАК ВТ_ПериодЗаказы1
	|		ПО ВТ_Состояния.Заказ = ВТ_ПериодЗаказы1.Заказ
	|			И ВТ_Состояния.СледующееСостояние = ВТ_ПериодЗаказы1.Состояние
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрезПоследних КАК ВТ_СрезПоследних
	|		ПО ВТ_Состояния.Заказ = ВТ_СрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрезПоследнихДоОтмены КАК ВТ_СрезПоследнихДоОтмены
	|		ПО ВТ_Состояния.Заказ = ВТ_СрезПоследнихДоОтмены.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютУчета КАК КурсыУпрВалюты
	|		ПО (НАЧАЛОПЕРИОДА(ВТ_ПериодЗаказы.ПериодСостояния, ДЕНЬ) = КурсыУпрВалюты.ПериодСостояния)
	|			И (КурсыУпрВалюты.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыНацВалют КАК КурсыРегВалюты
	|		ПО (НАЧАЛОПЕРИОДА(ВТ_ПериодЗаказы.ПериодСостояния, ДЕНЬ) = КурсыРегВалюты.ПериодСостояния)
	|			И (КурсыРегВалюты.Валюта = &ВалютаНациональная)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СтрокаОтбораСУстановленнымВидомСравнения(Результат, ЭлементОтбора, ИмяПараметра)
		
	Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
		
		Результат  = СтрШаблон("%1 В ИЕРАРХИИ (&%2)", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
		
		Результат = СтрШаблон("%1 В (&%2)", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеНачинаетсяС
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НачинаетсяС Тогда
		
		Результат  = СтрШаблон("%1 ПОДОБНО &%2+""%%""", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеПодобно
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Подобно Тогда
		
		Результат  = СтрШаблон("%1 ПОДОБНО &%2", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеСодержит
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит Тогда
		
		Результат  = СтрШаблон("%1 ПОДОБНО ""%%""+&%2+""%%""", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
		
		Результат  = СтрШаблон("%1 = &%2", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше Тогда 
		
		Результат  = СтрШаблон("%1 > &%2", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда 
		
		Результат  = СтрШаблон("%1 >= &%2", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше Тогда 
		
		Результат  = СтрШаблон("%1 < &%2", Результат, ИмяПараметра);
		
	ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда 
		
		Результат  = СтрШаблон("%1 <= &%2", Результат, ИмяПараметра);
		
	КонецЕсли;
	
	Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеНачинаетсяС
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеПодобно
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено
		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеСодержит Тогда
		Результат  = СтрШаблон("НЕ (%1)", Результат);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ВидыВоронки

Функция ВидВоронкиПоЛидам() Экспорт
	
	Возврат "ПоЛидам"; // Не локализуется
	
КонецФункции

Функция ВидВоронкиПоПокупателям() Экспорт
	
	Возврат "ПоПокупателям"; // Не локализуется
	
КонецФункции

Функция ВидВоронкиПоЗаказам() Экспорт
	
	Возврат "ПоЗаказам"; // Не локализуется
	
КонецФункции

Функция ВидВоронкиОбщая() Экспорт
	
	Возврат "Общая"; // Не локализуется
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
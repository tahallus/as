#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Вызывается при работе в модели сервиса для получения сведений о предопределенных вариантах отчета.
//
// Возвращаемое значение:
//  Массив из Структура:
//    * Имя           - Строка - имя варианта отчета; например, "Основной";
//    * Представление - Строка - имя варианта отчета; например, НСтр("ru = 'Динамика изменений файлов'").
//
Функция ВариантыНастроек() Экспорт 
	
	Результат = Новый Массив;
	Результат.Добавить(Новый Структура("Имя, Представление", "Основной", 
		НСтр("ru = 'Платежный календарь'")));
	Возврат Результат;
	
КонецФункции

// Параметры:
//   Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки.
//   НастройкиОтчета - см. ВариантыОтчетов.ОписаниеОтчета.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Ложь);
	
	Вариант = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ПлатежныйКалендарь, "Основной");
	Вариант.Описание = НСтр("ru = 'Отчет показывает информацию о планируемых поступлениях и расходах денежных средств.'");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

// Сохраняет установленные настройки отборов переданного отчета
//
// Параметры:
//  Объект - ОтчетОбъект.ПлатежныйКалендарь - объект отчета, настройки которого необходимо сохранить.
//  ДанныеМеток - ТаблицаЗначений - таблица, которая содержит данные установленных отборов отчета.
//
Процедура СохранитьНастройкиОтборов(Объект, ДанныеМеток) Экспорт
	
	ИмяКлючаОбъекта = ПолучитьКлючОбъекта();
	
	ТаблицаДанныеМеток = ДанныеМеток.Выгрузить();
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ДанныеМеток", 					ТаблицаДанныеМеток);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтборПоПериоду", 				Объект.ПериодПланирования);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ВидДиаграммы", 					Объект.ВидДиаграммы);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ПланироватьПоДням", 			Объект.ПланироватьПоДням);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьОрганизацию", 		Объект.ОтображатьОрганизацию);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьСтатью", 				Объект.ОтображатьСтатью);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьСчетКассу",   		Объект.ОтображатьСчетКассу);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьТипДС", 				Объект.ОтображатьТипДС);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьКонтрагента", 		Объект.ОтображатьКонтрагента);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_РазвернутьДо", 					Объект.РазвернутьДо);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ВариантПересчетаСумм",			Объект.ВариантПересчетаСумм);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьБолееРанниеПлатежи",  Объект.ОтображатьБолееРанниеПлатежи);
	
КонецПроцедуры

// Восстанавливает установленные настройки отборов переданного отчета
//
// Параметры:
//  Объект - ОтчетОбъект.ПлатежныйКалендарь - объект отчета, настройки которого необходимо восстановить.
//  ДанныеМеток - ТаблицаЗначений - таблица, в которую будут помещены данные установленных отборов отчета.
//
Процедура ВосстановитьНастройкиОтборов(Объект, ДанныеМеток) Экспорт
	
	// Инициализация по умолчанию
	Объект.ОтображатьОрганизацию 		 = Истина;
	Объект.ОтображатьТипДС 		 		 = Истина;
	Объект.ОтображатьСчетКассу   		 = Истина;
	Объект.ОтображатьСтатью 	 		 = Истина;
	Объект.ОтображатьКонтрагента 		 = Истина;
	Объект.ПланироватьПоДням	 		 = Истина;
	Объект.ОтображатьБолееРанниеПлатежи	 = Ложь;
	Объект.ВидДиаграммы 		 		 = Перечисления.ВариантыДиаграммыПлатежныйКалендарь.Детальная;
	Объект.ВариантПересчетаСумм  		 = Перечисления.ПлатежныйКалендарьВариантыПересчета.ВалютаНациональная;
	
	// Восстановление настроек
	ИмяКлючаОбъекта = ПолучитьКлючОбъекта();
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ДанныеМеток");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Если ТипЗнч(ДанныеМеток) = Тип("ДанныеФормыКоллекция") Тогда
			ДанныеМеток.Загрузить(СохраненноеЗначение);
		Иначе
			ДанныеМеток = СохраненноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтборПоПериоду");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ПериодПланирования = СохраненноеЗначение;
	Иначе
		Объект.ПериодПланирования = Новый СтандартныйПериод(НачалоНедели(ТекущаяДатаСеанса()), КонецНедели(ТекущаяДатаСеанса()));
	КонецЕсли;
		
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ВидДиаграммы");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ВидДиаграммы = СохраненноеЗначение;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ПланироватьПоДням");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ПланироватьПоДням = СохраненноеЗначение;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьОрганизацию");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ОтображатьОрганизацию = СохраненноеЗначение;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Объект.ОтображатьОрганизацию = Ложь;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьСтатью");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ОтображатьСтатью = СохраненноеЗначение;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьСчетКассу");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ОтображатьСчетКассу = СохраненноеЗначение;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьТипДС");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ОтображатьТипДС = СохраненноеЗначение;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьКонтрагента");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ОтображатьКонтрагента = СохраненноеЗначение;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_РазвернутьДо");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.РазвернутьДо = СохраненноеЗначение;
	Иначе
		Объект.РазвернутьДо = Перечисления.АналитикаПлатежногоКалендаря.ТипДенежныхСредств;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ВариантПересчетаСумм");
	Если ЗначениеЗаполнено(СохраненноеЗначение) И ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций") Тогда
		Объект.ВариантПересчетаСумм = СохраненноеЗначение;
	Иначе
		Объект.ВариантПересчетаСумм = Перечисления.ПлатежныйКалендарьВариантыПересчета.ВалютаНациональная;
	КонецЕсли;
	
	СохраненноеЗначение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяКлючаОбъекта, ИмяКлючаОбъекта+"_ОтображатьБолееРанниеПлатежи");
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Объект.ОтображатьБолееРанниеПлатежи = СохраненноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает текст запроса платежного календаря, соответствующий текущим настройкам и установленным меткам.
//
// Параметры:
//  Объект - ОтчетОбъект.ПлатежныйКалендарь - объект отчета, настройки которого необходимо использовать для формирования
//                                            запроса.
//  ДанныеМеток - ТаблицаЗначений - метки отборов, которые необходимо использовать для формирования запроса.
//
// Возвращаемое значение:
//  Строка - сформированный текст запроса.
//
Функция ПолучитьТекстЗапросаПлатежныйКалендарь(Объект, ДанныеМеток) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ТекущаяДата, ) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДенежныеСредстваОстатки.Организация КАК Организация,
	|	ДенежныеСредстваОстатки.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА &ВВалютеПлатежа
	|			ТОГДА ДенежныеСредстваОстатки.Валюта
	|		ИНАЧЕ &ВалютаОтчета
	|	КОНЕЦ КАК Валюта,
	|	СУММА(ДенежныеСредстваОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(ДенежныеСредстваОстатки.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	СУММА(ВЫРАЗИТЬ(ДенежныеСредстваОстатки.СуммаВалОстаток * КурсыВалютСчетовКасс.Курс / КурсыВалютСчетовКасс.Кратность КАК ЧИСЛО(15, 2))) КАК СуммаРегОстаток
	|ПОМЕСТИТЬ ОстаткиДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(&ТекущаяДата, Организация = &ОтборыДенежныеСредства) КАК ДенежныеСредстваОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютСчетовКасс
	|		ПО (КурсыВалютСчетовКасс.Валюта = ДенежныеСредстваОстатки.Валюта)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваОстатки.Организация,
	|	ДенежныеСредстваОстатки.ТипДенежныхСредств,
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА &ВВалютеПлатежа
	|			ТОГДА ДенежныеСредстваОстатки.Валюта
	|		ИНАЧЕ &ВалютаОтчета
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ПлатежныйКалендарьОплата.СчетНаОплату ССЫЛКА Документ.ПеремещениеДСПлан
	|			ТОГДА ПлатежныйКалендарьОплата.ТипДенежныхСредств
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ПустаяСсылка)
	|	КОНЕЦ КАК ТипДенежныхСредств,
	|	ПлатежныйКалендарьОплата.СчетНаОплату КАК СчетНаОплату,
	|	ПлатежныйКалендарьОплата.Статья КАК Статья,
	|	СУММА(ПлатежныйКалендарьОплата.СуммаОплатыОборот) КАК СуммаОплатыОборот
	|ПОМЕСТИТЬ ПлатежныйКалендарьОплата
	|ИЗ
	|	РегистрНакопления.ПлатежныйКалендарь.Обороты(, &КонецПериода, Авто, Организация = &ОтборыПлатежныйКалендарь) КАК ПлатежныйКалендарьОплата
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ПлатежныйКалендарьОплата.СчетНаОплату ССЫЛКА Документ.ПеремещениеДСПлан
	|			ТОГДА ПлатежныйКалендарьОплата.ТипДенежныхСредств
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПлатежныйКалендарьОплата.СчетНаОплату,
	|	ПлатежныйКалендарьОплата.Статья
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлатежныйКалендарь.ПериодДень КАК Период,
	|	ПлатежныйКалендарь.Организация КАК Организация,
	|	ПлатежныйКалендарь.Валюта КАК Валюта,
	|	ПлатежныйКалендарь.Статья КАК Статья,
	|	ПлатежныйКалендарь.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ПлатежныйКалендарь.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ПлатежныйКалендарь.СчетНаОплату КАК СчетНаОплату,
	|	ПлатежныйКалендарь.СтатусУтвержденияПлатежа КАК СтатусУтвержденияПлатежа,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот) > 0
	|			ТОГДА ВЫБОР
	|					КОГДА СУММА(ЕСТЬNULL(ПлатежныйКалендарьДвижения.СуммаОборот, 0)) - МАКСИМУМ(ЕСТЬNULL(ПлатежныйКалендарьОплата.СуммаОплатыОборот, 0)) >= 0
	|						ТОГДА МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот)
	|					КОГДА СУММА(ЕСТЬNULL(ПлатежныйКалендарьДвижения.СуммаОборот, 0)) + МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот) - МАКСИМУМ(ЕСТЬNULL(ПлатежныйКалендарьОплата.СуммаОплатыОборот, 0)) < 0
	|						ТОГДА 0
	|					ИНАЧЕ СУММА(ЕСТЬNULL(ПлатежныйКалендарьДвижения.СуммаОборот, 0)) + МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот) - МАКСИМУМ(ЕСТЬNULL(ПлатежныйКалендарьОплата.СуммаОплатыОборот, 0))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СУММА(ЕСТЬNULL(ПлатежныйКалендарьДвижения.СуммаОборот, 0)) - МАКСИМУМ(ЕСТЬNULL(ПлатежныйКалендарьОплата.СуммаОплатыОборот, 0)) <= 0
	|					ТОГДА МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот)
	|				КОГДА СУММА(ЕСТЬNULL(ПлатежныйКалендарьДвижения.СуммаОборот, 0)) + МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот) - МАКСИМУМ(ЕСТЬNULL(ПлатежныйКалендарьОплата.СуммаОплатыОборот, 0)) > 0
	|					ТОГДА 0
	|				ИНАЧЕ СУММА(ЕСТЬNULL(ПлатежныйКалендарьДвижения.СуммаОборот, 0)) + МАКСИМУМ(ПлатежныйКалендарь.СуммаОборот) - МАКСИМУМ(ЕСТЬNULL(ПлатежныйКалендарьОплата.СуммаОплатыОборот, 0))
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ОстаткиПланируемыхПлатежей
	|ИЗ
	|	РегистрНакопления.ПлатежныйКалендарь.Обороты(, &КонецПериода, Авто, Организация = &ОтборыПлатежныйКалендарь) КАК ПлатежныйКалендарь
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПлатежныйКалендарь.Обороты(, &КонецПериода, Авто, Организация = &ОтборыПлатежныйКалендарь) КАК ПлатежныйКалендарьДвижения
	|		ПО (ПлатежныйКалендарь.ПериодСекунда > ПлатежныйКалендарьДвижения.ПериодСекунда
	|				ИЛИ ПлатежныйКалендарь.ПериодСекунда = ПлатежныйКалендарьДвижения.ПериодСекунда
	|					И ПлатежныйКалендарь.Регистратор > ПлатежныйКалендарьДвижения.Регистратор)
	|			И (ВЫБОР
	|				КОГДА (ПлатежныйКалендарьДвижения.СчетНаОплату = НЕОПРЕДЕЛЕНО
	|						ИЛИ ПлатежныйКалендарьДвижения.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|						ИЛИ ПлатежныйКалендарьДвижения.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|						ИЛИ ПлатежныйКалендарьДвижения.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ИЛИ ПлатежныйКалендарьДвижения.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка))
	|						И (ПлатежныйКалендарь.СчетНаОплату = НЕОПРЕДЕЛЕНО
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка))
	|						И ПлатежныйКалендарьДвижения.Статья <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|						И ПлатежныйКалендарьДвижения.Статья = ПлатежныйКалендарь.Статья
	|					ТОГДА ИСТИНА
	|				КОГДА ПлатежныйКалендарьДвижения.СчетНаОплату <> НЕОПРЕДЕЛЕНО
	|						И ПлатежныйКалендарьДвижения.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|						И ПлатежныйКалендарьДвижения.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|						И ПлатежныйКалендарьДвижения.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						И ПлатежныйКалендарьДвижения.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|						И ПлатежныйКалендарь.СчетНаОплату = ПлатежныйКалендарьДвижения.СчетНаОплату
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлатежныйКалендарьОплата КАК ПлатежныйКалендарьОплата
	|		ПО (ВЫБОР
	|				КОГДА (ПлатежныйКалендарьОплата.СчетНаОплату = НЕОПРЕДЕЛЕНО
	|						ИЛИ ПлатежныйКалендарьОплата.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|						ИЛИ ПлатежныйКалендарьОплата.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|						ИЛИ ПлатежныйКалендарьОплата.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ИЛИ ПлатежныйКалендарьОплата.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка))
	|						И (ПлатежныйКалендарь.СчетНаОплату = НЕОПРЕДЕЛЕНО
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ПлатежныйКалендарь.СчетНаОплату = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка))
	|						И ПлатежныйКалендарьОплата.Статья <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|						И ПлатежныйКалендарьОплата.Статья = ПлатежныйКалендарь.Статья
	|					ТОГДА ИСТИНА
	|				КОГДА ПлатежныйКалендарьОплата.СчетНаОплату <> НЕОПРЕДЕЛЕНО
	|						И ПлатежныйКалендарьОплата.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|						И ПлатежныйКалендарьОплата.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|						И ПлатежныйКалендарьОплата.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						И ПлатежныйКалендарьОплата.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|						И ПлатежныйКалендарьОплата.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ПеремещениеДСПлан.ПустаяСсылка)
	|						И ПлатежныйКалендарь.СчетНаОплату = ПлатежныйКалендарьОплата.СчетНаОплату
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ПлатежныйКалендарьОплата.СчетНаОплату) = ТИП(Документ.ПеремещениеДСПлан)
	|					ТОГДА ПлатежныйКалендарь.ТипДенежныхСредств = ПлатежныйКалендарьОплата.ТипДенежныхСредств
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныйКалендарь.ПериодДень,
	|	ПлатежныйКалендарь.Организация,
	|	ПлатежныйКалендарь.Статья,
	|	ПлатежныйКалендарь.СчетНаОплату,
	|	ПлатежныйКалендарь.Регистратор,
	|	ПлатежныйКалендарь.Валюта,
	|	ПлатежныйКалендарь.БанковскийСчетКасса,
	|	ПлатежныйКалендарь.ТипДенежныхСредств,
	|	ПлатежныйКалендарь.СтатусУтвержденияПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ОтображатьБолееРанниеПлатежи И ОстаткиПланируемыхПлатежей.Период < &НачалоПериода
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		КОГДА &ПланироватьПоДням
	|			ТОГДА ОстаткиПланируемыхПлатежей.Период
	|		КОГДА НАЧАЛОПЕРИОДА(ОстаткиПланируемыхПлатежей.Период, НЕДЕЛЯ) < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ОстаткиПланируемыхПлатежей.Период, НЕДЕЛЯ)
	|	КОНЕЦ КАК Период,
	|	ОстаткиПланируемыхПлатежей.Период КАК ПлановаяДата,
	|	ОстаткиПланируемыхПлатежей.Организация КАК Организация,
	|	ОстаткиПланируемыхПлатежей.Валюта КАК Валюта,
	|	ОстаткиПланируемыхПлатежей.Статья КАК Статья,
	|	ОстаткиПланируемыхПлатежей.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ОстаткиПланируемыхПлатежей.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ОстаткиПланируемыхПлатежей.СчетНаОплату КАК СчетНаОплату,
	|	ОстаткиПланируемыхПлатежей.СтатусУтвержденияПлатежа КАК СтатусУтвержденияПлатежа,
	|	СУММА(ОстаткиПланируемыхПлатежей.Сумма) КАК СуммаВалОборот,
	|	СУММА(ВЫРАЗИТЬ(ОстаткиПланируемыхПлатежей.Сумма * КурсыВалютДокумента.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютДокумента.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаОборот,
	|	СУММА(ВЫРАЗИТЬ(ОстаткиПланируемыхПлатежей.Сумма * КурсыВалютДокумента.Курс / КурсыВалютДокумента.Кратность КАК ЧИСЛО(15, 2))) КАК СуммаРегОборот
	|ПОМЕСТИТЬ Прогноз
	|ИЗ
	|	ОстаткиПланируемыхПлатежей КАК ОстаткиПланируемыхПлатежей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
	|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютДокумента
	|		ПО (КурсыВалютДокумента.Валюта = ОстаткиПланируемыхПлатежей.Валюта)
	|ГДЕ
	|	ОстаткиПланируемыхПлатежей.Сумма <> 0
	|	И (&ОтображатьБолееРанниеПлатежи ИЛИ ОстаткиПланируемыхПлатежей.Период >= &НачалоПериодаОтбор)
	|	И &ОтборПоКонтрагенту
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &ОтображатьБолееРанниеПлатежи И ОстаткиПланируемыхПлатежей.Период < &НачалоПериода
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		КОГДА &ПланироватьПоДням
	|			ТОГДА ОстаткиПланируемыхПлатежей.Период
	|		КОГДА НАЧАЛОПЕРИОДА(ОстаткиПланируемыхПлатежей.Период, НЕДЕЛЯ) < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ОстаткиПланируемыхПлатежей.Период, НЕДЕЛЯ)
	|	КОНЕЦ,
	|	ОстаткиПланируемыхПлатежей.Период,
	|	ОстаткиПланируемыхПлатежей.Организация,
	|	ОстаткиПланируемыхПлатежей.Валюта,
	|	ОстаткиПланируемыхПлатежей.Статья,
	|	ОстаткиПланируемыхПлатежей.ТипДенежныхСредств,
	|	ОстаткиПланируемыхПлатежей.БанковскийСчетКасса,
	|	ОстаткиПланируемыхПлатежей.СчетНаОплату,
	|	ОстаткиПланируемыхПлатежей.СтатусУтвержденияПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Прогноз.Период КАК Период,
	|	Прогноз.ПлановаяДата КАК ПлановаяДата,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.Валюта, Прогноз.Валюта) КАК Валюта,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.Организация, Прогноз.Организация) КАК Организация,
	|	Прогноз.Статья КАК Статья,
	|	Прогноз.СчетНаОплату КАК Документ,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.ТипДенежныхСредств, Прогноз.ТипДенежныхСредств) КАК ТипДенежныхСредств,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.БанковскийСчетКасса, Прогноз.БанковскийСчетКасса) КАК БанковскийСчетКасса,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
	|	ЕСТЬNULL(ОстаткиДенежныхСредств.СуммаРегОстаток, 0) КАК СуммаРегОстаток,
	|	Прогноз.СтатусУтвержденияПлатежа КАК СтатусУтвержденияПлатежа,
	|	ЕСТЬNULL(Прогноз.СчетНаОплату.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	ЕСТЬNULL(Прогноз.СчетНаОплату.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор,
	|	ЕСТЬNULL(Прогноз.СчетНаОплату.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК Основание,
	|	ЕСТЬNULL(Прогноз.СчетНаОплату.Автор, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Автор,
	|	ЕСТЬNULL(Прогноз.СчетНаОплату.Комментарий, """") КАК Комментарий,
	|	ЕСТЬNULL(Прогноз.СуммаВалОборот, 0) КАК СуммаВалОборот,
	|	ЕСТЬNULL(Прогноз.СуммаОборот, 0) КАК СуммаОборот,
	|	ЕСТЬNULL(Прогноз.СуммаРегОборот, 0) КАК СуммаРегОборот,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Прогноз.СуммаОборот, 0) > 0
	|			ТОГДА Прогноз.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приход,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Прогноз.СуммаВалОборот, 0) > 0
	|			ТОГДА Прогноз.СуммаВалОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриходВал,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Прогноз.СуммаРегОборот, 0) > 0
	|			ТОГДА Прогноз.СуммаРегОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриходРег,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Прогноз.СуммаОборот, 0) < 0
	|			ТОГДА Прогноз.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Расход,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Прогноз.СуммаВалОборот, 0) < 0
	|			ТОГДА Прогноз.СуммаВалОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВал,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Прогноз.СуммаРегОборот, 0) < 0
	|			ТОГДА Прогноз.СуммаРегОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходРег
	|ИЗ
	|	ОстаткиДенежныхСредств КАК ОстаткиДенежныхСредств
	|		ПОЛНОЕ СОЕДИНЕНИЕ Прогноз КАК Прогноз
	|		ПО ОстаткиДенежныхСредств.Организация = Прогноз.Организация
	|			И ОстаткиДенежныхСредств.БанковскийСчетКасса = Прогноз.БанковскийСчетКасса
	|			И (ИСТИНА)
	|	УПОРЯДОЧИТЬ ПО
	|	Валюта,
	|	Организация,
	|	ТипДенежныхСредств УБЫВ,
	|	БанковскийСчетКасса,
	|	Статья,
	|	Контрагент";
	
	Если Объект.ВариантПересчетаСумм = Перечисления.ПлатежныйКалендарьВариантыПересчета.ВалютаПлатежа Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(ИСТИНА)", "ОстаткиДенежныхСредств.Валюта = Прогноз.Валюта");
	КонецЕсли; 
	
	ОтборыДенежныеСредства = "";
	ОтборыПлатежныйКалендарь = "";
	ОтборыКонтрагент = "";
	ОтборПоКонтрагентуУстановлен = Ложь;
	
	ШаблонОтбора = "ИмяПоляОтбора В (&ИмяПоляОтбора)";
	СписокОтборыДенежныеСредства = Новый Массив;
	СписокОтборыДенежныеСредства.Добавить("Организация");
	СписокОтборыДенежныеСредства.Добавить("ТипДенежныхСредств");
	СписокОтборыДенежныеСредства.Добавить("БанковскийСчетКасса");
	
	СписокОтборыПлатежныйКалендарь = Новый Массив;
	СписокОтборыПлатежныйКалендарь.Добавить("Организация");
	СписокОтборыПлатежныйКалендарь.Добавить("ТипДенежныхСредств");
	СписокОтборыПлатежныйКалендарь.Добавить("БанковскийСчетКасса");
	СписокОтборыПлатежныйКалендарь.Добавить("СтатусУтвержденияПлатежа");
	СписокОтборыПлатежныйКалендарь.Добавить("Статья");
	
	Для каждого СтрокаОтбора Из ДанныеМеток Цикл
		
		Если СписокОтборыДенежныеСредства.Найти(СтрокаОтбора.ИмяПоляОтбора) <> Неопределено Тогда
			СписокОтборыДенежныеСредства.Удалить(СписокОтборыДенежныеСредства.Найти(СтрокаОтбора.ИмяПоляОтбора));
			Если ЗначениеЗаполнено(ОтборыДенежныеСредства) Тогда
				ОтборыДенежныеСредства = ОтборыДенежныеСредства + " И ";
			КонецЕсли;
			ОтборыДенежныеСредства = ОтборыДенежныеСредства + СтрЗаменить(ШаблонОтбора, "ИмяПоляОтбора", СтрокаОтбора.ИмяПоляОтбора);
		КонецЕсли;
		
		Если СписокОтборыПлатежныйКалендарь.Найти(СтрокаОтбора.ИмяПоляОтбора) <> Неопределено Тогда
			СписокОтборыПлатежныйКалендарь.Удалить(СписокОтборыПлатежныйКалендарь.Найти(СтрокаОтбора.ИмяПоляОтбора));
			Если ЗначениеЗаполнено(ОтборыПлатежныйКалендарь) Тогда
				ОтборыПлатежныйКалендарь = ОтборыПлатежныйКалендарь + " И ";
			КонецЕсли;
			ОтборыПлатежныйКалендарь = ОтборыПлатежныйКалендарь + СтрЗаменить(ШаблонОтбора, "ИмяПоляОтбора", СтрокаОтбора.ИмяПоляОтбора);
		КонецЕсли;
		
		Если СтрокаОтбора.ИмяПоляОтбора = "Контрагент" И НЕ ОтборПоКонтрагентуУстановлен Тогда
			ОтборыКонтрагент =  " И ОстаткиПланируемыхПлатежей.СчетНаОплату.Контрагент В (&Контрагент) ";
			ОтборПоКонтрагентуУстановлен = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организация = &ОтборыДенежныеСредства",   ОтборыДенежныеСредства);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организация = &ОтборыПлатежныйКалендарь", ОтборыПлатежныйКалендарь);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ОтборПоКонтрагенту", 					ОтборыКонтрагент);
	
	Если Объект.ОтображатьОрганизацию ИЛИ Объект.ОтображатьТипДС ИЛИ Объект.ОтображатьСчетКассу ИЛИ Объект.ОтображатьСтатью Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ИТОГИ
		|	МАКСИМУМ(СуммаОстаток),
		|	МАКСИМУМ(СуммаВалОстаток),
		|	МАКСИМУМ(СуммаРегОстаток),
		|	СУММА(СуммаОборот),
		|	СУММА(СуммаВалОборот),
		|	СУММА(СуммаРегОборот),
		|	СУММА(Приход),
		|	СУММА(ПриходВал),
		|	СУММА(ПриходРег),
		|	СУММА(Расход),
		|	СУММА(РасходВал),
		|	СУММА(РасходРег)
		|ПО
		|	Валюта,%Организация%%ТипДенежныхСредств%%БанковскийСчетКасса%%Статья%%Контрагент%";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Организация%", 		  ?(Объект.ОтображатьОрганизацию, "Организация,", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТипДенежныхСредств%",  ?(Объект.ОтображатьТипДС, 	  "ТипДенежныхСредств,", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%БанковскийСчетКасса%", ?(Объект.ОтображатьСчетКассу,   "БанковскийСчетКасса,", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Статья%", 			  ?(Объект.ОтображатьСтатью, 	  "Статья,", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Контрагент%", 		  ?(Объект.ОтображатьКонтрагента, "Контрагент,", ""));
		
		Если СтрЗаканчиваетсяНа(ТекстЗапроса, ",") Тогда
			ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса) - 1);
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает запрос с данными платежного календаря и заполненными параметрами текущих меток.
//
// Параметры:
//  Объект - ОтчетОбъект.ПлатежныйКалендарь - объект отчета, настройки которого необходимо использовать для формирования
//                                            запроса.
//  ДанныеМеток - ТаблицаЗначений - метки отборов, которые необходимо использовать для формирования запроса.
//
// Возвращаемое значение:
//  Запрос - запрос с заполненными параметрами.
//
Функция СформироватьЗапросПлатежныйКалендарь(Объект, ДанныеМеток) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = Отчеты.ПлатежныйКалендарь.ПолучитьТекстЗапросаПлатежныйКалендарь(Объект, ДанныеМеток);
	
	ВВалютеПлатежа = Объект.ВариантПересчетаСумм = Перечисления.ПлатежныйКалендарьВариантыПересчета.ВалютаПлатежа;
	ВУправленческой = Перечисления.ПлатежныйКалендарьВариантыПересчета.ВалютаУправленческогоУчета;
	ВНациональной = Перечисления.ПлатежныйКалендарьВариантыПересчета.ВалютаНациональная;
	
	Если Объект.ВариантПересчетаСумм = ВНациональной Тогда
		ВалютаОтчета = УправлениеНебольшойФирмойПовтИсп.ПолучитьНациональнуюВалюту();
	ИначеЕсли Объект.ВариантПересчетаСумм = ВУправленческой Тогда
		ВалютаОтчета = УправлениеНебольшойФирмойПовтИсп.ПолучитьВалютуУчета();
	Иначе
		ВалютаОтчета = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериода", Объект.ПериодПланирования.ДатаНачала);
	Если Объект.ОтображатьБолееРанниеПлатежи Тогда
		Запрос.УстановитьПараметр("НачалоПериодаОтбор", '00010101');
	Иначе
		Запрос.УстановитьПараметр("НачалоПериодаОтбор", Объект.ПериодПланирования.ДатаНачала);
	КонецЕсли;
	Запрос.УстановитьПараметр("КонецПериода", Объект.ПериодПланирования.ДатаОкончания);
	Запрос.УстановитьПараметр("ВалютаУчета", УправлениеНебольшойФирмойПовтИсп.ПолучитьВалютуУчета());
	Запрос.УстановитьПараметр("ВВалютеПлатежа", ВВалютеПлатежа);
	Запрос.УстановитьПараметр("ВалютаОтчета", ВалютаОтчета);
	Запрос.УстановитьПараметр("ПланироватьПоДням", Объект.ПланироватьПоДням);
	Запрос.УстановитьПараметр("ОтображатьБолееРанниеПлатежи", Объект.ОтображатьБолееРанниеПлатежи);
	
	Для каждого СтрокаОтбора Из ДанныеМеток Цикл
		
		Если НЕ Запрос.Параметры.Свойство(СтрокаОтбора.ИмяПоляОтбора) Тогда
			 Запрос.УстановитьПараметр(СтрокаОтбора.ИмяПоляОтбора, Новый Массив);
		КонецЕсли;
		
		Запрос.Параметры[СтрокаОтбора.ИмяПоляОтбора].Добавить(СтрокаОтбора.Метка);
		
	КонецЦикла;
	
	Возврат Запрос;
	
КонецФункции

// Возвращает структуру с параметрами используемых группировок отчета.
//
// Параметры:
//  Объект - ОтчетОбъект.ПлатежныйКалендарь - объект отчета, настройки которого необходимо использовать для формирования
//                                            запроса.
//
// Возвращаемое значение:
//  ПараметрыГруппировок - структура с параметрами группировок.
//
Функция ПолучитьПараметрыГруппировокДерева(Объект) Экспорт
	
	ПараметрыГруппировок = Новый Структура;
	ПараметрыГруппировок.Вставить("КоличествоУровней", 1);
	ПараметрыГруппировок.КоличествоУровней = ПараметрыГруппировок.КоличествоУровней + ?(Объект.ОтображатьОрганизацию, 1, 0);
	ПараметрыГруппировок.КоличествоУровней = ПараметрыГруппировок.КоличествоУровней + ?(Объект.ОтображатьТипДС, 	  1, 0);
	ПараметрыГруппировок.КоличествоУровней = ПараметрыГруппировок.КоличествоУровней + ?(Объект.ОтображатьСчетКассу,   1, 0);
	ПараметрыГруппировок.КоличествоУровней = ПараметрыГруппировок.КоличествоУровней + ?(Объект.ОтображатьСтатью, 	  1, 0);
	ПараметрыГруппировок.КоличествоУровней = ПараметрыГруппировок.КоличествоУровней + ?(Объект.ОтображатьКонтрагента, 1, 0);
	
	ПараметрыГруппировок.Вставить("Аналитика", Новый Массив);
	
	Если Объект.ОтображатьОрганизацию Тогда
		ПараметрыГруппировок.Аналитика.Добавить(Перечисления.АналитикаПлатежногоКалендаря.Организация);
	КонецЕсли;
	
	Если Объект.ОтображатьТипДС Тогда
		ПараметрыГруппировок.Аналитика.Добавить(Перечисления.АналитикаПлатежногоКалендаря.ТипДенежныхСредств);
	КонецЕсли;
	
	Если Объект.ОтображатьСчетКассу Тогда
		ПараметрыГруппировок.Аналитика.Добавить(Перечисления.АналитикаПлатежногоКалендаря.БанковскийСчетКасса);
	КонецЕсли;
	
	Если Объект.ОтображатьСтатью Тогда
		ПараметрыГруппировок.Аналитика.Добавить(Перечисления.АналитикаПлатежногоКалендаря.Статья);
	КонецЕсли;
	
	Если Объект.ОтображатьКонтрагента Тогда
		ПараметрыГруппировок.Аналитика.Добавить(Перечисления.АналитикаПлатежногоКалендаря.Контрагент);
	КонецЕсли;
	
	ПараметрыГруппировок.Аналитика.Добавить(Перечисления.АналитикаПлатежногоКалендаря.Документ);
	
	Возврат ПараметрыГруппировок;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьКлючОбъекта()
	
	Возврат "ОтчетПлатежныйКалендарь"; // Не локализуется
	
КонецФункции

#КонецОбласти

#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Переменные

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;

Перем мВерсияОтчета Экспорт;

#Область ПеременныеКонтрольныхСоотношений2020

Перем ДанныеКС;

Перем Документирование;

Перем ТаблицаОписаний;

#КонецОбласти

#Область ПеременныеКонтрольныхСоотношенийОбщие

Перем СчетчикФормулДляРасшифровок;

Перем СписокРасшифровкиПоказателей;

Перем СписокРасшифровкиформулы;

Перем ПараметрыКС;

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеРегламентированногоОтчета

Функция СформироватьАвтоматическиРеглОтчет(ПараметрыАвтоформирования, КорректирующийОтчет) Экспорт
	
	ИмяФормы = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	ПодготовленныйРеглОтчет = ПодготовленныйРеглОтчет(ИмяФормы, ПараметрыАвтоформирования, КорректирующийОтчет);
	
	РазделыОтчета       = ПодготовленныйРеглОтчет.РазделыОтчета;
	ДанныеРеглОтчета    = ПодготовленныйРеглОтчет.ДанныеРеглОтчета;
	ДеревоСтраницОтчета = ПодготовленныйРеглОтчет.ДеревоСтраницОтчета;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ПараметрыАвтоформирования.ИсточникОтчета);
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", ПараметрыАвтоформирования.ИмяФормыОтчета);
	ПараметрыЗаписи.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыЗаписи.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыЗаписи.Вставить("СохраняемыйРеглОтчет", ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет);
	ПараметрыЗаписи.Вставить("Ошибки", ПараметрыАвтоформирования.Ошибки);
	ПараметрыЗаписи.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	ПараметрыЗаписи.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПараметрыЗаписи.Вставить("ТочностьЕдиницыИзмерения", 0);
	ПараметрыЗаписи.Вставить("Комментарий", "");
	ПараметрыЗаписи.Вставить("КодИФНС", РазделыОтчета.Титульный.НалоговыйОрган);
	ПараметрыЗаписи.Вставить("КПП", РазделыОтчета.Титульный.КПП);
	ПараметрыЗаписи.Вставить("СтруктураМногоуровневыхРазделов", ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов);
	ПараметрыЗаписи.Вставить("СтруктураРеквизитовФормы", ДанныеРеглОтчета.СтруктураРеквизитовФормы);
	ПараметрыЗаписи.Вставить("ВерсияФормы", ДанныеРеглОтчета.СтруктураРеквизитовФормы.мВерсияФормы);
	ПараметрыЗаписи.Вставить("ФлОтклВыборЗначений", Ложь);
	ПараметрыЗаписи.Вставить("Автозаполнение", Ложь);
	ПараметрыЗаписи.Вставить("ПечатьБезШтрихкодаРазрешена", Неопределено);
	ПараметрыЗаписи.Вставить("ФлПодсчетСтраниц", Неопределено);
	ПараметрыЗаписи.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	ПараметрыЗаписи.Вставить("Вариант", ?(КорректирующийОтчет, 1, 0));
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыОтчета);
	ПараметрыЗаписи.Вставить("НаименованиеОтчета", ДанныеРеглОтчета.СтруктураРеквизитовФормы.НаименованиеОтчета);
	ПараметрыЗаписи.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	
	Возврат ЗаписатьРеглОтчет(ИмяФормы, ПараметрыЗаписи);
	
КонецФункции

Функция ПодготовленныйРеглОтчет(ИмяФормы, ПараметрыАвтоформирования, КорректирующийОтчет)
	
	РазделыОтчета = РазделыРеглОтчета(ИмяФормы);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	ПараметрыАвтоФормирования.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	
	ЗаполнитьРеглОтчет(ИмяФормы,
					   ПараметрыАвтоформирования,
					   КорректирующийОтчет,
					   РазделыОтчета,
					   ДанныеРеглОтчета);
		
	РазделыОтчета.Титульный.НомерКорректировки = ПараметрыАвтоФормирования.НомерКорректировки;
	
	Если НЕ ПараметрыАвтоформирования.Свойство("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати") Тогда
		
		РазделыОтчета.Титульный.КПП            = ПараметрыАвтоформирования.Организация.КПП;
		РазделыОтчета.Титульный.НалоговыйОрган = ПараметрыАвтоформирования.Организация.КодНалоговогоОргана;
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Период =
		Формат(ДанныеРеглОтчета.СтруктураРеквизитовФормы.КодОтчетногоПериода["НеЗаполненКодФормыРеорганизации_"
			   + Месяц(ПараметрыАвтоформирования.ДатаОкончания)],
			   "ЧЦ=2; ЧВН=");
	РазделыОтчета.Титульный.ОтчетГод    = Формат(ПараметрыАвтоформирования.ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.ВидДокумента = ?(КорректирующийОтчет, 1, 0);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ЗаполнитьСведенияОбОрганизации(ИмяФормы,
									   ДанныеРеглОтчета.СтруктураРеквизитовФормы,
									   ДанныеРеглОтчета.ДатаПодписи,
									   РазделыОтчета.Титульный);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ЗаполнитьСведенияОбОрганизации(ИмяФормы,
									   ДанныеРеглОтчета.СтруктураРеквизитовФормы,
									   ДанныеРеглОтчета.ДатаПодписи,
									   РазделыОтчета.Титульный,
									   РазделыОтчета.ФизЛицо);
		
	КонецЕсли;
	
	ДеревоСтраницОтчета = СтруктураСтраницОтчета(ИмяФормы, ПараметрыАвтоформирования.ДатаОкончания);
	
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ИзменитьНастройкиРазделов(ИмяФормы, РазделыОтчета, ДанныеРеглОтчета);
	
	ПодготовленныйРеглОтчет = Новый Структура;
	ПодготовленныйРеглОтчет.Вставить("РазделыОтчета",       РазделыОтчета);
	ПодготовленныйРеглОтчет.Вставить("ДанныеРеглОтчета",    ДанныеРеглОтчета);
	ПодготовленныйРеглОтчет.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	Возврат ПодготовленныйРеглОтчет;
	
КонецФункции

Процедура СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	СтруктураРеквизитовФормы = Новый Структура;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "01/10/" + Лев(Прав(СокрЛП(ИмяФормы), 7), 4));
	Иначе
		СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "01/01/" + Лев(Прав(СокрЛП(ИмяФормы), 7), 4));
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("НаименованиеОтчета", "Расчет по страховым взносам");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("НачальноеЗначениеНаимОрганизации", "");
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуЗаполнить", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуРасшифровать", Ложь);
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели", Новый Структура);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД", "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов", Новый СписокЗначений);
	СтруктураРеквизитовФормы.Вставить("мПечатныеформы", Новый СписокЗначений);
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1М2");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы11131М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы11132М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы111М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы12М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы151М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы18М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы19М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы21М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы321М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы322М1");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1М2");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы11131М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы11132М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы111М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы12М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы18М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы19М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы21М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы321М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы322М1");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1М2");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы11131М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы11132М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы1114М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы18М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы19М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы110М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы110М2");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы21М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы321М1");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы322М1");
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГруппы");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГрафы");
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мПечатьБезШтрихкодаРазрешена");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("ИП");
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("НомераСтрокМногоуровнегоРаздела");
	СтруктураРеквизитовФормы.Вставить("СтруктураМногострочныхЧастей");
	СтруктураРеквизитовФормы.Вставить("ИдентификаторЗадания");
	СтруктураРеквизитовФормы.Вставить("РезультатЗапускаАвтозаполненияПриСоздании");
	СтруктураРеквизитовФормы.Вставить("АдресВоВременномХранилище");
	СтруктураРеквизитовФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417");
	СтруктураРеквизитовФормы.Вставить("СправочникиВидыКонтактнойИнформацииФактАдресОрганизации");
	СтруктураРеквизитовФормы.Вставить("ТекстДляЗаголовочнойЧасти");
	СтруктураРеквизитовФормы.Вставить("СформироватьФормуОтчетаАвтоматически");
	СтруктураРеквизитовФормы.Вставить("КодОтчетногоПериода");
	СтруктураРеквизитовФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки");
	СтруктураРеквизитовФормы.Вставить("КонтрольныеСоотношенияАдресФормул");
	СтруктураРеквизитовФормы.Вставить("КонтрольныеСоотношенияАдресПоказателей");
	
	// ПроцессыОбработкиДокументов
	//
	СтруктураРеквизитовФормы.Вставить("ПустаяСсылкаНаРегламентированныйОтчет",
	Документы.РегламентированныйОтчет.ПустаяСсылка());
	//
	// ПроцессыОбработкиДокументов
	
КонецПроцедуры

Процедура ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	// Свойства, общие для всех многострочных групп.
	СтруктураРеквизитовФормы.ДлинаИмениГруппы = 8;
	СтруктураРеквизитовФормы.ДлинаИмениГрафы  = 13;
	
	// Структура с описанием свойств каждой группы в отдельности.
	СтруктураМногострочныхЧастей = Новый Структура;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		// Идентификаторы многострочных групп.
		СтруктураРеквизитовФормы.мИдГруппы1М1     = "П00001М1";
		СтруктураРеквизитовФормы.мИдГруппы1М2     = "П00001М2";
		СтруктураРеквизитовФормы.мИдГруппы11131М1 = "П11131М1";
		СтруктураРеквизитовФормы.мИдГруппы11132М1 = "П11132М1";
		СтруктураРеквизитовФормы.мИдГруппы111М1   = "П00111М1";
		СтруктураРеквизитовФормы.мИдГруппы12М1    = "П00012М1";
		СтруктураРеквизитовФормы.мИдГруппы151М1   = "П00151М1";
		СтруктураРеквизитовФормы.мИдГруппы18М1    = "П00018М1";
		СтруктураРеквизитовФормы.мИдГруппы19М1    = "П00019М1";
		СтруктураРеквизитовФормы.мИдГруппы21М1    = "П00021М1";
		СтруктураРеквизитовФормы.мИдГруппы321М1   = "П00321М1";
		СтруктураРеквизитовФормы.мИдГруппы322М1   = "П00322М1";
		
		// Группа П00001М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00001М106001");
		ИменаГраф.Добавить("П00001М107001");
		ИменаГраф.Добавить("П00001М107101");
		ИменаГраф.Добавить("П00001М107201");
		ИменаГраф.Добавить("П00001М107301");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00001М2.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00001М208001");
		ИменаГраф.Добавить("П00001М209001");
		ИменаГраф.Добавить("П00001М209101");
		ИменаГраф.Добавить("П00001М209201");
		ИменаГраф.Добавить("П00001М209301");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П11131М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П11131М100101");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П11131М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы11131М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П11132М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П11132М100101");
		ИменаГраф.Добавить("П11132М100201");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П11132М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы11132М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00111М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00111М100101");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П00111М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы111М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00012М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00012М100101");
		ИменаГраф.Добавить("П00012М100201");
		Для НомСтр = 1 По 6 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П00012М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
			Если НомСтр = 1 ИЛИ НомСтр = 5 Тогда
				Для НомКол = 1 По 4 Цикл
					ИменаГраф.Добавить("П00012М10" + НомСтр + "50" + НомКол);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы12М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П000151М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00151М100101");
		ИменаГраф.Добавить("П00151М101002");
		ИменаГраф.Добавить("П00151М101003");
		ИменаГраф.Добавить("П00151М102002");
		ИменаГраф.Добавить("П00151М102003");
		ИменаГраф.Добавить("П00151М103002");
		ИменаГраф.Добавить("П00151М103003");
		ИменаГраф.Добавить("П00151М104002");
		ИменаГраф.Добавить("П00151М104003");
		ИменаГраф.Добавить("П00151М105002");
		ИменаГраф.Добавить("П00151М105003");
		ИменаГраф.Добавить("П00151М106002");
		ИменаГраф.Добавить("П00151М106003");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы151М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00018М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00018М102001");
		ИменаГраф.Добавить("П00018М103001");
		ИменаГраф.Добавить("П00018М104001");
		ИменаГраф.Добавить("П00018М105001");
		ИменаГраф.Добавить("П00018М106001");
		ИменаГраф.Добавить("П00018М107001");
		ИменаГраф.Добавить("П00018М108001");
		ИменаГраф.Добавить("П00018М108002");
		ИменаГраф.Добавить("П00018М108003");
		ИменаГраф.Добавить("П00018М108004");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы18М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00019М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00019М102001");
		ИменаГраф.Добавить("П00019М103001");
		ИменаГраф.Добавить("П00019М104001");
		ИменаГраф.Добавить("П00019М105001");
		ИменаГраф.Добавить("П00019М106001");
		ИменаГраф.Добавить("П00019М107001");
		ИменаГраф.Добавить("П00019М108001");
		ИменаГраф.Добавить("П00019М108002");
		ИменаГраф.Добавить("П00019М108003");
		ИменаГраф.Добавить("П00019М108004");
		ИменаГраф.Добавить("П00019М109001");
		ИменаГраф.Добавить("П00019М110001");
		ИменаГраф.Добавить("П00019М111001");
		ИменаГраф.Добавить("П00019М112001");
		ИменаГраф.Добавить("П00019М113001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы19М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00021М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00021М101001");
		ИменаГраф.Добавить("П00021М102001");
		ИменаГраф.Добавить("П00021М103001");
		ИменаГраф.Добавить("П00021М104001");
		ИменаГраф.Добавить("П00021М105001");
		ИменаГраф.Добавить("П00021М106001");
		ИменаГраф.Добавить("П00021М106301");
		ИменаГраф.Добавить("П00021М106501");
		ИменаГраф.Добавить("П00021М106701");
		ИменаГраф.Добавить("П00021М106702");
		ИменаГраф.Добавить("П00021М107001");
		ИменаГраф.Добавить("П00021М108001");
		ИменаГраф.Добавить("П00021М109001");
		ИменаГраф.Добавить("П00021М109002");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы21М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00321М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00321М112001");
		ИменаГраф.Добавить("П00321М113001");
		ИменаГраф.Добавить("П00321М114001");
		ИменаГраф.Добавить("П00321М115001");
		ИменаГраф.Добавить("П00321М116001");
		ИменаГраф.Добавить("П00321М117001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы321М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00322М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00322М118001");
		ИменаГраф.Добавить("П00322М119001");
		ИменаГраф.Добавить("П00322М120001");
		ИменаГраф.Добавить("П00322М121001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы322М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		// Идентификаторы многострочных групп.
		СтруктураРеквизитовФормы.мИдГруппы1М1     = "П00001М1";
		СтруктураРеквизитовФормы.мИдГруппы1М2     = "П00001М2";
		СтруктураРеквизитовФормы.мИдГруппы11131М1 = "П11131М1";
		СтруктураРеквизитовФормы.мИдГруппы11132М1 = "П11132М1";
		СтруктураРеквизитовФормы.мИдГруппы111М1   = "П00111М1";
		СтруктураРеквизитовФормы.мИдГруппы12М1    = "П00012М1";
		СтруктураРеквизитовФормы.мИдГруппы18М1    = "П00018М1";
		СтруктураРеквизитовФормы.мИдГруппы19М1    = "П00019М1";
		СтруктураРеквизитовФормы.мИдГруппы21М1    = "П00021М1";
		СтруктураРеквизитовФормы.мИдГруппы321М1   = "П00321М1";
		СтруктураРеквизитовФормы.мИдГруппы322М1   = "П00322М1";
		
		// Группа П00001М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00001М106001");
		ИменаГраф.Добавить("П00001М107001");
		ИменаГраф.Добавить("П00001М107101");
		ИменаГраф.Добавить("П00001М107201");
		ИменаГраф.Добавить("П00001М107301");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00001М2.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00001М208001");
		ИменаГраф.Добавить("П00001М209001");
		ИменаГраф.Добавить("П00001М209101");
		ИменаГраф.Добавить("П00001М209201");
		ИменаГраф.Добавить("П00001М209301");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П11131М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П11131М100101");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П11131М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы11131М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П11132М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П11132М100101");
		ИменаГраф.Добавить("П11132М100201");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П11132М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы11132М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00111М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00111М100101");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П00111М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы111М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00012М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00012М100101");
		ИменаГраф.Добавить("П00012М100201");
		Для НомСтр = 1 По 6 Цикл
			Для НомКол = 1 По 4 Цикл
				ИменаГраф.Добавить("П00012М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
			Если НомСтр = 1 ИЛИ НомСтр = 5 Тогда
				Для НомКол = 1 По 4 Цикл
					ИменаГраф.Добавить("П00012М10" + НомСтр + "50" + НомКол);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы12М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00018М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00018М102001");
		ИменаГраф.Добавить("П00018М103001");
		ИменаГраф.Добавить("П00018М104001");
		ИменаГраф.Добавить("П00018М105001");
		ИменаГраф.Добавить("П00018М106001");
		ИменаГраф.Добавить("П00018М107001");
		ИменаГраф.Добавить("П00018М108001");
		ИменаГраф.Добавить("П00018М108002");
		ИменаГраф.Добавить("П00018М108003");
		ИменаГраф.Добавить("П00018М108004");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы18М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00019М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00019М102001");
		ИменаГраф.Добавить("П00019М103001");
		ИменаГраф.Добавить("П00019М104001");
		ИменаГраф.Добавить("П00019М105001");
		ИменаГраф.Добавить("П00019М106001");
		ИменаГраф.Добавить("П00019М107001");
		ИменаГраф.Добавить("П00019М108001");
		ИменаГраф.Добавить("П00019М108002");
		ИменаГраф.Добавить("П00019М108003");
		ИменаГраф.Добавить("П00019М108004");
		ИменаГраф.Добавить("П00019М109001");
		ИменаГраф.Добавить("П00019М110001");
		ИменаГраф.Добавить("П00019М111001");
		ИменаГраф.Добавить("П00019М112001");
		ИменаГраф.Добавить("П00019М113001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы19М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00021М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00021М101001");
		ИменаГраф.Добавить("П00021М102001");
		ИменаГраф.Добавить("П00021М103001");
		ИменаГраф.Добавить("П00021М104001");
		ИменаГраф.Добавить("П00021М105001");
		ИменаГраф.Добавить("П00021М106001");
		ИменаГраф.Добавить("П00021М106301");
		ИменаГраф.Добавить("П00021М106501");
		ИменаГраф.Добавить("П00021М106701");
		ИменаГраф.Добавить("П00021М106702");
		ИменаГраф.Добавить("П00021М107001");
		ИменаГраф.Добавить("П00021М108001");
		ИменаГраф.Добавить("П00021М109001");
		ИменаГраф.Добавить("П00021М109002");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы21М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00321М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00321М112001");
		ИменаГраф.Добавить("П00321М113001");
		ИменаГраф.Добавить("П00321М114001");
		ИменаГраф.Добавить("П00321М115001");
		ИменаГраф.Добавить("П00321М116001");
		ИменаГраф.Добавить("П00321М117001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы321М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00322М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00322М118001");
		ИменаГраф.Добавить("П00322М119001");
		ИменаГраф.Добавить("П00322М120001");
		ИменаГраф.Добавить("П00322М121001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппы322М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		// Идентификаторы многострочных групп.
		СтруктураРеквизитовФормы.мИдГруппы1М1     = "П00001М1";
		СтруктураРеквизитовФормы.мИдГруппы1М2     = "П00001М2";
		СтруктураРеквизитовФормы.мИдГруппы11131М1 = "П11131М1";
		СтруктураРеквизитовФормы.мИдГруппы11132М1 = "П11132М1";
		СтруктураРеквизитовФормы.мИдГруппы1114М1  = "П01114М1";
		СтруктураРеквизитовФормы.мИдГруппы18М1    = "П00018М1";
		СтруктураРеквизитовФормы.мИдГруппы19М1    = "П00019М1";
		СтруктураРеквизитовФормы.мИдГруппы110М1   = "П00110М1";
		СтруктураРеквизитовФормы.мИдГруппы110М2   = "П00110М2";
		СтруктураРеквизитовФормы.мИдГруппы21М1    = "П00021М1";
		СтруктураРеквизитовФормы.мИдГруппы321М1   = "П00321М1";
		СтруктураРеквизитовФормы.мИдГруппы322М1   = "П00322М1";
		
		// Группа П00001М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00001М106001");
		ИменаГраф.Добавить("П00001М107001");
		ИменаГраф.Добавить("П00001М107101");
		ИменаГраф.Добавить("П00001М107201");
		ИменаГраф.Добавить("П00001М107301");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00001М2.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00001М208001");
		ИменаГраф.Добавить("П00001М209001");
		ИменаГраф.Добавить("П00001М209101");
		ИменаГраф.Добавить("П00001М209201");
		ИменаГраф.Добавить("П00001М209301");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П11131М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П11131М100101");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 5 Цикл
				ИменаГраф.Добавить("П11131М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы11131М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П11132М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П11132М100101");
		ИменаГраф.Добавить("П11132М100201");
		ИменаГраф.Добавить("П11132М100301");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 5 Цикл
				ИменаГраф.Добавить("П11132М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы11132М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П01114М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П01114М100101");
		Для НомСтр = 1 По 5 Цикл
			Для НомКол = 1 По 5 Цикл
				ИменаГраф.Добавить("П01114М10" + НомСтр + "00" + НомКол);
			КонецЦикла;
		КонецЦикла;
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1114М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00018М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00018М102001");
		ИменаГраф.Добавить("П00018М103001");
		ИменаГраф.Добавить("П00018М104001");
		ИменаГраф.Добавить("П00018М105001");
		ИменаГраф.Добавить("П00018М106001");
		ИменаГраф.Добавить("П00018М106002");
		ИменаГраф.Добавить("П00018М106003");
		ИменаГраф.Добавить("П00018М106004");
		ИменаГраф.Добавить("П00018М106005");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы18М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00019М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00019М102001");
		ИменаГраф.Добавить("П00019М103001");
		ИменаГраф.Добавить("П00019М104001");
		ИменаГраф.Добавить("П00019М105001");
		ИменаГраф.Добавить("П00019М106001");
		ИменаГраф.Добавить("П00019М107001");
		ИменаГраф.Добавить("П00019М107002");
		ИменаГраф.Добавить("П00019М108001");
		ИменаГраф.Добавить("П00019М108002");
		ИменаГраф.Добавить("П00019М108003");
		ИменаГраф.Добавить("П00019М108004");
		ИменаГраф.Добавить("П00019М108005");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы19М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00110М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00110М102001");
		ИменаГраф.Добавить("П00110М103001");
		ИменаГраф.Добавить("П00110М104001");
		ИменаГраф.Добавить("П00110М105001");
		ИменаГраф.Добавить("П00110М106001");
		ИменаГраф.Добавить("П00110М107001");
		ИменаГраф.Добавить("П00110М108001");
		ИменаГраф.Добавить("П00110М109001");
		ИменаГраф.Добавить("П00110М110001");
		ИменаГраф.Добавить("П00110М110002");
		ИменаГраф.Добавить("П00110М110003");
		ИменаГраф.Добавить("П00110М110004");
		ИменаГраф.Добавить("П00110М110005");
		ИменаПодчиненныхГрупп = Новый Массив;
		ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппы110М2);
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы110М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00110М2.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00110М211001");
		ИменаГраф.Добавить("П00110М212001");
		ИменаГраф.Добавить("П00110М213001");
		ИменаГраф.Добавить("П00110М214001");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы110М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
		
		// Группа П00021М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00021М101001");
		ИменаГраф.Добавить("П00021М102001");
		ИменаГраф.Добавить("П00021М103001");
		ИменаГраф.Добавить("П00021М104001");
		ИменаГраф.Добавить("П00021М105001");
		ИменаГраф.Добавить("П00021М106001");
		ИменаГраф.Добавить("П00021М107001");
		ИменаГраф.Добавить("П00021М108001");
		ИменаГраф.Добавить("П00021М109001");
		ИменаГраф.Добавить("П00021М109002");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы21М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00321М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00321М119001");
		ИменаГраф.Добавить("П00321М120001");
		ИменаГраф.Добавить("П00321М121001");
		ИменаГраф.Добавить("П00321М122001");
		ИменаГраф.Добавить("П00321М123001");
		ИменаГраф.Добавить("П00321М124001");
		
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы321М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
		// Группа П00322М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00322М126001");
		ИменаГраф.Добавить("П00322М127001");
		ИменаГраф.Добавить("П00322М128001");
		ИменаГраф.Добавить("П00322М129001");
		
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы322М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей = СтруктураМногострочныхЧастей;
	
КонецПроцедуры

Процедура ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
												СтруктураРеквизитовФормы,
												СтруктураМногоуровневыхРазделов) Экспорт
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = Новый Массив;
	
	// Формирование структуры свойств многоуровневых разделов.
	//
	СтруктураМногоуровневыхРазделов = Новый Структура;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М1);
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М2);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаПодчиненныхРазделов = Новый Массив;
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_1и1_2");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_1");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_2");
		СтруктураРаздела.Вставить("ИменаПодчиненныхРазделов", ИменаПодчиненныхРазделов);
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подразделы 1.1, 1.2");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_1и1_2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11131М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.1");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11132М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.2");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы111М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1_1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы12М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил3", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил4", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил5", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы151М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил5_1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил6", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил7", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы18М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил8", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы19М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил9", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы21М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы321М1);
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы322М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М1);
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М2);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаПодчиненныхРазделов = Новый Массив;
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_1и1_2");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_1");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_2");
		СтруктураРаздела.Вставить("ИменаПодчиненныхРазделов", ИменаПодчиненныхРазделов);
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подразделы 1.1, 1.2");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_1и1_2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11131М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.1");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11132М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.2");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы111М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1_1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы12М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил3", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил4", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил5", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил6", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил7", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы18М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил8", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы19М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил9", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы21М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы321М1);
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы322М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М1);
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М2);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаПодчиненныхРазделов = Новый Массив;
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_1и1_2");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_1");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_2");
		ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_4");
		СтруктураРаздела.Вставить("ИменаПодчиненныхРазделов", ИменаПодчиненныхРазделов);
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подразделы 1.1, 1.2");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_1и1_2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11131М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.1");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_1", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11132М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.2");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1114М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
		СтруктураРаздела.Вставить("Подчиненность");
		СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.4");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_4", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил3", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил4", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил5_6", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил7", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы18М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил8", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы19М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил9", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы110М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил10", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы21М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы321М1);
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы322М1);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
		
	КонецЕсли;
	
	// Формирование начальной структуры дерева разделов
	// с заполнением каждого уровня пустыми данными.
	//
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Данные");
	ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для каждого Элем Из СтруктураМногоуровневыхРазделов Цикл
		Если Элем.Значение.Свойство("Подчиненность") Тогда
			Продолжить;
		КонецЕсли;
		
		ДеревоДанныхРаздела = ДеревоДанных.Скопировать();
		ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + Элем.Ключ));
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
														Элем.Ключ,
														СтруктураМногоуровневыхРазделов,
														ТабличныйДокумент,
														СтруктураРеквизитовФормы);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		ИнициализироватьПодчиненныеРазделы(ИмяФормы,
										   Элем.Ключ,
										   ТекВетка,
										   СтруктураМногоуровневыхРазделов,
										   ТабличныйДокумент,
										   СтруктураРеквизитовФормы);
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			// Особая обработка текста в строке 020 Приложения 9 к Разделу 1.
			Если Элем.Ключ = "Раздел1Прил9" Тогда
				МнЧ_П00019М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
				МнЧ_П00019М1.Строки[0].Данные.Вставить("П00019М102001", "00001");
			КонецЕсли;
			
		ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
			
			// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
			Если Элем.Ключ = "Раздел1Прил10" Тогда
				МнЧ_П00110М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
				МнЧ_П00110М1.Строки[0].Данные.Вставить("П00110М102001", "00001");
				МнЧ_П00110М2 = МнЧ_П00110М1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
				МнЧ_П00110М2.Строки[0].Данные.Вставить("П00110М211001", "00001");
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ СтруктураРеквизитовФормы.Свойство("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ) Тогда
			СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ, Неопределено);
		КонецЕсли;
		
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоДанныхРаздела, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Элем.Ключ]);
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеТабличногоДокумента(ИмяФормы,
								  НаимРаздела,
								  СтруктураМногоуровневыхРазделов,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы) Экспорт
	
	ДанныеТаблДокумента = Новый Структура;
	
	// Многоуровневые разделы.
	//
	Если СтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		СтруктураРаздела = СтруктураМногоуровневыхРазделов[НаимРаздела];
		
		ИменаГруппМнЧ = Неопределено;
		СтруктураРаздела.Свойство("ИменаГруппМнЧ", ИменаГруппМнЧ);
		РазделСодержитМнЧ = (ИменаГруппМнЧ <> Неопределено);
		
		СтруктураДанных = Новый Структура();
		Для Каждого ТекущаяОбласть Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(ТекущаяОбласть), "Рисунок") = 0
				И ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекущаяОбласть.СодержитЗначение = Истина Тогда
				Если РазделСодержитМнЧ Тогда
					Если РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(СтруктураРеквизитовФормы,
																					ТекущаяОбласть.Имя) = Неопределено Тогда
						СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
					КонецЕсли;
				Иначе
					СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДанныеТаблДокумента.Вставить("Данные", СтруктураДанных);
		
		СтруктураДанныхМногострочныхЧастей = Новый Структура;
		Если РазделСодержитМнЧ Тогда
			Для каждого ИмяГруппыМнЧ Из СтруктураРаздела["ИменаГруппМнЧ"] Цикл
				ЭлемСтруктуры = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
				Если ЭлемСтруктуры["УровеньПодчинения"] = 0 Тогда
					ДеревоДанных = Новый ДеревоЗначений;
					ДеревоДанных.Колонки.Добавить("Данные");
					ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
					СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
						ИмяФормы, СтруктураРеквизитовФормы, ТабличныйДокумент, ИмяГруппыМнЧ, ДеревоДанных);
					СтруктураДанныхМногострочныхЧастей.Вставить(ИмяГруппыМнЧ, ДеревоДанных);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ДанныеТаблДокумента.Вставить("ДанныеМногострочныхЧастей", СтруктураДанныхМногострочныхЧастей);
		
	// Обычные разделы.
	//
	Иначе
		
		Для Инд = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
			
			ТекОбласть = ТабличныйДокумент.Области[Инд];
			
			Если СтрЧислоВхождений(Тип(ТекОбласть), "Рисунок") = 0
				И ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекОбласть.СодержитЗначение = Истина Тогда
				
				ДанныеТаблДокумента.Вставить(ТекОбласть.Имя, ТекОбласть.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеТаблДокумента;
	
КонецФункции

Процедура ИнициализироватьПодчиненныеРазделы(ИмяФормы,
											 Знач ИмяРаздела,
											 Ветка,
											 СтруктураМногоуровневыхРазделов,
											 ТабличныйДокумент,
											 СтруктураРеквизитовФормы) Экспорт
	
	Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
		
		ИменаПодчРазделов = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
		Для каждого ИмяПодчРаздела Из ИменаПодчРазделов Цикл
			ПодчВетка = Ветка.Строки.Добавить().Строки.Добавить();
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяПодчРаздела));
			
			ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
															ИмяПодчРаздела,
															СтруктураМногоуровневыхРазделов,
															ТабличныйДокумент,
															СтруктураРеквизитовФормы);
									
			ПодчВетка.Данные = ДанныеТаблДокумента.Данные;
			ПодчВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
			
			ИнициализироватьПодчиненныеРазделы(ИмяФормы,
											   ИмяПодчРаздела,
											   ПодчВетка,
											   СтруктураМногоуровневыхРазделов,
											   ТабличныйДокумент,
											   СтруктураРеквизитовФормы);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьОбычныеРазделы(ИмяФормы,
										 СтруктураРеквизитовФормы,
										 СтруктураМногоуровневыхРазделов,
										 СтруктураДанныхРазделов,
										 МассивИменРазделов = Неопределено) Экспорт
	
	Если МассивИменРазделов = Неопределено Тогда
		
		МассивИменРазделов = Новый Массив;
		МассивИменРазделов.Добавить("Титульный");
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
			
			МассивИменРазделов.Добавить("ФизЛицо");
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого ИмяРаздела Из МассивИменРазделов Цикл
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяРаздела));
		
		СохранитьДанныеРаздела(ИмяФормы,
							   СтруктураРеквизитовФормы,
							   СтруктураМногоуровневыхРазделов,
							   СтруктураДанныхРазделов,
							   ТабличныйДокумент,
							   ИмяРаздела);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СохранитьДанныеРаздела(ИмяФормы,
								 СтруктураРеквизитовФормы,
								 СтруктураМногоуровневыхРазделов,
								 СтруктураДанныхРазделов,
								 ТабличныйДокумент,
								 НаимРаздела,
								 ВеткаРаздела = Неопределено) Экспорт
	
	// Многоуровневые разделы.
	Если СтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		Если ВеткаРаздела = Неопределено Тогда
			
			СтруктураРаздела = СтруктураМногоуровневыхРазделов[НаимРаздела];
			
			ИмяГлРаздела = Неопределено;
			СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
			ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, НаимРаздела, ИмяГлРаздела);
			
			ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
			
			ТекВетка = ДеревоДанныхРаздела;
			
			Для Каждого НомерСтроки Из СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела Цикл
				ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
			КонецЦикла;
			
		Иначе
			
			ТекВетка = ВеткаРаздела;
			
		КонецЕсли;
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
														НаимРаздела,
														СтруктураМногоуровневыхРазделов,
														ТабличныйДокумент,
														СтруктураРеквизитовФормы);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоДанныхРаздела, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		ДеревоДанныхРаздела = Неопределено;
		
	// Обычные разделы.
	Иначе
		
		СтруктураДанныхРазделов["СтруктураДанных" + НаимРаздела]
			= ДанныеТабличногоДокумента(ИмяФормы,
										НаимРаздела,
		 						  		СтруктураМногоуровневыхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураСтраницОтчета(ИмяФормы, ДатаКонцаПериодаОтчета = Неопределено) Экспорт
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));	
		
	ДеревоСтраницОтчета.Строки.Очистить();
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Титульный";
		СтрокаУровня1.Представление      = "Титульный лист";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1";
		СтрокаУровня1.Представление      = "Раздел 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1";
		СтрокаУровня1.Представление      = "Приложение 1 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1_1";
		СтрокаУровня1.Представление      = "Приложение 1.1 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил2";
		СтрокаУровня1.Представление      = "Приложение 2 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5 = 1;
		ПоказыватьИВыводитьНаПечатьРаздел1Прил5_1         = 1;
		
		Если ТипЗнч(ДатаКонцаПериодаОтчета) = Тип("Дата") Тогда
			
			ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5 = ?(Год(ДатаКонцаПериодаОтчета) = 2020, 1, 0);
			ПоказыватьИВыводитьНаПечатьРаздел1Прил5_1         = ?(Год(ДатаКонцаПериодаОтчета) >= 2021, 1, 0);
			
		КонецЕсли;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил3";
		СтрокаУровня1.Представление      = "Приложение 3 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5;
		СтрокаУровня1.ПоказатьСтраницу   = ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил4";
		СтрокаУровня1.Представление      = "Приложение 4 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5;
		СтрокаУровня1.ПоказатьСтраницу   = ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил5";
		СтрокаУровня1.Представление      = "Приложение 5 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5;
		СтрокаУровня1.ПоказатьСтраницу   = ПоказыватьИВыводитьНаПечатьРаздел1Прил3Прил4Прил5;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил5_1";
		СтрокаУровня1.Представление      = "Приложение 5.1 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = ПоказыватьИВыводитьНаПечатьРаздел1Прил5_1;
		СтрокаУровня1.ПоказатьСтраницу   = ПоказыватьИВыводитьНаПечатьРаздел1Прил5_1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил6";
		СтрокаУровня1.Представление      = "Приложение 6 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил7";
		СтрокаУровня1.Представление      = "Приложение 7 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил8";
		СтрокаУровня1.Представление      = "Приложение 8 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил9";
		СтрокаУровня1.Представление      = "Приложение 9 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел2";
		СтрокаУровня1.Представление      = "Раздел 2";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел3";
		СтрокаУровня1.Представление      = "Раздел 3";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Титульный";
		СтрокаУровня1.Представление      = "Титульный лист";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1";
		СтрокаУровня1.Представление      = "Раздел 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1";
		СтрокаУровня1.Представление      = "Приложение 1 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1_1";
		СтрокаУровня1.Представление      = "Приложение 1.1 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил2";
		СтрокаУровня1.Представление      = "Приложение 2 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил3";
		СтрокаУровня1.Представление      = "Приложение 3 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил4";
		СтрокаУровня1.Представление      = "Приложение 4 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил5";
		СтрокаУровня1.Представление      = "Приложение 5 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил6";
		СтрокаУровня1.Представление      = "Приложение 6 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил7";
		СтрокаУровня1.Представление      = "Приложение 7 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил8";
		СтрокаУровня1.Представление      = "Приложение 8 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил9";
		СтрокаУровня1.Представление      = "Приложение 9 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел2";
		СтрокаУровня1.Представление      = "Раздел 2";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел3";
		СтрокаУровня1.Представление      = "Раздел 3";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Титульный";
		СтрокаУровня1.Представление      = "Титульный лист";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "ФизЛицо";
		СтрокаУровня1.Представление      = "Сведения о физическом лице";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 0;
		СтрокаУровня1.ПоказатьСтраницу   = 0;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1";
		СтрокаУровня1.Представление      = "Раздел 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1";
		СтрокаУровня1.Представление      = "Приложение 1 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил2";
		СтрокаУровня1.Представление      = "Приложение 2 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил3";
		СтрокаУровня1.Представление      = "Приложение 3 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил4";
		СтрокаУровня1.Представление      = "Приложение 4 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил5_6";
		СтрокаУровня1.Представление      = "Приложения 5, 6 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил7";
		СтрокаУровня1.Представление      = "Приложение 7 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил8";
		СтрокаУровня1.Представление      = "Приложение 8 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил9";
		СтрокаУровня1.Представление      = "Приложение 9 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил10";
		СтрокаУровня1.Представление      = "Приложение 10 к Разделу 1";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел2";
		СтрокаУровня1.Представление      = "Раздел 2";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
		СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
		СтрокаУровня1.ИмяСтраницы        = "Раздел3";
		СтрокаУровня1.Представление      = "Раздел 3";
		СтрокаУровня1.ОриентацияСтраницы = "Портрет";
		СтрокаУровня1.ВыводНаПечать      = 1;
		СтрокаУровня1.ПоказатьСтраницу   = 1;
		СтрокаУровня1.ВыгрузитьСтраницу  = 2;
		
	КонецЕсли;
	
	Возврат ДеревоСтраницОтчета;
	
КонецФункции

Функция СтруктураДанныхРазделов(ИмяФормы) Экспорт
	
	СтруктураДанныхРазделов = Новый Структура;
	
	СтруктураДанныхРазделов.Вставить("СтруктураДанныхТитульный", Новый Структура);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		СтруктураДанныхРазделов.Вставить("СтруктураДанныхФизЛицо", Новый Структура);
		
	КонецЕсли;
	
	Возврат СтруктураДанныхРазделов;
	
КонецФункции	

Процедура ЗаполнитьЗначенияПоУмолчанию(ИмяФормы,
									   СтруктураРеквизитовФормы,
									   СтруктураДанныхРазделов) Экспорт
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "120";
		Иначе
			СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "214";
			Если РегламентированнаяОтчетность.ГоловнаяОрганизация(СтруктураРеквизитовФормы.Организация)
				<> СтруктураРеквизитовФормы.Организация Тогда
				СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "222";
			ИначеЕсли РегламентированнаяОтчетностьПереопределяемый.ЭтоИностраннаяОрганизация(
				СтруктураРеквизитовФормы.Организация) Тогда
				СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "335";
			КонецЕсли;
		КонецЕсли;
		
		ДеревоРазд = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
		ДеревоРазд.Строки[0].Данные.Вставить("П000010000101", "2");
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРазд, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
		
		ДеревоРазд = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
		ДеревоРазд.Строки[0].Данные.Вставить("П000110000101", "01");
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРазд, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
		
		ДеревоРазд = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
		ДеревоРазд.Строки[0].Данные.Вставить("П000120009001", "1");
		ДеревоРазд.Строки[0].Данные.Вставить("П000120009003", "1");
		ДеревоРазд.Строки[0].Данные.Вставить("П000120009005", "1");
		ДеревоРазд.Строки[0].Данные.Вставить("П000120009007", "1");
		ДанныеПервойСтрокиМнЧ_12М1 = ДеревоРазд.Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы["мИдГруппы12М1"]].Строки[0].Данные;
		ДанныеПервойСтрокиМнЧ_12М1.Вставить("П00012М100101", "01");
		ДанныеПервойСтрокиМнЧ_12М1.Вставить("П00012М100201", "2");
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРазд, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "120";
		Иначе
			СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту = "214";
		КонецЕсли;
		
		ДеревоПрил1Раздела1 = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
		ДеревоПрил1Раздела1.Строки[0].Данные.Вставить("П000110000101", "01");
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоПрил1Раздела1, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
		
		ДеревоПрил2Раздела1 = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120000101", "2");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009001", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009003", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009005", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009007", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009009", "1");
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоПрил2Раздела1, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКодОтчетногоПериода(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода = Новый Структура;
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_3",  51);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_6",  52);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_9",  53);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("ЗаполненКодФормыРеорганизации_12", 90);
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_3",  21);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_6",  31);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_9",  33);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("НеЗаполненКодФормыРеорганизации_12", 34);
	
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_3",  83);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_6",  84);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_9",  85);
	СтруктураРеквизитовФормы.КодОтчетногоПериода.Вставить("КодПоМесту124_12", 34);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизации(ИмяФормы,
										 СтруктураРеквизитовФормы,
										 ДатаПодписи,
										 СтруктураДанныхТитульный,
										 СтруктураДанныхФизЛицо = Неопределено,
										 ВПрограммеИзмененаДатаПодписи = Ложь) Экспорт
	
	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
	
		СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, ТелОрганизации, ФИО, ОКВЭД";
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		ИНН = СокрЛП(СведенияОбОрганизации.ИННЮЛ);
		КПП = СокрЛП(СведенияОбОрганизации.КППЮЛ);
		
		КодНО = СведенияОбОрганизации.КодНО;
		Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
			КодНО = " " + КодНО;
		КонецЦикла;
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			НаименованиеОрганизации = СведенияОбОрганизации.ФИО;
		Иначе
			НаименованиеОрганизации = СведенияОбОрганизации.НаимЮлПол;
		КонецЕсли;
		
		Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
			
			СтруктураДанныхТитульный.Области.ИНН.Значение = ИНН;
			СтруктураДанныхТитульный.Области.КПП.Значение = КПП;
			
			СтруктураДанныхТитульный.Области.НалоговыйОрган.Значение = КодНО;
			
			СтруктураДанныхТитульный.Области.НаимОрг.Значение = СокрЛП(НаименованиеОрганизации);
		
			СтруктураДанныхТитульный.Области.ТелОрганизации.Значение = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
			
			СтруктураДанныхТитульный.Области.ДатаПодписи.Значение = ДатаПодписи;
			
			ПоМесту = СокрЛП(СтруктураДанныхТитульный.Области.ПоМесту.Значение);
			
		ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
			
			СтруктураДанныхТитульный.ИНН = ИНН;
			СтруктураДанныхТитульный.КПП = КПП;
			
			СтруктураДанныхТитульный.НалоговыйОрган = КодНО;
			
			СтруктураДанныхТитульный.НаимОрг = СокрЛП(НаименованиеОрганизации);
		
			СтруктураДанныхТитульный.ТелОрганизации = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
			
			СтруктураДанныхТитульный.ДатаПодписи = ДатаПодписи;
			
			ПоМесту = СокрЛП(СтруктураДанныхТитульный.ПоМесту);
			
		КонецЕсли;
		
		СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации = СокрЛП(НаименованиеОрганизации);
		
		СсылкаНаРегистрациюВНО = РеквизитЭлементаСправочника(ИмяФормы, СтруктураРеквизитовФормы.Организация);
		
		УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(
		ИмяФормы, СсылкаНаРегистрациюВНО, СтруктураРеквизитовФормы, ПоМесту);
		
	КонецЕсли;
	
	Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
		
		ИНН = СтруктураДанныхТитульный.Области.ИНН.Значение;
				
	ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
		
		ИНН = СтруктураДанныхТитульный.ИНН;
				
	КонецЕсли;	
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если СтруктураРеквизитовФормы.ИП И НЕ ЗначениеЗаполнено(ИНН) Тогда
			
			СтрокаСведений = "ДатаРожд, МестоРожд, Гражд, КодУдЛичн, ОрганВыданУдЛичн, СерияУдЛичн, НомерУдЛичн, ДатаУдЛичн,
				|ИндексМЖ, КодСубъектМЖ, РайонМЖ, ГородМЖ, НПунктМЖ, УлицаМЖ, ДомМЖ, КорпусМЖ, КвартираМЖ";
			
			СведенияОФизЛице = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
									СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
			
			Если СведенияОФизЛице.Свойство("ДатаРожд") Тогда
				СтруктураДанныхФизЛицо.ДатаРождения
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДатаРожд), СведенияОФизЛице.ДатаРожд, '00010101');
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("МестоРожд") Тогда
				СтруктураДанныхФизЛицо.МестоРождения
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.МестоРожд), СокрЛП(СведенияОФизЛице.МестоРожд), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("Гражд") Тогда
				СтруктураДанныхФизЛицо.КодСтраныГражданства
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.Гражд), СокрЛП(СведенияОФизЛице.Гражд), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("КодУдЛичн") Тогда
				СтруктураДанныхФизЛицо.КодВидаДокумента
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.КодУдЛичн), СокрЛП(СведенияОФизЛице.КодУдЛичн), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("СерияУдЛичн") И СведенияОФизЛице.Свойство("НомерУдЛичн") Тогда
				СерУдЛичн = ?(ЗначениеЗаполнено(СведенияОФизЛице.СерияУдЛичн), СокрЛП(СведенияОФизЛице.СерияУдЛичн), "");
				НомУдЛичн = ?(ЗначениеЗаполнено(СведенияОФизЛице.НомерУдЛичн), СокрЛП(СведенияОФизЛице.НомерУдЛичн), "");
				СтруктураДанныхФизЛицо.СерияДокумента = СерУдЛичн;
				СтруктураДанныхФизЛицо.НомерДокумента = НомУдЛичн;
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("ОрганВыданУдЛичн") Тогда
				СтруктураДанныхФизЛицо.КемВыданДокумент
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.ОрганВыданУдЛичн), СокрЛП(СведенияОФизЛице.ОрганВыданУдЛичн), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("ДатаУдЛичн") Тогда
				СтруктураДанныхФизЛицо.ДатаВыдачи
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДатаУдЛичн), СведенияОФизЛице.ДатаУдЛичн, '00010101');
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("ИндексМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресИндекс
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.ИндексМЖ), СокрЛП(СведенияОФизЛице.ИндексМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("КодСубъектМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресКодРегиона
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.КодСубъектМЖ), СокрЛП(СведенияОФизЛице.КодСубъектМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("РайонМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресРайон
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.РайонМЖ), СокрЛП(СведенияОФизЛице.РайонМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("ГородМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресГород
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.ГородМЖ), СокрЛП(СведенияОФизЛице.ГородМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("НПунктМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресНаселенныйПункт
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.НПунктМЖ), СокрЛП(СведенияОФизЛице.НПунктМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("УлицаМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресУлица
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.УлицаМЖ), СокрЛП(СведенияОФизЛице.УлицаМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("ДомМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресНомерДома
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДомМЖ), СокрЛП(СведенияОФизЛице.ДомМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("КорпусМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресНомерКорпуса
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.КорпусМЖ), СокрЛП(СведенияОФизЛице.КорпусМЖ), "");
			КонецЕсли;
			
			Если СведенияОФизЛице.Свойство("КвартираМЖ") Тогда
				СтруктураДанныхФизЛицо.АдресНомерКвартиры
				= ?(ЗначениеЗаполнено(СведенияОФизЛице.КвартираМЖ), СокрЛП(СведенияОФизЛице.КвартираМЖ), "");
			КонецЕсли;
			
		ИначеЕсли НЕ СтруктураРеквизитовФормы.ИП Тогда
			
			СтруктураДанныхФизЛицо.ДатаРождения = '00010101';
			СтруктураДанныхФизЛицо.МестоРождения = "";
			СтруктураДанныхФизЛицо.КодСтраныГражданства = "";
			СтруктураДанныхФизЛицо.КодВидаДокумента = "";
			СтруктураДанныхФизЛицо.СерияДокумента = "";
			СтруктураДанныхФизЛицо.НомерДокумента = "";
			СтруктураДанныхФизЛицо.КемВыданДокумент = "";
			СтруктураДанныхФизЛицо.ДатаВыдачи = '00010101';
			СтруктураДанныхФизЛицо.АдресИндекс = "";
			СтруктураДанныхФизЛицо.АдресКодРегиона = "";
			СтруктураДанныхФизЛицо.АдресРайон = "";
			СтруктураДанныхФизЛицо.АдресГород = "";
			СтруктураДанныхФизЛицо.АдресНаселенныйПункт = "";
			СтруктураДанныхФизЛицо.АдресУлица = "";
			СтруктураДанныхФизЛицо.АдресНомерДома = "";
			СтруктураДанныхФизЛицо.АдресНомерКорпуса = "";
			СтруктураДанныхФизЛицо.АдресНомерКвартиры = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
	СтруктураРеквизитовФормы, ?(ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент"),
	СтруктураДанныхТитульный.Области.ОКВЭД.Значение, СтруктураДанныхТитульный.ОКВЭД));
	
	ЗаполнитьСведенияОПодписантах(ИмяФормы, СтруктураРеквизитовФормы, СтруктураДанныхТитульный, ДатаПодписи);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОПодписантах(ИмяФормы,
										СтруктураРеквизитовФормы,
										СтруктураДанныхТитульный,
										ДатаПодписи) Экспорт
	
	ТипПодписанта = "1";
	Подписант = "";
	НаименованиеОрганизацииПредставителя = "";
	ДокументПредставителя = "";
	
	Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
		
		КодНО = СокрЛП(СтруктураДанныхТитульный.Области.НалоговыйОрган.Значение);
		КПП   = СокрЛП(СтруктураДанныхТитульный.Области.КПП.Значение);
		
	ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
		
		КодНО = СокрЛП(СтруктураДанныхТитульный.НалоговыйОрган);
		КПП   = СокрЛП(СтруктураДанныхТитульный.КПП);
		
	КонецЕсли;
	
	СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
	СтруктураРеквизитовФормы.Организация, КодНО, КПП);
	
	ТипПодписанта = СведенияОПредставителе.ТипПодписанта;
	
	Если ТипПодписанта = "1" Тогда
		// Представителя нет.
		Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
			// Подписант - руководитель.
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, "ФИОРук, ФИО");
			Подписант = СокрЛП(?(ЗначениеЗаполнено(СведенияОбОрганизации.ФИОРук),
			СведенияОбОрганизации.ФИОРук, СведенияОбОрганизации.ФИО));
		КонецЕсли;
	Иначе
		// Подписант - представитель.
		Подписант = СведенияОПредставителе.ФИОПредставителя;
 		НаименованиеОрганизацииПредставителя = СведенияОПредставителе.НаименованиеОрганизацииПредставителя;
		ДокументПредставителя = СведенияОПредставителе.ДокументПредставителя;
	КонецЕсли;
	
	Если ТипЗнч(СтруктураДанныхТитульный) = Тип("ТабличныйДокумент") Тогда
		
		СтруктураДанныхТитульный.Области.ПрПодп.Значение       = ТипПодписанта;
		СтруктураДанныхТитульный.Области.ОргПодписант.Значение = Подписант;
		СтруктураДанныхТитульный.Области.ОргУп.Значение        = НаименованиеОрганизацииПредставителя;
		СтруктураДанныхТитульный.Области.ДокУпПред.Значение    = ДокументПредставителя;
		
	ИначеЕсли ТипЗнч(СтруктураДанныхТитульный) = Тип("Структура") Тогда
		
		СтруктураДанныхТитульный.ПрПодп       = ТипПодписанта;
		СтруктураДанныхТитульный.ОргПодписант = Подписант;
		СтруктураДанныхТитульный.ОргУп        = НаименованиеОрганизацииПредставителя;
		СтруктураДанныхТитульный.ДокУпПред    = ДокументПредставителя;
		
	КонецЕсли;
	
КонецПроцедуры

Функция РеквизитЭлементаСправочника(ИмяФормы, Ссылка) Экспорт
	
	Если Ссылка.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане") <> Неопределено Тогда
		Возврат Ссылка.РегистрацияВНалоговомОргане;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция РазделыРеглОтчета(ИмяФормы) Экспорт
	
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный", Новый Структура);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		РазделыОтчета.Вставить("ФизЛицо", Новый Структура);
		
	КонецЕсли;
	
	РазделыОтчета.Вставить("ДанныеМногоуровневыхРазделов", Новый Структура);
	
	Возврат РазделыОтчета;
	
КонецФункции

Функция ЗаписатьДокумент(ИмяФормы, ПараметрыЗаписи) Экспорт
	
	ДокументРегламентированныйОтчет = ПараметрыЗаписи.СохраняемыйРеглОтчет;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ПараметрыЗаписи.ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = ПараметрыЗаписи.НаименованиеОтчета;
	ДокументРегламентированныйОтчет.ДатаНачала               = ПараметрыЗаписи.ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ПараметрыЗаписи.ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ПараметрыЗаписи.ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = ПараметрыЗаписи.Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ПараметрыЗаписи.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ПараметрыЗаписи.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ПараметрыЗаписи.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ПараметрыЗаписи.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ПараметрыЗаписи.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ПараметрыЗаписи.КПП;
	ДокументРегламентированныйОтчет.Вид                      = ПараметрыЗаписи.Вариант;
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	ДокументРегламентированныйОтчет.ПредставлениеВида
	= РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	
	ПоказателиОтчета = Новый Структура;
	ПоказателиОтчета.Вставить("ПолеТабличногоДокументаТитульный", ПараметрыЗаписи.РазделыОтчета.Титульный);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ПоказателиОтчета.Вставить("ПолеТабличногоДокументаФизЛицо", ПараметрыЗаписи.РазделыОтчета.ФизЛицо);
		
	КонецЕсли;
	
	СписокСохранения = Новый Структура;
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	// Вставляем данные многоуровневых разделов.
	ДанныеМногоуровневыхРазделов = Новый Структура;
	Для Каждого Элем Из ПараметрыЗаписи.СтруктураМногоуровневыхРазделов Цикл
		СтруктураРаздела = Элем.Значение;
		Если НЕ СтруктураРаздела.Свойство("Подчиненность") Тогда
			ДанныеМногоуровневыхРазделов.Вставить(Элем.Ключ, ПолучитьИзВременногоХранилища(
			ПараметрыЗаписи.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Элем.Ключ]));
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
	СписокСохранения.Вставить("ВерсияФормы",                  ПараметрыЗаписи.ВерсияФормы);
	СписокСохранения.Вставить("ФлОтклВыборЗначений",          ПараметрыЗаписи.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("Автозаполнение",               ПараметрыЗаписи.Автозаполнение);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена",  ПараметрыЗаписи.ПечатьБезШтрихкодаРазрешена);
	СписокСохранения.Вставить("ФлПодсчетСтраниц",             ПараметрыЗаписи.ФлПодсчетСтраниц);
	Если ПараметрыЗаписи.Свойство("ФлПроверятьСоотношенияПриПечатиИВыгрузки") Тогда
		СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки",
		ПараметрыЗаписи.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ПараметрыЗаписи.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
		ДокументРегламентированныйОтчет.Разблокировать();
		
	Исключение
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
		РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи, ТекстСообщения);
		
		ДокументРегламентированныйОтчет.Разблокировать();
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Процедура УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(ИмяФормы,
																		СсылкаНаРегистрациюВНО,
																		СтруктураРеквизитовФормы,
																		ПоМесту) Экспорт
	
	Если СсылкаНаРегистрациюВНО <> Неопределено Тогда
		ОКТМО = СсылкаНаРегистрациюВНО.КодПоОКТМО;
	Иначе
		ОКТМО = "";
	КонецЕсли;
	
	ДеревоРаздела = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010001001", ОКТМО);
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010002001", "18210202010061010160");
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010004001", "18210202101081013160");
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010010001", "18210202090071010160");
	РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРаздела, Новый УникальныйИдентификатор,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	Если ПоМесту = "124" ИЛИ ПоМесту = "240" Тогда
		ДеревоРаздела = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020001001", ОКТМО);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020002001", "18210202140061110160");
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020004001", "18210202103081013160");
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРаздела, Новый УникальныйИдентификатор,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьМногоуровневыйРаздел(ИмяФормы,
											   СтруктураРеквизитовФормы,
											   СтруктураМногоуровневыхРазделов,
											   ИмяРаздела) Экспорт
	
	УдалитьИзВременногоХранилища(
	 СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	ДеревоДанныхРаздела = Новый ДеревоЗначений;
	ДеревоДанныхРаздела.Колонки.Добавить("Данные");
	ДеревоДанныхРаздела.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
		
	ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
			
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяРаздела));
	
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
													ИмяРаздела,
													СтруктураМногоуровневыхРазделов,
													ТабличныйДокумент,
													СтруктураРеквизитовФормы);
	
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	ИнициализироватьПодчиненныеРазделы(ИмяФормы,
									   ИмяРаздела,
									   ТекВетка,
									   СтруктураМногоуровневыхРазделов,
			 						   ТабличныйДокумент,
									   СтруктураРеквизитовФормы);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		// Особая обработка текста в строке 020 Приложения 9 к Разделу 1.
		Если ИмяРаздела = "Раздел1Прил9" Тогда
			МнЧ_П00019М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
			МнЧ_П00019М1.Строки[0].Данные.Вставить("П00019М102001", "00001");
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
		Если ИмяРаздела = "Раздел1Прил10" Тогда
			МнЧ_П00110М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
			МнЧ_П00110М1.Строки[0].Данные.Вставить("П00110М102001", "00001");
			МнЧ_П00110М2 = МнЧ_П00110М1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			МнЧ_П00110М2.Строки[0].Данные.Вставить("П00110М211001", "00001");
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ СтруктураРеквизитовФормы.Свойство("АдресВоВрХранилищеДеревоДанных" + ИмяРаздела) Тогда
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяРаздела, Неопределено);
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоДанныхРаздела, Новый УникальныйИдентификатор,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
КонецПроцедуры

Процедура СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяФормы,
																		  СтруктураРеквизитовФормы,
																		  ТабличныйДокумент,
																		  ИмяГруппы,
																		  ДеревоДанных,
																		  Координаты = "")
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + Координаты
		 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число))
		 <> Неопределено Цикл
		НовВетка = ДеревоДанных.Строки.Добавить();
		
		// Заполнение данными из текущей строки многострочной части.
		Данные = Новый Структура;
		Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число);
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			Обл = ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты + Инд);
			Если Обл <> Неопределено Тогда
				Данные.Вставить(ИмяГрафы, Обл.Значение);
			КонецЕсли;
		КонецЦикла;
		НовВетка.Данные = Данные;
		
		// Заполнение данными из строк многострочных частей, подчиненных текущей строке многострочной части.
		ДанныеМногострочныхЧастей = Новый Структура;
		ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
			ДеревоПодчСтрок = Новый ДеревоЗначений;
			ДеревоПодчСтрок.Колонки.Добавить("Данные");
			ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ПодчКоординаты = Координаты + Инд;
			СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
			 ИмяФормы, СтруктураРеквизитовФормы, ТабличныйДокумент, ИмяПодчГруппы, ДеревоПодчСтрок, ПодчКоординаты);
			ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		КонецЦикла;
		НовВетка.ДанныеМногострочныхЧастей = ДанныеМногострочныхЧастей;
		
		Инд_Число = Инд_Число + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчет(ИмяФормы,
							 ПараметрыАвтоформирования,
							 КорректирующийОтчет,
							 РазделыОтчета,
							 ДанныеРеглОтчета)
		
	ИсточникОтчета = ПараметрыАвтоформирования.ИсточникОтчета;
	ИмяФормыОтчета = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	Организация = ПараметрыАвтоформирования.Организация;
			
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ДопПараметры.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
		
	ДанныеРеглОтчета.Вставить("СтруктураРеквизитовФормы");
	ДанныеРеглОтчета.Вставить("СтруктураМногоуровневыхРазделов");
	
	СтруктураДанныхРазделов = СтруктураДанныхРазделов(ИмяФормы);
		
	СформироватьСтруктуруРеквизитовФормы(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы);
	
	ЗаполнитьКодОтчетногоПериода(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы);
	
	ИнициализироватьМногострочныеЧасти(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы);
			
	ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
										  ДанныеРеглОтчета.СтруктураРеквизитовФормы,
										  ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов);
	
	ИнициализироватьОбычныеРазделы(ИмяФормы,
								   ДанныеРеглОтчета.СтруктураРеквизитовФормы,
								   ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов,
								   СтруктураДанныхРазделов);
														  
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.Организация = ПараметрыАвтоформирования.Организация;
													  
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
								  							ДанныеРеглОтчета.СтруктураРеквизитовФормы.Организация);
															
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета = ПараметрыАвтоформирования.ДатаОкончания;
													  
	ЗаполнитьЗначенияПоУмолчанию(ИмяФормы,
								 ДанныеРеглОтчета.СтруктураРеквизитовФормы,
								 СтруктураДанныхРазделов);
														  
	РазделыОтчета.Титульный = СтруктураДанныхРазделов.СтруктураДанныхТитульный;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		РазделыОтчета.ФизЛицо = СтруктураДанныхРазделов.СтруктураДанныхФизЛицо;
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПоместитьВКэш(Неопределено, Новый УникальныйИдентификатор,
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация",             ПараметрыАвтоформирования.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыОтчета.Вставить("НомерКорректировки",      ПараметрыАвтоформирования.НомерКорректировки);
	ПараметрыОтчета.Вставить("ДатаПодписи",             ПараметрыАвтоформирования.ДатаПодписи);
	ПараметрыОтчета.Вставить("АдресВоВременномХранилище",
	ДанныеРеглОтчета.СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	Если ПараметрыАвтоформирования.Свойство("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати")
		И ПараметрыАвтоформирования.Свойство("МассивФизическихЛиц") Тогда
		
		ПараметрыОтчета.Вставить("ФормированиеПерсонифицированныхСведенийОЗастрахованныхЛицах", Истина);
		ПараметрыОтчета.Вставить("МассивФизическихЛиц", ПараметрыАвтоформирования.МассивФизическихЛиц);
		
	КонецЕсли;
	
	Контейнер = Новый Структура;
	Контейнер.Вставить("Титульный", РазделыОтчета.Титульный);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Контейнер.Вставить("ФизЛицо", РазделыОтчета.ФизЛицо);
		
	КонецЕсли;
	
	Для Каждого Раздел Из ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов Цикл
		
		Если НЕ Раздел.Значение.Свойство("Подчиненность") Тогда
			
			Контейнер.Вставить(Раздел.Ключ, ПолучитьИзВременногоХранилища(
			ДанныеРеглОтчета.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Раздел.Ключ]));
			
			Если Раздел.Ключ = "Раздел3" Тогда
				
				Если ПараметрыАвтоформирования.Свойство("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати") Тогда
					
					Контейнер[Раздел.Ключ].Строки[0].Данные.Вставить("ФизическоеЛицо", Неопределено);
					
				КонецЕсли;
				
				Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
					
					Если НЕ ДанныеРеглОтчета.СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели.Свойство("П000030004001") Тогда
						// Очистка строки 040 раздела 3 в случае, если она не заполняется потребителем.
						ДеревоРаздела = Контейнер["Раздел3"];
						Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
							ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
						КонецЦикла;
					Конецесли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
	   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
		
		ЗаполнитьРеглОтчетВнешнимиДанными(ИмяФормы,
										  Контейнер,
										  ПараметрыАвтоформирования.ВнешниеДанные);
		
	Иначе
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИсточникОтчета,
																	ИмяФормыОтчета,
																	ПараметрыОтчета,
																	Контейнер);
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
			
			Если Год(ПараметрыАвтоформирования.ДатаОкончания) = 2020 Тогда
				
				ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
				ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил5_1");
				
			Иначе
				
				ДеревоРазд = Контейнер["Раздел1"];
				ДеревоРазд.Строки[0].Данные.Вставить("П000010012001", 0);
				ДеревоРазд.Строки[0].Данные.Вставить("П000010012101", 0);
				ДеревоРазд.Строки[0].Данные.Вставить("П000010012201", 0);
				ДеревоРазд.Строки[0].Данные.Вставить("П000010012301", 0);
				
				ДеревоРазд = Контейнер["Раздел1Прил2"];
				ДеревоРазд.Строки[0].Данные.Вставить("П000120007001", 0);
				ДеревоРазд.Строки[0].Данные.Вставить("П000120007002", 0);
				ДеревоРазд.Строки[0].Данные.Вставить("П000120007003", 0);
				ДеревоРазд.Строки[0].Данные.Вставить("П000120007004", 0);
				
				ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
				ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил3");
				
				ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
				ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил4");
				
				ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
				ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил5");
				
			КонецЕсли;
			
		КонецЕсли;
		
		РассчитатьИтоги(ИмяФормы,
						Контейнер,
						ДанныеРеглОтчета.СтруктураРеквизитовФормы,
						ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетВнешнимиДанными(ИмяФормы, Приемник, Источник)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		// Код тарифа плательщика.
		Приемник.Раздел1Прил1.Строки[0].Данные.П000110000101 = Источник.Раздел1Прил1.КодТарифаПлательщика;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьИтоги(ИмяФормы, Контейнер, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		РасчетЗаПервыйКвартал = Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3;
		
		// Приложение 1 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил1Подр1_1и1_2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			Ветка = ВеткаР1Пр1.Строки[0].Строки[0];
			Данные = Ветка.Данные;
			
			Если РасчетЗаПервыйКвартал Тогда
				Данные.Вставить("П011110003001", Данные["П011110003002"] + Данные["П011110003003"] + Данные["П011110003004"]);
				Данные.Вставить("П011110004001", Данные["П011110004002"] + Данные["П011110004003"] + Данные["П011110004004"]);
				Данные.Вставить("П011110004501", Данные["П011110004502"] + Данные["П011110004503"] + Данные["П011110004504"]);
				Данные.Вставить("П011110005101", Данные["П011110005102"] + Данные["П011110005103"] + Данные["П011110005104"]);
				Данные.Вставить("П011110006101", Данные["П011110006102"] + Данные["П011110006103"] + Данные["П011110006104"]);
				Данные.Вставить("П011110006201", Данные["П011110006202"] + Данные["П011110006203"] + Данные["П011110006204"]);
				Данные.Вставить("П011120003001", Данные["П011120003002"] + Данные["П011120003003"] + Данные["П011120003004"]);
				Данные.Вставить("П011120004001", Данные["П011120004002"] + Данные["П011120004003"] + Данные["П011120004004"]);
				Данные.Вставить("П011120004501", Данные["П011120004502"] + Данные["П011120004503"] + Данные["П011120004504"]);
				Данные.Вставить("П011120006001", Данные["П011120006002"] + Данные["П011120006003"] + Данные["П011120006004"]);
			КонецЕсли;
			
			Данные.Вставить("П011110005001", Данные["П011110003001"] - Данные["П011110004001"] - Данные["П011110004501"]);
			Данные.Вставить("П011110005002", Данные["П011110003002"] - Данные["П011110004002"] - Данные["П011110004502"]);
			Данные.Вставить("П011110005003", Данные["П011110003003"] - Данные["П011110004003"] - Данные["П011110004503"]);
			Данные.Вставить("П011110005004", Данные["П011110003004"] - Данные["П011110004004"] - Данные["П011110004504"]);
			Данные.Вставить("П011110006001", Данные["П011110006101"] + Данные["П011110006201"]);
			Данные.Вставить("П011110006002", Данные["П011110006102"] + Данные["П011110006202"]);
			Данные.Вставить("П011110006003", Данные["П011110006103"] + Данные["П011110006203"]);
			Данные.Вставить("П011110006004", Данные["П011110006104"] + Данные["П011110006204"]);
			Данные.Вставить("П011120005001", Данные["П011120003001"] - Данные["П011120004001"] - Данные["П011120004501"]);
			Данные.Вставить("П011120005002", Данные["П011120003002"] - Данные["П011120004002"] - Данные["П011120004502"]);
			Данные.Вставить("П011120005003", Данные["П011120003003"] - Данные["П011120004003"] - Данные["П011120004503"]);
			Данные.Вставить("П011120005004", Данные["П011120003004"] - Данные["П011120004004"] - Данные["П011120004504"]);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил1Подр1_3_1";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			Ветка = ВеткаР1Пр1.Строки[1].Строки[0];
			ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ДанСтр = СтрокаМнЧ.Данные;
				Если РасчетЗаПервыйКвартал Тогда
					ДанСтр.Вставить("П11131М102001", ДанСтр["П11131М102002"] + ДанСтр["П11131М102003"] + ДанСтр["П11131М102004"]);
					ДанСтр.Вставить("П11131М103001", ДанСтр["П11131М103002"] + ДанСтр["П11131М103003"] + ДанСтр["П11131М103004"]);
					ДанСтр.Вставить("П11131М105001", ДанСтр["П11131М105002"] + ДанСтр["П11131М105003"] + ДанСтр["П11131М105004"]);
				КонецЕсли;
				ДанСтр.Вставить("П11131М104001", ДанСтр["П11131М102001"] - ДанСтр["П11131М103001"]);
				ДанСтр.Вставить("П11131М104002", ДанСтр["П11131М102002"] - ДанСтр["П11131М103002"]);
				ДанСтр.Вставить("П11131М104003", ДанСтр["П11131М102003"] - ДанСтр["П11131М103003"]);
				ДанСтр.Вставить("П11131М104004", ДанСтр["П11131М102004"] - ДанСтр["П11131М103004"]);
			КонецЦикла;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил1Подр1_3_2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			Ветка = ВеткаР1Пр1.Строки[2].Строки[0];
			ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ДанСтр = СтрокаМнЧ.Данные;
				Если РасчетЗаПервыйКвартал Тогда
					ДанСтр.Вставить("П11132М102001", ДанСтр["П11132М102002"] + ДанСтр["П11132М102003"] + ДанСтр["П11132М102004"]);
					ДанСтр.Вставить("П11132М103001", ДанСтр["П11132М103002"] + ДанСтр["П11132М103003"] + ДанСтр["П11132М103004"]);
					ДанСтр.Вставить("П11132М105001", ДанСтр["П11132М105002"] + ДанСтр["П11132М105003"] + ДанСтр["П11132М105004"]);
				КонецЕсли;
				ДанСтр.Вставить("П11132М104001", ДанСтр["П11132М102001"] - ДанСтр["П11132М103001"]);
				ДанСтр.Вставить("П11132М104002", ДанСтр["П11132М102002"] - ДанСтр["П11132М103002"]);
				ДанСтр.Вставить("П11132М104003", ДанСтр["П11132М102003"] - ДанСтр["П11132М103003"]);
				ДанСтр.Вставить("П11132М104004", ДанСтр["П11132М102004"] - ДанСтр["П11132М103004"]);
			КонецЦикла;
			
		КонецЦикла;
		
		// Приложение 1.1 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил1_1";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы111М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00111М102001", ДанСтр["П00111М102002"] + ДанСтр["П00111М102003"] + ДанСтр["П00111М102004"]);
				ДанСтр.Вставить("П00111М103001", ДанСтр["П00111М103002"] + ДанСтр["П00111М103003"] + ДанСтр["П00111М103004"]);
				ДанСтр.Вставить("П00111М105001", ДанСтр["П00111М105002"] + ДанСтр["П00111М105003"] + ДанСтр["П00111М105004"]);
			КонецЕсли;
			ДанСтр.Вставить("П00111М104001", ДанСтр["П00111М102001"] - ДанСтр["П00111М103001"]);
			ДанСтр.Вставить("П00111М104002", ДанСтр["П00111М102002"] - ДанСтр["П00111М103002"]);
			ДанСтр.Вставить("П00111М104003", ДанСтр["П00111М102003"] - ДанСтр["П00111М103003"]);
			ДанСтр.Вставить("П00111М104004", ДанСтр["П00111М102004"] - ДанСтр["П00111М103004"]);
		КонецЦикла;
		
		// Приложение 2 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы12М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Сумма060_Гр1 = 0;
		Сумма060_Гр2 = 0;
		Сумма060_Гр3 = 0;
		Сумма060_Гр4 = 0;
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00012М102001", ДанСтр["П00012М102002"] + ДанСтр["П00012М102003"] + ДанСтр["П00012М102004"]);
				ДанСтр.Вставить("П00012М103001", ДанСтр["П00012М103002"] + ДанСтр["П00012М103003"] + ДанСтр["П00012М103004"]);
				ДанСтр.Вставить("П00012М104001", ДанСтр["П00012М104002"] + ДанСтр["П00012М104003"] + ДанСтр["П00012М104004"]);
				ДанСтр.Вставить("П00012М105501", ДанСтр["П00012М105502"] + ДанСтр["П00012М105503"] + ДанСтр["П00012М105504"]);
				ДанСтр.Вставить("П00012М106001", ДанСтр["П00012М106002"] + ДанСтр["П00012М106003"] + ДанСтр["П00012М106004"]);
			КонецЕсли;
			ДанСтр.Вставить("П00012М105001", ДанСтр["П00012М102001"] - ДанСтр["П00012М103001"] - ДанСтр["П00012М104001"]);
			ДанСтр.Вставить("П00012М105002", ДанСтр["П00012М102002"] - ДанСтр["П00012М103002"] - ДанСтр["П00012М104002"]);
			ДанСтр.Вставить("П00012М105003", ДанСтр["П00012М102003"] - ДанСтр["П00012М103003"] - ДанСтр["П00012М104003"]);
			ДанСтр.Вставить("П00012М105004", ДанСтр["П00012М102004"] - ДанСтр["П00012М103004"] - ДанСтр["П00012М104004"]);
			Сумма060_Гр1 = Сумма060_Гр1 + ДанСтр["П00012М106001"];
			Сумма060_Гр2 = Сумма060_Гр2 + ДанСтр["П00012М106002"];
			Сумма060_Гр3 = Сумма060_Гр3 + ДанСтр["П00012М106003"];
			Сумма060_Гр4 = Сумма060_Гр4 + ДанСтр["П00012М106004"];
		КонецЦикла;
		
		Если РасчетЗаПервыйКвартал Тогда
			
			Если (ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
				И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 2020)
				ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
				
				Данные.Вставить("П000120007001", Данные["П000120007002"] + Данные["П000120007003"] + Данные["П000120007004"]);
				
			КонецЕсли;
			
			Данные.Вставить("П000120008001", Данные["П000120008002"] + Данные["П000120008003"] + Данные["П000120008004"]);
			
		КонецЕсли;
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2021 Тогда
			
			Данные.Вставить("П000120009001", "1");
			Данные.Вставить("П000120009002", Сумма060_Гр1 + Данные["П000120008001"]);
			Данные.Вставить("П000120009003", "1");
			Данные.Вставить("П000120009004", Сумма060_Гр2 + Данные["П000120008002"]);
			Данные.Вставить("П000120009005", "1");
			Данные.Вставить("П000120009006", Сумма060_Гр3 + Данные["П000120008003"]);
			Данные.Вставить("П000120009007", "1");
			Данные.Вставить("П000120009008", Сумма060_Гр4 + Данные["П000120008004"]);
			
		Иначе
			
			Сумма090 = Сумма060_Гр1 - Данные["П000120007001"] + Данные["П000120008001"];
			Данные.Вставить("П000120009001", ?(Сумма090 < 0, "2", "1"));
			Данные.Вставить("П000120009002", ?(Сумма090 < 0, - Сумма090, Сумма090));
			Сумма090 = Сумма060_Гр2 - Данные["П000120007002"] + Данные["П000120008002"];
			Данные.Вставить("П000120009003", ?(Сумма090 < 0, "2", "1"));
			Данные.Вставить("П000120009004", ?(Сумма090 < 0, - Сумма090, Сумма090));
			Сумма090 = Сумма060_Гр3 - Данные["П000120007003"] + Данные["П000120008003"];
			Данные.Вставить("П000120009005", ?(Сумма090 < 0, "2", "1"));
			Данные.Вставить("П000120009006", ?(Сумма090 < 0, - Сумма090, Сумма090));
			Сумма090 = Сумма060_Гр4 - Данные["П000120007004"] + Данные["П000120008004"];
			Данные.Вставить("П000120009007", ?(Сумма090 < 0, "2", "1"));
			Данные.Вставить("П000120009008", ?(Сумма090 < 0, - Сумма090, Сумма090));
			
		КонецЕсли;
		
		Если (ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 2020)
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			// Приложение 3 к разделу 1.
			//
			ИмяРаздела = "Раздел1Прил3";
			ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
			ДеревоДанных = Контейнер[ИмяГлРаздела];
			
			Ветка = ДеревоДанных.Строки[0];
			Данные = Ветка.Данные;
			
			Данные.Вставить("П000130006002", Данные["П000130006102"] + Данные["П000130006202"]);
			Данные.Вставить("П000130006003", Данные["П000130006103"] + Данные["П000130006203"]);
			Данные.Вставить("П000130006004", Данные["П000130006104"] + Данные["П000130006204"]);
			
			Данные.Вставить("П000130010003", Данные["П000130001003"] + Данные["П000130002003"] + Данные["П000130003003"]
			+ Данные["П000130004003"] + Данные["П000130005003"] + Данные["П000130006003"] + Данные["П000130007003"]
			+ Данные["П000130008003"] + Данные["П000130009003"]);
			
			Данные.Вставить("П000130010004", Данные["П000130001004"] + Данные["П000130003004"] + Данные["П000130006004"]
			+ Данные["П000130007004"] + Данные["П000130008004"]);
			
			// Приложение 4 к разделу 1.
			//
			ИмяРаздела = "Раздел1Прил4";
			ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
			ДеревоДанных = Контейнер[ИмяГлРаздела];
			
			Ветка = ДеревоДанных.Строки[0];
			Данные = Ветка.Данные;
			
			Данные.Вставить("П000140004003", Данные["П000140005003"] + Данные["П000140006003"]);
			Данные.Вставить("П000140004004", Данные["П000140005004"] + Данные["П000140006004"]);
			
			Данные.Вставить("П000140001002", Данные["П000140002002"] + Данные["П000140003002"] + Данные["П000140004002"]);
			Данные.Вставить("П000140001004", Данные["П000140002004"] + Данные["П000140003004"] + Данные["П000140004004"]);
			
			Данные.Вставить("П000140010003", Данные["П000140011003"] + Данные["П000140012003"]);
			Данные.Вставить("П000140010004", Данные["П000140011004"] + Данные["П000140012004"]);
			
			Данные.Вставить("П000140007002", Данные["П000140008002"] + Данные["П000140009002"] + Данные["П000140010002"]);
			Данные.Вставить("П000140007004", Данные["П000140008004"] + Данные["П000140009004"] + Данные["П000140010004"]);
			
			Данные.Вставить("П000140013002", Данные["П000140014002"]);
			Данные.Вставить("П000140013004", Данные["П000140014004"]);
			
			Данные.Вставить("П000140018003", Данные["П000140019003"] + Данные["П000140020003"]);
			Данные.Вставить("П000140018004", Данные["П000140019004"] + Данные["П000140020004"]);
			
			Данные.Вставить("П000140015002", Данные["П000140016002"] + Данные["П000140017002"] + Данные["П000140018002"]);
			Данные.Вставить("П000140015004", Данные["П000140016004"] + Данные["П000140017004"] + Данные["П000140018004"]);
			
			Данные.Вставить("П000140021002", Данные["П000140022002"] + Данные["П000140023002"]);
			Данные.Вставить("П000140021004", Данные["П000140022004"] + Данные["П000140023004"]);
			
			Данные.Вставить("П000140029002", Данные["П000140006002"] + Данные["П000140012002"] + Данные["П000140020002"]);
			Данные.Вставить("П000140029003", Данные["П000140006003"] + Данные["П000140012003"] + Данные["П000140020003"]);
			Данные.Вставить("П000140029004", Данные["П000140006004"] + Данные["П000140012004"] + Данные["П000140020004"]);
			
			Данные.Вставить("П000140028002", Данные["П000140005002"] + Данные["П000140011002"] + Данные["П000140019002"]);
			Данные.Вставить("П000140028003", Данные["П000140005003"] + Данные["П000140011003"] + Данные["П000140019003"]);
			Данные.Вставить("П000140028004", Данные["П000140005004"] + Данные["П000140011004"] + Данные["П000140019004"]);
			
			Данные.Вставить("П000140027002", Данные["П000140004002"] + Данные["П000140010002"] + Данные["П000140018002"]);
			Данные.Вставить("П000140027003", Данные["П000140028003"] + Данные["П000140029003"]);
			Данные.Вставить("П000140027004", Данные["П000140028004"] + Данные["П000140029004"]);
			
			Данные.Вставить("П000140026002", Данные["П000140003002"] + Данные["П000140009002"] + Данные["П000140017002"]
			+ Данные["П000140023002"]);
			Данные.Вставить("П000140026003", Данные["П000140003003"] + Данные["П000140009003"] + Данные["П000140017003"]
			+ Данные["П000140023003"]);
			Данные.Вставить("П000140026004", Данные["П000140003004"] + Данные["П000140009004"] + Данные["П000140017004"]
			+ Данные["П000140023004"]);
			
			Данные.Вставить("П000140025002", Данные["П000140002002"] + Данные["П000140008002"] + Данные["П000140014002"]
			+ Данные["П000140016002"] + Данные["П000140022002"]);
			Данные.Вставить("П000140025003", Данные["П000140002003"] + Данные["П000140008003"] + Данные["П000140014003"]
			+ Данные["П000140016003"] + Данные["П000140022003"]);
			Данные.Вставить("П000140025004", Данные["П000140002004"] + Данные["П000140008004"] + Данные["П000140014004"]
			+ Данные["П000140016004"] + Данные["П000140022004"]);
			
			Данные.Вставить("П000140024002", Данные["П000140025002"] + Данные["П000140026002"] + Данные["П000140027002"]
			+ Данные["П000140030002"]);
			Данные.Вставить("П000140024004", Данные["П000140025004"] + Данные["П000140026004"] + Данные["П000140027004"]
			+ Данные["П000140030004"] + Данные["П000140031004"]);
			
			// Приложение 5 к разделу 1.
			//
			ИмяРаздела = "Раздел1Прил5";
			ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
			ДеревоДанных = Контейнер[ИмяГлРаздела];
			
			Ветка = ДеревоДанных.Строки[0];
			Данные = Ветка.Данные;
			
			Знаменатель = Данные["П000150002002"];
			Данные.Вставить("П000150004002", ?(Знаменатель = 0, 0, Данные["П000150003002"] / Знаменатель * 100));
			
			Знаменатель = Данные["П000150002003"];
			Данные.Вставить("П000150004003", ?(Знаменатель = 0, 0, Данные["П000150003003"] / Знаменатель * 100));
			
		КонецЕсли;
		
		// Приложение 5.1 к разделу 1.
		//
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2021 Тогда
			
			ИмяРаздела = "Раздел1Прил5_1";
			ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
			ДеревоДанных = Контейнер[ИмяГлРаздела];
			
			ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы151М1;
			СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
			ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
			
			Ветка = ДеревоДанных.Строки[0];
			ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ДанСтр = СтрокаМнЧ.Данные;
				Знаменатель = ДанСтр["П00151М102002"];
				ДанСтр.Вставить("П00151М104002", ?(Знаменатель = 0, 0, ДанСтр["П00151М103002"] / Знаменатель * 100));
				Знаменатель = ДанСтр["П00151М102003"];
				ДанСтр.Вставить("П00151М104003", ?(Знаменатель = 0, 0, ДанСтр["П00151М103003"] / Знаменатель * 100));
			КонецЦикла;
			
		КонецЕсли;
		
		// Приложение 6 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил6";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Знаменатель = Данные["П000160001001"];
		Данные.Вставить("П000160005001", ?(Знаменатель = 0, 0,
		(Данные["П000160002001"] + Данные["П000160003001"] + Данные["П000160004001"]) / Знаменатель * 100));
		
		Знаменатель = Данные["П000160001002"];
		Данные.Вставить("П000160005002", ?(Знаменатель = 0, 0,
		(Данные["П000160002002"] + Данные["П000160003002"] + Данные["П000160004002"]) / Знаменатель * 100));
		
		// Приложение 7 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил7";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Знаменатель = Данные["П000170002002"];
		Данные.Вставить("П000170004002", ?(Знаменатель = 0, 0, Данные["П000170003002"] / Знаменатель * 100));
		
		Знаменатель = Данные["П000170002003"];
		Данные.Вставить("П000170004003", ?(Знаменатель = 0, 0, Данные["П000170003003"] / Знаменатель * 100));
		
		// Приложение 8 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил8";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Итог010_Гр1 = 0;
		Итог010_Гр2 = 0;
		Итог010_Гр3 = 0;
		Итог010_Гр4 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00018М108001", ДанСтр["П00018М108002"] + ДанСтр["П00018М108003"] + ДанСтр["П00018М108004"]);
			КонецЕсли;
			Итог010_Гр1 = Итог010_Гр1 + ДанСтр["П00018М108001"];
			Итог010_Гр2 = Итог010_Гр2 + ДанСтр["П00018М108002"];
			Итог010_Гр3 = Итог010_Гр3 + ДанСтр["П00018М108003"];
			Итог010_Гр4 = Итог010_Гр4 + ДанСтр["П00018М108004"];
		КонецЦикла;
		Данные.Вставить("П000180001001", Итог010_Гр1);
		Данные.Вставить("П000180001002", Итог010_Гр2);
		Данные.Вставить("П000180001003", Итог010_Гр3);
		Данные.Вставить("П000180001004", Итог010_Гр4);
		
		// Приложение 9 к разделу 1.
		//
		ИмяРаздела = "Раздел1Прил9";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Итог010_Гр1 = 0;
		Итог010_Гр2 = 0;
		Итог010_Гр3 = 0;
		Итог010_Гр4 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00019М108001", ДанСтр["П00019М108002"] + ДанСтр["П00019М108003"] + ДанСтр["П00019М108004"]);
			КонецЕсли;
			Итог010_Гр1 = Итог010_Гр1 + ДанСтр["П00019М108001"];
			Итог010_Гр2 = Итог010_Гр2 + ДанСтр["П00019М108002"];
			Итог010_Гр3 = Итог010_Гр3 + ДанСтр["П00019М108003"];
			Итог010_Гр4 = Итог010_Гр4 + ДанСтр["П00019М108004"];
		КонецЦикла;
		Данные.Вставить("П000190001001", Итог010_Гр1);
		Данные.Вставить("П000190001002", Итог010_Гр2);
		Данные.Вставить("П000190001003", Итог010_Гр3);
		Данные.Вставить("П000190001004", Итог010_Гр4);
		
		// Раздел 2.
		//
		ИмяРаздела = "Раздел2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Сумма030 = 0;
		Сумма050 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Сумма030 = Сумма030 + ДанСтр["П00021М109001"];
			Сумма050 = Сумма050 + ДанСтр["П00021М109002"];
		КонецЦикла;
		Данные.Вставить("П000020003001", Сумма030);
		Данные.Вставить("П000020005001", Сумма050);
		
		// Формирование раздела 1.
		//
		ВеткаРаздел1 = Контейнер["Раздел1"].Строки[0];
		
		ДеревоДанныхРаздел1Прил1 = Контейнер["Раздел1Прил1"];
		
		ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись = Ложь;
		
		Стр070_Код1 = 0;
		Стр071_Код1 = 0;
		Стр072_Код1 = 0;
		Стр073_Код1 = 0;
		Стр070_Код2 = 0;
		Стр071_Код2 = 0;
		Стр072_Код2 = 0;
		Стр073_Код2 = 0;
		Стр070_Код3 = 0;
		Стр071_Код3 = 0;
		Стр072_Код3 = 0;
		Стр073_Код3 = 0;
		Стр070_Код4 = 0;
		Стр071_Код4 = 0;
		Стр072_Код4 = 0;
		Стр073_Код4 = 0;
		
		Для каждого ВеткаРаздел1Прил1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
			
			ДанныеПодр1_1и1_2 = ВеткаРаздел1Прил1.Строки[0].Строки[0].Данные;
			
			ВеткаРаздел1.Данные["П000010003001"] = ВеткаРаздел1.Данные["П000010003001"] + ДанныеПодр1_1и1_2["П011110006001"];
			ВеткаРаздел1.Данные["П000010003101"] = ВеткаРаздел1.Данные["П000010003101"] + ДанныеПодр1_1и1_2["П011110006002"];
			ВеткаРаздел1.Данные["П000010003201"] = ВеткаРаздел1.Данные["П000010003201"] + ДанныеПодр1_1и1_2["П011110006003"];
			ВеткаРаздел1.Данные["П000010003301"] = ВеткаРаздел1.Данные["П000010003301"] + ДанныеПодр1_1и1_2["П011110006004"];
			
			ВеткаРаздел1.Данные["П000010005001"] = ВеткаРаздел1.Данные["П000010005001"] + ДанныеПодр1_1и1_2["П011120006001"];
			ВеткаРаздел1.Данные["П000010005101"] = ВеткаРаздел1.Данные["П000010005101"] + ДанныеПодр1_1и1_2["П011120006002"];
			ВеткаРаздел1.Данные["П000010005201"] = ВеткаРаздел1.Данные["П000010005201"] + ДанныеПодр1_1и1_2["П011120006003"];
			ВеткаРаздел1.Данные["П000010005301"] = ВеткаРаздел1.Данные["П000010005301"] + ДанныеПодр1_1и1_2["П011120006004"];
			
			МногострочныеДанныеПодр1_3_1
			= ВеткаРаздел1Прил1.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
			Для каждого Строка1_3_1 Из МногострочныеДанныеПодр1_3_1.Строки Цикл
				Стр001 = СокрЛП(Строка1_3_1.Данные["П11131М100101"]);
				Если Стр001 = "1" Тогда
					Стр070_Код1 = Стр070_Код1 + Строка1_3_1.Данные["П11131М105001"];
					Стр071_Код1 = Стр071_Код1 + Строка1_3_1.Данные["П11131М105002"];
					Стр072_Код1 = Стр072_Код1 + Строка1_3_1.Данные["П11131М105003"];
					Стр073_Код1 = Стр073_Код1 + Строка1_3_1.Данные["П11131М105004"];
				ИначеЕсли Стр001 = "2" Тогда
					Стр070_Код3 = Стр070_Код3 + Строка1_3_1.Данные["П11131М105001"];
					Стр071_Код3 = Стр071_Код3 + Строка1_3_1.Данные["П11131М105002"];
					Стр072_Код3 = Стр072_Код3 + Строка1_3_1.Данные["П11131М105003"];
					Стр073_Код3 = Стр073_Код3 + Строка1_3_1.Данные["П11131М105004"];
				КонецЕсли;
			КонецЦикла;
			
			МногострочныеДанныеПодр1_3_2
			= ВеткаРаздел1Прил1.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
			Для каждого Строка1_3_2 Из МногострочныеДанныеПодр1_3_2.Строки Цикл
				Стр001 = СокрЛП(Строка1_3_2.Данные["П11132М100101"]);
				Если Стр001 = "1" Тогда
					Стр070_Код2 = Стр070_Код2 + Строка1_3_2.Данные["П11132М105001"];
					Стр071_Код2 = Стр071_Код2 + Строка1_3_2.Данные["П11132М105002"];
					Стр072_Код2 = Стр072_Код2 + Строка1_3_2.Данные["П11132М105003"];
					Стр073_Код2 = Стр073_Код2 + Строка1_3_2.Данные["П11132М105004"];
				ИначеЕсли Стр001 = "2" Тогда
					Стр070_Код4 = Стр070_Код4 + Строка1_3_2.Данные["П11132М105001"];
					Стр071_Код4 = Стр071_Код4 + Строка1_3_2.Данные["П11132М105002"];
					Стр072_Код4 = Стр072_Код4 + Строка1_3_2.Данные["П11132М105003"];
					Стр073_Код4 = Стр073_Код4 + Строка1_3_2.Данные["П11132М105004"];
				КонецЕсли;
			КонецЦикла;
			
			ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
			= ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
			ИЛИ ДанныеПодр1_1и1_2["П011110003002"] > 0 ИЛИ ДанныеПодр1_1и1_2["П011110003003"] > 0
			ИЛИ ДанныеПодр1_1и1_2["П011110003004"] > 0 ИЛИ ДанныеПодр1_1и1_2["П011120003002"] > 0
			ИЛИ ДанныеПодр1_1и1_2["П011120003003"] > 0 ИЛИ ДанныеПодр1_1и1_2["П011120003004"] > 0;
			
		КонецЦикла;
		
		Стр090_Код1 = 0;
		Стр091_Код1 = 0;
		Стр092_Код1 = 0;
		Стр093_Код1 = 0;
		Стр090_Код2 = 0;
		Стр091_Код2 = 0;
		Стр092_Код2 = 0;
		Стр093_Код2 = 0;
		
		ДеревоДанных = Контейнер["Раздел1Прил1_1"];
		ВеткаРаздел1Прил1_1 = ДеревоДанных.Строки[0];
		МногострочныеДанные = ВеткаРаздел1Прил1_1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы111М1];
		Для каждого Строка1_1 Из МногострочныеДанные.Строки Цикл
			Стр001 = СокрЛП(Строка1_1.Данные["П00111М100101"]);
			Если Стр001 = "1" Тогда
				Стр090_Код1 = Стр090_Код1 + Строка1_1.Данные["П00111М105001"];
				Стр091_Код1 = Стр091_Код1 + Строка1_1.Данные["П00111М105002"];
				Стр092_Код1 = Стр092_Код1 + Строка1_1.Данные["П00111М105003"];
				Стр093_Код1 = Стр093_Код1 + Строка1_1.Данные["П00111М105004"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр090_Код2 = Стр090_Код2 + Строка1_1.Данные["П00111М105001"];
				Стр091_Код2 = Стр091_Код2 + Строка1_1.Данные["П00111М105002"];
				Стр092_Код2 = Стр092_Код2 + Строка1_1.Данные["П00111М105003"];
				Стр093_Код2 = Стр093_Код2 + Строка1_1.Данные["П00111М105004"];
			КонецЕсли;
		КонецЦикла;
		
		МногострочныеДанные = ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
		ИндексСтроки = 0;
		Если ЗначениеЗаполнено(Стр070_Код1) ИЛИ ЗначениеЗаполнено(Стр071_Код1)
			ИЛИ ЗначениеЗаполнено(Стр072_Код1) ИЛИ ЗначениеЗаполнено(Стр073_Код1) Тогда
			ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
			ДанныеМнЧ.Вставить("П00001М106001", "18210202131061010160");
			ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код1);
			ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код1);
			ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код1);
			ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код1);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр070_Код2) ИЛИ ЗначениеЗаполнено(Стр071_Код2)
			ИЛИ ЗначениеЗаполнено(Стр072_Код2) ИЛИ ЗначениеЗаполнено(Стр073_Код2) Тогда
			Если ИндексСтроки > 0 Тогда
				НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
				НовСтрМнЧ.Данные = Новый Структура;
				НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				ДанныеМнЧ = НовСтрМнЧ.Данные;
			Иначе
				ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
			КонецЕсли;
			ДанныеМнЧ.Вставить("П00001М106001", "18210202131061020160");
			ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код2);
			ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код2);
			ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код2);
			ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код2);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр070_Код3) ИЛИ ЗначениеЗаполнено(Стр071_Код3)
			ИЛИ ЗначениеЗаполнено(Стр072_Код3) ИЛИ ЗначениеЗаполнено(Стр073_Код3) Тогда
			Если ИндексСтроки > 0 Тогда
				НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
				НовСтрМнЧ.Данные = Новый Структура;
				НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				ДанныеМнЧ = НовСтрМнЧ.Данные;
			Иначе
				ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
			КонецЕсли;
			ДанныеМнЧ.Вставить("П00001М106001", "18210202132061010160");
			ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код3);
			ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код3);
			ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код3);
			ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код3);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр070_Код4) ИЛИ ЗначениеЗаполнено(Стр071_Код4)
			ИЛИ ЗначениеЗаполнено(Стр072_Код4) ИЛИ ЗначениеЗаполнено(Стр073_Код4) Тогда
			Если ИндексСтроки > 0 Тогда
				НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
				НовСтрМнЧ.Данные = Новый Структура;
				НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				ДанныеМнЧ = НовСтрМнЧ.Данные;
			Иначе
				ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
			КонецЕсли;
			ДанныеМнЧ.Вставить("П00001М106001", "18210202132061020160");
			ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код4);
			ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код4);
			ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код4);
			ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код4);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		
		МногострочныеДанные = ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
		ИндексСтроки = 0;
		Если ЗначениеЗаполнено(Стр090_Код1) ИЛИ ЗначениеЗаполнено(Стр091_Код1)
			ИЛИ ЗначениеЗаполнено(Стр092_Код1) ИЛИ ЗначениеЗаполнено(Стр093_Код1) Тогда
			ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
			ДанныеМнЧ.Вставить("П00001М208001", "18210202080061000160");
			ДанныеМнЧ.Вставить("П00001М209001", Стр090_Код1);
			ДанныеМнЧ.Вставить("П00001М209101", Стр091_Код1);
			ДанныеМнЧ.Вставить("П00001М209201", Стр092_Код1);
			ДанныеМнЧ.Вставить("П00001М209301", Стр093_Код1);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр090_Код2) ИЛИ ЗначениеЗаполнено(Стр091_Код2)
			ИЛИ ЗначениеЗаполнено(Стр092_Код2) ИЛИ ЗначениеЗаполнено(Стр093_Код2) Тогда
			Если ИндексСтроки > 0 Тогда
				НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
				НовСтрМнЧ.Данные = Новый Структура;
				НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				ДанныеМнЧ = НовСтрМнЧ.Данные;
			Иначе
				ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
			КонецЕсли;
			ДанныеМнЧ.Вставить("П00001М208001", "18210202120061000160");
			ДанныеМнЧ.Вставить("П00001М209001", Стр090_Код2);
			ДанныеМнЧ.Вставить("П00001М209101", Стр091_Код2);
			ДанныеМнЧ.Вставить("П00001М209201", Стр092_Код2);
			ДанныеМнЧ.Вставить("П00001М209301", Стр093_Код2);
		КонецЕсли;
		
		ВеткаРаздел1.Данные["П000010002001"] = "18210202010061010160";
		ВеткаРаздел1.Данные["П000010004001"] = "18210202101081013160";
		ВеткаРаздел1.Данные["П000010010001"] = "18210202090071010160";
		
		ДеревоДанных = Контейнер["Раздел1Прил2"];
		ДанныеРаздел1Прил2 = ДеревоДанных.Строки[0].Данные;
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2021 Тогда
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009001"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011001"] = ВеткаРаздел1.Данные["П000010011001"] + ДанныеРаздел1Прил2["П000120009002"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009003"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011101"] = ВеткаРаздел1.Данные["П000010011101"] + ДанныеРаздел1Прил2["П000120009004"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009005"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011201"] = ВеткаРаздел1.Данные["П000010011201"] + ДанныеРаздел1Прил2["П000120009006"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009007"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011301"] = ВеткаРаздел1.Данные["П000010011301"] + ДанныеРаздел1Прил2["П000120009008"];
			КонецЕсли;
			
		Иначе
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009001"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011001"] = ВеткаРаздел1.Данные["П000010011001"] + ДанныеРаздел1Прил2["П000120009002"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012001"] = ВеткаРаздел1.Данные["П000010012001"] + ДанныеРаздел1Прил2["П000120009002"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009003"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011101"] = ВеткаРаздел1.Данные["П000010011101"] + ДанныеРаздел1Прил2["П000120009004"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012101"] = ВеткаРаздел1.Данные["П000010012101"] + ДанныеРаздел1Прил2["П000120009004"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009005"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011201"] = ВеткаРаздел1.Данные["П000010011201"] + ДанныеРаздел1Прил2["П000120009006"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012201"] = ВеткаРаздел1.Данные["П000010012201"] + ДанныеРаздел1Прил2["П000120009006"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009007"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011301"] = ВеткаРаздел1.Данные["П000010011301"] + ДанныеРаздел1Прил2["П000120009008"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012301"] = ВеткаРаздел1.Данные["П000010012301"] + ДанныеРаздел1Прил2["П000120009008"];
			КонецЕсли;
			
		КонецЕсли;
		
		МногострочныеДанные = ДеревоДанных.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы12М1];
		Для каждого СтрМнЧ Из МногострочныеДанные.Строки Цикл
			ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
			= ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
			ИЛИ СтрМнЧ.Данные["П00012М102002"] > 0 ИЛИ СтрМнЧ.Данные["П00012М102003"] > 0
			ИЛИ СтрМнЧ.Данные["П00012М102004"] > 0;
		КонецЦикла;
		
		ВеткаРаздел1.Данные["П000010000101"] = ?(ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись, "1", "2");
		
		// Авторасчет в разделе 1.
		//
		ИмяРаздела = "Раздел1";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
		СтруктураГруппыМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1];
		ИменаГрафМнЧ1 = СтруктураГруппыМнЧ1["ИменаГраф"];
		
		ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
		СтруктураГруппыМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2];
		ИменаГрафМнЧ2 = СтруктураГруппыМнЧ2["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
		ДеревоМнЧ2 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
		
		ТипПлательщика = СокрЛП(Данные["П000010000101"]);
		
		Если ТипПлательщика = "2" Тогда
			
			Данные.Вставить("П000010003101", 0);
			Данные.Вставить("П000010003201", 0);
			Данные.Вставить("П000010003301", 0);
			Данные.Вставить("П000010005101", 0);
			Данные.Вставить("П000010005201", 0);
			Данные.Вставить("П000010005301", 0);
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М107101", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М107201", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М107301", 0);
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М209101", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М209201", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М209301", 0);
			КонецЦикла;
			Данные.Вставить("П000010012101", 0);
			Данные.Вставить("П000010012201", 0);
			Данные.Вставить("П000010012301", 0);
			
		ИначеЕсли РасчетЗаПервыйКвартал Тогда
			
			Данные.Вставить("П000010003001", Данные["П000010003101"] + Данные["П000010003201"] + Данные["П000010003301"]);
			Данные.Вставить("П000010005001", Данные["П000010005101"] + Данные["П000010005201"] + Данные["П000010005301"]);
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М107001",
				СтрокаМнЧ.Данные["П00001М107101"] + СтрокаМнЧ.Данные["П00001М107201"] + СтрокаМнЧ.Данные["П00001М107301"]);
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М209001",
				СтрокаМнЧ.Данные["П00001М209101"] + СтрокаМнЧ.Данные["П00001М209201"] + СтрокаМнЧ.Данные["П00001М209301"]);
			КонецЦикла;
			
			Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
				И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2021 Тогда
				
				Данные.Вставить("П000010011001", Данные["П000010011101"] + Данные["П000010011201"] + Данные["П000010011301"]);
				
			Иначе
				
				ПромежуточнаяСумма
				= Данные["П000010011101"] + Данные["П000010011201"] + Данные["П000010011301"]
				- Данные["П000010012101"] - Данные["П000010012201"] - Данные["П000010012301"];
				Данные.Вставить("П000010011001", Макс(ПромежуточнаяСумма, 0));
				Данные.Вставить("П000010012001", - Мин(ПромежуточнаяСумма, 0));
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			ИмяРаздела = "Раздел1";
			ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
			ДеревоДанных = Контейнер[ИмяГлРаздела];
			
			ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
			СтруктураГруппыМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1];
			ИменаГрафМнЧ1 = СтруктураГруппыМнЧ1["ИменаГраф"];
			
			ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
			СтруктураГруппыМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2];
			ИменаГрафМнЧ2 = СтруктураГруппыМнЧ2["ИменаГраф"];
			
			Для каждого ВеткаР1 Из ДеревоДанных.Строки Цикл
				
				ВеткаР1.Данные.Вставить("П000010003001"
					, ВеткаР1.Данные["П000010003101"]
					+ ВеткаР1.Данные["П000010003201"]
					+ ВеткаР1.Данные["П000010003301"]);
				
				ВеткаР1.Данные.Вставить("П000010005001"
					, ВеткаР1.Данные["П000010005101"]
					+ ВеткаР1.Данные["П000010005201"]
					+ ВеткаР1.Данные["П000010005301"]);
				
				// Многострочная часть 060-073.
				ДеревоМнЧ1 = ВеткаР1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
				Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
					СтрокаМнЧ.Данные.Вставить("П00001М107001"
						, СтрокаМнЧ.Данные["П00001М107101"]
						+ СтрокаМнЧ.Данные["П00001М107201"]
						+ СтрокаМнЧ.Данные["П00001М107301"]);
				КонецЦикла;
				
				// Многострочная часть 080-093.
				ДеревоМнЧ2 = ВеткаР1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
				Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
					СтрокаМнЧ.Данные.Вставить("П00001М209001"
						, СтрокаМнЧ.Данные["П00001М209101"]
						+ СтрокаМнЧ.Данные["П00001М209201"]
						+ СтрокаМнЧ.Данные["П00001М209301"]);
				КонецЦикла;
				
				ПромежуточнаяСумма
					= ВеткаР1.Данные["П000010011101"]
					+ ВеткаР1.Данные["П000010011201"]
					+ ВеткаР1.Данные["П000010011301"]
					- ВеткаР1.Данные["П000010012101"]
					- ВеткаР1.Данные["П000010012201"]
					- ВеткаР1.Данные["П000010012301"];
				ВеткаР1.Данные.Вставить("П000010011001", Макс(ПромежуточнаяСумма, 0));
				ВеткаР1.Данные.Вставить("П000010012001", - Мин(ПромежуточнаяСумма, 0));
				
			КонецЦикла;
			
		КонецЕсли;
		
		ИмяРаздела = "Раздел1Прил1Подр1_1и1_2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр11_12 = ВеткаР1Пр1.Строки[0].Строки[0];
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110003002",
				  ВеткаР1Пр1Подр11_12.Данные["П011110003003"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110003004"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110003005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110004002",
				  ВеткаР1Пр1Подр11_12.Данные["П011110004003"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110004004"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110004005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110003001", ВеткаР1Пр1Подр11_12.Данные["П011110003002"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110004001", ВеткаР1Пр1Подр11_12.Данные["П011110004002"]);
				
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005001",
				  ВеткаР1Пр1Подр11_12.Данные["П011110003001"]
				- ВеткаР1Пр1Подр11_12.Данные["П011110004001"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005002",
				  ВеткаР1Пр1Подр11_12.Данные["П011110003002"]
				- ВеткаР1Пр1Подр11_12.Данные["П011110004002"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005003",
				  ВеткаР1Пр1Подр11_12.Данные["П011110003003"]
				- ВеткаР1Пр1Подр11_12.Данные["П011110004003"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005004",
				  ВеткаР1Пр1Подр11_12.Данные["П011110003004"]
				- ВеткаР1Пр1Подр11_12.Данные["П011110004004"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005005",
				  ВеткаР1Пр1Подр11_12.Данные["П011110003005"]
				- ВеткаР1Пр1Подр11_12.Данные["П011110004005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005102",
				  ВеткаР1Пр1Подр11_12.Данные["П011110005103"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110005104"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110005105"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006102",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006103"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006104"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006105"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006202",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006203"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006204"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006205"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006101", ВеткаР1Пр1Подр11_12.Данные["П011110006102"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006201", ВеткаР1Пр1Подр11_12.Данные["П011110006202"]);
				
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006001",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006101"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006201"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006002",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006102"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006202"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006003",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006103"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006203"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006004",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006104"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006204"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006005",
				  ВеткаР1Пр1Подр11_12.Данные["П011110006105"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011110006205"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120003002",
				  ВеткаР1Пр1Подр11_12.Данные["П011120003003"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011120003004"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011120003005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120004002",
				  ВеткаР1Пр1Подр11_12.Данные["П011120004003"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011120004004"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011120004005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120003001", ВеткаР1Пр1Подр11_12.Данные["П011120003002"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120004001", ВеткаР1Пр1Подр11_12.Данные["П011120004002"]);
				
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005001",
				  ВеткаР1Пр1Подр11_12.Данные["П011120003001"]
				- ВеткаР1Пр1Подр11_12.Данные["П011120004001"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005002",
				  ВеткаР1Пр1Подр11_12.Данные["П011120003002"]
				- ВеткаР1Пр1Подр11_12.Данные["П011120004002"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005003",
				  ВеткаР1Пр1Подр11_12.Данные["П011120003003"]
				- ВеткаР1Пр1Подр11_12.Данные["П011120004003"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005004",
				  ВеткаР1Пр1Подр11_12.Данные["П011120003004"]
				- ВеткаР1Пр1Подр11_12.Данные["П011120004004"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005005",
				  ВеткаР1Пр1Подр11_12.Данные["П011120003005"]
				- ВеткаР1Пр1Подр11_12.Данные["П011120004005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120006002",
				  ВеткаР1Пр1Подр11_12.Данные["П011120006003"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011120006004"]
				+ ВеткаР1Пр1Подр11_12.Данные["П011120006005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005101", ВеткаР1Пр1Подр11_12.Данные["П011110005102"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120006001", ВеткаР1Пр1Подр11_12.Данные["П011120006002"]);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил1Подр1_3_1";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр131 = ВеткаР1Пр1.Строки[1].Строки[0];
			
			ДеревоМнЧ = ВеткаР1Пр1Подр131.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П11131М102002", СтрокаМнЧ.Данные["П11131М102003"]
					+ СтрокаМнЧ.Данные["П11131М102004"] + СтрокаМнЧ.Данные["П11131М102005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11131М103002", СтрокаМнЧ.Данные["П11131М103003"]
					+ СтрокаМнЧ.Данные["П11131М103004"] + СтрокаМнЧ.Данные["П11131М103005"]);
				
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11131М102001", СтрокаМнЧ.Данные["П11131М102002"]);
					СтрокаМнЧ.Данные.Вставить("П11131М103001", СтрокаМнЧ.Данные["П11131М103002"]);
					
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П11131М104001",
				СтрокаМнЧ.Данные["П11131М102001"] - СтрокаМнЧ.Данные["П11131М103001"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104002",
				СтрокаМнЧ.Данные["П11131М102002"] - СтрокаМнЧ.Данные["П11131М103002"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104003",
				СтрокаМнЧ.Данные["П11131М102003"] - СтрокаМнЧ.Данные["П11131М103003"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104004",
				СтрокаМнЧ.Данные["П11131М102004"] - СтрокаМнЧ.Данные["П11131М103004"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104005",
				СтрокаМнЧ.Данные["П11131М102005"] - СтрокаМнЧ.Данные["П11131М103005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11131М105002", СтрокаМнЧ.Данные["П11131М105003"]
					+ СтрокаМнЧ.Данные["П11131М105004"] + СтрокаМнЧ.Данные["П11131М105005"]);
				
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11131М105001", СтрокаМнЧ.Данные["П11131М105002"]);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил1Подр1_3_2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр132 = ВеткаР1Пр1.Строки[2].Строки[0];
			
			ДеревоМнЧ = ВеткаР1Пр1Подр132.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П11132М102002", СтрокаМнЧ.Данные["П11132М102003"]
					+ СтрокаМнЧ.Данные["П11132М102004"] + СтрокаМнЧ.Данные["П11132М102005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11132М103002", СтрокаМнЧ.Данные["П11132М103003"]
					+ СтрокаМнЧ.Данные["П11132М103004"] + СтрокаМнЧ.Данные["П11132М103005"]);
				
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11132М102001", СтрокаМнЧ.Данные["П11132М102002"]);
					СтрокаМнЧ.Данные.Вставить("П11132М103001", СтрокаМнЧ.Данные["П11132М103002"]);
					
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П11132М104001",
				СтрокаМнЧ.Данные["П11132М102001"] - СтрокаМнЧ.Данные["П11132М103001"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104002",
				СтрокаМнЧ.Данные["П11132М102002"] - СтрокаМнЧ.Данные["П11132М103002"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104003",
				СтрокаМнЧ.Данные["П11132М102003"] - СтрокаМнЧ.Данные["П11132М103003"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104004",
				СтрокаМнЧ.Данные["П11132М102004"] - СтрокаМнЧ.Данные["П11132М103004"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104005",
				СтрокаМнЧ.Данные["П11132М102005"] - СтрокаМнЧ.Данные["П11132М103005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11132М105002", СтрокаМнЧ.Данные["П11132М105003"]
					+ СтрокаМнЧ.Данные["П11132М105004"] + СтрокаМнЧ.Данные["П11132М105005"]);
				
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11132М105001", СтрокаМнЧ.Данные["П11132М105002"]);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил1Подр1_4";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы1114М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр14 = ВеткаР1Пр1.Строки[3].Строки[0];
			
			ДеревоМнЧ = ВеткаР1Пр1Подр14.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П01114М102002", СтрокаМнЧ.Данные["П01114М102003"]
					+ СтрокаМнЧ.Данные["П01114М102004"] + СтрокаМнЧ.Данные["П01114М102005"]);
				
				СтрокаМнЧ.Данные.Вставить("П01114М103002", СтрокаМнЧ.Данные["П01114М103003"]
					+ СтрокаМнЧ.Данные["П01114М103004"] + СтрокаМнЧ.Данные["П01114М103005"]);
				
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П01114М102001", СтрокаМнЧ.Данные["П01114М102002"]);
					СтрокаМнЧ.Данные.Вставить("П01114М103001", СтрокаМнЧ.Данные["П01114М103002"]);
					
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П01114М104001",
				СтрокаМнЧ.Данные["П01114М102001"] - СтрокаМнЧ.Данные["П01114М103001"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104002",
				СтрокаМнЧ.Данные["П01114М102002"] - СтрокаМнЧ.Данные["П01114М103002"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104003",
				СтрокаМнЧ.Данные["П01114М102003"] - СтрокаМнЧ.Данные["П01114М103003"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104004",
				СтрокаМнЧ.Данные["П01114М102004"] - СтрокаМнЧ.Данные["П01114М103004"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104005",
				СтрокаМнЧ.Данные["П01114М102005"] - СтрокаМнЧ.Данные["П01114М103005"]);
				
				СтрокаМнЧ.Данные.Вставить("П01114М105002", СтрокаМнЧ.Данные["П01114М105003"]
					+ СтрокаМнЧ.Данные["П01114М105004"] + СтрокаМнЧ.Данные["П01114М105005"]);
				
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П01114М105001", СтрокаМнЧ.Данные["П01114М105002"]);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр2 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр2.Данные.Вставить("П000120002002",
				  ВеткаР1Пр2.Данные["П000120002003"]
				+ ВеткаР1Пр2.Данные["П000120002004"]
				+ ВеткаР1Пр2.Данные["П000120002005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120003002",
				  ВеткаР1Пр2.Данные["П000120003003"]
				+ ВеткаР1Пр2.Данные["П000120003004"]
				+ ВеткаР1Пр2.Данные["П000120003005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120004002",
				  ВеткаР1Пр2.Данные["П000120004003"]
				+ ВеткаР1Пр2.Данные["П000120004004"]
				+ ВеткаР1Пр2.Данные["П000120004005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120002001", ВеткаР1Пр2.Данные["П000120002002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120003001", ВеткаР1Пр2.Данные["П000120003002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120004001", ВеткаР1Пр2.Данные["П000120004002"]);
			КонецЕсли;
			
			ВеткаР1Пр2.Данные.Вставить("П000120005001",
				  ВеткаР1Пр2.Данные["П000120002001"]
				- ВеткаР1Пр2.Данные["П000120003001"]
				- ВеткаР1Пр2.Данные["П000120004001"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005002",
				  ВеткаР1Пр2.Данные["П000120002002"]
				- ВеткаР1Пр2.Данные["П000120003002"]
				- ВеткаР1Пр2.Данные["П000120004002"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005003",
				  ВеткаР1Пр2.Данные["П000120002003"]
				- ВеткаР1Пр2.Данные["П000120003003"]
				- ВеткаР1Пр2.Данные["П000120004003"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005004",
				  ВеткаР1Пр2.Данные["П000120002004"]
				- ВеткаР1Пр2.Данные["П000120003004"]
				- ВеткаР1Пр2.Данные["П000120004004"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005005",
				  ВеткаР1Пр2.Данные["П000120002005"]
				- ВеткаР1Пр2.Данные["П000120003005"]
				- ВеткаР1Пр2.Данные["П000120004005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005102",
				  ВеткаР1Пр2.Данные["П000120005103"]
				+ ВеткаР1Пр2.Данные["П000120005104"]
				+ ВеткаР1Пр2.Данные["П000120005105"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005202",
				  ВеткаР1Пр2.Данные["П000120005203"]
				+ ВеткаР1Пр2.Данные["П000120005204"]
				+ ВеткаР1Пр2.Данные["П000120005205"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005302",
				  ВеткаР1Пр2.Данные["П000120005303"]
				+ ВеткаР1Пр2.Данные["П000120005304"]
				+ ВеткаР1Пр2.Данные["П000120005305"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005402",
				  ВеткаР1Пр2.Данные["П000120005403"]
				+ ВеткаР1Пр2.Данные["П000120005404"]
				+ ВеткаР1Пр2.Данные["П000120005405"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120006002",
				  ВеткаР1Пр2.Данные["П000120006003"]
				+ ВеткаР1Пр2.Данные["П000120006004"]
				+ ВеткаР1Пр2.Данные["П000120006005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120007002",
				  ВеткаР1Пр2.Данные["П000120007003"]
				+ ВеткаР1Пр2.Данные["П000120007004"]
				+ ВеткаР1Пр2.Данные["П000120007005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120008002",
				  ВеткаР1Пр2.Данные["П000120008003"]
				+ ВеткаР1Пр2.Данные["П000120008004"]
				+ ВеткаР1Пр2.Данные["П000120008005"]);
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120006001", ВеткаР1Пр2.Данные["П000120006002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120007001", ВеткаР1Пр2.Данные["П000120007002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120008001", ВеткаР1Пр2.Данные["П000120008002"]);
			КонецЕсли;
			
			Сумма090 = ВеткаР1Пр2.Данные.П000120006001
					 - ВеткаР1Пр2.Данные.П000120007001
					 + ВеткаР1Пр2.Данные.П000120008001;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009001", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009002", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009001", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009002", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006002
					 - ВеткаР1Пр2.Данные.П000120007002
					 + ВеткаР1Пр2.Данные.П000120008002;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009003", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009004", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009003", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009004", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006003
					 - ВеткаР1Пр2.Данные.П000120007003
					 + ВеткаР1Пр2.Данные.П000120008003;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009005", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009006", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009005", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009006", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006004
					 - ВеткаР1Пр2.Данные.П000120007004
					 + ВеткаР1Пр2.Данные.П000120008004;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009007", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009008", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009007", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009008", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006005
					 - ВеткаР1Пр2.Данные.П000120007005
					 + ВеткаР1Пр2.Данные.П000120008005;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009009", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009010", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009009", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009010", Сумма090);
			КонецЕсли;
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120005101", ВеткаР1Пр2.Данные["П000120005102"]);
				ВеткаР1Пр2.Данные.Вставить("П000120005201", ВеткаР1Пр2.Данные["П000120005202"]);
				ВеткаР1Пр2.Данные.Вставить("П000120005301", ВеткаР1Пр2.Данные["П000120005302"]);
				ВеткаР1Пр2.Данные.Вставить("П000120005401", ВеткаР1Пр2.Данные["П000120005402"]);
			КонецЕсли;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил3";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр3 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр3.Данные.Вставить("П000130006002"
				, ВеткаР1Пр3.Данные["П000130006102"]
				+ ВеткаР1Пр3.Данные["П000130006202"]);
			ВеткаР1Пр3.Данные.Вставить("П000130006003"
				, ВеткаР1Пр3.Данные["П000130006103"]
				+ ВеткаР1Пр3.Данные["П000130006203"]);
			ВеткаР1Пр3.Данные.Вставить("П000130006004"
				, ВеткаР1Пр3.Данные["П000130006104"]
				+ ВеткаР1Пр3.Данные["П000130006204"]);
			
			ВеткаР1Пр3.Данные.Вставить("П000130010003"
				, ВеткаР1Пр3.Данные["П000130001003"]
				+ ВеткаР1Пр3.Данные["П000130002003"]
				+ ВеткаР1Пр3.Данные["П000130003003"]
				+ ВеткаР1Пр3.Данные["П000130004003"]
				+ ВеткаР1Пр3.Данные["П000130005003"]
				+ ВеткаР1Пр3.Данные["П000130006003"]
				+ ВеткаР1Пр3.Данные["П000130007003"]
				+ ВеткаР1Пр3.Данные["П000130008003"]
				+ ВеткаР1Пр3.Данные["П000130009003"]);
			ВеткаР1Пр3.Данные.Вставить("П000130010004"
				, ВеткаР1Пр3.Данные["П000130001004"]
				+ ВеткаР1Пр3.Данные["П000130003004"]
				+ ВеткаР1Пр3.Данные["П000130006004"]
				+ ВеткаР1Пр3.Данные["П000130007004"]
				+ ВеткаР1Пр3.Данные["П000130008004"]);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил4";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр4 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр4.Данные.Вставить("П000140004003"
				, ВеткаР1Пр4.Данные["П000140005003"]
				+ ВеткаР1Пр4.Данные["П000140006003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140004004"
				, ВеткаР1Пр4.Данные["П000140005004"]
				+ ВеткаР1Пр4.Данные["П000140006004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140001002"
				, ВеткаР1Пр4.Данные["П000140002002"]
				+ ВеткаР1Пр4.Данные["П000140003002"]
				+ ВеткаР1Пр4.Данные["П000140004002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140001004"
				, ВеткаР1Пр4.Данные["П000140002004"]
				+ ВеткаР1Пр4.Данные["П000140003004"]
				+ ВеткаР1Пр4.Данные["П000140004004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140010003"
				, ВеткаР1Пр4.Данные["П000140011003"]
				+ ВеткаР1Пр4.Данные["П000140012003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140010004"
				, ВеткаР1Пр4.Данные["П000140011004"]
				+ ВеткаР1Пр4.Данные["П000140012004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140007002"
				, ВеткаР1Пр4.Данные["П000140008002"]
				+ ВеткаР1Пр4.Данные["П000140009002"]
				+ ВеткаР1Пр4.Данные["П000140010002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140007004"
				, ВеткаР1Пр4.Данные["П000140008004"]
				+ ВеткаР1Пр4.Данные["П000140009004"]
				+ ВеткаР1Пр4.Данные["П000140010004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140013002"
				, ВеткаР1Пр4.Данные["П000140014002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140013004"
				, ВеткаР1Пр4.Данные["П000140014004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140018003"
				, ВеткаР1Пр4.Данные["П000140019003"]
				+ ВеткаР1Пр4.Данные["П000140020003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140018004"
				, ВеткаР1Пр4.Данные["П000140019004"]
				+ ВеткаР1Пр4.Данные["П000140020004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140015002"
				, ВеткаР1Пр4.Данные["П000140016002"]
				+ ВеткаР1Пр4.Данные["П000140017002"]
				+ ВеткаР1Пр4.Данные["П000140018002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140015004"
				, ВеткаР1Пр4.Данные["П000140016004"]
				+ ВеткаР1Пр4.Данные["П000140017004"]
				+ ВеткаР1Пр4.Данные["П000140018004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140021002"
				, ВеткаР1Пр4.Данные["П000140022002"]
				+ ВеткаР1Пр4.Данные["П000140023002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140021004"
				, ВеткаР1Пр4.Данные["П000140022004"]
				+ ВеткаР1Пр4.Данные["П000140023004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140029002"
				, ВеткаР1Пр4.Данные["П000140006002"]
				+ ВеткаР1Пр4.Данные["П000140012002"]
				+ ВеткаР1Пр4.Данные["П000140020002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140029003"
				, ВеткаР1Пр4.Данные["П000140006003"]
				+ ВеткаР1Пр4.Данные["П000140012003"]
				+ ВеткаР1Пр4.Данные["П000140020003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140029004"
				, ВеткаР1Пр4.Данные["П000140006004"]
				+ ВеткаР1Пр4.Данные["П000140012004"]
				+ ВеткаР1Пр4.Данные["П000140020004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140028002"
				, ВеткаР1Пр4.Данные["П000140005002"]
				+ ВеткаР1Пр4.Данные["П000140011002"]
				+ ВеткаР1Пр4.Данные["П000140019002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140028003"
				, ВеткаР1Пр4.Данные["П000140005003"]
				+ ВеткаР1Пр4.Данные["П000140011003"]
				+ ВеткаР1Пр4.Данные["П000140019003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140028004"
				, ВеткаР1Пр4.Данные["П000140005004"]
				+ ВеткаР1Пр4.Данные["П000140011004"]
				+ ВеткаР1Пр4.Данные["П000140019004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140027002"
				, ВеткаР1Пр4.Данные["П000140004002"]
				+ ВеткаР1Пр4.Данные["П000140010002"]
				+ ВеткаР1Пр4.Данные["П000140018002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140027003"
				, ВеткаР1Пр4.Данные["П000140028003"]
				+ ВеткаР1Пр4.Данные["П000140029003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140027004"
				, ВеткаР1Пр4.Данные["П000140028004"]
				+ ВеткаР1Пр4.Данные["П000140029004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140026002"
				, ВеткаР1Пр4.Данные["П000140003002"]
				+ ВеткаР1Пр4.Данные["П000140009002"]
				+ ВеткаР1Пр4.Данные["П000140017002"]
				+ ВеткаР1Пр4.Данные["П000140023002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140026003"
				, ВеткаР1Пр4.Данные["П000140003003"]
				+ ВеткаР1Пр4.Данные["П000140009003"]
				+ ВеткаР1Пр4.Данные["П000140017003"]
				+ ВеткаР1Пр4.Данные["П000140023003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140026004"
				, ВеткаР1Пр4.Данные["П000140003004"]
				+ ВеткаР1Пр4.Данные["П000140009004"]
				+ ВеткаР1Пр4.Данные["П000140017004"]
				+ ВеткаР1Пр4.Данные["П000140023004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140025002"
				, ВеткаР1Пр4.Данные["П000140002002"]
				+ ВеткаР1Пр4.Данные["П000140008002"]
				+ ВеткаР1Пр4.Данные["П000140014002"]
				+ ВеткаР1Пр4.Данные["П000140016002"]
				+ ВеткаР1Пр4.Данные["П000140022002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140025003"
				, ВеткаР1Пр4.Данные["П000140002003"]
				+ ВеткаР1Пр4.Данные["П000140008003"]
				+ ВеткаР1Пр4.Данные["П000140014003"]
				+ ВеткаР1Пр4.Данные["П000140016003"]
				+ ВеткаР1Пр4.Данные["П000140022003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140025004"
				, ВеткаР1Пр4.Данные["П000140002004"]
				+ ВеткаР1Пр4.Данные["П000140008004"]
				+ ВеткаР1Пр4.Данные["П000140014004"]
				+ ВеткаР1Пр4.Данные["П000140016004"]
				+ ВеткаР1Пр4.Данные["П000140022004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140024002"
				, ВеткаР1Пр4.Данные["П000140025002"]
				+ ВеткаР1Пр4.Данные["П000140026002"]
				+ ВеткаР1Пр4.Данные["П000140027002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140024004"
				, ВеткаР1Пр4.Данные["П000140025004"]
				+ ВеткаР1Пр4.Данные["П000140026004"]
				+ ВеткаР1Пр4.Данные["П000140027004"]
				+ ВеткаР1Пр4.Данные["П000140030004"]
				+ ВеткаР1Пр4.Данные["П000140031004"]);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил5_6";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр5_6 Из ДеревоДанных.Строки Цикл
			
			Знаменатель = ВеткаР1Пр5_6.Данные["П000150002002"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр5_6.Данные.Вставить("П000150004002", 0);
			Иначе
				ВеткаР1Пр5_6.Данные.Вставить("П000150004002",
				ВеткаР1Пр5_6.Данные["П000150003002"] / Знаменатель * 100);
			КонецЕсли;
			
			Знаменатель = ВеткаР1Пр5_6.Данные["П000150002003"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр5_6.Данные.Вставить("П000150004003", 0);
			Иначе
				ВеткаР1Пр5_6.Данные.Вставить("П000150004003",
				ВеткаР1Пр5_6.Данные["П000150003003"] / Знаменатель * 100);
			КонецЕсли;
			
			Знаменатель = ВеткаР1Пр5_6.Данные["П000160006002"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр5_6.Данные.Вставить("П000160008002", 0);
			Иначе
				ВеткаР1Пр5_6.Данные.Вставить("П000160008002",
				ВеткаР1Пр5_6.Данные["П000160007002"]
				/ Знаменатель * 100);
			КонецЕсли;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил7";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		Для каждого ВеткаР1Пр7 Из ДеревоДанных.Строки Цикл
			
			Знаменатель = ВеткаР1Пр7.Данные["П000170001001"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр7.Данные.Вставить("П000170005001", 0);
			Иначе
				ВеткаР1Пр7.Данные.Вставить("П000170005001",
					(ВеткаР1Пр7.Данные["П000170002001"]
					+ ВеткаР1Пр7.Данные["П000170003001"]
					+ ВеткаР1Пр7.Данные["П000170004001"])
					/ Знаменатель * 100);
			КонецЕсли;
			
			Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 12 Тогда
				Знаменатель = ВеткаР1Пр7.Данные["П000170001002"];
				Если Знаменатель = 0 Тогда
					ВеткаР1Пр7.Данные.Вставить("П000170005002", 0);
				Иначе
					ВеткаР1Пр7.Данные.Вставить("П000170005002",
						(ВеткаР1Пр7.Данные["П000170002002"]
						+ ВеткаР1Пр7.Данные["П000170003002"]
						+ ВеткаР1Пр7.Данные["П000170004002"])
						/ Знаменатель * 100);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил8";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр8 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР1Пр8.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			П000180001001 = 0;
			П000180001002 = 0;
			П000180001003 = 0;
			П000180001004 = 0;
			П000180001005 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00018М106002"
					, СтрокаМнЧ.Данные["П00018М106003"]
					+ СтрокаМнЧ.Данные["П00018М106004"]
					+ СтрокаМнЧ.Данные["П00018М106005"]);
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					СтрокаМнЧ.Данные.Вставить("П00018М106001"
						, СтрокаМнЧ.Данные["П00018М106002"]);
				КонецЕсли;
				П000180001001 = П000180001001 + СтрокаМнЧ.Данные["П00018М106001"];
				П000180001002 = П000180001002 + СтрокаМнЧ.Данные["П00018М106002"];
				П000180001003 = П000180001003 + СтрокаМнЧ.Данные["П00018М106003"];
				П000180001004 = П000180001004 + СтрокаМнЧ.Данные["П00018М106004"];
				П000180001005 = П000180001005 + СтрокаМнЧ.Данные["П00018М106005"];
			КонецЦикла;
			ВеткаР1Пр8.Данные.Вставить("П000180001001", П000180001001);
			ВеткаР1Пр8.Данные.Вставить("П000180001002", П000180001002);
			ВеткаР1Пр8.Данные.Вставить("П000180001003", П000180001003);
			ВеткаР1Пр8.Данные.Вставить("П000180001004", П000180001004);
			ВеткаР1Пр8.Данные.Вставить("П000180001005", П000180001005);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил9";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр9 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР1Пр9.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			П000190001001 = 0;
			П000190001002 = 0;
			П000190001003 = 0;
			П000190001004 = 0;
			П000190001005 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00019М108002"
					, СтрокаМнЧ.Данные["П00019М108003"]
					+ СтрокаМнЧ.Данные["П00019М108004"]
					+ СтрокаМнЧ.Данные["П00019М108005"]);
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					СтрокаМнЧ.Данные.Вставить("П00019М108001"
						, СтрокаМнЧ.Данные["П00019М108002"]);
				КонецЕсли;
				П000190001001 = П000190001001 + СтрокаМнЧ.Данные["П00019М108001"];
				П000190001002 = П000190001002 + СтрокаМнЧ.Данные["П00019М108002"];
				П000190001003 = П000190001003 + СтрокаМнЧ.Данные["П00019М108003"];
				П000190001004 = П000190001004 + СтрокаМнЧ.Данные["П00019М108004"];
				П000190001005 = П000190001005 + СтрокаМнЧ.Данные["П00019М108005"];
			КонецЦикла;
			ВеткаР1Пр9.Данные.Вставить("П000190001001", П000190001001);
			ВеткаР1Пр9.Данные.Вставить("П000190001002", П000190001002);
			ВеткаР1Пр9.Данные.Вставить("П000190001003", П000190001003);
			ВеткаР1Пр9.Данные.Вставить("П000190001004", П000190001004);
			ВеткаР1Пр9.Данные.Вставить("П000190001005", П000190001005);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел1Прил10";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы110М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр10 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР1Пр10.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			П001100001001 = 0;
			П001100001002 = 0;
			П001100001003 = 0;
			П001100001004 = 0;
			П001100001005 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00110М110002"
					, СтрокаМнЧ.Данные["П00110М110003"]
					+ СтрокаМнЧ.Данные["П00110М110004"]
					+ СтрокаМнЧ.Данные["П00110М110005"]);
				Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					СтрокаМнЧ.Данные.Вставить("П00110М110001"
						, СтрокаМнЧ.Данные["П00110М110002"]);
				КонецЕсли;
				П001100001001 = П001100001001 + СтрокаМнЧ.Данные["П00110М110001"];
				П001100001002 = П001100001002 + СтрокаМнЧ.Данные["П00110М110002"];
				П001100001003 = П001100001003 + СтрокаМнЧ.Данные["П00110М110003"];
				П001100001004 = П001100001004 + СтрокаМнЧ.Данные["П00110М110004"];
				П001100001005 = П001100001005 + СтрокаМнЧ.Данные["П00110М110005"];
			КонецЦикла;
			ВеткаР1Пр10.Данные.Вставить("П001100001001", П001100001001);
			ВеткаР1Пр10.Данные.Вставить("П001100001002", П001100001002);
			ВеткаР1Пр10.Данные.Вставить("П001100001003", П001100001003);
			ВеткаР1Пр10.Данные.Вставить("П001100001004", П001100001004);
			ВеткаР1Пр10.Данные.Вставить("П001100001005", П001100001005);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел2";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтруктураГруппыМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР2 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР2.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			П000020003001 = 0;
			П000020005001 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				П000020003001 = П000020003001 + СтрокаМнЧ.Данные["П00021М109001"];
				П000020005001 = П000020005001 + СтрокаМнЧ.Данные["П00021М109002"];
			КонецЦикла;
			ВеткаР2.Данные.Вставить("П000020003001", П000020003001);
			ВеткаР2.Данные.Вставить("П000020005001", П000020005001);
			
		КонецЦикла;
		
		ИмяРаздела = "Раздел3";
		ИмяГлРаздела = ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов);
		ДеревоДанных = Контейнер[ИмяГлРаздела];
		
		ИмяГруппыМнЧ321 = СтруктураРеквизитовФормы.мИдГруппы321М1;
		СтруктураГруппыМнЧ321 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ321];
		ИменаГрафМнЧ321 = СтруктураГруппыМнЧ321["ИменаГраф"];
		
		ИмяГруппыМнЧ322 = СтруктураРеквизитовФормы.мИдГруппы322М1;
		СтруктураГруппыМнЧ322 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ322];
		ИменаГрафМнЧ322 = СтруктураГруппыМнЧ322["ИменаГраф"];
		
		Для каждого ВеткаР3 Из ДеревоДанных.Строки Цикл
			
			// Многострочная часть 3.2.1.
			ДеревоМнЧ = ВеткаР3.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ321];
			П003210025001 = 0;
			П003210025002 = 0;
			П003210025003 = 0;
			П003210025004 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				П003210025001 = П003210025001 + СтрокаМнЧ.Данные["П00321М121001"];
				П003210025002 = П003210025002 + СтрокаМнЧ.Данные["П00321М122001"];
				П003210025003 = П003210025003 + СтрокаМнЧ.Данные["П00321М123001"];
				П003210025004 = П003210025004 + СтрокаМнЧ.Данные["П00321М124001"];
			КонецЦикла;
			ВеткаР3.Данные.Вставить("П003210025001", П003210025001);
			ВеткаР3.Данные.Вставить("П003210025002", П003210025002);
			ВеткаР3.Данные.Вставить("П003210025003", П003210025003);
			ВеткаР3.Данные.Вставить("П003210025004", П003210025004);
			
			// Многострочная часть 3.2.2.
			ДеревоМнЧ = ВеткаР3.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ322];
			П003220030001 = 0;
			П003220030002 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				П003220030001 = П003220030001 + СтрокаМнЧ.Данные["П00322М128001"];
				П003220030002 = П003220030002 + СтрокаМнЧ.Данные["П00322М129001"];
			КонецЦикла;
			ВеткаР3.Данные.Вставить("П003220030001", П003220030001);
			ВеткаР3.Данные.Вставить("П003220030002", П003220030002);
			
		КонецЦикла;
		
		ДеревоРаздела1 = Контейнер["Раздел1"];
		СохрОКТМО = СокрЛП(ДеревоРаздела1.Строки[0].Данные.П000010001001);
		
		ВеткаРаздел1 = ДеревоРаздела1.Строки[0];
		ВеткаРаздел1.Данные.Вставить("П000010001001", СохрОКТМО);
		
		ДеревоДанныхРаздел1Прил1 = Контейнер["Раздел1Прил1"];
		
		Стр070_Код1 = 0;
		Стр071_Код1 = 0;
		Стр072_Код1 = 0;
		Стр073_Код1 = 0;
		
		Стр070_Код2 = 0;
		Стр071_Код2 = 0;
		Стр072_Код2 = 0;
		Стр073_Код2 = 0;
		
		Стр070_Код3 = 0;
		Стр071_Код3 = 0;
		Стр072_Код3 = 0;
		Стр073_Код3 = 0;
		
		Стр070_Код4 = 0;
		Стр071_Код4 = 0;
		Стр072_Код4 = 0;
		Стр073_Код4 = 0;
		
		Стр090_Код1 = 0;
		Стр091_Код1 = 0;
		Стр092_Код1 = 0;
		Стр093_Код1 = 0;
		
		Стр090_Код2 = 0;
		Стр091_Код2 = 0;
		Стр092_Код2 = 0;
		Стр093_Код2 = 0;
		
		Для каждого ВеткаРаздел1Прил1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
			
			ДанныеПодр1_1и1_2 = ВеткаРаздел1Прил1.Строки[0].Строки[0].Данные;
			
			ВеткаРаздел1.Данные["П000010003001"]
				= ВеткаРаздел1.Данные["П000010003001"] + ДанныеПодр1_1и1_2["П011110006001"];
			ВеткаРаздел1.Данные["П000010003101"]
				= ВеткаРаздел1.Данные["П000010003101"] + ДанныеПодр1_1и1_2["П011110006003"];
			ВеткаРаздел1.Данные["П000010003201"]
				= ВеткаРаздел1.Данные["П000010003201"] + ДанныеПодр1_1и1_2["П011110006004"];
			ВеткаРаздел1.Данные["П000010003301"]
				= ВеткаРаздел1.Данные["П000010003301"] + ДанныеПодр1_1и1_2["П011110006005"];
			
			ВеткаРаздел1.Данные["П000010005001"]
				= ВеткаРаздел1.Данные["П000010005001"] + ДанныеПодр1_1и1_2["П011120006001"];
			ВеткаРаздел1.Данные["П000010005101"]
				= ВеткаРаздел1.Данные["П000010005101"] + ДанныеПодр1_1и1_2["П011120006003"];
			ВеткаРаздел1.Данные["П000010005201"]
				= ВеткаРаздел1.Данные["П000010005201"] + ДанныеПодр1_1и1_2["П011120006004"];
			ВеткаРаздел1.Данные["П000010005301"]
				= ВеткаРаздел1.Данные["П000010005301"] + ДанныеПодр1_1и1_2["П011120006005"];
			
			МногострочныеДанныеПодр1_3_1
				= ВеткаРаздел1Прил1.Строки[1].Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы11131М1];
			Для каждого Строка1_3_1 Из МногострочныеДанныеПодр1_3_1.Строки Цикл
				Стр001 = СокрЛП(Строка1_3_1.Данные["П11131М100101"]);
				Если Стр001 = "1" Тогда
					Стр070_Код1 = Стр070_Код1 + Строка1_3_1.Данные["П11131М105001"];
					Стр071_Код1 = Стр071_Код1 + Строка1_3_1.Данные["П11131М105003"];
					Стр072_Код1 = Стр072_Код1 + Строка1_3_1.Данные["П11131М105004"];
					Стр073_Код1 = Стр073_Код1 + Строка1_3_1.Данные["П11131М105005"];
				ИначеЕсли Стр001 = "2" Тогда
					Стр070_Код3 = Стр070_Код3 + Строка1_3_1.Данные["П11131М105001"];
					Стр071_Код3 = Стр071_Код3 + Строка1_3_1.Данные["П11131М105003"];
					Стр072_Код3 = Стр072_Код3 + Строка1_3_1.Данные["П11131М105004"];
					Стр073_Код3 = Стр073_Код3 + Строка1_3_1.Данные["П11131М105005"];
				КонецЕсли;
			КонецЦикла;
			
			МногострочныеДанныеПодр1_3_2
				= ВеткаРаздел1Прил1.Строки[2].Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы11132М1];
			Для каждого Строка1_3_2 Из МногострочныеДанныеПодр1_3_2.Строки Цикл
				Стр001 = СокрЛП(Строка1_3_2.Данные["П11132М100101"]);
				Если Стр001 = "1" Тогда
					Стр070_Код2 = Стр070_Код2 + Строка1_3_2.Данные["П11132М105001"];
					Стр071_Код2 = Стр071_Код2 + Строка1_3_2.Данные["П11132М105003"];
					Стр072_Код2 = Стр072_Код2 + Строка1_3_2.Данные["П11132М105004"];
					Стр073_Код2 = Стр073_Код2 + Строка1_3_2.Данные["П11132М105005"];
				ИначеЕсли Стр001 = "2" Тогда
					Стр070_Код4 = Стр070_Код4 + Строка1_3_2.Данные["П11132М105001"];
					Стр071_Код4 = Стр071_Код4 + Строка1_3_2.Данные["П11132М105003"];
					Стр072_Код4 = Стр072_Код4 + Строка1_3_2.Данные["П11132М105004"];
					Стр073_Код4 = Стр073_Код4 + Строка1_3_2.Данные["П11132М105005"];
				КонецЕсли;
			КонецЦикла;
			
			МногострочныеДанныеПодр1_4
				= ВеткаРаздел1Прил1.Строки[3].Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1114М1];
			Для каждого Строка1_4 Из МногострочныеДанныеПодр1_4.Строки Цикл
				Стр001 = СокрЛП(Строка1_4.Данные["П01114М100101"]);
				Если Стр001 = "1" Тогда
					Стр090_Код1 = Стр090_Код1 + Строка1_4.Данные["П01114М105001"];
					Стр091_Код1 = Стр091_Код1 + Строка1_4.Данные["П01114М105003"];
					Стр092_Код1 = Стр092_Код1 + Строка1_4.Данные["П01114М105004"];
					Стр093_Код1 = Стр093_Код1 + Строка1_4.Данные["П01114М105005"];
				ИначеЕсли Стр001 = "2" Тогда
					Стр090_Код2 = Стр090_Код2 + Строка1_4.Данные["П01114М105001"];
					Стр091_Код2 = Стр091_Код2 + Строка1_4.Данные["П01114М105003"];
					Стр092_Код2 = Стр092_Код2 + Строка1_4.Данные["П01114М105004"];
					Стр093_Код2 = Стр093_Код2 + Строка1_4.Данные["П01114М105005"];
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		МногострочныеДанные060_073
			= ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
		ИндексСтроки = 0;
		Если ЗначениеЗаполнено(Стр070_Код1)
			ИЛИ ЗначениеЗаполнено(Стр071_Код1)
			ИЛИ ЗначениеЗаполнено(Стр072_Код1)
			ИЛИ ЗначениеЗаполнено(Стр073_Код1) Тогда
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
			Данные060_073.Вставить("П00001М106001", "18210202131061010160");
			Данные060_073.Вставить("П00001М107001", Стр070_Код1);
			Данные060_073.Вставить("П00001М107101", Стр071_Код1);
			Данные060_073.Вставить("П00001М107201", Стр072_Код1);
			Данные060_073.Вставить("П00001М107301", Стр073_Код1);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр070_Код2)
			ИЛИ ЗначениеЗаполнено(Стр071_Код2)
			ИЛИ ЗначениеЗаполнено(Стр072_Код2)
			ИЛИ ЗначениеЗаполнено(Стр073_Код2) Тогда
			Если ИндексСтроки > 0 Тогда
				Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
				Строка060_073.Данные = Новый Структура;
				Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
				Данные060_073 = Строка060_073.Данные;
			Иначе
				Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
			КонецЕсли;
			Данные060_073.Вставить("П00001М106001", "18210202131061020160");
			Данные060_073.Вставить("П00001М107001", Стр070_Код2);
			Данные060_073.Вставить("П00001М107101", Стр071_Код2);
			Данные060_073.Вставить("П00001М107201", Стр072_Код2);
			Данные060_073.Вставить("П00001М107301", Стр073_Код2);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр070_Код3)
			ИЛИ ЗначениеЗаполнено(Стр071_Код3)
			ИЛИ ЗначениеЗаполнено(Стр072_Код3)
			ИЛИ ЗначениеЗаполнено(Стр073_Код3) Тогда
			Если ИндексСтроки > 0 Тогда
				Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
				Строка060_073.Данные = Новый Структура;
				Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
				Данные060_073 = Строка060_073.Данные;
			Иначе
				Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
			КонецЕсли;
			Данные060_073.Вставить("П00001М106001", "18210202132061010160");
			Данные060_073.Вставить("П00001М107001", Стр070_Код3);
			Данные060_073.Вставить("П00001М107101", Стр071_Код3);
			Данные060_073.Вставить("П00001М107201", Стр072_Код3);
			Данные060_073.Вставить("П00001М107301", Стр073_Код3);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр070_Код4)
			ИЛИ ЗначениеЗаполнено(Стр071_Код4)
			ИЛИ ЗначениеЗаполнено(Стр072_Код4)
			ИЛИ ЗначениеЗаполнено(Стр073_Код4) Тогда
			Если ИндексСтроки > 0 Тогда
				Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
				Строка060_073.Данные = Новый Структура;
				Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
				Данные060_073 = Строка060_073.Данные;
			Иначе
				Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
			КонецЕсли;
			Данные060_073.Вставить("П00001М106001", "18210202132061020160");
			Данные060_073.Вставить("П00001М107001", Стр070_Код4);
			Данные060_073.Вставить("П00001М107101", Стр071_Код4);
			Данные060_073.Вставить("П00001М107201", Стр072_Код4);
			Данные060_073.Вставить("П00001М107301", Стр073_Код4);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		
		МногострочныеДанные080_093
			= ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
		ИндексСтроки = 0;
		Если ЗначениеЗаполнено(Стр090_Код1)
			ИЛИ ЗначениеЗаполнено(Стр091_Код1)
			ИЛИ ЗначениеЗаполнено(Стр092_Код1)
			ИЛИ ЗначениеЗаполнено(Стр093_Код1) Тогда
			Данные080_093 = МногострочныеДанные080_093.Строки[0].Данные;
			Данные080_093.Вставить("П00001М208001", "18210202080061000160");
			Данные080_093.Вставить("П00001М209001", Стр090_Код1);
			Данные080_093.Вставить("П00001М209101", Стр091_Код1);
			Данные080_093.Вставить("П00001М209201", Стр092_Код1);
			Данные080_093.Вставить("П00001М209301", Стр093_Код1);
			ИндексСтроки = ИндексСтроки + 1;
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр090_Код2)
			ИЛИ ЗначениеЗаполнено(Стр091_Код2)
			ИЛИ ЗначениеЗаполнено(Стр092_Код2)
			ИЛИ ЗначениеЗаполнено(Стр093_Код2) Тогда
			Если ИндексСтроки > 0 Тогда
				Строка080_093 = МногострочныеДанные080_093.Строки.Добавить();
				Строка080_093.Данные = Новый Структура;
				Строка080_093.ДанныеМногострочныхЧастей = Новый Структура;
				Данные080_093 = Строка080_093.Данные;
			Иначе
				Данные080_093 = МногострочныеДанные080_093.Строки[0].Данные;
			КонецЕсли;
			Данные080_093.Вставить("П00001М208001", "18210202120061000160");
			Данные080_093.Вставить("П00001М209001", Стр090_Код2);
			Данные080_093.Вставить("П00001М209101", Стр091_Код2);
			Данные080_093.Вставить("П00001М209201", Стр092_Код2);
			Данные080_093.Вставить("П00001М209301", Стр093_Код2);
		КонецЕсли;
		
		ВеткаРаздел1.Данные["П000010002001"] = "18210202010061010160";
		ВеткаРаздел1.Данные["П000010004001"] = "18210202101081013160";
		ВеткаРаздел1.Данные["П000010010001"] = "18210202090071010160";
		
		ДеревоДанныхРаздел1Прил2 = Контейнер["Раздел1Прил2"];
		
		Для каждого ВеткаРаздел1Прил2 Из ДеревоДанныхРаздел1Прил2.Строки Цикл
			
			ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009001"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011001"]
					= ВеткаРаздел1.Данные["П000010011001"] + ВеткаРаздел1Прил2.Данные["П000120009002"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012001"]
					= ВеткаРаздел1.Данные["П000010012001"] + ВеткаРаздел1Прил2.Данные["П000120009002"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009005"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011101"]
					= ВеткаРаздел1.Данные["П000010011101"] + ВеткаРаздел1Прил2.Данные["П000120009006"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012101"]
					= ВеткаРаздел1.Данные["П000010012101"] + ВеткаРаздел1Прил2.Данные["П000120009006"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009007"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011201"]
					= ВеткаРаздел1.Данные["П000010011201"] + ВеткаРаздел1Прил2.Данные["П000120009008"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012201"]
					= ВеткаРаздел1.Данные["П000010012201"] + ВеткаРаздел1Прил2.Данные["П000120009008"];
			КонецЕсли;
			
			ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009009"]);
			Если ПризнакСтр090 = "1" Тогда
				ВеткаРаздел1.Данные["П000010011301"]
					= ВеткаРаздел1.Данные["П000010011301"] + ВеткаРаздел1Прил2.Данные["П000120009010"];
			ИначеЕсли ПризнакСтр090 = "2" Тогда
				ВеткаРаздел1.Данные["П000010012301"]
					= ВеткаРаздел1.Данные["П000010012301"] + ВеткаРаздел1Прил2.Данные["П000120009010"];
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИмяГлРаздела(ИмяФормы, ИмяРаздела, СтруктураМногоуровневыхРазделов)
	
	ИмяГлРаздела = ИмяРаздела;
	СтруктураРаздела = СтруктураМногоуровневыхРазделов[ИмяРаздела];
	Если СтруктураРаздела.Свойство("ИмяГлавногоРаздела") Тогда
		ИмяГлРаздела = СтруктураРаздела["ИмяГлавногоРаздела"];
	КонецЕсли;
	
	Возврат ИмяГлРаздела;
	
КонецФункции

Функция ЗаписатьРеглОтчет(ИмяФормы, ПараметрыЗаписи)
	
	Если НЕ ПараметрыЗаписи.СохраняемыйРеглОтчет = Неопределено Тогда
		
		Если ТипЗнч(ПараметрыЗаписи.СохраняемыйРеглОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет")
			И НЕ ПараметрыЗаписи.СохраняемыйРеглОтчет.Пустая() Тогда
			
			ДокументРегламентированныйОтчет = ПараметрыЗаписи.СохраняемыйРеглОтчет.ПолучитьОбъект();
			
			РегламентированнаяОтчетность.ЗаблокироватьДокумент(ДокументРегламентированныйОтчет);
			
		ИначеЕсли ТипЗнч(ПараметрыЗаписи.СохраняемыйРеглОтчет) = Тип("ДокументОбъект.РегламентированныйОтчет") Тогда
			
			ДокументРегламентированныйОтчет = ПараметрыЗаписи.СохраняемыйРеглОтчет;
			
			РегламентированнаяОтчетность.ЗаблокироватьДокумент(ДокументРегламентированныйОтчет);
			
		Иначе
			
			РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверный тип входящего параметра (%1) при автоматическом формировании формы %2'"),
			ТипЗнч(ПараметрыЗаписи.СохраняемыйРеглОтчет), ПараметрыЗаписи.НаименованиеОтчета));
			
			Возврат Неопределено;
			
		КонецЕсли
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		РегламентированнаяОтчетность.ЗаблокироватьДокумент(ДокументРегламентированныйОтчет);
		
		ДокументРегламентированныйОтчет.Дата = ПараметрыЗаписи.ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ПараметрыЗаписи.СохраняемыйРеглОтчет = ДокументРегламентированныйОтчет;
	
	Если ЗаписатьДокумент(ИмяФормы, ПараметрыЗаписи) = Ложь Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Процедура ИзменитьНастройкиРазделов(ИмяФормы, РазделыОтчета, ДанныеРеглОтчета)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		Если Год(ДанныеРеглОтчета.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 2020 Тогда
			
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил3", 1);
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил4", 1);
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил5", 1);
			
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил5_1", 0);
			
			ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил5_1");
			
		Иначе // год >= 2021
			
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил3", 0);
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил4", 0);
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил5", 0);
			
			ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил5_1", 1);
			
			ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил3");
			ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил4");
			ИнициализироватьМногоуровневыйРаздел(ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов, "Раздел1Прил5");
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если ДанныеРеглОтчета.СтруктураРеквизитовФормы.ИП Тогда
			
			ИзменитьНастройкиРазделаВДеревеРазделов(
				ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "ФизЛицо", 1);
			
			ИзменитьНастройкиРазделаВДеревеРазделов(
				ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил8", 1);
			
		Иначе
			
			ИзменитьНастройкиРазделаВДеревеРазделов(
				ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "ФизЛицо", 0);
			
			ИзменитьНастройкиРазделаВДеревеРазделов(
				ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел1Прил8", 0);
			
			ИнициализироватьМногоуровневыйРаздел(
				ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
				ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов,
				"Раздел1Прил8");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РазделыОтчета.Титульный.ПоМесту = "124"
		ИЛИ РазделыОтчета.Титульный.ПоМесту = "240" Тогда
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел2", 1);
		
	Иначе
		
		ИзменитьНастройкиРазделаВДеревеРазделов(
			ИмяФормы, ДанныеРеглОтчета.ДеревоСтраницОтчета, "Раздел2", 0);
		
		ИнициализироватьМногоуровневыйРаздел(
			ИмяФормы, ДанныеРеглОтчета.СтруктураРеквизитовФормы,
			ДанныеРеглОтчета.СтруктураМногоуровневыхРазделов,
			"Раздел2");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьНастройкиРазделаВДеревеРазделов(ИмяФормы,
												  ДеревоСтраницОтчета,
												  ИмяРаздела,
												  ВариантНастроек)
	
	Для Каждого СтраницаНастроек Из ДеревоСтраницОтчета.Строки Цикл
		
		Если СтраницаНастроек.ИмяСтраницы = ИмяРаздела Тогда
			
			СтраницаНастроек.ПоказатьСтраницу = ВариантНастроек;
			СтраницаНастроек.ВыводНаПечать    = ВариантНастроек;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаРегламентированногоОтчета

Функция УниверсальнаяВыгрузка(Параметры) Экспорт
	
	Перем ДанныеОтчета;
	Перем СтруктураРеквизитовФормы;
	Перем СтруктураМногоуровневыхРазделов;
	
	СохраненныйОтчет  = Параметры.СохраненныйОтчет;
	ИсточникОтчета    = Параметры.ИсточникОтчета;
	ИмяФормы	      = Параметры.ВыбраннаяФорма;
	РезультатВыгрузки = Параметры.РезультатВыгрузки;
	
	СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы);
	
	ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы);
	
	ИнициализироватьМногоуровневыеРазделы(
	ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СохраненныйОтчет;
	
	СформироватьСтруктуруПоказателей(
	ИмяФормы, ДанныеОтчета, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров(ИмяФормы, ДанныеОтчета, СтруктураРеквизитовФормы);
	
	ДеревоВыгрузки = ИзвлечьСтруктуруXML(ИмяФормы);
	
	Если НЕ ПроверитьВозможностьВыгрузки(ИмяФормы,
										 ПараметрыВыгрузки,
										 ДеревоВыгрузки,
										 РезультатВыгрузки,
										 СтруктураРеквизитовФормы,
										 СтруктураМногоуровневыхРазделов) Тогда
		
		РезультатВыгрузки.Вставить("РеглОтчетВыгружен", Ложь);
		
		Возврат РезультатВыгрузки;
		
	КонецЕсли;
	
	ЗаполнитьДанными(ИмяФормы,
					 ДанныеОтчета,
					 ПараметрыВыгрузки,
					 ДеревоВыгрузки,
					 РезультатВыгрузки,
					 СтруктураРеквизитовФормы,
					 СтруктураМногоуровневыхРазделов);
	
	КодировкаФайлаВыгрузки = "windows-1251";
	
	ТекстФайлаВыгрузки = ВыгрузитьДеревоВXML(ИмяФормы,
											 ДеревоВыгрузки,
											 ПараметрыВыгрузки,
											 КодировкаФайлаВыгрузки);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаФайлаВыгрузки);
	ЗаписьТекста.Записать(ТекстФайлаВыгрузки);
	ЗаписьТекста.Закрыть();
	ЗаписьТекста = Неопределено;
	
	ФайлВыгрузки = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлВыгрузки, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	РезультатВыгрузки.Вставить("ИмяФайлаВыгрузки", ПараметрыВыгрузки.ИдФайл + ".xml");
	РезультатВыгрузки.Вставить("АдресФайлаВыгрузки", АдресВоВременномХранилище);
	РезультатВыгрузки.Вставить("КодировкаФайлаВыгрузки", КодировкаФайлаВыгрузки);
	РезультатВыгрузки.Вставить("ТипФайлаВыгрузки", "РасчетПоСтраховымВзносам");
	РезультатВыгрузки.Вставить("РеглОтчетВыгружен", Истина);
	
	Возврат РезультатВыгрузки;
	
КонецФункции

Процедура СформироватьСтруктуруПоказателей(ИмяФормы,
										   ДанныеОтчета,
										   СтруктураРеквизитовФормы,
										   СтруктураМногоуровневыхРазделов) Экспорт
	
	ДанныеОтчета = Новый Структура;
	
	СохрСтруктура = СохраненныеДанныеОтчета(
	ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		
		ДанныеОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
		РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
		
	КонецЦикла;
	
	Для Каждого Раздел Из СтруктураМногоуровневыхРазделов Цикл
		
		ДанныеОтчета.Вставить(Раздел.Ключ);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СохраненныеДанныеОтчета(ИмяФормы,
								СтруктураРеквизитовФормы,
								СтруктураМногоуровневыхРазделов) Экспорт
	
	СохраненныеДанныеОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	
	Если СохраненныеДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
		ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(ИмяФормы,
		СохраненныеДанныеОтчета, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	КонецЕсли;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3;
		Для каждого Ветка Из ДеревоРаздела.Строки Цикл
			Если НЕ Ветка.Данные.Свойство("П000310011002") Тогда
				// Особая обработка: номер документа, удостоверяющего личность.
				Ветка.Данные.Вставить("П000310011002", "");
			КонецЕсли;
		КонецЦикла;
		СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел3", ДеревоРаздела);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1Прил9;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			Если СтрокаМнЧ.Данные["П00019М102001"] = "00001" Тогда
				Прервать;
			КонецЕсли;
			// Увеличение длины "Уникального номера" (случай сохраненных данных отчета предыдущей версии).
			СтрокаМнЧ.Данные.Вставить("П00019М102001", Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЦикла;
		СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел1Прил9", ДеревоРаздела);
		
		ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3;
		Для каждого Ветка Из ДеревоРаздела.Строки Цикл
			Если НЕ Ветка.Данные.Свойство("П000310011002") Тогда
				// Особая обработка: номер документа, удостоверяющего личность.
				Ветка.Данные.Вставить("П000310011002", "");
			КонецЕсли;
		КонецЦикла;
		СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел3", ДеревоРаздела);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1Прил10;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			Если СтрокаМнЧ.Данные["П00110М102001"] = "00001" Тогда
				Прервать;
			КонецЕсли;
			// Увеличение длины "Уникального номера" (случай сохраненных данных отчета предыдущей версии).
			СтрокаМнЧ.Данные.Вставить("П00110М102001", Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧЦ=5; ЧВН=; ЧГ="));
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				СтрокаПодчМнЧ.Данные.Вставить("П00110М211001", СтрокаМнЧ.Данные["П00110М102001"]);
			КонецЦикла;
		КонецЦикла;
		СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел1Прил10", ДеревоРаздела);
		
		ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3;
		Если НЕ ДеревоРаздела.Строки[0].Данные.Свойство("П000030004001") Тогда
			// Заполнение строки 040 раздела 3 (случай сохраненных данных отчета предыдущей версии).
			ЗаполнитьСтроку040Раздела3(ИмяФормы,
			ДеревоРаздела,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов);
			СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел3", ДеревоРаздела);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СохраненныеДанныеОтчета;
	
КонецФункции

Процедура ЗаполнитьСтроку040Раздела3(ИмяФормы,
									 ДеревоРаздела,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов) Экспорт
	
	ЗаполненРаздел = ЗаполненРаздел(ИмяФормы,
									ДеревоРаздела,
									"Раздел3",
									СтруктураРеквизитовФормы,
									СтруктураМногоуровневыхРазделов);
	
	Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
		Если ЗаполненРаздел Тогда
			ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", Формат(Инд + 1, "ЧГ="));
		Иначе
			ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьСтруктуруПараметров(ИмяФормы,
										ДанныеОтчета,
										СтруктураРеквизитовФормы) Экспорт
	
	ИндивидуальныйПредприниматель = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
	СтруктураРеквизитовФормы.мСохраненныйДок.Организация);
	
	Титульный = ДанныеОтчета.Титульный;
	
	ПараметрыВыгрузки = Новый Структура;
	
	ПараметрыВыгрузки.Вставить("ПоМесту", СокрЛП(Титульный.ПоМесту));
	
	ПараметрыВыгрузки.Вставить("ЭтоЮЛ", НЕ ИндивидуальныйПредприниматель);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", ИндивидуальныйПредприниматель);
		ПараметрыВыгрузки.Вставить("СрЧисл",   Титульный.СрСпЧисленность);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", ИндивидуальныйПредприниматель);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ПараметрыВыгрузки.Вставить("ЭтоФизЛицоСИНН", ИндивидуальныйПредприниматель
		И ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.ИНН)
		И ПараметрыВыгрузки.ПоМесту = "112");
		
		ПараметрыВыгрузки.Вставить("ЭтоФизЛицоБезИНН", ИндивидуальныйПредприниматель
		И НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.ИНН)
		И ПараметрыВыгрузки.ПоМесту = "112");
		
		ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", ИндивидуальныйПредприниматель
		И НЕ ПараметрыВыгрузки.ЭтоФизЛицоСИНН И НЕ ПараметрыВыгрузки.ЭтоФизЛицоБезИНН);
		
	КонецЕсли;
	
	ПараметрыВыгрузки.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	ПараметрыВыгрузки.Вставить("ДатаПодписи", Титульный.ДатаПодписи);
	
	ПараметрыВыгрузки.Вставить("ДатаДок_Дата", ТекущаяДатаСеанса());
	
	ПараметрыВыгрузки.Вставить("ДатаДок",  Формат(ПараметрыВыгрузки.ДатаДок_Дата, "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("Период",   СокрЛП(Титульный.Период));
	ПараметрыВыгрузки.Вставить("ОтчетГод", Формат(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания, "ДФ=гггг"));
	ПараметрыВыгрузки.Вставить("КодНО",    СокрЛП(Титульный.НалоговыйОрган));
	ПараметрыВыгрузки.Вставить("НомКорр",  Строка(СтруктураРеквизитовФормы.мСохраненныйДок.Вид));
	
	ПараметрыВыгрузки.Вставить("КодИФНСПосредника",
	?(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.КрупнейшийНалогоплательщик,
	СокрЛП(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.КодНалоговогоОрганаПолучателя), ""));
	
	ПараметрыВыгрузки.Вставить("Тлф", СокрЛП(Титульный.ТелОрганизации));
	
	ПараметрыВыгрузки.Вставить("НаимОрг", СокрЛП(Титульный.НаимОрг));
	ПараметрыВыгрузки.Вставить("ИННОрг",  СокрЛП(СтруктураРеквизитовФормы.мСохраненныйДок.Организация.ИНН));
	ПараметрыВыгрузки.Вставить("КПП",     СокрЛП(Титульный.КПП));
	ПараметрыВыгрузки.Вставить("ОКВЭД",   СокрЛП(Титульный.ОКВЭД));
	
	ПараметрыВыгрузки.Вставить("ФормРеорг", СокрЛП(Титульный.КодФормыРеорганизации));
	ПараметрыВыгрузки.Вставить("ИННРеорг",  СокрЛП(Титульный.ИННРеорганизованнойОрганизации));
	ПараметрыВыгрузки.Вставить("КППРеорг",  СокрЛП(Титульный.КППРеорганизованнойОрганизации));
	
	ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(Титульный.НаимОрг);
	ПараметрыВыгрузки.Вставить("Фамилия",  ФИОИП.Фамилия);
	ПараметрыВыгрузки.Вставить("Имя",      ФИОИП.Имя);
	ПараметрыВыгрузки.Вставить("Отчество", ФИОИП.Отчество);
	
	ПараметрыВыгрузки.Вставить("ПрПодп",      СокрЛП(Титульный.ПрПодп));
	ПараметрыВыгрузки.Вставить("НаимОргПред", СокрЛП(Титульный.ОргУп));
	ПараметрыВыгрузки.Вставить("НаимДокПред", СокрЛП(Титульный.ДокУпПред));
	ФИОПодписанта = РегламентированнаяОтчетность.РазложитьФИО(Титульный.ОргПодписант);
	ПараметрыВыгрузки.Вставить("ФамилияПодписанта",  ФИОПодписанта.Фамилия);
	ПараметрыВыгрузки.Вставить("ИмяПодписанта",      ФИОПодписанта.Имя);
	ПараметрыВыгрузки.Вставить("ОтчествоПодписанта", ФИОПодписанта.Отчество);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		СведенияОФизЛице = ДанныеОтчета.ФизЛицо;
		
		ПараметрыВыгрузки.Вставить("ДатаРожд_Дата", СведенияОФизЛице.ДатаРождения);
		
		ПараметрыВыгрузки.Вставить("ДатаРожд",        Формат(ПараметрыВыгрузки.ДатаРожд_Дата, "ДФ=дд.ММ.гггг"));
		ПараметрыВыгрузки.Вставить("МестоРожд",       СокрЛП(СведенияОФизЛице.МестоРождения));
		ПараметрыВыгрузки.Вставить("ОКСМ",            СокрЛП(СведенияОФизЛице.КодСтраныГражданства));
		ПараметрыВыгрузки.Вставить("УдЛичнКодВидДок", СокрЛП(СведенияОФизЛице.КодВидаДокумента));
		ПараметрыВыгрузки.Вставить("УдЛичнСерДок",    СокрЛП(СведенияОФизЛице.СерияДокумента));
		ПараметрыВыгрузки.Вставить("УдЛичнНомДок",    СокрЛП(СведенияОФизЛице.НомерДокумента));
		ПараметрыВыгрузки.Вставить("УдЛичнСерНомДок", ПараметрыВыгрузки.УдЛичнСерДок + " " + ПараметрыВыгрузки.УдЛичнНомДок);
		ПараметрыВыгрузки.Вставить("УдЛичнВыдДок",    СокрЛП(СведенияОФизЛице.КемВыданДокумент));
		ПараметрыВыгрузки.Вставить("УдЛичнДатаДок",   Формат(СведенияОФизЛице.ДатаВыдачи, "ДФ=дд.ММ.гггг"));
		
		ПараметрыВыгрузки.Вставить("Индекс",     СокрЛП(СведенияОФизЛице.АдресИндекс));
		ПараметрыВыгрузки.Вставить("КодРегион",  СокрЛП(СведенияОФизЛице.АдресКодРегиона));
		ПараметрыВыгрузки.Вставить("Район",      СокрЛП(СведенияОФизЛице.АдресРайон));
		ПараметрыВыгрузки.Вставить("Город",      СокрЛП(СведенияОФизЛице.АдресГород));
		ПараметрыВыгрузки.Вставить("НаселПункт", СокрЛП(СведенияОФизЛице.АдресНаселенныйПункт));
		ПараметрыВыгрузки.Вставить("Улица",      СокрЛП(СведенияОФизЛице.АдресУлица));
		ПараметрыВыгрузки.Вставить("Дом",        СокрЛП(СведенияОФизЛице.АдресНомерДома));
		ПараметрыВыгрузки.Вставить("Корпус",     СокрЛП(СведенияОФизЛице.АдресНомерКорпуса));
		ПараметрыВыгрузки.Вставить("Кварт",      СокрЛП(СведенияОФизЛице.АдресНомерКвартиры));
		
	КонецЕсли;
	
	ПараметрыВыгрузки.Вставить("ИмяКлючевогоУзлаСодержательнойЧасти", "РасчетСВ");
	
	ПараметрыВыгрузки.Вставить("ИдФайл", ИдентификаторФайлаВыгрузки(ИмяФормы, ПараметрыВыгрузки, "NO_RASCHSV"));
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

Функция ИзвлечьСтруктуруXML(ИмяФормы) Экспорт
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		Макет = ЭтотОбъект.ПолучитьМакет("СхемаВыгрузки503");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		Макет = ЭтотОбъект.ПолучитьМакет("СхемаВыгрузки502");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Макет = ЭтотОбъект.ПолучитьМакет("СхемаВыгрузки501");
		
	КонецЕсли;
	
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

Функция ПроверитьВозможностьВыгрузки(ИмяФормы,
									 ПараметрыВыгрузки,
									 ДеревоВыгрузки,
									 РезультатВыгрузки,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов) Экспорт
	
	ГодРасчета = Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		Если ПараметрыВыгрузки.СрЧисл <> 0 И (ПараметрыВыгрузки.ПоМесту = "335"
			ИЛИ ПараметрыВыгрузки.ПоМесту = "222" ИЛИ ПараметрыВыгрузки.ФормРеорг = "9") Тогда
			
			Если ГодРасчета >= 2021 Тогда
				
				СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Поле ""Среднесписочная численность (чел.)"" расчета, представляемого по обособленному"
				+ " подразделению организации, начиная с расчетного (отчетного) периода 1 квартал 2021 года,"
				+ " не заполняется (письмо ФНС России от 22.01.2021 № БС-4-11/663@)", "Титульный", "СрСпЧисленность");
				
				Возврат Ложь;
				
			Иначе
				
				СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"В поле ""Среднесписочная численность (чел.)"" расчета за 2020 год, представляемого"
				+ " по обособленному подразделению организации, указывается значение ""0"""
				+ " (письмо ФНС России от 22.01.2021 № БС-4-11/663@)", "Титульный", "СрСпЧисленность");
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтатусПроверки = Истина;
	
	ДанныеМногоуровневыхРазделов = Новый Структура;
	СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	Для каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	ВозможныеКодыПоМесту = Новый Массив;
	ВозможныеКодыПоМесту.Добавить("112");
	ВозможныеКодыПоМесту.Добавить("120");
	ВозможныеКодыПоМесту.Добавить("121");
	ВозможныеКодыПоМесту.Добавить("122");
	ВозможныеКодыПоМесту.Добавить("124");
	ВозможныеКодыПоМесту.Добавить("214");
	ВозможныеКодыПоМесту.Добавить("217");
	ВозможныеКодыПоМесту.Добавить("222");
	ВозможныеКодыПоМесту.Добавить("240");
	ВозможныеКодыПоМесту.Добавить("335");
	ВозможныеКодыПоМесту.Добавить("350");
	
	ВозможныеКодыПериода = Новый Массив;
	ВозможныеКодыПериода.Добавить("21");
	ВозможныеКодыПериода.Добавить("31");
	ВозможныеКодыПериода.Добавить("33");
	ВозможныеКодыПериода.Добавить("34");
	ВозможныеКодыПериода.Добавить("51");
	ВозможныеКодыПериода.Добавить("52");
	ВозможныеКодыПериода.Добавить("53");
	ВозможныеКодыПериода.Добавить("90");
	ВозможныеКодыПериода.Добавить("83");
	ВозможныеКодыПериода.Добавить("84");
	ВозможныеКодыПериода.Добавить("85");
	ВозможныеКодыПериода.Добавить("86");
	
	ВозможныеКодыФормыРеорганизции = Новый Массив;
	ВозможныеКодыФормыРеорганизции.Добавить("1");
	ВозможныеКодыФормыРеорганизции.Добавить("2");
	ВозможныеКодыФормыРеорганизции.Добавить("3");
	ВозможныеКодыФормыРеорганизции.Добавить("4");
	ВозможныеКодыФормыРеорганизции.Добавить("5");
	ВозможныеКодыФормыРеорганизции.Добавить("6");
	ВозможныеКодыФормыРеорганизции.Добавить("7");
	ВозможныеКодыФормыРеорганизции.Добавить("9");
	ВозможныеКодыФормыРеорганизции.Добавить("0");
	
	МассивСтрок1_2 = Новый Массив;
	МассивСтрок1_2.Добавить("1");
	МассивСтрок1_2.Добавить("2");
	
	МассивСтрок1_3 = Новый Массив;
	МассивСтрок1_3.Добавить("1");
	МассивСтрок1_3.Добавить("2");
	МассивСтрок1_3.Добавить("3");
	
	МассивСтрок1_5 = Новый Массив;
	МассивСтрок1_5.Добавить("1");
	МассивСтрок1_5.Добавить("2");
	МассивСтрок1_5.Добавить("3");
	МассивСтрок1_5.Добавить("4");
	МассивСтрок1_5.Добавить("5");
	
	// Титульный лист.
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задан ИНН организации, обособленного подразделения", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 10 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Задан ИНН организации, обособленного подразделения, не состоящий из 10 цифр", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КПП) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задан КПП организации, обособленного подразделения", "Титульный", "КПП");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.КПП) <> 9 Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Задан КПП организации, обособленного подразделения, не состоящий из 9 символов", "Титульный", "КПП");
			СтатусПроверки = Ложь;
		Иначе
			Символы56КПП = Сред(ПараметрыВыгрузки.КПП, 5, 2);
			Если Символы56КПП = "50" Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"5-й и 6-й символы в КПП организации, обособленного подразделения не должны быть равны 50", "Титульный", "КПП");
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимОрг) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки,
			"Не задано наименование организации, обособленного подразделения", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
	Иначе
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
			Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
				ИП_ГлаваКФХ = " главы крестьянского (фермерского) хозяйства";
			Иначе
				ИП_ГлаваКФХ = " индивидуального предпринимателя";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
				ОписаниеОшибки = "Не задан ИНН" + ИП_ГлаваКФХ;
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, ОписаниеОшибки, "Титульный", "ИНН");
				СтатусПроверки = Ложь;
			Иначе
				ТекстСообщения = "";
				Если НЕ ИННФЛСоответствуетТребованиям(ПараметрыВыгрузки.ИННОрг, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задан ИНН" + ИП_ГлаваКФХ + "."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ИНН");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Фамилия);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана фамилия" + ИП_ГлаваКФХ, "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задана фамилия" + ИП_ГлаваКФХ + "."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Имя);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задано имя" + ИП_ГлаваКФХ, "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано имя" + ИП_ГлаваКФХ + "."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Отчество);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано отчество" + ИП_ГлаваКФХ + "."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
		Иначе
			Если ПараметрыВыгрузки.ЭтоФизЛицоСИНН Тогда
				ТекстСообщения = "";
				Если НЕ ИННФЛСоответствуетТребованиям(ПараметрыВыгрузки.ИННОрг, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задан ИНН физического лица."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ИНН");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Фамилия);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана фамилия физического лица", "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задана фамилия физического лица."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Имя);
			Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задано имя физического лица", "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано имя физического лица."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ТекстСообщения = "";
			РеквизитФИО = СокрЛП(ПараметрыВыгрузки.Отчество);
			Если ЗначениеЗаполнено(РеквизитФИО)
				И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано отчество физического лица."
				+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КодНО) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Не задан код налогового органа", "Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(ПараметрыВыгрузки.КодНО) <> 4 Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Задан код налогового органа, не состоящий из 4 цифр", "Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ПоМесту) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Не задан код места, по которому представляется расчет", "Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПоМесту.Найти(ПараметрыВыгрузки.ПоМесту) = Неопределено Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Задан некорректный код места, по которому представляется расчет", "Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Период) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Не задан код расчетного (отчетного) периода", "Титульный", "Период");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПериода.Найти(ПараметрыВыгрузки.Период) = Неопределено Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Задан некорректный код расчетного (отчетного) периода", "Титульный", "Период");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ВозможныеКодыПериода.Найти(ПараметрыВыгрузки.Период) <> Неопределено Тогда
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			Если ПараметрыВыгрузки.ПоМесту = "120" ИЛИ ПараметрыВыгрузки.ПоМесту = "124" Тогда
				
				Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3
					И НЕ (ПараметрыВыгрузки.Период = "21" ИЛИ ПараметрыВыгрузки.Период = "83") Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода "
					+ ПараметрыВыгрузки.ПоМесту + " места, по которому представляется расчет за 1 квартал, допустимы коды 21, 83 расчетного (отчетного) периода",
					"Титульный", "Период");
					СтатусПроверки = Ложь;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 6
					И НЕ (ПараметрыВыгрузки.Период = "31" ИЛИ ПараметрыВыгрузки.Период = "84") Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода "
					+ ПараметрыВыгрузки.ПоМесту + " места, по которому представляется расчет за полугодие, допустимы коды 31, 84 расчетного (отчетного) периода",
					"Титульный", "Период");
					СтатусПроверки = Ложь;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 9
					И НЕ (ПараметрыВыгрузки.Период = "33" ИЛИ ПараметрыВыгрузки.Период = "85") Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода "
					+ ПараметрыВыгрузки.ПоМесту + " места, по которому представляется расчет за 9 месяцев, допустимы коды 33, 85 расчетного (отчетного) периода",
					"Титульный", "Период");
					СтатусПроверки = Ложь;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 12
					И НЕ (ПараметрыВыгрузки.Период = "34" ИЛИ ПараметрыВыгрузки.Период = "86") Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода "
					+ ПараметрыВыгрузки.ПоМесту + " места, по которому представляется расчет за год, допустимы коды 34, 86 расчетного (отчетного) периода",
					"Титульный", "Период");
					СтатусПроверки = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
			
			Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
				Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3
					И ПараметрыВыгрузки.Период <> "83" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за 1 квартал, допустим код ""83"" расчетного (отчетного) периода",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 6
					И ПараметрыВыгрузки.Период <> "84" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за полугодие, допустим код ""84"" расчетного (отчетного) периода",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 9
					И ПараметрыВыгрузки.Период <> "85" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за 9 месяцев, допустим код ""85"" расчетного (отчетного) периода",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 12
					И ПараметрыВыгрузки.Период <> "34" И ПараметрыВыгрузки.Период <> "86" Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""124"" места, по которому представляется расчет за год, допустимы коды ""34"", ""86"" расчетного (отчетного) периода",
					"Титульный", "ПоМесту");
					СтатусПроверки = Ложь;
				КонецЕсли;
			ИначеЕсли ПараметрыВыгрузки.ПоМесту = "240" Тогда
				Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3 Тогда
					Если ПараметрыВыгрузки.Период <> "51" Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""240"" места, по которому представляется расчет за 1 квартал, допустим код ""51"" расчетного (отчетного) периода",
						"Титульный", "ПоМесту");
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Не задан код формы реорганизации (ликвидации) при коде ""240"" места, по которому представляется расчет за 1 квартал",
						"Титульный", "КодФормыРеорганизации");
						СтатусПроверки = Ложь;
					КонецЕсли;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 6 Тогда
					Если ПараметрыВыгрузки.Период <> "52" Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""240"" места, по которому представляется расчет за полугодие, допустим код ""52"" расчетного (отчетного) периода",
						"Титульный", "ПоМесту");
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Не задан код формы реорганизации (ликвидации) при коде ""240"" места, по которому представляется расчет за полугодие",
						"Титульный", "КодФормыРеорганизации");
						СтатусПроверки = Ложь;
					КонецЕсли;
				ИначеЕсли Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 9 Тогда
					Если ПараметрыВыгрузки.Период <> "53" Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Задано некорректное сочетание кода места, по которому представляется расчет, и кода расчетного (отчетного) периода. Для кода ""240"" места, по которому представляется расчет за 9 месяцев, допустим код ""53"" расчетного (отчетного) периода",
						"Титульный", "ПоМесту");
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Не задан код формы реорганизации (ликвидации) при коде ""240"" места, по которому представляется расчет за 9 месяцев",
						"Титульный", "КодФормыРеорганизации");
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ОКВЭД) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Не задан код по ОКВЭД2", "Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ РегламентированнаяОтчетностьКлиентСервер.ОКВЭДСоответствуетТребованиям(
		ПараметрыВыгрузки.ОКВЭД) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Задан некорректный код по ОКВЭД2. Допустимы значения, соответствующие шаблонам: ""XX"", ""XX.X"", ""XX.XX"", ""XX.XX.X"", ""XX.XX.XX"" (X - любая цифра)",
		"Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПараметрыВыгрузки.ПрПодп = "2" ИЛИ (ПараметрыВыгрузки.ЭтоЮЛ И ПараметрыВыгрузки.ПрПодп = "1") Тогда
		ТекстСообщения = "";
		РеквизитФИО = СокрЛП(ПараметрыВыгрузки.ФамилияПодписанта);
		Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана фамилия подписанта", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задана фамилия подписанта."
			+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ТекстСообщения = "";
		РеквизитФИО = СокрЛП(ПараметрыВыгрузки.ИмяПодписанта);
		Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задано имя подписанта", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано имя подписанта."
			+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ТекстСообщения = "";
		РеквизитФИО = СокрЛП(ПараметрыВыгрузки.ОтчествоПодписанта);
		Если ЗначениеЗаполнено(РеквизитФИО)
			И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задано отчество подписанта."
			+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыВыгрузки.ПрПодп = "2" И НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимДокПред) Тогда
		СообщитьВТС(ИмяФормы, РезультатВыгрузки,
		"Не задано наименование документа, подтверждающего полномочия представителя плательщика страховых взносов",
		"Титульный", "ДокУпПред");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.ИННРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.КППРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
			СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Не задан код формы реорганизации (ликвидации).",
				"Титульный", "КодФормыРеорганизации");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			Если ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг)
				И ПараметрыВыгрузки.ФормРеорг <> "0" Тогда
				Если ВозможныеКодыФормыРеорганизции.Найти(ПараметрыВыгрузки.ФормРеорг) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Задано некорректное значение кода формы реорганизации (ликвидации).",
					"Титульный", "КодФормыРеорганизации");
					СтатусПроверки = Ложь;
				Иначе
					ДлинаИННРеорг = СтрДлина(ПараметрыВыгрузки.ИННРеорг);
					Если ДлинаИННРеорг <> 10 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не" + ?(ДлинаИННРеорг = 0, "", "верно")
						+ " задан ИНН реорганизованной организации.",
						"Титульный", "ИННРеорганизованнойОрганизации");
						СтатусПроверки = Ложь;
					КонецЕсли;
					ДлинаКППРеорг = СтрДлина(ПараметрыВыгрузки.КППРеорг);
					Если ДлинаКППРеорг <> 9 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не" + ?(ДлинаКППРеорг = 0, "", "верно")
						+ " задан КПП реорганизованной организации.",
						"Титульный", "КППРеорганизованнойОрганизации");
						СтатусПроверки = Ложь;
					Иначе
						Символы56КПП = Сред(ПараметрыВыгрузки.КППРеорг, 5, 2);
						Если Символы56КПП = "50" Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "5-й и 6-й символы в КПП " + ?(ПараметрыВыгрузки.ФормРеорг = "9",
							"лишенного полномочий (закрытого) обособленного подразделения", "реорганизованной организации")
							+ " не должны быть равны 50", "Титульный", "КППРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
			
			Если ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
				Если ПараметрыВыгрузки.ФормРеорг = "9" Тогда
					Если ПараметрыВыгрузки.НомКорр = "0" Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Номер корректировки должен быть больше нуля при значении кода формы реорганизации (ликвидации), равном 9.",
						"Титульный", "НомерКорректировки");
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если ПараметрыВыгрузки.ПоМесту = "214" Тогда
						Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННРеорг) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"ИНН реорганизованной организации должен быть задан при коде места, по которому представляется расчет, равном 214, и коде формы реорганизации (ликвидации), равном 9.",
							"Титульный", "ИННРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННРеорг) <> 10 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задан ИНН реорганизованной организации.",
							"Титульный", "ИННРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КППРеорг) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"КПП реорганизованной организации должен быть задан при коде места, по которому представляется расчет, равном 214, и коде формы реорганизации (ликвидации), равном 9.",
							"Титульный", "КППРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						ИначеЕсли СтрДлина(ПараметрыВыгрузки.КППРеорг) <> 9 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Неверно задан КПП реорганизованной организации.",
							"Титульный", "КППРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						Иначе
							Символы56КПП = Сред(ПараметрыВыгрузки.КППРеорг, 5, 2);
							Если Символы56КПП = "50" Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки,
								"5-й и 6-й символы в КПП реорганизованной организации не должны быть равны 50",
								"Титульный", "КППРеорганизованнойОрганизации");
								СтатусПроверки = Ложь;
							КонецЕсли;
						КонецЕсли;
					ИначеЕсли ПараметрыВыгрузки.ПоМесту = "222" Тогда
						Если ЗначениеЗаполнено(ПараметрыВыгрузки.ИННРеорг) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"ИНН реорганизованной организации не должен быть задан при коде места, по которому представляется расчет, равном 222, и коде формы реорганизации (ликвидации), равном 9.",
							"Титульный", "ИННРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если ЗначениеЗаполнено(ПараметрыВыгрузки.КППРеорг) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"КПП реорганизованной организации не должен быть задан при коде места, по которому представляется расчет, равном 222, и коде формы реорганизации (ликвидации), равном 9.",
							"Титульный", "КППРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						КонецЕсли;
					Иначе
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Код места, по которому представляется расчет, должен быть равен 214 или 222 при значении кода формы реорганизации (ликвидации), равном 9.",
						"Титульный", "ПоМесту");
						СтатусПроверки = Ложь;
					КонецЕсли;
				ИначеЕсли ПараметрыВыгрузки.ФормРеорг <> "0" Тогда
					Если ВозможныеКодыФормыРеорганизции.Найти(ПараметрыВыгрузки.ФормРеорг) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Задано некорректное значение кода формы реорганизации (ликвидации).", "Титульный", "КодФормыРеорганизации");
						СтатусПроверки = Ложь;
					Иначе
						ДлинаИННРеорг = СтрДлина(ПараметрыВыгрузки.ИННРеорг);
						Если ДлинаИННРеорг <> 10 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не" + ?(ДлинаИННРеорг = 0, "", "верно")
							+ " задан ИНН реорганизованной организации.", "Титульный", "ИННРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						КонецЕсли;
						ДлинаКППРеорг = СтрДлина(ПараметрыВыгрузки.КППРеорг);
						Если ДлинаКППРеорг <> 9 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не" + ?(ДлинаКППРеорг = 0, "", "верно")
							+ " задан КПП реорганизованной организации.", "Титульный", "КППРеорганизованнойОрганизации");
							СтатусПроверки = Ложь;
						Иначе
							Символы56КПП = Сред(ПараметрыВыгрузки.КППРеорг, 5, 2);
							Если Символы56КПП = "50" Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки,
								"5-й и 6-й символы в КПП реорганизованной организации не должны быть равны 50",
								"Титульный", "КППРеорганизованнойОрганизации");
								СтатусПроверки = Ложь;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПарамПроверки = Новый Структура;
	ПарамПроверки.Вставить("ИмяФормы", ИмяФормы);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ВозможныеКодыТарифаПлательщика_Стр = "01, 06, 07, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21";
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") И ГодРасчета >= 2021 Тогда
			
			ВозможныеКодыТарифаПлательщика_Стр = "01, 06, 07, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22";
			
		КонецЕсли;
		
		ВозможныеКодыТарифаПлательщика = СтрРазделить(ВозможныеКодыТарифаПлательщика_Стр, ", ", Ложь);
		
		// Раздел 1.
		//
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1;
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ТипПлательщика = СокрЛП(Данные["П000010000101"]);
		
		Если ЗначениеЗаполнено(ПараметрыВыгрузки.ПоМесту) Тогда
			
			ДопПараметры = Новый Структура;
			Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
				ДопПараметры.Вставить("НеПроверятьЗаполнениеСтрок001_010_020_040_100Раздела1");
				ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
			КонецЕсли;
			
			Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240")
				ИЛИ ЗаполненРаздел1(ИмяФормы, ДанныеМногоуровневыхРазделов,
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240")
					И НЕ ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Раздел 1 должен быть заполнен при значении кода места, по которому представляется расчет, не равном 124 и 240",
					"Раздел1", "П000010000101", НомерСтраницы);
					СтатусПроверки = Ложь;
					
				Иначе
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1");
					ПарамПроверки.Вставить("Данные",        Данные);
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					ЗначПок = СокрЛП(Данные["П000010000101"]);
					Если МассивСтрок1_2.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке 001 не" + ?(ЗначПок = "", "", "верно")
						+ " задан код типа плательщика", "Раздел1", "П000010000101", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000010001001"]));
					Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
						+ " задан код по ОКТМО", "Раздел1", "П000010001001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					КБКДлина = СтрДлина(СокрЛП(Данные["П000010002001"]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
						+ " задан код бюджетной классификации", "Раздел1", "П000010002001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПроверитьПоказательНаНеотрицательность("П000010003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					Если ТипПлательщика = "2" Тогда
						ПроверитьПоказательНаРавенствоНулю("П000010003101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаРавенствоНулю("П000010003201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаРавенствоНулю("П000010003301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					Иначе
						ПроверитьПоказательНаНеотрицательность("П000010003101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000010003201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000010003301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					КонецЕсли;
					
					КБКДлина = СтрДлина(СокрЛП(Данные["П000010004001"]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
						+ " задан код бюджетной классификации", "Раздел1", "П000010004001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПроверитьПоказательНаНеотрицательность("П000010005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					Если ТипПлательщика = "2" Тогда
						ПроверитьПоказательНаРавенствоНулю("П000010005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаРавенствоНулю("П000010005201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаРавенствоНулю("П000010005301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					Иначе
						ПроверитьПоказательНаНеотрицательность("П000010005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000010005201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000010005301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					КонецЕсли;
					
					ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
					СтруктураРеквизитовФормы.мИдГруппы1М1];
					ИмяПокКБК = "П00001М106001";
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107001"])
							ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107101"])
							ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107201"])
							ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107301"]) Тогда
							
							Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
							КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
							Если НЕ КБКДлина = 20 Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке " + Инд + " группы строк 060-073 не"
								+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации", "Раздел1", ИмяПокКБК + "_" + Инд);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
							ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
							
							ПроверитьПоказательНаНеотрицательность("П00001М107001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							Если ТипПлательщика = "2" Тогда
								ПроверитьПоказательНаРавенствоНулю("П00001М107101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаРавенствоНулю("П00001М107201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаРавенствоНулю("П00001М107301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							Иначе
								ПроверитьПоказательНаНеотрицательность("П00001М107101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П00001М107201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П00001М107301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
					
					ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
					СтруктураРеквизитовФормы.мИдГруппы1М2];
					ИмяПокКБК = "П00001М208001";
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209001"])
							ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209101"])
							ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209201"])
							ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209301"]) Тогда
							
							Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
							КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
							Если НЕ КБКДлина = 20 Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке " + Инд + " группы строк 080-093 не"
								+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации", "Раздел1", ИмяПокКБК + "_" + Инд);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
							ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
							
							ПроверитьПоказательНаНеотрицательность("П00001М209001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							Если ТипПлательщика = "2" Тогда
								ПроверитьПоказательНаРавенствоНулю("П00001М209101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаРавенствоНулю("П00001М209201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаРавенствоНулю("П00001М209301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							Иначе
								ПроверитьПоказательНаНеотрицательность("П00001М209101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П00001М209201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П00001М209301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
					
					КБКДлина = СтрДлина(СокрЛП(Данные["П000010010001"]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 1: в строке 100 не" + ?(КБКДлина = 0, "", "верно")
						+ " задан код бюджетной классификации", "Раздел1", "П000010010001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные", Данные);
					
					ПроверитьПоказательНаНеотрицательность("П000010011001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000010011101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000010011201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000010011301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
						И Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
						
						Если Данные["П000010012001"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Раздел 1: строка 120 не подлежит заполнению с отчетного периода 1 квартал 2021 года",
							"Раздел1", "П000010012001", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если Данные["П000010012101"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Раздел 1: строка 121 не подлежит заполнению с отчетного периода 1 квартал 2021 года",
							"Раздел1", "П000010012101", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если Данные["П000010012201"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Раздел 1: строка 122 не подлежит заполнению с отчетного периода 1 квартал 2021 года",
							"Раздел1", "П000010012201", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если Данные["П000010012301"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Раздел 1: строка 123 не подлежит заполнению с отчетного периода 1 квартал 2021 года",
							"Раздел1", "П000010012301", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
					Иначе
						
						ПроверитьПоказательНаНеотрицательность("П000010012001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						Если ТипПлательщика = "2" Тогда
							ПроверитьПоказательНаРавенствоНулю("П000010012101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаРавенствоНулю("П000010012201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаРавенствоНулю("П000010012301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						Иначе
							ПроверитьПоказательНаНеотрицательность("П000010012101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаНеотрицательность("П000010012201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаНеотрицательность("П000010012301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Приложение 1 к разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил1;
			
			ЗаполненРаздел1Прил1 = ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил1",
			СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКодаТарифаПлательщика");
			
			Если ТипПлательщика = "2" И НЕ ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил1",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				// Особая обработка: Приложение 1 к разделу 1 не выгружается.
				
			ИначеЕсли ТипПлательщика = "1" ИЛИ ЗаполненРаздел1Прил1 Тогда
				
				Если ТипПлательщика = "1" И НЕ ЗаполненРаздел1Прил1 Тогда
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 1 к разделу 1 должно быть заполнено при значении кода типа плательщика в разделе 1, равном 1",
					"Раздел1Прил1", "П000110000101", "1");
					СтатусПроверки = Ложь;
					
				Иначе
					
					Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
						
						Данные = СтраницаРаздела.Данные;
						НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
						
						КодТарифа = СокрЛП(Данные["П000110000101"]);
						Если НЕ ЗначениеЗаполнено(КодТарифа) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ ": в строке 001 не задан код тарифа плательщика", "Раздел1Прил1", "П000110000101", НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли ВозможныеКодыТарифаПлательщика.Найти(КодТарифа) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ ": в строке 001 задано некорректное значение кода тарифа плательщика. Возможны значения: "
							+ ВозможныеКодыТарифаПлательщика_Стр, "Раздел1Прил1", "П000110000101", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						// Подразделы 1.1 и 1.2 приложения 1 к разделу 1.
						КоординатыПодраздела = НомерСтраницы + ",1,1";
						
						ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_1и1_2");
						ПарамПроверки.Вставить("Данные",               СтраницаРаздела.Строки[0].Строки[0].Данные);
						ПарамПроверки.Вставить("НомерСтраницы",        НомерСтраницы);
						ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
						
						ПроверитьПоказательНаНеотрицательность("П011110003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110004501", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110004502", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110004503", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110004504", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110005102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110005103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110005104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110006101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011110006201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006202", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011110006204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011120003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011120004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011120004501", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120004502", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120004503", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120004504", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011120005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П011120006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П011120006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						// Подраздел 1.3.1 приложения 1 к разделу 1.
						//
						ЗаполненПодраздел = Ложь;
						ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11131М1;
						ДанныеМнЧ = СтраницаРаздела.Строки[1].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
						МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
						Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
							Для каждого ИмяГрафы Из МассивИменГраф Цикл
								Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
									ЗаполненПодраздел = Истина;
									Прервать;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
						Если ЗаполненПодраздел Тогда
							Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
								ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
								НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
								КоординатыПодраздела = НомерСтраницы + ",2," + НомерСтроки;
								
								ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П11131М100101"]);
								Если МассивСтрок1_2.Найти(ЗначПок) = Неопределено Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
									+ " -> Подраздел 1.3.1: в строке " + НомерСтроки + " группы строк 001-050 не" + ?(ЗначПок = "",
									"", "верно") + " задан признак основания исчисления сумм страховых взносов по дополнительному тарифу",
									"Раздел1Прил1Подр1_3_1", "П11131М100101_" + НомерСтроки, КоординатыПодраздела);
									СтатусПроверки = Ложь;
								КонецЕсли;
								
								ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_1");
								ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
								ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
								ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
								
								ПроверитьПоказательНаНеотрицательность("П11131М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								
								ПроверитьПоказательНаНеотрицательность("П11131М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								
								ПроверитьПоказательНаНеотрицательность("П11131М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								
								ПроверитьПоказательНаНеотрицательность("П11131М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11131М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							КонецЦикла;
						КонецЕсли;
						
						// Подраздел 1.3.2 приложения 1 к разделу 1.
						//
						ЗаполненПодраздел = Ложь;
						ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11132М1;
						ДанныеМнЧ = СтраницаРаздела.Строки[2].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
						МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
						Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
							Для каждого ИмяГрафы Из МассивИменГраф Цикл
								Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
									ЗаполненПодраздел = Истина;
									Прервать;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
						Если ЗаполненПодраздел Тогда
							Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
								ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
								НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
								КоординатыПодраздела = НомерСтраницы + ",3," + НомерСтроки;
								
								ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П11132М100101"]);
								Если МассивСтрок1_2.Найти(ЗначПок) = Неопределено Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
									+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
									+ ?(ЗначПок = "", "", "верно") + " задан код основания исчисления",
									"Раздел1Прил1Подр1_3_2", "П11132М100101_" + НомерСтроки, КоординатыПодраздела);
									СтатусПроверки = Ложь;
								КонецЕсли;
								ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П11132М100201"]);
								Если МассивСтрок1_5.Найти(ЗначПок) = Неопределено Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
									+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не" + ?(ЗначПок = "",
									"", "верно") + " задан код класса условий труда",
									"Раздел1Прил1Подр1_3_2", "П11132М100201_" + НомерСтроки, КоординатыПодраздела);
									СтатусПроверки = Ложь;
								КонецЕсли;
								
								ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_2");
								ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
								ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
								ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
								
								ПроверитьПоказательНаНеотрицательность("П11132М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								
								ПроверитьПоказательНаНеотрицательность("П11132М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								
								ПроверитьПоказательНаНеотрицательность("П11132М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								
								ПроверитьПоказательНаНеотрицательность("П11132М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
								ПроверитьПоказательНаНеотрицательность("П11132М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							КонецЦикла;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Приложение 1.1 к разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил1_1;
			
			Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил1_1",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
				
				НомерСтраницы = 1;
				
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы111М1;
				ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00111М100101"]);
					Если МассивСтрок1_2.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1.1 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 001-050 не" + ?(ЗначПок = "", "", "верно")
						+ " задан код основания исчисления страховых взносов на дополнительное социальное обеспечение",
						"Раздел1Прил1_1", "П00111М100101_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",     "Раздел1Прил1_1");
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтраницы",  НомерСтраницы);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00111М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П00111М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П00111М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П00111М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00111М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				КонецЦикла;
				
			КонецЕсли;
			
			// Приложение 2 к разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил2;
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
			
			ЗаполненРаздел1Прил2 = ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил2",
			СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры);
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКодаТарифаПлательщикаИПризнакаВыплат");
			ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
			
			Если ТипПлательщика = "2" И НЕ ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил2",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				// Особая обработка: Приложение 2 к разделу 1 не выгружается.
				
			ИначеЕсли ТипПлательщика = "1" ИЛИ ЗаполненРаздел1Прил2 Тогда
				
				Если ТипПлательщика = "1" И НЕ ЗаполненРаздел1Прил2 Тогда
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 2 к разделу 1 должно быть заполнено при значении кода типа плательщика в разделе 1, равном 1",
					"Раздел1Прил2", "П00012М100101_1", "1");
					СтатусПроверки = Ложь;
					
				Иначе
					
					Данные = ДеревоРаздела.Строки[0].Данные;
					НомерСтраницы = 1;
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил2");
					ПарамПроверки.Вставить("Данные",        Данные);
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
						И Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
						
						Если Данные["П000120007001"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 2 к Разделу 1: графа 1 строки 070 не подлежит заполнению с отчетного периода 1 квартал 2021 года "
							+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@)", "Раздел1Прил2", "П000120007001", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если Данные["П000120007002"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 2 к Разделу 1: графа 2 строки 070 не подлежит заполнению с отчетного периода 1 квартал 2021 года "
							+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@)", "Раздел1Прил2", "П000120007002", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если Данные["П000120007003"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 2 к Разделу 1: графа 3 строки 070 не подлежит заполнению с отчетного периода 1 квартал 2021 года "
							+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@)", "Раздел1Прил2", "П000120007003", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если Данные["П000120007004"] <> 0 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 2 к Разделу 1: графа 4 строки 070 не подлежит заполнению с отчетного периода 1 квартал 2021 года "
							+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@)", "Раздел1Прил2", "П000120007004", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
					Иначе
						
						ПроверитьПоказательНаНеотрицательность("П000120007001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000120007002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000120007003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П000120007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЕсли;
					
					ПроверитьПоказательНаНеотрицательность("П000120008001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000120008002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000120008003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000120008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
						И Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
						
						Для НомГрафы = 1 По 7 Цикл
							Признак = СокрЛП(Данные["П00012000900" + НомГрафы]);
							Если Признак = "2" Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 2 к Разделу 1: в графе " + НомГрафы
								+ " строки 090 значение признака ""2"" не может быть указано с отчетного периода 1 квартал 2021 года "
								+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@). Значение признака должно быть равно ""1""",
								"Раздел1Прил2", "П00012000900" + НомГрафы, НомерСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли Признак <> "1" Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 2 к Разделу 1: в графе " + НомГрафы
								+ " строки 090 значение признака должно быть равно ""1""",
								"Раздел1Прил2", "П00012000900" + НомГрафы, НомерСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							НомГрафы = НомГрафы + 1;
						КонецЦикла;
						
					Иначе
						
						Для НомГрафы = 1 По 7 Цикл
							Признак = СокрЛП(Данные["П00012000900" + НомГрафы]);
							Если МассивСтрок1_2.Найти(Признак) = Неопределено Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 2 к Разделу 1: в графе " + НомГрафы + " строки 090 не"
								+ ?(Признак = "", "", "верно") + " задан признак", "Раздел1Прил2", "П00012000900" + НомГрафы, НомерСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							НомГрафы = НомГрафы + 1;
						КонецЦикла;
						
					КонецЕсли;
					
					ПроверитьПоказательНаНеотрицательность("П000120009002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000120009004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000120009006", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000120009008", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы12М1];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
						
						КодТарифа = СокрЛП(СтрокаМнЧ.Данные["П00012М100101"]);
						Если НЕ ЗначениеЗаполнено(КодТарифа) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 2 к разделу 1: в строке " + НомерСтроки
							+ " группы строк 001-060 не задан код тарифа плательщика",
							"Раздел1Прил2", "П00012М100101_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли ВозможныеКодыТарифаПлательщика.Найти(КодТарифа) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 2 к разделу 1: в строке " + НомерСтроки
							+ " группы строк 001-060 задано некорректное значение кода тарифа плательщика. Возможны значения: "
							+ ВозможныеКодыТарифаПлательщика_Стр, "Раздел1Прил2", "П00012М100101_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПризнакВыплат = СокрЛП(СтрокаМнЧ.Данные["П00012М100201"]);
						Если МассивСтрок1_2.Найти(ПризнакВыплат) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 2 к разделу 1: в строке " + НомерСтроки
							+ " группы строк 001-060 не" + ?(ПризнакВыплат = "", "", "верно") + " задан признак выплат",
							"Раздел1Прил2", "П00012М100201_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПроверитьПоказательНаНеотрицательность("П00012М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П00012М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П00012М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П00012М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П00012М105501", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М105502", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М105503", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М105504", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П00012М106001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М106002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М106003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00012М106004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
				И Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
				
				// Приложение 3 к разделу 1.
				//
				ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил3;
				Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил3",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					ИмяПок = "П000130001001";
					Для каждого Пок Из ДеревоРаздела.Строки[0].Данные Цикл
						Если ЗначениеЗаполнено(Пок.Значение) Тогда
							ИмяПок = Пок.Ключ;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 3 к разделу 1 не подлежит заполнению с отчетного периода 1 квартал 2021 года "
					+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@)", "Раздел1Прил3", ИмяПок, "1");
					СтатусПроверки = Ложь;
					
				КонецЕсли;
				
				// Приложение 4 к разделу 1.
				//
				ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил4;
				Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил4",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					ИмяПок = "П000140001002";
					Для каждого Пок Из ДеревоРаздела.Строки[0].Данные Цикл
						Если ЗначениеЗаполнено(Пок.Значение) Тогда
							ИмяПок = Пок.Ключ;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 4 к разделу 1 не подлежит заполнению с отчетного периода 1 квартал 2021 года "
					+ "(письмо ФНС России от 29.01.2021 № БС-4-11/1020@)", "Раздел1Прил4", ИмяПок, "1");
					СтатусПроверки = Ложь;
					
				КонецЕсли;
				
				// Приложение 5.1 к разделу 1.
				//
				ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил5_1;
				Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил5_1",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					НомерСтраницы = 1;
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил5_1");
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы151М1];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						
						КодПлат = СокрЛП(СтрокаМнЧ.Данные["П00151М100101"]);
						Если НЕ ЗначениеЗаполнено(КодПлат) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 5.1 к разделу 1: в строке "
							+ НомерСтроки + " группы строк 001-060 не задан код плательщика",
							"Раздел1Прил5_1", "П00151М100101_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли МассивСтрок1_2.Найти(КодПлат) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 5.1 к разделу 1: в строке " + НомерСтроки
							+ " группы строк 001-060 задан некорректный код плательщика. Возможны значения: "
							+ СтрСоединить(МассивСтрок1_2, ", "), "Раздел1Прил5_1", "П00151М100101_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
						
						ПроверитьПоказательНаНеотрицательность("П00151М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00151М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00151М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00151М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00151М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00151М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						Если КодПлат = "1" Тогда
							
							Если (ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105002"])
								ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105003"]))
								И (ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106002"])
								ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106003"])) Тогда
								
								ИмяПок = ?(ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105002"]), "П00151М105002", "П00151М105003")
								+ "_" + НомерСтроки;
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 5.1 к Разделу 1: в строке " + НомерСтроки
								+ " группы строк 001-060 не допускается одновременное заполнение строк 050 и 060",
								"Раздел1Прил5_1", ИмяПок, НомерСтраницы);
								СтатусПроверки = Ложь;
								
							ИначеЕсли ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105002"])
								ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105003"]) Тогда
								
								Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105002"]) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 не задана дата записи в реестре организаций",
									"Раздел1Прил5_1", "П00151М105002_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00151М105002"]) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 задана дата записи в реестре организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
									"Раздел1Прил5_1", "П00151М105002_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								КонецЕсли;
								Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00151М105003"])) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 не задан номер записи в реестре организаций",
									"Раздел1Прил5_1", "П00151М105003_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								КонецЕсли;
								
							ИначеЕсли ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106002"])
								ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106003"]) Тогда
								
								Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106002"]) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 не задана дата регистрации",
									"Раздел1Прил5_1", "П00151М106002_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00151М106002"]) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 задана дата регистрации, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
									"Раздел1Прил5_1", "П00151М106002_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								КонецЕсли;
								Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00151М106003"])) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 не задан регистрационный номер",
									"Раздел1Прил5_1", "П00151М106003_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								КонецЕсли;
								
							Иначе
								
								СообщитьВТС(ИмяФормы, РезультатВыгрузки,
								"Приложение 5 к Разделу 1: в строке " + НомерСтроки
								+ " группы строк 001-060 должна быть заполнена либо строка 050, либо строка 060",
								"Раздел1Прил5_1", "П00151М105002_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
								
							КонецЕсли;
							
						ИначеЕсли КодПлат = "2" Тогда
							
							Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106002"])
								ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106003"]) Тогда
								
								ИмяПок = ?(ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М106002"]), "П00151М106002", "П00151М106003")
								+ "_" + НомерСтроки;
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 5.1 к Разделу 1: в строке " + НомерСтроки
								+ " группы строк 001-060 не допускается заполнение строки 060 при коде плательщика, равном 2",
								"Раздел1Прил5_1", ИмяПок, НомерСтраницы);
								СтатусПроверки = Ложь;
								
							КонецЕсли;
							
							Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105002"])
								ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105003"]) Тогда
								
								Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00151М105002"]) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 не задана дата записи в реестре организаций",
									"Раздел1Прил5_1", "П00151М105002_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00151М105002"]) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 задана дата записи в реестре организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
									"Раздел1Прил5_1", "П00151М105002_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								КонецЕсли;
								Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00151М105003"])) Тогда
									СообщитьВТС(ИмяФормы, РезультатВыгрузки,
									"Приложение 5.1 к разделу 1: в строке " + НомерСтроки
									+ " группы строк 001-060 не задан номер записи в реестре организаций",
									"Раздел1Прил5_1", "П00151М105003_" + НомерСтроки, НомерСтраницы);
									СтатусПроверки = Ложь;
								КонецЕсли;
								
							Иначе
								
								СообщитьВТС(ИмяФормы, РезультатВыгрузки,
								"Приложение 5 к Разделу 1: в строке " + НомерСтроки
								+ " группы строк 001-060 должна быть заполнена строка 050 при коде плательщика, равном 2",
								"Раздел1Прил5_1", "П00151М105002_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			ИначеЕсли (ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
				И Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 2020)
				ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
				
				// Приложение 3 к Разделу 1.
				//
				ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил3;
				Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил3",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					Данные = ДеревоРаздела.Строки[0].Данные;
					НомерСтраницы = 1;
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил3");
					ПарамПроверки.Вставить("Данные",        Данные);
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					ПроверитьПоказательНаНеотрицательность("П000130001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130001103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130001104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130002103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130003103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130003104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130006103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130006104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130006203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130006204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130007003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130008003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130009003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130010003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130010004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130011003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000130011004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЕсли;
				
				// Приложение 4 к Разделу 1.
				//
				ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил4;
				Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил4",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					Данные = ДеревоРаздела.Строки[0].Данные;
					НомерСтраницы = 1;
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил4");
					ПарамПроверки.Вставить("Данные",        Данные);
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					ПроверитьПоказательНаНеотрицательность("П000140001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140002004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140009004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140010004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140011004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140012004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140013004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140014004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140015004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140016004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140017004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140018004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140019004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140020004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140021004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140022004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140023004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140024004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140025004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140026004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140027004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140028004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140029004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140030004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000140031004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЕсли;
				
				// Приложение 5 к Разделу 1.
				//
				ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил5;
				Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил5",
					СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
					
					Данные = ДеревоРаздела.Строки[0].Данные;
					НомерСтраницы = 1;
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил5");
					ПарамПроверки.Вставить("Данные",        Данные);
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					ПроверитьПоказательНаНеотрицательность("П000150002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000150002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000150003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000150003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000150004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П000150004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					Если (ЗначениеЗаполнено(Данные["П000150005002"]) ИЛИ ЗначениеЗаполнено(Данные["П000150005003"]))
						И (ЗначениеЗаполнено(Данные["П000150006002"]) ИЛИ ЗначениеЗаполнено(Данные["П000150006003"])) Тогда
						ИмяПок = ?(ЗначениеЗаполнено(Данные["П000150005002"]), "П000150005002", "П000150005003");
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Приложение 5 к Разделу 1: не допускается одновременное заполнение строк 050 и 060",
						"Раздел1Прил5", ИмяПок, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ЗначениеЗаполнено(Данные["П000150005002"]) ИЛИ ЗначениеЗаполнено(Данные["П000150005003"]) Тогда
						Если НЕ ЗначениеЗаполнено(Данные["П000150005002"]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 5 к разделу 1: не задана дата записи в реестре аккредитованных организаций",
							"Раздел1Прил5", "П000150005002", НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000150005002"]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 5 к разделу 1: задана дата записи в реестре аккредитованных организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
							"Раздел1Прил5", "П000150005002", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000150005003"])) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 5 к разделу 1: не задан номер записи в реестре аккредитованных организаций",
							"Раздел1Прил5", "П000150005003", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					ИначеЕсли ЗначениеЗаполнено(Данные["П000150006002"]) ИЛИ ЗначениеЗаполнено(Данные["П000150006003"]) Тогда
						Если НЕ ЗначениеЗаполнено(Данные["П000150006002"]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 5 к разделу 1: не задана дата регистрации", "Раздел1Прил5", "П000150006002", НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000150006002"]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 5 к разделу 1: задана дата регистрации, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
							"Раздел1Прил5", "П000150006002", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000150006003"])) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки,
							"Приложение 5 к разделу 1: не задан регистрационный номер", "Раздел1Прил5", "П000150006003", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					Иначе
						СообщитьВТС(ИмяФормы, РезультатВыгрузки,
						"Приложение 5 к Разделу 1: должна быть заполнена либо строка 050, либо строка 060",
						"Раздел1Прил5", "П000150005002", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Приложение 6 к Разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил6;
			Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил6",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
				
				Данные = ДеревоРаздела.Строки[0].Данные;
				НомерСтраницы = 1;
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил6");
				ПарамПроверки.Вставить("Данные",        Данные);
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ПроверитьПоказательНаНеотрицательность("П000160001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160002001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000160005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
			КонецЕсли;
			
			// Приложение 7 к Разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил7;
			Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил7",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
				
				Данные = ДеревоРаздела.Строки[0].Данные;
				НомерСтраницы = 1;
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил7");
				ПарамПроверки.Вставить("Данные",        Данные);
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ПроверитьПоказательНаНеотрицательность("П000170002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000170002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000170003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000170003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000170004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000170004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				Если НЕ ЗначениеЗаполнено(Данные["П000170005002"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 7 к разделу 1: не задана дата записи в реестре организаций",
					"Раздел1Прил7", "П000170005002", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000170005002"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 7 к разделу 1: задана дата записи в реестре организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
					"Раздел1Прил7", "П000170005002", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000170005003"])) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Приложение 7 к разделу 1: не задан номер записи в реестре организаций",
					"Раздел1Прил7", "П000170005003", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			// Приложение 8 к разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил8;
			Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил8",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
				
				Данные = ДеревоРаздела.Строки[0].Данные;
				НомерСтраницы = 1;
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил8");
				ПарамПроверки.Вставить("Данные",        Данные);
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ПроверитьПоказательНаНеотрицательность("П000180001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000180001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000180001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000180001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00018М102001"]);
					Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 не задана фамилия иностранного гражданина (лица без гражданства)",
						"Раздел1Прил8", "П00018М102001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 неверно задана фамилия иностранного гражданина (лица без гражданства)."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил8", "П00018М102001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00018М103001"]);
					Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 не задано имя иностранного гражданина (лица без гражданства)",
						"Раздел1Прил8", "П00018М103001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 неверно задано имя иностранного гражданина (лица без гражданства)."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил8", "П00018М103001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00018М104001"]);
					Если ЗначениеЗаполнено(РеквизитФИО) И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 неверно задано отчество иностранного гражданина (лица без гражданства)."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ИННИностр = СокрЛП(СтрокаМнЧ.Данные["П00018М105001"]);
					Если ЗначениеЗаполнено(ИННИностр) Тогда
						ТекстСообщения = "";
						Если НЕ ИННФЛСоответствуетТребованиям(ИННИностр, ТекстСообщения) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
							+ " группы строк 020-080 неверно задан ИНН иностранного гражданина (лица без гражданства)."
							+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
							"Раздел1Прил8", "П00018М105001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					КонецЕсли;
					ТекстСообщения = "";
					СНИЛС = СокрЛП(СтрокаМнЧ.Данные["П00018М106001"]);
					Если ЗначениеЗаполнено(СНИЛС) И НЕ СНИЛССоответствуетТребованиям(СНИЛС, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 неверно задан СНИЛС иностранного гражданина (лица без гражданства)."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил9", "П00018М106001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00018М107001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 не задано гражданство (код страны) иностранного гражданина (лица без гражданства)",
						"Раздел1Прил8", "П00018М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ (СтрДлина(ЗначПок) = 3 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначПок)) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 8 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 задано значение гражданства (кода страны) иностранного гражданина (лица без гражданства), не состоящее из 3 цифр",
						"Раздел1Прил8", "П00018М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00018М108001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00018М108002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00018М108003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00018М108004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
				
			КонецЕсли;
			
			// Приложение 9 к разделу 1.
			//
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил9;
			Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел1Прил9",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
				
				Данные = ДеревоРаздела.Строки[0].Данные;
				НомерСтраницы = 1;
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил9");
				ПарамПроверки.Вставить("Данные",        Данные);
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ПроверитьПоказательНаНеотрицательность("П000190001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000190001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000190001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000190001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
				ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М103001"]);
					Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке "
						+ НомерСтроки + " группы строк 020-130 не задана фамилия обучающегося",
						"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке "
						+ НомерСтроки + " группы строк 020-130 неверно задана фамилия обучающегося."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М104001"]);
					Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке "
						+ НомерСтроки + " группы строк 020-130 не задано имя обучающегося",
						"Раздел1Прил9", "П00019М104001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке "
						+ НомерСтроки + " группы строк 020-130 неверно задано имя обучающегося."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил9", "П00019М104001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М105001"]);
					Если ЗначениеЗаполнено(РеквизитФИО) И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке "
						+ НомерСтроки + " группы строк 020-130 неверно задано отчество обучающегося."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил9", "П00019М105001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М106001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задан номер справки, подтверждающей очную форму обучения",
						"Раздел1Прил9", "П00019М106001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00019М107001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задана дата справки, подтверждающей очную форму обучения",
						"Раздел1Прил9", "П00019М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00019М107001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 задана дата справки, подтверждающей очную форму обучения, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
						"Раздел1Прил9", "П00019М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00019М108001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00019М108002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00019М108003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00019М108004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М109001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задан номер справки, подтверждающей членство в студенческом отряде",
						"Раздел1Прил9", "П00019М109001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00019М110001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задана дата справки, подтверждающей членство в студенческом отряде",
						"Раздел1Прил9", "П00019М110001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00019М110001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 задана дата справки, подтверждающей членство в студенческом отряде, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
						"Раздел1Прил9", "П00019М110001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М111001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задано наименование объединения",
						"Раздел1Прил9", "П00019М111001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00019М112001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задана дата записи в реестре",
						"Раздел1Прил9", "П00019М112001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00019М112001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 задана дата записи в реестре, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
						"Раздел1Прил9", "П00019М112001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М113001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-130 не задан номер записи в реестре",
						"Раздел1Прил9", "П00019М113001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			// Раздел 2.
			//
			ДеревоРаздела2 = ДанныеМногоуровневыхРазделов.Раздел2;
			
			ЗаполненРаздел2 = ЗаполненРаздел(ИмяФормы, ДеревоРаздела2, "Раздел2",
			СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
			
			Данные = ДеревоРаздела2.Строки[0].Данные;
			НомерСтраницы = 1;
			
			Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
				
				Если НЕ ЗаполненРаздел2 Тогда
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки,
					"Раздел 2 должен быть заполнен при значении кода места, по которому представляется расчет, равном 124 или 240",
					"Раздел2", "П000020001001", НомерСтраницы);
					СтатусПроверки = Ложь;
					
				Иначе
					
					ПарамПроверки.Вставить("ИмяРаздела",    "Раздел2");
					ПарамПроверки.Вставить("Данные",        Данные);
					ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
					
					ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000020001001"]));
					Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 2: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
						+ " задан код по ОКТМО", "Раздел2", "П000020001001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					КБКДлина = СтрДлина(СокрЛП(Данные["П000020002001"]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 2: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
						+ " задан код бюджетной классификации", "Раздел2", "П000020002001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПроверитьПоказательНаНеотрицательность("П000020003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					КБКДлина = СтрДлина(СокрЛП(Данные["П000020004001"]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 2: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
						+ " задан код бюджетной классификации", "Раздел2", "П000020004001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПроверитьПоказательНаНеотрицательность("П000020005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
					ДанныеМнЧ = ДеревоРаздела2.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
					
					ИмяПокФамилияФЛ = "П00021М101001";
					ИмяПокИмяФЛ     = "П00021М102001";
					ИмяПокОтчФЛ     = "П00021М103001";
					ИмяПокИННФЛ     = "П00021М104001";
					ИмяПокСНИЛС     = "П00021М105001";
					
					ИмяПокДатаРожд  = "П00021М106001";
					ИмяПокПол       = "П00021М106301";
					ИмяПокКодВидДок = "П00021М106501";
					ИмяПокСерияДок  = "П00021М106701";
					ИмяПокНомерДок  = "П00021М106702";
					
					ИмяПокДатаНач   = "П00021М107001";
					ИмяПокДатаКон   = "П00021М108001";
					
					Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						
						Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						
						ТекстСообщения = "";
						РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокФамилияФЛ]);
						Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не задана фамилия члена крестьянского (фермерского) хозяйства",
							"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 неверно задана фамилия члена крестьянского (фермерского) хозяйства."
							+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
							"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						ТекстСообщения = "";
						РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокИмяФЛ]);
						Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не задано имя члена крестьянского (фермерского) хозяйства",
							"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 неверно задано имя члена крестьянского (фермерского) хозяйства."
							+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
							"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						ТекстСообщения = "";
						РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокОтчФЛ]);
						Если ЗначениеЗаполнено(РеквизитФИО)
							И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 неверно задано отчество члена крестьянского (фермерского) хозяйства."
							+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
							"Раздел2", ИмяПокОтчФЛ + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ИННФЛ = СокрЛП(СтрокаМнЧ.Данные[ИмяПокИННФЛ]);
						Если ЗначениеЗаполнено(ИННФЛ) Тогда
							ТекстСообщения = "";
							Если НЕ ИННФЛСоответствуетТребованиям(ИННФЛ, ТекстСообщения) Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
								+ " группы строк 010-090 неверно задан ИНН члена крестьянского (фермерского) хозяйства."
								+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2", ИмяПокИННФЛ + "_" + Инд);
								СтатусПроверки = Ложь;
							КонецЕсли;
						КонецЕсли;
						
						ТекстСообщения = "";
						СНИЛС = СокрЛП(СтрокаМнЧ.Данные[ИмяПокСНИЛС]);
						Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не задан задан СНИЛС члена крестьянского (фермерского) хозяйства",
							"Раздел2", ИмяПокСНИЛС + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ СНИЛССоответствуетТребованиям(СтрокаМнЧ.Данные[ИмяПокСНИЛС], ТекстСообщения) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 неверно задан задан СНИЛС члена крестьянского (фермерского) хозяйства."
							+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2", ИмяПокСНИЛС + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаРожд]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не задана дата рождения члена крестьянского (фермерского) хозяйства",
							"Раздел2", ИмяПокДатаРожд + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаРожд], , ПараметрыВыгрузки.ДатаДок_Дата) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 задана дата рождения члена крестьянского (фермерского) хозяйства, выходящая за пределы периода с 01.01.1900 по "
							+ Формат(ПараметрыВыгрузки.ДатаДок_Дата, "ДФ=дд.ММ.гггг"), "Раздел2", ИмяПокДатаРожд + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						Пол = СокрЛП(СтрокаМнЧ.Данные[ИмяПокПол]);
						Если МассивСтрок1_2.Найти(Пол) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд + " группы строк 010-090 не"
							+ ?(Пол = "", "", "верно") + " задан пол члена крестьянского (фермерского) хозяйства",
							"Раздел2", ИмяПокПол + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						КодВидДокДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКодВидДок]));
						Если НЕ КодВидДокДлина = 2 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд + " группы строк 010-090 не"
							+ ?(КодВидДокДлина = 0, "", "верно") + " задан код вида документа, удостоверяющего личность",
							"Раздел2", ИмяПокКодВидДок + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						Если НЕ (ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные[ИмяПокСерияДок]))
							ИЛИ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные[ИмяПокНомерДок]))) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не заданы серия и номер документа, удостоверяющего личность",
							"Раздел2", ИмяПокСерияДок + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокСерияДок]) + СокрЛП(СтрокаМнЧ.Данные[ИмяПокНомерДок])) > 24 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24",
							"Раздел2", ИмяПокСерияДок + "_" + Инд);
							СтатусПроверки = Ложь;
						Иначе
							ТекстСообщения = "";
							Если НЕ СерияНомерДокументаСоответствуютТребованиям(СтрокаМнЧ.Данные[ИмяПокКодВидДок],
								СтрокаМнЧ.Данные[ИмяПокСерияДок], СтрокаМнЧ.Данные[ИмяПокНомерДок], ТекстСообщения) Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
								+ " группы строк 010-090 неверно заданы серия и номер документа, удостоверяющего личность."
								+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2",
								?(ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокСерияДок]), ИмяПокСерияДок, ИмяПокНомерДок) + "_" + Инд);
								СтатусПроверки = Ложь;
							КонецЕсли;
						КонецЕсли;
						
						Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не задана дата начала периода членства в крестьянском (фермерском) хозяйстве в расчетный период",
							"Раздел2", ИмяПокДатаНач + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаНач],
							СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала,
							СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 задана дата начала периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода",
							"Раздел2", ИмяПокДатаНач + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон]) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 не задана дата окончания периода членства в крестьянском (фермерском) хозяйстве в расчетный период",
							"Раздел2", ИмяПокДатаКон + "_" + Инд);
							СтатусПроверки = Ложь;
						ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаКон],
							СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала,
							СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 задана дата окончания периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода",
							"Раздел2", ИмяПокДатаКон + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач])
							И ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон])
							И СтрокаМнЧ.Данные[ИмяПокДатаНач] > СтрокаМнЧ.Данные[ИмяПокДатаКон] Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 дата начала периода членства в крестьянском (фермерском) хозяйстве не должна быть больше даты окончания",
							"Раздел2", ИмяПокДатаКон + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
						
						ПроверитьПоказательНаНеотрицательность("П00021М109001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00021М109002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
					
				КонецЕсли;
				
			ИначеЕсли ЗаполненРаздел2 Тогда
				
				ИмяПервогоЗаполненногоПоказателяВРазделе2 = "";
				
				Для каждого Элем Из Данные Цикл
					Если ЗначениеЗаполнено(Элем.Значение) Тогда
						ИмяПервогоЗаполненногоПоказателяВРазделе2 = Элем.Ключ;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ИмяПервогоЗаполненногоПоказателяВРазделе2 = "" Тогда
					ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1;
					ДанныеМнЧ = ДеревоРаздела2.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
					МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						Для каждого ИмяГрафы Из МассивИменГраф Цикл
							Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
								ИмяПервогоЗаполненногоПоказателяВРазделе2
								= ИмяГрафы + "_" + Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				
				СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Раздел 2 не должен быть заполнен при значении кода места, по которому представляется расчет, не равном 124 или 240",
				"Раздел2", ИмяПервогоЗаполненногоПоказателяВРазделе2, НомерСтраницы);
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Раздел 3.
		//
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел3;
		
		Если ЗаполненРаздел(ИмяФормы, ДеревоРаздела, "Раздел3",
			СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
			
			Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
				
				// Подраздел 3.1.
				Данные = СтраницаРаздела.Данные;
				НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
				
				СтруктПарам = Новый Структура;
				СтруктПарам.Вставить("ПроверкаВыгрузкиСтраницы");
				СтруктПарам.Вставить("Фам", Данные.П000310004001);
				СтруктПарам.Вставить("Имя", Данные.П000310005001);
				СтруктПарам.Вставить("Отч", Данные.П000310006001);
				СтруктПарам.Вставить("ДатаРожд", Данные.П000310007001);
				СтруктПарам.Вставить("НомерСтраницы", НомерСтраницы);
				ПредстСтраницы = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел3");
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ПрАннулир = СокрЛП(Данные["П000030001001"]);
				Если ЗначениеЗаполнено(ПрАннулир) Тогда
					Если ПрАннулир <> "1" Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
						+ ": в строке 010 задан некорректный признак аннулирования сведений о застрахованном лице",
						"Раздел3", "П000030001001", НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтруктураРеквизитовФормы.мСохраненныйДок.Вид = 0 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
						+ ": строка 010 не должна быть заполнена в случае представления первичного расчета",
						"Раздел3", "П000030001001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				ИННФЛ = СокрЛП(Данные["П000310002001"]);
				Если ЗначениеЗаполнено(ИННФЛ) Тогда
					ТекстСообщения = "";
					Если НЕ ИННФЛСоответствуетТребованиям(ИННФЛ, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
						+ ": в строке 020 неверно задан ИНН физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
						" " + ТекстСообщения, ""), "Раздел3", "П000310002001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				ТекстСообщения = "";
				СНИЛС = СокрЛП(Данные["П000310003001"]);
				Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 030 не задан СНИЛС физического лица", "Раздел3", "П000310003001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ СНИЛССоответствуетТребованиям(Данные["П000310003001"], ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 030 неверно задан СНИЛС физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310003001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(Данные["П000310004001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 040 не задана фамилия физического лица", "Раздел3", "П000310004001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 040 неверно задана фамилия физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310004001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(Данные["П000310005001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 050 не задано имя физического лица", "Раздел3", "П000310005001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 050 неверно задано имя физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310005001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(Данные["П000310006001"]);
				Если ЗначениеЗаполнено(РеквизитФИО) И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 060 неверно задано отчество физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310006001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(Данные["П000310007001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 070 не задана дата рождения физического лица", "Раздел3", "П000310007001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000310007001"],, ПараметрыВыгрузки.ДатаДок_Дата) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 070 задана дата рождения физического лица, выходящая за пределы периода с 01.01.1900 по "
					+ Формат(ПараметрыВыгрузки.ДатаДок_Дата, "ДФ=дд.ММ.гггг"), "Раздел3", "П000310007001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначПок = СокрЛП(Данные["П000310008001"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 080 не задано гражданство (код страны) физического лица",
					"Раздел3", "П000310008001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ (СтрДлина(ЗначПок) = 3 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначПок)) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 080 задано значение гражданства (кода страны) физического лица, не состоящее из 3 цифр",
					"Раздел3", "П000310008001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначПок = СокрЛП(Данные["П000310009001"]);
				Если МассивСтрок1_2.Найти(ЗначПок) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 090 не"
					+ ?(ЗначПок = "", "", "верно") + " задан пол", "Раздел3", "П000310009001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				КодВидДокДлина = СтрДлина(СокрЛП(Данные["П000310010001"]));
				Если НЕ КодВидДокДлина = 2 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 100 не"
					+ ?(КодВидДокДлина = 0, "", "верно") + " задан код вида документа, удостоверяющего личность",
					"Раздел3", "П000310010001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310011001"]))
					ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310011002"]))) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 110 не заданы серия и номер документа, удостоверяющего личность",
					"Раздел3", "П000310011001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли СтрДлина(СокрЛП(Данные["П000310011001"]) + СокрЛП(Данные["П000310011002"])) > 24 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 110 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24",
					"Раздел3", "П000310011001", НомерСтраницы);
					СтатусПроверки = Ложь;
				Иначе
					ТекстСообщения = "";
					Если НЕ СерияНомерДокументаСоответствуютТребованиям(
						Данные["П000310010001"], Данные["П000310011001"], Данные["П000310011002"], ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
						+ ": в строке 110 неверно заданы серия и номер документа, удостоверяющего личность."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел3",
						?(ЗначениеЗаполнено(Данные["П000310011001"]), "П000310011001", "П000310011002"), НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				ИмяПервогоЗаполненногоПоказателяВПодразделе32 = "";
				
				// Проверка в подразделе 3.2.
				ЗаполненПодраздел321 = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы321М1;
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел321 = Истина;
							ИмяПервогоЗаполненногоПоказателяВПодразделе32
							= ИмяГрафы + "_" + Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				ЗаполненПодраздел322 = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы322М1;
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел322 = Истина;
							Если ИмяПервогоЗаполненногоПоказателяВПодразделе32 = "" Тогда
								ИмяПервогоЗаполненногоПоказателяВПодразделе32
								= ИмяГрафы + "_" + Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
							КонецЕсли;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
				Если ПрАннулир = "1" И СтруктураРеквизитовФормы.мСохраненныйДок.Вид > 0
					И ЗначениеЗаполнено(ИмяПервогоЗаполненногоПоказателяВПодразделе32) Тогда
					
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": строки 120-210 не должны быть заполнены при заданном признаке аннулирования сведений о застрахованном лице",
					"Раздел3", ИмяПервогоЗаполненногоПоказателяВПодразделе32, НомерСтраницы);
					СтатусПроверки = Ложь;
					
				Иначе
					
					// Подраздел 3.2.1.
					Если ЗаполненПодраздел321 ИЛИ ЗаполненПодраздел322 Тогда
						ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
						Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
							ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
							НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
							Мес = СокрЛП(СтрокаМнЧ.Данные["П00321М112001"]);
							Если НЕ ЗначениеЗаполнено(Мес) Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 120-170 не задан месяц", "Раздел3", "П00321М112001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли МассивСтрок1_3.Найти(Мес) = Неопределено Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 120-170 неверно задан месяц. Возможны значения: 1, 2, 3",
								"Раздел3", "П00321М112001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							КодКатегорииЗЛ = СокрЛП(СтрокаМнЧ.Данные["П00321М113001"]);
							Если НЕ ЗначениеЗаполнено(КодКатегорииЗЛ) Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 120-170 не задан код категории застрахованного лица",
								"Раздел3", "П00321М113001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли СтрДлина(КодКатегорииЗЛ) < 2 Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 120-170 задан код категории застрахованного лица, состоящий менее чем из 2 символов",
								"Раздел3", "П00321М113001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
							ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
							
							ПроверитьПоказательНаНеотрицательность("П00321М114001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаНеотрицательность("П00321М115001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаНеотрицательность("П00321М116001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаНеотрицательность("П00321М117001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							
						КонецЦикла;
					КонецЕсли;
					
					// Подраздел 3.2.2.
					Если ЗаполненПодраздел322 Тогда
						ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
						Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
							ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
							НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
							Мес = СокрЛП(СтрокаМнЧ.Данные["П00322М118001"]);
							Если НЕ ЗначениеЗаполнено(Мес) Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 180-210 не задан месяц", "Раздел3", "П00322М118001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли МассивСтрок1_3.Найти(Мес) = Неопределено Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 180-210 неверно задан месяц. Возможны значения: 1, 2, 3",
								"Раздел3", "П00322М118001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							КодЗЛ = СокрЛП(СтрокаМнЧ.Данные["П00322М119001"]);
							Если НЕ ЗначениеЗаполнено(КодЗЛ) Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 180-210 не задан код застрахованного лица",
								"Раздел3", "П00322М119001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли СтрДлина(КодЗЛ) < 3 Тогда
								СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
								+ " группы строк 180-210 задан код застрахованного лица, не состоящий из 3 символов",
								"Раздел3", "П00322М119001_" + НомерСтроки, НомерСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
							ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
							
							ПроверитьПоказательНаНеотрицательность("П00322М120001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							ПроверитьПоказательНаНеотрицательность("П00322М121001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
							
						КонецЦикла;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если ЗаполненРаздел(ИмяФормы,
			ДанныеМногоуровневыхРазделов.Раздел3,
			"Раздел3",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ДатаПодписи) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Не задана дата подписи.",
				"Титульный", "ДатаПодписи");
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		// Сведения о физическом лице, не являющемся индивидуальным предпринимателем.
		Если ПараметрыВыгрузки.ЭтоФизЛицоБезИНН Тогда
			
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ДатаРожд) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана дата рождения.",
				"ФизЛицо", "ДатаРождения");
				СтатусПроверки = Ложь;
			ИначеЕсли ПараметрыВыгрузки.ДатаРожд_Дата > ПараметрыВыгрузки.ДатаДок_Дата Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, задана дата рождения, превышающая текущую.",
				"ФизЛицо", "ДатаРождения");
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.МестоРожд) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задано место рождения.",
				"ФизЛицо", "МестоРождения");
				СтатусПроверки = Ложь;
			КонецЕсли;
			ДлинаОКСМ = СтрДлина(ПараметрыВыгрузки.ОКСМ);
			Если ДлинаОКСМ <> 3 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
				+ ?(ДлинаОКСМ = 0, "", "верно") + " задан код страны гражданства.",
				"ФизЛицо", "КодСтраныГражданства");
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДлинаКодВидДок = СтрДлина(ПараметрыВыгрузки.УдЛичнКодВидДок);
			Если ДлинаКодВидДок <> 2 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
				+ ?(ДлинаКодВидДок = 0, "", "верно") + " задан код вида документа.",
				"ФизЛицо", "КодВидаДокумента");
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнСерДок) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана серия документа.",
				"ФизЛицо", "СерияДокумента");
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнНомДок) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задан номер документа.",
				"ФизЛицо", "НомерДокумента");
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнСерДок)
				И ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнНомДок) Тогда
				УдЛичнСерНомДок = ПараметрыВыгрузки.УдЛичнСерДок + " " + ПараметрыВыгрузки.УдЛичнНомДок;
				Если СтрДлина(УдЛичнСерНомДок) > 25 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, заданы серия и номер документа, в совокупности состоящие более чем из 24 символов.",
					"ФизЛицо", "СерияДокумента");
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнВыдДок) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задано наименование органа, выдавшего документ.",
				"ФизЛицо", "КемВыданДокумент");
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнДатаДок) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана дата выдачи документа.",
				"ФизЛицо", "ДатаВыдачи");
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДлинаКодРегион = СтрДлина(ПараметрыВыгрузки.КодРегион);
			Если ДлинаКодРегион <> 2 Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
				+ ?(ДлинаКодРегион = 0, "", "верно") + " задан код региона.", "ФизЛицо", "АдресКодРегиона");
				СтатусПроверки = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		// Раздел 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1;
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ЭтоПБОЮЛ", ПараметрыВыгрузки.ЭтоПБОЮЛ);
		Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
			ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1");
		КонецЕсли;
		ЗаполненРаздел1 = ЗаполненРаздел1(ИмяФормы,
		ДанныеМногоуровневыхРазделов,
		СтруктураРеквизитовФормы,
		СтруктураМногоуровневыхРазделов,
		ДопПараметры);
		Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") ИЛИ ЗаполненРаздел1 Тогда
			
			НомерСтраницы = 1;
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			
			Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240")
				И НЕ ЗаполненРаздел(ИмяФормы,
				ДеревоРаздела,
				"Раздел1",
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов) Тогда
				
				ИмяПоказателя = ?(ЗначениеЗаполнено(СокрЛП(Данные["П000010001001"])),
				"П000010002001", "П000010001001");
				
				СообщитьВТС(ИмяФормы, РезультатВыгрузки,
				"Раздел 1 не заполнен.", "Раздел1", ИмяПоказателя, НомерСтраницы);
				СтатусПроверки = Ложь;
				
			Иначе
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1");
				ПарамПроверки.Вставить("Данные",        Данные);
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000010001001"]));
				Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
					+ " задан код по ОКТМО.",
					"Раздел1", "П000010001001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				КБКДлина = СтрДлина(СокрЛП(Данные["П000010002001"]));
				Если НЕ КБКДлина = 20 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел1", "П000010002001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПроверитьПоказательНаНеотрицательность("П000010003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010003101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010003201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010003301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				КБКДлина = СтрДлина(СокрЛП(Данные["П000010004001"]));
				Если НЕ КБКДлина = 20 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел1", "П000010004001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПроверитьПоказательНаНеотрицательность("П000010005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010005201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010005301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
				СтруктураРеквизитовФормы.мИдГруппы1М1];
				ИмяПокКБК = "П00001М106001";
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107001"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107101"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107201"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107301"]) Тогда
						
						Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
						Если НЕ КБКДлина = 20 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Раздел 1: в строке " + Инд + " группы строк 060-073 не"
							+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации.",
							"Раздел1", ИмяПокКБК + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
						
						ПроверитьПоказательНаНеотрицательность("П00001М107001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00001М107101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00001М107201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00001М107301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЕсли;
				КонецЦикла;
				
				ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
				СтруктураРеквизитовФормы.мИдГруппы1М2];
				ИмяПокКБК = "П00001М208001";
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209001"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209101"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209201"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209301"]) Тогда
						
						Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
						Если НЕ КБКДлина = 20 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Раздел 1: в строке " + Инд + " группы строк 080-093 не"
							+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации.",
							"Раздел1", ИмяПокКБК + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
						
						ПроверитьПоказательНаНеотрицательность("П00001М209001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00001М209101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00001М209201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00001М209301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЕсли;
				КонецЦикла;
				
				КБКДлина = СтрДлина(СокрЛП(Данные["П000010010001"]));
				Если НЕ КБКДлина = 20 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 1: в строке 100 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел1", "П000010010001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные", Данные);
				
				ПроверитьПоказательНаНеотрицательность("П000010011001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010011101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010011201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010011301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П000010012001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010012101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010012201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П000010012301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
			КонецЕсли;
			
			// Приложение 1 к Разделу 1.
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил1;
			Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
				
				Данные = СтраницаРаздела.Данные;
				НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
				
				КодТарифаДлина = СтрДлина(СокрЛП(Данные["П000110000101"]));
				Если НЕ КодТарифаДлина = 2 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
					+ ": в строке 001 не" + ?(КодТарифаДлина = 0, "", "верно")
					+ " задан код тарифа плательщика.",
					"Раздел1Прил1", "П000110000101", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				// Подразделы 1.1 и 1.2 приложения 1 к разделу 1.
				КоординатыПодраздела = НомерСтраницы + ",1,1";
				
				ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_1и1_2");
				ПарамПроверки.Вставить("Данные",               СтраницаРаздела.Строки[0].Строки[0].Данные);
				ПарамПроверки.Вставить("НомерСтраницы",        НомерСтраницы);
				ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
				
				// Подраздел 1.1 приложения 1 к разделу 1.
				ПроверитьПоказательНаНеотрицательность("П011110003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110003005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011110004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110004005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011110005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011110005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110005105", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011110006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011110006101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006105", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011110006201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006202", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011110006205", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				// Подраздел 1.2 приложения 1 к разделу 1.
				ПроверитьПоказательНаНеотрицательность("П011120003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120003005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011120004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120004005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011120005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120005005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ПроверитьПоказательНаНеотрицательность("П011120006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П011120006005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				// Подраздел 1.3.1 приложения 1 к разделу 1.
				ЗаполненПодраздел = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11131М1;
				ДанныеМнЧ = СтраницаРаздела.Строки[1].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				Если ЗаполненПодраздел Тогда
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						КоординатыПодраздела = НомерСтраницы + ",2," + НомерСтроки;
						
						ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11131М100101"]);
						Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.1: в строке " + НомерСтроки
							+ " группы строк 001-050 не" + ?(ЗначениеПоказателя = "", "", "верно")
							+ " задан признак основания исчисления сумм страховых взносов по дополнительному тарифу.",
							"Раздел1Прил1Подр1_3_1", "П11131М100101_" + НомерСтроки, КоординатыПодраздела);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_1");
						ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
						
						ПроверитьПоказательНаНеотрицательность("П11131М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М102005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П11131М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М103005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П11131М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М104005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П11131М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11131М105005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
				КонецЕсли;
				
				// Подраздел 1.3.2 приложения 1 к разделу 1.
				ЗаполненПодраздел = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11132М1;
				ДанныеМнЧ = СтраницаРаздела.Строки[2].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				Если ЗаполненПодраздел Тогда
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						КоординатыПодраздела = НомерСтраницы + ",3," + НомерСтроки;
						
						ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100101"]);
						Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно") + " задан код основания исчисления.",
							"Раздел1Прил1Подр1_3_2", "П11132М100101_" + НомерСтроки, КоординатыПодраздела);
							СтатусПроверки = Ложь;
						КонецЕсли;
						ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100201"]);
						Если МассивСтрок1_3.Найти(ЗначениеПоказателя) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно") + " задано основание заполнения.",
							"Раздел1Прил1Подр1_3_2", "П11132М100201_" + НомерСтроки, КоординатыПодраздела);
							СтатусПроверки = Ложь;
						КонецЕсли;
						ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100301"]);
						Если МассивСтрок1_5.Найти(ЗначениеПоказателя) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно") + " задан код класса условий труда.",
							"Раздел1Прил1Подр1_3_2", "П11132М100301_" + НомерСтроки, КоординатыПодраздела);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_2");
						ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
						
						ПроверитьПоказательНаНеотрицательность("П11132М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М102005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П11132М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М103005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П11132М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М104005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П11132М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П11132М105005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
				КонецЕсли;
				
				// Подраздел 1.4 приложения 1 к разделу 1.
				ЗаполненПодраздел = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы1114М1;
				ДанныеМнЧ = СтраницаРаздела.Строки[3].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				Если ЗаполненПодраздел Тогда
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						КоординатыПодраздела = НомерСтраницы + ",4," + НомерСтроки;
						
						ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П01114М100101"]);
						Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
							"Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
							+ " -> Подраздел 1.4: в строке " + НомерСтроки + " группы строк 001-050 не"
							+ ?(ЗначениеПоказателя = "", "", "верно")
							+ " задан код основания исчисления страховых взносов на дополнительное социальное обеспечение.",
							"Раздел1Прил1Подр1_4", "П01114М100101_" + НомерСтроки, КоординатыПодраздела);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_4");
						ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
						
						ПроверитьПоказательНаНеотрицательность("П01114М102001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М102002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М102003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М102004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М102005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П01114М103001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М103002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М103003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М103004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М103005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П01114М104001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М104002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М104003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М104004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М104005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
						ПроверитьПоказательНаНеотрицательность("П01114М105001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М105002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М105003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М105004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П01114М105005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			// Приложение 2 к Разделу 1.
			ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил2;
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил2");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПризнакВыплат = СокрЛП(Данные["П000120000101"]);
			Если МассивСтрок1_2.Найти(ПризнакВыплат) = Неопределено Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 2 к Разделу 1: в строке 001 не"
				+ ?(ПризнакВыплат = "", "", "верно") + " задан признак выплат.",
				"Раздел1Прил2", "П000120000101", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000120002001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120002004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120002005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120003005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120004005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120005101", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005102", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005105", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120005201", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005202", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005205", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120005301", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005302", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005303", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005304", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005305", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120005401", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005402", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005403", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005404", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120005405", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120006001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120006005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120007001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120007002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120007003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120007005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000120008001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120008002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120008003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120008005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			Для НомГрафы = 1 По 9 Цикл
				Признак = СокрЛП(Данные["П00012000900" + НомГрафы]);
				Если МассивСтрок1_2.Найти(Признак) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 2 к Разделу 1: в графе " + НомГрафы
					+ " строки 090 не" + ?(Признак = "", "", "верно") + " задан признак.",
					"Раздел1Прил2", "П00012000900" + НомГрафы, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				НомГрафы = НомГрафы + 1;
			КонецЦикла;
			
			ПроверитьПоказательНаНеотрицательность("П000120009002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120009004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120009006", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120009008", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000120009010", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложение 3 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил3;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил3",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил3");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПроверитьПоказательНаНеотрицательность("П000130001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130001103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130001104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130002103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130003103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130003104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130005003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130006003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130006103", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130006104", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130006203", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130006204", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130007003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130008003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130009003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130010003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130010004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130011003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000130011004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложение 4 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил4;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил4",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил4");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПроверитьПоказательНаНеотрицательность("П000140001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140002004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140003004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140004004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140005004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140006004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140007004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140008004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140009004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140010004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140011004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140012004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140013004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140014004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140015004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140016004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140017004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140018004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140019004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140020004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140021004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140022004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140023004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140024004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140025004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140026004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140027004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140028004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140029004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140030004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000140031004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложения 5, 6 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил5_6;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил5_6",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил5_6");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			Если НЕ ЗначениеЗаполнено(Данные["П000150005002"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 5 к Разделу 1: не задана дата записи в реестре аккредитованных организаций.",
				"Раздел1Прил5_6", "П000150005002", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000150005002"]) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 5 к Разделу 1: задана дата записи в реестре аккредитованных организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
				"Раздел1Прил5_6", "П000150005002", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000150005003"])) Тогда
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Приложение 5 к Разделу 1: не задан номер записи в реестре аккредитованных организаций.",
				"Раздел1Прил5_6", "П000150005003", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000150002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000150002003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000150003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000150003003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000150004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000150004003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000160006002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000160007002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000160008002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложение 7 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил7;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил7",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил7");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПроверитьПоказательНаНеотрицательность("П000170001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170002001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170002002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170003002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170004001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170004002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000170005002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложение 8 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил8;
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ И ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил8",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил8");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПроверитьПоказательНаНеотрицательность("П000180001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000180001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000180001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000180001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000180001005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
				НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
				
				Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00018М102001"])) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не задан номер патента.",
					"Раздел1Прил8", "П00018М102001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ВидДеятПатентДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные["П00018М103001"]));
				Если НЕ ВидДеятПатентДлина = 6 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не" + ?(ВидДеятПатентДлина = 0, "", "верно")
					+ " задан код вида предпринимательской деятельности, установленный законодательством субъекта Российской Федерации, указанный в заявлении на получение патента.",
					"Раздел1Прил8", "П00018М103001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М104001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не задана дата начала действия.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00018М104001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 задана дата начала действия, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М105001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 не задана дата окончания действия.",
					"Раздел1Прил8", "П00018М105001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные["П00018М105001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 задана дата окончания действия, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М104001"])
					И ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М105001"])
					И СтрокаМнЧ.Данные["П00018М104001"] > СтрокаМнЧ.Данные["П00018М105001"] Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 8 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-060 дата начала действия не должна быть больше даты окончания действия.",
					"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
				ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
				
				ПроверитьПоказательНаНеотрицательность("П00018М106001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00018М106002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00018М106003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00018М106004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00018М106005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Приложение 9 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил9;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил9",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил9");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПроверитьПоказательНаНеотрицательность("П000190001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000190001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000190001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000190001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000190001005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
				НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
				
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М102001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 не задана фамилия иностранного гражданина (лица без гражданства).",
					"Раздел1Прил9", "П00019М102001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задана фамилия иностранного гражданина (лица без гражданства)."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил9", "П00019М102001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М103001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 не задано имя иностранного гражданина (лица без гражданства).",
					"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задано имя иностранного гражданина (лица без гражданства)."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00019М104001"]);
				Если ЗначениеЗаполнено(РеквизитФИО)
					И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задано отчество иностранного гражданина (лица без гражданства)."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил9", "П00019М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ИННИностр = СокрЛП(СтрокаМнЧ.Данные["П00019М105001"]);
				Если ЗначениеЗаполнено(ИННИностр) Тогда
					ТекстСообщения = "";
					Если НЕ ИННФЛСоответствуетТребованиям(ИННИностр, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-080 неверно задан ИНН иностранного гражданина (лица без гражданства)."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел1Прил9", "П00019М105001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				ТекстСообщения = "";
				СНИЛС = СокрЛП(СтрокаМнЧ.Данные["П00019М106001"]);
				Если ЗначениеЗаполнено(СНИЛС) И НЕ СНИЛССоответствуетТребованиям(СНИЛС, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задан СНИЛС иностранного гражданина (лица без гражданства)."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил9", "П00019М106001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00019М107001"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 не задано гражданство (код страны) иностранного гражданина (лица без гражданства).",
					"Раздел1Прил9", "П00019М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ (СтрДлина(ЗначПок) = 3 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначПок)) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 задано значение гражданства (кода страны) иностранного гражданина (лица без гражданства), не состоящее из 3 цифр.",
					"Раздел1Прил9", "П00019М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
				ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
				
				ПроверитьПоказательНаНеотрицательность("П00019М108001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00019М108002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00019М108003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00019М108004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00019М108005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Приложение 10 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил10;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел1Прил10",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Данные = ДеревоРаздела.Строки[0].Данные;
			НомерСтраницы = 1;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил10");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПроверитьПоказательНаНеотрицательность("П001100001001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П001100001002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П001100001003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П001100001004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П001100001005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
			
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М1;
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
				НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
				
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00110М103001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
					+ НомерСтроки + " группы строк 020-140 не задана фамилия обучающегося.",
					"Раздел1Прил10", "П00110М103001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
					+ НомерСтроки + " группы строк 020-140 неверно задана фамилия обучающегося."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил10", "П00110М103001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00110М104001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
					+ НомерСтроки + " группы строк 020-140 не задано имя обучающегося.",
					"Раздел1Прил10", "П00110М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
					+ НомерСтроки + " группы строк 020-140 неверно задано имя обучающегося."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил10", "П00110М104001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные["П00110М105001"]);
				Если ЗначениеЗаполнено(РеквизитФИО)
					И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 10 к разделу 1: в строке "
					+ НомерСтроки + " группы строк 020-140 неверно задано отчество обучающегося."
					+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
					"Раздел1Прил10", "П00110М105001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				СправкаСтудОтрядНомер = СокрЛП(СтрокаМнЧ.Данные["П00110М106001"]);
				СправкаСтудОтрядДата  = СтрокаМнЧ.Данные["П00110М107001"];
				СправкаОчноеОбучНомер = СокрЛП(СтрокаМнЧ.Данные["П00110М108001"]);
				СправкаОчноеОбучДата  = СтрокаМнЧ.Данные["П00110М109001"];
				Если (ЗначениеЗаполнено(СправкаСтудОтрядНомер)
					ИЛИ ЗначениеЗаполнено(СправкаСтудОтрядДата))
					И (ЗначениеЗаполнено(СправкаОчноеОбучНомер)
					ИЛИ ЗначениеЗаполнено(СправкаОчноеОбучДата)) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 одновременно заданы сведения из справки, подтверждающих членство в студенческом отряде, и сведения из справки, подтверждающих очную форму обучения.",
					"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли ЗначениеЗаполнено(СправкаСтудОтрядНомер)
					ИЛИ ЗначениеЗаполнено(СправкаСтудОтрядДата) Тогда
					Если НЕ ЗначениеЗаполнено(СправкаСтудОтрядНомер) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, не задан номер.",
						"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СправкаСтудОтрядДата) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, не задана дата.",
						"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СправкаСтудОтрядДата) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, задана дата, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
						"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(СправкаОчноеОбучНомер)
					ИЛИ ЗначениеЗаполнено(СправкаОчноеОбучДата) Тогда
					Если НЕ ЗначениеЗаполнено(СправкаОчноеОбучНомер) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, не задан номер.",
						"Раздел1Прил10", "П00110М108001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СправкаОчноеОбучДата) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, не задана дата.",
						"Раздел1Прил10", "П00110М109001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СправкаОчноеОбучДата) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1: в строке " + НомерСтроки
						+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, задана дата, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
						"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				Иначе
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 необходимо задать сведения из справки, подтверждающих членство в студенческом отряде, или сведения из справки, подтверждающих очную форму обучения.",
					"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
				ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
				
				ПроверитьПоказательНаНеотрицательность("П00110М110001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00110М110002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00110М110003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00110М110004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00110М110005", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
				Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
					ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
					НомерПодчСтроки = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
					
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00110М212001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1 -> Строка " + НомерСтроки
						+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задано наименование молодежного и детского объединения.",
						"Раздел1Прил10", "П00110М212001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные["П00110М213001"]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1 -> Строка " + НомерСтроки
						+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задана дата записи в реестре.",
						"Раздел1Прил10", "П00110М213001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00110М214001"])) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 10 к разделу 1 -> Строка " + НомерСтроки
						+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задан номер записи в реестре.",
						"Раздел1Прил10", "П00110М214001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Раздел 2.
		ДеревоРаздела2 = ДанныеМногоуровневыхРазделов.Раздел2;
		Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
			
			НомерСтраницы = 1;
			
			Если НЕ ЗаполненРаздел(ИмяФормы,
				ДеревоРаздела2,
				"Раздел2",
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов) Тогда
				
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Раздел 2 не заполнен.", "Раздел2", "П000020001001", НомерСтраницы);
				СтатусПроверки = Ложь;
				
			Иначе
				
				Данные = ДеревоРаздела2.Строки[0].Данные;
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел2");
				ПарамПроверки.Вставить("Данные",        Данные);
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000020001001"]));
				Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 2: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
					+ " задан код по ОКТМО.",
					"Раздел2", "П000020001001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				КБКДлина = СтрДлина(СокрЛП(Данные["П000020002001"]));
				Если НЕ КБКДлина = 20 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 2: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел2", "П000020002001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПроверитьПоказательНаНеотрицательность("П000020003001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				КБКДлина = СтрДлина(СокрЛП(Данные["П000020004001"]));
				Если НЕ КБКДлина = 20 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 2: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
					+ " задан код бюджетной классификации.",
					"Раздел2", "П000020004001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПроверитьПоказательНаНеотрицательность("П000020005001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				ДанныеМнЧ = ДеревоРаздела2.Строки[0].ДанныеМногострочныхЧастей[
				СтруктураРеквизитовФормы.мИдГруппы21М1];
				
				ИмяПокФамилияФЛ = "П00021М101001";
				ИмяПокИмяФЛ     = "П00021М102001";
				ИмяПокОтчФЛ     = "П00021М103001";
				ИмяПокИННФЛ     = "П00021М104001";
				ИмяПокСНИЛС     = "П00021М105001";
				ИмяПокГодРожд   = "П00021М106001";
				ИмяПокДатаНач   = "П00021М107001";
				ИмяПокДатаКон   = "П00021М108001";
				
				Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					
					Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокФамилияФЛ]);
					Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задана фамилия члена крестьянского (фермерского) хозяйства.",
						"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 неверно задана фамилия члена крестьянского (фермерского) хозяйства."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокИмяФЛ]);
					Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задано имя члена крестьянского (фермерского) хозяйства.",
						"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 неверно задано имя члена крестьянского (фермерского) хозяйства."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ТекстСообщения = "";
					РеквизитФИО = СокрЛП(СтрокаМнЧ.Данные[ИмяПокОтчФЛ]);
					Если ЗначениеЗаполнено(РеквизитФИО)
						И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 неверно задано отчество члена крестьянского (фермерского) хозяйства."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""),
						"Раздел2", ИмяПокОтчФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ИННФЛ = СокрЛП(СтрокаМнЧ.Данные[ИмяПокИННФЛ]);
					Если ЗначениеЗаполнено(ИННФЛ) Тогда
						ТекстСообщения = "";
						Если НЕ ИННФЛСоответствуетТребованиям(ИННФЛ, ТекстСообщения) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
							+ " группы строк 010-090 неверно задан ИНН члена крестьянского (фермерского) хозяйства."
							+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2", ИмяПокИННФЛ + "_" + Инд);
							СтатусПроверки = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					ТекстСообщения = "";
					СНИЛС = СокрЛП(СтрокаМнЧ.Данные[ИмяПокСНИЛС]);
					Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задан задан СНИЛС члена крестьянского (фермерского) хозяйства.",
						"Раздел2", ИмяПокСНИЛС + "_" + Инд);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ СНИЛССоответствуетТребованиям(СтрокаМнЧ.Данные[ИмяПокСНИЛС], ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 неверно задан задан СНИЛС члена крестьянского (фермерского) хозяйства."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел2", ИмяПокСНИЛС + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ГодРождДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокГодРожд]));
					Если НЕ ГодРождДлина = 4 Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не" + ?(ГодРождДлина = 0, "", "верно")
						+ " задан год рождения члена крестьянского (фермерского) хозяйства.",
						"Раздел2", ИмяПокГодРожд + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задана дата начала периода членства в крестьянском (фермерском) хозяйстве в расчетный период.",
						"Раздел2", ИмяПокДатаНач + "_" + Инд);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаНач],
						СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала,
						СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 задана дата начала периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода.",
						"Раздел2", ИмяПокДатаНач + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон]) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 не задана дата окончания периода членства в крестьянском (фермерском) хозяйстве в расчетный период.",
						"Раздел2", ИмяПокДатаКон + "_" + Инд);
						СтатусПроверки = Ложь;
					ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, СтрокаМнЧ.Данные[ИмяПокДатаКон],
						СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала,
						СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 задана дата окончания периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода.",
						"Раздел2", ИмяПокДатаКон + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач])
						И ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон])
						И СтрокаМнЧ.Данные[ИмяПокДатаНач] > СтрокаМнЧ.Данные[ИмяПокДатаКон] Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
						"Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 дата начала периода членства в крестьянском (фермерском) хозяйстве не должна быть больше даты окончания.",
						"Раздел2", ИмяПокДатаКон + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
					
					ПроверитьПоказательНаНеотрицательность("П00021М109001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00021М109002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Раздел 3.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел3;
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоРаздела,
			"Раздел3",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами = Новый Массив;
			
			ТаблПорядковыхНомеров = Новый ТаблицаЗначений;
			ТаблПорядковыхНомеров.Колонки.Добавить("ПорядковыйНомер");
			ТаблПорядковыхНомеров.Колонки.Добавить("ИндексСтраницы");
			ТаблПорядковыхНомеров.Колонки.Добавить("СчетчикСтраниц");
			
			Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
				
				// Подраздел 3.1.
				Данные = СтраницаРаздела.Данные;
				НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
				
				СтруктПарам = Новый Структура;
				СтруктПарам.Вставить("ПроверкаВыгрузкиСтраницы");
				СтруктПарам.Вставить("Фам", Данные.П000310008001);
				СтруктПарам.Вставить("Имя", Данные.П000310009001);
				СтруктПарам.Вставить("Отч", Данные.П000310010001);
				СтруктПарам.Вставить("ДатаРожд", Данные.П000310011001);
				СтруктПарам.Вставить("НомерСтраницы", НомерСтраницы);
				ПредстСтраницы = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
				
				ПарамПроверки.Вставить("ИмяРаздела",    "Раздел3");
				ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
				
				ПорядковыйНомер = СокрЛП(Данные["П000030004001"]);
				Если НЕ ЗначениеЗаполнено(ПорядковыйНомер) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 040 не задан номер.",
					"Раздел3", "П000030004001", НомерСтраницы);
					СтатусПроверки = Ложь;
				Иначе
					НоваяСтрокаТаблПорядковыхНомеров = ТаблПорядковыхНомеров.Добавить();
					НоваяСтрокаТаблПорядковыхНомеров.ПорядковыйНомер = ПорядковыйНомер;
					НоваяСтрокаТаблПорядковыхНомеров.ИндексСтраницы = ДеревоРаздела.Строки.Индекс(СтраницаРаздела);
					НоваяСтрокаТаблПорядковыхНомеров.СчетчикСтраниц = 1;
				КонецЕсли;
				ИННФЛ = СокрЛП(Данные["П000310006001"]);
				Если ЗначениеЗаполнено(ИННФЛ) Тогда
					ТекстСообщения = "";
					Если НЕ ИННФЛСоответствуетТребованиям(ИННФЛ, ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
						+ ": в строке 060 неверно задан ИНН физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
						" " + ТекстСообщения, ""), "Раздел3", "П000310006001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				ТекстСообщения = "";
				СНИЛС = СокрЛП(Данные["П000310007001"]);
				Если НЕ ЗначениеЗаполнено(СНИЛС) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 070 не задан СНИЛС физического лица.", "Раздел3", "П000310007001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ СНИЛССоответствуетТребованиям(Данные["П000310007001"], ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 070 неверно задан СНИЛС физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310007001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(Данные["П000310008001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 080 не задана фамилия физического лица.", "Раздел3", "П000310008001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 1, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 080 неверно задана фамилия физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310008001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(Данные["П000310009001"]);
				Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
					"Раздел 3 -> " + ПредстСтраницы + ": в строке 090 не задано имя физического лица.",
					"Раздел3", "П000310009001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 2, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 090 неверно задано имя физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310009001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ТекстСообщения = "";
				РеквизитФИО = СокрЛП(Данные["П000310010001"]);
				Если ЗначениеЗаполнено(РеквизитФИО)
					И НЕ РеквизитФИОСоответствуетТребованиям(РеквизитФИО, 3, ТекстСообщения) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 100 неверно задано отчество физического лица." + ?(ЗначениеЗаполнено(ТекстСообщения),
					" " + ТекстСообщения, ""), "Раздел3", "П000310010001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(Данные["П000310011001"]) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 110 не задана дата рождения физического лица.", "Раздел3", "П000310011001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(ИмяФормы, Данные["П000310011001"], , ПараметрыВыгрузки.ДатаДок_Дата) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 110 задана дата рождения физического лица, выходящая за пределы периода с 01.01.1900 по "
					+ Формат(ПараметрыВыгрузки.ДатаДок_Дата, "ДФ=дд.ММ.гггг") + ".", "Раздел3", "П000310011001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначПок = СокрЛП(Данные["П000310012001"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 120 не задано гражданство (код страны) физического лица.",
					"Раздел3", "П000310012001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ (СтрДлина(ЗначПок) = 3 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначПок)) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 120 задано значение гражданства (кода страны) физического лица, не состоящее из 3 цифр.",
					"Раздел3", "П000310012001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначениеПоказателя = СокрЛП(Данные["П000310013001"]);
				Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 130 не"
					+ ?(ЗначениеПоказателя = "", "", "верно") + " задан пол.", "Раздел3", "П000310013001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				КодВидДокДлина = СтрДлина(СокрЛП(Данные["П000310014001"]));
				Если НЕ КодВидДокДлина = 2 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + ": в строке 140 не"
					+ ?(КодВидДокДлина = 0, "", "верно") + " задан код вида документа, удостоверяющего личность.",
					"Раздел3", "П000310014001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310015001"]))
					ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015002"]))) Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 150 не заданы серия и номер документа, удостоверяющего личность.",
					"Раздел3", "П000310015001", НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли СтрДлина(СокрЛП(Данные["П000310015001"]) + СокрЛП(Данные["П000310015002"])) > 24 Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 150 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24.",
					"Раздел3", "П000310015001", НомерСтраницы);
					СтатусПроверки = Ложь;
				Иначе
					ТекстСообщения = "";
					Если НЕ СерияНомерДокументаСоответствуютТребованиям(
						Данные["П000310014001"], Данные["П000310015001"], Данные["П000310015002"], ТекстСообщения) Тогда
						СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
						+ ": в строке 150 неверно заданы серия и номер документа, удостоверяющего личность."
						+ ?(ЗначениеЗаполнено(ТекстСообщения), " " + ТекстСообщения, ""), "Раздел3",
						?(ЗначениеЗаполнено(Данные["П000310015001"]), "П000310015001", "П000310015002"), НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				ЗначениеПоказателя = СокрЛП(Данные["П000310016001"]);
				Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 160 не" + ?(ЗначениеПоказателя = "", "", "верно")
					+ " задан признак застрахованного лица в системе обязательного пенсионного страхования.",
					"Раздел3", "П000310016001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначениеПоказателя = СокрЛП(Данные["П000310017001"]);
				Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 170 не" + ?(ЗначениеПоказателя = "", "", "верно")
					+ " задан признак застрахованного лица в системе обязательного медицинского страхования.",
					"Раздел3", "П000310017001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				ЗначениеПоказателя = СокрЛП(Данные["П000310018001"]);
				Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
					СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы
					+ ": в строке 180 не" + ?(ЗначениеПоказателя = "", "", "верно")
					+ " задан признак застрахованного лица в системе обязательного социального страхования.",
					"Раздел3", "П000310018001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				// Проверка в подразделе 3.2.
				ЗаполненПодраздел321 = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы321М1;
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел321 = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				ЗаполненПодраздел322 = Ложь;
				ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы322М1;
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
							ЗаполненПодраздел322 = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
				// Подраздел 3.2.1.
				Если ЗаполненПодраздел321 ИЛИ ЗаполненПодраздел322 Тогда
					ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00321М119001"])) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
							+ " группы строк 190-240 не задан месяц.", "Раздел3", "П00321М119001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						КодКатегорииЗЛ = СокрЛП(СтрокаМнЧ.Данные["П00321М120001"]);
						Если НЕ ЗначениеЗаполнено(КодКатегорииЗЛ) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
							+ " группы строк 190-240 не задан код категории застрахованного лица.",
							"Раздел3", "П00321М120001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли СтрДлина(КодКатегорииЗЛ) < 2 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
							+ " группы строк 190-240 задан код категории застрахованного лица, состоящий менее чем из 2 символов.",
							"Раздел3", "П00321М120001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
						
						ПроверитьПоказательНаНеотрицательность("П00321М121001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00321М122001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00321М123001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00321М124001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные", Данные);
				ПроверитьПоказательНаНеотрицательность("П003210025001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П003210025002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П003210025003", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П003210025004", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
				// Подраздел 3.2.2.
				Если ЗаполненПодраздел322 Тогда
					ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
						НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
						Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00322М126001"])) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
							+ " группы строк 260-290 не задан месяц.", "Раздел3", "П00322М126001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						КодТарифа = СокрЛП(СтрокаМнЧ.Данные["П00322М127001"]);
						Если НЕ ЗначениеЗаполнено(КодТарифа) Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
							+ " группы строк 260-290 не задан код тарифа.", "Раздел3", "П00322М127001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли СтрДлина(КодТарифа) < 2 Тогда
							СообщитьВТС(ИмяФормы, РезультатВыгрузки, "Раздел 3 -> " + ПредстСтраницы + " -> в строке " + НомерСтроки
							+ " группы строк 260-290 задан код тарифа, не состоящий из 2 символов.",
							"Раздел3", "П00322М127001_" + НомерСтроки, НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
						ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
						
						ПроверитьПоказательНаНеотрицательность("П00322М128001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						ПроверитьПоказательНаНеотрицательность("П00322М129001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
						
					КонецЦикла;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные", Данные);
				ПроверитьПоказательНаНеотрицательность("П003220030001", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П003220030002", ПарамПроверки, РезультатВыгрузки, СтатусПроверки);
				
			КонецЦикла;
			
			ТаблПорядНом = ТаблПорядковыхНомеров.Скопировать();
			ТаблПорядНом.Свернуть("ПорядковыйНомер", "СчетчикСтраниц");
			
			ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = Неопределено;
			
			Если ТаблПорядковыхНомеров.Количество() <> ТаблПорядНом.Количество() Тогда
				
				Для каждого СтрокаТаблПорядНом Из ТаблПорядНом Цикл
					
					Если СтрокаТаблПорядНом.СчетчикСтраниц > 1 Тогда
						
						СтрокиТаблПорядковыхНомеров = ТаблПорядковыхНомеров.НайтиСтроки(
						Новый Структура("ПорядковыйНомер", СтрокаТаблПорядНом.ПорядковыйНомер));
						
						Для каждого СтрокаТаблПорядковыхНомеров Из СтрокиТаблПорядковыхНомеров Цикл
							
							Данные = ДеревоРаздела.Строки[СтрокаТаблПорядковыхНомеров.ИндексСтраницы].Данные;
							
							СтруктПарам = Новый Структура;
							СтруктПарам.Вставить("Фам", Данные.П000310008001);
							СтруктПарам.Вставить("Имя", Данные.П000310009001);
							СтруктПарам.Вставить("Отч", Данные.П000310010001);
							СтруктПарам.Вставить("ДатаРожд", Данные.П000310011001);
							СтруктПарам.Вставить("НомерСтраницы", СтрокаТаблПорядковыхНомеров.ИндексСтраницы + 1);
							ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами.Добавить(
							"""" + РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам) + """");
							
							Если ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = Неопределено Тогда
								ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = СтрокаТаблПорядковыхНомеров.ИндексСтраницы;
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами.Количество() > 0 Тогда
				
				СообщитьВТС(ИмяФормы, РезультатВыгрузки, 
				"Раздел 3: заданы неуникальные значения строки 040 на страницах "
				+ СтрСоединить(ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами, ", ") + ".",
				"Раздел3", "П000030004001", Формат(ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером + 1, "ЧГ="));
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтатусПроверки;
	
КонецФункции

Функция ИННФЛСоответствуетТребованиям(Знач ИНН, ТекстСообщения)
	
	Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, Ложь, ТекстСообщения) Тогда
		
		Если ЗначениеЗаполнено(ТекстСообщения) И Прав(ТекстСообщения, 1) = "." Тогда
			ТекстСообщения = Лев(ТекстСообщения, СтрДлина(ТекстСообщения) - 1);
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Символы12 = Лев(ИНН, 2);
	
	Если Символы12 = "00"
		ИЛИ Символы12 = "90"
		ИЛИ Символы12 = "93"
		ИЛИ Символы12 = "94"
		ИЛИ Символы12 = "95"
		ИЛИ Символы12 = "96"
		ИЛИ Символы12 = "98" Тогда
		
		ТекстСообщения = НСтр(
		"ru = 'Не допустимы следующие значения в двух первых разрядах ИНН: 00, 90, 93, 94, 95, 96, 98'");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция СНИЛССоответствуетТребованиям(Знач СНИЛС, ТекстСообщения)
	
	ТекстСообщенияОбщий = НСтр(
	"ru='СНИЛС должен соответствовать одному из шаблонов: ""ХХХ-ХХХ-ХХХ-ХХ"", ""ХХХ-ХХХ-ХХХ ХХ"" (X - любая цифра)'");
	
	СНИЛС = СокрЛП(СНИЛС);
	
	Если СтрДлина(СНИЛС) <> 14 Тогда
		
		ТекстСообщения = ТекстСообщенияОбщий;
		
		Возврат Ложь;
		
	Иначе
		
		Для Ном = 1 По 14 Цикл
			
			ТекСимв = Сред(СНИЛС, Ном, 1);
			
			Если Ном = 4 ИЛИ Ном = 8 Тогда
				СНИЛССоответствуетТребованиям = ТекСимв = "-";
			ИначеЕсли Ном = 12 Тогда
				СНИЛССоответствуетТребованиям = (ТекСимв = " " ИЛИ ТекСимв = "-");
			Иначе
				СНИЛССоответствуетТребованиям = СтрНайти("1234567890", ТекСимв) > 0;
			КонецЕсли;
			
			Если НЕ СНИЛССоответствуетТребованиям Тогда
				
				ТекстСообщения = ТекстСообщенияОбщий;
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция СерияНомерДокументаСоответствуютТребованиям(Знач ВидДок, Знач СерияДок, Знач НомерДок, ТекстСообщения)
	
	ВидДок = СокрЛП(ВидДок);
	
	Если ВидДок <> "21" Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ТекстСообщенияОбщий = НСтр(
	"ru='Серия и номер паспорта гражданина Российской Федерации должны соответствовать шаблону: ""ХХ ХХ ХХХХХХ"" (X - любая цифра)'");
	
	СерияДок = СокрЛП(СерияДок);
	НомерДок = СокрЛП(НомерДок);
	
	СерияНомерДок = СокрЛП(СерияДок + " " + НомерДок);
	
	Если СтрДлина(СерияНомерДок) <> 12 Тогда
		
		ТекстСообщения = ТекстСообщенияОбщий;
		
		Возврат Ложь;
		
	Иначе
		
		Для Ном = 1 По 12 Цикл
			
			ТекСимв = Сред(СерияНомерДок, Ном, 1);
			
			Если Ном = 3 ИЛИ Ном = 6 Тогда
				СерияНомерСоответствуютТребованиям = ТекСимв = " ";
			Иначе
				СерияНомерСоответствуютТребованиям = СтрНайти("1234567890", ТекСимв) > 0;
			КонецЕсли;
			
			Если НЕ СерияНомерСоответствуютТребованиям Тогда
				
				ТекстСообщения = ТекстСообщенияОбщий;
				
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция РеквизитФИОСоответствуетТребованиям(Знач РеквизитФИО, ТипРеквизитаФИО, ТекстСообщения)
	
	Если НЕ ЗначениеЗаполнено(РеквизитФИО) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если ТипРеквизитаФИО = 1 Тогда
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(РеквизитФИО, , " -.'IV") Тогда
			
			ТекстСообщения = НСтр(
			"ru = 'Фамилия должна быть заполнена прописными (большими) и строчными (маленькими) буквами русского алфавита; допускаются прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф), "" "" (пробел)'");
			
			Возврат Ложь;
			
		КонецЕсли;
		
		РеквизитФИОДлина = СтрДлина(РеквизитФИО);
		
		Если РеквизитФИОДлина = 1 Тогда
			
			Если СтрНайти("-.'IV", РеквизитФИО) > 0 Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве единственного символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф)'");
				
				Возврат Ложь;
				
			КонецЕсли;
			
		Иначе
			
			НедопустимыйПервыйСимвол    = СтрНайти("-.'IV", Лев(РеквизитФИО, 1)) > 0;
			НедопустимыйПоследнийСимвол = СтрНайти("-.'",  Прав(РеквизитФИО, 1)) > 0;
			
			Если НедопустимыйПервыйСимвол И НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф) и не должна содержать в качестве последнего символа ""."" (точку), ""-"" (дефис), "" ’ "" (апостроф)'");
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПервыйСимвол Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф)'");
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = НСтр(
				"ru = 'Фамилия не должна содержать в качестве последнего символа ""."" (точку), ""-"" (дефис), "" ’ "" (апостроф)'");
				
				Возврат Ложь;
				
			КонецЕсли;
			
			Для Ном = 1 По РеквизитФИОДлина Цикл
				
				ТекСимв = Сред(РеквизитФИО, Ном, 1);
				
				Если Ном < РеквизитФИОДлина Тогда
					
					Если СтрНайти("-.'", ТекСимв) > 0 Тогда
						
						Если СтрНайти("-.'", Сред(РеквизитФИО, Ном + 1, 1)) > 0 Тогда
							
							ТекстСообщения = НСтр(
							"ru = 'Фамилия не должна содержать сочетание (повторение) подряд двух и более символов ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф)'");
							
							Возврат Ложь;
							
						КонецЕсли;
						
					ИначеЕсли ТекСимв = " " Тогда
						
						Если Сред(РеквизитФИО, Ном + 1, 1) = " " Тогда
							
							ТекстСообщения = НСтр(
							"ru = 'Фамилия не должна содержать сочетание (повторение) подряд двух и более символов "" "" (пробел), если они не являются начальными или конечными'");
							
							Возврат Ложь;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		ПредставлениеРеквизитаФИО = ?(ТипРеквизитаФИО = 2, "Имя ", "Отчество ");
		
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(РеквизитФИО, , " -.'IV") Тогда
			
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1должно быть заполнено прописными (большими) и строчными (маленькими) буквами русского алфавита; допускаются прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф), "" "" (пробел)'"),
			ПредставлениеРеквизитаФИО);
			
			Возврат Ложь;
			
		КонецЕсли;
		
		РеквизитФИОДлина = СтрДлина(РеквизитФИО);
		
		Если РеквизитФИОДлина = 1 Тогда
			
			Если СтрНайти("-.'IV", РеквизитФИО) > 0 Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве единственного символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф)'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			КонецЕсли;
			
		Иначе
			
			НедопустимыйПервыйСимвол    = СтрНайти("-.'IV", Лев(РеквизитФИО, 1)) > 0;
			НедопустимыйПоследнийСимвол = СтрНайти("-'",   Прав(РеквизитФИО, 1)) > 0;
			
			Если НедопустимыйПервыйСимвол И НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф) и не должно содержать в качестве последнего символа ""-"" (дефис), "" ’ "" (апостроф)'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПервыйСимвол Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве первого символа прописные (большие) буквы ""I"", ""V"" латинского алфавита, символы ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф)'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			ИначеЕсли НедопустимыйПоследнийСимвол Тогда
				
				ТекстСообщения = СтрШаблон(НСтр(
				"ru = '%1не должно содержать в качестве последнего символа ""-"" (дефис), "" ’ "" (апостроф)'"),
				ПредставлениеРеквизитаФИО);
				
				Возврат Ложь;
				
			КонецЕсли;
			
			Для Ном = 1 По РеквизитФИОДлина Цикл
				
				ТекСимв = Сред(РеквизитФИО, Ном, 1);
				
				Если Ном < РеквизитФИОДлина Тогда
					
					Если СтрНайти("-.'", ТекСимв) > 0 Тогда
						
						Если СтрНайти("-.'", Сред(РеквизитФИО, Ном + 1, 1)) > 0 Тогда
							
							ТекстСообщения = СтрШаблон(НСтр(
							"ru = '%1не должно содержать сочетание (повторение) подряд двух и более символов ""."" (точка), ""-"" (дефис), "" ’ "" (апостроф)'"),
							ПредставлениеРеквизитаФИО);
							
							Возврат Ложь;
							
						КонецЕсли;
						
					ИначеЕсли ТекСимв = " " Тогда
						
						Если Сред(РеквизитФИО, Ном + 1, 1) = " " Тогда
							
							ТекстСообщения = СтрШаблон(НСтр(
							"ru = '%1не должно содержать сочетание (повторение) подряд двух и более символов "" "" (пробел), если они не являются начальными или конечными'"),
							ПредставлениеРеквизитаФИО);
							
							Возврат Ложь;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьПоказательНаНеотрицательность(ИмяПоказателя, ПарамПроверки, РезультатВыгрузки, СтатусПроверки)
	
	Если ПарамПроверки.Данные[ИмяПоказателя] < 0 Тогда
		
		КодСтроки = Сред(ИмяПоказателя, 9, 3);
		
		ИмяФормы = ПарамПроверки.ИмяФормы;
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			Если ПарамПроверки.ИмяРаздела = "Раздел1" Тогда
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					НомерМнЧ = Сред(ИмяПоказателя, 8, 1);
					ТекстГруппаСтрок = "";
					Если НомерМнЧ = "1" Тогда
						ТекстГруппаСтрок = "060-073";
					ИначеЕсли НомерМнЧ = "2" Тогда
						ТекстГруппаСтрок = "080-093";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 1: в строке %1 группы строк %2 значение строки с кодом %3 не должно быть отрицательным'"),
					ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 1: в строке %1 значение не должно быть отрицательным'"), КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
				
				НомерПодраздела = Лев(ИмяПоказателя, 6);
				ТекстНомерПодраздела = "";
				Если НомерПодраздела = "П01111" Тогда
					ТекстНомерПодраздела = "1.1";
				ИначеЕсли НомерПодраздела = "П01112" Тогда
					ТекстНомерПодраздела = "1.2";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в графе %3 строки %4 значение не должно быть отрицательным'"),
				ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, Прав(ИмяПоказателя, 1), КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.КоординатыПодраздела);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
				
				ТекстНомерПодраздела = "";
				Если ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
					ТекстНомерПодраздела = "Подраздел 1.3.1";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
					ТекстНомерПодраздела = "Подраздел 1.3.2";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1 к разделу 1 -> Страница %1 -> %2: в строке %3 группы строк 001-050 в графе %4 строки %5 значение не должно быть отрицательным'"),
				ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, ПарамПроверки.НомерСтрокиМнЧ, Сред(ИмяПоказателя, 13, 1),
				КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.КоординатыПодраздела);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1_1" Тогда
				
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1.1 к разделу 1: в строке %1 группы строк 001-050 в графе %2 строки %3 значение не должно быть отрицательным'"),
				ПарамПроверки.НомерСтрокиМнЧ, НомерГрафы, КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил2" Тогда
				
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение 2 к разделу 1: в строке %1 группы строк 001-060 в графе %2 строки %3 значение не должно быть отрицательным'"),
					ПарамПроверки.НомерСтрокиМнЧ, НомерГрафы, КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстНомерГрафы = Прав(ИмяПоказателя, 1);
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение 2 к Разделу 1: в графе %1 строки %2 значение не должно быть отрицательным'"),
					ТекстНомерГрафы, КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил3"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил4"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил5"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил6"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил7" Тогда
				
				ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
				
				ТекстНомерГрафы = Прав(ИмяПоказателя, 1);
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение %1 к Разделу 1: в графе %2 строки %3 значение не должно быть отрицательным'"),
				ТекстНомерПриложения, ТекстНомерГрафы, КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил5_1" Тогда // "ФормаОтчета2020Кв4"
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 5.1 к разделу 1: в строке %1 группы строк 001-060 сумма %2 не должна быть отрицательной'"),
				ПарамПроверки.НомерСтрокиМнЧ, "в графе " + Сред(ИмяПоказателя, 13, 1) + " по строке " + Сред(ИмяПоказателя, 9, 3));
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил8"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил9" Тогда
				
				ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
				
				ТекстСуммаВыплат = "";
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				Если НомерГрафы = "1" Тогда
					ТекстСуммаВыплат = "всего с начала расчетного периода";
				ИначеЕсли НомерГрафы = "2" Тогда
					ТекстСуммаВыплат = "за первый из последних трех месяцев расчетного (отчетного) периода";
				ИначеЕсли НомерГрафы = "3" Тогда
					ТекстСуммаВыплат = "за второй из последних трех месяцев расчетного (отчетного) периода";
				ИначеЕсли НомерГрафы = "4" Тогда
					ТекстСуммаВыплат = "за третий из последних трех месяцев расчетного (отчетного) периода";
				КонецЕсли;
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					ТекстГруппаСтрок = "";
					Если ПарамПроверки.ИмяРаздела = "Раздел1Прил8" Тогда
						ТекстГруппаСтрок = "020-080";
					ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил9" Тогда
						ТекстГруппаСтрок = "020-130";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение %1 к разделу 1: в строке %2 группы строк %3 сумма выплат %4 не должна быть отрицательной'"),
					ТекстНомерПриложения, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение %1 к разделу 1: итоговая сумма выплат %2 не должна быть отрицательной'"),
					ТекстНомерПриложения, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел2" Тогда
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					ТекстСуммаВыплат = "";
					НомерГрафы = Сред(ИмяПоказателя, 13, 1);
					Если НомерГрафы = "1" Тогда
						ТекстСуммаВыплат = "пенсионное";
					ИначеЕсли НомерГрафы = "2" Тогда
						ТекстСуммаВыплат = "медицинское";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение 1 к разделу 2: в строке %1 группы строк 010-090 сумма исчисленных страховых взносов на обязательное %2 страхование не должна быть отрицательной'"),
					ПарамПроверки.НомерСтрокиМнЧ, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 2: в строке %1 значение не должно быть отрицательным'"), КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел3" Тогда
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					МнЧ = Лев(ИмяПоказателя, 8);
					ТекстГруппаСтрок = "";
					Если МнЧ = "П00321М1" Тогда
						ТекстГруппаСтрок = "120-170";
					ИначеЕсли МнЧ = "П00322М1" Тогда
						ТекстГруппаСтрок = "180-210";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 3 -> Страница %1 -> в строке %2 группы строк %3 значение строки с кодом %4 не должно быть отрицательным'"),
					ПарамПроверки.НомерСтраницы, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			СтатусПроверки = Ложь;
			
		ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
			
			Если ПарамПроверки.ИмяРаздела = "Раздел1" Тогда
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					НомерМнЧ = Сред(ИмяПоказателя, 8, 1);
					ТекстГруппаСтрок = "";
					Если НомерМнЧ = "1" Тогда
						ТекстГруппаСтрок = "060-073";
					ИначеЕсли НомерМнЧ = "2" Тогда
						ТекстГруппаСтрок = "080-093";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 1: в строке %1 группы строк %2 значение строки с кодом %3 не должно быть отрицательным.'"),
					ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 1: в строке %1 значение не должно быть отрицательным.'"), КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
				
				НомерПодраздела = Лев(ИмяПоказателя, 6);
				ТекстНомерПодраздела = "";
				Если НомерПодраздела = "П01111" Тогда
					ТекстНомерПодраздела = "1.1";
				ИначеЕсли НомерПодраздела = "П01112" Тогда
					ТекстНомерПодраздела = "1.2";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в графе %3 строки %4 значение не должно быть отрицательным.'"),
				ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, Прав(ИмяПоказателя, 1), КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.КоординатыПодраздела);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
				
				ТекстНомерПодраздела = "";
				Если ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
					ТекстНомерПодраздела = "1.3.1";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
					ТекстНомерПодраздела = "1.3.2";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
					ТекстНомерПодраздела = "1.4";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в строке %3 группы строк 001-050 в графе %4 строки %5 значение не должно быть отрицательным.'"),
				ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, ПарамПроверки.НомерСтрокиМнЧ, Сред(ИмяПоказателя, 13, 1),
				КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.КоординатыПодраздела);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил2"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил3"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил4"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил5_6"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил7" Тогда
				
				ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
				
				ТекстНомерГрафы = Прав(ИмяПоказателя, 1);
				ТекстНомерГрафы = ?(ТекстНомерГрафы = "0", Прав(ИмяПоказателя, 2), ТекстНомерГрафы);
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение %1 к Разделу 1: в графе %2 строки %3 значение не должно быть отрицательным.'"),
				ТекстНомерПриложения, ТекстНомерГрафы, КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил8"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил9"
				ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил10" Тогда
				
				ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
				ТекстНомерПриложения = ?(ТекстНомерПриложения = "0", Сред(ИмяПоказателя, 5, 2), ТекстНомерПриложения);
				
				ТекстСуммаВыплат = "";
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				Если НомерГрафы = "1" Тогда
					ТекстСуммаВыплат = "всего с начала расчетного периода";
				ИначеЕсли НомерГрафы = "2" Тогда
					ТекстСуммаВыплат = "всего за последние три месяца расчетного (отчетного) периода";
				ИначеЕсли НомерГрафы = "3" Тогда
					ТекстСуммаВыплат = "за первый из последних трех месяцев расчетного (отчетного) периода";
				ИначеЕсли НомерГрафы = "4" Тогда
					ТекстСуммаВыплат = "за второй из последних трех месяцев расчетного (отчетного) периода";
				ИначеЕсли НомерГрафы = "5" Тогда
					ТекстСуммаВыплат = "за третий из последних трех месяцев расчетного (отчетного) периода";
				КонецЕсли;
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					ТекстГруппаСтрок = "";
					Если ПарамПроверки.ИмяРаздела = "Раздел1Прил8" Тогда
						ТекстГруппаСтрок = "020-060";
					ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил9" Тогда
						ТекстГруппаСтрок = "020-080";
					ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил10" Тогда
						ТекстГруппаСтрок = "020-100";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение %1 к разделу 1: в строке %2 группы строк %3 сумма выплат %4 не должна быть отрицательной.'"),
					ТекстНомерПриложения, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение %1 к разделу 1: итоговая сумма выплат %2 не должна быть отрицательной.'"),
					ТекстНомерПриложения, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел2" Тогда
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					ТекстСуммаВыплат = "";
					НомерГрафы = Сред(ИмяПоказателя, 13, 1);
					Если НомерГрафы = "1" Тогда
						ТекстСуммаВыплат = "пенсионное";
					ИначеЕсли НомерГрафы = "2" Тогда
						ТекстСуммаВыплат = "медицинское";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Приложение 1 к разделу 2: в строке %1 группы строк 010-090 сумма начисленных страховых взносов на обязательное %2 страхование не должна быть отрицательной.'"),
					ПарамПроверки.НомерСтрокиМнЧ, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 2: в строке %1 значение не должно быть отрицательным.'"), КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел3" Тогда
				
				Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
					
					МнЧ = Лев(ИмяПоказателя, 8);
					ТекстГруппаСтрок = "";
					Если МнЧ = "П00321М1" Тогда
						ТекстГруппаСтрок = "190-240";
					ИначеЕсли МнЧ = "П00322М1" Тогда
						ТекстГруппаСтрок = "260-290";
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 3 -> Страница %1 -> в строке %2 группы строк %3 значение строки с кодом %4 не должно быть отрицательным.'"),
					ПарамПроверки.НомерСтраницы, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
					
				Иначе
					
					ТекстСуммаВыплат = "";
					НомерГрафы = Сред(ИмяПоказателя, 13, 1);
					Если КодСтроки = "250" Тогда
						Если НомерГрафы = "1" Тогда
							ТекстСуммаВыплат = "сумма выплат и иных вознаграждений";
						ИначеЕсли НомерГрафы = "2" Тогда
							ТекстСуммаВыплат = "база для исчисления страховых взносов на обязательное пенсионное страхование в пределах предельной величины";
						ИначеЕсли НомерГрафы = "3" Тогда
							ТекстСуммаВыплат = "база для исчисления страховых взносов на обязательное пенсионное страхование в пределах предельной величины по гражданско-правовым договорам";
						ИначеЕсли НомерГрафы = "4" Тогда
							ТекстСуммаВыплат = "сумма исчисленных страховых взносов с базы исчисления страховых взносов, не превышающих предельную величину,";
						КонецЕсли;
					ИначеЕсли КодСтроки = "300" Тогда
						Если НомерГрафы = "1" Тогда
							ТекстСуммаВыплат = "сумма выплат и иных вознаграждений, на которые начислены страховые взносы,";
						ИначеЕсли НомерГрафы = "2" Тогда
							ТекстСуммаВыплат = "сумма исчисленных страховых взносов";
						КонецЕсли;
					КонецЕсли;
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru='Раздел 3 -> Страница %1 -> %2 всего за последние три месяца расчетного (отчетного) периода не должна быть отрицательной.'"),
					ПарамПроверки.НомерСтраницы, ТекстСуммаВыплат);
					
					СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
					ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПоказательНаРавенствоНулю(ИмяПоказателя, ПарамПроверки, РезультатВыгрузки, СтатусПроверки)
	
	Если ПарамПроверки.Данные[ИмяПоказателя] <> 0 Тогда
		
		КодСтроки = Сред(ИмяПоказателя, 9, 3);
		
		Если ПарамПроверки.ИмяРаздела = "Раздел1" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				НомерМнЧ = Сред(ИмяПоказателя, 8, 1);
				ТекстГруппаСтрок = "";
				Если НомерМнЧ = "1" Тогда
					ТекстГруппаСтрок = "060-073";
				ИначеЕсли НомерМнЧ = "2" Тогда
					ТекстГруппаСтрок = "080-093";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 1: в строке %1 группы строк %2 значение строки с кодом %3 должно быть равно 0 при значении строки с кодом 001, равном 2'"),
				ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 1: в строке %1 значение должно быть равно 0 при значении в строке с кодом 001, равном 2'"), КодСтроки);
				
				СообщитьВТС(ПарамПроверки.ИмяФормы, РезультатВыгрузки, ТекстСообщения,
				ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		КонецЕсли;
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьВТС(ИмяФормы, Владелец, Описание, Раздел, ИмяЯчейки, ФИО = "") Экспорт
	
	РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(Владелец, Описание, Раздел, ИмяЯчейки, ФИО);
	
КонецПроцедуры

Функция ЗаполненРаздел(ИмяФормы,
					   Знач ДеревоРаздела,
					   Знач ИмяРаздела,
					   СтруктураРеквизитовФормы,
					   СтруктураМногоуровневыхРазделов,
					   ДопПараметры = Неопределено) Экспорт
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ПоказателиНеанализируемыеНаЗаполненность = Новый Массив;
		
		Если ИмяРаздела = "Раздел1" Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
				Если ДопПараметры.Свойство("НеПроверятьЗаполнениеСтрок001_010_020_040_100Раздела1") Тогда
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010000101");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010001001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010002001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010004001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010010001");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяРаздела = "Раздел1Прил1" Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
				Если ДопПараметры.Свойство("НеПроверятьЗаполнениеКодаТарифаПлательщика") Тогда
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000110000101");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяРаздела = "Раздел1Прил2" Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
				Если ДопПараметры.Свойство("НеПроверятьЗаполнениеКодаТарифаПлательщикаИПризнакаВыплат") Тогда
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00012М100101");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00012М100201");
				КонецЕсли;
				Если ДопПараметры.Свойство("НеПроверятьЗаполнениеПризнаковСтроки090") Тогда
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009003");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009005");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009007");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00019М102001");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если ИмяРаздела = "Раздел1Прил8" Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
				Если ДопПараметры.Свойство("ЭтоПБОЮЛ") И ДопПараметры.ЭтоПБОЮЛ Тогда
					Возврат Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ПоказателиНеанализируемыеНаЗаполненность = Новый Массив;
		
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010001001");
		
		Если ИмяРаздела = "Раздел1" Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
				Если ДопПараметры.Свойство("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1") Тогда
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010002001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010004001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010010001");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяРаздела = "Раздел1Прил2" Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
				Если ДопПараметры.Свойство("НеПроверятьЗаполнениеПризнаковСтроки090") Тогда
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009001");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009003");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009005");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009007");
					ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009009");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяРаздела = "Раздел1Прил5_6" Тогда
			ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160006002");
			ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160007002");
			ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160008002");
		КонецЕсли;
		
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00110М102001");
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00110М211001");
		
	КонецЕсли;
	
	Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
		
		Данные = СтраницаРаздела.Данные;
		Для каждого Пок Из Данные Цикл
			Если ЗначениеЗаполнено(Пок.Значение)
				И ПоказателиНеанализируемыеНаЗаполненность.Найти(Пок.Ключ) = Неопределено Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаГруппМнЧ") Тогда
			
			ИменаГруппМнЧ = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаГруппМнЧ"];
			Для каждого ИмяГруппы Из ИменаГруппМнЧ Цикл
				
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы])
							И ПоказателиНеанализируемыеНаЗаполненность.Найти(ИмяГрафы) = Неопределено Тогда
							Возврат Истина;
						КонецЕсли;
					КонецЦикла;
					
					ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
					Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
						
						ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппы];
						МассивИменПодчГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяПодчГруппы]["ИменаГраф"];
						Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
							Для каждого ИмяПодчГрафы Из МассивИменПодчГраф Цикл
								Если ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные[ИмяПодчГрафы])
									И ПоказателиНеанализируемыеНаЗаполненность.Найти(ИмяПодчГрафы) = Неопределено Тогда
									Возврат Истина;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
			ИменаПодчРазделов = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
			Для ИндПодчРаздела = 0 По ИменаПодчРазделов.Количество() - 1 Цикл
				ДеревоПодчРаздела = СтраницаРаздела.Строки[ИндПодчРаздела];
				ИмяПодчРаздела = ИменаПодчРазделов[ИндПодчРаздела];
				Если ЗаполненРаздел(ИмяФормы,
									ДеревоПодчРаздела,
									ИмяПодчРаздела,
									СтруктураРеквизитовФормы,
									СтруктураМногоуровневыхРазделов) Тогда
					
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ДатаВходитВРазрешенныйПериод(ИмяФормы,
									 ПровДата,
									 ЛеваяГраница = '19000101',
									 ПраваяГраница = '20991231') Экспорт
	
	Возврат ПровДата >= ЛеваяГраница И ПровДата <= ПраваяГраница;
	
КонецФункции

Процедура ЗаполнитьДанными(ИмяФормы,
						   ДанныеОтчета,
						   ПараметрыВыгрузки,
						   ДеревоВыгрузки,
						   РезультатВыгрузки,
						   СтруктураРеквизитовФормы,
						   СтруктураМногоуровневыхРазделов) Экспорт
	
	ОбработатьУсловныеЭлементы(ИмяФормы,
							   ДанныеОтчета,
							   ПараметрыВыгрузки,
							   ДеревоВыгрузки,
							   РезультатВыгрузки);
	
	ЗаполнитьДаннымиУзел(ИмяФормы,
						 СтруктураРеквизитовФормы,
						 СтруктураМногоуровневыхРазделов,
						 ПараметрыВыгрузки,
						 ДеревоВыгрузки);
	
	ОтсечьНезаполненныеНеобязательныеУзлы(ИмяФормы, ДеревоВыгрузки, ПараметрыВыгрузки);
	
КонецПроцедуры

Процедура ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(ИмяФормы,
															СписокСохранения,
															СтруктураРеквизитовФормы,
															СтруктураМногоуровневыхРазделов)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		ПрефиксТД = "ПолеТабличногоДокумента";
		ДанныеМногоуровневыхРазделов = Новый Структура;
		
		// Данные вариантов автозаполнения.
		Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения") Тогда
			СписокСохранения.Удалить("ДанныеВариантовАвтоЗаполнения");
		КонецЕсли;
		
		// Титульный лист.
		ДанныеТит = СписокСохранения.ПоказателиОтчета[ПрефиксТД + "Титульный"];
		Для Каждого Показатель Из ДанныеТит Цикл
			ИмяПоказателя = Показатель.Ключ;
			Если ИмяПоказателя = "ИНН1_1" Тогда
				ДанныеТит.Вставить("ИНН", "");
				Для Ном = 1 По 12 Цикл
					ДанныеТит.ИНН = ДанныеТит.ИНН + СокрЛП(ДанныеТит["ИНН1_" + Ном]);
					ДанныеТит.Удалить("ИНН1_" + Ном);
				КонецЦикла;
				Если Лев(ДанныеТит.ИНН, 2) = "00" Тогда
					ДанныеТит.ИНН = Сред(ДанныеТит.ИНН, 3);
				КонецЕсли;
				ДанныеТит.ИНН = СтрЗаменить(ДанныеТит.ИНН, "-", "");
			ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
				ДанныеТит.Вставить("КПП", "");
				Для Ном = 1 По 9 Цикл
					ДанныеТит.КПП = ДанныеТит.КПП + СокрЛП(ДанныеТит["КПП1_" + Ном]);
					ДанныеТит.Удалить("КПП1_" + Ном);
				КонецЦикла;
				ДанныеТит.КПП = СтрЗаменить(ДанныеТит.КПП, "-", "");
			ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
				ДанныеТит.Вставить("НалоговыйОрган", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрган" + Ном]);
					ДанныеТит.Удалить("НалоговыйОрган" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
				ДанныеТит.Вставить("НомерКорректировки", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.НомерКорректировки = ДанныеТит.НомерКорректировки
					+ СтрЗаменить(СокрЛП(ДанныеТит["НомерКорректировки" + Ном]), "-", "");
					ДанныеТит.Удалить("НомерКорректировки" + Ном);
					Если НЕ ЗначениеЗаполнено(ДанныеТит.НомерКорректировки) Тогда
						ДанныеТит.НомерКорректировки = "0";
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Период1" Тогда
				ДанныеТит.Вставить("Период", "");
				Для Ном = 1 По 2 Цикл
					ДанныеТит.Период = ДанныеТит.Период + СокрЛП(ДанныеТит["Период" + Ном]);
					ДанныеТит.Удалить("Период" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
				ДанныеТит.Вставить("ОтчетГод", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.ОтчетГод = ДанныеТит.ОтчетГод + СокрЛП(ДанныеТит["ОтчетГод" + Ном]);
					ДанныеТит.Удалить("ОтчетГод" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
				ДанныеТит.Вставить("ПоМесту", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.ПоМесту = ДанныеТит.ПоМесту + СокрЛП(ДанныеТит["ПоМесту" + Ном]);
					ДанныеТит.Удалить("ПоМесту" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Прил1" Тогда
				ДанныеТит.Вставить("Прил", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.Прил = ДанныеТит.Прил + СокрЛП(ДанныеТит["Прил" + Ном]);
					ДанныеТит.Удалить("Прил" + Ном);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ДанныеТит.Вставить("ДатаПодписи", СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
		
		// Сохранение с последующим восстановлением номеров строк многоуровнего раздела.
		// (На случай выгрузки отчета, сохраненного в 2.0, без сохранения в 3.0.)
		СохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
		
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
											  СтруктураРеквизитовФормы,
											  СтруктураМногоуровневыхРазделов);
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = СохрНомераСтрокМногоуровнегоРаздела;
		
		// Раздел 1.
		ИмяРаздела = "Раздел1";
		ИмяГруппы1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
		ИмяГруппы2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 060-073.
		ИмяГруппы = ИмяГруппы1;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные 080-093.
		ИмяГруппы = ИмяГруппы2;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 1 к разделу 1.
		ИмяРаздела = "Раздел1Прил1";
		ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
		ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
		ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
		ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд = 0 Тогда
				СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки[0];
				СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки[0].Строки[0];
				СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки[1].Строки[0];
				СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки[2].Строки[0];
			Иначе
				СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки.Добавить();
				СтрокаПриложения1КРазделу1.Данные = Новый Структура;
				СтрокаПриложения1КРазделу1.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела11_12.Данные = Новый Структура;
				СтрокаПодраздела11_12.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела131.Данные = Новый Структура;
				ДеревоДопСтрок1 = Новый ДеревоЗначений;
				ДеревоДопСтрок1.Колонки.Добавить("Данные");
				ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела131.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела131.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
				
				СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела132.Данные = Новый Структура;
				ДеревоДопСтрок2 = Новый ДеревоЗначений;
				ДеревоДопСтрок2.Колонки.Добавить("Данные");
				ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела132.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела132.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			КонецЕсли;
			// Немногострочные данные приложения 1 к разделу 1(единственный показатель).
			СтрокаПриложения1КРазделу1.Данные.Вставить("П000110000101", СтарДанные["П000110000101"]);
			// Немногострочные данные подразделов 1.1, 1.2.
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, "П01111") ИЛИ СтрНачинаетсяС(Пок.Ключ, "П01112") Тогда
					СтрокаПодраздела11_12.Данные.Вставить(Пок.Ключ, Пок.Значение);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные подраздела 1.3.1.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные подраздела 1.3.2.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		// Приложение 1.1 к разделу 1.
		ИмяРаздела = "Раздел1Прил1_1";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы111М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Многострочные данные 001-050.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 2 к разделу 1.
		ИмяРаздела = "Раздел1Прил2";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы12М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 001-060.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 3 к разделу 1.
		ИмяРаздела = "Раздел1Прил3";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 4 к разделу 1.
		ИмяРаздела = "Раздел1Прил4";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 5 к разделу 1.
		ИмяРаздела = "Раздел1Прил5";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 5.1 к разделу 1.
		ИмяРаздела = "Раздел1Прил5_1";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы151М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Многострочные данные 001-060.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 6 к разделу 1.
		ИмяРаздела = "Раздел1Прил6";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 7 к разделу 1.
		ИмяРаздела = "Раздел1Прил7";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 8 к разделу 1.
		ИмяРаздела = "Раздел1Прил8";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 020-080.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 9 к разделу 1.
		ИмяРаздела = "Раздел1Прил9";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 020-130.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Раздел 2.
		ИмяРаздела = "Раздел2";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 010-090.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Раздел 3.
		ИмяРаздела = "Раздел3";
		ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы321М1;
		СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
		ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
		ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы322М1;
		СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
		ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд > 0 Тогда
				ДеревоРаздела.Строки.Добавить();
				ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
				ДеревоДопСтрок1 = Новый ДеревоЗначений;
				ДеревоДопСтрок1.Колонки.Добавить("Данные");
				ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоДопСтрок2 = Новый ДеревоЗначений;
				ДеревоДопСтрок2.Колонки.Добавить("Данные");
				ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			КонецЕсли;
			// Немногострочные данные.
			Для каждого Пок Из СтарДанные Цикл
				ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЦикла;
			// Многострочные данные 120-170.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные 180-210.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
		
		СписокСохранения.Удалить("ДанныеМногострочныхРазделов");
		СписокСохранения.Удалить("ДанныеМногостраничныхРазделов");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ПрефиксТД = "ПолеТабличногоДокумента";
		ДанныеМногоуровневыхРазделов = Новый Структура;
		
		// Данные вариантов автозаполнения.
		Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения") Тогда
			СписокСохранения.Удалить("ДанныеВариантовАвтоЗаполнения");
		КонецЕсли;
		
		// Титульный лист.
		ДанныеТит = СписокСохранения.ПоказателиОтчета[ПрефиксТД + "Титульный"];
		Для Каждого Показатель Из ДанныеТит Цикл
			ИмяПоказателя = Показатель.Ключ;
			Если ИмяПоказателя = "ИНН1_1" Тогда
				ДанныеТит.Вставить("ИНН", "");
				Для Ном = 1 По 12 Цикл
					ДанныеТит.ИНН = ДанныеТит.ИНН + СокрЛП(ДанныеТит["ИНН1_" + Ном]);
					ДанныеТит.Удалить("ИНН1_" + Ном);
				КонецЦикла;
				Если Лев(ДанныеТит.ИНН, 2) = "00" Тогда
					ДанныеТит.ИНН = Сред(ДанныеТит.ИНН, 3);
				КонецЕсли;
				ДанныеТит.ИНН = СтрЗаменить(ДанныеТит.ИНН, "-", "");
			ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
				ДанныеТит.Вставить("КПП", "");
				Для Ном = 1 По 9 Цикл
					ДанныеТит.КПП = ДанныеТит.КПП + СокрЛП(ДанныеТит["КПП1_" + Ном]);
					ДанныеТит.Удалить("КПП1_" + Ном);
				КонецЦикла;
				ДанныеТит.КПП = СтрЗаменить(ДанныеТит.КПП, "-", "");
			ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
				ДанныеТит.Вставить("НалоговыйОрган", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрган" + Ном]);
					ДанныеТит.Удалить("НалоговыйОрган" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
				ДанныеТит.Вставить("НомерКорректировки", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.НомерКорректировки = ДанныеТит.НомерКорректировки
					+ СтрЗаменить(СокрЛП(ДанныеТит["НомерКорректировки" + Ном]), "-", "");
					ДанныеТит.Удалить("НомерКорректировки" + Ном);
					Если НЕ ЗначениеЗаполнено(ДанныеТит.НомерКорректировки) Тогда
						ДанныеТит.НомерКорректировки = "0";
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Период1" Тогда
				ДанныеТит.Вставить("Период", "");
				Для Ном = 1 По 2 Цикл
					ДанныеТит.Период = ДанныеТит.Период + СокрЛП(ДанныеТит["Период" + Ном]);
					ДанныеТит.Удалить("Период" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
				ДанныеТит.Вставить("ОтчетГод", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.ОтчетГод = ДанныеТит.ОтчетГод + СокрЛП(ДанныеТит["ОтчетГод" + Ном]);
					ДанныеТит.Удалить("ОтчетГод" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
				ДанныеТит.Вставить("ПоМесту", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.ПоМесту = ДанныеТит.ПоМесту + СокрЛП(ДанныеТит["ПоМесту" + Ном]);
					ДанныеТит.Удалить("ПоМесту" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Прил1" Тогда
				ДанныеТит.Вставить("Прил", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.Прил = ДанныеТит.Прил + СокрЛП(ДанныеТит["Прил" + Ном]);
					ДанныеТит.Удалить("Прил" + Ном);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ДанныеТит.Вставить("ДатаПодписи", СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
		
		// Сохранение с последующим восстановлением номеров строк многоуровнего раздела.
		// (На случай выгрузки отчета, сохраненного в 2.0, без сохранения в 3.0.)
		СохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
		
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
											  СтруктураРеквизитовФормы,
											  СтруктураМногоуровневыхРазделов);
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = СохрНомераСтрокМногоуровнегоРаздела;
		
		// Раздел 1.
		ИмяРаздела = "Раздел1";
		ИмяГруппы1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
		ИмяГруппы2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 060-073.
		ИмяГруппы = ИмяГруппы1;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные 080-093.
		ИмяГруппы = ИмяГруппы2;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 1 к разделу 1.
		ИмяРаздела = "Раздел1Прил1";
		ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
		ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
		ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
		ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд = 0 Тогда
				СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки[0];
				СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки[0].Строки[0];
				СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки[1].Строки[0];
				СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки[2].Строки[0];
			Иначе
				СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки.Добавить();
				СтрокаПриложения1КРазделу1.Данные = Новый Структура;
				СтрокаПриложения1КРазделу1.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела11_12.Данные = Новый Структура;
				СтрокаПодраздела11_12.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела131.Данные = Новый Структура;
				ДеревоДопСтрок1 = Новый ДеревоЗначений;
				ДеревоДопСтрок1.Колонки.Добавить("Данные");
				ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела131.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела131.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
				
				СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела132.Данные = Новый Структура;
				ДеревоДопСтрок2 = Новый ДеревоЗначений;
				ДеревоДопСтрок2.Колонки.Добавить("Данные");
				ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела132.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела132.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			КонецЕсли;
			// Немногострочные данные приложения 1 к разделу 1(единственный показатель).
			СтрокаПриложения1КРазделу1.Данные.Вставить("П000110000101", СтарДанные["П000110000101"]);
			// Немногострочные данные подразделов 1.1, 1.2.
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, "П01111") ИЛИ СтрНачинаетсяС(Пок.Ключ, "П01112") Тогда
					СтрокаПодраздела11_12.Данные.Вставить(Пок.Ключ, Пок.Значение);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные подраздела 1.3.1.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные подраздела 1.3.2.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		// Приложение 1.1 к разделу 1.
		ИмяРаздела = "Раздел1Прил1_1";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы111М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Многострочные данные 001-050.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 2 к разделу 1.
		ИмяРаздела = "Раздел1Прил2";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы12М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 001-060.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 3 к разделу 1.
		ИмяРаздела = "Раздел1Прил3";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 4 к разделу 1.
		ИмяРаздела = "Раздел1Прил4";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 5 к разделу 1.
		ИмяРаздела = "Раздел1Прил5";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 6 к разделу 1.
		ИмяРаздела = "Раздел1Прил6";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 7 к разделу 1.
		ИмяРаздела = "Раздел1Прил7";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 8 к разделу 1.
		ИмяРаздела = "Раздел1Прил8";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 020-080.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 9 к разделу 1.
		ИмяРаздела = "Раздел1Прил9";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 020-130.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Раздел 2.
		ИмяРаздела = "Раздел2";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 010-090.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Раздел 3.
		ИмяРаздела = "Раздел3";
		ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы321М1;
		СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
		ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
		ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы322М1;
		СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
		ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд > 0 Тогда
				ДеревоРаздела.Строки.Добавить();
				ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
				ДеревоДопСтрок1 = Новый ДеревоЗначений;
				ДеревоДопСтрок1.Колонки.Добавить("Данные");
				ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоДопСтрок2 = Новый ДеревоЗначений;
				ДеревоДопСтрок2.Колонки.Добавить("Данные");
				ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			КонецЕсли;
			// Немногострочные данные.
			Для каждого Пок Из СтарДанные Цикл
				ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЦикла;
			// Многострочные данные 120-170.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные 180-210.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
		
		СписокСохранения.Удалить("ДанныеМногострочныхРазделов");
		СписокСохранения.Удалить("ДанныеМногостраничныхРазделов");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ПрефиксТД = "ПолеТабличногоДокумента";
		ДанныеМногоуровневыхРазделов = Новый Структура;
		
		// Данные вариантов автозаполнения.
		Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения") Тогда
			СписокСохранения.Удалить("ДанныеВариантовАвтоЗаполнения");
		КонецЕсли;
		
		// Титульный лист.
		ДанныеТит = СписокСохранения.ПоказателиОтчета[ПрефиксТД + "Титульный"];
		Для Каждого Показатель Из ДанныеТит Цикл
			ИмяПоказателя = Показатель.Ключ;
			Если ИмяПоказателя = "ИНН1_1" Тогда
				ДанныеТит.Вставить("ИНН", "");
				Для Ном = 1 По 12 Цикл
					ДанныеТит.ИНН = ДанныеТит.ИНН + СокрЛП(ДанныеТит["ИНН1_" + Ном]);
					ДанныеТит.Удалить("ИНН1_" + Ном);
				КонецЦикла;
				Если Лев(ДанныеТит.ИНН, 2) = "00" Тогда
					ДанныеТит.ИНН = Сред(ДанныеТит.ИНН, 3);
				КонецЕсли;
				ДанныеТит.ИНН = СтрЗаменить(ДанныеТит.ИНН, "-", "");
			ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
				ДанныеТит.Вставить("КПП", "");
				Для Ном = 1 По 9 Цикл
					ДанныеТит.КПП = ДанныеТит.КПП + СокрЛП(ДанныеТит["КПП1_" + Ном]);
					ДанныеТит.Удалить("КПП1_" + Ном);
				КонецЦикла;
				ДанныеТит.КПП = СтрЗаменить(ДанныеТит.КПП, "-", "");
			ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
				ДанныеТит.Вставить("НалоговыйОрган", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрган" + Ном]);
					ДанныеТит.Удалить("НалоговыйОрган" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
				ДанныеТит.Вставить("НомерКорректировки", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.НомерКорректировки = ДанныеТит.НомерКорректировки
					+ СтрЗаменить(СокрЛП(ДанныеТит["НомерКорректировки" + Ном]), "-", "");
					ДанныеТит.Удалить("НомерКорректировки" + Ном);
					Если НЕ ЗначениеЗаполнено(ДанныеТит.НомерКорректировки) Тогда
						ДанныеТит.НомерКорректировки = "0";
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Период1" Тогда
				ДанныеТит.Вставить("Период", "");
				Для Ном = 1 По 2 Цикл
					ДанныеТит.Период = ДанныеТит.Период + СокрЛП(ДанныеТит["Период" + Ном]);
					ДанныеТит.Удалить("Период" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
				ДанныеТит.Вставить("ОтчетГод", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.ОтчетГод = ДанныеТит.ОтчетГод + СокрЛП(ДанныеТит["ОтчетГод" + Ном]);
					ДанныеТит.Удалить("ОтчетГод" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
				ДанныеТит.Вставить("ПоМесту", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.ПоМесту = ДанныеТит.ПоМесту + СокрЛП(ДанныеТит["ПоМесту" + Ном]);
					ДанныеТит.Удалить("ПоМесту" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Прил1" Тогда
				ДанныеТит.Вставить("Прил", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.Прил = ДанныеТит.Прил + СокрЛП(ДанныеТит["Прил" + Ном]);
					ДанныеТит.Удалить("Прил" + Ном);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ДанныеТит.Вставить("ДатаПодписи", СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
		
		// Сохранение с последующим восстановлением номеров строк многоуровнего раздела.
		// (На случай выгрузки отчета, сохраненного в 2.0, без сохранения в 3.0.)
		СохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
		
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
											  СтруктураРеквизитовФормы,
											  СтруктураМногоуровневыхРазделов);
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = СохрНомераСтрокМногоуровнегоРаздела;
		
		// Раздел 1.
		ИмяРаздела = "Раздел1";
		ИмяГруппы1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
		ИмяГруппы2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 060-073.
		ИмяГруппы = ИмяГруппы1;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные 080-093.
		ИмяГруппы = ИмяГруппы2;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 1 к разделу 1.
		ИмяРаздела = "Раздел1Прил1";
		ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
		ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
		ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
		ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
		ИмяГруппы3    = СтруктураРеквизитовФормы.мИдГруппы1114М1;
		СтруктураМнЧ3 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы3];
		ИменаГраф3    = СтруктураМнЧ3.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд = 0 Тогда
				СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки[0];
				СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки[0].Строки[0];
				СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки[1].Строки[0];
				СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки[2].Строки[0];
				СтрокаПодраздела14 = СтрокаПриложения1КРазделу1.Строки[3].Строки[0];
			Иначе
				СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки.Добавить();
				СтрокаПриложения1КРазделу1.Данные = Новый Структура;
				СтрокаПриложения1КРазделу1.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела11_12.Данные = Новый Структура;
				СтрокаПодраздела11_12.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела131.Данные = Новый Структура;
				ДеревоДопСтрок1 = Новый ДеревоЗначений;
				ДеревоДопСтрок1.Колонки.Добавить("Данные");
				ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела131.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела131.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
				
				СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела132.Данные = Новый Структура;
				ДеревоДопСтрок2 = Новый ДеревоЗначений;
				ДеревоДопСтрок2.Колонки.Добавить("Данные");
				ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела132.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела132.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
				
				СтрокаПодраздела14 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
				СтрокаПодраздела14.Данные = Новый Структура;
				ДеревоДопСтрок3 = Новый ДеревоЗначений;
				ДеревоДопСтрок3.Колонки.Добавить("Данные");
				ДеревоДопСтрок3.Колонки.Добавить("ДанныеМногострочныхЧастей");
				СтрокаПодраздела14.ДанныеМногострочныхЧастей = Новый Структура;
				СтрокаПодраздела14.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы3, ДеревоДопСтрок3);
			КонецЕсли;
			// Немногострочные данные приложения 1 к разделу 1(единственный показатель).
			СтрокаПриложения1КРазделу1.Данные.Вставить("П000110000101", СтарДанные["П000110000101"]);
			// Немногострочные данные подразделов 1.1, 1.2.
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, "П01111") ИЛИ СтрНачинаетсяС(Пок.Ключ, "П01112") Тогда
					СтрокаПодраздела11_12.Данные.Вставить(Пок.Ключ, Пок.Значение);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные подраздела 1.3.1.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные подраздела 1.3.2.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные подраздела 1.4.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф3[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = СтрокаПодраздела14.ДанныеМногострочныхЧастей[ИмяГруппы3].Строки[0];
				Иначе
					СтрокаМнЧ = СтрокаПодраздела14.ДанныеМногострочныхЧастей[ИмяГруппы3].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф3 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		// Приложение 2 к разделу 1.
		ИмяРаздела = "Раздел1Прил2";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 3 к разделу 1.
		ИмяРаздела = "Раздел1Прил3";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 4 к разделу 1.
		ИмяРаздела = "Раздел1Прил4";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложения 5,6 к разделу 1.
		ИмяРаздела = "Раздел1Прил5_6";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 7 к разделу 1.
		ИмяРаздела = "Раздел1Прил7";
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		ДеревоРаздела.Строки[0].Данные = СтарДанные;
		Если Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) <> 12 Тогда
			ДеревоРаздела.Строки[0].Данные.Вставить("П000170001002", 0);
			ДеревоРаздела.Строки[0].Данные.Вставить("П000170002002", 0);
			ДеревоРаздела.Строки[0].Данные.Вставить("П000170003002", 0);
			ДеревоРаздела.Строки[0].Данные.Вставить("П000170004002", 0);
			ДеревоРаздела.Строки[0].Данные.Вставить("П000170005002", 0);
		КонецЕсли;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 8 к разделу 1.
		ИмяРаздела = "Раздел1Прил8";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 020-060.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 9 к разделу 1.
		ИмяРаздела = "Раздел1Прил9";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 020-080.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Приложение 10 к разделу 1.
		ИмяРаздела = "Раздел1Прил10";
		ИмяГруппы    = СтруктураРеквизитовФормы.мИдГруппы110М1;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф    = СтруктураМнЧ.ИменаГраф;
		ИмяПодчГруппы    = СтруктураРеквизитовФормы.мИдГруппы110М2;
		СтруктураПодчМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяПодчГруппы];
		ИменаПодчГраф    = СтруктураПодчМнЧ.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			// Немногострочные данные.
			Если Инд = 0 Тогда
				Для каждого Пок Из СтарДанные Цикл
					Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы)
						ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяПодчГруппы) Тогда
						Продолжить;
					КонецЕсли;
					ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
				КонецЦикла;
			КонецЕсли;
			// Многострочные данные 020-100.
			Если Инд = 0 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				Если ИмяГрафы = "П00110М102001" Тогда
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы,
					СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтарДанные[ИмяГрафы], 5, "0"));
				Иначе
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы]);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные 110-140, подчиненные
			// строке многострочных данных 020-100.
			НомСтр = 1;
			_НомСтр = "_1";
			ДеревоПодчСтрок = Новый ДеревоЗначений;
			ДеревоПодчСтрок.Колонки.Добавить("Данные");
			ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
			Пока СтарДанные.Свойство(ИменаПодчГраф[0] + _НомСтр) Цикл
				СтрокаПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппы].Строки.Добавить();
				СтрокаПодчМнЧ.Данные = Новый Структура;
				СтрокаПодчМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяПодчГрафы Из ИменаПодчГраф Цикл
					Если ИмяПодчГрафы = "П00110М211001" Тогда
						СтрокаПодчМнЧ.Данные.Вставить(ИмяПодчГрафы,
						СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтарДанные[ИмяПодчГрафы + _НомСтр], 5, "0"));
					Иначе
						СтрокаПодчМнЧ.Данные.Вставить(ИмяПодчГрафы, СтарДанные[ИмяПодчГрафы + _НомСтр]);
					КонецЕсли;
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		// Раздел 2.
		ИмяРаздела = "Раздел2";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 010-090.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Раздел 3.
		ИмяРаздела = "Раздел3";
		ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы321М1;
		СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
		ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
		ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы322М1;
		СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
		ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд > 0 Тогда
				ДеревоРаздела.Строки.Добавить();
				ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
				ДеревоДопСтрок1 = Новый ДеревоЗначений;
				ДеревоДопСтрок1.Колонки.Добавить("Данные");
				ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоДопСтрок2 = Новый ДеревоЗначений;
				ДеревоДопСтрок2.Колонки.Добавить("Данные");
				ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			КонецЕсли;
			// Немногострочные данные.
			Для каждого Пок Из СтарДанные Цикл
				Если Пок.Ключ = "П000030002001" ИЛИ Пок.Ключ = "П000030003001" ИЛИ Пок.Ключ = "П000030005001"
					ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
					Продолжить;
				КонецЕсли;
				ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЦикла;
			// Многострочные данные 190-240.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
			// Многострочные данные 260-290.
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
		
		СписокСохранения.Удалить("ДанныеМногострочныхРазделов");
		СписокСохранения.Удалить("ДанныеМногостраничныхРазделов");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИдентификаторФайлаВыгрузки(ИмяФормы, ПараметрыВыгрузки, ПрефиксИмени)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
			ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг) + СокрЛП(ПараметрыВыгрузки.КПП);
		Иначе
			ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг);
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
			ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг) + СокрЛП(ПараметрыВыгрузки.КПП);
		ИначеЕсли ПараметрыВыгрузки.ЭтоФизЛицоБезИНН Тогда
			ИННКПП = "000000000000";
		Иначе
			// Случай ПараметрыВыгрузки.ЭтоПБОЮЛ ИЛИ ПараметрыВыгрузки.ЭтоФизЛицоСИНН.
			ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг);
		КонецЕсли;
		
	КонецЕсли;
	
	ИдентификаторФайла = ПрефиксИмени
		+ "_" + ?(ЗначениеЗаполнено(ПараметрыВыгрузки.КодИФНСПосредника),
				ПараметрыВыгрузки.КодИФНСПосредника, ПараметрыВыгрузки.КодНО)
		+ "_" + ПараметрыВыгрузки.КодНО
		+ "_" + ИННКПП
		+ "_" + Формат(ТекущаяДатаСеанса(), "ДФ=ггггММдд")
		+ "_" + Строка(Новый УникальныйИдентификатор);
	
	Возврат ИдентификаторФайла;
	
КонецФункции

Функция ЗаполненРаздел1(ИмяФормы,
						ДанныеМногоуровневыхРазделов,
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов,
						ДопПараметры)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		Возврат ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1"],
		"Раздел1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил1"],
		"Раздел1Прил1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил1_1"],
		"Раздел1Прил1_1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил2"],
		"Раздел1Прил2", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил3"],
		"Раздел1Прил3", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил4"],
		"Раздел1Прил4", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		
		ИЛИ ?(Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 2020,
		ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил5"],
		"Раздел1Прил5", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов),
		ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил5_1"],
		"Раздел1Прил5_1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов))
		
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил6"],
		"Раздел1Прил6", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил7"],
		"Раздел1Прил7", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил8"],
		"Раздел1Прил8", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил9"],
		"Раздел1Прил9", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		Возврат ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1"],
		"Раздел1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил1"],
		"Раздел1Прил1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил1_1"],
		"Раздел1Прил1_1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил2"],
		"Раздел1Прил2", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил3"],
		"Раздел1Прил3", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил4"],
		"Раздел1Прил4", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил5"],
		"Раздел1Прил5", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил6"],
		"Раздел1Прил6", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил7"],
		"Раздел1Прил7", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил8"],
		"Раздел1Прил8", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил9"],
		"Раздел1Прил9", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Возврат ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1"],
		"Раздел1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил1"],
		"Раздел1Прил1", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил2"],
		"Раздел1Прил2", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил3"],
		"Раздел1Прил3", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил4"],
		"Раздел1Прил4", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил5_6"],
		"Раздел1Прил5_6", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил7"],
		"Раздел1Прил7", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил8"],
		"Раздел1Прил8", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил9"],
		"Раздел1Прил9", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов)
		ИЛИ ЗаполненРаздел(ИмяФормы, ДанныеМногоуровневыхРазделов["Раздел1Прил10"],
		"Раздел1Прил10", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
		
	КонецЕсли;
	
КонецФункции

Процедура ОбработатьУсловныеЭлементы(ИмяФормы,
									 ДанныеОтчета,
									 Знач ПараметрыВыгрузки,
									 Узел,
									 РезультатВыгрузки)
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если Узел.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
			Возврат;
		КонецЕсли;
		РегламентированнаяОтчетность.ДополнитьСтруктуруПараметров(ДанныеОтчета, ПараметрыВыгрузки, Узел);
	КонецЕсли;
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ РегламентированнаяОтчетность.УсловиеВыполнено(РезультатВыгрузки, ПараметрыВыгрузки, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(ИмяФормы,
								   ДанныеОтчета,
								   ПараметрыВыгрузки,
								   ТекСтр,
								   РезультатВыгрузки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДаннымиУзел(ИмяФормы,
							   СтруктураРеквизитовФормы,
							   СтруктураМногоуровневыхРазделов,
							   ПараметрыВыгрузки,
							   Узел,
							   НомерСтроки = Неопределено)
	
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда // учет обоих вариантов: кириллицы и латиницы
			Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки,
																			 "ИмяКлючевогоУзлаСодержательнойЧасти")
			   И Стр.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
				ЗаполнитьСодержательнуюЧасть(ИмяФормы,
											 СтруктураРеквизитовФормы,
											 СтруктураМногоуровневыхРазделов,
											 Стр,
											 ПараметрыВыгрузки);
			ИначеЕсли Стр.Многострочность Тогда
				НомСтр = 1;
				ПодчиненныйЭлемент = ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(ИмяФормы, Стр);
				КлючПодчиненногоЭлемента = ПодчиненныйЭлемент.Ключ;
				Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки,
						КлючПодчиненногоЭлемента + "_" + Формат(НомСтр, "ЧГ=")) Цикл
					УзелСоответствующийСтроке = СкопироватьУзел(ИмяФормы, Узел, Стр);
					ЗаполнитьДаннымиУзел(ИмяФормы,
										 СтруктураРеквизитовФормы,
										 СтруктураМногоуровневыхРазделов,
										 ПараметрыВыгрузки,
										 УзелСоответствующийСтроке,
										 НомСтр);
					НомСтр = НомСтр + 1;
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзел(ИмяФормы,
									 СтруктураРеквизитовФормы,
									 СтруктураМногоуровневыхРазделов,
									 ПараметрыВыгрузки,
									 Стр,
									 НомерСтроки);
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
					ПолныйКодПоказателя = Стр.Ключ + ?(ЗначениеЗаполнено(НомерСтроки), "_" + Формат(НомерСтроки, "ЧГ="), "");
					ЗначениеПоказателя = Неопределено;
					Если ПараметрыВыгрузки.Свойство(ПолныйКодПоказателя, ЗначениеПоказателя) Тогда
						ВывестиПоказательВXML(ИмяФормы,Стр, ЗначениеПоказателя);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Стр, "");
					КонецЕсли;
				Иначе
					Стр.Значение = "";
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				ВывестиПоказательВXML(ИмяФормы, Стр, ПараметрыВыгрузки[Сред(Стр.ЗначениеПоУмолчанию, 2)]);
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтсечьНезаполненныеНеобязательныеУзлы(ИмяФормы, Узел, ПараметрыВыгрузки)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(ИмяФормы, Стр, ПараметрыВыгрузки);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если (СтрНайти(Узел.Обязательность, "Н") <> 0
		 ИЛИ СтрНайти(Узел.Обязательность, "H") <> 0)
		   И УзелПуст(ИмяФормы, Узел, ПараметрыВыгрузки) Тогда // учтем оба варианта: кириллицу и латиницу
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		ИначеЕсли (СтрНайти(Узел.Обязательность, "М") <> 0 
			  ИЛИ СтрНайти(Узел.Обязательность, "M") <> 0) // учтем оба варианта: кириллицу и латиницу
				И УзелПуст(ИмяФормы, Узел, ПараметрыВыгрузки)
				И ?(СтрНайти(Узел.Обязательность, "О") <> 0
			  ИЛИ СтрНайти(Узел.Обязательность, "O") <> 0,
			  	  РегламентированнаяОтчетность.ИмеютсяАналогичныеСоседниеУзлыКлюч(Узел), Истина) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСодержательнуюЧасть(ИмяФормы,
									   СтруктураРеквизитовФормы,
									   СтруктураМногоуровневыхРазделов,
									   УзелРодитель,
									   ПараметрыВыгрузки)
		
	ДанныеМногоуровневыхРазделов = Новый Структура;
	
	СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы,
											СтруктураРеквизитовФормы,
											СтруктураМногоуровневыхРазделов);
	Для Каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		Если Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 И (ПараметрыВыгрузки.ПоМесту = "335"
			ИЛИ ПараметрыВыгрузки.ПоМесту = "222" ИЛИ ПараметрыВыгрузки.ФормРеорг = "9") Тогда
			
			// Удаление атрибута СрЧисл из дерева выгрузки по условию.
			СвНП = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель.Родитель, "СвНП");
			СрЧисл = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвНП, "СрЧисл");
			РегламентированнаяОтчетность.УдалитьУзел(СрЧисл);
			
		КонецЕсли;
		
		ОбязПлатСВ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ");
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("НеПроверятьЗаполнениеСтрок001_010_020_040_100Раздела1");
		ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
		
		Если (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") И НЕ ЗаполненРаздел1(ИмяФормы,
			ДанныеМногоуровневыхРазделов, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
			
			// Удаление Раздела 1 вместе с его приложениями из дерева выгрузки по условию.
			РегламентированнаяОтчетность.УдалитьУзел(ОбязПлатСВ);
			
		Иначе
			
			// Переопределение обязательности Раздела 1 в дереве выгрузки.
			Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") Тогда
				ОбязПлатСВ.Обязательность = "О";
			КонецЕсли;
			
			// Раздел 1 (единственная страница, имеющая 2 многострочные части).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1"].Строки[0];
			
			ТипПлательщика = СокрЛП(Ветка.Данные["П000010000101"]);
			
			// Немногострочные данные 001-053.
			Для каждого Эл Из ОбязПлатСВ.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОМС"));
			// Многострочная часть 060-073.
			УплПерОПСДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПСДоп");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерОПСДоп));
			КонецЦикла;
			// Многострочная часть 080-093.
			УплПерДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерДСО");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерДСО));
			КонецЦикла;
			
			Если Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
				
				// Немногострочные данные 100-113.
				УплПревОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПревОСС");
				Для каждого Эл Из УплПревОСС.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
					КонецЕсли;
				КонецЦикла;
				УплПерОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "УплПерОСС");
				УплПерОСС.Обязательность = "О";
				Для каждого Эл Из УплПерОСС.Строки Цикл
					Эл.Обязательность = "О";
					Если Эл.Код = "СумСВУплПер" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011001"]);
					ИначеЕсли Эл.Код = "СумСВУпл1М" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011101"]);
					ИначеЕсли Эл.Код = "СумСВУпл2М" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011201"]);
					ИначеЕсли Эл.Код = "СумСВУпл3М" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011301"]);
					КонецЕсли;
				КонецЦикла;
				
				// Немногострочные данные 120-123 не выгружаются.
				РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "ПревРасхОСС"));
				
			Иначе
				
				// Немногострочные данные 100-123.
				УплПревОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПревОСС");
				Для каждого Эл Из УплПревОСС.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
					КонецЕсли;
				КонецЦикла;
				УплПерОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "УплПерОСС");
				Для каждого Эл Из УплПерОСС.Строки Цикл
					Если Эл.Код = "СумСВУплПер" Тогда
						Если Ветка.Данные["П000010011001"] = 0 И Ветка.Данные["П000010012001"] = 0 Тогда
							УплПерОСС.Обязательность = "О";
							Эл.Обязательность = "О";
							ВывестиПоказательВXML(ИмяФормы, Эл, 0);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011001"]);
						КонецЕсли;
					ИначеЕсли Эл.Код = "СумСВУпл1М" Тогда
						Если Ветка.Данные["П000010011101"] = 0 И Ветка.Данные["П000010012101"] = 0 Тогда
							УплПерОСС.Обязательность = "О";
							Эл.Обязательность = "О";
							ВывестиПоказательВXML(ИмяФормы, Эл, 0);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011101"]);
						КонецЕсли;
					ИначеЕсли Эл.Код = "СумСВУпл2М" Тогда
						Если Ветка.Данные["П000010011201"] = 0 И Ветка.Данные["П000010012201"] = 0 Тогда
							УплПерОСС.Обязательность = "О";
							Эл.Обязательность = "О";
							ВывестиПоказательВXML(ИмяФормы, Эл, 0);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011201"]);
						КонецЕсли;
					ИначеЕсли Эл.Код = "СумСВУпл3М" Тогда
						Если Ветка.Данные["П000010011301"] = 0 И Ветка.Данные["П000010012301"] = 0 Тогда
							УплПерОСС.Обязательность = "О";
							Эл.Обязательность = "О";
							ВывестиПоказательВXML(ИмяФормы, Эл, 0);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011301"]);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "ПревРасхОСС"));
				
			КонецЕсли;
			
			// Приложение 1 к Разделу 1 (иерархический раздел).
			ДанныеРазд = ДанныеМногоуровневыхРазделов["Раздел1Прил1"];
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКодаТарифаПлательщика");
			
			Если ТипПлательщика = "2" И НЕ ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел1Прил1",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				// Особая обработка: Приложение 1 к разделу 1 не выгружается.
				
			Иначе
				
				РасчСВ_ОПС_ОМС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОПС_ОМС");
				Для каждого Ветка Из ДанныеРазд.Строки Цикл
					ЭкзРасчСВ_ОПС_ОМС = СкопироватьУзел(ИмяФормы, ОбязПлатСВ, РасчСВ_ОПС_ОМС);
					Для каждого Эл Из ЭкзРасчСВ_ОПС_ОМС.Строки Цикл
						Если Эл.Строки.Количество() = 0 Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
						КонецЕсли;
					КонецЦикла;
					
					ВеткаРазд1Пр1Подр11_12 = Ветка.Строки[0].Строки[0];
					ВеткаРазд1Пр1Подр131   = Ветка.Строки[1].Строки[0];
					ВеткаРазд1Пр1Подр132   = Ветка.Строки[2].Строки[0];
					
					// Подразделы 1.1 и 1.2 (единственная страница, нет многострочной части).
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					ВеткаРазд1Пр1Подр11_12.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС"));
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					ВеткаРазд1Пр1Подр11_12.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОМС"));
					
					РасчСВ_ОПС428 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС428");
					
					// Подраздел 1.3.1 (единственная страница, имеющая 1 многострочную часть).
					РасчСВ_428_1_2 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.1-2");
					ДанныеМнЧ131 = ВеткаРазд1Пр1Подр131.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
					Для каждого СтрокаМнЧ131 Из ДанныеМнЧ131.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ131.Данные, СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_1_2));
					КонецЦикла;
					
					// Подраздел 1.3.2 (единственная страница, имеющая 1 многострочную часть).
					РасчСВ_428_3 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.3");
					ДанныеМнЧ132 = ВеткаРазд1Пр1Подр132.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
					Для каждого СтрокаМнЧ132 Из ДанныеМнЧ132.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ132.Данные, СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_3));
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
			// Приложение 1.1 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_ДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ДСО");
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил1_1"].Строки[0];
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы111М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ОбязПлатСВ, РасчСВ_ДСО));
			КонецЦикла;
			
			// Приложение 2 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			ДанныеРазд = ДанныеМногоуровневыхРазделов["Раздел1Прил2"];
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКодаТарифаПлательщикаИПризнакаВыплат");
			ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
			
			Если ТипПлательщика = "2" И НЕ ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел1Прил2",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				// Особая обработка: Приложение 2 к разделу 1 не выгружается.
				
			Иначе
				
				ДопПараметры = Новый Структура;
				ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
				
				Если ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел1Прил2", СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
					
					Ветка = ДанныеРазд.Строки[0];
					РасчСВ_ОСС_ВНМ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОСС.ВНМ");
					// Многострочные данные.
					РасчСВ_ОСС_ВНМКод = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "РасчСВ_ОСС.ВНМКод");
					ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы12М1];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, РасчСВ_ОСС_ВНМ, РасчСВ_ОСС_ВНМКод));
					КонецЦикла;
					// Немногострочные данные.
					
					Если Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
						
						// Немногострочные данные строки 070 не выгружаются.
						РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "ПроизвРасхСО"));
						
					Иначе
						
						ПроизвРасхСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "ПроизвРасхСО");
						ПроизвРасхСО.Обязательность = "О";
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						Ветка.Данные, ПроизвРасхСО);
						
					КонецЕсли;
					
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "ВозмРасхСО"));
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "УплСВПрев"));
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Год(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) >= 2021 Тогда
				
				// Приложение 3 к Разделу 1 (единственная страница) не выгружается.
				РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасхОССЗак"));
				
				// Приложение 4 к Разделу 1 (единственная страница) не выгружается.
				РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ВыплФинФБ"));
				
				// Приложение 5 к Разделу 1 (единственная страница) не выгружается.
				РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3.1.427"));
				
				// Приложение 5.1 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
				Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил5_1"].Строки[0];
				ПравТариф3_18_1_427 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3_18.1.427");
				ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы151М1];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ОбязПлатСВ, ПравТариф3_18_1_427));
				КонецЦикла;
				
			Иначе
				
				// Приложение 3 к Разделу 1 (единственная страница).
				Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил3"].Строки[0];
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасхОССЗак"));
				
				// Приложение 4 к Разделу 1 (единственная страница).
				Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил4"].Строки[0];
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ВыплФинФБ"));
				
				// Приложение 5 к Разделу 1 (единственная страница).
				Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил5"].Строки[0];
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3.1.427"));
				
				// Приложение 5.1 к Разделу 1 (единственная страница, имеющая 1 многострочную часть) не выгружается.
				РегламентированнаяОтчетность.УдалитьУзел(ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3_18.1.427"));
				
			КонецЕсли;
			
			// Приложение 6 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил6"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф7.1.427"));
			
			// Приложение 7 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил7"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф15.1.427"));
			
			// Приложение 8 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил8"].Строки[0];
			СвПримТариф2_2_425 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф2.2.425");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "ВыплатИт"));
			// Многострочные данные.
			СвИноГражд = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "СвИноГражд");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, СвПримТариф2_2_425, СвИноГражд));
			КонецЦикла;
			
			// Приложение 9 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил9"].Строки[0];
			СвПримТариф1_3_422 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф1.3.422");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "ВыплатИт"));
			// Многострочные данные.
			СведОбуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "СведОбуч");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЭкзСведОбуч = СкопироватьУзел(ИмяФормы, СвПримТариф1_3_422, СведОбуч);
				Для каждого Эл Из ЭкзСведОбуч.Строки Цикл
					Если Эл.Код = "УникНомер" Тогда
						// Генерирование "уникальных номеров".
						ВывестиПоказательВXML(ИмяФормы, Эл, Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ="));
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзСведОбуч, Эл.Код));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		// Раздел 2 (единственная страница, имеющая 1 многострочную часть) выгружается по условию.
		Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
			Ветка = ДанныеМногоуровневыхРазделов["Раздел2"].Строки[0];
			ОбязПлатСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ_КФХ");
			// Переопределение обязательности выгрузки Раздела 2.
			ОбязПлатСВ_КФХ.Обязательность = "О";
			// Немногострочные данные.
			Для каждого Эл Из ОбязПлатСВ_КФХ.Строки Цикл
				Если Эл.Код = "ОКТМО" Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОМС"));
			// Многострочные данные (Приложение 1 к Разделу 2).
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
			РасчСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "РасчСВ_КФХ");
			СведЧлКФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_КФХ, "СведЧлКФХ");
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЭкзСведЧлКФХ = СкопироватьУзел(ИмяФормы, РасчСВ_КФХ, СведЧлКФХ);
				Для каждого Эл Из ЭкзСведЧлКФХ.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						Если Эл.Код = "СерНомДок" Тогда
							ВывестиПоказательВXML(
							ИмяФормы, Эл, СтрокаМнЧ.Данные["П00021М106701"] + " " + СтрокаМнЧ.Данные["П00021М106702"]);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, СтрокаМнЧ.Данные[Эл.Ключ]);
						КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, СтрокаМнЧ.Данные, Эл);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		// Раздел 3 (многостраничный раздел, на каждой странице есть 2 многострочные части).
		ДанныеРазд = ДанныеМногоуровневыхРазделов["Раздел3"];
		Если ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел3", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
			
			ПерсСвСтрахЛиц = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ПерсСвСтрахЛиц");
			
			Для каждого Ветка Из ДанныеРазд.Строки Цикл
				
				ПризнакАннулирования = СокрЛП(Ветка.Данные["П000030001001"]);
				
				ЭкзПерсСвСтрахЛиц = СкопироватьУзел(ИмяФормы, УзелРодитель, ПерсСвСтрахЛиц, УзелРодитель.Строки.Количество() - 1);
				
				// Немногострочные данные.
				Для каждого Эл Из ЭкзПерсСвСтрахЛиц.Строки Цикл
					Если Эл.Код = "ПрАннулир" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, ПризнакАннулирования);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				ДанФЛПолуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "ДанФЛПолуч");
				Для каждого Эл Из ДанФЛПолуч.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						Если Эл.Код = "СерНомДок" Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000310011001"] + " " + Ветка.Данные["П000310011002"]);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
						КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, Ветка.Данные, Эл);
					КонецЕсли;
				КонецЦикла;
				
				// Многострочные данные выгружаются по условию.
				Если ПризнакАннулирования <> "1" Тогда
					СвВыплСВОПС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "СвВыплСВОПС");
					// Подраздел 3.2.1.
					ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
					СвВыпл = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "СвВыпл");
					СвВыплМК = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыпл, "СвВыплМК");
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, СвВыпл, СвВыплМК, СвВыпл.Строки.Количество() - 1));
					КонецЦикла;
					// Подраздел 3.2.2.
					ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
					ВыплСВДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "ВыплСВДоп");
					ВыплСВДопМТ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ВыплСВДоп, "ВыплСВДопМТ");
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ВыплСВДоп, ВыплСВДопМТ, ВыплСВДоп.Строки.Количество() - 1));
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ОбязПлатСВ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ");
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("НеПроверятьЗаполнениеСтрок001_010_020_040_100Раздела1");
		ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
		
		Если (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") И НЕ ЗаполненРаздел1(ИмяФормы,
			ДанныеМногоуровневыхРазделов, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
			
			// Удаление Раздела 1 вместе с его приложениями из дерева выгрузки по условию.
			РегламентированнаяОтчетность.УдалитьУзел(ОбязПлатСВ);
			
		Иначе
			
			// Переопределение обязательности Раздела 1 в дереве выгрузки.
			Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") Тогда
				ОбязПлатСВ.Обязательность = "О";
			КонецЕсли;
			
			// Раздел 1 (единственная страница, имеющая 2 многострочные части).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1"].Строки[0];
			
			ТипПлательщика = СокрЛП(Ветка.Данные["П000010000101"]);
			
			// Немногострочные данные 001-053.
			Для каждого Эл Из ОбязПлатСВ.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОМС"));
			// Многострочная часть 060-073.
			УплПерОПСДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПСДоп");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерОПСДоп));
			КонецЦикла;
			// Многострочная часть 080-093.
			УплПерДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерДСО");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерДСО));
			КонецЦикла;
			// Немногострочные данные 100-123.
			УплПревОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПревОСС");
			Для каждого Эл Из УплПревОСС.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			УплПерОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "УплПерОСС");
			Для каждого Эл Из УплПерОСС.Строки Цикл
				Если Эл.Код = "СумСВУплПер" Тогда
					Если Ветка.Данные["П000010011001"] = 0 И Ветка.Данные["П000010012001"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011001"]);
					КонецЕсли;
				ИначеЕсли Эл.Код = "СумСВУпл1М" Тогда
					Если Ветка.Данные["П000010011101"] = 0 И Ветка.Данные["П000010012101"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011101"]);
					КонецЕсли;
				ИначеЕсли Эл.Код = "СумСВУпл2М" Тогда
					Если Ветка.Данные["П000010011201"] = 0 И Ветка.Данные["П000010012201"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011201"]);
					КонецЕсли;
				ИначеЕсли Эл.Код = "СумСВУпл3М" Тогда
					Если Ветка.Данные["П000010011301"] = 0 И Ветка.Данные["П000010012301"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000010011301"]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "ПревРасхОСС"));
			
			// Приложение 1 к Разделу 1 (иерархический раздел).
			ДанныеРазд = ДанныеМногоуровневыхРазделов["Раздел1Прил1"];
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКодаТарифаПлательщика");
			
			Если ТипПлательщика = "2" И НЕ ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел1Прил1",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				// Особая обработка: Приложение 1 к разделу 1 не выгружается.
				
			Иначе
				
				РасчСВ_ОПС_ОМС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОПС_ОМС");
				Для каждого Ветка Из ДанныеРазд.Строки Цикл
					ЭкзРасчСВ_ОПС_ОМС = СкопироватьУзел(ИмяФормы, ОбязПлатСВ, РасчСВ_ОПС_ОМС);
					Для каждого Эл Из ЭкзРасчСВ_ОПС_ОМС.Строки Цикл
						Если Эл.Строки.Количество() = 0 Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
						КонецЕсли;
					КонецЦикла;
					
					ВеткаРазд1Пр1Подр11_12 = Ветка.Строки[0].Строки[0];
					ВеткаРазд1Пр1Подр131   = Ветка.Строки[1].Строки[0];
					ВеткаРазд1Пр1Подр132   = Ветка.Строки[2].Строки[0];
					
					// Подразделы 1.1 и 1.2 (единственная страница, нет многострочной части).
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					ВеткаРазд1Пр1Подр11_12.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС"));
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					ВеткаРазд1Пр1Подр11_12.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОМС"));
					
					РасчСВ_ОПС428 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС428");
					
					// Подраздел 1.3.1 (единственная страница, имеющая 1 многострочную часть).
					РасчСВ_428_1_2 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.1-2");
					ДанныеМнЧ131 = ВеткаРазд1Пр1Подр131.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
					Для каждого СтрокаМнЧ131 Из ДанныеМнЧ131.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ131.Данные, СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_1_2));
					КонецЦикла;
					
					// Подраздел 1.3.2 (единственная страница, имеющая 1 многострочную часть).
					РасчСВ_428_3 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.3");
					ДанныеМнЧ132 = ВеткаРазд1Пр1Подр132.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
					Для каждого СтрокаМнЧ132 Из ДанныеМнЧ132.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ132.Данные, СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_3));
					КонецЦикла;
					
					// Особая обработка.
					// Приложение 1.1 к Разделу 1 (единственная страница, имеющая 1 многострочную часть)
					// выгружается в составе первой страницы Приложения 1 к Разделу 1.
					Если ДанныеРазд.Строки.Индекс(Ветка) = 0 Тогда
						
						ВеткаРазд1Пр11 = ДанныеМногоуровневыхРазделов["Раздел1Прил1_1"].Строки[0];
						РасчСВ_ДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ДСО");
						ДанныеМнЧ = ВеткаРазд1Пр11.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы111М1];
						Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
							ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
							СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, РасчСВ_ДСО));
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			// Приложение 2 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			ДанныеРазд = ДанныеМногоуровневыхРазделов["Раздел1Прил2"];
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("НеПроверятьЗаполнениеКодаТарифаПлательщикаИПризнакаВыплат");
			ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
			
			Если ТипПлательщика = "2" И НЕ ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел1Прил2",
				СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
				
				// Особая обработка: Приложение 2 к разделу 1 не выгружается.
				
			Иначе
				
				ДопПараметры = Новый Структура;
				ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
				
				Если ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел1Прил2", СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов, ДопПараметры) Тогда
					
					Ветка = ДанныеРазд.Строки[0];
					РасчСВ_ОСС_ВНМ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОСС.ВНМ");
					// Многострочные данные.
					РасчСВ_ОСС_ВНМКод = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "РасчСВ_ОСС.ВНМКод");
					ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы12М1];
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, РасчСВ_ОСС_ВНМ, РасчСВ_ОСС_ВНМКод));
					КонецЦикла;
					// Немногострочные данные.
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "ПроизвРасхСО"));
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "ВозмРасхСО"));
					ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
					Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОСС_ВНМ, "УплСВПрев"));
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Приложение 3 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил3"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасхОССЗак"));
			
			// Приложение 4 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил4"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ВыплФинФБ"));
			
			// Приложение 5 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил5"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3.1.427"));
			
			// Приложение 6 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил6"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф7.1.427"));
			
			// Приложение 7 к Разделу 1 (единственная страница).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил7"].Строки[0];
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф15.1.427"));
			
			// Приложение 8 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил8"].Строки[0];
			СвПримТариф2_2_425 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф2.2.425");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "ВыплатИт"));
			// Многострочные данные.
			СвИноГражд = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "СвИноГражд");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, СвПримТариф2_2_425, СвИноГражд));
			КонецЦикла;
			
			// Приложение 9 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			Ветка = ДанныеМногоуровневыхРазделов["Раздел1Прил9"].Строки[0];
			СвПримТариф1_3_422 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф1.3.422");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "ВыплатИт"));
			// Многострочные данные.
			СведОбуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "СведОбуч");
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЭкзСведОбуч = СкопироватьУзел(ИмяФормы, СвПримТариф1_3_422, СведОбуч);
				Для каждого Эл Из ЭкзСведОбуч.Строки Цикл
					Если Эл.Код = "УникНомер" Тогда
						// Генерирование "уникальных номеров".
						ВывестиПоказательВXML(ИмяФормы, Эл, Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ="));
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзСведОбуч, Эл.Код));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		// Раздел 2 (единственная страница, имеющая 1 многострочную часть) выгружается по условию.
		Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
			Ветка = ДанныеМногоуровневыхРазделов["Раздел2"].Строки[0];
			ОбязПлатСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ_КФХ");
			// Переопределение обязательности выгрузки Раздела 2.
			ОбязПлатСВ_КФХ.Обязательность = "О";
			// Немногострочные данные.
			Для каждого Эл Из ОбязПлатСВ_КФХ.Строки Цикл
				Если Эл.Код = "ОКТМО" Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
			Ветка.Данные, ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОМС"));
			// Многострочные данные (Приложение 1 к Разделу 2).
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
			РасчСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "РасчСВ_КФХ");
			СведЧлКФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_КФХ, "СведЧлКФХ");
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				ЭкзСведЧлКФХ = СкопироватьУзел(ИмяФормы, РасчСВ_КФХ, СведЧлКФХ);
				Для каждого Эл Из ЭкзСведЧлКФХ.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						Если Эл.Код = "СерНомДок" Тогда
							ВывестиПоказательВXML(
							ИмяФормы, Эл, СтрокаМнЧ.Данные["П00021М106701"] + " " + СтрокаМнЧ.Данные["П00021М106702"]);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, СтрокаМнЧ.Данные[Эл.Ключ]);
						КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, СтрокаМнЧ.Данные, Эл);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		// Раздел 3 (многостраничный раздел, на каждой странице есть 2 многострочные части).
		ДанныеРазд = ДанныеМногоуровневыхРазделов["Раздел3"];
		Если ЗаполненРаздел(ИмяФормы, ДанныеРазд, "Раздел3", СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов) Тогда
			
			ПерсСвСтрахЛиц = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ПерсСвСтрахЛиц");
			
			Для каждого Ветка Из ДанныеРазд.Строки Цикл
				
				ПризнакАннулирования = СокрЛП(Ветка.Данные["П000030001001"]);
				
				ЭкзПерсСвСтрахЛиц = СкопироватьУзел(ИмяФормы, УзелРодитель, ПерсСвСтрахЛиц, УзелРодитель.Строки.Количество() - 1);
				
				// Немногострочные данные.
				Для каждого Эл Из ЭкзПерсСвСтрахЛиц.Строки Цикл
					Если Эл.Код = "ПрАннулир" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, ПризнакАннулирования);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				ДанФЛПолуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "ДанФЛПолуч");
				Для каждого Эл Из ДанФЛПолуч.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						Если Эл.Код = "СерНомДок" Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные["П000310011001"] + " " + Ветка.Данные["П000310011002"]);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка.Данные[Эл.Ключ]);
						КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов, Ветка.Данные, Эл);
					КонецЕсли;
				КонецЦикла;
				
				// Многострочные данные выгружаются по условию.
				Если ПризнакАннулирования <> "1" Тогда
					СвВыплСВОПС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "СвВыплСВОПС");
					// Подраздел 3.2.1.
					ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
					СвВыпл = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "СвВыпл");
					СвВыплМК = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыпл, "СвВыплМК");
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, СвВыпл, СвВыплМК, СвВыпл.Строки.Количество() - 1));
					КонецЦикла;
					// Подраздел 3.2.2.
					ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
					ВыплСВДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "ВыплСВДоп");
					ВыплСВДопМТ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ВыплСВДоп, "ВыплСВДопМТ");
					Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
						ЗаполнитьДаннымиУзел(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ.Данные, СкопироватьУзел(ИмяФормы, ВыплСВДоп, ВыплСВДопМТ, ВыплСВДоп.Строки.Количество() - 1));
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ДеревоДанныхРаздел1        = ДанныеМногоуровневыхРазделов["Раздел1"];
		ДеревоДанныхРаздел1Прил1   = ДанныеМногоуровневыхРазделов["Раздел1Прил1"];
		ДеревоДанныхРаздел1Прил2   = ДанныеМногоуровневыхРазделов["Раздел1Прил2"];
		ДеревоДанныхРаздел1Прил3   = ДанныеМногоуровневыхРазделов["Раздел1Прил3"];
		ДеревоДанныхРаздел1Прил4   = ДанныеМногоуровневыхРазделов["Раздел1Прил4"];
		ДеревоДанныхРаздел1Прил5_6 = ДанныеМногоуровневыхРазделов["Раздел1Прил5_6"];
		ДеревоДанныхРаздел1Прил7   = ДанныеМногоуровневыхРазделов["Раздел1Прил7"];
		ДеревоДанныхРаздел1Прил8   = ДанныеМногоуровневыхРазделов["Раздел1Прил8"];
		ДеревоДанныхРаздел1Прил9   = ДанныеМногоуровневыхРазделов["Раздел1Прил9"];
		ДеревоДанныхРаздел1Прил10  = ДанныеМногоуровневыхРазделов["Раздел1Прил10"];
		ДеревоДанныхРаздел2        = ДанныеМногоуровневыхРазделов["Раздел2"];
		ДеревоДанныхРаздел3        = ДанныеМногоуровневыхРазделов["Раздел3"];
		
		// Раздел 1 (единственная страница, имеющая 2 многострочные части).
		Ветка1 = ДеревоДанныхРаздел1.Строки[0];
		ОбязПлатСВ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ");
		
		// Удаление Раздела 1 вместе с его приложениями из дерева выгрузки по условию.
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ЭтоПБОЮЛ", ПараметрыВыгрузки.ЭтоПБОЮЛ);
		ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
		ДопПараметры.Вставить("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1");
		Если (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240")
			И НЕ ЗаполненРаздел1(ИмяФормы,
			ДанныеМногоуровневыхРазделов,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДопПараметры) Тогда	   
			
			РегламентированнаяОтчетность.УдалитьУзел(ОбязПлатСВ);
			
		Иначе
			
			// Переопределение обязательности выгрузки Раздела 1.
			Если НЕ (ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240") Тогда
				ОбязПлатСВ.Обязательность = "О";
			КонецЕсли;
			// Немногострочные данные 010-053.
			Для каждого Эл Из ОбязПлатСВ.Строки Цикл
				Если Эл.Код = "ОКТМО" Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			Ветка1.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			Ветка1.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОМС"));
			// Многострочная часть 060-073.
			УплПерОПСДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерОПСДоп");
			ДанныеМнЧ1 = Ветка1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
			Для каждого СтрокаМнЧ1 Из ДанныеМнЧ1.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы, 
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ1.Данные,
				СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерОПСДоп));
			КонецЦикла;
			// Многострочная часть 080-093.
			УплПерДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПерДСО");
			ДанныеМнЧ2 = Ветка1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
			Для каждого СтрокаМнЧ2 Из ДанныеМнЧ2.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ2.Данные,
				СкопироватьУзел(ИмяФормы, ОбязПлатСВ, УплПерДСО));
			КонецЦикла;
			// Немногострочные данные 100-123.
			УплПревОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "УплПревОСС");
			Для каждого Эл Из УплПревОСС.Строки Цикл
				Если Эл.Код = "КБК" Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			УплПерОСС = ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "УплПерОСС");
			// Специальная выгрузка строк 110-113.
			Для каждого Эл Из УплПерОСС.Строки Цикл
				Если Эл.Код = "СумСВУплПер" Тогда
					Если Ветка1.Данные["П000010011001"] = 0 И Ветка1.Данные["П000010012001"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011001"]);
					КонецЕсли;
				ИначеЕсли Эл.Код = "СумСВУпл1М" Тогда
					Если Ветка1.Данные["П000010011101"] = 0 И Ветка1.Данные["П000010012101"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011101"]);
					КонецЕсли;
				ИначеЕсли Эл.Код = "СумСВУпл2М" Тогда
					Если Ветка1.Данные["П000010011201"] = 0 И Ветка1.Данные["П000010012201"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011201"]);
					КонецЕсли;
				ИначеЕсли Эл.Код = "СумСВУпл3М" Тогда
					Если Ветка1.Данные["П000010011301"] = 0 И Ветка1.Данные["П000010012301"] = 0 Тогда
						УплПерОСС.Обязательность = "О";
						Эл.Обязательность = "О";
						ВывестиПоказательВXML(ИмяФормы, Эл, 0);
					Иначе
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка1.Данные["П000010011301"]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			Ветка1.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, УплПревОСС, "ПревРасхОСС"));
			
			// Приложение 1 к Разделу 1 (иерархический раздел).
			РасчСВ_ОПС_ОМС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОПС_ОМС");
			Для каждого ВеткаРазд1Пр1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
				ЭкзРасчСВ_ОПС_ОМС = СкопироватьУзел(ИмяФормы, ОбязПлатСВ, РасчСВ_ОПС_ОМС);
				Для каждого Эл Из ЭкзРасчСВ_ОПС_ОМС.Строки Цикл
					Если Эл.Код = "ТарифПлат" Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, ВеткаРазд1Пр1.Данные[Эл.Ключ]);
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				ВеткаРазд1Пр1Подр11_12 = ВеткаРазд1Пр1.Строки[0].Строки[0];
				ВеткаРазд1Пр1Подр131   = ВеткаРазд1Пр1.Строки[1].Строки[0];
				ВеткаРазд1Пр1Подр132   = ВеткаРазд1Пр1.Строки[2].Строки[0];
				ВеткаРазд1Пр1Подр14    = ВеткаРазд1Пр1.Строки[3].Строки[0];
				
				// Подразделы 1.1 и 1.2 (единственная страница, нет многострочной части).
				ЗаполнитьДаннымиУзел(ИмяФормы,
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				ВеткаРазд1Пр1Подр11_12.Данные,
				ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС"));
				ЗаполнитьДаннымиУзел(ИмяФормы,
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				ВеткаРазд1Пр1Подр11_12.Данные,
				ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОМС"));
				
				РасчСВ_ОПС428 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС428");
				
				// Подраздел 1.3.1 (единственная страница, имеющая 1 многострочную часть).
				РасчСВ_428_1_2 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.1-2");
				ДанныеМнЧ131 = ВеткаРазд1Пр1Подр131.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
				Для каждого СтрокаМнЧ131 Из ДанныеМнЧ131.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ131.Данные,
					СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_1_2));
				КонецЦикла;
				
				// Подраздел 1.3.2 (единственная страница, имеющая 1 многострочную часть).
				РасчСВ_428_3 = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_ОПС428, "РасчСВ_428.3");
				ДанныеМнЧ132 = ВеткаРазд1Пр1Подр132.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
				Для каждого СтрокаМнЧ132 Из ДанныеМнЧ132.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ132.Данные,
					СкопироватьУзел(ИмяФормы, РасчСВ_ОПС428, РасчСВ_428_3));
				КонецЦикла;
				
				// Подраздел 1.4 (единственная страница, имеющая 1 многострочную часть).
				РасчСВ_ДСО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ДСО");
				ДанныеМнЧ14 = ВеткаРазд1Пр1Подр14.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1114М1];
				Для каждого СтрокаМнЧ14 Из ДанныеМнЧ14.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ14.Данные,
					СкопироватьУзел(ИмяФормы, ЭкзРасчСВ_ОПС_ОМС, РасчСВ_ДСО));
				КонецЦикла;
			КонецЦикла;
			
			// Приложение 2 к Разделу 1 (единственная страница).
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДеревоДанныхРаздел1Прил2.Строки[0].Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасчСВ_ОСС.ВНМ"));
			
			// Приложение 3 к Разделу 1 (единственная страница).
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДеревоДанныхРаздел1Прил3.Строки[0].Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "РасхОССЗак"));
			
			// Приложение 4 к Разделу 1 (единственная страница).
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДеревоДанныхРаздел1Прил4.Строки[0].Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ВыплФинФБ"));
			
			// Приложения 5-6 к Разделу 1 (единственная страница).
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДеревоДанныхРаздел1Прил5_6.Строки[0].Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф3.1.427"));
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДеревоДанныхРаздел1Прил5_6.Строки[0].Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф5.1.427"));
			
			// Приложения 7 к Разделу 1 (единственная страница).
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ДеревоДанныхРаздел1Прил7.Строки[0].Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "ПравТариф7.1.427"));
			
			Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
				// Приложение 8 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
				ВеткаРазд1Пр8 = ДеревоДанныхРаздел1Прил8.Строки[0];
				СвПримТариф9_1_427 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф9.1.427");
				// Немногострочные данные.
				ЗаполнитьДаннымиУзел(ИмяФормы,
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				ВеткаРазд1Пр8.Данные,
				ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф9_1_427, "ВыплатИт"));
				// Многострочные данные.
				СведПатент = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф9_1_427, "СведПатент");
				ДанныеМнЧ18 = ВеткаРазд1Пр8.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
				Для каждого СтрокаМнЧ18 Из ДанныеМнЧ18.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ18.Данные,
					СкопироватьУзел(ИмяФормы, СвПримТариф9_1_427, СведПатент));
				КонецЦикла;
			КонецЕсли;
			
			// Приложение 9 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			ВеткаРазд1Пр9 = ДеревоДанныхРаздел1Прил9.Строки[0];
			СвПримТариф2_2_425 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф2.2.425");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ВеткаРазд1Пр9.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "ВыплатИт"));
			// Многострочные данные.
			СвИноГражд = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф2_2_425, "СвИноГражд");
			ДанныеМнЧ19 = ВеткаРазд1Пр9.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
			Для каждого СтрокаМнЧ19 Из ДанныеМнЧ19.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ19.Данные,
				СкопироватьУзел(ИмяФормы, СвПримТариф2_2_425, СвИноГражд));
			КонецЦикла;
			
			// Приложение 10 к Разделу 1 (единственная страница,
			// имеющая одну иерархическую (2 уровня) многострочную часть).
			ВеткаРазд1Пр10 = ДеревоДанныхРаздел1Прил10.Строки[0];
			СвПримТариф1_3_422 = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ, "СвПримТариф1.3.422");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			ВеткаРазд1Пр10.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "ВыплатИт"));
			// Многострочные данные.
			СведОбуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвПримТариф1_3_422, "СведОбуч");
			ДанныеМнЧ110М1 = ВеткаРазд1Пр10.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
			Для каждого СтрокаМнЧ110М1 Из ДанныеМнЧ110М1.Строки Цикл
				ЭкзСведОбуч = СкопироватьУзел(ИмяФормы, СвПримТариф1_3_422, СведОбуч);
				// Многострочные данные первого уровня.
				Для каждого Эл Из ЭкзСведОбуч.Строки Цикл
					Если Эл.Код = "УникНомер" Тогда
						// Генерирование "уникальных номеров".
						ВывестиПоказательВXML(
						ИмяФормы, Эл, Формат(ДанныеМнЧ110М1.Строки.Индекс(СтрокаМнЧ110М1) + 1, "ЧГ="));
					ИначеЕсли Эл.Строки.Количество() > 0 И Эл.Код <> "СвРеестрМДО" Тогда
						ЗаполнитьДаннымиУзел(ИмяФормы,
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов,
						СтрокаМнЧ110М1.Данные,
						ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзСведОбуч, Эл.Код));
					КонецЕсли;
				КонецЦикла;
				// Многострочные данные второго (подчиненного первому) уровня.
				СвРеестрМДО = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзСведОбуч, "СвРеестрМДО");
				ДанныеМнЧ110М2 = СтрокаМнЧ110М1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
				Для каждого СтрокаМнЧ110М2 Из ДанныеМнЧ110М2.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ110М2.Данные,
					СкопироватьУзел(ИмяФормы, ЭкзСведОбуч, СвРеестрМДО));
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		// Раздел 2 (единственная страница, имеющая 1 многострочную часть)
		// выгружается по условию.
		Если ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ПараметрыВыгрузки.ПоМесту = "240" Тогда
			Ветка2 = ДеревоДанныхРаздел2.Строки[0];
			ОбязПлатСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ОбязПлатСВ_КФХ");
			// Переопределение обязательности выгрузки Раздела 2.
			ОбязПлатСВ_КФХ.Обязательность = "О";
			Для каждого Эл Из ОбязПлатСВ_КФХ.Строки Цикл
				Если Эл.Код = "ОКТМО" Тогда
					ВывестиПоказательВXML(ИмяФормы, Эл, Ветка2.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			Ветка2.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОПС"));
			ЗаполнитьДаннымиУзел(ИмяФормы,
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов,
			Ветка2.Данные,
			ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "УплПерОМС"));
			// Многострочные данные (Приложение 1 к Разделу 2).
			РасчСВ_КФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ОбязПлатСВ_КФХ, "РасчСВ_КФХ");
			СведЧлКФХ = ПолучитьПодчиненныйЭлемент(ИмяФормы, РасчСВ_КФХ, "СведЧлКФХ");
			ДанныеМнЧ21 = Ветка2.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
			Для каждого СтрокаМнЧ21 Из ДанныеМнЧ21.Строки Цикл
				ЗаполнитьДаннымиУзел(ИмяФормы,
				СтруктураРеквизитовФормы,
				СтруктураМногоуровневыхРазделов,
				СтрокаМнЧ21.Данные,
				СкопироватьУзел(ИмяФормы, РасчСВ_КФХ, СведЧлКФХ));
			КонецЦикла;
		КонецЕсли;
		
		// Раздел 3 (многостраничный раздел, на каждой странице есть 2 многострочные части).
		ПерсСвСтрахЛиц = ПолучитьПодчиненныйЭлемент(ИмяФормы, УзелРодитель, "ПерсСвСтрахЛиц");
		Если ЗаполненРаздел(ИмяФормы,
			ДеревоДанныхРаздел3,
			"Раздел3",
			СтруктураРеквизитовФормы,
			СтруктураМногоуровневыхРазделов) Тогда
			
			Для каждого Ветка3 Из ДеревоДанныхРаздел3.Строки Цикл
				
				ЭкзПерсСвСтрахЛиц = СкопироватьУзел(ИмяФормы,
				УзелРодитель, ПерсСвСтрахЛиц, УзелРодитель.Строки.Количество() - 1);
				
				// Немногострочные данные.
				Для каждого Эл Из ЭкзПерсСвСтрахЛиц.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						Если Эл.Код = "Период" Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл, ПараметрыВыгрузки.Период);
						ИначеЕсли Эл.Код = "ОтчетГод" Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл, ПараметрыВыгрузки.ОтчетГод);
						ИначеЕсли Эл.Код = "Номер" Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл,
							?(ЗначениеЗаполнено(Ветка3.Данные[Эл.Ключ]),
							Число(Ветка3.Данные[Эл.Ключ]), 0));
						ИначеЕсли Эл.Код = "Дата" Тогда
							ВывестиПоказательВXML(ИмяФормы, Эл,
							СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ДанФЛПолуч = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "ДанФЛПолуч");
				Для каждого Эл Из ДанФЛПолуч.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						Если Эл.Код = "СерНомДок" Тогда
							// Особая обработка при выгрузке стр. 150 ("Серия и номер").
							ВывестиПоказательВXML(ИмяФормы, Эл,
							Ветка3.Данные["П000310015001"] + " " + Ветка3.Данные["П000310015002"]);
						Иначе
							ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
						КонецЕсли;
					Иначе
						ЗаполнитьДаннымиУзел(ИмяФормы,
						СтруктураРеквизитовФормы,
						СтруктураМногоуровневыхРазделов,
						Ветка3.Данные, Эл);
					КонецЕсли;
				КонецЦикла;
				
				СвВыплСВОПС = ПолучитьПодчиненныйЭлемент(ИмяФормы, ЭкзПерсСвСтрахЛиц, "СвВыплСВОПС");
				// Немногострочные данные Подраздела 3.2.1.
				СвВыпл = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "СвВыпл");
				Для каждого Эл Из СвВыпл.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
					КонецЕсли;
				КонецЦикла;
				// Многострочные данные Подраздела 3.2.1.
				СвВыплМК = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыпл, "СвВыплМК");
				ДанныеМнЧ321 = Ветка3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
				Для каждого СтрокаМнЧ321 Из ДанныеМнЧ321.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ321.Данные,
					СкопироватьУзел(ИмяФормы, СвВыпл, СвВыплМК, СвВыпл.Строки.Количество() - 1));
				КонецЦикла;
				// Немногострочные данные Подраздела 3.2.2.
				ВыплСВДоп = ПолучитьПодчиненныйЭлемент(ИмяФормы, СвВыплСВОПС, "ВыплСВДоп");
				Для каждого Эл Из ВыплСВДоп.Строки Цикл
					Если Эл.Строки.Количество() = 0 Тогда
						ВывестиПоказательВXML(ИмяФормы, Эл, Ветка3.Данные[Эл.Ключ]);
					КонецЕсли;
				КонецЦикла;
				// Многострочные данные Подраздела 3.2.2.
				ВыплСВДопМТ = ПолучитьПодчиненныйЭлемент(ИмяФормы, ВыплСВДоп, "ВыплСВДопМТ");
				ДанныеМнЧ322 = Ветка3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
				Для каждого СтрокаМнЧ322 Из ДанныеМнЧ322.Строки Цикл
					ЗаполнитьДаннымиУзел(ИмяФормы,
					СтруктураРеквизитовФормы,
					СтруктураМногоуровневыхРазделов,
					СтрокаМнЧ322.Данные,
					СкопироватьУзел(ИмяФормы, ВыплСВДоп, ВыплСВДопМТ, ВыплСВДоп.Строки.Количество() - 1));
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(ИмяФормы, Родитель)
	
	Для Каждого Стр из Родитель.Строки Цикл
		Если ЗначениеЗаполнено(Стр.Ключ) Тогда
			Возврат Стр;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

Функция СкопироватьУзел(ИмяФормы, Родитель, Узел, Знач МаксИндекс = Неопределено)
	
	// Нахождение узла с максимальным индексом и с тем же кодом,
	// что и у копируемого, и добавление нового сразу после найденного.
	Если МаксИндекс = Неопределено Тогда
		СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
		МаксИндекс = - 1;
		КолСтрокСТемЖеКодом = СтрокиСТемЖеКодом.Количество();
		Если КолСтрокСТемЖеКодом > 0 Тогда
			МаксИндекс = Родитель.Строки.Индекс(СтрокиСТемЖеКодом[КолСтрокСТемЖеКодом - 1]);
		КонецЕсли;
	КонецЕсли;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда
		// Аналогичный узел не найден или найденный узел - последний.
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(ИмяФормы, НовыйУзел, Стр, Узел.Строки.Количество() - 1);
	КонецЦикла;
	
	Возврат НовыйУзел;
	
КонецФункции

Функция ВывестиПоказательВXML(ИмяФормы, Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда // учтем оба варианта: кириллицу и латиницу
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			ЗначениеПоказателяСтр = Формат(ЗначениеПоказателя, "ДФ=dd.MM.yyyy");
		Иначе
			ЗначениеПоказателяСтр = СокрЛП(ЗначениеПоказателя);
		КонецЕсли;
		Узел.Значение = ?(МаксШирина < СтрДлина(ЗначениеПоказателяСтр),
						  СокрЛП(Лев(ЗначениеПоказателяСтр, МаксШирина)),
						  ЗначениеПоказателяСтр);
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.;ЧН=0;ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	КонецЕсли;
	
КонецФункции

Функция УзелПуст(ИмяФормы, Узел, ПараметрыВыгрузки)
	
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(ИмяФормы, Стр, ПараметрыВыгрузки) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Узел.Формат = "S" Тогда
		Возврат Истина;
		
	ИначеЕсли Узел.Формат = "N" Тогда
		Возврат Узел.Значение = "0" ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение));
		
	Иначе
		Если Узел.Код = "УникНомер" Тогда
			// Специальная обработка автоматически задаваемого уникального номера в необязательном разделе:
			// "Приложение 9 к Разделу 1" - в случае ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			// или ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1");
			// "Приложение 10 к Разделу 1" - в случае ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1").
			Возврат Истина;
		Иначе
			Возврат НЕ ЗначениеЗаполнено(Узел.Значение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПодчиненныйЭлемент(ИмяФормы, Узел, КодЭлемента)
	
	ЧислоВместоКодаЭлемента = (ТипЗнч(КодЭлемента) = Тип("Число"));
	Если ТипЗнч(КодЭлемента) = Тип("Число") Тогда
		Если Узел.Строки.Количество() > КодЭлемента Тогда
			Возврат Узел.Строки.Получить(КодЭлемента);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Для Каждого Стр Из Узел.Строки Цикл
			Если Стр.Код = КодЭлемента Тогда
				Возврат Стр;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Функция ВыгрузитьДеревоВXML(ИмяФормы, ДеревоВыгрузки, ПараметрыВыгрузки, КодировкаФайлаВыгрузки)
	
	ПотокXML = РегламентированнаяОтчетность.СоздатьНовыйПотокXML(КодировкаФайлаВыгрузки);
	ЗаписатьУзелДереваВXML(ИмяФормы, ДеревоВыгрузки, ПотокXML, ПараметрыВыгрузки);
	ТекстДляЗаписи = ПотокXML.Закрыть();
	
	Возврат ТекстДляЗаписи;
	
КонецФункции

Функция ЗаписатьУзелДереваВXML(ИмяФормы, СтрокаДерева, ПотокXML, ПараметрыВыгрузки)
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("Файл");
		ПотокXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(ИмяФормы, Стр, ПотокXML, ПараметрыВыгрузки);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(ИмяФормы, Лист, ПотокXML, ПараметрыВыгрузки);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ФормированиеПечатногоБланка

Функция ПечатныйБланк(ПараметрыПечати) Экспорт
	
	Перем СтруктураРеквизитовФормы;
	Перем СтруктураМногоуровневыхРазделов;
	Перем ДанныеРазделов;
	Перем ВидПечати;
	Перем ДеревоВыбранныхСтраниц;
	Перем ДанныеМногоуровневыхРазделов;
	
	ИмяФормы = ПараметрыПечати.ВыбраннаяФорма;
	
	ПечатныйБланкФормируетсяВФорматеPDF = Ложь;
	
	Если НЕ ПараметрыПечати.Свойство("СтруктураРеквизитовФормы", СтруктураРеквизитовФормы) Тогда
		СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы);
		ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы);
		ПараметрыПечати.Свойство("СохраненныйОтчет", СтруктураРеквизитовФормы.мСохраненныйДок);
		СтруктураРеквизитовФормы.ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
		ПараметрыПечати.СохраненныйОтчет.Организация);
		СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета",
		КонецДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания));
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("СтруктураМногоуровневыхРазделов", СтруктураМногоуровневыхРазделов) Тогда
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ДеревоВыбранныхСтраниц", ДеревоВыбранныхСтраниц) Тогда
		ДеревоВыбранныхСтраниц = ПараметрыПечати.СохраненныйОтчет.ДеревоНастройкиСтраниц.Получить();
		ПечатныйБланкФормируетсяВФорматеPDF = Истина;
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ВидПечати", ВидПечати) Тогда
		ВидПечати = "";
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ДанныеРазделов", ДанныеРазделов) Тогда
		
		ДанныеРазделов = Новый Структура;
		
		СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
		
		ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
		
		Для Каждого Раздел Из ПоказателиОтчета Цикл
			
			ДанныеРазделов.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
			
		КонецЦикла;
		
		Если СохрСтруктура.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов) Тогда
			
			Для Каждого ЭлементСтруктуры Из ДанныеМногоуровневыхРазделов Цикл
				
				РегламентированнаяОтчетность.ПоместитьВКэш(ЭлементСтруктуры.Значение, Новый УникальныйИдентификатор,
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ]);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста(
	ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов.Титульный);
	
	Если ВидПечати = "ПоказатьБланкСтраницыРаздела3" Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  "Раздел 3");
		СтруктураПараметров.Вставить("ОриентацияЛиста",    "Портрет");
		СтруктураПараметров.Вставить("ИмяСтраницы",        "Раздел3");
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", "");
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ЭтотОбъект.ПолучитьМакет(
		Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3",
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1);
		
		ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3);
		
	Иначе
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			ВыводитьНаПечатьРаздел1Прил6 = Ложь;
			ВыводитьНаПечатьРаздел1Прил7 = Ложь;
			Для Каждого СтраницаОтчета Из ДеревоВыбранныхСтраниц.Строки Цикл
				Если СтраницаОтчета.ИмяСтраницы = "Раздел1Прил6" И СтраницаОтчета.ВыводНаПечать = 1 Тогда
					ВыводитьНаПечатьРаздел1Прил6 = Истина;
				ИначеЕсли СтраницаОтчета.ИмяСтраницы = "Раздел1Прил7" И СтраницаОтчета.ВыводНаПечать = 1 Тогда
					ВыводитьНаПечатьРаздел1Прил7 = Истина;
				КонецЕсли;
			КонецЦикла;
			ОбщиеРеквизитыРазделов.Вставить("ВыводитьНаПечатьРаздел1Прил6", ВыводитьНаПечатьРаздел1Прил6);
			ОбщиеРеквизитыРазделов.Вставить("ВыводитьНаПечатьРаздел1Прил7", ВыводитьНаПечатьРаздел1Прил7);
			ОбщиеРеквизитыРазделов.Вставить("ВыведенНаПечатьРаздел1Прил6_7", Ложь);
			
		КонецЕсли;
		
		Для Каждого СтраницаОтчета Из ДеревоВыбранныхСтраниц.Строки Цикл
			
			Если СтраницаОтчета.ВыводНаПечать = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаименованиеЛиста",  СтраницаОтчета.Представление);
			СтруктураПараметров.Вставить("ОриентацияЛиста",    СтраницаОтчета.ОриентацияСтраницы);
			СтруктураПараметров.Вставить("ИмяСтраницы",        СтраницаОтчета.ИмяСтраницы);
			Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтраницаОтчета.ИмяОбластиТабличногоПоля);
			Структурапараметров.Вставить("ВидПечати",          ВидПечати);
			
			Если СтруктураМногоуровневыхРазделов.Свойство(СтраницаОтчета.ИмяСтраницы) Тогда
				
				ВывестиНаПечатьДанныеМногоуровневогоРаздела(ИмяФормы,
				СтруктураПараметров,
				ОбщиеРеквизитыРазделов,
				СтруктураРеквизитовФормы,
				ДанныеРазделов);
				
			Иначе
				
				ВывестиНаПечатьЛист(ИмяФормы,
				СтруктураПараметров,
				ОбщиеРеквизитыРазделов,
				СтруктураРеквизитовФормы,
				ДанныеРазделов);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(
	СтруктураРеквизитовФормы, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	Если НЕ ПечатныйБланкФормируетсяВФорматеPDF Тогда
		Возврат "";
	КонецЕсли;
	
	ПакетОтображаемыхДокументов = Новый ПакетОтображаемыхДокументов;
	
	Для Каждого Лист Из СтруктураРеквизитовФормы.СписокПечатаемыхЛистов Цикл
		ПакетОтображаемыхДокументов.Состав.Добавить(Лист.Значение[0]);
	КонецЦикла;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
	
	ПакетОтображаемыхДокументов.ЗаписатьФайлДляПечати(ИмяВременногоФайла);
	
	ФайлПечатногоБланка = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлПечатногоБланка, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	ИмяФайлаПечатногоБланка = СтруктураРеквизитовФормы.НаименованиеОтчета + НСтр("ru=' за '")
	+ ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала),
	КонецДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания), "ФП = Истина")
	+ " (" + СтруктураРеквизитовФормы.мСохраненныйДок.Организация + ").pdf";
	
	ПечатныйБланк = Новый Структура;
	ПечатныйБланк.Вставить("АдресПечатногоБланка", АдресВоВременномХранилище);
	ПечатныйБланк.Вставить("ИмяФайлаПечатногоБланка",
		ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайлаПечатногоБланка));
	
	Возврат ПечатныйБланк;
	
КонецФункции

Функция ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати(ПараметрыПечати) Экспорт
	
	ИмяФормы = ПараметрыПечати.ИмяФормыОтчета;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ИмяРаздела = "Раздел3";
		
		ПараметрыПечати.Вставить("ПерсонифицированныеСведенияОЗастрахованныхЛицахДляПечати");
		Если НЕ ПараметрыПечати.Свойство("ДатаНачалаПериодаОтчета") Тогда
			ПараметрыПечати.Вставить("ДатаНачалаПериодаОтчета", НачалоГода(ПараметрыПечати.ДатаКонцаПериодаОтчета));
		КонецЕсли;
		ПараметрыПечати.Вставить("ДатаНачала",    ПараметрыПечати.ДатаНачалаПериодаОтчета);
		ПараметрыПечати.Вставить("ДатаОкончания", ПараметрыПечати.ДатаКонцаПериодаОтчета);
		КорректирующийОтчет = (ПараметрыПечати.Свойство("НомерКорректировки") И ПараметрыПечати.НомерКорректировки > 0);
		
		ПодготовленныйРеглОтчет = ПодготовленныйРеглОтчет(ИмяФормы, ПараметрыПечати, КорректирующийОтчет);
		
		РазделыОтчета       = ПодготовленныйРеглОтчет.РазделыОтчета;
		ДанныеРеглОтчета    = ПодготовленныйРеглОтчет.ДанныеРеглОтчета;
		ДеревоСтраницОтчета = ПодготовленныйРеглОтчет.ДеревоСтраницОтчета;
		
		// Формирование печатного бланка.
		//
		ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы,
		ДанныеРеглОтчета.СтруктураРеквизитовФормы, РазделыОтчета.Титульный);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  "Раздел 3");
		СтруктураПараметров.Вставить("ОриентацияЛиста",    "Портрет");
		СтруктураПараметров.Вставить("ИмяСтраницы",        "Раздел3");
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", "");
		СтруктураПараметров.Вставить("ВидПечати",          "");
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ЭтотОбъект.ПолучитьМакет(
		Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПечатныеБланки = Новый Соответствие;
		
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		ДанныеРеглОтчета.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		
		Для каждого Ветка Из ДеревоРаздела.Строки Цикл
			
			ДанныеРеглОтчета.СтруктураРеквизитовФормы.мПечатныеформы.Очистить();
			
			ПараметрыПечатиРаздела3.Вставить("Ветка", Ветка);
			ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3", 0);
			
			ПечатьТекущейСтраницыРаздела3(ИмяФормы,
			ДанныеРеглОтчета.СтруктураРеквизитовФормы, РазделыОтчета, ПараметрыПечатиРаздела3);
			
			ФизЛицо = Неопределено;
			Ветка.Данные.Свойство("ФизическоеЛицо", ФизЛицо);
			
			ФизЛицо_ПечатныеБланки = ДанныеРеглОтчета.СтруктураРеквизитовФормы.мПечатныеформы.ВыгрузитьЗначения();
			
			Для Инд = 0 По ФизЛицо_ПечатныеБланки.Количество() - 1 Цикл
				ФизЛицо_ПечатныйБланк = ФизЛицо_ПечатныеБланки[Инд];
				НомерСтраницы = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(Инд + 1, "ЧГ="), 3, "0");
				Для НомПоз = 1 По 3 Цикл
					ТекОбл = ФизЛицо_ПечатныйБланк.Области.Найти("НомСтр_" + Формат(НомПоз, "ЧГ="));
					Если ТекОбл <> Неопределено Тогда
						ТекОбл.Значение = Сред(НомерСтраницы, НомПоз, 1);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ПечатныеБланки.Вставить(?(ФизЛицо = Неопределено, Новый УникальныйИдентификатор, ФизЛицо), ФизЛицо_ПечатныеБланки);
			
		КонецЦикла;
		
		Возврат ПечатныеБланки;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы, СтруктураРеквизитовФормы, СтруктураДанныхТитульный)
	
	МассивИНН         = Новый Массив(12);
	МассивКПП         = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	
	СтрИНН = "";
	
	Если СтруктураДанныхТитульный.Свойство("ИНН", СтрИНН) Тогда
		
		Если СтрДлина(СтрИНН) = 10 Тогда
			
			СтрИНН = СтрИНН + "--";
			
		КонецЕсли;
		
		Для Ном = 1 По СтрДлина(СтрИНН) Цикл
			
			МассивИНН[Ном - 1] = Сред(СтрИНН, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтрКПП = "";
	
	Если СтруктураДанныхТитульный.Свойство("КПП", СтрКПП) Тогда
						
		Для Ном = 1 По СтрДлина(СтрКПП) Цикл
			
			МассивКПП[Ном - 1] = Сред(СтрКПП, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДатаПодписи = "";
	
	Если СтруктураДанныхТитульный.Свойство("ДатаПодписи", ДатаПодписи) Тогда	
		
		Если ТипЗнч(ДатаПодписи) = Тип("Строка") Тогда 
			
			СтрДатаПодписи = Лев(СтрЗаменить(ДатаПодписи, ".", ""), 8);
			
		ИначеЕсли ТипЗнч(ДатаПодписи) = Тип("Дата") Тогда 
			
			Если ЗначениеЗаполнено(ДатаПодписи) Тогда 
				
				СтрДатаПодписи = Лев(СтрЗаменить(Формат(ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
				
			Иначе
				
				СтрДатаПодписи = "        ";
				
			КонецЕсли;
			
		КонецЕсли;
		
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	НаимОрг = "";
	
	Если СтруктураРеквизитовФормы.ИП
	   И СтруктураДанныхТитульный.Свойство("НаимОрг", НаимОрг) Тогда
		
		ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(НаимОрг);
			
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоФамилия",         ФИОИП.Фамилия);
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоИмяИнициал",      Лев(ФИОИП.Имя, 1));
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоОтчествоИнициал", Лев(ФИОИП.Отчество, 1));
		
	Иначе
		
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоФамилия",         "-");
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоИмяИнициал",      "-");
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоОтчествоИнициал", "-");
		
	КонецЕсли;
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

Процедура ВывестиНаПечатьЛист(ИмяФормы,
							  СтруктураПараметров,
							  ОбщиеРеквизитыРазделов,
							  СтруктураРеквизитовФормы,
							  ДанныеРазделов,
							  ТабличныйДокумент = Неопределено)
	
	ПрефиксИменМакетов = "ПечатныйБланк" + Прав(СокрЛП(ИмяФормы), 7) + "_";
	
	ИмяМЧБ = ПрефиксИменМакетов + СтруктураПараметров.ИмяСтраницы;
	
	МакетПечатнойФормы = ЭтотОбъект.ПолучитьМакет(ИмяМЧБ);
	МакетПечатнойФормы.ПолеСверху = 5;
	МакетПечатнойФормы.ПолеСправа = 5;
	МакетПечатнойФормы.ПолеСнизу  = 5;
	МакетПечатнойФормы.ПолеСлева  = 5;
	
	СтруктураПараметров.Вставить("мДатаКонцаПериодаОтчета", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	ЗаполнитьПечатнуюФорму(ИмяФормы,
					  	   СтруктураПараметров,
					  	   МакетПечатнойФормы,
					  	   ОбщиеРеквизитыРазделов,
					  	   ДанныеРазделов,
						   ТабличныйДокумент);
					  
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(МакетПечатнойФормы);
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетПечатнойФормы, СтрПоля, "Макет");
			
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая("",
														  СтруктураПараметров,
														  ТабличныйДокумент,
														  СтруктураРеквизитовФормы.мПечатныеФормы);
	
КонецПроцедуры

Процедура ВывестиНаПечатьДанныеМногоуровневогоРаздела(ИмяФормы,
													  СтруктураПараметров,
													  ОбщиеРеквизитыРазделов,
													  СтруктураРеквизитовФормы,
													  ДанныеРазделов)
	
	ИмяТекРаздела = СтруктураПараметров.ИмяСтраницы;
	
	ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяТекРаздела]);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		Если ИмяТекРаздела = "Раздел1" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1");
			
			ДанныеМнЧ1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
			ДанныеМнЧ2 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
			
			СтрокМнЧ1НаЛисте = 1;
			СтрокМнЧ2НаЛисте = 1;
			
			// Определение количества листов.
			КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
			ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
			ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
			КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
			
			КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
			ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
			ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
			КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
			
			КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧ1ДляПечати = Новый Массив;
			ИмяП00001М106001 = "П00001М106001";
			ИмяП00001М107001 = "П00001М107001";
			ИмяП00001М107101 = "П00001М107101";
			ИмяП00001М107201 = "П00001М107201";
			ИмяП00001М107301 = "П00001М107301";
			
			МассивДанныхМнЧ2ДляПечати = Новый Массив;
			ИмяП00001М208001 = "П00001М208001";
			ИмяП00001М209001 = "П00001М209001";
			ИмяП00001М209101 = "П00001М209101";
			ИмяП00001М209201 = "П00001М209201";
			ИмяП00001М209301 = "П00001М209301";
			
			Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
				
				Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
				ДанныеМнЧ1ДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
					
					НовИмяП00001М106001 = ИмяП00001М106001 + _ИндСтрокиМнЧ;
					НовИмяП00001М107001 = ИмяП00001М107001 + _ИндСтрокиМнЧ;
					НовИмяП00001М107101 = ИмяП00001М107101 + _ИндСтрокиМнЧ;
					НовИмяП00001М107201 = ИмяП00001М107201 + _ИндСтрокиМнЧ;
					НовИмяП00001М107301 = ИмяП00001М107301 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001, "");
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001, 0);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101, 0);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201, 0);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301, 0);
					
					Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М106001]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107001]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107101]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107201]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107301]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
				
				Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
				ДанныеМнЧ2ДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
					
					НовИмяП00001М208001 = ИмяП00001М208001 + _ИндСтрокиМнЧ;
					НовИмяП00001М209001 = ИмяП00001М209001 + _ИндСтрокиМнЧ;
					НовИмяП00001М209101 = ИмяП00001М209101 + _ИндСтрокиМнЧ;
					НовИмяП00001М209201 = ИмяП00001М209201 + _ИндСтрокиМнЧ;
					НовИмяП00001М209301 = ИмяП00001М209301 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001, "");
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001, 0);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101, 0);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201, 0);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301, 0);
					
					Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М208001]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209001]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209101]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209201]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209301]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы1М1
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы1М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы1М2
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы1М2,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для Каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
				Для Каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
				Для Каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
				Если НомЛиста = КолЛистовРаздела1 Тогда
					
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздела);
					
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для Каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист2");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
					
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил1" Тогда
			
			МакетРаздел1Прил1
			= ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1");
			
			МакетРаздел1Прил1Подр1_1и1_2
			= ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_1и1_2");
			
			МакетРаздел1Прил1Подр1_3_1
			= ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_3_1");
			
			МакетРаздел1Прил1Подр1_3_2
			= ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_3_2");
			
			Для Каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
				// Подразделы 1.1, 1.2.
				НемногострочныеДанные = Ветка.Строки[0].Строки[0].Данные;
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_1и1_2);
				
				Для Каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				Обл = ТабличныйДокумент.Области.Найти("П000110000101");
				Обл.Имя = "";
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1);
				Обл = ТабличныйДокумент.Области.Найти("П000110000101");
				Обл.Значение = Ветка.Данные.П000110000101;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_1и1_2");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
				// Подраздел 1.3.1.
				МногострочныеДанные131
				= Ветка.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
				Для каждого Строка131 Из МногострочныеДанные131.Строки Цикл
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_1);
					Для каждого Пок Из Строка131.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_1");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
				КонецЦикла;
				
				// Подраздел 1.3.2.
				МногострочныеДанные132
				= Ветка.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
				Для каждого Строка132 Из МногострочныеДанные132.Строки Цикл
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_2);
					Для каждого Пок Из Строка132.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_2");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
				КонецЦикла;
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил1_1" Тогда
			
			МакетРаздел = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1_1");
			
			МногострочныеДанные
			= ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы111М1];
			Для каждого СтрокаМнЧ Из МногострочныеДанные.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел);
				Для каждого Пок Из СтрокаМнЧ.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(ИмяФормы, СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов,
				СтруктураРеквизитовФормы, ДанныеРазделов, ТабличныйДокумент);
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил2" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил2");
			
			Ветка = ДеревоДанныхРаздела.Строки[0];
			
			МногострочныеДанные12
			= Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы12М1];
			Для каждого Строка12 Из МногострочныеДанные12.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				Для каждого Пок Из Строка12.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил2_Лист1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
			НемногострочныеДанные = Ветка.Данные;
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил2_Лист2");
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил3"
			ИЛИ ИмяТекРаздела = "Раздел1Прил4" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил5" Тогда
			
			Если (ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
				И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 2020)
				ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
				
				МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
				
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЕсли;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил5_1" Тогда
			
			Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
				И Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2021 Тогда
				
				МакетРаздел = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
				
				МногострочныеДанные
				= ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы151М1];
				Для каждого СтрокаМнЧ Из МногострочныеДанные.Строки Цикл
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздел);
					Для каждого Пок Из СтрокаМнЧ.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
					ВывестиНаПечатьЛист(ИмяФормы, СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов,
					СтруктураРеквизитовФормы, ДанныеРазделов, ТабличныйДокумент);
				КонецЦикла;
				
			КонецЕсли;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил6"
			ИЛИ ИмяТекРаздела = "Раздел1Прил7" Тогда
			
			Если НЕ ОбщиеРеквизитыРазделов.ВыведенНаПечатьРаздел1Прил6_7 Тогда
				
				ТабличныйДокумент.Очистить();
				МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел1Прил6");
				ТабличныйДокумент.Вывести(МакетРаздела);
				МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел1Прил7");
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Если ОбщиеРеквизитыРазделов.ВыводитьНаПечатьРаздел1Прил6 Тогда
					ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
					СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил6"]);
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если ОбщиеРеквизитыРазделов.ВыводитьНаПечатьРаздел1Прил7 Тогда
					ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
					СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил7"]);
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил6_7");
				СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Приложения 6, 7 к Разделу 1");
				ВывестиНаПечатьЛист(ИмяФормы,
				СтруктураПараметровРаздела,
				ОбщиеРеквизитыРазделов,
				СтруктураРеквизитовФормы,
				ДанныеРазделов,
				ТабличныйДокумент);
				
				ОбщиеРеквизитыРазделов.Вставить("ВыведенНаПечатьРаздел1Прил6_7", Истина);
				
			КонецЕсли;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил8" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
			
			СтрокМнЧНаЛисте = 2;
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00018М102001 = "П00018М102001";
			ИмяП00018М103001 = "П00018М103001";
			ИмяП00018М104001 = "П00018М104001";
			ИмяП00018М105001 = "П00018М105001";
			ИмяП00018М106001 = "П00018М106001";
			ИмяП00018М107001 = "П00018М107001";
			ИмяП00018М108001 = "П00018М108001";
			ИмяП00018М108002 = "П00018М108002";
			ИмяП00018М108003 = "П00018М108003";
			ИмяП00018М108004 = "П00018М108004";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00018М102001 = ИмяП00018М102001 + _ИндСтрокиМнЧ;
					НовИмяП00018М103001 = ИмяП00018М103001 + _ИндСтрокиМнЧ;
					НовИмяП00018М104001 = ИмяП00018М104001 + _ИндСтрокиМнЧ;
					НовИмяП00018М105001 = ИмяП00018М105001 + _ИндСтрокиМнЧ;
					НовИмяП00018М106001 = ИмяП00018М106001 + _ИндСтрокиМнЧ;
					НовИмяП00018М107001 = ИмяП00018М107001 + _ИндСтрокиМнЧ;
					НовИмяП00018М108001 = ИмяП00018М108001 + _ИндСтрокиМнЧ;
					НовИмяП00018М108002 = ИмяП00018М108002 + _ИндСтрокиМнЧ;
					НовИмяП00018М108003 = ИмяП00018М108003 + _ИндСтрокиМнЧ;
					НовИмяП00018М108004 = ИмяП00018М108004 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М107001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108002, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108003, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108004, 0);
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М107001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М107001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М108001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М108002]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108003,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М108003]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М108004,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М108004]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы18М1
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
									  СтруктураРеквизитовФормы,
									  ТабличныйДокумент,
									  СтруктураРеквизитовФормы.мИдГруппы18М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил9" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
			
			СтрокМнЧНаЛисте = 1;
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00019М102001 = "П00019М102001";
			ИмяП00019М103001 = "П00019М103001";
			ИмяП00019М104001 = "П00019М104001";
			ИмяП00019М105001 = "П00019М105001";
			ИмяП00019М106001 = "П00019М106001";
			ИмяП00019М107001 = "П00019М107001";
			ИмяП00019М108001 = "П00019М108001";
			ИмяП00019М108002 = "П00019М108002";
			ИмяП00019М108003 = "П00019М108003";
			ИмяП00019М108004 = "П00019М108004";
			ИмяП00019М109001 = "П00019М109001";
			ИмяП00019М110001 = "П00019М110001";
			ИмяП00019М111001 = "П00019М111001";
			ИмяП00019М112001 = "П00019М112001";
			ИмяП00019М113001 = "П00019М113001";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00019М102001 = ИмяП00019М102001 + _ИндСтрокиМнЧ;
					НовИмяП00019М103001 = ИмяП00019М103001 + _ИндСтрокиМнЧ;
					НовИмяП00019М104001 = ИмяП00019М104001 + _ИндСтрокиМнЧ;
					НовИмяП00019М105001 = ИмяП00019М105001 + _ИндСтрокиМнЧ;
					НовИмяП00019М106001 = ИмяП00019М106001 + _ИндСтрокиМнЧ;
					НовИмяП00019М107001 = ИмяП00019М107001 + _ИндСтрокиМнЧ;
					НовИмяП00019М108001 = ИмяП00019М108001 + _ИндСтрокиМнЧ;
					НовИмяП00019М108002 = ИмяП00019М108002 + _ИндСтрокиМнЧ;
					НовИмяП00019М108003 = ИмяП00019М108003 + _ИндСтрокиМнЧ;
					НовИмяП00019М108004 = ИмяП00019М108004 + _ИндСтрокиМнЧ;
					НовИмяП00019М109001 = ИмяП00019М109001 + _ИндСтрокиМнЧ;
					НовИмяП00019М110001 = ИмяП00019М110001 + _ИндСтрокиМнЧ;
					НовИмяП00019М111001 = ИмяП00019М111001 + _ИндСтрокиМнЧ;
					НовИмяП00019М112001 = ИмяП00019М112001 + _ИндСтрокиМнЧ;
					НовИмяП00019М113001 = ИмяП00019М113001 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М109001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М110001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М111001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М112001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М113001, "");
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108002]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108003]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108004]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М109001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М109001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М110001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М110001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М111001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М111001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М112001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М112001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М113001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М113001]);
						
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы19М1
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
									  СтруктураРеквизитовФормы,
									  ТабличныйДокумент,
									  СтруктураРеквизитовФормы.мИдГруппы19М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел2" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			// Вывод Раздела 2.
			НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
			// Вывод Приложений 1 к Разделу 2.
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
			
			СтрокМнЧНаЛисте = 2;
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00021М101001 = "П00021М101001";
			ИмяП00021М102001 = "П00021М102001";
			ИмяП00021М103001 = "П00021М103001";
			ИмяП00021М104001 = "П00021М104001";
			ИмяП00021М105001 = "П00021М105001";
			ИмяП00021М106001 = "П00021М106001";
			ИмяП00021М106301 = "П00021М106301";
			ИмяП00021М106501 = "П00021М106501";
			ИмяП00021М106701 = "П00021М106701";
			ИмяП00021М106702 = "П00021М106702";
			ИмяП00021М107001 = "П00021М107001";
			ИмяП00021М108001 = "П00021М108001";
			ИмяП00021М109001 = "П00021М109001";
			ИмяП00021М109002 = "П00021М109002";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00021М101001 = ИмяП00021М101001 + _ИндСтрокиМнЧ;
					НовИмяП00021М102001 = ИмяП00021М102001 + _ИндСтрокиМнЧ;
					НовИмяП00021М103001 = ИмяП00021М103001 + _ИндСтрокиМнЧ;
					НовИмяП00021М104001 = ИмяП00021М104001 + _ИндСтрокиМнЧ;
					НовИмяП00021М105001 = ИмяП00021М105001 + _ИндСтрокиМнЧ;
					НовИмяП00021М106001 = ИмяП00021М106001 + _ИндСтрокиМнЧ;
					НовИмяП00021М106301 = ИмяП00021М106301 + _ИндСтрокиМнЧ;
					НовИмяП00021М106501 = ИмяП00021М106501 + _ИндСтрокиМнЧ;
					НовИмяП00021М106701 = ИмяП00021М106701 + _ИндСтрокиМнЧ;
					НовИмяП00021М106702 = ИмяП00021М106702 + _ИндСтрокиМнЧ;
					НовИмяП00021М107001 = ИмяП00021М107001 + _ИндСтрокиМнЧ;
					НовИмяП00021М108001 = ИмяП00021М108001 + _ИндСтрокиМнЧ;
					НовИмяП00021М109001 = ИмяП00021М109001 + _ИндСтрокиМнЧ;
					НовИмяП00021М109002 = ИмяП00021М109002 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106301, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106501, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106701, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106702, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002, 0);
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М101001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106301,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106301]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106501,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106501]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106701,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106701]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106702,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106702]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М107001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М108001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109002]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы21М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
									  СтруктураРеквизитовФормы,
									  ТабличныйДокумент,
									  СтруктураРеквизитовФормы.мИдГруппы21М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел2Прил1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел3" Тогда
			
			ПараметрыПечатиРаздела3 = Новый Структура;
			ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
			ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
			ПараметрыПечатиРаздела3.Вставить("МакетРаздела",
			ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
			
			ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3);
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		Если ИмяТекРаздела = "Раздел1" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1");
			
			ДанныеМнЧ1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
			ДанныеМнЧ2 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
			
			СтрокМнЧ1НаЛисте = 1;
			СтрокМнЧ2НаЛисте = 1;
			
			// Определение количества листов.
			КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
			ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
			ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
			КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
			
			КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
			ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
			ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
			КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
			
			КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧ1ДляПечати = Новый Массив;
			ИмяП00001М106001 = "П00001М106001";
			ИмяП00001М107001 = "П00001М107001";
			ИмяП00001М107101 = "П00001М107101";
			ИмяП00001М107201 = "П00001М107201";
			ИмяП00001М107301 = "П00001М107301";
			
			МассивДанныхМнЧ2ДляПечати = Новый Массив;
			ИмяП00001М208001 = "П00001М208001";
			ИмяП00001М209001 = "П00001М209001";
			ИмяП00001М209101 = "П00001М209101";
			ИмяП00001М209201 = "П00001М209201";
			ИмяП00001М209301 = "П00001М209301";
			
			Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
				
				Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
				ДанныеМнЧ1ДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
					
					НовИмяП00001М106001 = ИмяП00001М106001 + _ИндСтрокиМнЧ;
					НовИмяП00001М107001 = ИмяП00001М107001 + _ИндСтрокиМнЧ;
					НовИмяП00001М107101 = ИмяП00001М107101 + _ИндСтрокиМнЧ;
					НовИмяП00001М107201 = ИмяП00001М107201 + _ИндСтрокиМнЧ;
					НовИмяП00001М107301 = ИмяП00001М107301 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001, "");
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001, 0);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101, 0);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201, 0);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301, 0);
					
					Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М106001]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107001]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107101]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107201]);
						ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301,
						ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107301]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
				
				Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
				ДанныеМнЧ2ДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
					
					НовИмяП00001М208001 = ИмяП00001М208001 + _ИндСтрокиМнЧ;
					НовИмяП00001М209001 = ИмяП00001М209001 + _ИндСтрокиМнЧ;
					НовИмяП00001М209101 = ИмяП00001М209101 + _ИндСтрокиМнЧ;
					НовИмяП00001М209201 = ИмяП00001М209201 + _ИндСтрокиМнЧ;
					НовИмяП00001М209301 = ИмяП00001М209301 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001, "");
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001, 0);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101, 0);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201, 0);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301, 0);
					
					Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М208001]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209001]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209101]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209201]);
						ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301,
						ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209301]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы1М1
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы1М1,
									  ИмяОбластиПреемника);

				КонецЦикла;
				
				Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы1М2
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы1М2,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для Каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
				Для Каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
				Для Каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
				Если НомЛиста = КолЛистовРаздела1 Тогда
					
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздела);
					
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для Каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист2");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
					
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил1" Тогда
			
			МакетРаздел1Прил1 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
				+ "_" + "Раздел1Прил1");
			
			МакетРаздел1Прил1Подр1_1и1_2 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
				+ "_" + "Раздел1Прил1Подр1_1и1_2");
			
			МакетРаздел1Прил1Подр1_3_1 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
				+ "_" + "Раздел1Прил1Подр1_3_1");
			
			МакетРаздел1Прил1Подр1_3_2 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
				+ "_" + "Раздел1Прил1Подр1_3_2");
			
			МакетРаздел1Прил1Подр1_4 = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета"))
				+ "_" + "Раздел1Прил1Подр1_4");
			
			Для Каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
				
				// Подразделы 1.1, 1.2.
				НемногострочныеДанные = Ветка.Строки[0].Строки[0].Данные;
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_1и1_2);
				
				Для Каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				Обл = ТабличныйДокумент.Области.Найти("П000110000101");
				Обл.Имя = "";
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1);
				Обл = ТабличныйДокумент.Области.Найти("П000110000101");
				Обл.Значение = Ветка.Данные.П000110000101;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_1и1_2");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
				// Подраздел 1.3.1.
				МногострочныеДанные131
					= Ветка.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
				Для каждого Строка131 Из МногострочныеДанные131.Строки Цикл
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_1);
					
					Для каждого Пок Из Строка131.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_1");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
				КонецЦикла;
				
				// Подраздел 1.3.2.
				МногострочныеДанные132
				= Ветка.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
				Для каждого Строка132 Из МногострочныеДанные132.Строки Цикл
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_2);
					
					Для каждого Пок Из Строка132.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_2");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
				КонецЦикла;
				
				// Подраздел 1.4.
				МногострочныеДанные14
				= Ветка.Строки[3].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1114М1];
				Для каждого Строка14 Из МногострочныеДанные14.Строки Цикл
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_4);
					
					Для каждого Пок Из Строка14.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
					
					СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
					СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_4");
					ВывестиНаПечатьЛист(ИмяФормы,
										СтруктураПараметровРаздела,
										ОбщиеРеквизитыРазделов,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
										ТабличныйДокумент);
				КонецЦикла;
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил2" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил2");
			
			Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
				
				НемногострочныеДанные = Ветка.Данные;
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил2");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил3"
			ИЛИ ИмяТекРаздела = "Раздел1Прил4"
			ИЛИ ИмяТекРаздела = "Раздел1Прил5_6"
			ИЛИ ИмяТекРаздела = "Раздел1Прил7" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил8" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
			
			СтрокМнЧНаЛисте = 3;
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00018М102001 = "П00018М102001";
			ИмяП00018М103001 = "П00018М103001";
			ИмяП00018М104001 = "П00018М104001";
			ИмяП00018М105001 = "П00018М105001";
			ИмяП00018М106001 = "П00018М106001";
			ИмяП00018М106002 = "П00018М106002";
			ИмяП00018М106003 = "П00018М106003";
			ИмяП00018М106004 = "П00018М106004";
			ИмяП00018М106005 = "П00018М106005";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00018М102001 = ИмяП00018М102001 + _ИндСтрокиМнЧ;
					НовИмяП00018М103001 = ИмяП00018М103001 + _ИндСтрокиМнЧ;
					НовИмяП00018М104001 = ИмяП00018М104001 + _ИндСтрокиМнЧ;
					НовИмяП00018М105001 = ИмяП00018М105001 + _ИндСтрокиМнЧ;
					НовИмяП00018М106001 = ИмяП00018М106001 + _ИндСтрокиМнЧ;
					НовИмяП00018М106002 = ИмяП00018М106002 + _ИндСтрокиМнЧ;
					НовИмяП00018М106003 = ИмяП00018М106003 + _ИндСтрокиМнЧ;
					НовИмяП00018М106004 = ИмяП00018М106004 + _ИндСтрокиМнЧ;
					НовИмяП00018М106005 = ИмяП00018М106005 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106002, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106003, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106004, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106005, 0);
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106002]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106003,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106003]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106004,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106004]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106005,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106005]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы18М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы18М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил9" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
			
			СтрокМнЧНаЛисте = 2;
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00019М102001 = "П00019М102001";
			ИмяП00019М103001 = "П00019М103001";
			ИмяП00019М104001 = "П00019М104001";
			ИмяП00019М105001 = "П00019М105001";
			ИмяП00019М106001 = "П00019М106001";
			ИмяП00019М107001 = "П00019М107001";
			ИмяП00019М107002 = "П00019М107002";
			ИмяП00019М108001 = "П00019М108001";
			ИмяП00019М108002 = "П00019М108002";
			ИмяП00019М108003 = "П00019М108003";
			ИмяП00019М108004 = "П00019М108004";
			ИмяП00019М108005 = "П00019М108005";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00019М102001 = ИмяП00019М102001 + _ИндСтрокиМнЧ;
					НовИмяП00019М103001 = ИмяП00019М103001 + _ИндСтрокиМнЧ;
					НовИмяП00019М104001 = ИмяП00019М104001 + _ИндСтрокиМнЧ;
					НовИмяП00019М105001 = ИмяП00019М105001 + _ИндСтрокиМнЧ;
					НовИмяП00019М106001 = ИмяП00019М106001 + _ИндСтрокиМнЧ;
					НовИмяП00019М107001 = ИмяП00019М107001 + _ИндСтрокиМнЧ;
					НовИмяП00019М107002 = ИмяП00019М107002 + _ИндСтрокиМнЧ;
					НовИмяП00019М108001 = ИмяП00019М108001 + _ИндСтрокиМнЧ;
					НовИмяП00019М108002 = ИмяП00019М108002 + _ИндСтрокиМнЧ;
					НовИмяП00019М108003 = ИмяП00019М108003 + _ИндСтрокиМнЧ;
					НовИмяП00019М108004 = ИмяП00019М108004 + _ИндСтрокиМнЧ;
					НовИмяП00019М108005 = ИмяП00019М108005 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107002, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108005, 0);
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107002]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108002]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108003]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108004]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108005,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108005]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы19М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы19М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел1Прил10" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
			
			СтрокМнЧНаЛисте = 2;
			
			// Определение количества листов (строки 020-100).
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных (строки 020-100).
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00110М102001 = "П00110М102001";
			ИмяП00110М103001 = "П00110М103001";
			ИмяП00110М104001 = "П00110М104001";
			ИмяП00110М105001 = "П00110М105001";
			ИмяП00110М106001 = "П00110М106001";
			ИмяП00110М107001 = "П00110М107001";
			ИмяП00110М108001 = "П00110М108001";
			ИмяП00110М109001 = "П00110М109001";
			ИмяП00110М110001 = "П00110М110001";
			ИмяП00110М110002 = "П00110М110002";
			ИмяП00110М110003 = "П00110М110003";
			ИмяП00110М110004 = "П00110М110004";
			ИмяП00110М110005 = "П00110М110005";
			
			ДеревоДанныхПодчМнЧ = Новый ДеревоЗначений;
			ДеревоДанныхПодчМнЧ.Колонки.Добавить("Данные");
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00110М102001 = ИмяП00110М102001 + _ИндСтрокиМнЧ;
					НовИмяП00110М103001 = ИмяП00110М103001 + _ИндСтрокиМнЧ;
					НовИмяП00110М104001 = ИмяП00110М104001 + _ИндСтрокиМнЧ;
					НовИмяП00110М105001 = ИмяП00110М105001 + _ИндСтрокиМнЧ;
					НовИмяП00110М106001 = ИмяП00110М106001 + _ИндСтрокиМнЧ;
					НовИмяП00110М107001 = ИмяП00110М107001 + _ИндСтрокиМнЧ;
					НовИмяП00110М108001 = ИмяП00110М108001 + _ИндСтрокиМнЧ;
					НовИмяП00110М109001 = ИмяП00110М109001 + _ИндСтрокиМнЧ;
					НовИмяП00110М110001 = ИмяП00110М110001 + _ИндСтрокиМнЧ;
					НовИмяП00110М110002 = ИмяП00110М110002 + _ИндСтрокиМнЧ;
					НовИмяП00110М110003 = ИмяП00110М110003 + _ИндСтрокиМнЧ;
					НовИмяП00110М110004 = ИмяП00110М110004 + _ИндСтрокиМнЧ;
					НовИмяП00110М110005 = ИмяП00110М110005 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М104001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М105001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М106001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М107001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М108001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М109001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110002, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110003, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110004, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110005, 0);
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М107001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М107001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М108001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М108001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М109001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М109001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110002]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110003,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110003]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110004,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110004]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110005,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110005]);
						
						// Заполнение временного дерева многострочных данных (строки 110-140).
						ДанныеПодчМнЧ = ДанныеМнЧ.Строки[ИндСПриращением - 1].ДанныеМногострочныхЧастей[
						СтруктураРеквизитовФормы.мИдГруппы110М2];
						Для каждого СтрокаДанныхПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
							ПодчиненнаяСтрока = ДеревоДанныхПодчМнЧ.Строки.Добавить();
							ПодчиненнаяСтрока.Данные
							= ОбщегоНазначения.СкопироватьРекурсивно(СтрокаДанныхПодчМнЧ.Данные);
						КонецЦикла;
						
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов (строки 020-100).
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы110М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы110М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЦикла;
			
			СтрокМнЧНаЛисте = 3;
		
			// Определение количества листов (строки 110-140).
			КолСтрокМнЧ = ДеревоДанныхПодчМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных (строки 110-140).
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00110М211001 = "П00110М211001";
			ИмяП00110М212001 = "П00110М212001";
			ИмяП00110М213001 = "П00110М213001";
			ИмяП00110М214001 = "П00110М214001";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00110М211001 = ИмяП00110М211001 + _ИндСтрокиМнЧ;
					НовИмяП00110М212001 = ИмяП00110М212001 + _ИндСтрокиМнЧ;
					НовИмяП00110М213001 = ИмяП00110М213001 + _ИндСтрокиМнЧ;
					НовИмяП00110М214001 = ИмяП00110М214001 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М211001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М212001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М213001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М214001, "");
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М211001,
						ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М211001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М212001,
						ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М212001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М213001,
						ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М213001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00110М214001,
						ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М214001]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
		
			// Вывод листов (строки 185-200).
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы110М2 + "_1"
					+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы110М2,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				СтруктураРеквизитовФормы.мИдГруппы110М2]["ИменаГраф"];
				Для Ном = 1 По СтрокМнЧНаЛисте Цикл
					Для каждого ИмяПок Из МассивИменГраф Цикл
						Обл = ТабличныйДокумент.Области.Найти(ИмяПок + "_1"
						+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном));
						Если Обл <> Неопределено Тогда
							Обл.Имя = ИмяПок + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист2");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел2" Тогда
			
			МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
			
			// Вывод Раздела 2.
			НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
			// Вывод Приложений 1 к Разделу 2.
			ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
			
			СтрокМнЧНаЛисте = 2;
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00021М101001 = "П00021М101001";
			ИмяП00021М102001 = "П00021М102001";
			ИмяП00021М103001 = "П00021М103001";
			ИмяП00021М104001 = "П00021М104001";
			ИмяП00021М105001 = "П00021М105001";
			ИмяП00021М106001 = "П00021М106001";
			ИмяП00021М107001 = "П00021М107001";
			ИмяП00021М108001 = "П00021М108001";
			ИмяП00021М109001 = "П00021М109001";
			ИмяП00021М109002 = "П00021М109002";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00021М101001 = ИмяП00021М101001 + _ИндСтрокиМнЧ;
					НовИмяП00021М102001 = ИмяП00021М102001 + _ИндСтрокиМнЧ;
					НовИмяП00021М103001 = ИмяП00021М103001 + _ИндСтрокиМнЧ;
					НовИмяП00021М104001 = ИмяП00021М104001 + _ИндСтрокиМнЧ;
					НовИмяП00021М105001 = ИмяП00021М105001 + _ИндСтрокиМнЧ;
					НовИмяП00021М106001 = ИмяП00021М106001 + _ИндСтрокиМнЧ;
					НовИмяП00021М107001 = ИмяП00021М107001 + _ИндСтрокиМнЧ;
					НовИмяП00021М108001 = ИмяП00021М108001 + _ИндСтрокиМнЧ;
					НовИмяП00021М109001 = ИмяП00021М109001 + _ИндСтрокиМнЧ;
					НовИмяП00021М109002 = ИмяП00021М109002 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001, '00010101');
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001, 0);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002, 0);
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М101001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М102001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М103001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М104001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М105001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М107001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М108001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109001]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109002]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы21М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
							  		  СтруктураРеквизитовФормы,
							          ТабличныйДокумент,
							  		  СтруктураРеквизитовФормы.мИдГруппы21М1,
									  ИмяОбластиПреемника);
				КонецЦикла;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел2Прил1");
				ВывестиНаПечатьЛист(ИмяФормы,
									СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЦикла;
			
		ИначеЕсли ИмяТекРаздела = "Раздел3" Тогда
			
			ПараметрыПечатиРаздела3 = Новый Структура;
			ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
			ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
			ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ЭтотОбъект.ПолучитьМакет(
				Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
			
			ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДеревоДанныхРаздела = Неопределено;
	
КонецПроцедуры

Процедура ПечатьРаздела3(ИмяФормы, СтруктураРеквизитовФормы, ДанныеРазделов, ПараметрыПечатиРаздела3)
	
	ДеревоДанныхРаздела
	= ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	Если ПараметрыПечатиРаздела3.Свойство("ИндексТекущейСтраницыРаздела3") Тогда
		
		ПараметрыПечатиРаздела3.Вставить("Ветка",
		ДеревоДанныхРаздела.Строки[ПараметрыПечатиРаздела3.ИндексТекущейСтраницыРаздела3]);
		
		ПечатьТекущейСтраницыРаздела3(ИмяФормы, СтруктураРеквизитовФормы,
			ДанныеРазделов, ПараметрыПечатиРаздела3);
		
	Иначе
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			ПараметрыПечатиРаздела3.Вставить("Ветка", Ветка);
			ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3", ДеревоДанныхРаздела.Строки.Индекс(Ветка));
			
			ПечатьТекущейСтраницыРаздела3(ИмяФормы, СтруктураРеквизитовФормы,
				ДанныеРазделов, ПараметрыПечатиРаздела3);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьТекущейСтраницыРаздела3(ИмяФормы,
										СтруктураРеквизитовФормы,
										ДанныеРазделов,
									 	ПараметрыПечатиРаздела3)
	
	Ветка                  = ПараметрыПечатиРаздела3.Ветка;
	МакетРаздела           = ПараметрыПечатиРаздела3.МакетРаздела;
	СтруктураПараметров    = ПараметрыПечатиРаздела3.СтруктураПараметров;
	ОбщиеРеквизитыРазделов = ПараметрыПечатиРаздела3.ОбщиеРеквизитыРазделов;
	НомерТекущейСтраницы   = ПараметрыПечатиРаздела3.ИндексТекущейСтраницыРаздела3 + 1;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
		
	ТабличныйДокумент.Вывести(МакетРаздела);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		НемногострочныеДанные = Ветка.Данные;
		
		СтруктПарам = Новый Структура;
		СтруктПарам.Вставить("Фам", НемногострочныеДанные.П000310004001);
		СтруктПарам.Вставить("Имя", НемногострочныеДанные.П000310005001);
		СтруктПарам.Вставить("Отч", НемногострочныеДанные.П000310006001);
		СтруктПарам.Вставить("ДатаРожд", НемногострочныеДанные.П000310007001);
		СтруктПарам.Вставить("НомерСтраницы", Формат(НомерТекущейСтраницы, "ЧГ="));
		ПредстСтраницы = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
		
		КЧ = Новый КвалификаторыЧисла(17, 2);
		КС = Новый КвалификаторыСтроки(4);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , , КЧ);
		
		// Подготовка данных подраздела 3.2.1.
		//
		ТЗ_321_Мес1 = Новый ТаблицаЗначений;
		ТЗ_321_Мес1.Колонки.Добавить("П00321М113001", ОписаниеТиповС);
		ТЗ_321_Мес1.Колонки.Добавить("П00321М114001", ОписаниеТиповЧ);
		ТЗ_321_Мес1.Колонки.Добавить("П00321М115001", ОписаниеТиповЧ);
		ТЗ_321_Мес1.Колонки.Добавить("П00321М116001", ОписаниеТиповЧ);
		ТЗ_321_Мес1.Колонки.Добавить("П00321М117001", ОписаниеТиповЧ);
		ТЗ_321_Мес2 = ТЗ_321_Мес1.Скопировать();
		ТЗ_321_Мес3 = ТЗ_321_Мес1.Скопировать();
		ТЗ_321_Мес0 = ТЗ_321_Мес1.Скопировать();
		
		ДанныеМнЧ321М1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
		
		Для каждого СтрокаМнЧ321М1 Из ДанныеМнЧ321М1.Строки Цикл
			
			Стр120 = СокрЛП(СтрокаМнЧ321М1.Данные["П00321М112001"]);
			Стр130 = СокрЛП(СтрокаМнЧ321М1.Данные["П00321М113001"]);
			Стр140 = СтрокаМнЧ321М1.Данные["П00321М114001"];
			Стр150 = СтрокаМнЧ321М1.Данные["П00321М115001"];
			Стр160 = СтрокаМнЧ321М1.Данные["П00321М116001"];
			Стр170 = СтрокаМнЧ321М1.Данные["П00321М117001"];
			
			НовСтр = Неопределено;
			
			Если Стр120 = "1" Тогда
				НовСтр = ТЗ_321_Мес1.Добавить();
			ИначеЕсли Стр120 = "2" Тогда
				НовСтр = ТЗ_321_Мес2.Добавить();
			ИначеЕсли Стр120 = "3" Тогда
				НовСтр = ТЗ_321_Мес3.Добавить();
			ИначеЕсли ЗначениеЗаполнено(Стр130) ИЛИ ЗначениеЗаполнено(Стр140) ИЛИ ЗначениеЗаполнено(Стр150)
				ИЛИ ЗначениеЗаполнено(Стр160) ИЛИ ЗначениеЗаполнено(Стр170) Тогда
				НовСтр = ТЗ_321_Мес0.Добавить();
			КонецЕсли;
			
			Если НовСтр <> Неопределено Тогда
				Для каждого Пок Из СтрокаМнЧ321М1.Данные Цикл
					Если Пок.Ключ = "П00321М112001" Тогда
						Продолжить;
					КонецЕсли;
					НовСтр[Пок.Ключ] = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		ТЗ_321_Мес1.Сортировать("П00321М113001");
		ТЗ_321_Мес2.Сортировать("П00321М113001");
		ТЗ_321_Мес3.Сортировать("П00321М113001");
		ТЗ_321_Мес0.Сортировать("П00321М113001");
		
		// Подготовка данных подраздела 3.2.2.
		//
		ТЗ_322_Мес1 = Новый ТаблицаЗначений;
		ТЗ_322_Мес1.Колонки.Добавить("П00322М119001", ОписаниеТиповС);
		ТЗ_322_Мес1.Колонки.Добавить("П00322М120001", ОписаниеТиповЧ);
		ТЗ_322_Мес1.Колонки.Добавить("П00322М121001", ОписаниеТиповЧ);
		ТЗ_322_Мес2 = ТЗ_322_Мес1.Скопировать();
		ТЗ_322_Мес3 = ТЗ_322_Мес1.Скопировать();
		ТЗ_322_Мес0 = ТЗ_322_Мес1.Скопировать();
		
		ДанныеМнЧ322М1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
		
		Для каждого СтрокаМнЧ322М1 Из ДанныеМнЧ322М1.Строки Цикл
			
			Стр180 = СокрЛП(СтрокаМнЧ322М1.Данные["П00322М118001"]);
			Стр190 = СокрЛП(СтрокаМнЧ322М1.Данные["П00322М119001"]);
			Стр200 = СтрокаМнЧ322М1.Данные["П00322М120001"];
			Стр210 = СтрокаМнЧ322М1.Данные["П00322М121001"];
			
			НовСтр = Неопределено;
			
			Если Стр180 = "1" Тогда
				НовСтр = ТЗ_322_Мес1.Добавить();
			ИначеЕсли Стр180 = "2" Тогда
				НовСтр = ТЗ_322_Мес2.Добавить();
			ИначеЕсли Стр180 = "3" Тогда
				НовСтр = ТЗ_322_Мес3.Добавить();
			ИначеЕсли ЗначениеЗаполнено(Стр190) ИЛИ ЗначениеЗаполнено(Стр200) ИЛИ ЗначениеЗаполнено(Стр210) Тогда
				НовСтр = ТЗ_322_Мес0.Добавить();
			КонецЕсли;
			
			Если НовСтр <> Неопределено Тогда
				Для каждого Пок Из СтрокаМнЧ322М1.Данные Цикл
					Если Пок.Ключ = "П00322М118001" Тогда
						Продолжить;
					КонецЕсли;
					НовСтр[Пок.Ключ] = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		ТЗ_322_Мес1.Сортировать("П00322М119001");
		ТЗ_322_Мес2.Сортировать("П00322М119001");
		ТЗ_322_Мес3.Сортировать("П00322М119001");
		ТЗ_322_Мес0.Сортировать("П00322М119001");
		
		// Вывод данных подразделов 3.2.1, 3.2.2 с заполненным месяцем.
		//
		КолЛистов = Макс(?(ТЗ_321_Мес0.Количество() > 0 ИЛИ ТЗ_322_Мес0.Количество() > 0, 0, 1),
		ТЗ_321_Мес1.Количество(), ТЗ_321_Мес2.Количество(), ТЗ_321_Мес3.Количество(),
		ТЗ_322_Мес1.Количество(), ТЗ_322_Мес2.Количество(), ТЗ_322_Мес3.Количество());
		
		Для НомЛиста = 1 По КолЛистов Цикл
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Если НомЛиста = 1 Тогда
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Для Ном = 1 По 2 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы321М1
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
								  СтруктураРеквизитовФормы,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы.мИдГруппы321М1,
								  ИмяОбластиПреемника);
				
				ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы322М1
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
								  СтруктураРеквизитовФормы,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы.мИдГруппы322М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Для НомМес = 1 По 3 Цикл
				НомМес_Строка = Формат(НомМес, "ЧГ=");
				Обл = ТабличныйДокумент.Области.Найти("П00321М112001_" + НомМес_Строка);
				Если Обл <> Неопределено Тогда
					Обл.Значение = НомМес_Строка;
				КонецЕсли;
				Обл = ТабличныйДокумент.Области.Найти("П00322М118001_" + НомМес_Строка);
				Если Обл <> Неопределено Тогда
					Обл.Значение = НомМес_Строка;
				КонецЕсли;
			КонецЦикла;
			
			Если НомЛиста <= ТЗ_321_Мес1.Количество() Тогда
				СтрокаТЗ = ТЗ_321_Мес1[НомЛиста - 1];
				Для каждого Колонка Из ТЗ_321_Мес1.Колонки Цикл
					Обл = ТабличныйДокумент.Области.Найти(Колонка.Имя + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = СтрокаТЗ[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НомЛиста <= ТЗ_321_Мес2.Количество() Тогда
				СтрокаТЗ = ТЗ_321_Мес2[НомЛиста - 1];
				Для каждого Колонка Из ТЗ_321_Мес2.Колонки Цикл
					Обл = ТабличныйДокумент.Области.Найти(Колонка.Имя + "_2");
					Если Обл <> Неопределено Тогда
						Обл.Значение = СтрокаТЗ[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НомЛиста <= ТЗ_321_Мес3.Количество() Тогда
				СтрокаТЗ = ТЗ_321_Мес3[НомЛиста - 1];
				Для каждого Колонка Из ТЗ_321_Мес3.Колонки Цикл
					Обл = ТабличныйДокумент.Области.Найти(Колонка.Имя + "_3");
					Если Обл <> Неопределено Тогда
						Обл.Значение = СтрокаТЗ[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НомЛиста <= ТЗ_322_Мес1.Количество() Тогда
				СтрокаТЗ = ТЗ_322_Мес1[НомЛиста - 1];
				Для каждого Колонка Из ТЗ_322_Мес1.Колонки Цикл
					Обл = ТабличныйДокумент.Области.Найти(Колонка.Имя + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = СтрокаТЗ[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НомЛиста <= ТЗ_322_Мес2.Количество() Тогда
				СтрокаТЗ = ТЗ_322_Мес2[НомЛиста - 1];
				Для каждого Колонка Из ТЗ_322_Мес2.Колонки Цикл
					Обл = ТабличныйДокумент.Области.Найти(Колонка.Имя + "_2");
					Если Обл <> Неопределено Тогда
						Обл.Значение = СтрокаТЗ[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НомЛиста <= ТЗ_322_Мес3.Количество() Тогда
				СтрокаТЗ = ТЗ_322_Мес3[НомЛиста - 1];
				Для каждого Колонка Из ТЗ_322_Мес3.Колонки Цикл
					Обл = ТабличныйДокумент.Области.Найти(Колонка.Имя + "_3");
					Если Обл <> Неопределено Тогда
						Обл.Значение = СтрокаТЗ[Колонка.Имя];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3");
			СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Раздел 3. " + ПредстСтраницы);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
		КонецЦикла;
		
		// Вывод данных подразделов 3.2.1, 3.2.2 с незаполненным месяцем.
		//
		СтрокМнЧ1НаЛисте = 3;
		СтрокМнЧ2НаЛисте = 3;
		
		КолСтрокМнЧ1 = ТЗ_321_Мес0.Количество();
		ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
		ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
		КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
		
		КолСтрокМнЧ2 = ТЗ_322_Мес0.Количество();
		ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
		ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
		КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
		
		КолЛистов = Макс(КолЛистов1, КолЛистов2);
		
		МассивДанныхМнЧ1ДляПечати = Новый Массив;
		ИмяП00321М113001 = "П00321М113001";
		ИмяП00321М114001 = "П00321М114001";
		ИмяП00321М115001 = "П00321М115001";
		ИмяП00321М116001 = "П00321М116001";
		ИмяП00321М117001 = "П00321М117001";
		
		МассивДанныхМнЧ2ДляПечати = Новый Массив;
		ИмяП00322М119001 = "П00322М119001";
		ИмяП00322М120001 = "П00322М120001";
		ИмяП00322М121001 = "П00322М121001";
		
		Инд_321_Мес0 = 0;
		Инд_322_Мес0 = 0;
		
		Для НомЛиста = 1 По КолЛистов Цикл
			Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
			ДанныеМнЧ1ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
				
				НовИмяП00321М113001 = ИмяП00321М113001 + _ИндСтрокиМнЧ;
				НовИмяП00321М114001 = ИмяП00321М114001 + _ИндСтрокиМнЧ;
				НовИмяП00321М115001 = ИмяП00321М115001 + _ИндСтрокиМнЧ;
				НовИмяП00321М116001 = ИмяП00321М116001 + _ИндСтрокиМнЧ;
				НовИмяП00321М117001 = ИмяП00321М117001 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М113001, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М114001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М115001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М116001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М117001, 0);
				
				Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М113001, ТЗ_321_Мес0[Инд_321_Мес0][ИмяП00321М113001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М114001, ТЗ_321_Мес0[Инд_321_Мес0][ИмяП00321М114001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М115001, ТЗ_321_Мес0[Инд_321_Мес0][ИмяП00321М115001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М116001, ТЗ_321_Мес0[Инд_321_Мес0][ИмяП00321М116001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М117001, ТЗ_321_Мес0[Инд_321_Мес0][ИмяП00321М117001]);
					Инд_321_Мес0 = Инд_321_Мес0 + 1;
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
			
			Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
			ДанныеМнЧ2ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
				
				НовИмяП00322М119001 = ИмяП00322М119001 + _ИндСтрокиМнЧ;
				НовИмяП00322М120001 = ИмяП00322М120001 + _ИндСтрокиМнЧ;
				НовИмяП00322М121001 = ИмяП00322М121001 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М119001, "");
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М120001, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М121001, 0);
				
				Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М119001, ТЗ_322_Мес0[Инд_322_Мес0][ИмяП00322М119001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М120001, ТЗ_322_Мес0[Инд_322_Мес0][ИмяП00322М120001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М121001, ТЗ_322_Мес0[Инд_322_Мес0][ИмяП00322М121001]);
					Инд_322_Мес0 = Инд_322_Мес0 + 1;
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
		КонецЦикла;
		
		Для НомЛиста = 1 По КолЛистов Цикл
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По 2 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы321М1
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
								  СтруктураРеквизитовФормы,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы.мИдГруппы321М1,
								  ИмяОбластиПреемника);
				
				ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы322М1
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
								  СтруктураРеквизитовФормы,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы.мИдГруппы322М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 И Макс(ТЗ_321_Мес1.Количество(), ТЗ_321_Мес2.Количество(), ТЗ_321_Мес3.Количество(),
				ТЗ_322_Мес1.Количество(), ТЗ_322_Мес2.Количество(), ТЗ_322_Мес3.Количество()) = 0 Тогда
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3");
			СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Раздел 3. " + ПредстСтраницы);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
		КонецЦикла;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		НемногострочныеДанные = Ветка.Данные;
		Для каждого Пок Из НемногострочныеДанные Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		Обл = ТабличныйДокумент.Области.Найти("П000030002001");
		Если Обл <> Неопределено Тогда
			Обл.Текст = СокрЛП(ДанныеРазделов.Титульный.Период);
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("П000030003001");
		Если Обл <> Неопределено Тогда
			Обл.Текст = СокрЛП(ДанныеРазделов.Титульный.ОтчетГод);
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("П000030005001");
		Если Обл <> Неопределено Тогда
			Обл.Текст = ?(ЗначениеЗаполнено(ДанныеРазделов.Титульный.ДатаПодписи),
			Формат(ДанныеРазделов.Титульный.ДатаПодписи, "ДФ=""ддММгггг"""), "--------");
		КонецЕсли;
		
		СтруктПарам = Новый Структура;
		СтруктПарам.Вставить("Фам", НемногострочныеДанные.П000310008001);
		СтруктПарам.Вставить("Имя", НемногострочныеДанные.П000310009001);
		СтруктПарам.Вставить("Отч", НемногострочныеДанные.П000310010001);
		СтруктПарам.Вставить("ДатаРожд", НемногострочныеДанные.П000310011001);
		СтруктПарам.Вставить("НомерСтраницы", Формат(НомерТекущейСтраницы, "ЧГ="));
		ПредстСтраницы = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
		
		СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3_Лист1");
		СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Раздел 3. " + ПредстСтраницы);
		ВывестиНаПечатьЛист(ИмяФормы,
							СтруктураПараметровРаздела,
							ОбщиеРеквизитыРазделов,
							СтруктураРеквизитовФормы,
							ДанныеРазделов,
							ТабличныйДокумент);
		
		ДанныеМнЧ1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
		ДанныеМнЧ2 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
		
		СтрокМнЧ1НаЛисте = 3;
		СтрокМнЧ2НаЛисте = 3;
		
		// Определение количества листов.
		КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
		ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
		ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
		КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
		
		КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
		ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
		ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
		КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
		
		КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧ1ДляПечати = Новый Массив;
		ИмяП00321М119001 = "П00321М119001";
		ИмяП00321М120001 = "П00321М120001";
		ИмяП00321М121001 = "П00321М121001";
		ИмяП00321М122001 = "П00321М122001";
		ИмяП00321М123001 = "П00321М123001";
		ИмяП00321М124001 = "П00321М124001";
		
		МассивДанныхМнЧ2ДляПечати = Новый Массив;
		ИмяП00322М126001 = "П00322М126001";
		ИмяП00322М127001 = "П00322М127001";
		ИмяП00322М128001 = "П00322М128001";
		ИмяП00322М129001 = "П00322М129001";
		
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
			ДанныеМнЧ1ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
				
				НовИмяП00321М119001 = ИмяП00321М119001 + _ИндСтрокиМнЧ;
				НовИмяП00321М120001 = ИмяП00321М120001 + _ИндСтрокиМнЧ;
				НовИмяП00321М121001 = ИмяП00321М121001 + _ИндСтрокиМнЧ;
				НовИмяП00321М122001 = ИмяП00321М122001 + _ИндСтрокиМнЧ;
				НовИмяП00321М123001 = ИмяП00321М123001 + _ИндСтрокиМнЧ;
				НовИмяП00321М124001 = ИмяП00321М124001 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М119001, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М120001, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М121001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М122001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М123001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М124001, 0);
				
				Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М119001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М119001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М120001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М120001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М121001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М121001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М122001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М122001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М123001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М123001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М124001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М124001]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
			
			Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
			ДанныеМнЧ2ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
				
				НовИмяП00322М126001 = ИмяП00322М126001 + _ИндСтрокиМнЧ;
				НовИмяП00322М127001 = ИмяП00322М127001 + _ИндСтрокиМнЧ;
				НовИмяП00322М128001 = ИмяП00322М128001 + _ИндСтрокиМнЧ;
				НовИмяП00322М129001 = ИмяП00322М129001 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М126001, "");
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М127001, "");
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М128001, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М129001, 0);
				
				Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М126001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М126001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М127001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М127001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М128001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М128001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М129001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М129001]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы321М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
			  	  			   	  СтруктураРеквизитовФормы,
							      ТабличныйДокумент,
							  	  СтруктураРеквизитовФормы.мИдГруппы321М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы322М1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
							  	  СтруктураРеквизитовФормы,
			      			   	  ТабличныйДокумент,
							  	  СтруктураРеквизитовФормы.мИдГруппы322М1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = Ветка.Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3_Лист2");
			СтруктураПараметровРаздела.Вставить("НаименованиеЛиста", "Раздел 3. " + ПредстСтраницы);
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВставитьДопСтроку(ИмяФормы,
							СтруктураРеквизитовФормы,
							ТабличныйДокумент,
							Знач ИмяГруппы,
							Знач ИмяОбластиПреемника,
							ЭтоАвтоВставкаПодчиненнойМнЧ = Ложь) Экспорт
	
	НачИндекс = "_1";
	
	Если СтрНайти(ИмяОбластиПреемника, "ДобавлениеСтроки" + ИмяГруппы) > 0 Тогда
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти("МногострочнаяЧасть" + ИмяГруппы);
		
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТаблДок.Область(ИскомаяОбласть.Имя);
		ВставляемаяОбласть.Имя = "";
		
		НовКоординаты = РегламентированнаяОтчетностьКлиентСервер.СтрокаСКоординатамиПоказателя(ИмяОбластиПреемника);
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординаты, "_");
		НачКоординаты = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординаты = НачКоординаты + НачИндекс;
		КонецЦикла;
		
		ПреИндекс_Число = РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(ИмяОбластиПреемника);
		НовИндекс_Число = ?(ЭтоАвтоВставкаПодчиненнойМнЧ, 1, ПреИндекс_Число + 1);
		
		ПреИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ПреИндекс_Число);
		НовИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		НачПостфикс = ИмяГруппы + НачКоординаты + НачИндекс;
		ПреПостфикс = ИмяГруппы + НовКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + НовКоординаты + НовИндекс;
		
		МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			
			НачИмяОбл = ИмяГрафы + НачКоординаты + НачИндекс;
			НовИмяОбл = ИмяГрафы + НовКоординаты + НовИндекс;
			
			ОбластьЯчейки = ВремТаблДок.Области[НачИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ОбластьЯчейки.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НачПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		КонецЕсли;
		
		Если ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
			КонецЕсли;
		Иначе
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Истина;
				Обл.Текст = "х";
				Если НовИндекс_Число = 2 Тогда
					Если Обл <> Неопределено Тогда
						Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
						Обл.Гиперссылка = Истина;
						Обл.Текст = "х";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		КонецЕсли;
		
		ОблПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемника);
		ОблПреемник.Имя = "ДобавлениеСтроки" + НовПостфикс;
		
		// Изменения в оформлении ячеек: установка значения "НетЛинии"/"Сплошная" для
		// свойства "ГраницаСнизу" (в случае задания номеров специальных колонок):
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Удаление линии в определенных колонках последней (до добавления) строки.
				Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
					Обл = ТабличныйДокумент.Область(
						ОблПреемник.Верх - 1, НомКолонки, ОблПреемник.Верх - 1, НомКолонки);
					Если Обл <> Неопределено Тогда
						Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					КонецЕсли;
				КонецЕсли;
				// Установка линии в определенных колонках добавляемой строки.
				Обл = ВремТаблДок.Область(
					ВставляемаяОбласть.Низ, НомКолонки, ВставляемаяОбласть.Низ, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ОблПреемник_ = ТабличныйДокумент.Область(
			ОблПреемник.Верх, , ОблПреемник.Верх + ИскомаяОбласть.Низ - ИскомаяОбласть.Верх, );
		ТабличныйДокумент.ВставитьОбласть(
			ВставляемаяОбласть, ОблПреемник_, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			// Установка текущей области после добавления строки.
			НовИмяТекОбл = МассивИменГраф[0] + НовКоординаты + НовИндекс;
			НовТекОбл = ТабличныйДокумент.Области[НовИмяТекОбл];
			ТабличныйДокумент.ТекущаяОбласть = НовТекОбл;
		КонецЕсли;
		
	КонецЕсли;
	
	ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		ИмяГруппы]["ИменаПодчиненныхГрупп"];
	Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
		НовКоординатыДляПодчОбласти = НовКоординаты + НовИндекс;
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординатыДляПодчОбласти, "_");
		НачКоординатыДляПодчОбласти = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординатыДляПодчОбласти = НачКоординатыДляПодчОбласти + НачИндекс;
		КонецЦикла;
		
		НачИндВставляемойОбласти = НачИндекс;
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
			"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		
		Если ИскомаяОбласть = Неопределено Тогда
			НачИндВставляемойОбласти = 1;
			Пока ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ИмяПодчГруппы
				+ НачКоординатыДляПодчОбласти + "_" + Формат(НачИндВставляемойОбласти, "ЧГ=")) = Неопределено Цикл
				НачИндВставляемойОбласти = НачИндВставляемойОбласти + 1;
			КонецЦикла;
			НачИндВставляемойОбласти = "_" + Формат(НачИндВставляемойОбласти, "ЧГ=");
			ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
				"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		КонецЕсли;
		
		ВремТабличныйДокумент = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТабличныйДокумент.Область(ИскомаяОбласть.Имя);
		Для каждого ОбластьЯчейки Из ВремТабличныйДокумент.Области Цикл
			ОбластьЯчейки.Имя = СтрЗаменить(ОбластьЯчейки.Имя,
				ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти,
				ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс);
		КонецЦикла;
		ИмяОбластиПреемникаДляПодчОбласти = СтрЗаменить(ИмяОбластиПреемника, ПреПостфикс, НовПостфикс);
		ОбластьПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемникаДляПодчОбласти);
		
		ТабличныйДокумент.ВставитьОбласть(ВставляемаяОбласть, ОбластьПреемник, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		ИмяОбластиПреемникаДляПодчОбласти = "ДобавлениеСтроки" + ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс;
		
		ВставитьДопСтроку(ИмяФормы,
						  СтруктураРеквизитовФормы,
						  ТабличныйДокумент,
						  ИмяПодчГруппы,
						  ИмяОбластиПреемникаДляПодчОбласти,
						  Истина);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПечатнуюФорму(ИмяФормы,
								 ПараметрыПечати,
								 МакетПечатнойФормы,
								 ОбщиеРеквизитыРазделов,
								 ДанныеРазделов,
								 ТабличныйДокумент)
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
		
		ИменаСуммовыхПоказателейПодраздела3_2 = Новый Массив;
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М114001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М115001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М116001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М117001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М120001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М121001");
		
		Если ПараметрыПечати.ИмяСтраницы = "Раздел1Прил6_7" Тогда
			
			МакетыФормОтчета = Новый Массив;
			МакетыФормОтчета.Добавить(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_Раздел1Прил6"));
			МакетыФормОтчета.Добавить(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_Раздел1Прил7"));
			
		Иначе
			
			МакетФормыОтчета = ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + СтрЗаменить(СтрЗаменить(СтрЗаменить(
			ПараметрыПечати.ИмяСтраницы, "_Лист2", ""), "_Лист1", ""), "Раздел2Прил1", "Раздел2"));
			
		КонецЕсли;
		
		Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
			
			ГодРасчета = Год(ПараметрыПечати.мДатаКонцаПериодаОтчета);
			
			Для Каждого Показатель Из ДанныеРазделов[ПараметрыПечати.ИмяСтраницы] Цикл
				
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = Показатель.Ключ;
				
				Если Показатель.Ключ = "СрСпЧисленность" И ГодРасчета >= 2021 И (ДанныеРазделов["Титульный"]["ПоМесту"] = "335"
					ИЛИ ДанныеРазделов["Титульный"]["ПоМесту"] = "222"
					ИЛИ ДанныеРазделов["Титульный"]["КодФормыРеорганизации"] = "9") Тогда
					
					НовСтр.Значение = "";
					НовСтр.ЗначениеМЧБ = "      ";
					
				Иначе
					
					НовСтр.Значение = Показатель.Значение;
					НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета);
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			ИсходныйМакет = ТабличныйДокумент;
			Для Каждого Область Из ИсходныйМакет.Области Цикл
				Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					И Область.СодержитЗначение = Истина Тогда
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = Область.Имя;
					
					Если ДанныеРазделов.Титульный.НомерКорректировки > 0
					   И ПараметрыПечати.ИмяСтраницы = "Раздел3" И Область.Значение = 0
					   И ИменаСуммовыхПоказателейПодраздела3_2.Найти(Лев(Область.Имя, 13)) <> Неопределено Тогда
						НовСтр.Значение = "0";
						НовСтр.ЗначениеМЧБ = "0--------.00";
						
					ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел1Прил6_7" Тогда
						НовСтр.Значение = Область.Значение;
						Если МакетыФормОтчета[0].Области.Найти("Область.Имя") <> Неопределено Тогда
							НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Область, МакетыФормОтчета[0]);
						Иначе
							НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Область, МакетыФормОтчета[1]);
						КонецЕсли;
						
					Иначе
						НовСтр.Значение = Область.Значение;
						НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Область, МакетФормыОтчета);
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
			// Серия и номер документа (строка 067 приложения 1 к разделу 2).
			Для НомСтроки = 1 По 2 Цикл
				_НомСтроки = "_" + Формат(НомСтроки, "ЧГ=");
				НайденноеЗначение = Показатели.Найти("П00021М106701" + _НомСтроки, "Имя");
				Если НЕ НайденноеЗначение = Неопределено Тогда
					Показатели.Удалить(НайденноеЗначение);
					СерияНомер
					= СокрЛП(ИсходныйМакет.Области.Найти("П00021М106701" + _НомСтроки).Значение) + " "
					+ СокрЛП(ИсходныйМакет.Области.Найти("П00021М106702" + _НомСтроки).Значение);
					СерияНомер = СокрЛП(СерияНомер); // обработка случая заполнения только серии или только номера
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П00021М106701" + _НомСтроки;
					НовСтр.Значение = СерияНомер;
					НовСтр.ЗначениеМЧБ = СерияНомер;
				КонецЕсли;
			КонецЦикла;
			
			// Серия и номер документа (строка 110 раздела 3).
			НайденноеЗначение = Показатели.Найти("П000310011001", "Имя");
			Если НЕ НайденноеЗначение = Неопределено Тогда
				Показатели.Удалить(НайденноеЗначение);
				СерияНомер
				= СокрЛП(ИсходныйМакет.Области.Найти("П000310011001").Значение) + " "
				+ СокрЛП(ИсходныйМакет.Области.Найти("П000310011002").Значение);
				СерияНомер = СокрЛП(СерияНомер); // обработка случая заполнения только серии или только номера
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = "П000310011001";
				НовСтр.Значение = СерияНомер;
				НовСтр.ЗначениеМЧБ = СерияНомер;
			КонецЕсли;
			
			Если ПараметрыПечати.ИмяСтраницы = "Раздел1Прил9" Тогда
				
				УникНомер = ТабличныйДокумент.Область("П00019М102001_1").Значение;
				
				Если Лев(УникНомер, 2) = "00" Тогда // 3 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
				ИначеЕсли Лев(УникНомер, 1) = "0" Тогда // 4 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П10019М102001_1";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				Иначе // 5 знакомест
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П20019М102001_1";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
		
		ИменаСуммовыхПоказателейПодраздела3_2 = Новый Массив;
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М121001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М122001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М123001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М124001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025002");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025003");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025004");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М128001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М129001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003220030001");
		ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003220030002");
		
		МакетФормыОтчета = ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_"
						 + СтрЗаменить(СтрЗаменить(СтрЗаменить(ПараметрыПечати.ИмяСтраницы,
						 			   "_Лист2", ""), "_Лист1", ""), "Раздел2Прил1", "Раздел2"));
						 
		Если ПараметрыПечати.ИмяСтраницы = "Титульный"
		 ИЛИ ПараметрыПечати.ИмяСтраницы = "ФизЛицо" Тогда
			 
			Для Каждого Показатель Из ДанныеРазделов[ПараметрыПечати.ИмяСтраницы] Цикл
				 
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = Показатель.Ключ;
						 
				НовСтр.Значение = Показатель.Значение;
				НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета);
				 
		 	КонецЦикла;
			 
		Иначе
			
			ИсходныйМакет = ТабличныйДокумент;
			Для Каждого Область Из ИсходныйМакет.Области Цикл
				Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				   И Область.СодержитЗначение = Истина Тогда
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = Область.Имя;
					
					Если ДанныеРазделов.Титульный.НомерКорректировки > 0
					   И ПараметрыПечати.ИмяСтраницы = "Раздел3_Лист2" И Область.Значение = 0
					   И ИменаСуммовыхПоказателейПодраздела3_2.Найти(Лев(Область.Имя, 13)) <> Неопределено Тогда
						НовСтр.Значение = "0";
						НовСтр.ЗначениеМЧБ = "0--------.00";
					Иначе
						НовСтр.Значение = Область.Значение;
						НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Область, МакетФормыОтчета);
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
			Область = ИсходныйМакет.Области.Найти("П000030002001");
			Если Область <> Неопределено Тогда
				Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					И Область.СодержитЗначение = Ложь Тогда
					Если ЗначениеЗаполнено(Область.Текст) Тогда
						НовСтр = Показатели.Добавить();
						НовСтр.Имя = Область.Имя;
						НовСтр.Значение = Область.Текст;
						НовСтр.ЗначениеМЧБ = Область.Текст;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Область = ИсходныйМакет.Области.Найти("П000030003001");
			Если Область <> Неопределено Тогда
				Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					И Область.СодержитЗначение = Ложь Тогда
					Если ЗначениеЗаполнено(Область.Текст) Тогда
						НовСтр = Показатели.Добавить();
						НовСтр.Имя = Область.Имя;
						НовСтр.Значение = Область.Текст;
						НовСтр.ЗначениеМЧБ = Область.Текст;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			НайденноеЗначение = Показатели.Найти("П000030004001", "Имя");
			Если НЕ НайденноеЗначение = Неопределено Тогда
				Показатели.Удалить(НайденноеЗначение);
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = "П000030004001";
				ПорядковыйНомер = СокрЛП(ИсходныйМакет.Области.Найти("П000030004001").Значение);
				НовСтр.Значение = ?(ЗначениеЗаполнено(ПорядковыйНомер), Число(ПорядковыйНомер), 0);
				НовСтр.ЗначениеМЧБ = ПорядковыйНомер;
			КонецЕсли;
			
			Область = ИсходныйМакет.Области.Найти("П000030005001");
			Если Область <> Неопределено Тогда
				Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					И Область.СодержитЗначение = Ложь Тогда
					Если ЗначениеЗаполнено(Область.Текст) Тогда
						НовСтр = Показатели.Добавить();
						НовСтр.Имя = Область.Имя;
						НовСтр.Значение = Область.Текст;
						НовСтр.ЗначениеМЧБ = Область.Текст;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			// Серия и номер документа (строка 150 раздела 3).
			НайденноеЗначение = Показатели.Найти("П000310015001", "Имя");
			Если НЕ НайденноеЗначение = Неопределено Тогда
				Показатели.Удалить(НайденноеЗначение);
				СерияНомер
				= СокрЛП(ИсходныйМакет.Области.Найти("П000310015001").Значение) + " "
				+ СокрЛП(ИсходныйМакет.Области.Найти("П000310015002").Значение);
				СерияНомер = СокрЛП(СерияНомер); // обработка случая заполнения только серии или только номера
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = "П000310015001";
				НовСтр.Значение = СерияНомер;
				НовСтр.ЗначениеМЧБ = СерияНомер;
			КонецЕсли;
			
			Если ПараметрыПечати.ИмяСтраницы = "Раздел1Прил10_Лист1" Тогда
				
				УникНомер = СокрЛП(ТабличныйДокумент.Область("П00110М102001_1").Значение);
				
				Если НЕ ЗначениеЗаполнено(УникНомер) ИЛИ Лев(УникНомер, 2) = "00" Тогда // 3 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
				ИначеЕсли Лев(УникНомер, 1) = "0" Тогда // 4 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П10110М102001_1";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				Иначе // 5 знакомест
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П20110М102001_1";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				КонецЕсли;
				
				УникНомер = СокрЛП(ТабличныйДокумент.Область("П00110М102001_2").Значение);
				
				Если НЕ ЗначениеЗаполнено(УникНомер) ИЛИ Лев(УникНомер, 2) = "00" Тогда // 3 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
				ИначеЕсли Лев(УникНомер, 1) = "0" Тогда // 4 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П10110М102001_2";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				Иначе // 5 знакомест
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П20110М102001_2";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				КонецЕсли;
				
			ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел1Прил10_Лист2" Тогда
				
				УникНомер = СокрЛП(ТабличныйДокумент.Область("П00110М211001_1").Значение);
				
				Если НЕ ЗначениеЗаполнено(УникНомер) ИЛИ Лев(УникНомер, 2) = "00" Тогда // 3 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
				ИначеЕсли Лев(УникНомер, 1) = "0" Тогда // 4 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П10110М211001_1";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				Иначе // 5 знакомест
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ1"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П20110М211001_1";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				КонецЕсли;
				
				УникНомер = СокрЛП(ТабличныйДокумент.Область("П00110М211001_2").Значение);
				
				Если НЕ ЗначениеЗаполнено(УникНомер) ИЛИ Лев(УникНомер, 2) = "00" Тогда // 3 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
				ИначеЕсли Лев(УникНомер, 1) = "0" Тогда // 4 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П10110М211001_2";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				Иначе // 5 знакомест
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ2"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П20110М211001_2";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				КонецЕсли;
				
				УникНомер = СокрЛП(ТабличныйДокумент.Область("П00110М211001_3").Значение);
				
				Если НЕ ЗначениеЗаполнено(УникНомер) ИЛИ Лев(УникНомер, 2) = "00" Тогда // 3 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ3"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ3"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
				ИначеЕсли Лев(УникНомер, 1) = "0" Тогда // 4 знакоместа
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ3"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХХ3"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П10110М211001_3";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				Иначе // 5 знакомест
					
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХ3"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					МакетПечатнойФормы.УдалитьОбласть(МакетПечатнойФормы.Область("УникНомерХХХХ3"),
					ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					НовСтр = Показатели.Добавить();
					НовСтр.Имя = "П20110М211001_3";
					НовСтр.Значение = УникНомер;
					НовСтр.ЗначениеМЧБ = УникНомер;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НайденноеЗначение = Показатели.Найти("ИНН", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ИНН = "";
	Для Ном = 0 По 11 Цикл
		ИНН = ИНН + ОбщиеРеквизитыРазделов.ИНН[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН1";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН2";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	
	НайденноеЗначение = Показатели.Найти("КПП", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	КПП = "";
	Для Ном = 0 По 8 Цикл
		КПП = КПП + ОбщиеРеквизитыРазделов.КПП[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП1";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП2";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	
	НайденноеЗначение = Показатели.Найти("ДатаПодписи", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ДатаПодписиСтр = "";
	Для Ном = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписи";
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписиПолная";
	Если СокрЛП(ДатаПодписиСтр) <> "" Тогда
		НовСтр.Значение = Формат(Дата(Прав(ДатаПодписиСтр, 4)
									+ Сред(ДатаПодписиСтр, 3, 2)
									+ Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг""");
		НовСтр.ЗначениеМЧБ = СокрЛП(Формат(Дата(Прав(ДатаПодписиСтр, 4)
											  + Сред(ДатаПодписиСтр, 3, 2)
											  + Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг"""));
	КонецЕсли;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоФамилия";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоИмяИнициал";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоОтчествоИнициал";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоФамилия1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоИмяИнициал1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоОтчествоИнициал1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	
	Если ПараметрыПечати.ИмяСтраницы = "ФизЛицо" Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "СерияНомерДокумента";
		НовСтр.Значение	= ДанныеРазделов[ПараметрыПечати.ИмяСтраницы].СерияДокумента
						+ " "
						+ ДанныеРазделов[ПараметрыПечати.ИмяСтраницы].НомерДокумента;
		НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	КонецЕсли;
	
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
		КонецЕсли;
	КонецЕсли;
	
	ИНН = Новый Массив(12);
	Для Инд = 1 По 9 Цикл
		Для Знакоместо = 0 По 11 Цикл
			ИНН[Знакоместо] = Показатели.Найти("ИНН" + Инд + "_" + (Знакоместо + 1), "Имя");
		КонецЦикла;
		Если ИНН[0] = Неопределено ИЛИ ИНН[1] = Неопределено ИЛИ ИНН[10] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Показатель Из Показатели Цикл
		
		Если Показатель.Имя = "П000010001001" Тогда
			Показатель.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
				СокрЛП(Показатель.Значение), 11, "-", 1);
		КонецЕсли;
		
	КонецЦикла;
	
	ИндексТочкиПоКорню = Новый Структура;
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.Текст = "." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
			Корень = ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ = ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень,ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ИмяОбласти = Область.Имя;
			
			Если СтрЧислоВхождений(ИмяОбласти, "НомСтр") > 0
			 ИЛИ СтрЧислоВхождений(ИмяОбласти, "СоставленаНа") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
				ЗначениеВыведено = Ложь;
				Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
					РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
					Если РезультатПоиска <> Неопределено Тогда
						Если ТипЗнч(РезультатПоиска.Значение)=Тип("Число") Тогда
							// Разделение числа на 2 части.
							ЦелаяЧасть = Цел(РезультатПоиска.Значение);
							СтрЦелаяЧасть = СтрЗаменить(Строка(Формат(Цел(РезультатПоиска.Значение), "ЧРГ=';'")), ";", "");
							Если РезультатПоиска.Значение < 0 И СтрНайти(РезультатПоиска.ЗначениеМЧБ, ".") > 0 Тогда
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),4);
							Иначе
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
							КонецЕсли;
							Если СтрЦелаяЧасть <> "" ИЛИ СтрДробнаяЧасть <> "" Тогда
								СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "", "0", СтрЦелаяЧасть);
								Если РезультатПоиска.Значение < 0 Тогда
									СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "0", "-0", СтрЦелаяЧасть);
								КонецЕсли;
								СтрДробнаяЧасть = ?(СтрДробнаяЧасть = "", "0", СтрДробнаяЧасть);
							КонецЕсли;
							// Разделение областей показателя на 2 части.
							ИндексТочкиЧислаНаМЧБ = Неопределено;
							Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень,ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
								// На МЧБ нет разделения на целую и дробную части.
								ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
														 ТекАдресЗначенияОбласти.ИндексЗнакоместа);
								ЗначениеВыведено = Истина;
							Иначе
								// Определяем какая часть выводится (Целая, дробная или точка).
								Если ТекАдресЗначенияОбласти.ИндексЗнакоместа < ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится целая часть.
									ПрисвоитьЗначениеОбласти(ИмяФормы, Область,
										?(РезультатПоиска.ЗначениеМЧБ = "-", "-", СтрЦелаяЧасть),
										ТекАдресЗначенияОбласти.ИндексЗнакоместа);
									ЗначениеВыведено = Истина;
								ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится дробная часть.
									ПрисвоитьЗначениеОбластиДробнойЧастиПриРазделенииНаМЧБНаЦелуюИДробнуюЧасть(
										ИмяФормы, Область, СтрДробнаяЧасть,
										ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
									ЗначениеВыведено = Истина;
								Иначе
									// Выводится точка.
									// Присваивать ничего не будем, но считаем, что область заполненяется корректно.
									ЗначениеВыведено = Истина;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
													 ТекАдресЗначенияОбласти.ИндексЗнакоместа,
													 ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка")
													 ИЛИ НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
							ЗначениеВыведено = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеВыведено
					  И ИмяОбласти <> "ОпределениеВысотыСтрокиМногострочнойЧасти" Тогда // Служебное поле.
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Не удалось заполнить область ""%1""'"), ИмяОбласти);
					Сообщение.Сообщить();
					
				КонецЕсли;
			Иначе
				ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета)
	
	ФорматОбласти = "";
			
	Область = МакетФормыОтчета.Области.Найти(?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), 
		Показатель.Ключ, Показатель.Имя));
	
	Если НЕ Область = Неопределено Тогда
		
		ФорматОбласти = Область.Формат;
		
	КонецЕсли;
			
	ТипЗначения = ТипЗнч(Показатель.Значение);
	
	Если ТипЗначения = Тип("Число") Тогда
					
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ИмяФормы, ФорматОбласти);
		
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧГ", "");
		
		Результат = Формат(Показатель.Значение, СобратьСтрокуФормата(ИмяФормы, СоотвСтрокаФормата));
		
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		
		Результат = СокрЛП(Показатель.Значение);
		
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
						
		Результат = Формат(Показатель.Значение, ?(ПустаяСтрока(ФорматОбласти), "ДФ=ddMMyyyy", ФорматОбласти));
		
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		
		Результат = Формат(Показатель.Значение, ФорматОбласти);
		
	КонецЕсли;
	
	Возврат СокрЛП(Результат);
	
КонецФункции

Функция АдресЗначенияОбласти(ИмяФормы, Область)
	
	Имя = Область.Имя;
	КореньИмениОбласти = Неопределено;
	СтрИндексЗнакоместа = "";
	ИндексЗнакоместа = 0;
	ДлинаИмени = СтрДлина(Имя);
	
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);
	
КонецФункции

Процедура ПрисвоитьЗначениеОбласти(ИмяФормы, Область, Знач Значение, ИндексЗнакоместа = 0, ДополнятьСправа_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(ДополнятьСправа_, "-", "");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	// Специальная обработка для вывода в Приложении 3 к Разделу 1 значений
	// из графы 1 - длиной более 4-х символов и из графы 2 - длиной более 3-х символов
	// (в случаях ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4"),
	// ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1")
	// и ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1").
	Если Область.ГраницаСверху.ТипЛинии <> ТипЛинииЯчейкиТабличногоДокумента.Точечная
		И Значение = "-" И СтрНачинаетсяС(Область.Имя, "П00013") Тогда
		Значение = "";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(Значение);
	Иначе
		Область.Текст = ВРЕГ(Значение);
	КонецЕсли;
	
КонецПроцедуры

Функция РазобратьСтрокуФормата(ИмяФормы, Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
			
		КонецЕсли;
		
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
		
	КонецЦикла;
	
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
		
	КонецЕсли;
	
	Возврат ЗначенияПараметров;
	
КонецФункции

Функция СобратьСтрокуФормата(ИмяФормы, ПараметрыФормата)
	
	СтрокаФормата = "";
	
	Для Каждого Параметр Из ПараметрыФормата Цикл
		
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
		
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		
		СтрокаФормата = Сред(СтрокаФормата, 3);
		
	КонецЕсли;
	
	Возврат СтрокаФормата;
	
КонецФункции

Процедура ПрисвоитьЗначениеОбластиДробнойЧастиПриРазделенииНаМЧБНаЦелуюИДробнуюЧасть(ИмяФормы,
																					 Область,
																					 Знач ДробнаяЧасть,
																					 ИндексЗнакоместа = 0)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(ДробнаяЧасть) >= ИндексЗнакоместа Тогда
			ДробнаяЧасть = Сред(ДробнаяЧасть, ИндексЗнакоместа, 1);
		Иначе
			ДробнаяЧасть = ?(ЗначениеЗаполнено(ДробнаяЧасть), "0", "-");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(ДробнаяЧасть) Тогда
		ДробнаяЧасть = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(ДробнаяЧасть);
	Иначе
		Область.Текст = ВРЕГ(ДробнаяЧасть);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольныеСоотношения

Функция ПроверитьКонтрольныеСоотношенияДлительнаяОперация(СтруктураПараметров) Экспорт
	
	Если НЕ СтрНайти(СтруктураПараметров.мВыбраннаяФорма, "2020Кв4") = 0 Тогда
		
		Возврат ПроверитьКонтрольныеСоотношения2021(СтруктураПараметров);
	
	ИначеЕсли НЕ СтрНайти(СтруктураПараметров.мВыбраннаяФорма, "2020Кв1") = 0 Тогда
		
		Возврат ПроверитьКонтрольныеСоотношения2020(СтруктураПараметров);
		
	Иначе
		
		Возврат Новый Структура("КоличествоНайденныхОшибок, КоличествоНайденныхБезОшибок, СтруктураОшибок", 
			0, 0, Новый Структура);
			
	КонецЕсли; 
	
КонецФункции

#Область КонтрольныеСоотношения2020

#Область КС_Управление

Функция ПроверитьКонтрольныеСоотношения2020(СтруктураПараметров)
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок"	, 0);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок"	, 0);
	СтруктураРезультата.Вставить("СтруктураОшибок"				, Новый Структура);
	СтруктураРезультата.Вставить("ДопСведенияВОписаниеКС"		, Истина);
	
	ДанныеКС						= Новый Структура;
	СчетчикФормулДляРасшифровок		= 0;
	СписокРасшифровкиПоказателей	= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	СписокРасшифровкиформулы		= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	ПараметрыКС						= СтруктураПараметров;
	Документирование				= Ложь;
	
	СформироватьСлужебныеДанные2020();
	ЗаполнитьТаблицыРазделов2020(ДанныеКС, Ложь);
	ПолучитьДанныеОтчетовПредыдущихПериодов2020();
	СформироватьВременныеТаблицы2020();
	
	СтруктураРезультата.Вставить("ПриоритетПроизводительности"	, ДанныеКС.ПриоритетПроизводительности);
	СтруктураРезультата.Вставить("ЛимитРасшифровки"				, ДанныеКС.ЛимитРасшифровки);

#Область Проверки

#Область Проверки_Раздела_3
	
	ПроверитьКС2020_0_1а(СтруктураРезультата);
	ПроверитьКС2020_0_1б(СтруктураРезультата);
	ПроверитьКС2020_0_1в(СтруктураРезультата);
	ПроверитьКС2020_0_1г(СтруктураРезультата);
	ПроверитьКС2020_0_1д(СтруктураРезультата);
	ПроверитьКС2020_0_1е(СтруктураРезультата);
	ПроверитьКС2020_0_2а(СтруктураРезультата);
	ПроверитьКС2020_0_2б(СтруктураРезультата);
	ПроверитьКС2020_0_2в(СтруктураРезультата);
	ПроверитьКС2020_0_3(СтруктураРезультата);
	ПроверитьКС2020_0_4(СтруктураРезультата);
	ПроверитьКС2020_0_5а(СтруктураРезультата);
	ПроверитьКС2020_0_5б(СтруктураРезультата);
	ПроверитьКС2020_0_5в(СтруктураРезультата);
	ПроверитьКС2020_0_6а(СтруктураРезультата);
	ПроверитьКС2020_0_6б(СтруктураРезультата);
	ПроверитьКС2020_0_6в(СтруктураРезультата);
	ПроверитьКС2020_0_6г(СтруктураРезультата);
	ПроверитьКС2020_0_6д(СтруктураРезультата);
	ПроверитьКС2020_0_6е(СтруктураРезультата);
	ПроверитьКС2020_0_7а(СтруктураРезультата);
	ПроверитьКС2020_0_7б(СтруктураРезультата);
	ПроверитьКС2020_0_8а(СтруктураРезультата);
	ПроверитьКС2020_0_8б(СтруктураРезультата);
	ПроверитьКС2020_0_9а(СтруктураРезультата);
	ПроверитьКС2020_0_10а(СтруктураРезультата);
	ПроверитьКС2020_0_11а(СтруктураРезультата);
	ПроверитьКС2020_0_11б(СтруктураРезультата);
	ПроверитьКС2020_0_11в(СтруктураРезультата);
	ПроверитьКС2020_0_12(СтруктураРезультата);
	ПроверитьКС2020_0_13(СтруктураРезультата);
	ПроверитьКС2020_0_14а(СтруктураРезультата);
	ПроверитьКС2020_0_14б(СтруктураРезультата);
	ПроверитьКС2020_0_14в(СтруктураРезультата);
	ПроверитьКС2020_0_15(СтруктураРезультата);
	ПроверитьКС2020_0_16(СтруктураРезультата);
	ПроверитьКС2020_0_17а(СтруктураРезультата);
	ПроверитьКС2020_0_17б(СтруктураРезультата);
	ПроверитьКС2020_0_17в(СтруктураРезультата);
	ПроверитьКС2020_0_17г(СтруктураРезультата);
	ПроверитьКС2020_0_17д(СтруктураРезультата);
	ПроверитьКС2020_0_17е(СтруктураРезультата);
	ПроверитьКС2020_0_18а(СтруктураРезультата);
	ПроверитьКС2020_0_18б(СтруктураРезультата);
	ПроверитьКС2020_0_19а(СтруктураРезультата);
	ПроверитьКС2020_0_19б(СтруктураРезультата);
	ПроверитьКС2020_0_20а(СтруктураРезультата);
	ПроверитьКС2020_0_20б(СтруктураРезультата);
	ПроверитьКС2020_0_20в(СтруктураРезультата);
	ПроверитьКС2020_0_21(СтруктураРезультата);
	ПроверитьКС2020_0_22а(СтруктураРезультата);
	ПроверитьКС2020_0_22б(СтруктураРезультата);
	ПроверитьКС2020_0_22в(СтруктураРезультата);
	ПроверитьКС2020_0_22г(СтруктураРезультата);
	ПроверитьКС2020_0_23(СтруктураРезультата);
	ПроверитьКС2020_0_24(СтруктураРезультата);
	ПроверитьКС2020_0_25(СтруктураРезультата);
	ПроверитьКС2020_0_26(СтруктураРезультата);
	ПроверитьКС2020_0_27(СтруктураРезультата);
	ПроверитьКС2020_0_50а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54в_доп(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_1
	
	ПроверитьКС2020_1_1(СтруктураРезультата);
	ПроверитьКС2020_1_2(СтруктураРезультата);
	ПроверитьКС2020_1_3(СтруктураРезультата);
	ПроверитьКС2020_1_4(СтруктураРезультата);
	ПроверитьКС2020_1_5(СтруктураРезультата);
	ПроверитьКС2020_1_6(СтруктураРезультата);
	ПроверитьКС2020_1_7(СтруктураРезультата);
	ПроверитьКС2020_1_8(СтруктураРезультата);
	ПроверитьКС2020_1_9(СтруктураРезультата);
	ПроверитьКС2020_1_10(СтруктураРезультата);
	ПроверитьКС2020_1_11(СтруктураРезультата);
	ПроверитьКС2020_1_12а(СтруктураРезультата);
	ПроверитьКС2020_1_12б(СтруктураРезультата);
	ПроверитьКС2020_1_13а(СтруктураРезультата);
	ПроверитьКС2020_1_13б(СтруктураРезультата);
	ПроверитьКС2020_1_14а(СтруктураРезультата);
	ПроверитьКС2020_1_14б(СтруктураРезультата);
	ПроверитьКС2020_1_15а(СтруктураРезультата);
	ПроверитьКС2020_1_15б(СтруктураРезультата);
	ПроверитьКС2020_1_16а(СтруктураРезультата);
	ПроверитьКС2020_1_16б(СтруктураРезультата);
	ПроверитьКС2020_1_17а(СтруктураРезультата);
	ПроверитьКС2020_1_17б(СтруктураРезультата);
	ПроверитьКС2020_1_18а(СтруктураРезультата);
	ПроверитьКС2020_1_18б(СтруктураРезультата);
	ПроверитьКС2020_1_19а(СтруктураРезультата);
	ПроверитьКС2020_1_19б(СтруктураРезультата);
	ПроверитьКС2020_1_20(СтруктураРезультата);
	ПроверитьКС2020_1_21(СтруктураРезультата);
	ПроверитьКС2020_1_22(СтруктураРезультата);
	ПроверитьКС2020_1_23(СтруктураРезультата);
	ПроверитьКС2020_1_24(СтруктураРезультата);
	ПроверитьКС2020_1_25(СтруктураРезультата);
	ПроверитьКС2020_1_26(СтруктураРезультата);
	ПроверитьКС2020_1_27(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_1
	
#Область Проверки_Подраздела_1_1
	
	ПроверитьКС2020_1_28(СтруктураРезультата);
	ПроверитьКС2020_1_29(СтруктураРезультата);
	ПроверитьКС2020_1_30(СтруктураРезультата);
	ПроверитьКС2020_1_31(СтруктураРезультата);
	ПроверитьКС2020_1_32(СтруктураРезультата);
	ПроверитьКС2020_1_33(СтруктураРезультата);
	ПроверитьКС2020_1_34(СтруктураРезультата);
	ПроверитьКС2020_1_35(СтруктураРезультата);
	ПроверитьКС2020_1_36(СтруктураРезультата);
	ПроверитьКС2020_1_37(СтруктураРезультата);
	ПроверитьКС2020_1_38(СтруктураРезультата);
	ПроверитьКС2020_1_39(СтруктураРезультата);
	ПроверитьКС2020_1_40(СтруктураРезультата);
	ПроверитьКС2020_1_41(СтруктураРезультата);
	ПроверитьКС2020_1_42(СтруктураРезультата);
	ПроверитьКС2020_1_43(СтруктураРезультата);
	ПроверитьКС2020_1_44(СтруктураРезультата);
	ПроверитьКС2020_1_45(СтруктураРезультата);
	ПроверитьКС2020_1_46(СтруктураРезультата);
	ПроверитьКС2020_1_47(СтруктураРезультата);
	ПроверитьКС2020_1_48(СтруктураРезультата);
	ПроверитьКС2020_1_49(СтруктураРезультата);
	ПроверитьКС2020_1_50(СтруктураРезультата);
	ПроверитьКС2020_1_51(СтруктураРезультата);
	ПроверитьКС2020_1_52(СтруктураРезультата);
	ПроверитьКС2020_1_53(СтруктураРезультата);
	ПроверитьКС2020_1_54(СтруктураРезультата);
	ПроверитьКС2020_1_55(СтруктураРезультата);
	ПроверитьКС2020_1_56(СтруктураРезультата);
	ПроверитьКС2020_1_57(СтруктураРезультата);
	ПроверитьКС2020_1_58(СтруктураРезультата);
	ПроверитьКС2020_1_59(СтруктураРезультата);
	ПроверитьКС2020_1_60(СтруктураРезультата);
	ПроверитьКС2020_1_61(СтруктураРезультата);
	ПроверитьКС2020_1_62(СтруктураРезультата);
	ПроверитьКС2020_1_63(СтруктураРезультата);
	ПроверитьКС2020_1_64(СтруктураРезультата);
	ПроверитьКС2020_1_65(СтруктураРезультата);
	
	#КонецОбласти

#Область Проверки_Подраздела_1_2
	
	ПроверитьКС2020_1_66(СтруктураРезультата);
	ПроверитьКС2020_1_67(СтруктураРезультата);
	ПроверитьКС2020_1_68(СтруктураРезультата);
	ПроверитьКС2020_1_69(СтруктураРезультата);
	ПроверитьКС2020_1_70(СтруктураРезультата);
	ПроверитьКС2020_1_71(СтруктураРезультата);
	ПроверитьКС2020_1_72(СтруктураРезультата);
	ПроверитьКС2020_1_73(СтруктураРезультата);
	ПроверитьКС2020_1_74(СтруктураРезультата);
	ПроверитьКС2020_1_75(СтруктураРезультата);
	ПроверитьКС2020_1_76(СтруктураРезультата);
	ПроверитьКС2020_1_77(СтруктураРезультата);
	ПроверитьКС2020_1_78(СтруктураРезультата);
	ПроверитьКС2020_1_79(СтруктураРезультата);
	ПроверитьКС2020_1_80(СтруктураРезультата);
	ПроверитьКС2020_1_81(СтруктураРезультата);
	ПроверитьКС2020_1_82(СтруктураРезультата);
	ПроверитьКС2020_1_83(СтруктураРезультата);
	ПроверитьКС2020_1_84(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_1
	
	ПроверитьКС2020_1_85(СтруктураРезультата);
	ПроверитьКС2020_1_86(СтруктураРезультата);
	ПроверитьКС2020_1_87(СтруктураРезультата);
	ПроверитьКС2020_1_88(СтруктураРезультата);
	ПроверитьКС2020_1_89(СтруктураРезультата);
	ПроверитьКС2020_1_90(СтруктураРезультата);
	ПроверитьКС2020_1_91(СтруктураРезультата);
	ПроверитьКС2020_1_92(СтруктураРезультата);
	ПроверитьКС2020_1_93(СтруктураРезультата);
	ПроверитьКС2020_1_94(СтруктураРезультата);
	ПроверитьКС2020_1_95(СтруктураРезультата);
	ПроверитьКС2020_1_96(СтруктураРезультата);
	ПроверитьКС2020_1_97(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_2
	
	ПроверитьКС2020_1_98(СтруктураРезультата);
	ПроверитьКС2020_1_99(СтруктураРезультата);
	ПроверитьКС2020_1_100(СтруктураРезультата);
	ПроверитьКС2020_1_101(СтруктураРезультата);
	ПроверитьКС2020_1_102(СтруктураРезультата);
	ПроверитьКС2020_1_103(СтруктураРезультата);
	ПроверитьКС2020_1_104(СтруктураРезультата);
	ПроверитьКС2020_1_105(СтруктураРезультата);
	ПроверитьКС2020_1_106(СтруктураРезультата);
	ПроверитьКС2020_1_107(СтруктураРезультата);
	ПроверитьКС2020_1_108(СтруктураРезультата);
	ПроверитьКС2020_1_109(СтруктураРезультата);
	
#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1
	
	ПроверитьКС2020_1_110(СтруктураРезультата);
	ПроверитьКС2020_1_111(СтруктураРезультата);
	ПроверитьКС2020_1_112(СтруктураРезультата);
	ПроверитьКС2020_1_113(СтруктураРезультата);
	ПроверитьКС2020_1_114(СтруктураРезультата);
	ПроверитьКС2020_1_115(СтруктураРезультата);
	ПроверитьКС2020_1_116(СтруктураРезультата);
	ПроверитьКС2020_1_117(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_2
	
	ПроверитьКС2020_1_118(СтруктураРезультата);
	ПроверитьКС2020_1_119(СтруктураРезультата);
	ПроверитьКС2020_1_120(СтруктураРезультата);
	ПроверитьКС2020_1_121(СтруктураРезультата);
	ПроверитьКС2020_1_122(СтруктураРезультата);
	ПроверитьКС2020_1_123(СтруктураРезультата);
	ПроверитьКС2020_1_124(СтруктураРезультата);
	ПроверитьКС2020_1_125(СтруктураРезультата);
	ПроверитьКС2020_1_126(СтруктураРезультата);
	ПроверитьКС2020_1_127(СтруктураРезультата);
	ПроверитьКС2020_1_128(СтруктураРезультата);
	ПроверитьКС2020_1_129(СтруктураРезультата);
	ПроверитьКС2020_1_130(СтруктураРезультата);
	ПроверитьКС2020_1_131(СтруктураРезультата);
	ПроверитьКС2020_1_132(СтруктураРезультата);
	ПроверитьКС2020_1_133(СтруктураРезультата);
	ПроверитьКС2020_1_134(СтруктураРезультата);
	ПроверитьКС2020_1_135(СтруктураРезультата);
	ПроверитьКС2020_1_136(СтруктураРезультата);
	ПроверитьКС2020_1_137(СтруктураРезультата);
	ПроверитьКС2020_1_138(СтруктураРезультата);
	ПроверитьКС2020_1_139(СтруктураРезультата);
	ПроверитьКС2020_1_140(СтруктураРезультата);
	ПроверитьКС2020_1_141(СтруктураРезультата);
	ПроверитьКС2020_1_142(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_5
	
	ПроверитьКС2020_1_143(СтруктураРезультата);
	ПроверитьКС2020_1_144(СтруктураРезультата);
	ПроверитьКС2020_1_145(СтруктураРезультата);
	ПроверитьКС2020_1_146(СтруктураРезультата);
	ПроверитьКС2020_1_147(СтруктураРезультата);
	ПроверитьКС2020_1_148(СтруктураРезультата);
	ПроверитьКС2020_1_149(СтруктураРезультата);
	ПроверитьКС2020_1_150(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_6

	ПроверитьКС2020_1_151(СтруктураРезультата);
	ПроверитьКС2020_1_152(СтруктураРезультата);
	ПроверитьКС2020_1_153(СтруктураРезультата);
	ПроверитьКС2020_1_154(СтруктураРезультата);
	ПроверитьКС2020_1_155(СтруктураРезультата);
	ПроверитьКС2020_1_156(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_7
	
	ПроверитьКС2020_1_157(СтруктураРезультата);
	ПроверитьКС2020_1_158(СтруктураРезультата);
	ПроверитьКС2020_1_159(СтруктураРезультата);
	ПроверитьКС2020_1_160(СтруктураРезультата);
	ПроверитьКС2020_1_161(СтруктураРезультата);
	ПроверитьКС2020_1_162(СтруктураРезультата);
	ПроверитьКС2020_1_163(СтруктураРезультата);
	ПроверитьКС2020_1_164(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_8
	
	ПроверитьКС2020_1_165(СтруктураРезультата);
	ПроверитьКС2020_1_166(СтруктураРезультата);
	ПроверитьКС2020_1_167(СтруктураРезультата);
	ПроверитьКС2020_1_168(СтруктураРезультата);
	ПроверитьКС2020_1_169(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_9
	
	ПроверитьКС2020_1_170(СтруктураРезультата);
	ПроверитьКС2020_1_171(СтруктураРезультата);
	ПроверитьКС2020_1_172(СтруктураРезультата);
	ПроверитьКС2020_1_173(СтруктураРезультата);
	ПроверитьКС2020_1_174(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_2
	
	ПроверитьКС2020_1_175(СтруктураРезультата);
	ПроверитьКС2020_1_176(СтруктураРезультата);
	ПроверитьКС2020_1_177(СтруктураРезультата);
	ПроверитьКС2020_1_178(СтруктураРезультата);
	ПроверитьКС2020_1_179(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Прочие
	
	ПроверитьКС2020_1_180(СтруктураРезультата);
	ПроверитьКС2020_1_181(СтруктураРезультата);
	ПроверитьКС2020_1_182(СтруктураРезультата);
	ПроверитьКС2020_1_183(СтруктураРезультата);
	ПроверитьКС2020_1_184(СтруктураРезультата);
	ПроверитьКС2020_1_185(СтруктураРезультата);
	ПроверитьКС2020_1_186(СтруктураРезультата);
	ПроверитьКС2020_1_187(СтруктураРезультата);
	ПроверитьКС2020_1_188(СтруктураРезультата);
	ПроверитьКС2020_1_189(СтруктураРезультата);
	ПроверитьКС2020_1_190(СтруктураРезультата);
	ПроверитьКС2020_1_191(СтруктураРезультата);
	ПроверитьКС2020_1_192(СтруктураРезультата);
	ПроверитьКС2020_1_193(СтруктураРезультата);
	ПроверитьКС2020_1_194(СтруктураРезультата);
	ПроверитьКС2020_1_195(СтруктураРезультата);
	ПроверитьКС2020_1_196(СтруктураРезультата);
	ПроверитьКС2020_1_197(СтруктураРезультата);
	ПроверитьКС2020_1_198(СтруктураРезультата);
	ПроверитьКС2020_1_199(СтруктураРезультата);
	ПроверитьКС2020_1_300_доп(СтруктураРезультата);
	ПроверитьКС2020_1_301_доп(СтруктураРезультата);
	ПроверитьКС2020_1_302_доп(СтруктураРезультата);
	ПроверитьКС2020_2_1(СтруктураРезультата);
	ПроверитьКС2020_2_2(СтруктураРезультата);
	ПроверитьКС2020_2_3(СтруктураРезультата);
	ПроверитьКС2020_2_4(СтруктураРезультата);
	ПроверитьКС2020_2_5(СтруктураРезультата);
	ПроверитьКС2020_2_6(СтруктураРезультата);
	ПроверитьКС2020_2_7(СтруктураРезультата);
	ПроверитьКС2020_2_8(СтруктураРезультата);
	ПроверитьКС2020_2_9(СтруктураРезультата);
	ПроверитьКС2020_2_10(СтруктураРезультата);
	ПроверитьКС2020_2_11(СтруктураРезультата);
	ПроверитьКС2020_2_12(СтруктураРезультата);
	ПроверитьКС2020_2_13(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

	ПроверитьКС2020_1(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_3
		
	ПроверитьКС2020_2(СтруктураРезультата);
	ПроверитьКС2020_3(СтруктураРезультата);
	ПроверитьКС2020_4(СтруктураРезультата);
	ПроверитьКС2020_5(СтруктураРезультата);
	ПроверитьКС2020_6(СтруктураРезультата);
	ПроверитьКС2020_7(СтруктураРезультата);
	ПроверитьКС2020_8(СтруктураРезультата);
	ПроверитьКС2020_9(СтруктураРезультата);
	ПроверитьКС2020_10(СтруктураРезультата);
	ПроверитьКС2020_11(СтруктураРезультата);
	ПроверитьКС2020_12(СтруктураРезультата);
	ПроверитьКС2020_13(СтруктураРезультата);
	ПроверитьКС2020_14(СтруктураРезультата);
	ПроверитьКС2020_15(СтруктураРезультата);
	ПроверитьКС2020_16(СтруктураРезультата);
	ПроверитьКС2020_17(СтруктураРезультата);
	ПроверитьКС2020_18(СтруктураРезультата);
	ПроверитьКС2020_19(СтруктураРезультата);
	ПроверитьКС2020_20(СтруктураРезультата);
	ПроверитьКС2020_21(СтруктураРезультата);
	ПроверитьКС2020_22(СтруктураРезультата);
	ПроверитьКС2020_23(СтруктураРезультата);
	ПроверитьКС2020_24(СтруктураРезультата);
	ПроверитьКС2020_25(СтруктураРезультата);
	ПроверитьКС2020_26(СтруктураРезультата);
	ПроверитьКС2020_27(СтруктураРезультата);
	ПроверитьКС2020_28(СтруктураРезультата);
	ПроверитьКС2020_29(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_4
		
	ПроверитьКС2020_30(СтруктураРезультата);
	ПроверитьКС2020_31(СтруктураРезультата);
	ПроверитьКС2020_32(СтруктураРезультата);
	ПроверитьКС2020_33(СтруктураРезультата);
	ПроверитьКС2020_34(СтруктураРезультата);
	ПроверитьКС2020_35(СтруктураРезультата);
	ПроверитьКС2020_36(СтруктураРезультата);
	ПроверитьКС2020_37(СтруктураРезультата);
	ПроверитьКС2020_38(СтруктураРезультата);
	ПроверитьКС2020_39(СтруктураРезультата);
	ПроверитьКС2020_40(СтруктураРезультата);
	ПроверитьКС2020_41(СтруктураРезультата);
	ПроверитьКС2020_42(СтруктураРезультата);
	ПроверитьКС2020_43(СтруктураРезультата);
	ПроверитьКС2020_44(СтруктураРезультата);
	ПроверитьКС2020_45(СтруктураРезультата);
	ПроверитьКС2020_46(СтруктураРезультата);
	ПроверитьКС2020_47(СтруктураРезультата);
	ПроверитьКС2020_48(СтруктураРезультата);
	ПроверитьКС2020_49(СтруктураРезультата);
	ПроверитьКС2020_50(СтруктураРезультата);
	ПроверитьКС2020_51(СтруктураРезультата);
	ПроверитьКС2020_52(СтруктураРезультата);
	ПроверитьКС2020_53(СтруктураРезультата);
	ПроверитьКС2020_54(СтруктураРезультата);
	ПроверитьКС2020_55(СтруктураРезультата);
	ПроверитьКС2020_56(СтруктураРезультата);
	ПроверитьКС2020_57(СтруктураРезультата);
	ПроверитьКС2020_58(СтруктураРезультата);
	ПроверитьКС2020_59(СтруктураРезультата);
	ПроверитьКС2020_60(СтруктураРезультата);
	ПроверитьКС2020_61(СтруктураРезультата);
	ПроверитьКС2020_62(СтруктураРезультата);
	ПроверитьКС2020_63(СтруктураРезультата);
	ПроверитьКС2020_64(СтруктураРезультата);
	ПроверитьКС2020_65(СтруктураРезультата);
	ПроверитьКС2020_66(СтруктураРезультата);
	ПроверитьКС2020_67(СтруктураРезультата);
	ПроверитьКС2020_68(СтруктураРезультата);
	ПроверитьКС2020_69(СтруктураРезультата);
	ПроверитьКС2020_70(СтруктураРезультата);
	ПроверитьКС2020_71(СтруктураРезультата);
	ПроверитьКС2020_72(СтруктураРезультата);
	ПроверитьКС2020_73(СтруктураРезультата);
	ПроверитьКС2020_74(СтруктураРезультата);
	ПроверитьКС2020_75(СтруктураРезультата);
	ПроверитьКС2020_76(СтруктураРезультата);
	ПроверитьКС2020_77(СтруктураРезультата);
	ПроверитьКС2020_78(СтруктураРезультата);
	ПроверитьКС2020_79(СтруктураРезультата);
	ПроверитьКС2020_80(СтруктураРезультата);
	ПроверитьКС2020_81(СтруктураРезультата);
	ПроверитьКС2020_82(СтруктураРезультата);
	ПроверитьКС2020_83(СтруктураРезультата);
	ПроверитьКС2020_84(СтруктураРезультата);
	ПроверитьКС2020_85(СтруктураРезультата);
	ПроверитьКС2020_86(СтруктураРезультата);
	ПроверитьКС2020_87(СтруктураРезультата);
	ПроверитьКС2020_88(СтруктураРезультата);
	ПроверитьКС2020_89(СтруктураРезультата);
	ПроверитьКС2020_90(СтруктураРезультата);
	ПроверитьКС2020_91(СтруктураРезультата);
	ПроверитьКС2020_92(СтруктураРезультата);
	ПроверитьКС2020_93(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_3
		
	ПроверитьКС2020_94а(СтруктураРезультата);
	ПроверитьКС2020_94б(СтруктураРезультата);
	ПроверитьКС2020_95а(СтруктураРезультата);
	ПроверитьКС2020_95б(СтруктураРезультата);
	ПроверитьКС2020_96а(СтруктураРезультата);
	ПроверитьКС2020_96б(СтруктураРезультата);
	ПроверитьКС2020_97а(СтруктураРезультата);
	ПроверитьКС2020_97б(СтруктураРезультата);
	ПроверитьКС2020_98а(СтруктураРезультата);
	ПроверитьКС2020_98б(СтруктураРезультата);
	ПроверитьКС2020_99а(СтруктураРезультата);
	ПроверитьКС2020_99б(СтруктураРезультата);
	ПроверитьКС2020_100(СтруктураРезультата);
	ПроверитьКС2020_101(СтруктураРезультата);
	ПроверитьКС2020_102(СтруктураРезультата);
	ПроверитьКС2020_103(СтруктураРезультата);
	ПроверитьКС2020_104(СтруктураРезультата);
	ПроверитьКС2020_105(СтруктураРезультата);
	ПроверитьКС2020_106(СтруктураРезультата);
	ПроверитьКС2020_107(СтруктураРезультата);
	ПроверитьКС2020_108(СтруктураРезультата);
	ПроверитьКС2020_109(СтруктураРезультата);
	ПроверитьКС2020_110(СтруктураРезультата);
	ПроверитьКС2020_111(СтруктураРезультата);
	ПроверитьКС2020_112(СтруктураРезультата);
	ПроверитьКС2020_113(СтруктураРезультата);
	ПроверитьКС2020_114а(СтруктураРезультата);
	ПроверитьКС2020_114б(СтруктураРезультата);
	ПроверитьКС2020_115а(СтруктураРезультата);
	ПроверитьКС2020_115б(СтруктураРезультата);
	ПроверитьКС2020_116а(СтруктураРезультата);
	ПроверитьКС2020_116б(СтруктураРезультата);
	ПроверитьКС2020_117а(СтруктураРезультата);
	ПроверитьКС2020_117б(СтруктураРезультата);
	ПроверитьКС2020_118а(СтруктураРезультата);
	ПроверитьКС2020_118б(СтруктураРезультата);
	ПроверитьКС2020_119а(СтруктураРезультата);
	ПроверитьКС2020_119б(СтруктураРезультата);
	ПроверитьКС2020_120а(СтруктураРезультата);
	ПроверитьКС2020_120б(СтруктураРезультата);
	ПроверитьКС2020_121а(СтруктураРезультата);
	ПроверитьКС2020_121б(СтруктураРезультата);
	ПроверитьКС2020_122а(СтруктураРезультата);
	ПроверитьКС2020_122б(СтруктураРезультата);
	ПроверитьКС2020_123(СтруктураРезультата);
	ПроверитьКС2020_124(СтруктураРезультата);
	ПроверитьКС2020_125а(СтруктураРезультата);
	ПроверитьКС2020_125б(СтруктураРезультата);
	ПроверитьКС2020_126(СтруктураРезультата);
	ПроверитьКС2020_127(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2020_128(СтруктураРезультата);
	ПроверитьКС2020_129(СтруктураРезультата);
	ПроверитьКС2020_130(СтруктураРезультата);
	ПроверитьКС2020_131(СтруктураРезультата);
	ПроверитьКС2020_132а(СтруктураРезультата);
	ПроверитьКС2020_132б(СтруктураРезультата);
	ПроверитьКС2020_133(СтруктураРезультата);
	ПроверитьКС2020_134(СтруктураРезультата);
	ПроверитьКС2020_135а(СтруктураРезультата);
	ПроверитьКС2020_135б(СтруктураРезультата);
	ПроверитьКС2020_136(СтруктураРезультата);
	ПроверитьКС2020_137(СтруктураРезультата);
	ПроверитьКС2020_138а(СтруктураРезультата);
	ПроверитьКС2020_138б(СтруктураРезультата);
	ПроверитьКС2020_139(СтруктураРезультата);
	ПроверитьКС2020_140(СтруктураРезультата);
	ПроверитьКС2020_141(СтруктураРезультата);
	ПроверитьКС2020_142(СтруктураРезультата);
	ПроверитьКС2020_143(СтруктураРезультата);
	ПроверитьКС2020_144(СтруктураРезультата);
	ПроверитьКС2020_145а(СтруктураРезультата);
	ПроверитьКС2020_145б(СтруктураРезультата);
	ПроверитьКС2020_146(СтруктураРезультата);
	ПроверитьКС2020_147(СтруктураРезультата);
	ПроверитьКС2020_148а(СтруктураРезультата);
	ПроверитьКС2020_148б(СтруктураРезультата);
	ПроверитьКС2020_149(СтруктураРезультата);
	ПроверитьКС2020_150(СтруктураРезультата);
	ПроверитьКС2020_151а(СтруктураРезультата);
	ПроверитьКС2020_151б(СтруктураРезультата);
	ПроверитьКС2020_152(СтруктураРезультата);
	ПроверитьКС2020_153(СтруктураРезультата);
	ПроверитьКС2020_154(СтруктураРезультата);
	ПроверитьКС2020_155(СтруктураРезультата);
	ПроверитьКС2020_156(СтруктураРезультата);
	ПроверитьКС2020_157(СтруктураРезультата);
	ПроверитьКС2020_158(СтруктураРезультата);
	ПроверитьКС2020_159(СтруктураРезультата);
	ПроверитьКС2020_160а(СтруктураРезультата);
	ПроверитьКС2020_160б(СтруктураРезультата);
	ПроверитьКС2020_161(СтруктураРезультата);
	ПроверитьКС2020_162(СтруктураРезультата);
	ПроверитьКС2020_163а(СтруктураРезультата);
	ПроверитьКС2020_163б(СтруктураРезультата);
	ПроверитьКС2020_164(СтруктураРезультата);
	ПроверитьКС2020_165(СтруктураРезультата);
	ПроверитьКС2020_166а(СтруктураРезультата);
	ПроверитьКС2020_166б(СтруктураРезультата);
	ПроверитьКС2020_167(СтруктураРезультата);
	ПроверитьКС2020_168(СтруктураРезультата);
	ПроверитьКС2020_169(СтруктураРезультата);
	ПроверитьКС2020_170(СтруктураРезультата);
	ПроверитьКС2020_171(СтруктураРезультата);
	ПроверитьКС2020_172(СтруктураРезультата);
	ПроверитьКС2020_173(СтруктураРезультата);
	ПроверитьКС2020_174(СтруктураРезультата);
	ПроверитьКС2020_175(СтруктураРезультата);
	ПроверитьКС2020_176а(СтруктураРезультата);
	ПроверитьКС2020_176б(СтруктураРезультата);
	ПроверитьКС2020_177(СтруктураРезультата);
	ПроверитьКС2020_178(СтруктураРезультата);
	ПроверитьКС2020_179а(СтруктураРезультата);
	ПроверитьКС2020_179б(СтруктураРезультата);
	ПроверитьКС2020_180(СтруктураРезультата);
	ПроверитьКС2020_181(СтруктураРезультата);
	ПроверитьКС2020_182а(СтруктураРезультата);
	ПроверитьКС2020_182б(СтруктураРезультата);
	ПроверитьКС2020_183(СтруктураРезультата);
	ПроверитьКС2020_184(СтруктураРезультата);
	ПроверитьКС2020_185(СтруктураРезультата);
	ПроверитьКС2020_186(СтруктураРезультата);

#КонецОбласти

#КонецОбласти

#КонецОбласти

	Если СписокРасшифровкиформулы.Количество() = 0 Тогда
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(СписокРасшифровкиформулы		, СтруктураПараметров.АдресФормул);
	ПоместитьВоВременноеХранилище(СписокРасшифровкиПоказателей	, СтруктураПараметров.АдресПоказателей);
	СтруктураРезультата.Вставить("СписокРасшифровкиформулы"		, СтруктураПараметров.АдресФормул);
	СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей"	, СтруктураПараметров.АдресПоказателей);
	
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#Область КС_Документирование

Функция ВыполнитьДокументированиеОбъект2020() Экспорт
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Расчет по страховым взносам");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2020Кв1");
	
	ТаблицаОписаний		= СформироватьТаблицуОписаний2020();

#Область Проверки_Раздела_3
	
	ПроверитьКС2020_0_1а(СтруктураРезультата);
	ПроверитьКС2020_0_1б(СтруктураРезультата);
	ПроверитьКС2020_0_1в(СтруктураРезультата);
	ПроверитьКС2020_0_1г(СтруктураРезультата);
	ПроверитьКС2020_0_1д(СтруктураРезультата);
	ПроверитьКС2020_0_1е(СтруктураРезультата);
	ПроверитьКС2020_0_2а(СтруктураРезультата);
	ПроверитьКС2020_0_2б(СтруктураРезультата);
	ПроверитьКС2020_0_2в(СтруктураРезультата);
	ПроверитьКС2020_0_3(СтруктураРезультата);
	ПроверитьКС2020_0_4(СтруктураРезультата);
	ПроверитьКС2020_0_5а(СтруктураРезультата);
	ПроверитьКС2020_0_5б(СтруктураРезультата);
	ПроверитьКС2020_0_5в(СтруктураРезультата);
	ПроверитьКС2020_0_6а(СтруктураРезультата);
	ПроверитьКС2020_0_6б(СтруктураРезультата);
	ПроверитьКС2020_0_6в(СтруктураРезультата);
	ПроверитьКС2020_0_6г(СтруктураРезультата);
	ПроверитьКС2020_0_6д(СтруктураРезультата);
	ПроверитьКС2020_0_6е(СтруктураРезультата);
	ПроверитьКС2020_0_7а(СтруктураРезультата);
	ПроверитьКС2020_0_7б(СтруктураРезультата);
	ПроверитьКС2020_0_8а(СтруктураРезультата);
	ПроверитьКС2020_0_8б(СтруктураРезультата);
	ПроверитьКС2020_0_9а(СтруктураРезультата);
	ПроверитьКС2020_0_10а(СтруктураРезультата);
	ПроверитьКС2020_0_11а(СтруктураРезультата);
	ПроверитьКС2020_0_11б(СтруктураРезультата);
	ПроверитьКС2020_0_11в(СтруктураРезультата);
	ПроверитьКС2020_0_12(СтруктураРезультата);
	ПроверитьКС2020_0_13(СтруктураРезультата);
	ПроверитьКС2020_0_14а(СтруктураРезультата);
	ПроверитьКС2020_0_14б(СтруктураРезультата);
	ПроверитьКС2020_0_14в(СтруктураРезультата);
	ПроверитьКС2020_0_15(СтруктураРезультата);
	ПроверитьКС2020_0_16(СтруктураРезультата);
	ПроверитьКС2020_0_17а(СтруктураРезультата);
	ПроверитьКС2020_0_17б(СтруктураРезультата);
	ПроверитьКС2020_0_17в(СтруктураРезультата);
	ПроверитьКС2020_0_17г(СтруктураРезультата);
	ПроверитьКС2020_0_17д(СтруктураРезультата);
	ПроверитьКС2020_0_17е(СтруктураРезультата);
	ПроверитьКС2020_0_18а(СтруктураРезультата);
	ПроверитьКС2020_0_18б(СтруктураРезультата);
	ПроверитьКС2020_0_19а(СтруктураРезультата);
	ПроверитьКС2020_0_19б(СтруктураРезультата);
	ПроверитьКС2020_0_20а(СтруктураРезультата);
	ПроверитьКС2020_0_20б(СтруктураРезультата);
	ПроверитьКС2020_0_20в(СтруктураРезультата);
	ПроверитьКС2020_0_21(СтруктураРезультата);
	ПроверитьКС2020_0_22а(СтруктураРезультата);
	ПроверитьКС2020_0_22б(СтруктураРезультата);
	ПроверитьКС2020_0_22в(СтруктураРезультата);
	ПроверитьКС2020_0_22г(СтруктураРезультата);
	ПроверитьКС2020_0_23(СтруктураРезультата);
	ПроверитьКС2020_0_24(СтруктураРезультата);
	ПроверитьКС2020_0_25(СтруктураРезультата);
	ПроверитьКС2020_0_26(СтруктураРезультата);
	ПроверитьКС2020_0_27(СтруктураРезультата);
	ПроверитьКС2020_0_50а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54в_доп(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_1
	
	ПроверитьКС2020_1_1(СтруктураРезультата);
	ПроверитьКС2020_1_2(СтруктураРезультата);
	ПроверитьКС2020_1_3(СтруктураРезультата);
	ПроверитьКС2020_1_4(СтруктураРезультата);
	ПроверитьКС2020_1_5(СтруктураРезультата);
	ПроверитьКС2020_1_6(СтруктураРезультата);
	ПроверитьКС2020_1_7(СтруктураРезультата);
	ПроверитьКС2020_1_8(СтруктураРезультата);
	ПроверитьКС2020_1_9(СтруктураРезультата);
	ПроверитьКС2020_1_10(СтруктураРезультата);
	ПроверитьКС2020_1_11(СтруктураРезультата);
	ПроверитьКС2020_1_12а(СтруктураРезультата);
	ПроверитьКС2020_1_12б(СтруктураРезультата);
	ПроверитьКС2020_1_13а(СтруктураРезультата);
	ПроверитьКС2020_1_13б(СтруктураРезультата);
	ПроверитьКС2020_1_14а(СтруктураРезультата);
	ПроверитьКС2020_1_14б(СтруктураРезультата);
	ПроверитьКС2020_1_15а(СтруктураРезультата);
	ПроверитьКС2020_1_15б(СтруктураРезультата);
	ПроверитьКС2020_1_16а(СтруктураРезультата);
	ПроверитьКС2020_1_16б(СтруктураРезультата);
	ПроверитьКС2020_1_17а(СтруктураРезультата);
	ПроверитьКС2020_1_17б(СтруктураРезультата);
	ПроверитьКС2020_1_18а(СтруктураРезультата);
	ПроверитьКС2020_1_18б(СтруктураРезультата);
	ПроверитьКС2020_1_19а(СтруктураРезультата);
	ПроверитьКС2020_1_19б(СтруктураРезультата);
	ПроверитьКС2020_1_20(СтруктураРезультата);
	ПроверитьКС2020_1_21(СтруктураРезультата);
	ПроверитьКС2020_1_22(СтруктураРезультата);
	ПроверитьКС2020_1_23(СтруктураРезультата);
	ПроверитьКС2020_1_24(СтруктураРезультата);
	ПроверитьКС2020_1_25(СтруктураРезультата);
	ПроверитьКС2020_1_26(СтруктураРезультата);
	ПроверитьКС2020_1_27(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_1

#Область Проверки_Подраздела_1_1
	
	ПроверитьКС2020_1_28(СтруктураРезультата);
	ПроверитьКС2020_1_29(СтруктураРезультата);
	ПроверитьКС2020_1_30(СтруктураРезультата);
	ПроверитьКС2020_1_31(СтруктураРезультата);
	ПроверитьКС2020_1_32(СтруктураРезультата);
	ПроверитьКС2020_1_33(СтруктураРезультата);
	ПроверитьКС2020_1_34(СтруктураРезультата);
	ПроверитьКС2020_1_35(СтруктураРезультата);
	ПроверитьКС2020_1_36(СтруктураРезультата);
	ПроверитьКС2020_1_37(СтруктураРезультата);
	ПроверитьКС2020_1_38(СтруктураРезультата);
	ПроверитьКС2020_1_39(СтруктураРезультата);
	ПроверитьКС2020_1_40(СтруктураРезультата);
	ПроверитьКС2020_1_41(СтруктураРезультата);
	ПроверитьКС2020_1_42(СтруктураРезультата);
	ПроверитьКС2020_1_43(СтруктураРезультата);
	ПроверитьКС2020_1_44(СтруктураРезультата);
	ПроверитьКС2020_1_45(СтруктураРезультата);
	ПроверитьКС2020_1_46(СтруктураРезультата);
	ПроверитьКС2020_1_47(СтруктураРезультата);
	ПроверитьКС2020_1_48(СтруктураРезультата);
	ПроверитьКС2020_1_49(СтруктураРезультата);
	ПроверитьКС2020_1_50(СтруктураРезультата);
	ПроверитьКС2020_1_51(СтруктураРезультата);
	ПроверитьКС2020_1_52(СтруктураРезультата);
	ПроверитьКС2020_1_53(СтруктураРезультата);
	ПроверитьКС2020_1_54(СтруктураРезультата);
	ПроверитьКС2020_1_55(СтруктураРезультата);
	ПроверитьКС2020_1_56(СтруктураРезультата);
	ПроверитьКС2020_1_57(СтруктураРезультата);
	ПроверитьКС2020_1_58(СтруктураРезультата);
	ПроверитьКС2020_1_59(СтруктураРезультата);
	ПроверитьКС2020_1_60(СтруктураРезультата);
	ПроверитьКС2020_1_61(СтруктураРезультата);
	ПроверитьКС2020_1_62(СтруктураРезультата);
	ПроверитьКС2020_1_63(СтруктураРезультата);
	ПроверитьКС2020_1_64(СтруктураРезультата);
	ПроверитьКС2020_1_65(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_2
	
	ПроверитьКС2020_1_66(СтруктураРезультата);
	ПроверитьКС2020_1_67(СтруктураРезультата);
	ПроверитьКС2020_1_68(СтруктураРезультата);
	ПроверитьКС2020_1_69(СтруктураРезультата);
	ПроверитьКС2020_1_70(СтруктураРезультата);
	ПроверитьКС2020_1_71(СтруктураРезультата);
	ПроверитьКС2020_1_72(СтруктураРезультата);
	ПроверитьКС2020_1_73(СтруктураРезультата);
	ПроверитьКС2020_1_74(СтруктураРезультата);
	ПроверитьКС2020_1_75(СтруктураРезультата);
	ПроверитьКС2020_1_76(СтруктураРезультата);
	ПроверитьКС2020_1_77(СтруктураРезультата);
	ПроверитьКС2020_1_78(СтруктураРезультата);
	ПроверитьКС2020_1_79(СтруктураРезультата);
	ПроверитьКС2020_1_80(СтруктураРезультата);
	ПроверитьКС2020_1_81(СтруктураРезультата);
	ПроверитьКС2020_1_82(СтруктураРезультата);
	ПроверитьКС2020_1_83(СтруктураРезультата);
	ПроверитьКС2020_1_84(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_1
	
	ПроверитьКС2020_1_85(СтруктураРезультата);
	ПроверитьКС2020_1_86(СтруктураРезультата);
	ПроверитьКС2020_1_87(СтруктураРезультата);
	ПроверитьКС2020_1_88(СтруктураРезультата);
	ПроверитьКС2020_1_89(СтруктураРезультата);
	ПроверитьКС2020_1_90(СтруктураРезультата);
	ПроверитьКС2020_1_91(СтруктураРезультата);
	ПроверитьКС2020_1_92(СтруктураРезультата);
	ПроверитьКС2020_1_93(СтруктураРезультата);
	ПроверитьКС2020_1_94(СтруктураРезультата);
	ПроверитьКС2020_1_95(СтруктураРезультата);
	ПроверитьКС2020_1_96(СтруктураРезультата);
	ПроверитьКС2020_1_97(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_2
	
	ПроверитьКС2020_1_98(СтруктураРезультата);
	ПроверитьКС2020_1_99(СтруктураРезультата);
	ПроверитьКС2020_1_100(СтруктураРезультата);
	ПроверитьКС2020_1_101(СтруктураРезультата);
	ПроверитьКС2020_1_102(СтруктураРезультата);
	ПроверитьКС2020_1_103(СтруктураРезультата);
	ПроверитьКС2020_1_104(СтруктураРезультата);
	ПроверитьКС2020_1_105(СтруктураРезультата);
	ПроверитьКС2020_1_106(СтруктураРезультата);
	ПроверитьКС2020_1_107(СтруктураРезультата);
	ПроверитьКС2020_1_108(СтруктураРезультата);
	ПроверитьКС2020_1_109(СтруктураРезультата);
	
#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1
	
	ПроверитьКС2020_1_110(СтруктураРезультата);
	ПроверитьКС2020_1_111(СтруктураРезультата);
	ПроверитьКС2020_1_112(СтруктураРезультата);
	ПроверитьКС2020_1_113(СтруктураРезультата);
	ПроверитьКС2020_1_114(СтруктураРезультата);
	ПроверитьКС2020_1_115(СтруктураРезультата);
	ПроверитьКС2020_1_116(СтруктураРезультата);
	ПроверитьКС2020_1_117(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_2
	
	ПроверитьКС2020_1_118(СтруктураРезультата);
	ПроверитьКС2020_1_119(СтруктураРезультата);
	ПроверитьКС2020_1_120(СтруктураРезультата);
	ПроверитьКС2020_1_121(СтруктураРезультата);
	ПроверитьКС2020_1_122(СтруктураРезультата);
	ПроверитьКС2020_1_123(СтруктураРезультата);
	ПроверитьКС2020_1_124(СтруктураРезультата);
	ПроверитьКС2020_1_125(СтруктураРезультата);
	ПроверитьКС2020_1_126(СтруктураРезультата);
	ПроверитьКС2020_1_127(СтруктураРезультата);
	ПроверитьКС2020_1_128(СтруктураРезультата);
	ПроверитьКС2020_1_129(СтруктураРезультата);
	ПроверитьКС2020_1_130(СтруктураРезультата);
	ПроверитьКС2020_1_131(СтруктураРезультата);
	ПроверитьКС2020_1_132(СтруктураРезультата);
	ПроверитьКС2020_1_133(СтруктураРезультата);
	ПроверитьКС2020_1_134(СтруктураРезультата);
	ПроверитьКС2020_1_135(СтруктураРезультата);
	ПроверитьКС2020_1_136(СтруктураРезультата);
	ПроверитьКС2020_1_137(СтруктураРезультата);
	ПроверитьКС2020_1_138(СтруктураРезультата);
	ПроверитьКС2020_1_139(СтруктураРезультата);
	ПроверитьКС2020_1_140(СтруктураРезультата);
	ПроверитьКС2020_1_141(СтруктураРезультата);
	ПроверитьКС2020_1_142(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_5
	
	ПроверитьКС2020_1_143(СтруктураРезультата);
	ПроверитьКС2020_1_144(СтруктураРезультата);
	ПроверитьКС2020_1_145(СтруктураРезультата);
	ПроверитьКС2020_1_146(СтруктураРезультата);
	ПроверитьКС2020_1_147(СтруктураРезультата);
	ПроверитьКС2020_1_148(СтруктураРезультата);
	ПроверитьКС2020_1_149(СтруктураРезультата);
	ПроверитьКС2020_1_150(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_6

	ПроверитьКС2020_1_151(СтруктураРезультата);
	ПроверитьКС2020_1_152(СтруктураРезультата);
	ПроверитьКС2020_1_153(СтруктураРезультата);
	ПроверитьКС2020_1_154(СтруктураРезультата);
	ПроверитьКС2020_1_155(СтруктураРезультата);
	ПроверитьКС2020_1_156(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_7
	
	ПроверитьКС2020_1_157(СтруктураРезультата);
	ПроверитьКС2020_1_158(СтруктураРезультата);
	ПроверитьКС2020_1_159(СтруктураРезультата);
	ПроверитьКС2020_1_160(СтруктураРезультата);
	ПроверитьКС2020_1_161(СтруктураРезультата);
	ПроверитьКС2020_1_162(СтруктураРезультата);
	ПроверитьКС2020_1_163(СтруктураРезультата);
	ПроверитьКС2020_1_164(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_8
	
	ПроверитьКС2020_1_165(СтруктураРезультата);
	ПроверитьКС2020_1_166(СтруктураРезультата);
	ПроверитьКС2020_1_167(СтруктураРезультата);
	ПроверитьКС2020_1_168(СтруктураРезультата);
	ПроверитьКС2020_1_169(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_9
	
	ПроверитьКС2020_1_170(СтруктураРезультата);
	ПроверитьКС2020_1_171(СтруктураРезультата);
	ПроверитьКС2020_1_172(СтруктураРезультата);
	ПроверитьКС2020_1_173(СтруктураРезультата);
	ПроверитьКС2020_1_174(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_2
	
	ПроверитьКС2020_1_175(СтруктураРезультата);
	ПроверитьКС2020_1_176(СтруктураРезультата);
	ПроверитьКС2020_1_177(СтруктураРезультата);
	ПроверитьКС2020_1_178(СтруктураРезультата);
	ПроверитьКС2020_1_179(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Прочие
	
	ПроверитьКС2020_1_180(СтруктураРезультата);
	ПроверитьКС2020_1_181(СтруктураРезультата);
	ПроверитьКС2020_1_182(СтруктураРезультата);
	ПроверитьКС2020_1_183(СтруктураРезультата);
	ПроверитьКС2020_1_184(СтруктураРезультата);
	ПроверитьКС2020_1_185(СтруктураРезультата);
	ПроверитьКС2020_1_186(СтруктураРезультата);
	ПроверитьКС2020_1_187(СтруктураРезультата);
	ПроверитьКС2020_1_188(СтруктураРезультата);
	ПроверитьКС2020_1_189(СтруктураРезультата);
	ПроверитьКС2020_1_190(СтруктураРезультата);
	ПроверитьКС2020_1_191(СтруктураРезультата);
	ПроверитьКС2020_1_192(СтруктураРезультата);
	ПроверитьКС2020_1_193(СтруктураРезультата);
	ПроверитьКС2020_1_194(СтруктураРезультата);
	ПроверитьКС2020_1_195(СтруктураРезультата);
	ПроверитьКС2020_1_196(СтруктураРезультата);
	ПроверитьКС2020_1_197(СтруктураРезультата);
	ПроверитьКС2020_1_198(СтруктураРезультата);
	ПроверитьКС2020_1_199(СтруктураРезультата);
	ПроверитьКС2020_1_300_доп(СтруктураРезультата);
	ПроверитьКС2020_1_301_доп(СтруктураРезультата);
	ПроверитьКС2020_1_302_доп(СтруктураРезультата);
	ПроверитьКС2020_2_1(СтруктураРезультата);
	ПроверитьКС2020_2_2(СтруктураРезультата);
	ПроверитьКС2020_2_3(СтруктураРезультата);
	ПроверитьКС2020_2_4(СтруктураРезультата);
	ПроверитьКС2020_2_5(СтруктураРезультата);
	ПроверитьКС2020_2_6(СтруктураРезультата);
	ПроверитьКС2020_2_7(СтруктураРезультата);
	ПроверитьКС2020_2_8(СтруктураРезультата);
	ПроверитьКС2020_2_9(СтруктураРезультата);
	ПроверитьКС2020_2_10(СтруктураРезультата);
	ПроверитьКС2020_2_11(СтруктураРезультата);
	ПроверитьКС2020_2_12(СтруктураРезультата);
	ПроверитьКС2020_2_13(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

	ПроверитьКС2020_1(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_3

	ПроверитьКС2020_2(СтруктураРезультата);
	ПроверитьКС2020_3(СтруктураРезультата);
	ПроверитьКС2020_4(СтруктураРезультата);
	ПроверитьКС2020_5(СтруктураРезультата);
	ПроверитьКС2020_6(СтруктураРезультата);
	ПроверитьКС2020_7(СтруктураРезультата);
	ПроверитьКС2020_8(СтруктураРезультата);
	ПроверитьКС2020_9(СтруктураРезультата);
	ПроверитьКС2020_10(СтруктураРезультата);
	ПроверитьКС2020_11(СтруктураРезультата);
	ПроверитьКС2020_12(СтруктураРезультата);
	ПроверитьКС2020_13(СтруктураРезультата);
	ПроверитьКС2020_14(СтруктураРезультата);
	ПроверитьКС2020_15(СтруктураРезультата);
	ПроверитьКС2020_16(СтруктураРезультата);
	ПроверитьКС2020_17(СтруктураРезультата);
	ПроверитьКС2020_18(СтруктураРезультата);
	ПроверитьКС2020_19(СтруктураРезультата);
	ПроверитьКС2020_20(СтруктураРезультата);
	ПроверитьКС2020_21(СтруктураРезультата);
	ПроверитьКС2020_22(СтруктураРезультата);
	ПроверитьКС2020_23(СтруктураРезультата);
	ПроверитьКС2020_24(СтруктураРезультата);
	ПроверитьКС2020_25(СтруктураРезультата);
	ПроверитьКС2020_26(СтруктураРезультата);
	ПроверитьКС2020_27(СтруктураРезультата);
	ПроверитьКС2020_28(СтруктураРезультата);
	ПроверитьКС2020_29(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2020_30(СтруктураРезультата);
	ПроверитьКС2020_31(СтруктураРезультата);
	ПроверитьКС2020_32(СтруктураРезультата);
	ПроверитьКС2020_33(СтруктураРезультата);
	ПроверитьКС2020_34(СтруктураРезультата);
	ПроверитьКС2020_35(СтруктураРезультата);
	ПроверитьКС2020_36(СтруктураРезультата);
	ПроверитьКС2020_37(СтруктураРезультата);
	ПроверитьКС2020_38(СтруктураРезультата);
	ПроверитьКС2020_39(СтруктураРезультата);
	ПроверитьКС2020_40(СтруктураРезультата);
	ПроверитьКС2020_41(СтруктураРезультата);
	ПроверитьКС2020_42(СтруктураРезультата);
	ПроверитьКС2020_43(СтруктураРезультата);
	ПроверитьКС2020_44(СтруктураРезультата);
	ПроверитьКС2020_45(СтруктураРезультата);
	ПроверитьКС2020_46(СтруктураРезультата);
	ПроверитьКС2020_47(СтруктураРезультата);
	ПроверитьКС2020_48(СтруктураРезультата);
	ПроверитьКС2020_49(СтруктураРезультата);
	ПроверитьКС2020_50(СтруктураРезультата);
	ПроверитьКС2020_51(СтруктураРезультата);
	ПроверитьКС2020_52(СтруктураРезультата);
	ПроверитьКС2020_53(СтруктураРезультата);
	ПроверитьКС2020_54(СтруктураРезультата);
	ПроверитьКС2020_55(СтруктураРезультата);
	ПроверитьКС2020_56(СтруктураРезультата);
	ПроверитьКС2020_57(СтруктураРезультата);
	ПроверитьКС2020_58(СтруктураРезультата);
	ПроверитьКС2020_59(СтруктураРезультата);
	ПроверитьКС2020_60(СтруктураРезультата);
	ПроверитьКС2020_61(СтруктураРезультата);
	ПроверитьКС2020_62(СтруктураРезультата);
	ПроверитьКС2020_63(СтруктураРезультата);
	ПроверитьКС2020_64(СтруктураРезультата);
	ПроверитьКС2020_65(СтруктураРезультата);
	ПроверитьКС2020_66(СтруктураРезультата);
	ПроверитьКС2020_67(СтруктураРезультата);
	ПроверитьКС2020_68(СтруктураРезультата);
	ПроверитьКС2020_69(СтруктураРезультата);
	ПроверитьКС2020_70(СтруктураРезультата);
	ПроверитьКС2020_71(СтруктураРезультата);
	ПроверитьКС2020_72(СтруктураРезультата);
	ПроверитьКС2020_73(СтруктураРезультата);
	ПроверитьКС2020_74(СтруктураРезультата);
	ПроверитьКС2020_75(СтруктураРезультата);
	ПроверитьКС2020_76(СтруктураРезультата);
	ПроверитьКС2020_77(СтруктураРезультата);
	ПроверитьКС2020_78(СтруктураРезультата);
	ПроверитьКС2020_79(СтруктураРезультата);
	ПроверитьКС2020_80(СтруктураРезультата);
	ПроверитьКС2020_81(СтруктураРезультата);
	ПроверитьКС2020_82(СтруктураРезультата);
	ПроверитьКС2020_83(СтруктураРезультата);
	ПроверитьКС2020_84(СтруктураРезультата);
	ПроверитьКС2020_85(СтруктураРезультата);
	ПроверитьКС2020_86(СтруктураРезультата);
	ПроверитьКС2020_87(СтруктураРезультата);
	ПроверитьКС2020_88(СтруктураРезультата);
	ПроверитьКС2020_89(СтруктураРезультата);
	ПроверитьКС2020_90(СтруктураРезультата);
	ПроверитьКС2020_91(СтруктураРезультата);
	ПроверитьКС2020_92(СтруктураРезультата);
	ПроверитьКС2020_93(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_3

	ПроверитьКС2020_94а(СтруктураРезультата);
	ПроверитьКС2020_94б(СтруктураРезультата);
	ПроверитьКС2020_95а(СтруктураРезультата);
	ПроверитьКС2020_95б(СтруктураРезультата);
	ПроверитьКС2020_96а(СтруктураРезультата);
	ПроверитьКС2020_96б(СтруктураРезультата);
	ПроверитьКС2020_97а(СтруктураРезультата);
	ПроверитьКС2020_97б(СтруктураРезультата);
	ПроверитьКС2020_98а(СтруктураРезультата);
	ПроверитьКС2020_98б(СтруктураРезультата);
	ПроверитьКС2020_99а(СтруктураРезультата);
	ПроверитьКС2020_99б(СтруктураРезультата);
	ПроверитьКС2020_100(СтруктураРезультата);
	ПроверитьКС2020_101(СтруктураРезультата);
	ПроверитьКС2020_102(СтруктураРезультата);
	ПроверитьКС2020_103(СтруктураРезультата);
	ПроверитьКС2020_104(СтруктураРезультата);
	ПроверитьКС2020_105(СтруктураРезультата);
	ПроверитьКС2020_106(СтруктураРезультата);
	ПроверитьКС2020_107(СтруктураРезультата);
	ПроверитьКС2020_108(СтруктураРезультата);
	ПроверитьКС2020_109(СтруктураРезультата);
	ПроверитьКС2020_110(СтруктураРезультата);
	ПроверитьКС2020_111(СтруктураРезультата);
	ПроверитьКС2020_112(СтруктураРезультата);
	ПроверитьКС2020_113(СтруктураРезультата);
	ПроверитьКС2020_114а(СтруктураРезультата);
	ПроверитьКС2020_114б(СтруктураРезультата);
	ПроверитьКС2020_115а(СтруктураРезультата);
	ПроверитьКС2020_115б(СтруктураРезультата);
	ПроверитьКС2020_116а(СтруктураРезультата);
	ПроверитьКС2020_116б(СтруктураРезультата);
	ПроверитьКС2020_117а(СтруктураРезультата);
	ПроверитьКС2020_117б(СтруктураРезультата);
	ПроверитьКС2020_118а(СтруктураРезультата);
	ПроверитьКС2020_118б(СтруктураРезультата);
	ПроверитьКС2020_119а(СтруктураРезультата);
	ПроверитьКС2020_119б(СтруктураРезультата);
	ПроверитьКС2020_120а(СтруктураРезультата);
	ПроверитьКС2020_120б(СтруктураРезультата);
	ПроверитьКС2020_121а(СтруктураРезультата);
	ПроверитьКС2020_121б(СтруктураРезультата);
	ПроверитьКС2020_122а(СтруктураРезультата);
	ПроверитьКС2020_122б(СтруктураРезультата);
	ПроверитьКС2020_123(СтруктураРезультата);
	ПроверитьКС2020_124(СтруктураРезультата);
	ПроверитьКС2020_125а(СтруктураРезультата);
	ПроверитьКС2020_125б(СтруктураРезультата);
	ПроверитьКС2020_126(СтруктураРезультата);
	ПроверитьКС2020_127(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2020_128(СтруктураРезультата);
	ПроверитьКС2020_129(СтруктураРезультата);
	ПроверитьКС2020_130(СтруктураРезультата);
	ПроверитьКС2020_131(СтруктураРезультата);
	ПроверитьКС2020_132а(СтруктураРезультата);
	ПроверитьКС2020_132б(СтруктураРезультата);
	ПроверитьКС2020_133(СтруктураРезультата);
	ПроверитьКС2020_134(СтруктураРезультата);
	ПроверитьКС2020_135а(СтруктураРезультата);
	ПроверитьКС2020_135б(СтруктураРезультата);
	ПроверитьКС2020_136(СтруктураРезультата);
	ПроверитьКС2020_137(СтруктураРезультата);
	ПроверитьКС2020_138а(СтруктураРезультата);
	ПроверитьКС2020_138б(СтруктураРезультата);
	ПроверитьКС2020_139(СтруктураРезультата);
	ПроверитьКС2020_140(СтруктураРезультата);
	ПроверитьКС2020_141(СтруктураРезультата);
	ПроверитьКС2020_142(СтруктураРезультата);
	ПроверитьКС2020_143(СтруктураРезультата);
	ПроверитьКС2020_144(СтруктураРезультата);
	ПроверитьКС2020_145а(СтруктураРезультата);
	ПроверитьКС2020_145б(СтруктураРезультата);
	ПроверитьКС2020_146(СтруктураРезультата);
	ПроверитьКС2020_147(СтруктураРезультата);
	ПроверитьКС2020_148а(СтруктураРезультата);
	ПроверитьКС2020_148б(СтруктураРезультата);
	ПроверитьКС2020_149(СтруктураРезультата);
	ПроверитьКС2020_150(СтруктураРезультата);
	ПроверитьКС2020_151а(СтруктураРезультата);
	ПроверитьКС2020_151б(СтруктураРезультата);
	ПроверитьКС2020_152(СтруктураРезультата);
	ПроверитьКС2020_153(СтруктураРезультата);
	ПроверитьКС2020_154(СтруктураРезультата);
	ПроверитьКС2020_155(СтруктураРезультата);
	ПроверитьКС2020_156(СтруктураРезультата);
	ПроверитьКС2020_157(СтруктураРезультата);
	ПроверитьКС2020_158(СтруктураРезультата);
	ПроверитьКС2020_159(СтруктураРезультата);
	ПроверитьКС2020_160а(СтруктураРезультата);
	ПроверитьКС2020_160б(СтруктураРезультата);
	ПроверитьКС2020_161(СтруктураРезультата);
	ПроверитьКС2020_162(СтруктураРезультата);
	ПроверитьКС2020_163а(СтруктураРезультата);
	ПроверитьКС2020_163б(СтруктураРезультата);
	ПроверитьКС2020_164(СтруктураРезультата);
	ПроверитьКС2020_165(СтруктураРезультата);
	ПроверитьКС2020_166а(СтруктураРезультата);
	ПроверитьКС2020_166б(СтруктураРезультата);
	ПроверитьКС2020_167(СтруктураРезультата);
	ПроверитьКС2020_168(СтруктураРезультата);
	ПроверитьКС2020_169(СтруктураРезультата);
	ПроверитьКС2020_170(СтруктураРезультата);
	ПроверитьКС2020_171(СтруктураРезультата);
	ПроверитьКС2020_172(СтруктураРезультата);
	ПроверитьКС2020_173(СтруктураРезультата);
	ПроверитьКС2020_174(СтруктураРезультата);
	ПроверитьКС2020_175(СтруктураРезультата);
	ПроверитьКС2020_176а(СтруктураРезультата);
	ПроверитьКС2020_176б(СтруктураРезультата);
	ПроверитьКС2020_177(СтруктураРезультата);
	ПроверитьКС2020_178(СтруктураРезультата);
	ПроверитьКС2020_179а(СтруктураРезультата);
	ПроверитьКС2020_179б(СтруктураРезультата);
	ПроверитьКС2020_180(СтруктураРезультата);
	ПроверитьКС2020_181(СтруктураРезультата);
	ПроверитьКС2020_182а(СтруктураРезультата);
	ПроверитьКС2020_182б(СтруктураРезультата);
	ПроверитьКС2020_183(СтруктураРезультата);
	ПроверитьКС2020_184(СтруктураРезультата);
	ПроверитьКС2020_185(СтруктураРезультата);
	ПроверитьКС2020_186(СтруктураРезультата);
	
#КонецОбласти

#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция СформироватьТаблицуОписаний2020()
	
	ТипСтрока20		= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20));
	ТипСтрока100	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100));
	ТипСтрока900	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(900));
	ТипБулево		= Новый ОписаниеТипов("Булево");
	
	ТаблицаОписаний = Новый ТаблицаЗначений;
	ТаблицаОписаний.Колонки.Добавить("НомерКС"			, ТипСтрока20);
	ТаблицаОписаний.Колонки.Добавить("Раздел"			, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеКС"		, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Нарушение"		, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеОшибки"	, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Условие"			, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Комментарий"		, ТипСтрока900);
	
	Возврат ТаблицаОписаний;
	
КонецФункции // СформироватьТаблицуОписаний;()

#КонецОбласти

#Область КС_Данные

Процедура СформироватьСлужебныеДанные2020()

#Область ОсновныеНастройки

	ДанныеКС.Вставить("Отчет"					, Неопределено);
	ДанныеКС.Вставить("ТекОтчет"				, ПараметрыКС.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка);
	ДанныеКС.Вставить("Вид"						, ПараметрыКС.СтруктураДанныхТитульный.НомерКорректировки);
	ДанныеКС.Вставить("Мес"						, Месяц(ПараметрыКС.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ДанныеКС.Вставить("Год"						, Год(ПараметрыКС.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ДанныеКС.Вставить("Организация"				, ПараметрыКС.СтруктураРеквизитовФормы.Организация);
	ДанныеКС.Вставить("ИмяФормы"				, ПараметрыКС.мВыбраннаяФорма);
	ДанныеКС.Вставить("ДатаОкончанияПериода"	, ПараметрыКС.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ДанныеКС.Вставить("СтруктураРеквизитовФормы", ПараметрыКС.СтруктураРеквизитовФормы);
	ДанныеКС.Вставить("СтруктураМнРазделов"		, ПараметрыКС.мСтруктураМногоуровневыхРазделов);
	ДанныеКС.Вставить("ОКВЭД2"					, ПараметрыКС.СтруктураДанныхТитульный.ОКВЭД);
	ДанныеКС.Вставить("ЛимитРасшифровки"		, 1000);
	ДанныеКС.Вставить("ЛимитСотрудников"		, 500);
	
	Попытка
		
		ДанныеСреднейЗарплаты = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСреднеотраслевуюЗарплату(
		ДанныеКС.Организация, Лев(ПараметрыКС.СтруктураДанныхТитульный.КПП, 2), 
		СокрЛП(ПараметрыКС.СтруктураДанныхТитульный.ОКВЭД));
		МРОТ = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьМРОТ(
		ДанныеКС.ДатаОкончанияПериода);
		ПредельнаяВеличинаБазы = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьПредельнуюВеличинуБазы(
		ДанныеКС.ДатаОкончанияПериода);
		ПострадавшиеОтрасли = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
		
	Исключение
		
		ДанныеСреднейЗарплаты = Новый Структура("КодРегиона, КодОКВЭД, СредняяЗарплата");
		МРОТ = Неопределено;
		ПредельнаяВеличинаБазы = Неопределено;
		ПострадавшиеОтрасли = Неопределено;
		
	КонецПопытки;
	
	ДанныеКС.Вставить("КодРегиона"				, ДанныеСреднейЗарплаты.КодРегиона);
	ДанныеКС.Вставить("КодОКВЭД"				, ДанныеСреднейЗарплаты.КодОКВЭД);
	ДанныеКС.Вставить("СредняяЗарплата"			, ДанныеСреднейЗарплаты.СредняяЗарплата);
	ДанныеКС.Вставить("МРОТ"					, МРОТ);
	ДанныеКС.Вставить("ПредельнаяВеличинаБазы"	, ПредельнаяВеличинаБазы);
	ДанныеКС.Вставить("ПострадавшиеОтрасли"		, ПострадавшиеОтрасли);
	ДанныеКС.Вставить("ЭтоПострадавшаяОтрасль"	, ЭтоПострадавшаяОтрасль2020());
	
#КонецОбласти

#Область ТарифыСтавкиКатегории

	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4));
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(2));
	ТипЧисло2	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3, 1));
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("Категории321"		, "Категории321_2020");
	СтруктураТаблиц.Вставить("Категории322"		, "Категории322_2020");
	СтруктураТаблиц.Вставить("Ставки321"		, "Ставки321_2020");
	СтруктураТаблиц.Вставить("Ставки322"		, "Ставки322_2020");
	СтруктураТаблиц.Вставить("Ставки112"		, "Ставки112_2020");
	СтруктураТаблиц.Вставить("Ставки201"		, "Ставки201_2020");
	СтруктураТаблиц.Вставить("Ставки202"		, "Ставки202_2020");
	
	Категории321	= Новый ТаблицаЗначений;
	Категории321.Колонки.Добавить("Категория"	, ТипСтрока);
	Категории321.Колонки.Добавить("Код"			, ТипСтрока);
	
	Категории322	= Новый ТаблицаЗначений;
	Категории322.Колонки.Добавить("Категория"	, ТипСтрока);
	Категории322.Колонки.Добавить("Код"			, ТипСтрока);
	
	Ставки321		= Новый ТаблицаЗначений;
	Ставки321.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки321.Колонки.Добавить("Ставка"			, ТипЧисло);
	
	Ставки322		= Новый ТаблицаЗначений;
	Ставки322.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки322.Колонки.Добавить("Ставка"			, ТипЧисло);
	
	Ставки112		= Новый ТаблицаЗначений;
	Ставки112.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки112.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Ставки201		= Новый ТаблицаЗначений;
	Ставки201.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки201.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Ставки202		= Новый ТаблицаЗначений;
	Ставки202.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки202.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Категории321.Индексы.Добавить("Категория");
	Категории322.Индексы.Добавить("Категория");
	Ставки321.Индексы.Добавить("Код");
	Ставки322.Индексы.Добавить("Код");

	ДанныеКС.Вставить("Категории321"	, Категории321);
	ДанныеКС.Вставить("Категории322"	, Категории322);
	ДанныеКС.Вставить("Ставки321"		, Ставки321);
	ДанныеКС.Вставить("Ставки322"		, Ставки322);
	ДанныеКС.Вставить("Ставки112"		, Ставки112);
	ДанныеКС.Вставить("Ставки201"		, Ставки201);
	ДанныеКС.Вставить("Ставки202"		, Ставки202);
	
	МакетНастроекКС = ЭтотОбъект.ПолучитьМакет("НастройкиКС2020Кв1");

	Для каждого Элемент Из СтруктураТаблиц Цикл
		Область				= МакетНастроекКС.Области.Найти(Элемент.Значение);
		Для НомерСтроки		= Область.Верх По Область.Низ Цикл
			НовСтрока		= ДанныеКС[Элемент.Ключ].Добавить();
			НовСтрока[0]	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 1).Текст);
			НовСтрока[1]	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 2).Текст);
		КонецЦикла;
	КонецЦикла;
	
	#КонецОбласти

#Область НастройкиРасшифровки
	
	ПредставлениеРазделов = Новый Структура();
	
	ПредставлениеРазделов.Вставить("П00003", "Раздела 3");
	ПредставлениеРазделов.Вставить("П00031", "подраздел 3.1 Раздела 3");
	ПредставлениеРазделов.Вставить("П00321", "подраздела 3.2.1 Раздела 3");
	ПредставлениеРазделов.Вставить("П00322", "подраздела 3.2.2 Раздела 3");
	ПредставлениеРазделов.Вставить("П00001", "Раздела 1");
	ПредставлениеРазделов.Вставить("П01111", "подраздела 1.1 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П01112", "подраздела 1.2 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П11131", "подраздела 1.3.1 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П11132", "подраздела 1.3.2 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00111", "Приложения 1.1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00011", "Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00012", "Приложения 2 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00013", "Приложения 3 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00014", "Приложения 4 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00015", "Приложения 5 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00016", "Приложения 6 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00017", "Приложения 7 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00018", "Приложения 8 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00019", "Приложения 9 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00002", "Раздела 2");
	ПредставлениеРазделов.Вставить("П00021", "Приложения 1 к Разделу 2");
	
	ДанныеКС.Вставить("ПредставлениеРазделов", ПредставлениеРазделов);
	
	РазделыПоказателей = Новый Структура();
	
	РазделыПоказателей.Вставить("П00003", "Раздел3");
	РазделыПоказателей.Вставить("П00031", "Раздел3");
	РазделыПоказателей.Вставить("П00321", "Раздел3");
	РазделыПоказателей.Вставить("П00322", "Раздел3");
	РазделыПоказателей.Вставить("П00001", "Раздел1");
	РазделыПоказателей.Вставить("П01111", "Раздел1Прил1Подр1_1и1_2");
	РазделыПоказателей.Вставить("П01112", "Раздел1Прил1Подр1_1и1_2");
	РазделыПоказателей.Вставить("П11131", "Раздел1Прил1Подр1_3_1");
	РазделыПоказателей.Вставить("П11132", "Раздел1Прил1Подр1_3_2");
	РазделыПоказателей.Вставить("П00111", "Раздел1Прил1_1");
	РазделыПоказателей.Вставить("П00011", "Раздел1Прил1");
	РазделыПоказателей.Вставить("П00012", "Раздел1Прил2");
	РазделыПоказателей.Вставить("П00013", "Раздел1Прил3");
	РазделыПоказателей.Вставить("П00014", "Раздел1Прил4");
	РазделыПоказателей.Вставить("П00015", "Раздел1Прил5");
	РазделыПоказателей.Вставить("П00016", "Раздел1Прил6");
	РазделыПоказателей.Вставить("П00017", "Раздел1Прил7");
	РазделыПоказателей.Вставить("П00018", "Раздел1Прил8");
	РазделыПоказателей.Вставить("П00019", "Раздел1Прил9");
	РазделыПоказателей.Вставить("П00002", "Раздел2");
	РазделыПоказателей.Вставить("П00021", "Раздел2");
	
	ДанныеКС.Вставить("РазделыПоказателей", РазделыПоказателей);
	
	#КонецОбласти

#Область ФормированиеТаблицРазделов
	
	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(14));
	ТипСтрока2	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(2));
	ТипСтрока4	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4));
	ТипЧисло	= Новый ОписаниеТипов("Число");
	ТипПрим		= Новый ОписаниеТипов("Строка, Число, Дата",,,, Новый КвалификаторыСтроки(30));
	ТипРО		= Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет");

	ТаблицаСводныхДанных = Новый ТаблицаЗначений;
	ТаблицаСводныхДанных.Колонки.Добавить("Раздел"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("ТабЧасть"	, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Строка_"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Графа"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаСводныхДанных.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("МесСтр"		, ТипСтрока2);
	ТаблицаСводныхДанных.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("Значение_"	, ТипПрим);
	
	ТаблицаПерсДанных310 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных310.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Снилс"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Фамилия"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных310.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаПерсДанных310.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаПерсДанных310.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Аннуляция"	, ТипСтрока);
	
	ТаблицаПерсДанных321 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных321.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных321.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("Код"			, ТипСтрока2);
	ТаблицаПерсДанных321.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("МесСтр"		, ТипСтрока2);
	ТаблицаПерсДанных321.Колонки.Добавить("Ставка"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С130"		, ТипСтрока4);
	ТаблицаПерсДанных321.Колонки.Добавить("С140"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С150"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С160"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С170"		, ТипЧисло);
	
	ТаблицаПерсДанных322 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных322.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных322.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("Код"			, ТипСтрока2);
	ТаблицаПерсДанных322.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("Ставка"		, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("С190"		, ТипСтрока);
	ТаблицаПерсДанных322.Колонки.Добавить("С200"		, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("С210"		, ТипЧисло);
	
	ТаблицаПриложения900 = Новый ТаблицаЗначений;
	ТаблицаПриложения900.Колонки.Добавить("Графа"		, ТипСтрока);
	ТаблицаПриложения900.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаПриложения900.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Квартал"		, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаПриложения900.Колонки.Добавить("Значение_"	, ТипЧисло);
	
	ДанныеКС.Вставить("ТаблицаСводныхДанных"			, ТаблицаСводныхДанных);
	ДанныеКС.Вставить("ТаблицаПерсДанных310"			, ТаблицаПерсДанных310);
	ДанныеКС.Вставить("ТаблицаПерсДанных321"			, ТаблицаПерсДанных321);
	ДанныеКС.Вставить("ТаблицаПерсДанных322"			, ТаблицаПерсДанных322);
	ДанныеКС.Вставить("ТаблицаПриложения900"			, ТаблицаПриложения900);
	
#КонецОбласти

КонецПроцедуры

Процедура ЗаполнитьТаблицыРазделов2020(Знач СтруктураПараметров, ЗаполнитьТолько3Раздел)
	
	ДанныеОтчета = СохраненныеДанныеОтчета(СтруктураПараметров.ИмяФормы,
											СтруктураПараметров.СтруктураРеквизитовФормы,
											СтруктураПараметров.СтруктураМнРазделов);
	
	СтруктураПолей	= Новый Структура("Отчет, Вид, Мес, МесСтр");
	ЗаполнитьЗначенияСвойств(СтруктураПолей, СтруктураПараметров);
	СтруктураПолей.МесСтр = Строка(СтруктураПолей.Мес);
	
	ЗаполнитьТаблицуРазд3_2020(СтруктураПараметров, ДанныеОтчета);
	
	Если ЗаполнитьТолько3Раздел Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуПрил9_2020(СтруктураПараметров, ДанныеОтчета);
	
	Если ДанныеКС.ТекОтчет = СтруктураПараметров.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка Тогда
		ДанныеКС.Вставить("ТипПлательщика1", 
			СокрЛП(ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].Данные.П000010000101) = "1");
	КонецЕсли;
	
	Для Каждого Раздел Из ДанныеОтчета.ДанныеМногоуровневыхРазделов Цикл
		Если Раздел.Ключ = "Раздел3" Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоСтраниц = Раздел.Значение.Строки.Количество();
		Для Счетчик = 1 По КоличествоСтраниц Цикл
			СтруктураПолей.Вставить("Страница", Счетчик);
			ЗаполнитьТаблицуПоказателейИзЭлемента2020(Раздел.Значение.Строки[Счетчик - 1],  СтруктураПолей);
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуРазд3_2020(СтруктураПараметров, ДанныеОтчета)
	
	Перем ЛимитСотрудников;
	Перем КэшКатегории321, КэшКода321, КэшСтавки321;
	Перем КэшКатегории322, КэшКода322, КэшСтавки322;
	
	Раздел310		= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3.Строки;
	КоличествоР310	= Раздел310.Количество();
	
	Если СтруктураПараметров.Свойство("ЛимитСотрудников", ЛимитСотрудников) Тогда
		СтруктураПараметров.Вставить("ПриоритетПроизводительности", КоличествоР310 > ЛимитСотрудников);
	КонецЕсли;
	
	Для НомерСтраницы = 1 По КоличествоР310 Цикл
		
		// заполнение подраздела 3.1 раздела 3
		НоваяСтрока310 = ДанныеКС.ТаблицаПерсДанных310.Добавить();
		ДанныеСтраницы = Раздел310[НомерСтраницы - 1].Данные;
		НоваяСтрока310.Аннуляция	= ДанныеСтраницы.П000030001001;
		НоваяСтрока310.Снилс		= СокрЛП(ДанныеСтраницы.П000310003001);
		НоваяСтрока310.Фамилия		= СокрЛП(ДанныеСтраницы.П000310004001);
		НоваяСтрока310.Страница		= НомерСтраницы;
		НоваяСтрока310.Мес			= СтруктураПараметров.Мес;
		НоваяСтрока310.Вид			= СтруктураПараметров.Вид;
		НоваяСтрока310.Отчет		= СтруктураПараметров.Отчет;
		НоваяСтрока310.Ключ			= "" + НоваяСтрока310.Мес + НоваяСтрока310.Вид + НоваяСтрока310.Страница;
		
		// заполнение подраздела 3.2.1 раздела 3
		Раздел321		= Раздел310[НомерСтраницы - 1].ДанныеМногострочныхЧастей.П00321М1.Строки;
		Количество321	= Раздел321.Количество();
		Для НомерСтроки	= 1 По Количество321 Цикл
			ДанныеСтраницы			= Раздел321[НомерСтроки - 1].Данные;
			НоваяСтрока321			= ДанныеКС.ТаблицаПерсДанных321.Добавить();
			НоваяСтрока321.Ключ		= НоваяСтрока310.Ключ;
			НоваяСтрока321.СтрокаТЧ	= НомерСтроки;
			НоваяСтрока321.Мес		= ?(ДанныеСтраницы.П00321М112001 = "", 0, 
				СтруктураПараметров.Мес - 3 + Число(ДанныеСтраницы.П00321М112001));
			НоваяСтрока321.МесСтр	= Строка(НоваяСтрока321.Мес);
			НоваяСтрока321.С130		= ДанныеСтраницы.П00321М113001;
			НоваяСтрока321.С140		= ДанныеСтраницы.П00321М114001;
			НоваяСтрока321.С150		= ДанныеСтраницы.П00321М115001;
			НоваяСтрока321.С160		= ДанныеСтраницы.П00321М116001;
			НоваяСтрока321.С170		= ДанныеСтраницы.П00321М117001;
			
			Если НоваяСтрока321.С130 = КэшКатегории321 Тогда
				НоваяСтрока321.Код		= КэшКода321;
				НоваяСтрока321.Ставка	= КэшСтавки321;
			Иначе
				КодКатегории			= ДанныеКС.Категории321.Найти(НоваяСтрока321.С130, "Категория");
				НоваяСтрока321.Код		= ?(КодКатегории = Неопределено, "", КодКатегории.Код);
				Ставка					= ДанныеКС.Ставки321.Найти(НоваяСтрока321.Код, "Код");
				НоваяСтрока321.Ставка	= ?(Ставка = Неопределено, 0, Ставка.Ставка);
				КэшКатегории321			= НоваяСтрока321.С130;
				КэшКода321				= НоваяСтрока321.Код;
				КэшСтавки321			= НоваяСтрока321.Ставка;
			КонецЕсли;
		КонецЦикла;
		
		// заполнение подраздела 3.2.2 раздела 3
		Раздел322		= Раздел310[НомерСтраницы - 1].ДанныеМногострочныхЧастей.П00322М1.Строки;
		Количество322	= Раздел322.Количество();
		Для НомерСтроки	= 1 По Количество322 Цикл
			ДанныеСтраницы			= Раздел322[НомерСтроки - 1].Данные;
			НоваяСтрока322			= ДанныеКС.ТаблицаПерсДанных322.Добавить();
			НоваяСтрока322.Ключ		= НоваяСтрока310.Ключ;
			НоваяСтрока322.СтрокаТЧ	= НомерСтроки;
			НоваяСтрока322.Мес		= ?(ДанныеСтраницы.П00322М118001 = "", 0, 
				СтруктураПараметров.Мес - 3 + Число(ДанныеСтраницы.П00322М118001));
			НоваяСтрока322.С190		= ДанныеСтраницы.П00322М119001;
			НоваяСтрока322.С200		= ДанныеСтраницы.П00322М120001;
			НоваяСтрока322.С210		= ДанныеСтраницы.П00322М121001;
			
			Если НоваяСтрока322.С190 = КэшКатегории322 Тогда
				НоваяСтрока322.Код		= КэшКода322;
				НоваяСтрока322.Ставка	= КэшСтавки322;
			Иначе
				КодКатегории 			= ДанныеКС.Категории322.Найти(НоваяСтрока322.С190, "Категория");
				НоваяСтрока322.Код		= ?(КодКатегории = Неопределено, "", КодКатегории.Код);
				Ставка					= ДанныеКС.Ставки322.Найти(НоваяСтрока322.Код, "Код");
				НоваяСтрока322.Ставка	= ?(Ставка = Неопределено, 0, Ставка.Ставка);
				КэшКатегории322			= НоваяСтрока322.С190;
				КэшКода322				= НоваяСтрока322.Код;
				КэшСтавки322			= НоваяСтрока322.Ставка;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуПрил9_2020(СтруктураПараметров, ДанныеОтчета)
	
	Приложение900	= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1Прил9.Строки;
	КоличествоП900	= Приложение900.Количество();
	Для НомерСтраницы = 1 По КоличествоП900 Цикл
		Для НомерГрафы = 2 По 4 Цикл
		
			НоваяСтрока900 = ДанныеКС.ТаблицаПриложения900.Добавить();
			ДанныеСтраницы = Приложение900[НомерСтраницы - 1].Данные;
			НоваяСтрока900.Отчет		= СтруктураПараметров.Отчет;
			НоваяСтрока900.Вид			= СтруктураПараметров.Вид;
			НоваяСтрока900.Квартал		= СтруктураПараметров.Мес;
			НоваяСтрока900.Мес			= СтруктураПараметров.Мес + НомерГрафы - 4;
			НоваяСтрока900.Страница		= НомерСтраницы;
			НоваяСтрока900.Графа		= "0" + НомерГрафы;
			НоваяСтрока900.Значение_	= ДанныеСтраницы["П0001900010" + НоваяСтрока900.Графа];
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуПоказателейИзЭлемента2020(Элемент, СтруктураПараметров)
	
	Если Не Элемент.Данные = Неопределено Тогда
		Для каждого Показатель Из Элемент.Данные Цикл
			ЗаполнитьДанныеПоказателя2020(Показатель, СтруктураПараметров);
		КонецЦикла;	
	КонецЕсли;
	
	Если Не Элемент.ДанныеМногострочныхЧастей = Неопределено Тогда
		Для каждого МнЧасть Из Элемент.ДанныеМногострочныхЧастей Цикл
			КоличествоСтрок = МнЧасть.Значение.Строки.Количество();
			Для Счетчик = 1 По КоличествоСтрок Цикл
				СтруктураПараметров.Вставить("СтрокаТЧ", Счетчик);
				ЗаполнитьТаблицуПоказателейИзЭлемента2020(МнЧасть.Значение.Строки[Счетчик - 1], СтруктураПараметров);
			КонецЦикла; 
			СтруктураПараметров.Вставить("СтрокаТЧ", 0);
		КонецЦикла;	
	КонецЕсли;	
	
	Если Не Элемент.Строки = Неопределено Тогда
		Для каждого СтрокаДерева Из Элемент.Строки Цикл
			ЗаполнитьТаблицуПоказателейИзЭлемента2020(СтрокаДерева, СтруктураПараметров);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоказателя2020(Показатель, СтруктураПараметров)
	
	СтруктураПараметров.Вставить("Раздел"			, Лев(Показатель.Ключ, 6));
	СтруктураПараметров.Вставить("ТабЧасть"			, Сред(Показатель.Ключ, 7, 2));
	СтруктураПараметров.Вставить("Строка_"			, Сред(Показатель.Ключ, 9, 3));
	СтруктураПараметров.Вставить("Графа"			, Сред(Показатель.Ключ, 12, 2));
	СтруктураПараметров.Вставить("Значение_"		, Показатель.Значение);
	
	НоваяСтрока	= ДанныеКС.ТаблицаСводныхДанных.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПараметров);
	
КонецПроцедуры

Процедура ПолучитьДанныеОтчетовПредыдущихПериодов2020()
	
	Перем СтруктураРеквизитов;
	Перем СтруктураРазделов;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			, ДанныеКС.Организация);
	Запрос.УстановитьПараметр("ГодОтчета"			, ДанныеКС.Год);
	Запрос.УстановитьПараметр("МесяцОтчета"			, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("НомерКорректировки"	, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МЕСЯЦ(ДокументРО.ДатаОкончания) КАК Мес,
	|	ДокументРО.ДатаОкончания КАК ДатаОкончания,
	|	ДокументРО.Вид КАК Вид,
	|	ДокументРО.Ссылка КАК Отчет,
	|	ДокументРО.ВыбраннаяФорма КАК ИмяФормы
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК ДокументРО
	|ГДЕ
	|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетРасчетПоСтраховымВзносам""
	|	И ДокументРО.Организация = &Организация
	|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
	|	И МЕСЯЦ(ДокументРО.ДатаОкончания) <= &МесяцОтчета
	|	И ВЫБОР
	|			КОГДА МЕСЯЦ(ДокументРО.ДатаОкончания) = &МесяцОтчета
	|				ТОГДА ДокументРО.Вид < &НомерКорректировки
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ ДокументРО.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мес УБЫВ,
	|	Вид
	|ИТОГИ
	|	МАКСИМУМ(Вид)
	|ПО
	|	Мес";
	
	Результат			= Запрос.Выполнить();
	ВыборкаПериод		= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоЦиклов	= ДанныеКС.Мес / 3 - 1;
	
	Для Счетчик = 0 По КоличествоЦиклов Цикл
		
		Если ВыборкаПериод.НайтиСледующий(Новый Структура("Мес", ДанныеКС.Мес - Счетчик * 3)) Тогда
			Выборка = ВыборкаПериод.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				СтруктураПараметров = Новый Структура("Отчет, Вид, Мес, ИмяФормы");
				ЗаполнитьЗначенияСвойств(СтруктураПараметров, Выборка);
				
				СформироватьСтруктуруРеквизитовФормы(Выборка.ИмяФормы	, СтруктураРеквизитов);
				СтруктураРеквизитов.мСохраненныйДок = Выборка.Отчет;
				ИнициализироватьМногострочныеЧасти(Выборка.ИмяФормы		, СтруктураРеквизитов);	
				ИнициализироватьМногоуровневыеРазделы(Выборка.ИмяФормы	, СтруктураРеквизитов, СтруктураРазделов);
				СтруктураПараметров.Вставить("СтруктураРеквизитовФормы"	, СтруктураРеквизитов);
				СтруктураПараметров.Вставить("СтруктураМнРазделов"		, СтруктураРазделов);
				
				ЗаполнитьТолькоРаздел3 = Счетчик = 0 ИЛИ НЕ ВыборкаПериод.Вид = Выборка.Вид;
				ЗаполнитьТаблицыРазделов2020(СтруктураПараметров			, ЗаполнитьТолькоРаздел3);
			КонецЦикла;
		КонецЕсли;
			
		ВыборкаПериод.Сбросить();
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьВременныеТаблицы2020()
	
	ВремТаблицы		= Новый МенеджерВременныхТаблиц;
	СхемаЗапроса	= Новый СхемаЗапроса;
	
	ИменаТаблиц		= Новый Структура;
	ИменаТаблиц.Вставить("ТаблицаСводныхДанных"	, "Т_100");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных310"	, "Т_310_Все");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных321"	, "Т_321_Все");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных322"	, "Т_322_Все");
	ИменаТаблиц.Вставить("ТаблицаПриложения900"	, "Т_900");
	
	// Формирование временных таблиц с данными разделов
	Для каждого Таблица Из ИменаТаблиц Цикл
		Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
		Оператор	= Пакет.Операторы[0];
		ОписаниеВТ	= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), "&" + Таблица.Значение);
		Пакет.ТаблицаДляПомещения = "В" + Таблица.Значение;
		
		Для каждого Колонка Из ДанныеКС[Таблица.Ключ].Колонки Цикл
			ОписаниеВТ.Источник.ДоступныеПоля.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Для каждого ДоступноеПоле Из ОписаниеВТ.Источник.ДоступныеПоля Цикл
			Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
		КонецЦикла;
	КонецЦикла;
	
	Пакет100 = СхемаЗапроса.ПакетЗапросов.Получить(1);
	Пакет100.Индекс.Добавить("Раздел");
	Пакет100.Индекс.Добавить("Строка_");
	
	// Удаление страниц с повторяющимися и аннулированными СНИЛС из Раздела 3
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения	= "ВТ_310_Отбор";
	Оператор	= Пакет.Операторы[0];
	ВТ_Отбора	= Оператор.Источники.Добавить("ВТ_310_Все");
	Оператор.ВыбираемыеПоля.Добавить("Мес", 0);
	Оператор.ВыбираемыеПоля.Добавить("Снилс", 1);
	Оператор.ВыбираемыеПоля.Добавить("МАКСИМУМ(Вид)", 2);
	Пакет.Колонки[2].Псевдоним	= "Вид";
	Оператор.Группировка.Добавить("Мес");
	Оператор.Группировка.Добавить("Снилс");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения	= "ВТ_310";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_310_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310_Отбор");
	ВТ_Раздела.Соединения.Добавить("ВТ_310_Отбор", "ВТ_310_Все.Снилс = ВТ_310_Отбор.Снилс 
		|И ВТ_310_Все.Мес = ВТ_310_Отбор.Мес И ВТ_310_Все.Вид = ВТ_310_Отбор.Вид");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Оператор.Отбор.Добавить("НЕ ВТ_310_Все.Аннуляция = ""1""");
	Пакет.Индекс.Добавить("Ключ");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения = "ВТ_321";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_321_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310");
	ВТ_Раздела.Соединения.Добавить("ВТ_310", "ВТ_321_Все.Ключ = ВТ_310.Ключ");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Пакет.Индекс.Добавить("Ключ");
	Пакет.Индекс.Добавить("Мес");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения = "ВТ_322";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_322_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310");
	ВТ_Раздела.Соединения.Добавить("ВТ_310", "ВТ_322_Все.Ключ = ВТ_310.Ключ");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Пакет.Индекс.Добавить("Ключ");
	Пакет.Индекс.Добавить("Мес");
	
	// Удаление отработавших таблиц отборов
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_310_Все";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_310_Отбор";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_321_Все";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_322_Все";
	
	// Выполнение запроса
	Запрос			= Новый Запрос;
	Запрос.Текст	= СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.МенеджерВременныхТаблиц = ВремТаблицы;
	
	Запрос.УстановитьПараметр("Т_100"		, ДанныеКС.ТаблицаСводныхДанных);
	Запрос.УстановитьПараметр("Т_310_Все"	, ДанныеКС.ТаблицаПерсДанных310);
	Запрос.УстановитьПараметр("Т_321_Все"	, ДанныеКС.ТаблицаПерсДанных321);
	Запрос.УстановитьПараметр("Т_322_Все"	, ДанныеКС.ТаблицаПерсДанных322);
	Запрос.УстановитьПараметр("Т_900"		, ДанныеКС.ТаблицаПриложения900);
	
	Запрос.Выполнить();
	
	ДанныеКС.Вставить("ВременныеТаблицы"		, ВремТаблицы);
	ДанныеКС.ТаблицаСводныхДанных.Очистить();
	ДанныеКС.ТаблицаПерсДанных310.Очистить();
	ДанныеКС.ТаблицаПерсДанных321.Очистить();
	ДанныеКС.ТаблицаПерсДанных322.Очистить();

	ДанныеКС.Вставить("Р01111Заполнен"		, РазделЗаполнен2020("П01111"));
	ДанныеКС.Вставить("Р01112Заполнен"		, РазделЗаполнен2020("П01112"));
	ДанныеКС.Вставить("Р11131Заполнен"		, РазделЗаполнен2020("П11131"));
	ДанныеКС.Вставить("Р11132Заполнен"		, РазделЗаполнен2020("П11132"));
	ДанныеКС.Вставить("Р00111Заполнен"		, РазделЗаполнен2020("П00111"));
	ДанныеКС.Вставить("Р00012Заполнен"		, РазделЗаполнен2020("П00012"));
	ДанныеКС.Вставить("Р00013Заполнен"		, РазделЗаполнен2020("П00013"));
	ДанныеКС.Вставить("Р00014Заполнен"		, РазделЗаполнен2020("П00014"));
	ДанныеКС.Вставить("Р00015Заполнен"		, РазделЗаполнен2020("П00015"));
	ДанныеКС.Вставить("Р00016Заполнен"		, РазделЗаполнен2020("П00016"));
	ДанныеКС.Вставить("Р00017Заполнен"		, РазделЗаполнен2020("П00017"));
	ДанныеКС.Вставить("Р00018Заполнен"		, РазделЗаполнен2020("П00018"));
	ДанныеКС.Вставить("Р00019Заполнен"		, РазделЗаполнен2020("П00019"));
	ДанныеКС.Вставить("Р00002Заполнен"		, РазделЗаполнен2020("П00002"));
	ДанныеКС.Вставить("Р00021Заполнен"		, РазделЗаполнен2020("П00021"));
	
КонецПроцедуры

#КонецОбласти

#Область КС_Сервис

Процедура ЗарегистрироватьФормулу2020(Знач Настройки);

	СчетчикФормулДляРасшифровок
					= СчетчикФормулДляРасшифровок + 1;
	НовСтр			= СписокРасшифровкиФормулы.Добавить();
	НовСтр.ТекстовоеПредставлениеФормулы
					= Настройки.ОписаниеКС;
	НовСтр.Номер	= СчетчикФормулДляРасшифровок;
	
КонецПроцедуры

Процедура ВнестиПоказательВРасшифровку2020(Источник, Показатель)
	
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	
	НоваяСтрока.ИмяПоказателя			= ?(Показатель.Многострочный, 
		Показатель.ИмяПоказателя + XMLСтрока(Источник.НомерСтроки), Показатель.ИмяПоказателя);
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
		Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	НоваяСтрока.ИмяСтраницы				= Показатель.ИмяСтраницы;
	
	НоваяСтрока.СсылкаНаДокументРО		= ?(ЗначениеЗаполнено(Источник.Отчет), 
		Источник.Отчет, ДанныеКС.ТекОтчет);
	НоваяСтрока.Страница				= XMLСтрока(Источник.Страница);
	НоваяСтрока.ЗначениеПоказателя		= Источник[Показатель.ИмяВИсточнике];
	
КонецПроцедуры

Процедура ВнестиПоказательБезРасшифровки2020(Представление, ЗначениеПоказателя)
	
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	НоваяСтрока.ПредставлениеПоказателя = Представление;
	НоваяСтрока.ЗначениеПоказателя		= ЗначениеПоказателя;
		
КонецПроцедуры

Процедура ДополнитьСтруктуруОшибок2020(Настройки)
	
	Если Настройки.ЭтоОшибка Тогда
		Настройки.КоличествоНайденныхОшибок = Настройки.КоличествоНайденныхОшибок + 1;
	Иначе
		Настройки.КоличествоНайденныхБезОшибок = Настройки.КоличествоНайденныхБезОшибок + 1;
	КонецЕсли;
	
	Счетчик		= XMLСтрока(Настройки.КоличествоНайденныхОшибок + Настройки.КоличествоНайденныхБезОшибок);
	ОписаниеКС	= СформироватьОписаниеКС2020(Настройки, "ДопСведенияВОписаниеКС");
	ОписаниеКС	= ?(ПустаяСтрока(Настройки.ТекстФормулы), "", Настройки.ТекстФормулы + Символы.ПС) + ОписаниеКС;
	
	Настройки.СтруктураОшибок.Вставить("ТекстовоеПредставлениеФормулы" + Счетчик, ОписаниеКС);
	Настройки.СтруктураОшибок.Вставить("Расшифровка"	+ Счетчик, Настройки.Расшифровка);
	Настройки.СтруктураОшибок.Вставить("ЭтоОшибка"		+ Счетчик, Настройки.ЭтоОшибка);
	Настройки.СтруктураОшибок.Вставить("Нарушение"		+ Счетчик, Настройки.Нарушение);
	Настройки.СтруктураОшибок.Вставить("Описание"		+ Счетчик, Настройки.ОписаниеОшибки);
	Настройки.СтруктураОшибок.Вставить("Комментарий"	+ Счетчик, Настройки.Комментарий);
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей)
	
	Перем ИндексРаздела;
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		ИндексРаздела		= Лев(Элемент.Значение, 6);
		ПодстрокаРаздела	= ДанныеКС.ПредставлениеРазделов[ИндексРаздела];
		ПодстрокаСтроки		= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы		= Сред(Элемент.Значение, 12, 2);
		Представление		= "Графа " + ПодстрокаГрафы + " строка " + ПодстрокаСтроки + " " + ПодстрокаРаздела;
		Многострочный		= СтрДлина(Элемент.Значение) = 14;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, ДанныеКС.РазделыПоказателей[ИндексРаздела]);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет");
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("ИмяВИсточнике"	, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПоказателейТитульный2020(Показатели, ИменаПоказателей)
	
	Перем ИндексРаздела;
	
	ПредставленияПолей = Новый Соответствие;
	ПредставленияПолей.Вставить("ОтчетГод"		, "Титульный лист. Отчетный год");
	ПредставленияПолей.Вставить("ДатаПодписи"	, "Титульный лист. Дата подписи");
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, ПредставленияПолей.Получить(Элемент.Значение));
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, "Титульный");
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет"			, Неопределено);
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Ложь);
		Показатели[Элемент.Ключ].Вставить("ИмяВИсточнике"	, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьНастройки2020(Настройки);
	
	Если НЕ Настройки.Свойство("СчетчикИзменений") Тогда
		
		Настройки.ОписаниеКС = Настройки.ОписаниеКС + НСтр("ru=', когда Тип плательщика в стр.001 Раздела 1 = 1'");
	
	Иначе
	
		Настройки.ЭтоОшибка = Настройки.ЭтоОшибка И ДанныеКС.ТипПлательщика1;
	
	КонецЕсли;

КонецПроцедуры

Функция СформироватьОписаниеКС2020(Знач Настройки, ЗначениеСвойства)
	
	Если Настройки[ЗначениеСвойства] Тогда
		Если ЗначениеЗаполнено(Настройки.ДопСведения) Тогда
				
			Возврат Настройки.ОписаниеКС + " (" + Настройки.ДопСведения + ")"; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Настройки.ОписаниеКС;
	
КонецФункции

Функция ОбработатьНастройки2020(Знач Настройки = Неопределено, 
	Знач ИзменяемыеСвойства 	= Неопределено, 
	Знач СтруктураРезультата 	= Неопределено)
	
	Если Настройки = Неопределено Тогда
		
		Настройки = Новый Структура;
		Настройки.Вставить("ТекстФормулы"			, (НСтр("ru=''")));
		Настройки.Вставить("Нарушение"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеКС"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеОшибки"			, (НСтр("ru=''")));
		Настройки.Вставить("Расшифровка"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонРасшифровки"		, (НСтр("ru=''")));
		Настройки.Вставить("ДопСведения"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонДопСведений"		, (НСтр("ru=''")));
		Настройки.Вставить("ЭтоОшибка"				, Ложь);
		Настройки.Вставить("СтруктураОшибок");
		Настройки.Вставить("КоличествоНайденныхОшибок");
		Настройки.Вставить("КоличествоНайденныхБезОшибок");
		Настройки.Вставить("ДопСведенияВОписаниеКС"	, Ложь);
		Настройки.Вставить("ПриоритетПроизводительности");
		Настройки.Вставить("ЛимитРасшифровки");
		Настройки.Вставить("Комментарий");
		Настройки.Вставить("СчетчикИзменений"		, 0);
		
		Если Документирование Тогда
			
			Настройки.Вставить("НомерКС");
			Настройки.Вставить("Раздел");
			Настройки.Вставить("Условие");
			
		КонецЕсли; 
	
	КонецЕсли;
	
	Если Не ИзменяемыеСвойства = Неопределено Тогда
		Для каждого ЭлементКоллекции Из ИзменяемыеСвойства Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Если Документирование Тогда
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, Настройки);
		СтрокаОписания.ОписаниеКС	= ?(ПустаяСтрока(Настройки.ТекстФормулы), "", Настройки.ТекстФормулы + Символы.ПС) 
			+ Настройки.ОписаниеКС;
		Возврат Настройки;
	КонецЕсли;
	
	Если Не СтруктураРезультата = Неопределено Тогда
		Для каждого ЭлементКоллекции Из СтруктураРезультата Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция ОбработатьРезультат2020(Знач Настройки = Неопределено, Знач СтруктураРезультата = Неопределено,
	Создать = Неопределено);
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультата, Настройки,
			"КоличествоНайденныхОшибок, КоличествоНайденныхБезОшибок");
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция РазделЗаполнен2020(Раздел)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Показатель
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И НЕ ВТ_100.Значение_ = 0
	|	И НЕ ВТ_100.Значение_ = ДАТАВРЕМЯ(1,1,1)
	|	И НЕ ВТ_100.Значение_ = """"
	|	И ВТ_100.Мес = &ОтчетныйМесяц";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ()

Функция ЭтоПострадавшаяОтрасль2020()
	
	Результат = Истина;
	
	ОтраслевойРаздел = СтрРазделить(ДанныеКС.ОКВЭД2, ".")[0];
	
	Если НЕ ДанныеКС.ПострадавшиеОтрасли = Неопределено Тогда
		
		Результат = НЕ ДанныеКС.ПострадавшиеОтрасли.Найти(ОтраслевойРаздел) = Неопределено;
	
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ()

#КонецОбласти

#Область КС_Проверки

#Область Проверки_Раздела_3

Процедура ПроверитьКС2020_0_1а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за 1 квартал'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 квартал отчетного периода: стр.170 (1 месяц ОП) подр. 3.2.1 Р.3 = стр.150 (1 месяц ОП) '") +
		НСтр("ru='х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за 1 квартал'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 квартал отчетного периода: стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) '") +
		НСтр("ru='+ стр.150 (2 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых '") +
		НСтр("ru='взносов) - стр.170 (1 месяц ОП)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за 1 квартал'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 квартал отчетного периода: стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) '") +
		НСтр("ru='+ стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. '") +
		НСтр("ru='Р.3 тариф страховых взносов) - (стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1г(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (1 месяц ОП) подр.3.2.1 Р.3 = '") +
		НСтр("ru='(стр.150 ПОП (с начала расчетного периода) + стр.150 (1 месяц ОП)) х соответствующий значению '") +
		НСтр("ru='стр.130 подр.3.2.1. Р.3 тариф страховых взносов)) -  стр.170 ПОП (с начала расчетного периода)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1д(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = '") +
		НСтр("ru='(стр.150 ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП)) '") +
		НСтр("ru='х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП '") +
		НСтр("ru='(с начала расчетного периода) + стр.170 (1 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1е(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = (стр.150 '") +
		НСтр("ru='ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц '") +
		НСтр("ru='ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП '") +
		НСтр("ru='(с начала расчетного периода) + стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	ИменаПоказателей.Вставить("Взнос"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.ОписаниеКС = ?(Настройки.Погрешность, 
		Настройки.ОписаниеКС + НСтр("ru=', с учетом погрешности 1 коп.'"), Настройки.ОписаниеКС);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_311.Снилс КАК Снилс,
	|	ВТ_321.С130 КАК С130,
	|	ВТ_321.С170 КАК С170
	|ПОМЕСТИТЬ ВТ_312
	|ИЗ
	|	ВТ_311 КАК ВТ_311
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_311.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.Мес = &ТекущийМесяц
	|	И НЕ ВТ_321.С150 + ВТ_321.С170 = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК СтрокаТЧ,
	|	ВТ_321.Код КАК Код,
	|	ВТ_321.С130 КАК С130,
	|	ВТ_321.Ставка КАК Ставка,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С150 КАК С150,
	|	ВТ_321.С170 КАК С170
	|ПОМЕСТИТЬ ВТ_313
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.Мес <= &ТекущийМесяц
	|	И НЕ ВТ_321.С150 + ВТ_321.С170 = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_313.Фамилия + ВТ_313.Снилс + ВТ_313.Код КАК КлючСортировки,
	|	ВТ_313.Снилс КАК Снилс,
	|	ВТ_313.Фамилия КАК Фамилия,
	|	ВТ_313.Отчет КАК Отчет,
	|	ВТ_313.Страница КАК Страница,
	|	ВТ_313.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_313.Код КАК КодТарифа,
	|	ВТ_313.С130 КАК Категория,
	|	ВТ_313.Ставка КАК Ставка,
	|	ВТ_313.Мес КАК Мес,
	|	ВТ_313.С150 КАК База,
	|	ВТ_313.С170 КАК Взнос,
	|	ВТ_312.С170 КАК ТекущийВзнос
	|ИЗ
	|	ВТ_313 КАК ВТ_313
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_312 КАК ВТ_312
	|		ПО ВТ_313.Снилс = ВТ_312.Снилс
	|			И ВТ_313.С130 = ВТ_312.С130
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	МИНИМУМ(Снилс),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Отчет),
	|	МИНИМУМ(Страница),
	|	МИНИМУМ(Ставка),
	|	СУММА(База),
	|	СУММА(Взнос),
	|	МИНИМУМ(ТекущийВзнос)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_312
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_313";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФ.Следующий() Цикл
		
		Погрешность	= 0.01;
		СуммаВзносовПрошлыхМесяцев = ВыборкаФ.Взнос - ВыборкаФ.ТекущийВзнос;
		Если Настройки.Погрешность Тогда
			РасчетнаяСумма		= ВыборкаФ.База * ВыборкаФ.Ставка / 100 - СуммаВзносовПрошлыхМесяцев;
			РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
			РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
			Настройки.ЭтоОшибка	= ВыборкаФ.ТекущийВзнос < РасчетнаяСуммаМин ИЛИ ВыборкаФ.ТекущийВзнос > РасчетнаяСуммаМак;
		Иначе
			РасчетнаяСумма		= Окр(ВыборкаФ.База * ВыборкаФ.Ставка / 100, 2) - СуммаВзносовПрошлыхМесяцев;
			Настройки.ЭтоОшибка = НЕ ВыборкаФ.ТекущийВзнос = РасчетнаяСумма;
		КонецЕсли;
		
		ДополнитьНастройки2020(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(ВыборкаФ, Показатели.Фамилия);
		С170ПСтр	= "";
		С150ПСтр	= "";
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
	
			С150ПСтр = С150ПСтр + Выборка.База + " + ";
			Если НЕ Выборка.Мес = Настройки.НомерМесяца Тогда
				С170ПСтр = С170ПСтр + " - " + Выборка.Взнос;
			КонецЕсли;
			Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория + ", ставка " 
				+ Выборка.Ставка;
			Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц";
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Взнос);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаФ.ТекущийВзнос, 
			Лев(С150ПСтр, СтрДлина(С150ПСтр) - 3), ВыборкаФ.Ставка, ?(Выборка.Количество() > 1, С170ПСтр, ""), 
			РасчетнаяСумма, ?(Настройки.Погрешность," (± " + Погрешность + " )",""));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.2а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.061 подр.1.1 прил.1 (1 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru='стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.2б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.061 подр.1.1 прил.1 (2 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru='стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.2в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.061 подр.1.1 прил.1 (3 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru='стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, "П0111100061" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя", "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя", "061");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТТарифа.Значение_ = ""10"" ТОГДА ""11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ГруппаТарифов,
	|	ВЫБОР КОГДА ТТарифа.Значение_ В (""10"",""11"") ТОГДА ""10,11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ПредставлениеГруппы,
	|	ТТарифа.Значение_ КАК КодТарифа,
	|	ВЫРАЗИТЬ(ТПоказателя.Значение_ КАК ЧИСЛО) КАК ПоказательР1,
	|	ТПоказателя.Отчет КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|		ПО ТПоказателя.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя.Раздел = &РазделПоказателя
	|	И ТПоказателя.Строка_ = &СтрокаПоказателя
	|	И ТПоказателя.Графа = &НомерГрафы
	|	И ТПоказателя.Мес = &ОтчетныйМесяц
	|	И ТТарифа.Раздел = &РазделТарифа
	|	И ТТарифа.Строка_ = &СтрокаТарифа
	|	И ТТарифа.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаТарифов,
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МАКСИМУМ(ПредставлениеГруппы)
	|ПО
	|	ГруппаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.С130 КАК КлючСортировки,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Категория,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С170 КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И (НЕ ВТ_321.С170 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р3Сум	= 0;
		Счетчик = 1;
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР1.Дополнение = "тариф " + Выборка.КодТарифа;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.ГруппаТарифов)) Тогда
			Р3Сум	= ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р3Сум = ВыборкаР1.ПоказательР1 И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
						Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
							+ " => тариф " + ВыборкаР1.ПредставлениеГруппы + ", " + Выборка.Фамилия;
						ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
						Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР1 = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР1, Р3Сум, 
			ВыборкаР1.ПредставлениеГруппы);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.ПредставлениеГруппы;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 02(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению'") +
		НСтр("ru=' стр.130 подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 '") +
		НСтр("ru='подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) + стр.170 ПОП) '") +
		НСтр("ru='подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.5а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.210 (1 месяц ОП) подр.3.2.2 Р.3 = стр.200 (1 месяц ОП) х соответствующий значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_5_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.5б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.210 (2 месяц ОП) подр.3.2.2 Р.3 = стр.200 (2 месяц ОП) х соответствующий значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_5_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.5в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.210 (3 месяц ОП) подр.3.2.2 Р.3 = стр.200 (3 месяц ОП) х соответствующий значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_5_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("База"	, "П00322М120001_");
	ИменаПоказателей.Вставить("Взнос"	, "П00322М121001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_322.С190 КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Ставка	КАК Ставка,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК База,
	|	ВТ_322.С210		КАК Взнос
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес = &НомерМесяца)
	|			И НЕ (ВТ_322.С200 + ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки";
	
	РезультатЗапроса	= Запрос.Выполнить();
	Выборка				= РезультатЗапроса.Выбрать();
	Погрешность			= 0.005;
	
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма		= Выборка.База * Выборка.Ставка / 100;
		РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
		РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
		Настройки.ЭтоОшибка	= Выборка.Взнос < РасчетнаяСуммаМин ИЛИ Выборка.Взнос > РасчетнаяСуммаМак;
		ДополнитьНастройки2020(Настройки);
			
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Фамилия);
		Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, код " + Выборка.Категория + ", ставка " 
			+ Выборка.Ставка;
		Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц";
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Взнос);
		
		Настройки.Расшифровка = "" + Выборка.Взнос + " = " + Выборка.База + " х " + Выборка.Ставка 
			+ " / 100 Итог [" + РасчетнаяСумма + "]  (± " + Погрешность + " )";
		ДополнитьСтруктуруОшибок2020(Настройки);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.050 подр. 1.3.1 (1 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.050 подр. 1.3.1 (2 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.050 подр. 1.3.1 (3 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6г(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.050 подр. 1.3.2 (1 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6д(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.050 подр. 1.3.2 (2 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6е(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.050 подр. 1.3.2 (3 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑  стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, Настройки.Раздел + "М1050" + Настройки.НомерГрафы + "_");
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00322М121001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя", "050");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("СтрокаКода001"	, "001");
	Запрос.УстановитьПараметр("СтрокаКода003"	, "002");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТКода001.Значение_ КАК Строка(1))	КАК Код001,
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК Код003,
	|	Выразить(ТКода001.Значение_ КАК Строка(1)) + 
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК КодТарифа,
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТКода001.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|			И (ТКода001.Раздел		= &Раздел)
	|			И (ТКода001.Строка_		= &СтрокаКода001)
	|			И (ТКода001.Мес			= &ОтчетныйМесяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода003
	|			ПО ТПоказателя.Страница = ТКода003.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода003.СтрокаТЧ
	|			И (ТКода003.Раздел		= &Раздел)
	|			И (ТКода003.Строка_		= &СтрокаКода003)
	|			И (ТКода003.Мес			= &ОтчетныйМесяц)
	|ГДЕ
	|	ТПоказателя.Раздел		= &Раздел
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МИНИМУМ(Код001),
	|	МИНИМУМ(Код003)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_322.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С210		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р3Сум	= 0;
		Счетчик = 1;
		
		ДополнениеР1 = "Код основания " + ВыборкаР1.Код001 
			+ ?(ЗначениеЗаполнено(ВыборкаР1.Код003), ", код класса " + ВыборкаР1.Код003, "");
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР1.Дополнение = ДополнениеР1;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.КодТарифа)) Тогда
			Р3Сум	= ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р3Сум = ВыборкаР1.ПоказательР1 И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
						Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., код " + Выборка.Категория 
							+ ", " + Выборка.Фамилия;
						ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
						Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР1 = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаР1.ПоказательР1);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ВыборкаР1.Код001);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%4", ВыборкаР1.Код003);
		Настройки.ДопСведения	= ДополнениеР1;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_7а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.7а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 06(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.7а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.1 по значению поля 001 соответствующему значению стр.190 '") +
		НСтр("ru='подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_7б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.7б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 06(г,д,е)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.7б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.2 по значению поля 002 соответствующему значению стр.190 '") +
		НСтр("ru='подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_8а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.8а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 к Разделу 1 (КС 0.8а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.050 подр. 1.3.1  по значению поля 001 соответствующему значению стр.190 подр.3.2.2 Р.3 '") +
		НСтр("ru='= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_8б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.8б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 к Разделу 1 (КС 0.8б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.050 подр. 1.3.2  по значению поля 002 соответствующему значению стр.190 подр.3.2.2 Р.3 '") +
		НСтр("ru='= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_9а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.9а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020-й год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.9а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов за каждый месяц (∑ стр.150 подр.3.2.1 Р.3) по всем '") +
		НСтр("ru='используемым тарифам с начала расчетного периода (за 2020 год) <= 1 292 000'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= 1 292 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2020 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 1292000);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_9_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_9_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК База
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &НомерМесяца)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(База),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка = ВыборкаФ.База > Настройки.ПредельнаяВеличина;
		ДополнитьНастройки2020(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория + ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаФ.База);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_10а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.10а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020-й год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 3 (КС 0.10а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов (стр.170 подр.3.2.1 Р.3 / соответствующий значению стр.130 подр.3.2.1 Р.3 '") +
		НСтр("ru='тариф страховых взносов х 22%) с начала расчетного периода (за 2020 год) должна быть меньше или '") +
		НСтр("ru='равна 284 240, с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 284 240 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2020 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 284240);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru='(%1 / %2 х 22)'"));
	ПроверитьКС2020_0_10_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_10_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Взнос"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Ставка	КАК Ставка,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С170		КАК Взнос
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &НомерМесяца)
	|			И НЕ (ВТ_321.С170 = 0)
	|			И НЕ (ВТ_321.Ставка = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(Взнос),
	|	МИНИМУМ(Ставка),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки,
	|	Ставка";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаС.Следующий() Цикл
			РасчетнаяСумма	= РасчетнаяСумма + Окр(ВыборкаС.Взнос / ВыборкаС.Ставка * 22, 2);
			Погрешность		= Погрешность + 0.01;
		КонецЦикла;
		
		Настройки.ЭтоОшибка	= РасчетнаяСумма > Настройки.ПредельнаяВеличина + Погрешность;
		ДополнитьНастройки2020(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		МРасшифровки	= Новый Массив;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаС.Следующий() Цикл
			РасчетнаяСумма	= РасчетнаяСумма + Окр(ВыборкаС.Взнос / ВыборкаС.Ставка * 22, 2);
			Погрешность		= Погрешность + 0.01;
			ЭлементРасшифровки	= СтрЗаменить(Настройки.ШаблонРасшифровки2	, "%1", ВыборкаС.Взнос);
			ЭлементРасшифровки	= СтрЗаменить(ЭлементРасшифровки			, "%2", ВыборкаС.Ставка);
			МРасшифровки.Добавить(ЭлементРасшифровки);
		
			Выборка	= ВыборкаС.Выбрать();
			Пока Выборка.Следующий() Цикл
				Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория 
					+ ", ставка " + Выборка.Ставка + ", " + Выборка.Фамилия;
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Взнос);
			КонецЦикла;
		КонецЦикла;
		
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", СтрСоединить(МРасшифровки, " + "));
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", РасчетнаяСумма);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11а(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.11а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.030 подр.1.1 прил.1 (1 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru='∑ стр.140 (1 месяц ОП) подр.3.2.1 Р.3 + гр.2 стр.010 (1 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11б(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.11б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.030 подр.1.1 прил.1 (2 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru='∑ стр.140 (2 месяц ОП) подр.3.2.1 Р.3 + гр.3 стр.010 (2 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11в(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.11в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.030 подр.1.1 прил.1 (3 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru='∑ стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + гр.4 стр.010 (3 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, "П0111100030" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательП8"	, "П0001900010" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М114001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя", "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя", "030");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_900.Отчет		КАК Отчет,
	|	ВТ_900.Мес			КАК Мес,
	|	ВТ_900.Страница		КАК Страница,
	|	ВТ_900.Значение_	КАК ПоказательП8
	|ИЗ
	|	ВТ_900 КАК ВТ_900
	|ГДЕ
	|	ВТ_900.Графа		= &НомерГрафы
	|	И ВТ_900.Мес		<= &ТекущийМесяц
	|	И НЕ ВТ_900.Значение_= 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательП8)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_321.С140 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_900.Графа", ?(Настройки.НомерГрафы = "01", 
		"НЕ ВТ_900.Графа", "ВТ_900.Графа"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП8 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивСуммР1 = Новый Массив;
	МассивСуммР3 = Новый Массив;
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 0;
	Р1Сумм	= 0;
	П8Сумм	= 0;
	Р3Сумм	= 0;
	
	Если ВыборкаР1.Следующий() Тогда
		Р1Сумм	= ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР1.Добавить(Выборка.ПоказательР1);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаП8.Следующий() Тогда
		П8Сумм = ВыборкаП8.ПоказательП8;
		МассивСуммР3.Добавить(ВыборкаП8.ПоказательП8);
		Выборка = ВыборкаП8.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательП8.Дополнение = "" + Выборка.Мес + " мес.";
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП8);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаР3.Следующий() Тогда
		Р3Сумм = ВыборкаР3.ПоказательР3;
		МассивСуммР3.Добавить(ВыборкаР3.ПоказательР3);
		Если НЕ (Р1Сумм = П8Сумм + Р3Сумм И Настройки.ПриоритетПроизводительности) Тогда
			
			ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
			Выборка	= ВыборкаР3.Выбрать();
			
			Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
				Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
				Счетчик = Счетчик + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сумм = П8Сумм + Р3Сумм;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР1, " + "), 
		ВыборкаР1.ПоказательР1, СтрСоединить(МассивСуммР3, " + "), П8Сумм + Р3Сумм);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_12(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 011(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.12)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 по всем значениям поля 001 = ∑ стр.140 (1 месяц ОП) + '") +
		НСтр("ru='стр.140 (2 месяц ОП) + стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_13(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.030 подр.1.1 прил.1 по всем значениям поля 001 = '") +
		НСтр("ru='(стр.140 (1,2,3 месяц) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц) прил.9 Р.1) + '") +
		НСтр("ru='(стр.140 (1,2,3 месяц ПОП) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц ПОП) прил.9 Р.1)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.14а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.2 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru='значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.14б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.3 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru='значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.14в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.4 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru='значению поля 001 прил.1 Р.1 соответствующий значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3", "П00321М115001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"			, ?(Настройки.НомерГрафы = "01", "04", Настройки.НомерГрафы));
	Запрос.УстановитьПараметр("ТекущийМесяц"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя"	, "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "050");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "051");
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТТарифа.Значение_ = ""10"" ТОГДА ""11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ГруппаТарифов,
	|	ВЫБОР КОГДА ТТарифа.Значение_ В (""10"",""11"") ТОГДА ""10,11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ПредставлениеГруппы,
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	-Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Графа	<= &НомерГрафы
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Графа	<= &НомерГрафы
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаТарифов,
	|	КодТарифа,
	|	Страница,
	|	Графа
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МАКСИМУМ(ПредставлениеГруппы)
	|ПО
	|	ГруппаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.С130 КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р1Сум	= 0;
		Р3Сум	= 0;
		Счетчик	= 1;
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11", "П0111100050" + Выборка.Графа);
			ИменаПоказателей.Вставить("ПоказательР12", "П0111100051" + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			Разность = Выборка.ПоказательР11 + Выборка.ПоказательР12;
			Если Настройки.НомерГрафы = "01" И НЕ Выборка.Графа = "01" Тогда
				Р3Сум = Р3Сум + Разность;
			Иначе
				Р1Сум = Р1Сум + Разность;
			КонецЕсли;
			Показатели.ПоказательР11.Дополнение = "тариф " + Выборка.КодТарифа;
			Показатели.ПоказательР12.Дополнение = "тариф " + Выборка.КодТарифа;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.ГруппаТарифов)) Тогда
			Р3Сум	= Р3Сум + ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р1Сум = Р3Сум И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
					Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
					+ " => тариф " + ВыборкаР1.ПредставлениеГруппы + ", " + Выборка.Фамилия;
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
					Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, Р1Сум, Р3Сум, ВыборкаР1.ПредставлениеГруппы);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.ПредставлениеГруппы;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_0_15(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 014(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.15)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.050 подр.1.1 прил.1 р. 1 СВ - (гр.2 + гр.3 + гр.4) стр.051 подр.1.1 прил.1 '") +
		НСтр("ru='р. 1 СВ по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_16(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.16)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.1 стр.051 подр.1.1 прил.1 р. 1 СВ по значению поля '") +
		НСтр("ru='001 соответствующему значению стр.130 подр.3.2.1 Р.3 = гр.2,3,4 стр.050 подр.1.1 прил.1 р. 1 '") +
		НСтр("ru='СВ - гр.2,3,4 стр.051 подр.1.1 прил.1 р. 1 СВ + ∑ (стр.150 (1 месяц ПОП) + стр.150 '") +
		НСтр("ru='(2 месяц ПОП) + стр.150 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.040 подр.1.3.1 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 001 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.040 подр.1.3.1 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 001 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.040 подр.1.3.1 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 001 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17г(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.040 подр.1.3.2 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 002 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17д(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.040 подр.1.3.2 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 002 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17е(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.040 подр.1.3.2 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 002 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00322М120001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, ?(Настройки.НомерГрафы = "01", "04", Настройки.НомерГрафы));
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя", "040");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("СтрокаКода001"	, "001");
	Запрос.УстановитьПараметр("СтрокаКода003"	, "002");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТКода001.Значение_ КАК Строка(1))	КАК Код001,
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК Код003,
	|	Выразить(ТКода001.Значение_ КАК Строка(1)) + 
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК КодТарифа,
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Графа		КАК Графа,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТКода001.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|			И (ТКода001.Раздел		= &Раздел)
	|			И (ТКода001.Строка_		= &СтрокаКода001)
	|			И (ТКода001.Мес			= &ОтчетныйМесяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода003
	|			ПО ТПоказателя.Страница = ТКода003.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода003.СтрокаТЧ
	|			И (ТКода003.Раздел		= &Раздел)
	|			И (ТКода003.Строка_		= &СтрокаКода003)
	|			И (ТКода003.Мес			= &ОтчетныйМесяц)
	|ГДЕ
	|	ТПоказателя.Раздел		= &Раздел
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		<= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МИНИМУМ(Код001),
	|	МИНИМУМ(Код003)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_322.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_322.С200 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р1Сум	= 0;
		Р3Сум	= 0;
		Счетчик	= 1;
		
		ДополнениеР1 = "Код основания " + ВыборкаР1.Код001 
			+ ?(ЗначениеЗаполнено(ВыборкаР1.Код003), ", код класса " + ВыборкаР1.Код003, "");
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР1", Настройки.Раздел + "М1040" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			Если Настройки.НомерГрафы = "01" И НЕ Выборка.Графа = "01" Тогда
				Р3Сум = Р3Сум + Выборка.ПоказательР1;
			Иначе
				Р1Сум = Р1Сум + Выборка.ПоказательР1;
			КонецЕсли;
			Показатели.ПоказательР1.Дополнение = ДополнениеР1;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.КодТарифа)) Тогда
			Р3Сум	= Р3Сум + ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р1Сум = Р3Сум И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
					Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., код " + Выборка.Категория 
					+ ", " + Выборка.Фамилия;
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
					Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ВыборкаР1.Код001);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%4", ВыборкаР1.Код003);
		Настройки.ДопСведения	= ДополнениеР1;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_0_18а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.18а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 017(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.18а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.1 прил.1 р. 1 СВ по значению поля 001 соответствующему '") +
		НСтр("ru='значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 '") +
		НСтр("ru='(3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_18б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.18б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 017(г,д,е)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.18б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.2 прил.1 р. 1 СВ по значению поля 002 соответствующему '") +
		НСтр("ru='значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 '") +
		НСтр("ru='(3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_19а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.19а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.19а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.040 подразд. 1.3.1 по значению поля 001 соответствующему значению стр.190 подр.3.2.2 '") +
		НСтр("ru='Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 001 + ∑ (стр.200 (1 месяц ПОП) + стр.200 '") +
		НСтр("ru='(2 месяц ПОП) + стр.200 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_19б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.19б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.19б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.040 подразд. 1.3.2 по значению поля 002 соответствующему значению стр.190 подр.3.2.2 '") +
		НСтр("ru='Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 003 + ∑ (стр.200 (1 месяц ПОП) + стр.200 '") +
		НСтр("ru='(2 месяц ПОП) + стр.200 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_20а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.20а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Спорное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.1 Раздела 3 (КС 0.20а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более '") +
		НСтр("ru='набора идентичных показателей (СНИЛС + ФИО + код категории ЗЛ)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Повтор по Фамилии (%1), СНИЛС (%2), коду категории (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в '") +
		НСтр("ru='разделе 3 расчета'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_20б(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.20б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.1 Раздела 3 (КС 0.20б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более '") +
		НСтр("ru='застрахованных лиц с идентичным набором показателей (СНИЛС + ФИО)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Повтор по Фамилии (%1), СНИЛС (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в '") +
		НСтр("ru='разделе 3 расчета'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Снилс"	, "П000310003001");
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("Вид"			, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ВТ_310_Отбор
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|	И ВТ_310.Вид = &Вид
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_310_Отбор.КлючСортировки)
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|	И ВТ_310.Вид = &Вид
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки
	|ИТОГИ
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_310_Отбор";
	
	РезультатЗапроса	= Запрос.Выполнить();
	ВыборкаР3			= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР3.Следующий() Цикл
		
		Настройки.Вставить("ДопСведения", ВыборкаР3.Фамилия + ", " + ВыборкаР3.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаР3.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Снилс);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Фамилия);
		КонецЦикла;
		
		Настройки.ЭтоОшибка	= Истина;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаР3.Фамилия);
		Настройки.Расшифровка = СтрЗаменить(Настройки.Расшифровка		, "%2", ВыборкаР3.Снилс);
		ДополнитьСтруктуруОшибок2020(Настройки);
	
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_20в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.20в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 Раздела 3 (КС 0.20в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='В подр.3.2.1 Р.3 не должны содержаться 2 и более набора идентичных показателей '") +
		НСтр("ru='(месяц + код категории ЗЛ) по одному застрахованному лицу'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Повтор по месяцу (%1), коду категории (%2) для %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Наличие в расчете застрахованного лица с идентичным набором показателей в '") +
		НСтр("ru='разделе 3 расчета'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_21(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Титульный лист'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Титульного листа (КС 0.21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='2020 ≤ Значение поля ""Календарный год"" титульного листа ≤ значения текущего календарного года'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='2020 <= (%1) <= (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Значение календарного года должно быть больше или равно значению ""2020"" и меньше или '") +
		НСтр("ru='равно значению текущего календарного года'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ОтчетГод"	, "ОтчетГод");
	ИменаПоказателей.Вставить("ДатаПодписи"	, "ДатаПодписи");
	
	ЗаполнитьСтруктуруПоказателейТитульный2020(Показатели, ИменаПоказателей);
	ЗарегистрироватьФормулу2020(Настройки);
	
	ИсточникДанных	= Новый Структура("Отчет, Страница", Неопределено, 1);
	ЗначениеОтчГода	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПараметрыКС.СтруктураДанныхТитульный.ОтчетГод);
	ЗначениеОтчГода	= ?(ЗначениеОтчГода = Неопределено, 0, ЗначениеОтчГода);
	ЗначениеКалГода	= Год(ПараметрыКС.СтруктураДанныхТитульный.ДатаПодписи);
	
	ИсточникДанных.Вставить("ОтчетГод"		, ЗначениеОтчГода);
	ИсточникДанных.Вставить("ДатаПодписи"	, ЗначениеКалГода);
	ВнестиПоказательВРасшифровку2020(ИсточникДанных, Показатели.ОтчетГод);
	ВнестиПоказательВРасшифровку2020(ИсточникДанных, Показатели.ДатаПодписи);
	
	Настройки.ЭтоОшибка		= НЕ (2020 <= ЗначениеОтчГода И ЗначениеОтчГода <= ЗначениеКалГода);	
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", ЗначениеОтчГода);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка, "%2", ЗначениеКалГода);
	ДополнитьСтруктуруОшибок2020(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22а(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2 Раздела 3 (КС 0.22а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сведения по застрахованному лицу не содержат отрицательных значений в данных о сумме '") +
		НСтр("ru='страховых взносов, не превышающих предельную величину и (или) начисленных страховых взносах'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения по застрахованному лицу содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("Вид"			, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Ключ		КАК Ключ
	|ПОМЕСТИТЬ
	|	ВТ_310_Отбор
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК С140,
	|	ВТ_321.С150		КАК С150,
	|	ВТ_321.С160		КАК С160,
	|	ВТ_321.С170		КАК С170
	|ИЗ
	|	ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310 КАК ВТ_310
	|		ПО ВТ_310_Отбор.Ключ = ВТ_310.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310_Отбор.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.С140 < 0
	|	ИЛИ ВТ_321.С150 < 0
	|	ИЛИ ВТ_321.С160 < 0
	|	ИЛИ ВТ_321.С170 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес
	|ИТОГИ 
	| 	МИНИМУМ(Фамилия),
	| 	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК С200,
	|	ВТ_322.С210		КАК С210
	|ИЗ
	|	ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310 КАК ВТ_310
	|		ПО ВТ_310_Отбор.Ключ = ВТ_310.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310_Отбор.Ключ = ВТ_322.Ключ
	|ГДЕ
	|	ВТ_322.С200 < 0
	|	ИЛИ ВТ_322.С210 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес
	|ИТОГИ 
	| 	МИНИМУМ(Фамилия),
	| 	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_310_Отбор";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР321 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР322 = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("С140"	, "П00321М114001_");
	ИменаПоказателей.Вставить("С150"	, "П00321М115001_");
	ИменаПоказателей.Вставить("С160"	, "П00321М116001_");
	ИменаПоказателей.Вставить("С170"	, "П00321М117001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Пока ВыборкаР321.Следующий() Цикл
		Выборка	= ВыборкаР321.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Показатель Из ИменаПоказателей Цикл
				Если Выборка[Показатель.Ключ] < 0 Тогда
					Настройки.Вставить("ДопСведения", ВыборкаР321.Фамилия + ", " + ВыборкаР321.Снилс);
					ЗарегистрироватьФормулу2020(Настройки);
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели[Показатель.Ключ]);
					Настройки.ЭтоОшибка		= Истина;
					ДополнитьНастройки2020(Настройки);
					Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка[Показатель.Ключ]);
					ДополнитьСтруктуруОшибок2020(Настройки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Показатели = Неопределено;
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("С200"	, "П00322М120001_");
	ИменаПоказателей.Вставить("С210"	, "П00322М121001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Пока ВыборкаР322.Следующий() Цикл
		Выборка	= ВыборкаР322.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Показатель Из ИменаПоказателей Цикл
				Если Выборка[Показатель.Ключ] < 0 Тогда
					Настройки.Вставить("ДопСведения", ВыборкаР322.Фамилия + ", " + ВыборкаР322.Снилс);
					ЗарегистрироватьФормулу2020(Настройки);
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели[Показатель.Ключ]);
					Настройки.ЭтоОшибка = Истина;
					ДополнитьНастройки2020(Настройки);
					Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка[Показатель.Ключ]);
					ДополнитьСтруктуруОшибок2020(Настройки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22б(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подр.1.1 приложения 1 к Разделу 1 (КС 0.22б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(стр.050 – стр.051), стр.061 подр.1.1 прил.1 Р.1 по всем значениям граф ≥ 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru='взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= 0'"));
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru='%1 >= 0'"));
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделПоказателя"	, "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "050");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "051");
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, "061");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|			И ТПоказателя1.Графа = ТПоказателя3.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя3.Раздел	= &РазделПоказателя
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТПоказателя3.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	Графа";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Разность = Выборка.ПоказательР11 - Выборка.ПоказательР12;
			
		ИменаПоказателей = Новый Структура;
		ИменаПоказателей.Вставить("ПоказательР11"	, "П0111100050" + Выборка.Графа);
		ИменаПоказателей.Вставить("ПоказательР12"	, "П0111100051" + Выборка.Графа);
		ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		
		Настройки.ЭтоОшибка		= Разность < 0;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", 
			"" + Выборка.ПоказательР11 + " - " + Выборка.ПоказательР12);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка, "%2", Разность);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
		ИменаПоказателей = Новый Структура;
		ИменаПоказателей.Вставить("ПоказательР13"	, "П0111100061" + Выборка.Графа);
		ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		Настройки.ЭтоОшибка		= Выборка.ПоказательР13 < 0;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки2, "%1", Выборка.ПоказательР13);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22в(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подр.1.3.1 приложения 1 к Разделу 1 (КС 0.22в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='стр.040, стр.050 подр.1.3.1 прил.1 Р.1 по всем значения граф  ≥ 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru='взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"	, "П11131");
	ПроверитьКС2020_0_22_код(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22г(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подр.1.3.2 приложения 1 к Разделу 1 (КС 0.22г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='стр.040, стр.050 подр.1.3.2 прил.1 Р.1 по всем значения граф  ≥ 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru='взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"	, "П11132");
	ПроверитьКС2020_0_22_код(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделПоказателя"	, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "040");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "050");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"		, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.СтрокаТЧ = ТПоказателя2.СтрокаТЧ
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки,
	|	Графа";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
			
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11"	, Настройки.Раздел + "М1040" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ЗарегистрироватьФормулу2020(Настройки);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			
			Настройки.ЭтоОшибка		= Выборка.ПоказательР11 < 0;
			ДополнитьНастройки2020(Настройки);
			Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР11);
			ДополнитьСтруктуруОшибок2020(Настройки);
		
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР12"	, Настройки.Раздел + "М1050" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ЗарегистрироватьФормулу2020(Настройки);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			
			Настройки.ЭтоОшибка		= Выборка.ПоказательР12 < 0;
			ДополнитьНастройки2020(Настройки);
			Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР12);
			ДополнитьСтруктуруОшибок2020(Настройки);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 0.23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.030 Р.1 = стр.030 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.031 + стр.032 + стр.033 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("030");
	МассивСтрок.Добавить("031");
	МассивСтрок.Добавить("032");
	МассивСтрок.Добавить("033");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010002001");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_24(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 0.24)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = стр.070 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.071 + стр.072 + стр.073 Р.1 по каждому значению стр.060 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по КБК %4'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("070");
	МассивСтрок.Добавить("071");
	МассивСтрок.Добавить("072");
	МассивСтрок.Добавить("073");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П00001М106001_");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_24_код(Настройки)
	
	Перем Показатели;
	
	Раздел		= Сред(Настройки.СтрокаКБК, 1, 6);
	РазделТЧ	= Сред(Настройки.СтрокаКБК, 1, 8);
	СтрокаКБК	= Сред(Настройки.СтрокаКБК, 9, 3);
	Окончание	= Сред(Настройки.СтрокаКБК, 12);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаКБК"		, СтрокаКБК);
	Запрос.УстановитьПараметр("МассивСтрок"		, Настройки.МассивСтрок);
	Запрос.УстановитьПараметр("СтрокаСуммы"		, Настройки.МассивСтрок[0]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТКБК.Значение_ КАК КБК,
	|	ТПоказателя1.Отчет КАК Отчет,
	|	ТПоказателя1.Страница КАК Страница,
	|	ТПоказателя1.СтрокаТЧ КАК НомерСтроки,
	|	ТПоказателя1.Строка_ КАК НомСтрПок,
	|	ТПоказателя1.Мес КАК Мес,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ""01""
	|		ИНАЧЕ ПОДСТРОКА(ТПоказателя1.Строка_,3,1) + ТПоказателя1.МесСтр
	|	КОНЕЦ КАК Ключ,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (""120"",""121"",""122"",""123"")
	|			ТОГДА -ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|	КОНЕЦ КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ = &СтрокаСуммы
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		КОГДА ТПоказателя1.Строка_ = ""120""
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА -ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Расшифровка
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКБК
	|		ПО ТПоказателя1.Мес = ТКБК.Мес
	|			И ТПоказателя1.Страница = ТКБК.Страница
	|			И ТПоказателя1.СтрокаТЧ = ТКБК.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя1.Раздел = &Раздел
	|	И ТПоказателя1.Строка_ В(&МассивСтрок)
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|		КОНЕЦ
	|	И ТПоказателя1.Мес В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТКБК.Раздел = &Раздел
	|	И ТКБК.Строка_ = &СтрокаКБК
	|	И ТКБК.Мес В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КБК,
	|	Ключ,
	|	НомСтрПок,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(Расшифровка)
	|ПО
	|	КБК,
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если ВыборкаК.Расшифровка Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", РазделТЧ + Выборка.НомСтрПок + Окончание);
				ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ДанныеКС.Мес - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность = ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КБК);
		Настройки.ДопСведения	= "КБК " + ВыборкаТ.КБК;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_0_25(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.1 Раздела 3 (КС 0.25)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Идентификация стр.030, 040, 050, 060 подр.3.1 Р.3 с базами данных ЦУН АИС'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочные данные застрахованных лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_26(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Титульный лист'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='п.1 ст. 119 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отключено для 1 полугодия 2020г в связи с короновирусом'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Титульного листа (КС 0.26)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Титульный лист (стр.001) ""Дата представления Расчета"" должна быть раньше или равна '") +
		НСтр("ru='установленному стр.431 НК РФ сроку представления Расчета, если ""Номер корректировки"" ""0--""'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2, когда номер корректировки = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Возможное нарушение срока представления первичного Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Вид = 0 Тогда
		Возврат;
	КонецЕсли;

	// перенесение сроков в связи с короновирусом
	Если ДанныеКС.Год = 2020 И ДанныеКС.Мес <= 6 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ДатаПодписи"	, "ДатаПодписи");
	ЗаполнитьСтруктуруПоказателейТитульный2020(Показатели, ИменаПоказателей);
	ЗарегистрироватьФормулу2020(Настройки);
	
	ПредельныйМес	= ?(ДанныеКС.Мес = 12, 1, ДанныеКС.Мес + 1);
	ПредельныйГод	= ?(ДанныеКС.Мес = 12, ДанныеКС.Год + 1, ДанныеКС.Год);
	ПредельнаяДата	= Дата(ПредельныйГод, ПредельныйМес, 30, 23, 59, 59);
	ДатаПодписи		= ПараметрыКС.СтруктураДанныхТитульный.ДатаПодписи;
	
	ИсточникДанных	= Новый Структура("Отчет, Страница", Неопределено, 1);
	ИсточникДанных.Вставить("ДатаПодписи"	, ДатаПодписи);
	ВнестиПоказательВРасшифровку2020(ИсточникДанных, Показатели.ДатаПодписи);
	
	Настройки.ЭтоОшибка		= НЕ ДатаПодписи <= ПредельнаяДата;	
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Формат(ДатаПодписи		, "ДЛФ=D"));
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Формат(ПредельнаяДата	, "ДЛФ=D"));
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ДанныеКС.Вид);
	ДополнитьСтруктуруОшибок2020(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_27(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 2 (КС 0.27)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2 в случае, если поле ""Расчетный (отчетный) '") +
		НСтр("ru='период (код)"" Титульного листа = 34, 83, 84, 85, 86 и поле ""По месту нахождения (учета) (код)"" '") +
		НСтр("ru='Титульного листа = 124, 240'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Раздел 2 и Приложение 1 к Разделу 2 заполнены'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР21", "П00021М101001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, "П00021");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Значение_	КАК ПоказательР21
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= ""010""
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка	= РезультатЗапроса.Выбрать();
		
	ЗарегистрироватьФормулу2020(Настройки);
	
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР21);
	КонецЦикла;
	
	ПериодНайден	= НЕ СтрНайти("34,83,84,85,86", ПараметрыКС.СтруктураДанныхТитульный.Период) = 0;
	ПоМестуНайден	= НЕ СтрНайти("124,240", ПараметрыКС.СтруктураДанныхТитульный.ПоМесту) = 0;
	Настройки.ЭтоОшибка	= ПериодНайден И ПоМестуНайден И НЕ (ДанныеКС.Р00002Заполнен И ДанныеКС.Р00021Заполнен);
	Настройки.Расшифровка	= Настройки.ШаблонРасшифровки;
	ДополнитьСтруктуруОшибок2020(Настройки);
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.50а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.150 (1 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_50_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.50б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.150 (2 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_50_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.50в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.150 (3 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_50_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("Выплаты"	, "П00321М114001_");
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.Код КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК Выплаты,
	|	ВТ_321.С150		КАК База
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И (ВТ_321.С150 > ВТ_321.С140)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Фамилия);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Выплаты);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
		
		Настройки.ЭтоОшибка		= Истина;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Выборка.База);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Выборка.Выплаты);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.51а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.51а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма базы страховых взносов ∑ (гр.2 стр.050 подр.1.1 прил.1 р. 1 - гр.2 стр.051 подр.1.1 '") +
		НСтр("ru='прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru='на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110005102");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_51_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.51б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.51б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма базы страховых взносов ∑ (гр.3 стр.050 подр.1.1 прил.1 р. 1 - гр.3 стр.051 подр.1.1 '") +
		НСтр("ru='прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru='на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110005103");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_51_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.51в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.51в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма базы страховых взносов ∑ (гр.4 стр.050 подр.1.1 прил.1 р. 1 - гр.4 стр.051 подр.1.1 '") +
		НСтр("ru='прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru='на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110005104");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_51_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11"	, Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12"	, Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделПоказателя", Лев(Настройки.ПоказательР11, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|		ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""051""
	|		ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Строка_		КАК Строка_,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	В (&СтрокаР11, &СтрокаР12)
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	Строка_
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР11 - ВыборкаР1.ПоказательР12, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Строка_ = "050" Тогда
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		Иначе
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЕсли;
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.52а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.52а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр.2 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru='∑ стр. 170 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006102");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_52_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.52б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.52б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр.3 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru='∑ стр. 170 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006103");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_52_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.52в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.52в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр.4 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru='∑ стр. 170 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006104");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_52_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР1, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделПоказателя", Лев(Настройки.ПоказательР1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя", Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С170		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И НЕ (ВТ_321.С170 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР1, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_53а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.53а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.2 стр.040 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='по всем значениям стр.001 + ∑ всех гр.2 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru='значений полей 001, 002) = ∑ стр. 200 (1 месяц) подразд. 3.2.2 (допустимо различие '") +
		НСтр("ru='не более чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104002");
	Настройки.Вставить("ПоказательР12", "П11132М104002");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_53б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.53б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.3 стр.040 подр.1.3.1 прил.1 Р.1 ") +
		НСтр("ru='по всем 'значениям стр.001 + ∑ всех гр.3 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru='значений полей 001, 002) = ∑ стр. 200 (2 месяц) подразд. 3.2.2 (допустимо различие не более '") +
		НСтр("ru='чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104003");
	Настройки.Вставить("ПоказательР12", "П11132М104003");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_53в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.53в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.4 стр.040 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 по всем значениям стр.001 + ∑ всех гр.4 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru='значений полей 001, 002) = ∑ стр. 200 (3 месяц) подразд. 3.2.2 (допустимо различие не более '") +
		НСтр("ru='чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104004");
	Настройки.Вставить("ПоказательР12", "П11132М104004");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.54а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 '") +
		НСтр("ru='прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (1 месяц) подразд. 3.2.2 '") +
		НСтр("ru='(допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105002");
	Настройки.Вставить("ПоказательР12", "П11132М105002");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.54б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 '") +
		НСтр("ru='прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (2 месяц) подразд. 3.2.2 '") +
		НСтр("ru='(допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105003");
	Настройки.Вставить("ПоказательР12", "П11132М105003");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.54в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу (гр.4 стр.050 подразд. '") +
		НСтр("ru='1.3.1 прил.1 + гр.4 стр.050 подразд. 1.3.2) = ∑ стр. 210 (3 месяц) подразд. 3.2.2 '") +
		НСтр("ru='(допустимо различие не более чем на значение в 0,5 копейки, умноженное на '") +
		НСтр("ru='количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105004");
	Настройки.Вставить("ПоказательР12", "П11132М105004");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54_код(Настройки)
	
	Перем Показатели;
	
	СтрокаПоказателя = Сред(Настройки.ПоказательР11, 9, 3);
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3"	, ?(СтрокаПоказателя = "050", "П00322М121001_", "П00322М120001_"));
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделР11"		, Лев(Настройки.ПоказательР11, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Лев(Настройки.ПоказательР12, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя", Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Строка_		КАК Строка_,
	|	ТПоказателя.Страница + ВЫБОР
	|		КОГДА ТПоказателя.Раздел = ""П11131""
	|			ТОГДА "",2""
	|		ИНАЧЕ "",3""
	|	КОНЕЦ КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя.Раздел		КАК Раздел,
	|	ТПоказателя.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		В (&РазделР11, &РазделР12)
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки,
	|	Раздел
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С210		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес = &НомерМесяца)
	|			И НЕ (ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Категория
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "С210", ?(СтрокаПоказателя = "040", "С200", "С210"));	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР1, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		ИменаПоказателей = Новый Структура("ПоказательР1", Выборка.Раздел + "М1" + Выборка.Строка_ 
			+ Выборка.Графа + "_");
		ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_1

Процедура ПроверитьКС2020_1_1(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.1)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.050 Р.1 = стр.050 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.051 + стр.052 + стр.053 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("050");
	МассивСтрок.Добавить("051");
	МассивСтрок.Добавить("052");
	МассивСтрок.Добавить("053");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010004001");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_2(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.090 Р.1 = стр.090 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.091 + стр.092 + стр.093 Р.1 по каждому значению стр.080 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по КБК %4'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("090");
	МассивСтрок.Добавить("091");
	МассивСтрок.Добавить("092");
	МассивСтрок.Добавить("093");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П00001М208001_");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в (стр.110 - стр.120) Р.1 = (стр.110 - стр.120) Р.1 предыдущего '") +
		НСтр("ru='отчетного периода + (стр.111 - стр.121) + (стр.112 - стр.122) + (стр.113 - стр.123) Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("110");
	МассивСтрок.Добавить("111");
	МассивСтрок.Добавить("112");
	МассивСтрок.Добавить("113");
	МассивСтрок.Добавить("120");
	МассивСтрок.Добавить("121");
	МассивСтрок.Добавить("122");
	МассивСтрок.Добавить("123");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010010001");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.030 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003001");
	Настройки.Вставить("ПоказательП1"	, "П011110006001");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_5(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.031 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003101");
	Настройки.Вставить("ПоказательП1"	, "П011110006002");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_6(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.6)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.032 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003201");
	Настройки.Вставить("ПоказательП1"	, "П011110006003");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_7(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.033 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003301");
	Настройки.Вставить("ПоказательП1"	, "П011110006004");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_8(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.8)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.050 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005001");
	Настройки.Вставить("ПоказательП1"	, "П011120006001");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_9(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.9)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.051 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005101");
	Настройки.Вставить("ПоказательП1"	, "П011120006002");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_10(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.10)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.052 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005201");
	Настройки.Вставить("ПоказательП1"	, "П011120006003");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_11(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.11)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.053 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005301");
	Настройки.Вставить("ПоказательП1"	, "П011120006004");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_11_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП1", Настройки.ПоказательП1);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП1"		, Лев(Настройки.ПоказательП1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("СтрокаП1"		, "060");
	Запрос.УстановитьПараметр("ГрафаП1"			, Сред(Настройки.ПоказательП1, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП1
	|	И ТПоказателя.Строка_	= &СтрокаП1
	|	И ТПоказателя.Графа		= &ГрафаП1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательП1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП1 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	Р1Сум	= 0;
	П1Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП1.Следующий() Цикл
		П1Сум = ВыборкаП1.ПоказательП1;
		Выборка = ВыборкаП1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП1);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П1Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П1Сум);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_12а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.12а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.12а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105001_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_12б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.12б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.12б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105001_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_13а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.13а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.13а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105002_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_13б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.13б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.13б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105002_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_14а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.14а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.14а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105003_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_14б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.14б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.14б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105003_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_15а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.15а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.15а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105004_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_15б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.15б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.15б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105004_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_16а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.16а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.16а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105001_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_16б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.16б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.16б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105001_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_17а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.17а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.17а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105002_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_17б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.17б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.17б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105002_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_18а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.18а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.18а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105003_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_18б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.18б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.18б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105003_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_19а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.19а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.19а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105004_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_19б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.19б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.19б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105004_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_19_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП1", Настройки.ПоказательП1);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП1"		, Лев(Настройки.ПоказательП1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ГрафаП1"			, Сред(Настройки.ПоказательП1, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Лев(Настройки.ПоказательП1, 6) = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("КБК"				, Настройки.КБК);
	Запрос.УстановитьПараметр("С001"			, Настройки.С001);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКБК
	|		ПО ТПоказателя.СтрокаТЧ = ТКБК.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТКБК.Раздел			= ""П00001""
	|	И ТКБК.Строка_			= ""060""
	|	И ТКБК.Мес				= &ОтчетныйМесяц
	|	И ТКБК.Значение_		= &КБК
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП1
	|	И ТПоказателя.Строка_	= ""050""
	|	И ТПоказателя.Графа		= &ГрафаП1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТКода001.Раздел		= &РазделП1
	|	И ТКода001.Строка_		= ""001""
	|	И ТКода001.Мес			= &ОтчетныйМесяц
	|	И ТКода001.Значение_	= &С001
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательП1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП1 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	Р1Сум	= 0;
	П1Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП1.Следующий() Цикл
		П1Сум = ВыборкаП1.ПоказательП1;
		Выборка = ВыборкаП1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП1);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П1Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П1Сум);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_20(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.20)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.110 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.1 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011001");
	Настройки.Вставить("ПоказательП2"		, "П000120009002");
	Настройки.Вставить("ГрафаПризнака	"	, "01");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_21(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.111 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.3 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011101");
	Настройки.Вставить("ПоказательП2"		, "П000120009004");
	Настройки.Вставить("ГрафаПризнака	"	, "03");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_22(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.22)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.112 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.5 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011201");
	Настройки.Вставить("ПоказательП2"		, "П000120009006");
	Настройки.Вставить("ГрафаПризнака	"	, "05");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.113 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.7 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011301");
	Настройки.Вставить("ПоказательП2"		, "П000120009008");
	Настройки.Вставить("ГрафаПризнака	"	, "07");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_24(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.24)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.120 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.1 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012001");
	Настройки.Вставить("ПоказательП2"		, "П000120009002");
	Настройки.Вставить("ГрафаПризнака	"	, "01");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_25(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.25)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.121 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.3 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012101");
	Настройки.Вставить("ПоказательП2"		, "П000120009004");
	Настройки.Вставить("ГрафаПризнака	"	, "03");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_26(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.26)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.122 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.5 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012201");
	Настройки.Вставить("ПоказательП2"		, "П000120009006");
	Настройки.Вставить("ГрафаПризнака	"	, "05");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_27(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.27)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.123 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.7 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012301");
	Настройки.Вставить("ПоказательП2"		, "П000120009008");
	Настройки.Вставить("ГрафаПризнака	"	, "07");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_27_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП2", Настройки.ПоказательП2);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП2"		, Лев(Настройки.ПоказательП2, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ГрафаП2"			, Сред(Настройки.ПоказательП2, 12, 2));
	Запрос.УстановитьПараметр("ГрафаПр"			, Настройки.ГрафаПризнака);
	Запрос.УстановитьПараметр("Признак"			, Настройки.ЗначениеПризнака);	
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП2,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя,
	|	ВТ_100 КАК ТПризнака
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП2
	|	И ТПоказателя.Строка_	= ""090""
	|	И ТПоказателя.Графа		= &ГрафаП2
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТПризнака.Раздел		= &РазделП2
	|	И ТПризнака.Строка_		= ""090""
	|	И ТПризнака.Графа		= &ГрафаПр
	|	И ТПризнака.Мес			= &ОтчетныйМесяц
	|	И ТПризнака.Значение_	= &Признак
	|
	|ИТОГИ
	|	СУММА(ПоказательП2)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП2 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	Р1Сум	= 0;
	П2Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП2.Следующий() Цикл
		П2Сум = ВыборкаП2.ПоказательП2;
		Выборка = ВыборкаП2.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП2);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П2Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П2Сум);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_1

#Область Проверки_Подраздела_1_1

Процедура ПроверитьКС2020_1_28(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.28)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001001");
	Настройки.Вставить("ПоказательР12", "П011110002001");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_29(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.29)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.2 стр.010 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001002");
	Настройки.Вставить("ПоказательР12", "П011110002002");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_30(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.30)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.3 стр.010 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001003");
	Настройки.Вставить("ПоказательР12", "П011110002003");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_31(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.31)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.4 стр.010 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001004");
	Настройки.Вставить("ПоказательР12", "П011110002004");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_32(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.32)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110001001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_33(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.33)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002001");
	Настройки.Вставить("ПоказательР12", "П011110002101");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_34(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.34)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц в гр.2 стр.020 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002002");
	Настройки.Вставить("ПоказательР12", "П011110002102");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_35(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.35)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц в гр.3 стр.020 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002003");
	Настройки.Вставить("ПоказательР12", "П011110002103");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_36(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.36)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц в гр.4 стр.020 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002004");
	Настройки.Вставить("ПоказательР12", "П011110002104");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_36_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Графа КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, ""П00011"")
	|	И (ВТ_100.Строка_	= &СтрокаР11 И ВТ_100.Графа	= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12 И ВТ_100.Графа = &ГрафаР12
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + "",1""	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|	И ТПоказателя2.Строка_	= &СтрокаР12
	|	И ТПоказателя2.Графа	= &ГрафаР12
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСуммР11	= Новый Массив;
		МассивСуммР12	= Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР11.Добавить(Выборка.ПоказательР11);
			МассивСуммР12.Добавить(Выборка.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 >= ВыборкаТ.ПоказательР12;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР11, " + "), 
			ВыборкаТ.ПоказательР11, СтрСоединить(МассивСуммР12, " + "), ВыборкаТ.ПоказательР12, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_37(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.37'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.37)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110002001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_38(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.38'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.38)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003001");
	Настройки.Вставить("ПоказательР12", "П011110002001");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_39(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.39'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.39)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.030 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003002");
	Настройки.Вставить("ПоказательР12", "П011110002002");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_40(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.40'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.40)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.030 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003003");
	Настройки.Вставить("ПоказательР12", "П011110002003");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_41(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.41'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.41)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.030 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003004");
	Настройки.Вставить("ПоказательР12", "П011110002004");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_42(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.42'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.42)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.021 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110002101");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_42_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Мес		КАК Мес,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Мес = ТТарифа.Мес
	|			И ТПоказателя1.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя1.Графа	= ""01""
	|	И ТПоказателя1.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Мес Убыв,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа,
	|	Мес";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 >= Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаТ.ПоказательР12, Разность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_43(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.43'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.43)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 прил.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100030");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_44(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.44'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.44)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.1 прил.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100040");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_45(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.45'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.45)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.1 прил.1 Р.1 = гр.1 стр.045 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов к вычету'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100045");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_46(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.46'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.46)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.1 стр.040 подр.1.1 прил.1 Р.1 - гр.1 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005001");
	Настройки.Вставить("ПоказательР12", "П011110003001");
	Настройки.Вставить("ПоказательР13", "П011110004001");
	Настройки.Вставить("ПоказательР14", "П011110004501");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_47(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.47'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.47)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.2 стр.040 подр.1.1 прил.1 Р.1 - гр.2 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110003002");
	Настройки.Вставить("ПоказательР13", "П011110004002");
	Настройки.Вставить("ПоказательР14", "П011110004502");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_48(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.48'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.48)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.3 стр.040 подр.1.1 прил.1 Р.1 - гр.3 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110003003");
	Настройки.Вставить("ПоказательР13", "П011110004003");
	Настройки.Вставить("ПоказательР14", "П011110004503");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_49(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.49'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.49)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.4 стр.040 подр.1.1 прил.1 Р.1 - гр.4 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110003004");
	Настройки.Вставить("ПоказательР13", "П011110004004");
	Настройки.Вставить("ПоказательР14", "П011110004504");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_49_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя4"	, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.УстановитьПараметр("Графа"				, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, &РазделТарифа)
	|	И (ВТ_100.Строка_	В (&СтрокаПоказателя1, &СтрокаПоказателя2, &СтрокаПоказателя3, &СтрокаПоказателя4)
	|	И ВТ_100.Графа		= &Графа
	|	ИЛИ ВТ_100.Строка_	= &СтрокаТарифа И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО ТПоказателя1.Страница = ТПоказателя4.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТПоказателя4.Строка_	= &СтрокаПоказателя4
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	СУММА(ПоказательР14)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаР1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР14);
		КонецЦикла;
		
		Разность				= ВыборкаР1.ПоказательР12 - ВыборкаР1.ПоказательР13 - ВыборкаР1.ПоказательР14;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР11, ВыборкаР1.ПоказательР12, 
			ВыборкаР1.ПоказательР13, ВыборкаР1.ПоказательР14, Разность, ВыборкаР1.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_50(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.50'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.50)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам с начала периода в гр.1 стр.051 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005101");
	Настройки.Вставить("ПоказательР12", "П011110002101");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_51(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.51'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.51)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.2 стр.051 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005102");
	Настройки.Вставить("ПоказательР12", "П011110002102");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_52(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.52'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.52)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.3 стр.051 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005103");
	Настройки.Вставить("ПоказательР12", "П011110002103");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_53(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.53'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.53)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.4 стр.051 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005104");
	Настройки.Вставить("ПоказательР12", "П011110002104");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_53_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &Раздел
	|	И ТПоказателя2.Строка_	= &СтрокаР12
	|	И ТПоказателя2.Графа	= &ГрафаР12
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСуммР11	= Новый Массив;
		МассивСуммР12	= Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР11.Добавить(Выборка.ПоказательР11);
			МассивСуммР12.Добавить(Выборка.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ВыборкаТ.ПоказательР12 > 0 И НЕ ВыборкаТ.ПоказательР11 > 0 ;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР11, " + "), 
			ВыборкаТ.ПоказательР11, СтрСоединить(МассивСуммР12, " + "), ВыборкаТ.ПоказательР12, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_54(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.54'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.54)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 >= гр.1 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005001");
	Настройки.Вставить("ПоказательР12", "П011110005101");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_55(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.55'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.55)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110005102");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_56(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.56'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.56)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110005103");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_57(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.57'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.57)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110005104");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_58(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.58'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.58)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100050");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_59(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.59'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.59)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.1 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006001");
	Настройки.Вставить("ПоказательР12", "П011110006101");
	Настройки.Вставить("ПоказательР13", "П011110006201");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_60(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.60'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.60)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в гр.2 стр.060 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.2 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006002");
	Настройки.Вставить("ПоказательР12", "П011110006102");
	Настройки.Вставить("ПоказательР13", "П011110006202");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_61(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.61'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.61)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в гр.3 стр.060 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.3 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006003");
	Настройки.Вставить("ПоказательР12", "П011110006103");
	Настройки.Вставить("ПоказательР13", "П011110006203");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_62(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.62'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.62)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в гр.4 стр.060 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.4 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006004");
	Настройки.Вставить("ПоказательР12", "П011110006104");
	Настройки.Вставить("ПоказательР13", "П011110006204");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_62_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("Графа"				, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, &РазделТарифа)
	|	И (ВТ_100.Строка_	В (&СтрокаПоказателя1, &СтрокаПоказателя2, &СтрокаПоказателя3)
	|	И ВТ_100.Графа		= &Графа
	|	ИЛИ ВТ_100.Строка_	= &СтрокаТарифа И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаР1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		КонецЦикла;
		
		РезультатСложения		= ВыборкаР1.ПоказательР12 + ВыборкаР1.ПоказательР13;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР11 = РезультатСложения;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР11, 
			ВыборкаР1.ПоказательР12, ВыборкаР1.ПоказательР13, РезультатСложения, ВыборкаР1.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_63(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.63'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.63)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.060 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100060");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_64(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.64'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.64)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.061 подр.1.1 прил.1 Р.1 = гр.1 стр.061 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100061");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_65(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.65'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.65)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.062 подр.1.1 прил.1 Р.1 = гр.1 стр.062 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.062 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100062");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_65_код(Настройки)
	
	Перем Показатели;
	ОтчетныйМесяц = ДанныеКС.Мес;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа,
	|	ТПоказателя1.Мес		КАК Мес,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК Ключ,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Мес = ТТарифа.Мес
	|			И ТПоказателя1.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|	И ТПоказателя1.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Графа,
	|	Мес Убыв,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа,
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаК.ПоказательР12) Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа);
				ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаТ.ПоказательР12, 
			СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_2

Процедура ПроверитьКС2020_1_66(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.66'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.66)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001001");
	Настройки.Вставить("ПоказательР12", "П011120002001");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_67(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.67'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.67)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.2 стр.010 подр.1.2 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001002");
	Настройки.Вставить("ПоказательР12", "П011120002002");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_68(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.68'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.68)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.3 стр.010 подр.1.2 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001003");
	Настройки.Вставить("ПоказательР12", "П011120002003");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_69(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.69'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.69)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.4 стр.010 подр.1.2 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001004");
	Настройки.Вставить("ПоказательР12", "П011120002004");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_70(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.70'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.70)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011120001001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_71(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.71'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.71)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.020 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011120002001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_72(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.72'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.72)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003001");
	Настройки.Вставить("ПоказательР12", "П011120002001");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_73(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.73'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.73)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.030 подр.1.2 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003002");
	Настройки.Вставить("ПоказательР12", "П011120002002");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_74(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.74'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.74)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.030 подр.1.2 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003003");
	Настройки.Вставить("ПоказательР12", "П011120002003");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_75(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.75'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.75)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.030 подр.1.2 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003004");
	Настройки.Вставить("ПоказательР12", "П011120002004");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_76(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.76'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.76)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 прил.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200030");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_77(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.77'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.77)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.2 прил.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200040");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_78(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.78'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.78)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.2 прил.1 Р.1 = гр.1 стр.045 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов к вычету'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200045");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_79(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.79'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.79)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.1 стр.040 подр.1.2 прил.1 Р.1 - гр.1 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005001");
	Настройки.Вставить("ПоказательР12", "П011120003001");
	Настройки.Вставить("ПоказательР13", "П011120004001");
	Настройки.Вставить("ПоказательР14", "П011120004501");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_80(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.80'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.80)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 подр.1.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.2 стр.040 подр.1.2 прил.1 Р.1 - гр.2 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005002");
	Настройки.Вставить("ПоказательР12", "П011120003002");
	Настройки.Вставить("ПоказательР13", "П011120004002");
	Настройки.Вставить("ПоказательР14", "П011120004502");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_81(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.81'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.81)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 подр.1.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.3 стр.040 подр.1.2 прил.1 Р.1 - гр.3 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005003");
	Настройки.Вставить("ПоказательР12", "П011120003003");
	Настройки.Вставить("ПоказательР13", "П011120004003");
	Настройки.Вставить("ПоказательР14", "П011120004503");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_82(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.82'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.82)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 подр.1.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.4 стр.040 подр.1.2 прил.1 Р.1 - гр.4 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005004");
	Настройки.Вставить("ПоказательР12", "П011120003004");
	Настройки.Вставить("ПоказательР13", "П011120004004");
	Настройки.Вставить("ПоказательР14", "П011120004504");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_83(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.83'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.83)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 подр.1.2 прил.1 Р.1 = гр.1 стр.060 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200060");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_84(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.84'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.84)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 х соответствующий значению поля 001 прил.1 Р.1 тариф страховых взносов ± '") +
		НСтр("ru='(гр.2 + гр.3 + гр.4) стр.020 подр.1.2 прил.1 Р.1 / 3 х 0,005 руб.'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьКС2020_1_84_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_84_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (""П01112"", ""П00011"")
	|	И (ВТ_100.Строка_	В (""020"", ""050"", ""060"")
	|	И ВТ_100.Графа		В (""02"", ""03"", ""04"")
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_	КАК КодТарифа,
	|	ТПоказателя.Отчет	КАК Отчет,
	|	ТПоказателя.Раздел + ""00""		КАК Раздел,
	|	ТПоказателя.Страница + "",1""	КАК Страница,
	|	ТПоказателя.Строка_	КАК НомСтроки,
	|	ТПоказателя.Графа	КАК Графа,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""060""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Взнос,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""020""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоФизлиц
	|ИЗ
	|	ВТ_101 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя.Строка_		В (""020"", ""050"", ""060"")
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	НомСтроки Убыв,
	|	Страница,
	|	Графа
	|ИТОГИ
	|	МИНИМУМ(КодТарифа),
	|	СУММА(Взнос),
	|	СУММА(База),
	|	СУММА(КолвоФизлиц)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Ставка = ДанныеКС.Ставки112.Найти(ВыборкаТ.КодТарифа, "Код");
		СтавкаПереопр = ?(Ставка = Неопределено, 0, Ставка.Ставка);
		
		Если ЗначениеЗаполнено(ВыборкаТ.КодТарифа) Тогда
			ВнестиПоказательБезРасшифровки2020("Ставка СВ на ОМС для тарифа " + ВыборкаТ.КодТарифа,
				СтавкаПереопр);
		КонецЕсли;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИмяПоказателя = ?(Выборка.НомСтроки = "060", "Взнос", ?(Выборка.НомСтроки = "050", "База", "КолвоФизлиц"));
			ИменаПоказателей.Вставить(ИмяПоказателя, Выборка.Раздел + Выборка.НомСтроки + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели[ИмяПоказателя]);
		КонецЦикла;
		
		РасчетныйВзнос		= Окр(ВыборкаТ.База * СтавкаПереопр / 100, 2);
		Погрешность			= Окр(Окр(ВыборкаТ.КолвоФизлиц / 3) * 0.005, 2);
		РасчетныйВзносМакс	= РасчетныйВзнос + Погрешность;
		РасчетныйВзносМин	= РасчетныйВзнос - Погрешность;
		
		Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено 
			И (ВыборкаТ.Взнос < РасчетныйВзносМин ИЛИ ВыборкаТ.Взнос > РасчетныйВзносМакс);
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.Взнос, ВыборкаТ.База, СтавкаПереопр, РасчетныйВзнос, Погрешность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_3_1

Процедура ПроверитьКС2020_1_85(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.85'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.85)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М101001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_86(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.86'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.86)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М102001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_86_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Мес			КАК Мес
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (""001"", ""002"", &СтрокаПоказателя)
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК КлючТарифа,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТКод2.Отчет
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТПоказателя1.Отчет
	|			И 	ТПоказателя1.Строка_	= &СтрокаПоказателя
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючТарифа,
	|	Мес УБЫВ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	КлючТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 >= Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, Разность, ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_87(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.87'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.87)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102001_");
	Настройки.Вставить("ПоказательР12", "П11131М101001_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_88(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.88'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.88)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.020 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102002_");
	Настройки.Вставить("ПоказательР12", "П11131М101002_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_89(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.89'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.89)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.020 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102003_");
	Настройки.Вставить("ПоказательР12", "П11131М101003_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_90(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.90'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.90)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.020 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102004_");
	Настройки.Вставить("ПоказательР12", "П11131М101004_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_90_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК СтрокаТЧ,
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Графа КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"", ""002"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И 	ТКод2.Строка_	= ""002""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ВыборкаТ.ПоказательР12 > 0 И НЕ ВыборкаТ.ПоказательР11 > 0;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_91(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.91'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.91)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.1 прил.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_92(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.92'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 422 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.92)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.1 прил.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_93(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.93'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.93)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.1 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104001_");
	Настройки.Вставить("ПоказательР12", "П11131М102001_");
	Настройки.Вставить("ПоказательР13", "П11131М103001_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_94(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.94'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.94)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.040 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.2 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104002_");
	Настройки.Вставить("ПоказательР12", "П11131М102002_");
	Настройки.Вставить("ПоказательР13", "П11131М103002_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_95(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.95'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.95)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.040 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.3 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104003_");
	Настройки.Вставить("ПоказательР12", "П11131М102003_");
	Настройки.Вставить("ПоказательР13", "П11131М103003_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_96(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.96'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.96)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.040 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.4 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104004_");
	Настройки.Вставить("ПоказательР12", "П11131М102004_");
	Настройки.Вставить("ПоказательР13", "П11131М103004_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_96_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111", ",2", ",3", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"", ""002"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТКод1.Страница	= ТПоказателя3.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя3.СтрокаТЧ
	|			И 	ТПоказателя3.Строка_	= &СтрокаР13
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		КонецЦикла;
		
		Разность 				= ВыборкаТ.ПоказательР12 - ВыборкаТ.ПоказательР13;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.ПоказательР13, Разность, ВыборкаТ.КодИсчисления, 
			ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= "Код исчисления " + ВыборкаТ.КодИсчисления + ?(Раздел = "П11132", ", код класса " 
			+ ВыборкаТ.КодКласса, "");
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_97(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.97'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.97)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.1 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_97_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа,
	|	ВТ_100.Мес			КАК Мес,
	|	ВТ_100.МесСтр		КАК МесСтр
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (""001"", ""002"", &СтрокаПоказателя)
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_					КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК КлючСортировки,
	|	ТПоказателя1.Графа 		КАК Графа,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТКод2.Отчет
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТПоказателя1.Отчет
	|			И 	ТПоказателя1.Строка_	= &СтрокаПоказателя
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Графа,
	|	Мес УБЫВ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ,
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаК.ПоказательР12) Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа + "_");
				ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КодИсчисления, 
			ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_3_2

Процедура ПроверитьКС2020_1_98(СтруктураРезультата)
	
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.98'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.98)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.2 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М101001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_99(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.99'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.99)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102001_");
	Настройки.Вставить("ПоказательР12", "П11132М101001_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_100(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.100'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.100)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.020 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102002_");
	Настройки.Вставить("ПоказательР12", "П11132М101002_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_101(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.101'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.101)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.020 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102003_");
	Настройки.Вставить("ПоказательР12", "П11132М101003_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_102(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.102'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.102)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.020 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102004_");
	Настройки.Вставить("ПоказательР12", "П11132М101004_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_103(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.103'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.103)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 подр.1.3.2 прил.1 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.2 прил.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_104(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.104'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.104)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.2 прил.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_105(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.105'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.105)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.1 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104001_");
	Настройки.Вставить("ПоказательР12", "П11132М102001_");
	Настройки.Вставить("ПоказательР13", "П11132М103001_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_106(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.106'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.106)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.040 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.2 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104002_");
	Настройки.Вставить("ПоказательР12", "П11132М102002_");
	Настройки.Вставить("ПоказательР13", "П11132М103002_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_107(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.107'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.107)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.040 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.3 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104003_");
	Настройки.Вставить("ПоказательР12", "П11132М102003_");
	Настройки.Вставить("ПоказательР13", "П11132М103003_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_108(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.108'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.108)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.040 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.4 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104004_");
	Настройки.Вставить("ПоказательР12", "П11132М102004_");
	Настройки.Вставить("ПоказательР13", "П11132М103004_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_109(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.109'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.109)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.2 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1

Процедура ПроверитьКС2020_1_110(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.110'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.110)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 прил.1.1 Р.1 = гр.1 стр.020 прил.1.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.1.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_111(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.111'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.111)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.1.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru='прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.1.1 Р.1 '") +
		НСтр("ru='по каждому значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_112(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.112'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.112)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru='прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.1.1 Р.1 '") +
		НСтр("ru='по каждому значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1040");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_113(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.113'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.113)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.1 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104001_");
	Настройки.Вставить("ПоказательР12", "П00111М102001_");
	Настройки.Вставить("ПоказательР13", "П00111М103001_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_114(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.114'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.114)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.040 прил.1.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.2 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104002_");
	Настройки.Вставить("ПоказательР12", "П00111М102002_");
	Настройки.Вставить("ПоказательР13", "П00111М103002_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_115(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.115'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.115)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.040 прил.1.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.3 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104003_");
	Настройки.Вставить("ПоказательР12", "П00111М102003_");
	Настройки.Вставить("ПоказательР13", "П00111М103003_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_116(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.116'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.116)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.040 прил.1.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.4 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104004_");
	Настройки.Вставить("ПоказательР12", "П00111М102004_");
	Настройки.Вставить("ПоказательР13", "П00111М103004_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_117(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.117'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 1.117)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.050 прил.1.1 Р.1 = гр.1 стр.050 прил.1.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.1.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_2

Процедура ПроверитьКС2020_1_118(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.118'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.118)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 прил.2 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М101001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_119(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.119'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.119)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.015 прил.2 Р.1 >= гр.1 стр.015 '") +
		НСтр("ru='прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М101501_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_120(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.120'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.120)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 > 0 если гр.1 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102001_");
	Настройки.Вставить("ПоказательР12", "П00012М101501_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_121(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.121'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.121)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.020 прил.2 Р.1 (1 месяц ОП) > 0 если гр.2 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102002_");
	Настройки.Вставить("ПоказательР12", "П00012М101502_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_122(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.122'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.122)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.020 прил.2 Р.1 (2 месяц ОП) > 0 если гр.3 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102003_");
	Настройки.Вставить("ПоказательР12", "П00012М101503_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_123(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.123'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.123)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.020 прил.2 Р.1 (3 месяц ОП) > 0 если гр.4 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102004_");
	Настройки.Вставить("ПоказательР12", "П00012М101504_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_124(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.124'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.124)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 = гр.1 стр.020 прил.2 Р.1 предыдущего '") +
		НСтр("ru='отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.2 Р.1 по каждому значению поля 001 '") +
		НСтр("ru='прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_125(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.125'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.125)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.2 Р.1 = гр.1 стр.030 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.2 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_126(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.126'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.126)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, превышающая предельную величину в гр.1 стр.040 прил.2 Р.1 = гр.1 стр.040 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.2 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, превышающая предельную величину'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1040");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_127(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.127'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.127)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.050 прил.2 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_128(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.128'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.128)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.1 стр.030 прил.2 Р.1 - гр.1 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105001_");
	Настройки.Вставить("ПоказательР12", "П00012М102001_");
	Настройки.Вставить("ПоказательР13", "П00012М103001_");
	Настройки.Вставить("ПоказательР14", "П00012М104001_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_129(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.129)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) = гр.2 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.2 стр.030 прил.2 Р.1 - гр.2 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105002_");
	Настройки.Вставить("ПоказательР12", "П00012М102002_");
	Настройки.Вставить("ПоказательР13", "П00012М103002_");
	Настройки.Вставить("ПоказательР14", "П00012М104002_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_130(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.130'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.130)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) = гр.3 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.3 стр.030 прил.2 Р.1 - гр.3 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105003_");
	Настройки.Вставить("ПоказательР12", "П00012М102003_");
	Настройки.Вставить("ПоказательР13", "П00012М103003_");
	Настройки.Вставить("ПоказательР14", "П00012М104003_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_131(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.131'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.131)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) = гр.4 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.4 стр.030 прил.2 Р.1 - гр.4 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105004_");
	Настройки.Вставить("ПоказательР12", "П00012М102004_");
	Настройки.Вставить("ПоказательР13", "П00012М103004_");
	Настройки.Вставить("ПоказательР14", "П00012М104004_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_131_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР14"		, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТКод1.Страница	= ТПоказателя3.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя3.СтрокаТЧ
	|			И 	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТКод1.Страница	= ТПоказателя4.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя4.СтрокаТЧ
	|			И 	ТПоказателя4.Строка_	= &СтрокаР14
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	СУММА(ПоказательР14),
	|	МИНИМУМ(КодИсчисления)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР14);
		КонецЦикла;
		
		Разность 				= ВыборкаТ.ПоказательР12 - ВыборкаТ.ПоказательР13 - ВыборкаТ.ПоказательР14;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.ПоказательР13, ВыборкаТ.ПоказательР14, Разность, 
			ВыборкаТ.КодИсчисления);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений, 
			ВыборкаТ.КодИсчисления);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_132(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.132'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.132)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 >= гр.1 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105001_");
	Настройки.Вставить("ПоказательР12", "П00012М105501_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_133(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.133'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.133)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) >= гр.2 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105002_");
	Настройки.Вставить("ПоказательР12", "П00012М105502_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_134(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.134'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.134)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) >= гр.3 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105003_");
	Настройки.Вставить("ПоказательР12", "П00012М105503_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_135(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.135'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.135)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) >= гр.4 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105004_");
	Настройки.Вставить("ПоказательР12", "П00012М105504_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_135_код(Настройки)
	
	// копия ПроверитьКС2020_1_142_код
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"")
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР11 И ВТ_100.Графа	= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12 И ВТ_100.Графа	= &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|			И 	ТПоказателя1.Графа		= &ГрафаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|			И 	ТПоказателя2.Графа		= &ГрафаР12
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 >= ВыборкаТ.ПоказательР12;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.КодИсчисления);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_136(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.136'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.136)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат иностранным гражданам с начала периода в гр.1 стр.055 прил.2 Р.1 = гр.1 стр.055 '") +
		НСтр("ru='прил.2 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 по '") +
		НСтр("ru='каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат иностранным гражданам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1055");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_137(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.137'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.137)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 прил.2 Р.1 = гр.1 стр.060 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 по '") +
		НСтр("ru='каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1060");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_138(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.138'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.138)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru='х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) '") +
		НСтр("ru='стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 равно 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НетИностранцев", Истина);
	ПроверитьКС2020_1_140_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_139(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.139'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.139)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 >= (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru='х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов для иностранных граждан ± (гр.2'") +
		НСтр("ru=' + гр.3 + гр.4) стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 не р'") +
		НСтр("ru='авно 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НетИностранцев", Ложь);
	ПроверитьКС2020_1_140_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_140(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.140'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.140)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru='х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) '") +
		НСтр("ru='стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда код тарифа плательщика в поле 001 прил.2 Р.1 отличен от 01'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_140_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= ""П00012""
	|	И (ВТ_100.Строка_	В (""015"", ""050"", ""055"", ""060"")
	|	И ВТ_100.Графа		В (""02"", ""03"", ""04"")
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_	КАК КодТарифа,
	|	ТПоказателя.Отчет	КАК Отчет,
	|	ТПоказателя.Раздел + ""М1""		КАК Раздел,
	|	ТПоказателя.Страница			КАК Страница,
	|	ТПоказателя.НомерСтроки			КАК НомерСтроки,
	|	ТПоказателя.Строка_	КАК НомСтроки,
	|	ТПоказателя.Графа	КАК Графа,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""060""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Взнос,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""055""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаИностранцы,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""015""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоФизлиц
	|ИЗ
	|	ВТ_101 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя.Страница = ТТарифа.Страница
	|			И ТПоказателя.НомерСтроки = ТТарифа.НомерСтроки
	|ГДЕ
	|	ТПоказателя.Строка_		В (""015"", ""050"", ""055"", ""060"")
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	НомСтроки Убыв,
	|	Страница,
	|	НомерСтроки,
	|	Графа
	|ИТОГИ
	|	МИНИМУМ(КодТарифа),
	|	СУММА(Взнос),
	|	СУММА(База),
	|	СУММА(БазаИностранцы),
	|	СУММА(КолвоФизлиц)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		
		ЗарегистрироватьФормулу2020(Настройки);
		НетИностранцев = НЕ ЗначениеЗаполнено(ВыборкаТ.БазаИностранцы);
		ТаблицаСтавок = ?(Настройки.НетИностранцев, ДанныеКС.Ставки201, ДанныеКС.Ставки202);
		Ставка = ТаблицаСтавок.Найти(ВыборкаТ.КодТарифа, "Код");
		СтавкаПереопр = ?(Ставка = Неопределено, 0, Ставка.Ставка);
		
		Если ЗначениеЗаполнено(ВыборкаТ.КодТарифа) Тогда
			ВнестиПоказательБезРасшифровки2020("Ставка СВ на ОМС для тарифа " + ВыборкаТ.КодТарифа,
				СтавкаПереопр);
		КонецЕсли;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИмяПоказателя = ?(Выборка.НомСтроки = "060", "Взнос", ?(Выборка.НомСтроки = "050", "База", 
				?(Выборка.НомСтроки = "055", "БазаИностранцы", "КолвоФизлиц")));
			ИменаПоказателей.Вставить(ИмяПоказателя, Выборка.Раздел + Выборка.НомСтроки + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели[ИмяПоказателя]);
		КонецЦикла;
		
		РасчетныйВзнос		= Окр(ВыборкаТ.База * СтавкаПереопр / 100, 2);
		Погрешность			= Окр(Окр(ВыборкаТ.КолвоФизлиц / 3) * 0.005, 2);
		РасчетныйВзносМакс	= РасчетныйВзнос + Погрешность;
		РасчетныйВзносМин	= РасчетныйВзнос - Погрешность;
		
		Если НетИностранцев Тогда
			Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено И Настройки.НетИностранцев
				И (ВыборкаТ.Взнос < РасчетныйВзносМин ИЛИ ВыборкаТ.Взнос > РасчетныйВзносМакс);
		Иначе
			Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено И НЕ Настройки.НетИностранцев
				И ВыборкаТ.Взнос < РасчетныйВзносМин;
		КонецЕсли;
		
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.Взнос, ВыборкаТ.База, СтавкаПереопр, РасчетныйВзнос, Погрешность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_141(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.141'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.141)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Произведенные расходы с начала периода в гр.1 стр.070 прил.2 Р.1 = гр.1 стр.070 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.070 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма произведенных расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001200070");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_142(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.142'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.142)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Возмещенные расходы с начала периода в гр.1 стр.080 прил.2 Р.1 = гр.1 стр.080 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.080 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма возмещенных расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001200080");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_142_код(Настройки)
	
	Перем Показатели;
	ОтчетныйМесяц = ДанныеКС.Мес;
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет КАК	Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа,
	|	ВТ_100.Мес			КАК Мес,
	|	ВТ_100.МесСтр		КАК МесСтр
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаПоказателя)
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК КлючСортировки,
	|	ТПоказателя1.Графа 		КАК Графа,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаПоказателя
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Графа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаТ.Следующий() Тогда
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.ПоказательР12) Тогда
				МассивСумм.Добавить(Выборка.ПоказательР11);
			КонецЕсли;
			
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_5

Процедура ПроверитьКС2020_1_143(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.143'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.143)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.2 стр.010 прил.5 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_144(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.144'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.144)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.3 стр.010 прил.5 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150001003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_144_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) И Показатели.ПоказательР11.Значение < 7;
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_145(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.145'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.145)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.2 стр.020 прил.5 Р.1 >= гр.2 стр.030 прил.5 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150002002");
	МассивИмен.Добавить("П000150003002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_146(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.146'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.146)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.3 стр.020 прил.5 Р.1 >= гр.3 стр.030 прил.5 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150002003");
	МассивИмен.Добавить("П000150003003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_146_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Настройки.ЭтоОшибка		= Показатели.ПоказательР11.Значение < Показатели.ПоказательР12.Значение;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_147(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.147'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.147)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.040 прил.5 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.5 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004002");
	МассивИмен.Добавить("П000150003002");
	МассивИмен.Добавить("П000150002002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_148(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.148'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.148)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.3 стр.040 прил.5 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.5 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004003");
	МассивИмен.Добавить("П000150003003");
	МассивИмен.Добавить("П000150002003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_148_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РезультатДеления = ?(Показатели.ПоказательР13.Значение = 0, 0, 
		Окр(Показатели.ПоказательР12.Значение / Показатели.ПоказательР13.Значение *100, 2));
	РезультатДеления = Макс(РезультатДеления, 0);
	Настройки.ЭтоОшибка		= НЕ Показатели.ПоказательР11.Значение = РезультатДеления;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		РезультатДеления);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_149(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.149'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.149)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.2 стр.040 прил.5 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_150(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.150'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.150)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.3 стр.040 прил.5 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_150_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) И Показатели.ПоказательР11.Значение < 90;
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Функция ПолучитьПоказатели(Настройки)
	
	Перем Показатели;
	
	КолвоПоказателей = Настройки.МассивИмен.Количество();
	ИменаПоказателей = Новый Структура;
	
	Для Счетчик = 1 По 5 Цикл
		
		ТекущийЭлемент = ?(Счетчик > КолвоПоказателей, Настройки.МассивИмен[КолвоПоказателей - 1], 
			Настройки.МассивИмен[Счетчик - 1]);
		ИменаПоказателей.Вставить("ПоказательР1" + Счетчик, ТекущийЭлемент);
	
	КонецЦикла;
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.МассивИмен[0], 1, 6));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.МассивИмен[0], 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Для Счетчик = 1 По 5 Цикл
		
		ТекущийПоказатель = Показатели["ПоказательР1" + Счетчик];
		Запрос.УстановитьПараметр("СтрокаР1" + Счетчик, Сред(ТекущийПоказатель.ИмяПоказателя, 9, 3));
	
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14, &СтрокаР15)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	Выразить(ТПоказателя5.Значение_ КАК Число)	КАК ПоказательР15,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТПоказателя4.Строка_	= &СтрокаР14
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя5
	|			ПО	ТПоказателя5.Строка_	= &СтрокаР15
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	Для Счетчик = 1 По КолвоПоказателей Цикл
		Показатели["ПоказательР1" + Счетчик].Значение = 0;
	КонецЦикла;
	
	Если Выборка.Следующий() Тогда
		Для Счетчик = 1 По КолвоПоказателей Цикл
			Показатели["ПоказательР1" + Счетчик].Значение = Выборка["ПоказательР1" + Счетчик];
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели["ПоказательР1" + Счетчик]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Показатели;
		
КонецФункции

#КонецОбласти

#Область Проверки_Приложения_6

Процедура ПроверитьКС2020_1_151(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.151'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.151)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.1 стр.010 прил.6 Р.1 >= гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160001001");
	МассивИмен.Добавить("П000160002001");
	МассивИмен.Добавить("П000160003001");
	МассивИмен.Добавить("П000160004001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_152_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_152(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.152'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.152)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.010 прил.6 Р.1 >= гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160001002");
	МассивИмен.Добавить("П000160002002");
	МассивИмен.Добавить("П000160003002");
	МассивИмен.Добавить("П000160004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_152_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_152_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РасчетнаяСумма = Показатели.ПоказательР12.Значение + Показатели.ПоказательР13.Значение + 
		Показатели.ПоказательР14.Значение;
	Настройки.ЭтоОшибка		= Показатели.ПоказательР11.Значение < РасчетнаяСумма;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		Показатели.ПоказательР14.Значение, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_153(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.153'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.153)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.1 стр.050 прил.6 Р.1 = (гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1) / '") +
		НСтр("ru='гр.1 стр.010 прил.6 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005001");
	МассивИмен.Добавить("П000160002001");
	МассивИмен.Добавить("П000160003001");
	МассивИмен.Добавить("П000160004001");
	МассивИмен.Добавить("П000160001001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_154_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_154(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.154'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.154)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.050 прил.6 Р.1 = (гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1) / '") +
		НСтр("ru='гр.2 стр.010 прил.6 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005002");
	МассивИмен.Добавить("П000160002002");
	МассивИмен.Добавить("П000160003002");
	МассивИмен.Добавить("П000160004002");
	МассивИмен.Добавить("П000160001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_154_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_154_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РасчетнаяСумма = ?(Показатели.ПоказательР15.Значение = 0, 0, Окр((Показатели.ПоказательР12.Значение + 
		Показатели.ПоказательР13.Значение + Показатели.ПоказательР14.Значение) / Показатели.ПоказательР15.Значение * 100,2));
	Настройки.ЭтоОшибка		= НЕ Показатели.ПоказательР11.Значение = РасчетнаяСумма;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		Показатели.ПоказательР14.Значение, Показатели.ПоказательР15.Значение, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_155(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.155'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.155)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.1 стр.050 прил.6 Р.1 >= 70'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 70'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_156_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_156(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.156'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.156)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.050 прил.6 Р.1 >= 70, если отчет за расчетный период (год)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 70'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_156_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_156_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Графа = Прав(Показатели.ПоказательР11.ИмяПоказателя, 1);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) 
		И (Графа = "1" ИЛИ Графа = "2" И ДанныеКС.Мес = 12) И Показатели.ПоказательР11.Значение < 70;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_7

Процедура ПроверитьКС2020_1_157(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.157'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.157)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.2 стр.010 прил.7 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_158(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.158'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.158)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.3 стр.010 прил.7 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170001003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_159(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.159'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.159)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.2 стр.020 прил.7 Р.1 >= гр.2 стр.030 прил.7 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170002002");
	МассивИмен.Добавить("П000170003002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_160(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.160'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.160)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.3 стр.020 прил.7 Р.1 >= гр.3 стр.030 прил.7 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170002003");
	МассивИмен.Добавить("П000170003003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_161(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.161'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.161)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.040 прил.7 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.7 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004002");
	МассивИмен.Добавить("П000170003002");
	МассивИмен.Добавить("П000170002002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_162(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.162'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.162)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.3 стр.040 прил.7 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.7 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004003");
	МассивИмен.Добавить("П000170003003");
	МассивИмен.Добавить("П000170002003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_163(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.163'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.163)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.2 стр.040 прил.7 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_164(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.164'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.164)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.3 стр.040 прил.7 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_8

Процедура ПроверитьКС2020_1_165(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.165'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.165)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = ∑ всех гр.1 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001001");
	Настройки.Вставить("ПоказательР12", "П00018М108001_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_166(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.166'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.166)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.010 прил.8 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001002");
	Настройки.Вставить("ПоказательР12", "П00018М108002_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_167(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.167'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.167)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.010 прил.8 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001003");
	Настройки.Вставить("ПоказательР12", "П00018М108003_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_168(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.168'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.168)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.010 прил.8 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001004");
	Настройки.Вставить("ПоказательР12", "П00018М108004_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_168_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР11"		, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Сред(Настройки.ПоказательР12, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_100.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР11
	|	И ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_100.Значение_ КАК Число)	КАК ПоказательР12,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР12
	|	И ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР11 = РезультатЗапроса[0].Выбрать();
	ВыборкаР12 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаР11.Следующий() Тогда
		СумР11 = ВыборкаР11.ПоказательР11;
		ВнестиПоказательВРасшифровку2020(ВыборкаР11, Показатели.ПоказательР11);
	КонецЕсли;
	
	Если ВыборкаР12.Следующий() Тогда
		СумР12 = ВыборкаР12.ПоказательР12;
		Выборка = ВыборкаР12.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_169(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.169'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.169)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = гр.1 стр.010 прил.8 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001800010");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_9

Процедура ПроверитьКС2020_1_170(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.170'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.170)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = ∑ всех гр.1 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001001");
	Настройки.Вставить("ПоказательР12", "П00019М108001_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_171(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.171'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.171)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.010 прил.9 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001002");
	Настройки.Вставить("ПоказательР12", "П00019М108002_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_172(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.172'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.172)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.010 прил.9 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001003");
	Настройки.Вставить("ПоказательР12", "П00019М108003_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_173(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.173'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.173)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.010 прил.9 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001004");
	Настройки.Вставить("ПоказательР12", "П00019М108004_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_174(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.174'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.174)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = гр.1 стр.010 прил.9 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001900010");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_2

Процедура ПроверитьКС2020_1_175(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.175'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 2 (КС 1.175)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов за расчетный период в стр.030 Р.2 = ∑ всех гр.1 стр.090 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000020003001");
	Настройки.Вставить("ПоказательР12", "П00021М109001_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_176(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.176'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 2 (КС 1.176)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов за расчетный период в стр.050 Р.2 = ∑ всех гр.2 стр.090 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000020005001");
	Настройки.Вставить("ПоказательР12", "П00021М109002_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_177(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.177'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1 к Разделу 2 (КС 1.177)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='1 января календарного года Титульного листа <= стр.070 прил.1 Р.2 <= 31 декабря календарного '") +
		НСтр("ru='года Титульного листа'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='01.01.%1 <= %2 <= 31.12.%1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная дата'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00021М107001_");
	ПроверитьКС2020_1_178_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_178(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.178'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1 к Разделу 2 (КС 1.178)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='1 января календарного года Титульного листа <= стр.080 прил.1 Р.2 <= 31 декабря календарного '") +
		НСтр("ru='года Титульного листа'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='01.01.%1 <= %2 <= 31.12.%1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная дата'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00021М108001_");
	ПроверитьКС2020_1_178_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_178_код(Настройки)
	
	Перем Показатели;
	
	ГодТитульныйСтр	= ПараметрыКС.СтруктураДанныхТитульный.ОтчетГод;
	ГодТитульный	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ГодТитульныйСтр);
	
	Если ГодТитульный = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР2"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР2"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР2
	|	И ВТ_100.Строка_	= &СтрокаР2
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		
		Настройки.ЭтоОшибка		= ДанныеКС.Р00021Заполнен И НЕ Год(Выборка.Показатель) = ГодТитульный;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ГодТитульныйСтр, Формат(Выборка.Показатель, "ДФ=dd.MM.yyyy; ДП=(...)"));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_179(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.179'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1 к Разделу 2 (КС 1.179)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Дата начала членства в КФХ в стр.070 прил.1 Р.2 <= стр.080 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная дата'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель1", "П00021М107001_");
	Настройки.Вставить("Показатель2", "П00021М108001_");
	ПроверитьКС2020_1_179_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_179_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель1", Настройки.Показатель1);
	ИменаПоказателей.Вставить("Показатель2", Настройки.Показатель2);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР21"		, Сред(Настройки.Показатель1, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР21"		, Сред(Настройки.Показатель1, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР22"		, Сред(Настройки.Показатель2, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки,
	|	ВТ_100.Строка_		КАК СтрокаПоказателя
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &РазделР21
	|	И ВТ_100.Строка_ В (&СтрокаР21, &СтрокаР22)
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТПоказателя1.Отчет			КАК Отчет,
	|	ТПоказателя1.Страница		КАК Страница,
	|	ТПоказателя1.НомерСтроки	КАК НомерСтроки,
	|	ТПоказателя1.Показатель		КАК Показатель1,
	|	ТПоказателя2.Показатель		КАК Показатель2
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|		ПО ТПоказателя1.НомерСтроки = ТПоказателя2.НомерСтроки
	|ГДЕ
	|	ТПоказателя1.СтрокаПоказателя = ""070""
	|	И ТПоказателя2.СтрокаПоказателя = ""080""
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель1);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель2);
		
		Настройки.ЭтоОшибка		= ДанныеКС.Р00021Заполнен И Выборка.Показатель1 > Выборка.Показатель2;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			Формат(Выборка.Показатель1, "ДФ=dd.MM.yyyy; ДП=(...)"), Формат(Выборка.Показатель2, "ДФ=dd.MM.yyyy; ДП=(...)"));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Прочие

Процедура ПроверитьКС2020_1_180(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.180'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.180)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.020 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010002001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_181(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.181'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.181)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.040 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010004001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_182(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.182'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.182)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.060 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00001М106001_");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_183(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.183'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.183)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.080 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00001М208001_");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_184(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.184'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.184)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.100 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010010001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_185(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.185'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 2 (КС 1.185)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.020 Р.2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000020002001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_186(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.186'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 2 (КС 1.186)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.040 Р.2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000020004001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_186_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР1"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР1
	|	И ВТ_100.Строка_	= &СтрокаР1
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	ПрефиксПоказателя = Сред(Настройки.Показатель, 1, 13);
	СпискиКБК = ПараметрыКС.СписочныеЗначения;
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		
		Если СпискиКБК.Свойство(ПрефиксПоказателя) Тогда
			Настройки.ЭтоОшибка		= СпискиКБК[ПрефиксПоказателя].Найти(Выборка.Показатель) = Неопределено;
		Иначе
			Настройки.ЭтоОшибка		= Ложь;
		КонецЕсли; 
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			?(ЗначениеЗаполнено(Выборка.Показатель), Выборка.Показатель, "(...)"));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_187(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.187'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 1.187)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='ОКТМО в стр.010 Р.1 должен соответствовать Общероссийскому классификатору территорий '") +
		НСтр("ru='муниципальных образований'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочный ОКТМО'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_188(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.188'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 2 (КС 1.188)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='ОКТМО в стр.010 Р.2 должен соответствовать Общероссийскому классификатору территорий '") +
		НСтр("ru='муниципальных образований'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочный ОКТМО'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_189(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.189'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 1.189)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ Стр.200 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.200 подр.3.2.2 Р.3 предыдущего '") +
		НСтр("ru='отчетного периода не равна 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_190(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.190'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 1.190)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ Стр.210 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.210 подр.3.2.2 Р.3 предыдущего '") +
		НСтр("ru='отчетного периода не равна 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_191(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.191'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 1.191)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (2 месяц ОП) = стр.190 подр.3.2.2 '") +
		НСтр("ru='Р.3 (3 месяц ОП)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение тарифа'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_192(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.192'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.2 к Разделу 3 (КС 1.192)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (3 месяц ОП) предыдущего отчетного '") +
		НСтр("ru='периода'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение тарифа'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_193(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.193'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1 к Разделу 1 (КС 1.193)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если код тарифа в стр.001 прил.1 Р.1 = 20, то наличие прил.1 Р.1 с кодом тарифа в стр.001 '") +
		НСтр("ru='= 01 обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код тарифа 01 заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода тарифа'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000110000101");
	ПроверитьКС2020_1_193_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_193_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР1"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Показатель,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВТ_100.Значение_ = ""01""
	|			ТОГДА ВТ_100.Значение_
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Тариф01,
	|	ВЫБОР
	|		КОГДА ВТ_100.Значение_ = ""20""
	|			ТОГДА ВТ_100.Значение_
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Тариф20
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &РазделР1
	|	И ВТ_100.Строка_ = &СтрокаР1
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	МАКСИМУМ(Тариф01),
	|	МАКСИМУМ(Тариф20)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаТ.Следующий() Тогда
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ЗначениеЗаполнено(ВыборкаТ.Тариф20) И НЕ ЗначениеЗаполнено(ВыборкаТ.Тариф01);
		Настройки.Расшифровка	= Настройки.ШаблонРасшифровки;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_194(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.194'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории МС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 1.194)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, '") +
		НСтр("ru='то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = НР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код категории НР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "НР");
	Настройки.Вставить("КатегорияМС", "МС");
	
	ПроверитьКС2020_1_196_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_195(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.195'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВЖМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 1.195)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, '") +
		НСтр("ru='то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВЖНР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код категории ВЖНР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВЖНР");
	Настройки.Вставить("КатегорияМС", "ВЖМС");
	
	ПроверитьКС2020_1_196_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_196(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.196'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВПМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 1.196)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, '") +
		НСтр("ru='то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВПНР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код категории ВПНР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВПНР");
	Настройки.Вставить("КатегорияМС", "ВПМС");
	
	ПроверитьКС2020_1_196_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_196_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"		, "П000310004001");
	ИменаПоказателей.Вставить("Показатель"	, "П00321М113001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("КатегорияНР"	, Настройки.КатегорияНР);
	Запрос.УстановитьПараметр("КатегорияМС"	, Настройки.КатегорияМС);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК КатегорияМС
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) = &КатегорияМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Показатель,
	|	ВТ_321.МесСтр КАК Мес,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияНР,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияМС
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияМС
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|ИТОГИ
	|	МАКСИМУМ(КатегорияНР),
	|	МАКСИМУМ(КатегорияМС),
	|	МАКСИМУМ(Фамилия),
	|	МАКСИМУМ(Снилс),
	|	МИНИМУМ(Страница)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка	= ЗначениеЗаполнено(ВыборкаФ.КатегорияМС) И НЕ ЗначениеЗаполнено(ВыборкаФ.КатегорияНР);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(ВыборкаФ, Показатели.Фамилия);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.Показатель.Дополнение	= "" + Выборка.Мес + " месяц";
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.Расшифровка = Настройки.ШаблонРасшифровки;
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_197(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.197'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории МС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 1.197)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, '") +
		НСтр("ru='то по стр.130 = НР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "НР");
	Настройки.Вставить("КатегорияМС", "МС");
	
	ПроверитьКС2020_1_199_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_198(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.198'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВЖМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 1.198)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, '") +
		НСтр("ru='то по стр.130 = ВЖНР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВЖНР");
	Настройки.Вставить("КатегорияМС", "ВЖМС");
	
	ПроверитьКС2020_1_199_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_199(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.199'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВПМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 1.199)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, '") +
		НСтр("ru='то по стр.130 = ВПНР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВПНР");
	Настройки.Вставить("КатегорияМС", "ВПМС");
	
	ПроверитьКС2020_1_199_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_199_код(Настройки)
	
	Перем Показатели;
	
	Если ДанныеКС.МРОТ = Неопределено ИЛИ ДанныеКС.ПредельнаяВеличинаБазы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"		, "П000310004001");
	ИменаПоказателей.Вставить("Показатель"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("КатегорияНР"	, Настройки.КатегорияНР);
	Запрос.УстановитьПараметр("КатегорияМС"	, Настройки.КатегорияМС);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК КатегорияМС
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) = &КатегорияМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	СУММА(ВТ_321.С150) КАК БазаИтогом
	|ПОМЕСТИТЬ ВТ_312
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ОтчетныйМесяц)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.МесСтр КАК КлючСортировки,
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Категория,
	|	ВТ_321.С150 КАК Показатель,
	|	ВТ_321.МесСтр КАК Мес,
	|	ВТ_312.БазаИтогом КАК БазаИтогом,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияНР,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияМС
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияМС,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С150
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаНР
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_312 КАК ВТ_312
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_312.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки
	|ИТОГИ
	|	МАКСИМУМ(Снилс),
	|	МАКСИМУМ(Фамилия),
	|	МИНИМУМ(Страница),
	|	МАКСИМУМ(Мес),
	|	МАКСИМУМ(БазаИтогом),
	|	МАКСИМУМ(КатегорияНР),
	|	МАКСИМУМ(КатегорияМС),
	|	МАКСИМУМ(БазаНР)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_312";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка	= ЗначениеЗаполнено(ВыборкаФ.КатегорияМС) И ЗначениеЗаполнено(ВыборкаФ.КатегорияНР) 
			И ВыборкаФ.БазаИтогом <= ДанныеКС.ПредельнаяВеличинаБазы - ДанныеКС.МРОТ И НЕ ВыборкаФ.БазаНР = ДанныеКС.МРОТ;
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс + ", " + ВыборкаФ.Мес + " мес");
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(ВыборкаФ, Показатели.Фамилия);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.Показатель.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаФ.БазаНР, ДанныеКС.МРОТ);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_300_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.300.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Приложения 5 (КС 1.300.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 06, то Приложение 5 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru='Приложение 5 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необоснованное применение кода тарифа плательщика 06'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "06");
	Настройки.Вставить("РазделЗаполнен"		, ДанныеКС.Р00015Заполнен);
	ПроверитьКС2020_1_302_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_301_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.301.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Приложения 6 (КС 1.301.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 10, то Приложение 6 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru='Приложение 6 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необоснованное применение кода тарифа плательщика 10'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "10");
	Настройки.Вставить("РазделЗаполнен	"	, ДанныеКС.Р00016Заполнен);
	ПроверитьКС2020_1_302_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_302_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.302.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Приложения 7 (КС 1.302.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 18, то Приложение 7 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru='Приложение 7 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необоснованное применение кода тарифа плательщика 18'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "18");
	Настройки.Вставить("РазделЗаполнен	"	, ДанныеКС.Р00017Заполнен);
	ПроверитьКС2020_1_302_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_302_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("КодТарифа"		, "П000110000101");
	ЗаполнитьСтруктуруПоказателей2020(Показатели	, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница";
	
	РезультатЗапроса = Запрос.Выполнить();
	ЗарегистрироватьФормулу2020(Настройки);
	КодНайден = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.КодТарифа);
		Если Выборка.КодТарифа = Настройки.КодТарифа Тогда
			КодНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка	= КодНайден И НЕ Настройки.РазделЗаполнен;
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_2_1(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка Раздела 1 (КС 2.1)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Расчет обязателен к представлению в случае представления отчета 6-НДФЛ'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_2(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено. Неуниверсальное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 1.1 к Разделу 1 (КС 2.2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.020 - стр.025 Р.1 6-НДФЛ >= гр.1 стр.050 подр.1.1 прил.1 Р.1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 2.3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 1 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 2.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 2 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_5(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 2.5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 3 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_6(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 421 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 2.6)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Средняя сумма выплат застрахованному лицу по трудовому договору (сумма (ст. 140 подр. 3.2.1 Р.3 '") +
		НСтр("ru='- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, '") +
		НСтр("ru='должна быть больше или равна МРОТ, по каждому застрахованному'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='(%1 - %2) / %3 Итог [%4] >= %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Возможно занижение базы для исчисления страховых взносов'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.МРОТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Разность"	, "П00321М114001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК Ключ,
	|	ВТ_310.Фамилия + "", "" + ВТ_310.Снилс + "", "" +
	|	ВТ_321.МесСтр + "" месяц, "" + ВТ_321.С130 КАК ПредставлениеПоказателя,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С140 - ВТ_321.С160 КАК Разность,
	|	ВТ_321.С140 КАК С140,
	|	ВТ_321.С160 КАК С160
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	НЕ ВТ_321.С140 - ВТ_321.С160 = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Мес
	|ИТОГИ
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мес),
	|	СУММА(Разность),
	|	СУММА(С140),
	|	СУММА(С160)
	|ПО
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма = Окр((Выборка.Разность) / Выборка.Мес, 2);
		Настройки.ЭтоОшибка	= РасчетнаяСумма < ДанныеКС.МРОТ;
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='Сумма выплат'")								, Выборка.Разность);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='Количество месяцев, в которых были выплаты'")	, Выборка.Мес);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='Средняя сумма выплат'")						, РасчетнаяСумма);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='МРОТ'")										, ДанныеКС.МРОТ);
		
		ВыборкаД = Выборка.Выбрать();
		Пока ВыборкаД.Следующий() Цикл
			Показатели.Разность.Представление = ВыборкаД.ПредставлениеПоказателя;
			ВнестиПоказательВРасшифровку2020(ВыборкаД, Показатели.Разность);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, 
			Выборка.С140, Выборка.С160, Выборка.Мес, РасчетнаяСумма, ДанныеКС.МРОТ);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_7(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 421 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 3.2.1 к Разделу 3 (КС 2.7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Средняя сумма выплат застрахованным лицам по трудовым договорам (сумма (ст. 140 подр. 3.2.1 Р.3 '") +
		НСтр("ru='- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, '") +
		НСтр("ru='должна быть больше или равна среднеотраслевой ЗП в регионе, в целом по плательщику страховых взносов'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='(%1 - %2) / %3 Итог [%4] >= %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Возможно занижение базы для исчисления страховых взносов'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.СредняяЗарплата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Разность"	, "П00321М114001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.МесСтр КАК Ключ,
	|	ВТ_310.Фамилия + "", "" + ВТ_310.Снилс + "", "" +
	|	ВТ_321.МесСтр + "" месяц, "" + ВТ_321.С130 КАК ПредставлениеПоказателя,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С140 - ВТ_321.С160 КАК Разность,
	|	ВТ_321.С140 КАК С140,
	|	ВТ_321.С160 КАК С160
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	НЕ ВТ_321.С140 - ВТ_321.С160 = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ключ),
	|	СУММА(Разность),
	|	СУММА(С140),
	|	СУММА(С160)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КолвоСотрудников = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма = Окр((Выборка.Разность) / Выборка.Ключ, 2);
		Настройки.ЭтоОшибка	= РасчетнаяСумма < ДанныеКС.СредняяЗарплата;
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='Сумма выплат в целом по плательщику'")					, Выборка.Разность);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='Количество человеко-месяцев, в которых были выплаты'")	, Выборка.Ключ);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru='Средняя сумма выплат в целом по плательщику'")			, РасчетнаяСумма);
		ВнестиПоказательБезРасшифровки2020("Средняя зарплата, регион " + ДанныеКС.КодРегиона + ", отрасль (ОКВЭД) " 
			+ ДанныеКС.КодОКВЭД, ДанныеКС.СредняяЗарплата);
		
		Счетчик = 1;
		ВыборкаД = Выборка.Выбрать();
		Пока ВыборкаД.Следующий() И Счетчик < 2000 Цикл
			Показатели.Разность.Представление = ВыборкаД.ПредставлениеПоказателя;
			ВнестиПоказательВРасшифровку2020(ВыборкаД, Показатели.Разность);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, Выборка.С140, Выборка.С160, Выборка.Ключ, 
			РасчетнаяСумма, ДанныеКС.СредняяЗарплата);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_8(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 2.8)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в поле 001 подр.1.1 прил.1 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru='о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_9(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 2.9)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в поле 001 подр.1.2 прил.1 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru='о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_10(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 2.10)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в поле 001 прил.2 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru='о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_11(СтруктураРезультата)
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 2.11)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в подр.1.1 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru='условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru='Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00011");
	Настройки.Вставить("ИмяПоказателя"	, "П000110000101");
	ПроверитьКС2020_2_13_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_12(СтруктураРезультата)
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 2.12)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в подр.1.2 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru='условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru='Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00011");
	Настройки.Вставить("ИмяПоказателя"	, "П000110000101");
	ПроверитьКС2020_2_13_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_13(СтруктураРезультата)
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 2.13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в прил.2 Р.1 значения тарифа по стр.001 прил.2 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru='условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru='Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00012");
	Настройки.Вставить("ИмяПоказателя"	, "П00012М100101_");
	ПроверитьКС2020_2_13_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_13_код(Настройки)
	
	Перем Показатели;
	
	Если ДанныеКС.ПострадавшиеОтрасли = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("КодТарифа"		, Настройки.ИмяПоказателя);
	ЗаполнитьСтруктуруПоказателей2020(Показатели	, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, Настройки.РазделТарифа);
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ЗарегистрироватьФормулу2020(Настройки);
	ВнестиПоказательБезРасшифровки2020(НСтр("ru='Код ОКВЭД2'"), ДанныеКС.ОКВЭД2);
	КодНайден = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.КодТарифа);
		Если Выборка.КодТарифа = Настройки.КодТарифа Тогда
			КодНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка	= КодНайден И НЕ ДанныеКС.ЭтоПострадавшаяОтрасль;
	Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, СтрРазделить(ДанныеКС.ОКВЭД2, ".")[0], 
		СтрСоединить(ДанныеКС.ПострадавшиеОтрасли, ", "));
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

Процедура ПроверитьКС2020_1(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма произведенных расходов в гр.1 стр.070 прил.2 Р.1 = гр.3 стр.100 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000120007001");
	Настройки.Вставить("ПоказательР12", "П000130010003");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_3

Процедура ПроверитьКС2020_1_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР11"		, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Сред(Настройки.ПоказательР12, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК ПоказательР11,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР11
	|	И ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК ПоказательР12,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР12
	|	И ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12
	|	И ВТ_100.Мес		= &ОтчетныйМесяц";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР11 = РезультатЗапроса[0].Выбрать();
	ВыборкаР12 = РезультатЗапроса[1].Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаР11.Следующий() Тогда
		СумР11 = ВыборкаР11.ПоказательР11;
		ВнестиПоказательВРасшифровку2020(ВыборкаР11, Показатели.ПоказательР11);
	КонецЕсли;
	
	Если ВыборкаР12.Следующий() Тогда
		СумР12 = ВыборкаР12.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(ВыборкаР12, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_2(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.010 прил.3 Р.1 >= гр.1 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001001");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 >= СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.010 прил.3 Р.1 >= гр.2 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001102");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.010 прил.3 Р.1 >= гр.3 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001103");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_5(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.010 прил.3 Р.1 >= гр.4 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001004");
	Настройки.Вставить("ПоказательР12", "П000130001104");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_6(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 6)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.020 прил.3 Р.1 >= гр.1 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002001");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_7(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.020 прил.3 Р.1 >= гр.2 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002102");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_8(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 8)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.020 прил.3 Р.1 >= гр.3 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002103");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_9(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 9)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.030 прил.3 Р.1 >= гр.1 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003001");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_10(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 10)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.030 прил.3 Р.1 >= гр.2 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003102");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_11(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 11)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.030 прил.3 Р.1 >= гр.3 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003103");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_12(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 12)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.030 прил.3 Р.1 >= гр.4 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003004");
	Настройки.Вставить("ПоказательР12", "П000130003104");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_13(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.061 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_14(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='14'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 14)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.062 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_15(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 15)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.060 прил.3 Р.1 = гр.2 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	Настройки.Вставить("ПоказательР13", "П000130006202");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_15_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	СумР13 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		СумР13 = Выборка.ПоказательР13;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
	КонецЕсли;
	
	СуммаПоказателей		= СумР12 + СумР13;
	Настройки.ЭтоОшибка		= НЕ СумР11 = СуммаПоказателей;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12, СумР13, СуммаПоказателей);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_16(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 16)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.060 прил.3 Р.1 = гр.3 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	Настройки.Вставить("ПоказательР13", "П000130006203");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_17(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='17'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 17)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006004");
	Настройки.Вставить("ПоказательР12", "П000130006104");
	Настройки.Вставить("ПоказательР13", "П000130006204");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_18(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='18'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 18)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.070 прил.3 Р.1 = гр.4 стр.070 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007003");
	Настройки.Вставить("ПоказательР12", "П000130007004");
	ПроверитьКС2020_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_18_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("Строка"			, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	= &Строка
	|	И ВТ_100.Графа		В (&ГрафаР11, &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Графа	= &ГрафаР12
	|ГДЕ
	|	ТПоказателя1.Графа	= &ГрафаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_19(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='19'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 19)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.080 прил.3 Р.1 = гр.4 стр.080 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130008003");
	Настройки.Вставить("ПоказательР12", "П000130008004");
	ПроверитьКС2020_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_20(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 20)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.100 прил.3 Р.1 = гр.3 (стр.010 + стр.020 + стр.030 + стр.040 + стр.050 + '") +
		НСтр("ru='стр.060 + стр.070 + стр.080 + стр.090) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("010");
	МассивНомеровСтрок.Добавить("020");
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("040");
	МассивНомеровСтрок.Добавить("050");
	МассивНомеровСтрок.Добавить("060");
	МассивНомеровСтрок.Добавить("070");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("090");
	МассивНомеровСтрок.Добавить("100");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00013");
	Настройки.Вставить("Графа"		, "03");
	Настройки.Вставить("СтрокаСуммы", "100");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_20_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("Графа"			, Настройки.Графа);
	Запрос.УстановитьПараметр("МассивСтрок"		, Настройки.МассивСтрок);
	Запрос.УстановитьПараметр("СтрокаСуммы"		, Настройки.СтрокаСуммы);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.ТабЧасть		КАК ТабЧасть,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&МассивСтрок)
	|	И ВТ_100.Графа		В (&Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_101.Раздел + ВТ_101.ТабЧасть + ВТ_101.Строка_ + ВТ_101.Графа КАК КодПоказателя,
	|	ВЫБОР
	|		КОГДА ВТ_101.Строка_ = &СтрокаСуммы ТОГДА 1 ИНАЧЕ 2 
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТ_101.Строка_ = &СтрокаСуммы ТОГДА 
	|		Выразить(ВТ_101.Значение_ КАК Число) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПоказательР11,
	|	Выразить(ВТ_101.Значение_ КАК Число)		КАК ПоказательР12,
	|	ВТ_101.Отчет		КАК Отчет,
	|	ВТ_101.Страница	КАК Страница,
	|	ВТ_101.Строка_	КАК Строка_
	|ИЗ
	|	ВТ_101 КАК ВТ_101
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	Строка_
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаГ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	МассивСумм = Новый Массив;
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаГ.Следующий() Тогда
		СумР11 = ВыборкаГ.ПоказательР11;
		СумР12 = ВыборкаГ.ПоказательР12 - ВыборкаГ.ПоказательР11;
		
		Выборка = ВыборкаГ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР12", Выборка.КодПоказателя);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			Если Выборка.Приоритет = 2 Тогда
				МассивСумм.Добавить(Выборка.ПоказательР12);
			КонецЕсли;
		КонецЦикла
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СтрСоединить(МассивСумм, " + "), СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_21(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 (стр.010 + стр.030 + стр.060 + стр.070 + стр.080) '") +
		НСтр("ru='прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("010");
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("060");
	МассивНомеровСтрок.Добавить("070");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("100");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00013");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "100");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_22(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 22)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.010 прил.3 Р.1 = гр.4 стр.250 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001004");
	Настройки.Вставить("ПоказательР12", "П000140025004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.030 прил.3 Р.1 = гр.4 стр.260 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003004");
	Настройки.Вставить("ПоказательР12", "П000140026004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_24(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 24)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 стр.270 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006004");
	Настройки.Вставить("ПоказательР12", "П000140027004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_25(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 25)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.061 прил.3 Р.1 = гр.4 стр.280 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006104");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_26(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 26)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.062 прил.3 Р.1 = гр.4 стр.290 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006204");
	Настройки.Вставить("ПоказательР12", "П000140029004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_27(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 27)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.070 прил.3 Р.1 = гр.4 стр.300 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007004");
	Настройки.Вставить("ПоказательР12", "П000140030004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_28(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 28)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.080 прил.3 Р.1 = гр.4 стр.310 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130008004");
	Настройки.Вставить("ПоказательР12", "П000140031004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_29(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 29)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 стр.240 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130010004");
	Настройки.Вставить("ПоказательР12", "П000140024004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_4

Процедура ПроверитьКС2020_30(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 30)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140002002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_31(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 31)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140003002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_32(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 32)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_33(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 33)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004002");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_34(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 34)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004002");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_35(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 35)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.040 прил.4 Р.1 = гр.3 (стр.050 + стр.060) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140005003");
	Настройки.Вставить("ПоказательР13", "П000140006003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_36(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 36)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.010 прил.4 Р.1 = гр.4 (стр.020 + стр.030 + стр.040) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001004");
	Настройки.Вставить("ПоказательР12", "П000140002004");
	Настройки.Вставить("ПоказательР13", "П000140003004");
	Настройки.Вставить("ПоказательР14", "П000140004004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_36_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР14"		, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТПоказателя4.Строка_	= &СтрокаР14
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	СумР13 = 0;
	СумР14 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		СумР13 = Выборка.ПоказательР13;
		СумР14 = Выборка.ПоказательР14;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР14);
	КонецЕсли;
	
	СуммаПоказателей		= СумР12 + СумР13 + СумР14;
	Настройки.ЭтоОшибка		= НЕ СумР11 = СуммаПоказателей;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12, СумР13, СумР14, СуммаПоказателей);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_37(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='37'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 37)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.040 прил.4 Р.1 = гр.4 (стр.050 + стр.060) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	Настройки.Вставить("ПоказательР13", "П000140006004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_38(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='38'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 38)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140008002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_39(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='39'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 39)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140009002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_40(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='40'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 40)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_41(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='41'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 41)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010002");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_42(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='42'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 42)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010002");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_43(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='43'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 43)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.100 прил.4 Р.1 = гр.3 (стр.110 + стр.120) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140011003");
	Настройки.Вставить("ПоказательР13", "П000140012003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_44(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='44'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 44)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.070 прил.4 Р.1 = гр.4 (стр.080 + стр.090 + стр.100) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007004");
	Настройки.Вставить("ПоказательР12", "П000140008004");
	Настройки.Вставить("ПоказательР13", "П000140009004");
	Настройки.Вставить("ПоказательР14", "П000140010004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_45(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='45'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 45)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.4 Р.1 = гр.4 (стр.110 + стр.120) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140011004");
	Настройки.Вставить("ПоказательР13", "П000140012004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_46(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='46'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 46)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.130 прил.4 Р.1 = гр.2 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140013002");
	Настройки.Вставить("ПоказательР12", "П000140014002");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_47(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='47'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 47)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.130 прил.4 Р.1 = гр.4 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140013004");
	Настройки.Вставить("ПоказательР12", "П000140014004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_48(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='48'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 48)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140016002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_49(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='49'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 49)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140017002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_50(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='50'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 50)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_51(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='51'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 51)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018002");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_52(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='52'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 52)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018002");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_53(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='53'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 53)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.180 прил.4 Р.1 = гр.3 (стр.190 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140019003");
	Настройки.Вставить("ПоказательР13", "П000140020003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_54(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='54'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 54)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.150 прил.4 Р.1 = гр.4 (стр.160 + стр.170 + стр.180) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015004");
	Настройки.Вставить("ПоказательР12", "П000140016004");
	Настройки.Вставить("ПоказательР13", "П000140017004");
	Настройки.Вставить("ПоказательР14", "П000140018004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_55(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='55'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 55)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.180 прил.4 Р.1 = гр.4 (стр.190 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140019004");
	Настройки.Вставить("ПоказательР13", "П000140020004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_56(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='56'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 56)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021002");
	Настройки.Вставить("ПоказательР12", "П000140022002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_57(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='57'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 57)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021002");
	Настройки.Вставить("ПоказательР12", "П000140023002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_58(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='58'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 58)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.210 прил.4 Р.1 = гр.4 (стр.220 + стр.230) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021004");
	Настройки.Вставить("ПоказательР12", "П000140022004");
	Настройки.Вставить("ПоказательР13", "П000140023004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_59(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='59'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 59)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.010 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140001002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_60(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='60'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 60)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.070 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140007002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_61(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='61'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 61)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.130 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140013002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_62(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='62'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 62)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.150 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140015002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_63(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='63'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 63)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.210 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140021002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_64(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='64'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 64)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.250 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140025002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_65(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='65'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 65)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.260 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140026002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_66(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='66'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 66)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.270 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_67(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='67'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 67)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140002002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_68(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='68'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 68)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140008002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_69(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='69'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 69)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140014002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_70(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='70'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 70)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140016002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_71(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='71'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 71)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140022002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_72(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='72'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 72)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140003002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_73(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='73'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 73)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140009002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_74(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='74'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 74)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140017002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_75(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='75'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 75)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140023002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_76(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='76'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 76)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_77(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='77'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 77)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_78(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='78'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 78)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_79(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='79'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 79)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.280 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_80(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='80'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 80)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.290 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_81(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='81'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 81)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_82(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='82'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 82)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_83(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='83'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 83)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_84(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='84'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 84)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_85(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='85'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 85)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_86(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='86'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 86)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_87(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='87'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 87)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.270 прил.4 Р.1 = гр.3 (стр.280 + стр.290) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140028003");
	Настройки.Вставить("ПоказательР13", "П000140029003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_88(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='88'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 88)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.240 прил.4 Р.1 = гр.4 (стр.250 + стр.260 + стр.270 + стр.300 + '") +
		НСтр("ru='стр.310) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("240");
	МассивНомеровСтрок.Добавить("250");
	МассивНомеровСтрок.Добавить("260");
	МассивНомеровСтрок.Добавить("270");
	МассивНомеровСтрок.Добавить("300");
	МассивНомеровСтрок.Добавить("310");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "240");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_89(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='89'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 89)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.250 прил.4 Р.1 = гр.4 (стр.020 + стр.080 + стр.140 + стр.160 + '") +
		НСтр("ru='стр.220) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("020");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("140");
	МассивНомеровСтрок.Добавить("160");
	МассивНомеровСтрок.Добавить("220");
	МассивНомеровСтрок.Добавить("250");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "250");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_90(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='90'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 90)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.260 прил.4 Р.1 = гр.4 (стр.030 + стр.090 + стр.170 + стр.230) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("090");
	МассивНомеровСтрок.Добавить("170");
	МассивНомеровСтрок.Добавить("230");
	МассивНомеровСтрок.Добавить("260");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "260");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_91(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='91'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 91)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.270 прил.4 Р.1 = гр.4 (стр.280 + стр.290) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	Настройки.Вставить("ПоказательР13", "П000140029004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_92(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='92'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 92)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.280 прил.4 Р.1 = гр.4 (стр.050 + стр.110 + стр.190) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	Настройки.Вставить("ПоказательР13", "П000140011004");
	Настройки.Вставить("ПоказательР14", "П000140019004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_93(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='93'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 93)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.290 прил.4 Р.1 = гр.4 (стр.060 + стр.120 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140006004");
	Настройки.Вставить("ПоказательР13", "П000140012004");
	Настройки.Вставить("ПоказательР14", "П000140020004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_3

Процедура ПроверитьКС2020_94а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='94а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 94а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_94б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='94б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 94б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_94_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|				И ТПоказателя2.Графа	= &ГрафаР12
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= СумР11 <= 0 И СумР12 > 0;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_95а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='95а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 95а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001102");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_95б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='95б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 95б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001103");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_96а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='96а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 96а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_96б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='96б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 96б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_97а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='97а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 97а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002102");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_97б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='97б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 97б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002103");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_98а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='98а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 98а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_98б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='98б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 98б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_99а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='99а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 99а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003102");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_99б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='99б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 99б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003103");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_100(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='100'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 100)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.2 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_101(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='101'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 101)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.2 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001103");
	Настройки.Вставить("ПоказательР12", "П000130001102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_102(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='102'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 102)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.2 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_103(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='103'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 103)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.2 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002103");
	Настройки.Вставить("ПоказательР12", "П000130002102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_104(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='104'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 104)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.2 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_105(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='105'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 105)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.2 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003103");
	Настройки.Вставить("ПоказательР12", "П000130003102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_106(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='106'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 106)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.040 прил.3 Р.1 > 0, если гр.2 стр.040 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130004003");
	Настройки.Вставить("ПоказательР12", "П000130004002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_107(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='107'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 107)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.050 прил.3 Р.1 > 0, если гр.2 стр.050 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130005003");
	Настройки.Вставить("ПоказательР12", "П000130005002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_108(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='108'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 108)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.3 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_109(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='109'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 109)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.3 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001102");
	Настройки.Вставить("ПоказательР12", "П000130001103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_110(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='110'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 110)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.3 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_111(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='111'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 111)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.3 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002102");
	Настройки.Вставить("ПоказательР12", "П000130002103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_112(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='112'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 112)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.3 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_113(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='113'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 113)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.3 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003102");
	Настройки.Вставить("ПоказательР12", "П000130003103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_114а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='114а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 114а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_114б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='114б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 114б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_115а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='115а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 115а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_115б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='115б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 115б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_116а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='116а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 116а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_116б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='116б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 116б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_117а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='117а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 117а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006102");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_117б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='117б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 117б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006103");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_118а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='118а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 118а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006101");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_118б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='118б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 118б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006103");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_119а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='119а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 119а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006101");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_119б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='119б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 119б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006102");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_120а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='120а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 120а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006202");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_120б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='120б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 120б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006203");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_121а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='121а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 121а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006201");
	Настройки.Вставить("ПоказательР12", "П000130006202");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_121б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='121б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 121б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006203");
	Настройки.Вставить("ПоказательР12", "П000130006202");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_122а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='122а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 122а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006201");
	Настройки.Вставить("ПоказательР12", "П000130006203");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_122б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='122б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 122б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006202");
	Настройки.Вставить("ПоказательР12", "П000130006203");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_123(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='123'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 123)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.070 прил.3 Р.1 > 0, если гр.2 стр.070 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007003");
	Настройки.Вставить("ПоказательР12", "П000130007002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_124(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='124'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 124)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.070 прил.3 Р.1 > 0, если гр.3 стр.070 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007002");
	Настройки.Вставить("ПоказательР12", "П000130007003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_125а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='125а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 125а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009002");
	Настройки.Вставить("ПоказательР12", "П000130009001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_125б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='125б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 125б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009003");
	Настройки.Вставить("ПоказательР12", "П000130009001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_126(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='126'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 126)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.2 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009003");
	Настройки.Вставить("ПоказательР12", "П000130009002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_127(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='127'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 3 к Разделу 1 (КС 127)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.3 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009002");
	Настройки.Вставить("ПоказательР12", "П000130009003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_4

Процедура ПроверитьКС2020_128(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='128'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 128)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.020 прил.4 Р.1 > 0, если гр.3 стр.020 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140002004");
	Настройки.Вставить("ПоказательР12", "П000140002003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_129(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 129)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.020 прил.4 Р.1 > 0, если гр.4 стр.020 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140002003");
	Настройки.Вставить("ПоказательР12", "П000140002004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_130(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='130'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 130)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.030 прил.4 Р.1 > 0, если гр.3 стр.030 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140003004");
	Настройки.Вставить("ПоказательР12", "П000140003003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_131(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 129)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.030 прил.4 Р.1 > 0, если гр.4 стр.030 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140003003");
	Настройки.Вставить("ПоказательР12", "П000140003004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_132а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='132а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 132а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_132б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='132б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 132б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_133(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='133'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 133)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.3 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140004003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_134(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='134'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 134)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.4 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140004004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_135а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='135а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 135а'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005003");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_135б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='135б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 135б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005004");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_136(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='136'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 136)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.3 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005004");
	Настройки.Вставить("ПоказательР12", "П000140005003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_137(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='137'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 137)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.4 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005003");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_138а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='138а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 138а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006003");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_138б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='138б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 138б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006004");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_139(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='139'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 139)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.3 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006004");
	Настройки.Вставить("ПоказательР12", "П000140006003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_140(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='140'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 140)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.4 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006003");
	Настройки.Вставить("ПоказательР12", "П000140006004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_141(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='141'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 141)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.080 прил.4 Р.1 > 0, если гр.3 стр.080 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140008004");
	Настройки.Вставить("ПоказательР12", "П000140008003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_142(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='142'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 142)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.080 прил.4 Р.1 > 0, если гр.4 стр.080 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140008003");
	Настройки.Вставить("ПоказательР12", "П000140008004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_143(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='143'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 143)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.090 прил.4 Р.1 > 0, если гр.3 стр.090 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140009004");
	Настройки.Вставить("ПоказательР12", "П000140009003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_144(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='144'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 144)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.090 прил.4 Р.1 > 0, если гр.4 стр.090 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140009003");
	Настройки.Вставить("ПоказательР12", "П000140009004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_145а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='145а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 145а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_145б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='145б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 145б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_146(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='146'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 146)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.3 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140010003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_147(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='147'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 147)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.4 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140010004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_148а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='148а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 148а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011003");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_148б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='148б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 148б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011004");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_149(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='149'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 149)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.3 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011004");
	Настройки.Вставить("ПоказательР12", "П000140011003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_150(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='150'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 150)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.4 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011003");
	Настройки.Вставить("ПоказательР12", "П000140011004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_151а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='151а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 151а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012003");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_151б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='151б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 151б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012004");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_152(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='152'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 152)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.3 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012004");
	Настройки.Вставить("ПоказательР12", "П000140012003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_153(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='153'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 153)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.4 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012003");
	Настройки.Вставить("ПоказательР12", "П000140012004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_154(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='154'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 154)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.140 прил.4 Р.1 > 0, если гр.3 стр.140 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140014004");
	Настройки.Вставить("ПоказательР12", "П000140014003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_155(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='155'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 155)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.140 прил.4 Р.1 > 0, если гр.4 стр.140 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140014003");
	Настройки.Вставить("ПоказательР12", "П000140014004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_156(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='156'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 156)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.160 прил.4 Р.1 > 0, если гр.3 стр.160 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140016004");
	Настройки.Вставить("ПоказательР12", "П000140016003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_157(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='157'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 157)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.160 прил.4 Р.1 > 0, если гр.4 стр.160 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140016003");
	Настройки.Вставить("ПоказательР12", "П000140016004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_158(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='158'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 158)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.170 прил.4 Р.1 > 0, если гр.3 стр.170 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140017004");
	Настройки.Вставить("ПоказательР12", "П000140017003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_159(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='159'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 159)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.170 прил.4 Р.1 > 0, если гр.4 стр.170 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140017003");
	Настройки.Вставить("ПоказательР12", "П000140017004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_160а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='160а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 160а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_160б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='160б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 160б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_161(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='161'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 161)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.3 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140018003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_162(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='162'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 162)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.4 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140018004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_163а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='163а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 163а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019003");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_163б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='163б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 163б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019004");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_164(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='164'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 164)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.3 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019004");
	Настройки.Вставить("ПоказательР12", "П000140019003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_165(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='165'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 165)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.4 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019003");
	Настройки.Вставить("ПоказательР12", "П000140019004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_166а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='166а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 166а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020003");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_166б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='166б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 166б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020004");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_167(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='167'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 167)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.3 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020004");
	Настройки.Вставить("ПоказательР12", "П000140020003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_168(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='168'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 168)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.4 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020003");
	Настройки.Вставить("ПоказательР12", "П000140020004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_169(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='169'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 169)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.220 прил.4 Р.1 > 0, если гр.3 стр.220 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140022004");
	Настройки.Вставить("ПоказательР12", "П000140022003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_170(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='170'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 170)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.220 прил.4 Р.1 > 0, если гр.4 стр.220 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140022003");
	Настройки.Вставить("ПоказательР12", "П000140022004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_171(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='171'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 171)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.230 прил.4 Р.1 > 0, если гр.3 стр.230 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140023004");
	Настройки.Вставить("ПоказательР12", "П000140023003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_172(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='172'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 172)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.250 прил.4 Р.1 > 0, если гр.3 стр.250 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025004");
	Настройки.Вставить("ПоказательР12", "П000140025003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_173(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='173'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 173)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.250 прил.4 Р.1 > 0, если гр.4 стр.250 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025003");
	Настройки.Вставить("ПоказательР12", "П000140025004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_174(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='174'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 174)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.260 прил.4 Р.1 > 0, если гр.3 стр.260 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026004");
	Настройки.Вставить("ПоказательР12", "П000140026003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_175(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='175'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 175)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.260 прил.4 Р.1 > 0, если гр.4 стр.260 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026003");
	Настройки.Вставить("ПоказательР12", "П000140026004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_176а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='176а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 176а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_176б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='176б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 176б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_177(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='177'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 177)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.3 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140027003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_178(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='178'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 178)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.4 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140027004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_179а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='179а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 179а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028003");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_179б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='179б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 179б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_180(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='180'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 180)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.3 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140028003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_181(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='181'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 181)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.4 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028003");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_182а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='182а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 182а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029003");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_182б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='182б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 182б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_183(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='183'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 183)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.3 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140029003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_184(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='184'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 184)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.4 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029003");
	Настройки.Вставить("ПоказательР12", "П000140029004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_185(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='185'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 185)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.300 прил.4 Р.1 > 0, если гр.3 стр.300 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140030004");
	Настройки.Вставить("ПоказательР12", "П000140030003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_186(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='186'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru='Проверка приложения 4 к Разделу 1 (КС 186)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.300 прил.4 Р.1 > 0, если гр.4 стр.300 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140030003");
	Настройки.Вставить("ПоказательР12", "П000140030004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область КонтрольныеСоотношения2021

#Область КС_Управление

Функция ПроверитьКонтрольныеСоотношения2021(СтруктураПараметров)
	
	Документирование				= Ложь;
	СписокРасшифровкиПоказателей	= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	СписокРасшифровкиформулы		= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	СчетчикФормулДляРасшифровок		= 0;
	ПараметрыКС						= СтруктураПараметров;
	
	ДанныеКС						= Новый Структура;
	ДанныеКС.Вставить("КолОшибок"	, 0);
	ДанныеКС.Вставить("КолНеОшибок"	, 0);
	ДанныеКС.Вставить("Результат"	, Новый Структура);
	ДанныеКС.Вставить("ДопИнфо"		, Истина);;
	
	СформироватьСлужебныеДанные2021();
	ЗаполнитьТаблицыРазделов2021(ДанныеКС, Ложь);
	ПолучитьДанныеОтчетовПредыдущихПериодов2021();
	СформироватьВременныеТаблицы2021();
	
	ДанныеКС.Вставить("ОтчетПрибыль");
	ДанныеКС.Вставить("ОтчетПрибыльДанныеПолучены", Ложь);
	ПолучитьСсылкуНаОтчетПрибыль();
	ДанныеКС.Вставить("ЗаполненТариф06", ТарифЗаполнен("06"));
	ДанныеКС.Вставить("ЗаполненТариф22", ТарифЗаполнен("22"));
	ДанныеКС.Вставить("ВыполнятьПроверкиРСВ_Прибыль", ЗначениеЗаполнено(ДанныеКС.ОтчетПрибыль) 
		И (ДанныеКС.ЗаполненТариф06 ИЛИ ДанныеКС.ЗаполненТариф22 ИЛИ (ДанныеКС.Год = 2020 И ДанныеКС.Р00015Заполнен) 
		ИЛИ (ДанныеКС.Год >= 2021 И ДанныеКС.Р00151Заполнен)));
		
	Если ДанныеКС.ВыполнятьПроверкиРСВ_Прибыль Тогда
		ПолучитьДанныеОтчетаПрибыль();
	КонецЕсли;

#Область Проверки

#Область Проверки_Раздела_3
	
	ПроверитьКС2021_0_1а();
	ПроверитьКС2021_0_1б();
	ПроверитьКС2021_0_1в();
	ПроверитьКС2021_0_1г();
	ПроверитьКС2021_0_1д();
	ПроверитьКС2021_0_1е();
	ПроверитьКС2021_0_2а();
	ПроверитьКС2021_0_2б();
	ПроверитьКС2021_0_2в();
	ПроверитьКС2021_0_3();
	ПроверитьКС2021_0_4();
	ПроверитьКС2021_0_5а();
	ПроверитьКС2021_0_5б();
	ПроверитьКС2021_0_5в();
	ПроверитьКС2021_0_6а();
	ПроверитьКС2021_0_6б();
	ПроверитьКС2021_0_6в();
	ПроверитьКС2021_0_6г();
	ПроверитьКС2021_0_6д();
	ПроверитьКС2021_0_6е();
	ПроверитьКС2021_0_7а();
	ПроверитьКС2021_0_7б();
	ПроверитьКС2021_0_8а();
	ПроверитьКС2021_0_8б();
	ПроверитьКС2021_0_9а();
	ПроверитьКС2021_0_9б();
	ПроверитьКС2021_0_10а();
	ПроверитьКС2021_0_10б();
	ПроверитьКС2021_0_11а();
	ПроверитьКС2021_0_11б();
	ПроверитьКС2021_0_11в();
	ПроверитьКС2021_0_12();
	ПроверитьКС2021_0_13();
	ПроверитьКС2021_0_14а();
	ПроверитьКС2021_0_14б();
	ПроверитьКС2021_0_14в();
	ПроверитьКС2021_0_15();
	ПроверитьКС2021_0_16();
	ПроверитьКС2021_0_17а();
	ПроверитьКС2021_0_17б();
	ПроверитьКС2021_0_17в();
	ПроверитьКС2021_0_17г();
	ПроверитьКС2021_0_17д();
	ПроверитьКС2021_0_17е();
	ПроверитьКС2021_0_18а();
	ПроверитьКС2021_0_18б();
	ПроверитьКС2021_0_19а();
	ПроверитьКС2021_0_19б();
	ПроверитьКС2021_0_20а();
	ПроверитьКС2021_0_20б();
	ПроверитьКС2021_0_20в();
	ПроверитьКС2021_0_21();
	ПроверитьКС2021_0_22а();
	ПроверитьКС2021_0_22б();
	ПроверитьКС2021_0_22в();
	ПроверитьКС2021_0_22г();
	ПроверитьКС2021_0_23();
	ПроверитьКС2021_0_24();
	ПроверитьКС2021_0_25();
	ПроверитьКС2021_0_26();
	ПроверитьКС2021_0_27();
	ПроверитьКС2021_0_50а_доп();
	ПроверитьКС2021_0_50б_доп();
	ПроверитьКС2021_0_50в_доп();
	ПроверитьКС2021_0_51а_доп();
	ПроверитьКС2021_0_51б_доп();
	ПроверитьКС2021_0_51в_доп();
	ПроверитьКС2021_0_52а_доп();
	ПроверитьКС2021_0_52б_доп();
	ПроверитьКС2021_0_52в_доп();
	ПроверитьКС2021_0_53а_доп();
	ПроверитьКС2021_0_53б_доп();
	ПроверитьКС2021_0_53в_доп();
	ПроверитьКС2021_0_54а_доп();
	ПроверитьКС2021_0_54б_доп();
	ПроверитьКС2021_0_54в_доп();
	
#КонецОбласти

#Область Проверки_Раздела_1
	
	ПроверитьКС2021_1_1();
	ПроверитьКС2021_1_2();
	
	Если ДанныеКС.Год < 2021 Тогда
		ПроверитьКС2021_1_3();
	КонецЕсли; 
	
	ПроверитьКС2021_1_4();
	ПроверитьКС2021_1_5();
	ПроверитьКС2021_1_6();
	ПроверитьКС2021_1_7();
	ПроверитьКС2021_1_8();
	ПроверитьКС2021_1_9();
	ПроверитьКС2021_1_10();
	ПроверитьКС2021_1_11();
	ПроверитьКС2021_1_12а();
	ПроверитьКС2021_1_12б();
	ПроверитьКС2021_1_13а();
	ПроверитьКС2021_1_13б();
	ПроверитьКС2021_1_14а();
	ПроверитьКС2021_1_14б();
	ПроверитьКС2021_1_15а();
	ПроверитьКС2021_1_15б();
	ПроверитьКС2021_1_16а();
	ПроверитьКС2021_1_16б();
	ПроверитьКС2021_1_17а();
	ПроверитьКС2021_1_17б();
	ПроверитьКС2021_1_18а();
	ПроверитьКС2021_1_18б();
	ПроверитьКС2021_1_19а();
	ПроверитьКС2021_1_19б();
	ПроверитьКС2021_1_20();
	ПроверитьКС2021_1_21();
	ПроверитьКС2021_1_22();
	ПроверитьКС2021_1_23();
	
	Если ДанныеКС.Год < 2021 Тогда
		ПроверитьКС2021_1_24();
		ПроверитьКС2021_1_25();
		ПроверитьКС2021_1_26();
		ПроверитьКС2021_1_27();
	КонецЕсли; 
	
#КонецОбласти

#Область Проверки_Приложения_1
	
#Область Проверки_Подраздела_1_1
	
	ПроверитьКС2021_1_28();
	ПроверитьКС2021_1_29();
	ПроверитьКС2021_1_30();
	ПроверитьКС2021_1_31();
	ПроверитьКС2021_1_32();
	ПроверитьКС2021_1_33();
	ПроверитьКС2021_1_34();
	ПроверитьКС2021_1_35();
	ПроверитьКС2021_1_36();
	ПроверитьКС2021_1_37();
	ПроверитьКС2021_1_38();
	ПроверитьКС2021_1_39();
	ПроверитьКС2021_1_40();
	ПроверитьКС2021_1_41();
	ПроверитьКС2021_1_42();
	ПроверитьКС2021_1_43();
	ПроверитьКС2021_1_44();
	ПроверитьКС2021_1_45();
	ПроверитьКС2021_1_46();
	ПроверитьКС2021_1_47();
	ПроверитьКС2021_1_48();
	ПроверитьКС2021_1_49();
	ПроверитьКС2021_1_50();
	ПроверитьКС2021_1_51();
	ПроверитьКС2021_1_52();
	ПроверитьКС2021_1_53();
	ПроверитьКС2021_1_54();
	ПроверитьКС2021_1_55();
	ПроверитьКС2021_1_56();
	ПроверитьКС2021_1_57();
	ПроверитьКС2021_1_58();
	ПроверитьКС2021_1_59();
	ПроверитьКС2021_1_60();
	ПроверитьКС2021_1_61();
	ПроверитьКС2021_1_62();
	ПроверитьКС2021_1_63();
	ПроверитьКС2021_1_64();
	ПроверитьКС2021_1_65();
	
	#КонецОбласти

#Область Проверки_Подраздела_1_2
	
	ПроверитьКС2021_1_66();
	ПроверитьКС2021_1_67();
	ПроверитьКС2021_1_68();
	ПроверитьКС2021_1_69();
	ПроверитьКС2021_1_70();
	ПроверитьКС2021_1_71();
	ПроверитьКС2021_1_72();
	ПроверитьКС2021_1_73();
	ПроверитьКС2021_1_74();
	ПроверитьКС2021_1_75();
	ПроверитьКС2021_1_76();
	ПроверитьКС2021_1_77();
	ПроверитьКС2021_1_78();
	ПроверитьКС2021_1_79();
	ПроверитьКС2021_1_80();
	ПроверитьКС2021_1_81();
	ПроверитьКС2021_1_82();
	ПроверитьКС2021_1_83();
	ПроверитьКС2021_1_84();
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_1
	
	ПроверитьКС2021_1_85();
	ПроверитьКС2021_1_86();
	ПроверитьКС2021_1_87();
	ПроверитьКС2021_1_88();
	ПроверитьКС2021_1_89();
	ПроверитьКС2021_1_90();
	ПроверитьКС2021_1_91();
	ПроверитьКС2021_1_92();
	ПроверитьКС2021_1_93();
	ПроверитьКС2021_1_94();
	ПроверитьКС2021_1_95();
	ПроверитьКС2021_1_96();
	ПроверитьКС2021_1_97();
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_2
	
	ПроверитьКС2021_1_98();
	ПроверитьКС2021_1_99();
	ПроверитьКС2021_1_100();
	ПроверитьКС2021_1_101();
	ПроверитьКС2021_1_102();
	ПроверитьКС2021_1_103();
	ПроверитьКС2021_1_104();
	ПроверитьКС2021_1_105();
	ПроверитьКС2021_1_106();
	ПроверитьКС2021_1_107();
	ПроверитьКС2021_1_108();
	ПроверитьКС2021_1_109();
	
#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1
	
	ПроверитьКС2021_1_110();
	ПроверитьКС2021_1_111();
	ПроверитьКС2021_1_112();
	ПроверитьКС2021_1_113();
	ПроверитьКС2021_1_114();
	ПроверитьКС2021_1_115();
	ПроверитьКС2021_1_116();
	ПроверитьКС2021_1_117();
	
#КонецОбласти

#Область Проверки_Приложения_2
	
	ПроверитьКС2021_1_118();
	ПроверитьКС2021_1_119();
	ПроверитьКС2021_1_120();
	ПроверитьКС2021_1_121();
	ПроверитьКС2021_1_122();
	ПроверитьКС2021_1_123();
	ПроверитьКС2021_1_124();
	ПроверитьКС2021_1_125();
	ПроверитьКС2021_1_126();
	ПроверитьКС2021_1_127();
	ПроверитьКС2021_1_128();
	ПроверитьКС2021_1_129();
	ПроверитьКС2021_1_130();
	ПроверитьКС2021_1_131();
	ПроверитьКС2021_1_132();
	ПроверитьКС2021_1_133();
	ПроверитьКС2021_1_134();
	ПроверитьКС2021_1_135();
	ПроверитьКС2021_1_136();
	ПроверитьКС2021_1_137();
	ПроверитьКС2021_1_138();
	ПроверитьКС2021_1_139();
	ПроверитьКС2021_1_140();
	
	Если ДанныеКС.Год < 2021 Тогда
		ПроверитьКС2021_1_141();
	КонецЕсли;
	
	ПроверитьКС2021_1_142();
	
#КонецОбласти

#Область Проверки_Приложения_5
	
	ПроверитьКС2021_1_143();
	ПроверитьКС2021_1_144();
	ПроверитьКС2021_1_145();
	ПроверитьКС2021_1_146();
	ПроверитьКС2021_1_147();
	ПроверитьКС2021_1_148();
	ПроверитьКС2021_1_149();
	ПроверитьКС2021_1_150();

#КонецОбласти

#Область Проверки_Приложения_6

	ПроверитьКС2021_1_151();
	ПроверитьКС2021_1_152();
	ПроверитьКС2021_1_153();
	ПроверитьКС2021_1_154();
	ПроверитьКС2021_1_155();
	ПроверитьКС2021_1_156();

#КонецОбласти

#Область Проверки_Приложения_7
	
	ПроверитьКС2021_1_157();
	ПроверитьКС2021_1_158();
	ПроверитьКС2021_1_159();
	ПроверитьКС2021_1_160();
	ПроверитьКС2021_1_161();
	ПроверитьКС2021_1_162();
	ПроверитьКС2021_1_163();
	ПроверитьКС2021_1_164();

#КонецОбласти

#Область Проверки_Приложения_8
	
	ПроверитьКС2021_1_165();
	ПроверитьКС2021_1_166();
	ПроверитьКС2021_1_167();
	ПроверитьКС2021_1_168();
	ПроверитьКС2021_1_169();
	
#КонецОбласти

#Область Проверки_Приложения_9
	
	ПроверитьКС2021_1_170();
	ПроверитьКС2021_1_171();
	ПроверитьКС2021_1_172();
	ПроверитьКС2021_1_173();
	ПроверитьКС2021_1_174();
	
#КонецОбласти

#Область Проверки_Раздела_2
	
	ПроверитьКС2021_1_175();
	ПроверитьКС2021_1_176();
	ПроверитьКС2021_1_177();
	ПроверитьКС2021_1_178();
	ПроверитьКС2021_1_179();
	
#КонецОбласти

#Область Проверки_Прочие
	
	ПроверитьКС2021_1_180();
	ПроверитьКС2021_1_181();
	ПроверитьКС2021_1_182();
	ПроверитьКС2021_1_183();
	ПроверитьКС2021_1_184();
	ПроверитьКС2021_1_185();
	ПроверитьКС2021_1_186();
	ПроверитьКС2021_1_187();
	ПроверитьКС2021_1_188();
	ПроверитьКС2021_1_189();
	ПроверитьКС2021_1_190();
	ПроверитьКС2021_1_191();
	ПроверитьКС2021_1_192();
	ПроверитьКС2021_1_193();
	ПроверитьКС2021_1_194();
	ПроверитьКС2021_1_195();
	ПроверитьКС2021_1_196();
	ПроверитьКС2021_1_197();
	ПроверитьКС2021_1_198();
	ПроверитьКС2021_1_199();
	ПроверитьКС2021_1_200();
	
#КонецОбласти

#Область Проверки_Приложение_5_1

	Если ДанныеКС.Год >= 2021 Тогда
	
		ПроверитьКС2021_1_201();
		ПроверитьКС2021_1_202();
		ПроверитьКС2021_1_203();
		ПроверитьКС2021_1_204();
		ПроверитьКС2021_1_205();
		ПроверитьКС2021_1_206();
		ПроверитьКС2021_1_207();
		ПроверитьКС2021_1_208();
	
	КонецЕсли; 
	
#КонецОбласти

#Область Проверки_Прочие_2

	Если ДанныеКС.Год = 2020 ИЛИ ДанныеКС.Год = 2021 Тогда
	
		ПроверитьКС2021_1_209а();
		ПроверитьКС2021_1_210а();
	
	КонецЕсли; 

	Если ДанныеКС.Год = 2020 Тогда
	
		ПроверитьКС2021_1_300_доп();
	
	КонецЕсли; 
	
	ПроверитьКС2021_1_301_доп();
	ПроверитьКС2021_1_302_доп();
	ПроверитьКС2021_2_6();
	ПроверитьКС2021_2_7();
	ПроверитьКС2021_2_11();
	ПроверитьКС2021_2_12();
	ПроверитьКС2021_2_13();
	
#КонецОбласти

#Область Проверки_Прочие_Межформенные_Прибыль

	Если ДанныеКС.Год = 2020 И ДанныеКС.ВыполнятьПроверкиРСВ_Прибыль Тогда
	
		ПроверитьКС2021_2_18();
		ПроверитьКС2021_2_20();
	
	КонецЕсли;

	Если ДанныеКС.Год >= 2021 И ДанныеКС.ВыполнятьПроверкиРСВ_Прибыль Тогда
	
		ПроверитьКС2021_2_22();
		ПроверитьКС2021_2_24();
		ПроверитьКС2021_2_26();
		ПроверитьКС2021_2_28();
	
	КонецЕсли;
	
#КонецОбласти

#Область Проверки_ФСС

	Если ДанныеКС.Год < 2021 Тогда
		
#Область Проверки_Приложения_2

	ПроверитьКС2021_1();

#КонецОбласти

#Область Проверки_Приложения_3
		
	ПроверитьКС2021_2();
	ПроверитьКС2021_3();
	ПроверитьКС2021_4();
	ПроверитьКС2021_5();
	ПроверитьКС2021_6();
	ПроверитьКС2021_7();
	ПроверитьКС2021_8();
	ПроверитьКС2021_9();
	ПроверитьКС2021_10();
	ПроверитьКС2021_11();
	ПроверитьКС2021_12();
	ПроверитьКС2021_13();
	ПроверитьКС2021_14();
	ПроверитьКС2021_15();
	ПроверитьКС2021_16();
	ПроверитьКС2021_17();
	ПроверитьКС2021_18();
	ПроверитьКС2021_19();
	ПроверитьКС2021_20();
	ПроверитьКС2021_21();
	ПроверитьКС2021_22();
	ПроверитьКС2021_23();
	ПроверитьКС2021_24();
	ПроверитьКС2021_25();
	ПроверитьКС2021_26();
	ПроверитьКС2021_27();
	ПроверитьКС2021_28();
	ПроверитьКС2021_29();

#КонецОбласти

#Область Проверки_Приложения_4
		
	ПроверитьКС2021_30();
	ПроверитьКС2021_31();
	ПроверитьКС2021_32();
	ПроверитьКС2021_33();
	ПроверитьКС2021_34();
	ПроверитьКС2021_35();
	ПроверитьКС2021_36();
	ПроверитьКС2021_37();
	ПроверитьКС2021_38();
	ПроверитьКС2021_39();
	ПроверитьКС2021_40();
	ПроверитьКС2021_41();
	ПроверитьКС2021_42();
	ПроверитьКС2021_43();
	ПроверитьКС2021_44();
	ПроверитьКС2021_45();
	ПроверитьКС2021_46();
	ПроверитьКС2021_47();
	ПроверитьКС2021_48();
	ПроверитьКС2021_49();
	ПроверитьКС2021_50();
	ПроверитьКС2021_51();
	ПроверитьКС2021_52();
	ПроверитьКС2021_53();
	ПроверитьКС2021_54();
	ПроверитьКС2021_55();
	ПроверитьКС2021_56();
	ПроверитьКС2021_57();
	ПроверитьКС2021_58();
	ПроверитьКС2021_59();
	ПроверитьКС2021_60();
	ПроверитьКС2021_61();
	ПроверитьКС2021_62();
	ПроверитьКС2021_63();
	ПроверитьКС2021_64();
	ПроверитьКС2021_65();
	ПроверитьКС2021_66();
	ПроверитьКС2021_67();
	ПроверитьКС2021_68();
	ПроверитьКС2021_69();
	ПроверитьКС2021_70();
	ПроверитьКС2021_71();
	ПроверитьКС2021_72();
	ПроверитьКС2021_73();
	ПроверитьКС2021_74();
	ПроверитьКС2021_75();
	ПроверитьКС2021_76();
	ПроверитьКС2021_77();
	ПроверитьКС2021_78();
	ПроверитьКС2021_79();
	ПроверитьКС2021_80();
	ПроверитьКС2021_81();
	ПроверитьКС2021_82();
	ПроверитьКС2021_83();
	ПроверитьКС2021_84();
	ПроверитьКС2021_85();
	ПроверитьКС2021_86();
	ПроверитьКС2021_87();
	ПроверитьКС2021_88();
	ПроверитьКС2021_89();
	ПроверитьКС2021_90();
	ПроверитьКС2021_91();
	ПроверитьКС2021_92();
	ПроверитьКС2021_93();

#КонецОбласти

#Область Проверки_Приложения_3
		
	ПроверитьКС2021_94а();
	ПроверитьКС2021_94б();
	ПроверитьКС2021_95а();
	ПроверитьКС2021_95б();
	ПроверитьКС2021_96а();
	ПроверитьКС2021_96б();
	ПроверитьКС2021_97а();
	ПроверитьКС2021_97б();
	ПроверитьКС2021_98а();
	ПроверитьКС2021_98б();
	ПроверитьКС2021_99а();
	ПроверитьКС2021_99б();
	ПроверитьКС2021_100();
	ПроверитьКС2021_101();
	ПроверитьКС2021_102();
	ПроверитьКС2021_103();
	ПроверитьКС2021_104();
	ПроверитьКС2021_105();
	ПроверитьКС2021_106();
	ПроверитьКС2021_107();
	ПроверитьКС2021_108();
	ПроверитьКС2021_109();
	ПроверитьКС2021_110();
	ПроверитьКС2021_111();
	ПроверитьКС2021_112();
	ПроверитьКС2021_113();
	ПроверитьКС2021_114а();
	ПроверитьКС2021_114б();
	ПроверитьКС2021_115а();
	ПроверитьКС2021_115б();
	ПроверитьКС2021_116а();
	ПроверитьКС2021_116б();
	ПроверитьКС2021_117а();
	ПроверитьКС2021_117б();
	ПроверитьКС2021_118а();
	ПроверитьКС2021_118б();
	ПроверитьКС2021_119а();
	ПроверитьКС2021_119б();
	ПроверитьКС2021_120а();
	ПроверитьКС2021_120б();
	ПроверитьКС2021_121а();
	ПроверитьКС2021_121б();
	ПроверитьКС2021_122а();
	ПроверитьКС2021_122б();
	ПроверитьКС2021_123();
	ПроверитьКС2021_124();
	ПроверитьКС2021_125а();
	ПроверитьКС2021_125б();
	ПроверитьКС2021_126();
	ПроверитьКС2021_127();

#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2021_128();
	ПроверитьКС2021_129();
	ПроверитьКС2021_130();
	ПроверитьКС2021_131();
	ПроверитьКС2021_132а();
	ПроверитьКС2021_132б();
	ПроверитьКС2021_133();
	ПроверитьКС2021_134();
	ПроверитьКС2021_135а();
	ПроверитьКС2021_135б();
	ПроверитьКС2021_136();
	ПроверитьКС2021_137();
	ПроверитьКС2021_138а();
	ПроверитьКС2021_138б();
	ПроверитьКС2021_139();
	ПроверитьКС2021_140();
	ПроверитьКС2021_141();
	ПроверитьКС2021_142();
	ПроверитьКС2021_143();
	ПроверитьКС2021_144();
	ПроверитьКС2021_145а();
	ПроверитьКС2021_145б();
	ПроверитьКС2021_146();
	ПроверитьКС2021_147();
	ПроверитьКС2021_148а();
	ПроверитьКС2021_148б();
	ПроверитьКС2021_149();
	ПроверитьКС2021_150();
	ПроверитьКС2021_151а();
	ПроверитьКС2021_151б();
	ПроверитьКС2021_152();
	ПроверитьКС2021_153();
	ПроверитьКС2021_154();
	ПроверитьКС2021_155();
	ПроверитьКС2021_156();
	ПроверитьКС2021_157();
	ПроверитьКС2021_158();
	ПроверитьКС2021_159();
	ПроверитьКС2021_160а();
	ПроверитьКС2021_160б();
	ПроверитьКС2021_161();
	ПроверитьКС2021_162();
	ПроверитьКС2021_163а();
	ПроверитьКС2021_163б();
	ПроверитьКС2021_164();
	ПроверитьКС2021_165();
	ПроверитьКС2021_166а();
	ПроверитьКС2021_166б();
	ПроверитьКС2021_167();
	ПроверитьКС2021_168();
	ПроверитьКС2021_169();
	ПроверитьКС2021_170();
	ПроверитьКС2021_171();
	ПроверитьКС2021_172();
	ПроверитьКС2021_173();
	ПроверитьКС2021_174();
	ПроверитьКС2021_175();
	ПроверитьКС2021_176а();
	ПроверитьКС2021_176б();
	ПроверитьКС2021_177();
	ПроверитьКС2021_178();
	ПроверитьКС2021_179а();
	ПроверитьКС2021_179б();
	ПроверитьКС2021_180();
	ПроверитьКС2021_181();
	ПроверитьКС2021_182а();
	ПроверитьКС2021_182б();
	ПроверитьКС2021_183();
	ПроверитьКС2021_184();
	ПроверитьКС2021_185();
	ПроверитьКС2021_186();

#КонецОбласти

	КонецЕсли;

#КонецОбласти

#КонецОбласти

	ПоместитьВоВременноеХранилище(СписокРасшифровкиформулы		, СтруктураПараметров.АдресФормул);
	ПоместитьВоВременноеХранилище(СписокРасшифровкиПоказателей	, СтруктураПараметров.АдресПоказателей);
	
	Возврат ОбработатьРезультат2021(СтруктураПараметров);
	
КонецФункции

#КонецОбласти

#Область КС_Документирование

Функция ВыполнитьДокументированиеОбъект2021() Экспорт
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Расчет по страховым взносам");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2020Кв4");
	
	ТаблицаОписаний		= СформироватьТаблицуОписаний2021();
	
#Область Проверки_Раздела_3
	
	ПроверитьКС2021_0_1а();
	ПроверитьКС2021_0_1б();
	ПроверитьКС2021_0_1в();
	ПроверитьКС2021_0_1г();
	ПроверитьКС2021_0_1д();
	ПроверитьКС2021_0_1е();
	ПроверитьКС2021_0_2а();
	ПроверитьКС2021_0_2б();
	ПроверитьКС2021_0_2в();
	ПроверитьКС2021_0_3();
	ПроверитьКС2021_0_4();
	ПроверитьКС2021_0_5а();
	ПроверитьКС2021_0_5б();
	ПроверитьКС2021_0_5в();
	ПроверитьКС2021_0_6а();
	ПроверитьКС2021_0_6б();
	ПроверитьКС2021_0_6в();
	ПроверитьКС2021_0_6г();
	ПроверитьКС2021_0_6д();
	ПроверитьКС2021_0_6е();
	ПроверитьКС2021_0_7а();
	ПроверитьКС2021_0_7б();
	ПроверитьКС2021_0_8а();
	ПроверитьКС2021_0_8б();
	ПроверитьКС2021_0_9а();
	ПроверитьКС2021_0_9б();
	ПроверитьКС2021_0_10а();
	ПроверитьКС2021_0_10б();
	ПроверитьКС2021_0_11а();
	ПроверитьКС2021_0_11б();
	ПроверитьКС2021_0_11в();
	ПроверитьКС2021_0_12();
	ПроверитьКС2021_0_13();
	ПроверитьКС2021_0_14а();
	ПроверитьКС2021_0_14б();
	ПроверитьКС2021_0_14в();
	ПроверитьКС2021_0_15();
	ПроверитьКС2021_0_16();
	ПроверитьКС2021_0_17а();
	ПроверитьКС2021_0_17б();
	ПроверитьКС2021_0_17в();
	ПроверитьКС2021_0_17г();
	ПроверитьКС2021_0_17д();
	ПроверитьКС2021_0_17е();
	ПроверитьКС2021_0_18а();
	ПроверитьКС2021_0_18б();
	ПроверитьКС2021_0_19а();
	ПроверитьКС2021_0_19б();
	ПроверитьКС2021_0_20а();
	ПроверитьКС2021_0_20б();
	ПроверитьКС2021_0_20в();
	ПроверитьКС2021_0_21();
	ПроверитьКС2021_0_22а();
	ПроверитьКС2021_0_22б();
	ПроверитьКС2021_0_22в();
	ПроверитьКС2021_0_22г();
	ПроверитьКС2021_0_23();
	ПроверитьКС2021_0_24();
	ПроверитьКС2021_0_25();
	ПроверитьКС2021_0_26();
	ПроверитьКС2021_0_27();
	ПроверитьКС2021_0_50а_доп();
	ПроверитьКС2021_0_50б_доп();
	ПроверитьКС2021_0_50в_доп();
	ПроверитьКС2021_0_51а_доп();
	ПроверитьКС2021_0_51б_доп();
	ПроверитьКС2021_0_51в_доп();
	ПроверитьКС2021_0_52а_доп();
	ПроверитьКС2021_0_52б_доп();
	ПроверитьКС2021_0_52в_доп();
	ПроверитьКС2021_0_53а_доп();
	ПроверитьКС2021_0_53б_доп();
	ПроверитьКС2021_0_53в_доп();
	ПроверитьКС2021_0_54а_доп();
	ПроверитьКС2021_0_54б_доп();
	ПроверитьКС2021_0_54в_доп();
	
#КонецОбласти

#Область Проверки_Раздела_1
	
	ПроверитьКС2021_1_1();
	ПроверитьКС2021_1_2();
	ПроверитьКС2021_1_3();
	ПроверитьКС2021_1_4();
	ПроверитьКС2021_1_5();
	ПроверитьКС2021_1_6();
	ПроверитьКС2021_1_7();
	ПроверитьКС2021_1_8();
	ПроверитьКС2021_1_9();
	ПроверитьКС2021_1_10();
	ПроверитьКС2021_1_11();
	ПроверитьКС2021_1_12а();
	ПроверитьКС2021_1_12б();
	ПроверитьКС2021_1_13а();
	ПроверитьКС2021_1_13б();
	ПроверитьКС2021_1_14а();
	ПроверитьКС2021_1_14б();
	ПроверитьКС2021_1_15а();
	ПроверитьКС2021_1_15б();
	ПроверитьКС2021_1_16а();
	ПроверитьКС2021_1_16б();
	ПроверитьКС2021_1_17а();
	ПроверитьКС2021_1_17б();
	ПроверитьКС2021_1_18а();
	ПроверитьКС2021_1_18б();
	ПроверитьКС2021_1_19а();
	ПроверитьКС2021_1_19б();
	ПроверитьКС2021_1_20();
	ПроверитьКС2021_1_21();
	ПроверитьКС2021_1_22();
	ПроверитьКС2021_1_23();
	ПроверитьКС2021_1_24();
	ПроверитьКС2021_1_25();
	ПроверитьКС2021_1_26();
	ПроверитьКС2021_1_27();
	
#КонецОбласти

#Область Проверки_Приложения_1

#Область Проверки_Подраздела_1_1
	
	ПроверитьКС2021_1_28();
	ПроверитьКС2021_1_29();
	ПроверитьКС2021_1_30();
	ПроверитьКС2021_1_31();
	ПроверитьКС2021_1_32();
	ПроверитьКС2021_1_33();
	ПроверитьКС2021_1_34();
	ПроверитьКС2021_1_35();
	ПроверитьКС2021_1_36();
	ПроверитьКС2021_1_37();
	ПроверитьКС2021_1_38();
	ПроверитьКС2021_1_39();
	ПроверитьКС2021_1_40();
	ПроверитьКС2021_1_41();
	ПроверитьКС2021_1_42();
	ПроверитьКС2021_1_43();
	ПроверитьКС2021_1_44();
	ПроверитьКС2021_1_45();
	ПроверитьКС2021_1_46();
	ПроверитьКС2021_1_47();
	ПроверитьКС2021_1_48();
	ПроверитьКС2021_1_49();
	ПроверитьКС2021_1_50();
	ПроверитьКС2021_1_51();
	ПроверитьКС2021_1_52();
	ПроверитьКС2021_1_53();
	ПроверитьКС2021_1_54();
	ПроверитьКС2021_1_55();
	ПроверитьКС2021_1_56();
	ПроверитьКС2021_1_57();
	ПроверитьКС2021_1_58();
	ПроверитьКС2021_1_59();
	ПроверитьКС2021_1_60();
	ПроверитьКС2021_1_61();
	ПроверитьКС2021_1_62();
	ПроверитьКС2021_1_63();
	ПроверитьКС2021_1_64();
	ПроверитьКС2021_1_65();
	
#КонецОбласти

#Область Проверки_Подраздела_1_2
	
	ПроверитьКС2021_1_66();
	ПроверитьКС2021_1_67();
	ПроверитьКС2021_1_68();
	ПроверитьКС2021_1_69();
	ПроверитьКС2021_1_70();
	ПроверитьКС2021_1_71();
	ПроверитьКС2021_1_72();
	ПроверитьКС2021_1_73();
	ПроверитьКС2021_1_74();
	ПроверитьКС2021_1_75();
	ПроверитьКС2021_1_76();
	ПроверитьКС2021_1_77();
	ПроверитьКС2021_1_78();
	ПроверитьКС2021_1_79();
	ПроверитьКС2021_1_80();
	ПроверитьКС2021_1_81();
	ПроверитьКС2021_1_82();
	ПроверитьКС2021_1_83();
	ПроверитьКС2021_1_84();
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_1
	
	ПроверитьКС2021_1_85();
	ПроверитьКС2021_1_86();
	ПроверитьКС2021_1_87();
	ПроверитьКС2021_1_88();
	ПроверитьКС2021_1_89();
	ПроверитьКС2021_1_90();
	ПроверитьКС2021_1_91();
	ПроверитьКС2021_1_92();
	ПроверитьКС2021_1_93();
	ПроверитьКС2021_1_94();
	ПроверитьКС2021_1_95();
	ПроверитьКС2021_1_96();
	ПроверитьКС2021_1_97();
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_2
	
	ПроверитьКС2021_1_98();
	ПроверитьКС2021_1_99();
	ПроверитьКС2021_1_100();
	ПроверитьКС2021_1_101();
	ПроверитьКС2021_1_102();
	ПроверитьКС2021_1_103();
	ПроверитьКС2021_1_104();
	ПроверитьКС2021_1_105();
	ПроверитьКС2021_1_106();
	ПроверитьКС2021_1_107();
	ПроверитьКС2021_1_108();
	ПроверитьКС2021_1_109();
	
#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1
	
	ПроверитьКС2021_1_110();
	ПроверитьКС2021_1_111();
	ПроверитьКС2021_1_112();
	ПроверитьКС2021_1_113();
	ПроверитьКС2021_1_114();
	ПроверитьКС2021_1_115();
	ПроверитьКС2021_1_116();
	ПроверитьКС2021_1_117();
	
#КонецОбласти

#Область Проверки_Приложения_2
	
	ПроверитьКС2021_1_118();
	ПроверитьКС2021_1_119();
	ПроверитьКС2021_1_120();
	ПроверитьКС2021_1_121();
	ПроверитьКС2021_1_122();
	ПроверитьКС2021_1_123();
	ПроверитьКС2021_1_124();
	ПроверитьКС2021_1_125();
	ПроверитьКС2021_1_126();
	ПроверитьКС2021_1_127();
	ПроверитьКС2021_1_128();
	ПроверитьКС2021_1_129();
	ПроверитьКС2021_1_130();
	ПроверитьКС2021_1_131();
	ПроверитьКС2021_1_132();
	ПроверитьКС2021_1_133();
	ПроверитьКС2021_1_134();
	ПроверитьКС2021_1_135();
	ПроверитьКС2021_1_136();
	ПроверитьКС2021_1_137();
	ПроверитьКС2021_1_138();
	ПроверитьКС2021_1_139();
	ПроверитьКС2021_1_140();
	ПроверитьКС2021_1_141();
	ПроверитьКС2021_1_142();
	
#КонецОбласти

#Область Проверки_Приложения_5
	
	ПроверитьКС2021_1_143();
	ПроверитьКС2021_1_144();
	ПроверитьКС2021_1_145();
	ПроверитьКС2021_1_146();
	ПроверитьКС2021_1_147();
	ПроверитьКС2021_1_148();
	ПроверитьКС2021_1_149();
	ПроверитьКС2021_1_150();

#КонецОбласти

#Область Проверки_Приложения_6

	ПроверитьКС2021_1_151();
	ПроверитьКС2021_1_152();
	ПроверитьКС2021_1_153();
	ПроверитьКС2021_1_154();
	ПроверитьКС2021_1_155();
	ПроверитьКС2021_1_156();

#КонецОбласти

#Область Проверки_Приложения_7
	
	ПроверитьКС2021_1_157();
	ПроверитьКС2021_1_158();
	ПроверитьКС2021_1_159();
	ПроверитьКС2021_1_160();
	ПроверитьКС2021_1_161();
	ПроверитьКС2021_1_162();
	ПроверитьКС2021_1_163();
	ПроверитьКС2021_1_164();

#КонецОбласти

#Область Проверки_Приложения_8
	
	ПроверитьКС2021_1_165();
	ПроверитьКС2021_1_166();
	ПроверитьКС2021_1_167();
	ПроверитьКС2021_1_168();
	ПроверитьКС2021_1_169();
	
#КонецОбласти

#Область Проверки_Приложения_9
	
	ПроверитьКС2021_1_170();
	ПроверитьКС2021_1_171();
	ПроверитьКС2021_1_172();
	ПроверитьКС2021_1_173();
	ПроверитьКС2021_1_174();
	
#КонецОбласти

#Область Проверки_Раздела_2
	
	ПроверитьКС2021_1_175();
	ПроверитьКС2021_1_176();
	ПроверитьКС2021_1_177();
	ПроверитьКС2021_1_178();
	ПроверитьКС2021_1_179();
	
#КонецОбласти

#Область Проверки_Прочие
	
	ПроверитьКС2021_1_180();
	ПроверитьКС2021_1_181();
	ПроверитьКС2021_1_182();
	ПроверитьКС2021_1_183();
	ПроверитьКС2021_1_184();
	ПроверитьКС2021_1_185();
	ПроверитьКС2021_1_186();
	ПроверитьКС2021_1_187();
	ПроверитьКС2021_1_188();
	ПроверитьКС2021_1_189();
	ПроверитьКС2021_1_190();
	ПроверитьКС2021_1_191();
	ПроверитьКС2021_1_192();
	ПроверитьКС2021_1_193();
	ПроверитьКС2021_1_194();
	ПроверитьКС2021_1_195();
	ПроверитьКС2021_1_196();
	ПроверитьКС2021_1_197();
	ПроверитьКС2021_1_198();
	ПроверитьКС2021_1_199();
	ПроверитьКС2021_1_200();
	
#КонецОбласти

#Область Проверки_Приложения_5_1

	ПроверитьКС2021_1_201();
	ПроверитьКС2021_1_202();
	ПроверитьКС2021_1_203();
	ПроверитьКС2021_1_204();
	ПроверитьКС2021_1_205();
	ПроверитьКС2021_1_206();
	ПроверитьКС2021_1_207();
	ПроверитьКС2021_1_208();
	
#КонецОбласти

#Область Проверки_Прочие_2

	ПроверитьКС2021_1_209а();
	ПроверитьКС2021_1_210а();
	ПроверитьКС2021_1_300_доп();
	ПроверитьКС2021_1_301_доп();
	ПроверитьКС2021_1_302_доп();
	ПроверитьКС2021_2_1();
	ПроверитьКС2021_2_2а();
	ПроверитьКС2021_2_2б();
	ПроверитьКС2021_2_3();
	ПроверитьКС2021_2_4();
	ПроверитьКС2021_2_5();
	ПроверитьКС2021_2_6();
	ПроверитьКС2021_2_7();
	ПроверитьКС2021_2_8();
	ПроверитьКС2021_2_9();
	ПроверитьКС2021_2_10();
	ПроверитьКС2021_2_11();
	ПроверитьКС2021_2_12();
	ПроверитьКС2021_2_13();
	ПроверитьКС2021_2_14();
	ПроверитьКС2021_2_15();
	ПроверитьКС2021_2_16();
	
#КонецОбласти

#Область Проверки_Прочие_Межформенные_Прибыль
	
	ПроверитьКС2021_2_17();
	ПроверитьКС2021_2_18();
	ПроверитьКС2021_2_19();
	ПроверитьКС2021_2_20();
	ПроверитьКС2021_2_21();
	ПроверитьКС2021_2_22();
	ПроверитьКС2021_2_23();
	ПроверитьКС2021_2_24();
	ПроверитьКС2021_2_25();
	ПроверитьКС2021_2_26();
	ПроверитьКС2021_2_27();
	ПроверитьКС2021_2_28();
	
#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

	ПроверитьКС2021_1();
	
#КонецОбласти

#Область Проверки_Приложения_3

	ПроверитьКС2021_2();
	ПроверитьКС2021_3();
	ПроверитьКС2021_4();
	ПроверитьКС2021_5();
	ПроверитьКС2021_6();
	ПроверитьКС2021_7();
	ПроверитьКС2021_8();
	ПроверитьКС2021_9();
	ПроверитьКС2021_10();
	ПроверитьКС2021_11();
	ПроверитьКС2021_12();
	ПроверитьКС2021_13();
	ПроверитьКС2021_14();
	ПроверитьКС2021_15();
	ПроверитьКС2021_16();
	ПроверитьКС2021_17();
	ПроверитьКС2021_18();
	ПроверитьКС2021_19();
	ПроверитьКС2021_20();
	ПроверитьКС2021_21();
	ПроверитьКС2021_22();
	ПроверитьКС2021_23();
	ПроверитьКС2021_24();
	ПроверитьКС2021_25();
	ПроверитьКС2021_26();
	ПроверитьКС2021_27();
	ПроверитьКС2021_28();
	ПроверитьКС2021_29();
	
#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2021_30();
	ПроверитьКС2021_31();
	ПроверитьКС2021_32();
	ПроверитьКС2021_33();
	ПроверитьКС2021_34();
	ПроверитьКС2021_35();
	ПроверитьКС2021_36();
	ПроверитьКС2021_37();
	ПроверитьКС2021_38();
	ПроверитьКС2021_39();
	ПроверитьКС2021_40();
	ПроверитьКС2021_41();
	ПроверитьКС2021_42();
	ПроверитьКС2021_43();
	ПроверитьКС2021_44();
	ПроверитьКС2021_45();
	ПроверитьКС2021_46();
	ПроверитьКС2021_47();
	ПроверитьКС2021_48();
	ПроверитьКС2021_49();
	ПроверитьКС2021_50();
	ПроверитьКС2021_51();
	ПроверитьКС2021_52();
	ПроверитьКС2021_53();
	ПроверитьКС2021_54();
	ПроверитьКС2021_55();
	ПроверитьКС2021_56();
	ПроверитьКС2021_57();
	ПроверитьКС2021_58();
	ПроверитьКС2021_59();
	ПроверитьКС2021_60();
	ПроверитьКС2021_61();
	ПроверитьКС2021_62();
	ПроверитьКС2021_63();
	ПроверитьКС2021_64();
	ПроверитьКС2021_65();
	ПроверитьКС2021_66();
	ПроверитьКС2021_67();
	ПроверитьКС2021_68();
	ПроверитьКС2021_69();
	ПроверитьКС2021_70();
	ПроверитьКС2021_71();
	ПроверитьКС2021_72();
	ПроверитьКС2021_73();
	ПроверитьКС2021_74();
	ПроверитьКС2021_75();
	ПроверитьКС2021_76();
	ПроверитьКС2021_77();
	ПроверитьКС2021_78();
	ПроверитьКС2021_79();
	ПроверитьКС2021_80();
	ПроверитьКС2021_81();
	ПроверитьКС2021_82();
	ПроверитьКС2021_83();
	ПроверитьКС2021_84();
	ПроверитьКС2021_85();
	ПроверитьКС2021_86();
	ПроверитьКС2021_87();
	ПроверитьКС2021_88();
	ПроверитьКС2021_89();
	ПроверитьКС2021_90();
	ПроверитьКС2021_91();
	ПроверитьКС2021_92();
	ПроверитьКС2021_93();
	
#КонецОбласти

#Область Проверки_Приложения_3

	ПроверитьКС2021_94а();
	ПроверитьКС2021_94б();
	ПроверитьКС2021_95а();
	ПроверитьКС2021_95б();
	ПроверитьКС2021_96а();
	ПроверитьКС2021_96б();
	ПроверитьКС2021_97а();
	ПроверитьКС2021_97б();
	ПроверитьКС2021_98а();
	ПроверитьКС2021_98б();
	ПроверитьКС2021_99а();
	ПроверитьКС2021_99б();
	ПроверитьКС2021_100();
	ПроверитьКС2021_101();
	ПроверитьКС2021_102();
	ПроверитьКС2021_103();
	ПроверитьКС2021_104();
	ПроверитьКС2021_105();
	ПроверитьКС2021_106();
	ПроверитьКС2021_107();
	ПроверитьКС2021_108();
	ПроверитьКС2021_109();
	ПроверитьКС2021_110();
	ПроверитьКС2021_111();
	ПроверитьКС2021_112();
	ПроверитьКС2021_113();
	ПроверитьКС2021_114а();
	ПроверитьКС2021_114б();
	ПроверитьКС2021_115а();
	ПроверитьКС2021_115б();
	ПроверитьКС2021_116а();
	ПроверитьКС2021_116б();
	ПроверитьКС2021_117а();
	ПроверитьКС2021_117б();
	ПроверитьКС2021_118а();
	ПроверитьКС2021_118б();
	ПроверитьКС2021_119а();
	ПроверитьКС2021_119б();
	ПроверитьКС2021_120а();
	ПроверитьКС2021_120б();
	ПроверитьКС2021_121а();
	ПроверитьКС2021_121б();
	ПроверитьКС2021_122а();
	ПроверитьКС2021_122б();
	ПроверитьКС2021_123();
	ПроверитьКС2021_124();
	ПроверитьКС2021_125а();
	ПроверитьКС2021_125б();
	ПроверитьКС2021_126();
	ПроверитьКС2021_127();
	
#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2021_128();
	ПроверитьКС2021_129();
	ПроверитьКС2021_130();
	ПроверитьКС2021_131();
	ПроверитьКС2021_132а();
	ПроверитьКС2021_132б();
	ПроверитьКС2021_133();
	ПроверитьКС2021_134();
	ПроверитьКС2021_135а();
	ПроверитьКС2021_135б();
	ПроверитьКС2021_136();
	ПроверитьКС2021_137();
	ПроверитьКС2021_138а();
	ПроверитьКС2021_138б();
	ПроверитьКС2021_139();
	ПроверитьКС2021_140();
	ПроверитьКС2021_141();
	ПроверитьКС2021_142();
	ПроверитьКС2021_143();
	ПроверитьКС2021_144();
	ПроверитьКС2021_145а();
	ПроверитьКС2021_145б();
	ПроверитьКС2021_146();
	ПроверитьКС2021_147();
	ПроверитьКС2021_148а();
	ПроверитьКС2021_148б();
	ПроверитьКС2021_149();
	ПроверитьКС2021_150();
	ПроверитьКС2021_151а();
	ПроверитьКС2021_151б();
	ПроверитьКС2021_152();
	ПроверитьКС2021_153();
	ПроверитьКС2021_154();
	ПроверитьКС2021_155();
	ПроверитьКС2021_156();
	ПроверитьКС2021_157();
	ПроверитьКС2021_158();
	ПроверитьКС2021_159();
	ПроверитьКС2021_160а();
	ПроверитьКС2021_160б();
	ПроверитьКС2021_161();
	ПроверитьКС2021_162();
	ПроверитьКС2021_163а();
	ПроверитьКС2021_163б();
	ПроверитьКС2021_164();
	ПроверитьКС2021_165();
	ПроверитьКС2021_166а();
	ПроверитьКС2021_166б();
	ПроверитьКС2021_167();
	ПроверитьКС2021_168();
	ПроверитьКС2021_169();
	ПроверитьКС2021_170();
	ПроверитьКС2021_171();
	ПроверитьКС2021_172();
	ПроверитьКС2021_173();
	ПроверитьКС2021_174();
	ПроверитьКС2021_175();
	ПроверитьКС2021_176а();
	ПроверитьКС2021_176б();
	ПроверитьКС2021_177();
	ПроверитьКС2021_178();
	ПроверитьКС2021_179а();
	ПроверитьКС2021_179б();
	ПроверитьКС2021_180();
	ПроверитьКС2021_181();
	ПроверитьКС2021_182а();
	ПроверитьКС2021_182б();
	ПроверитьКС2021_183();
	ПроверитьКС2021_184();
	ПроверитьКС2021_185();
	ПроверитьКС2021_186();
	
#КонецОбласти

#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция СформироватьТаблицуОписаний2021()
	
	ТипСтрока20		= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20));
	ТипСтрока100	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100));
	ТипСтрока900	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(900));
	ТипБулево		= Новый ОписаниеТипов("Булево");
	
	ТаблицаОписаний = Новый ТаблицаЗначений;
	ТаблицаОписаний.Колонки.Добавить("НомерКС"			, ТипСтрока20);
	ТаблицаОписаний.Колонки.Добавить("Раздел"			, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеКС"		, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Нарушение"		, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеОшибки"	, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Условие"			, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Комментарий"		, ТипСтрока900);
	
	Возврат ТаблицаОписаний;
	
КонецФункции // СформироватьТаблицуОписаний;()

#КонецОбласти

#Область КС_Данные

Процедура СформироватьСлужебныеДанные2021()

#Область ОсновныеНастройки

	ДанныеКС.Вставить("Отчет"					, Неопределено);
	ДанныеКС.Вставить("ТекОтчет"				, ПараметрыКС.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка);
	ДанныеКС.Вставить("Вид"						, ПараметрыКС.СтруктураДанныхТитульный.НомерКорректировки);
	ДанныеКС.Вставить("Мес"						, Месяц(ПараметрыКС.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ДанныеКС.Вставить("Год"						, Год(ПараметрыКС.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ДанныеКС.Вставить("Организация"				, ПараметрыКС.СтруктураРеквизитовФормы.Организация);
	ДанныеКС.Вставить("ИмяФормы"				, ПараметрыКС.мВыбраннаяФорма);
	ДанныеКС.Вставить("ДатаОкончанияПериода"	, ПараметрыКС.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ДанныеКС.Вставить("СтруктураРеквизитовФормы", ПараметрыКС.СтруктураРеквизитовФормы);
	ДанныеКС.Вставить("СтруктураМнРазделов"		, ПараметрыКС.мСтруктураМногоуровневыхРазделов);
	ДанныеКС.Вставить("ОКВЭД2"					, ПараметрыКС.СтруктураДанныхТитульный.ОКВЭД);
	ДанныеКС.Вставить("ЛимитРасшифровки"		, 1000);
	ДанныеКС.Вставить("ЛимитСотрудников"		, 500);
	
	Попытка
		
		ДанныеСреднейЗарплаты = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСреднеотраслевуюЗарплату(
		ДанныеКС.Организация, Лев(ПараметрыКС.СтруктураДанныхТитульный.КПП, 2), 
		СокрЛП(ПараметрыКС.СтруктураДанныхТитульный.ОКВЭД));
		МРОТ = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьМРОТ(
		ДанныеКС.ДатаОкончанияПериода);
		ПредельнаяВеличинаБазы = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьПредельнуюВеличинуБазы(
		ДанныеКС.ДатаОкончанияПериода);
		ПострадавшиеОтрасли = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
		
	Исключение
		
		ДанныеСреднейЗарплаты = Новый Структура("КодРегиона, КодОКВЭД, СредняяЗарплата");
		МРОТ = Неопределено;
		ПредельнаяВеличинаБазы = Неопределено;
		ПострадавшиеОтрасли = Неопределено;
		
	КонецПопытки;
	
	ДанныеКС.Вставить("КодРегиона"				, ДанныеСреднейЗарплаты.КодРегиона);
	ДанныеКС.Вставить("КодОКВЭД"				, ДанныеСреднейЗарплаты.КодОКВЭД);
	ДанныеКС.Вставить("СредняяЗарплата"			, ДанныеСреднейЗарплаты.СредняяЗарплата);
	ДанныеКС.Вставить("МРОТ"					, МРОТ);
	ДанныеКС.Вставить("ПредельнаяВеличинаБазы"	, ПредельнаяВеличинаБазы);
	ДанныеКС.Вставить("ПострадавшиеОтрасли"		, ПострадавшиеОтрасли);
	ДанныеКС.Вставить("ЭтоПострадавшаяОтрасль"	, ЭтоПострадавшаяОтрасль2021());
	
#КонецОбласти

#Область ТарифыСтавкиКатегории

	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4));
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(2));
	ТипЧисло2	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3, 1));
	
	ГодСтр = ?(ДанныеКС.Год >= 2021, "2021", "2020");
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("Категории321"		, "Категории321_" + ГодСтр);
	СтруктураТаблиц.Вставить("Категории322"		, "Категории322_" + ГодСтр);
	СтруктураТаблиц.Вставить("Ставки321"		, "Ставки321_" + ГодСтр);
	СтруктураТаблиц.Вставить("Ставки322"		, "Ставки322_" + ГодСтр);
	СтруктураТаблиц.Вставить("Ставки112"		, "Ставки112_" + ГодСтр);
	СтруктураТаблиц.Вставить("Ставки201"		, "Ставки201_" + ГодСтр);
	СтруктураТаблиц.Вставить("Ставки202"		, "Ставки202_" + ГодСтр);
	
	Категории321	= Новый ТаблицаЗначений;
	Категории321.Колонки.Добавить("Категория"	, ТипСтрока);
	Категории321.Колонки.Добавить("Код"			, ТипСтрока);
	
	Категории322	= Новый ТаблицаЗначений;
	Категории322.Колонки.Добавить("Категория"	, ТипСтрока);
	Категории322.Колонки.Добавить("Код"			, ТипСтрока);
	
	Ставки321		= Новый ТаблицаЗначений;
	Ставки321.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки321.Колонки.Добавить("Ставка"			, ТипЧисло);
	
	Ставки322		= Новый ТаблицаЗначений;
	Ставки322.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки322.Колонки.Добавить("Ставка"			, ТипЧисло);
	
	Ставки112		= Новый ТаблицаЗначений;
	Ставки112.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки112.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Ставки201		= Новый ТаблицаЗначений;
	Ставки201.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки201.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Ставки202		= Новый ТаблицаЗначений;
	Ставки202.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки202.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Категории321.Индексы.Добавить("Категория");
	Категории322.Индексы.Добавить("Категория");
	Ставки321.Индексы.Добавить("Код");
	Ставки322.Индексы.Добавить("Код");

	ДанныеКС.Вставить("Категории321"	, Категории321);
	ДанныеКС.Вставить("Категории322"	, Категории322);
	ДанныеКС.Вставить("Ставки321"		, Ставки321);
	ДанныеКС.Вставить("Ставки322"		, Ставки322);
	ДанныеКС.Вставить("Ставки112"		, Ставки112);
	ДанныеКС.Вставить("Ставки201"		, Ставки201);
	ДанныеКС.Вставить("Ставки202"		, Ставки202);
	
	МакетНастроекКС = ЭтотОбъект.ПолучитьМакет("НастройкиКС2020Кв4");

	Для каждого Элемент Из СтруктураТаблиц Цикл
		Область				= МакетНастроекКС.Области.Найти(Элемент.Значение);
		Для НомерСтроки		= Область.Верх По Область.Низ Цикл
			НовСтрока		= ДанныеКС[Элемент.Ключ].Добавить();
			НовСтрока[0]	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 1).Текст);
			НовСтрока[1]	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 2).Текст);
		КонецЦикла;
	КонецЦикла;
	
	#КонецОбласти

#Область НастройкиРасшифровки
	
	ПредставлениеРазделов = Новый Структура();
	
	ПредставлениеРазделов.Вставить("П00003", "Раздела 3");
	ПредставлениеРазделов.Вставить("П00031", "подраздел 3.1 Раздела 3");
	ПредставлениеРазделов.Вставить("П00321", "подраздела 3.2.1 Раздела 3");
	ПредставлениеРазделов.Вставить("П00322", "подраздела 3.2.2 Раздела 3");
	ПредставлениеРазделов.Вставить("П00001", "Раздела 1");
	ПредставлениеРазделов.Вставить("П01111", "подраздела 1.1 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П01112", "подраздела 1.2 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П11131", "подраздела 1.3.1 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П11132", "подраздела 1.3.2 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00111", "Приложения 1.1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00011", "Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00012", "Приложения 2 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00013", "Приложения 3 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00014", "Приложения 4 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00015", "Приложения 5 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00151", "Приложения 5.1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00016", "Приложения 6 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00017", "Приложения 7 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00018", "Приложения 8 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00019", "Приложения 9 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00002", "Раздела 2");
	ПредставлениеРазделов.Вставить("П00021", "Приложения 1 к Разделу 2");
	ПредставлениеРазделов.Вставить("П02", "Листа 02 Декларации по налогу на прибыль");
	ПредставлениеРазделов.Вставить("П23", "Приложения 3 к Листу 02 Декларации по налогу на прибыль");
	
	ДанныеКС.Вставить("ПредставлениеРазделов", ПредставлениеРазделов);
	
	РазделыПоказателей = Новый Структура();
	
	РазделыПоказателей.Вставить("П00003", "Раздел3");
	РазделыПоказателей.Вставить("П00031", "Раздел3");
	РазделыПоказателей.Вставить("П00321", "Раздел3");
	РазделыПоказателей.Вставить("П00322", "Раздел3");
	РазделыПоказателей.Вставить("П00001", "Раздел1");
	РазделыПоказателей.Вставить("П01111", "Раздел1Прил1Подр1_1и1_2");
	РазделыПоказателей.Вставить("П01112", "Раздел1Прил1Подр1_1и1_2");
	РазделыПоказателей.Вставить("П11131", "Раздел1Прил1Подр1_3_1");
	РазделыПоказателей.Вставить("П11132", "Раздел1Прил1Подр1_3_2");
	РазделыПоказателей.Вставить("П00111", "Раздел1Прил1_1");
	РазделыПоказателей.Вставить("П00011", "Раздел1Прил1");
	РазделыПоказателей.Вставить("П00012", "Раздел1Прил2");
	РазделыПоказателей.Вставить("П00013", "Раздел1Прил3");
	РазделыПоказателей.Вставить("П00014", "Раздел1Прил4");
	РазделыПоказателей.Вставить("П00015", "Раздел1Прил5");
	РазделыПоказателей.Вставить("П00151", "Раздел1Прил5_1");
	РазделыПоказателей.Вставить("П00016", "Раздел1Прил6");
	РазделыПоказателей.Вставить("П00017", "Раздел1Прил7");
	РазделыПоказателей.Вставить("П00018", "Раздел1Прил8");
	РазделыПоказателей.Вставить("П00019", "Раздел1Прил9");
	РазделыПоказателей.Вставить("П00002", "Раздел2");
	РазделыПоказателей.Вставить("П00021", "Раздел2");
	РазделыПоказателей.Вставить("П02", "Лист02");
	РазделыПоказателей.Вставить("П23", "Лист02_3");
	
	ДанныеКС.Вставить("РазделыПоказателей", РазделыПоказателей);
	
	#КонецОбласти

#Область ФормированиеТаблицРазделов
	
	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(14));
	ТипСтрока2	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(2));
	ТипСтрока4	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4));
	ТипЧисло	= Новый ОписаниеТипов("Число");
	ТипПрим		= Новый ОписаниеТипов("Строка, Число, Дата",,,, Новый КвалификаторыСтроки(30));
	ТипРО		= Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет");

	ТаблицаСводныхДанных = Новый ТаблицаЗначений;
	ТаблицаСводныхДанных.Колонки.Добавить("Раздел"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("ТабЧасть"	, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Строка_"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Графа"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаСводныхДанных.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("МесСтр"		, ТипСтрока2);
	ТаблицаСводныхДанных.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("Значение_"	, ТипПрим);
	
	ТаблицаПерсДанных310 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных310.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Снилс"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Фамилия"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных310.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаПерсДанных310.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаПерсДанных310.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Аннуляция"	, ТипСтрока);
	
	ТаблицаПерсДанных321 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных321.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных321.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("Код"			, ТипСтрока2);
	ТаблицаПерсДанных321.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("МесСтр"		, ТипСтрока2);
	ТаблицаПерсДанных321.Колонки.Добавить("Ставка"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С130"		, ТипСтрока4);
	ТаблицаПерсДанных321.Колонки.Добавить("С140"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С150"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С160"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С170"		, ТипЧисло);
	
	ТаблицаПерсДанных322 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных322.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных322.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("Код"			, ТипСтрока2);
	ТаблицаПерсДанных322.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("Ставка"		, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("С190"		, ТипСтрока);
	ТаблицаПерсДанных322.Колонки.Добавить("С200"		, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("С210"		, ТипЧисло);
	
	ТаблицаПриложения900 = Новый ТаблицаЗначений;
	ТаблицаПриложения900.Колонки.Добавить("Графа"		, ТипСтрока);
	ТаблицаПриложения900.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаПриложения900.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Квартал"		, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаПриложения900.Колонки.Добавить("Значение_"	, ТипЧисло);
	
	ДанныеКС.Вставить("ТаблицаСводныхДанных"			, ТаблицаСводныхДанных);
	ДанныеКС.Вставить("ТаблицаПерсДанных310"			, ТаблицаПерсДанных310);
	ДанныеКС.Вставить("ТаблицаПерсДанных321"			, ТаблицаПерсДанных321);
	ДанныеКС.Вставить("ТаблицаПерсДанных322"			, ТаблицаПерсДанных322);
	ДанныеКС.Вставить("ТаблицаПриложения900"			, ТаблицаПриложения900);
	
#КонецОбласти

КонецПроцедуры

Процедура ЗаполнитьТаблицыРазделов2021(Знач СтруктураПараметров, ЗаполнитьТолько3Раздел)
	
	ДанныеОтчета = СохраненныеДанныеОтчета(СтруктураПараметров.ИмяФормы,
											СтруктураПараметров.СтруктураРеквизитовФормы,
											СтруктураПараметров.СтруктураМнРазделов);
	
	СтруктураПолей	= Новый Структура("Отчет, Вид, Мес, МесСтр");
	ЗаполнитьЗначенияСвойств(СтруктураПолей, СтруктураПараметров);
	СтруктураПолей.МесСтр = Строка(СтруктураПолей.Мес);
	
	ЗаполнитьТаблицуРазд3_2021(СтруктураПараметров, ДанныеОтчета);
	
	Если ЗаполнитьТолько3Раздел Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуПрил9_2021(СтруктураПараметров, ДанныеОтчета);
	
	Если ДанныеКС.ТекОтчет = СтруктураПараметров.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка Тогда
		ДанныеКС.Вставить("ТипПлательщика1", 
			СокрЛП(ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].Данные.П000010000101) = "1");
	КонецЕсли;
	
	Для Каждого Раздел Из ДанныеОтчета.ДанныеМногоуровневыхРазделов Цикл
		Если Раздел.Ключ = "Раздел3" Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоСтраниц = Раздел.Значение.Строки.Количество();
		Для Счетчик = 1 По КоличествоСтраниц Цикл
			СтруктураПолей.Вставить("Страница", Счетчик);
			ЗаполнитьТаблицуПоказателейИзЭлемента2021(Раздел.Значение.Строки[Счетчик - 1],  СтруктураПолей);
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуРазд3_2021(СтруктураПараметров, ДанныеОтчета)
	
	Перем ЛимитСотрудников;
	Перем КэшКатегории321, КэшКода321, КэшСтавки321;
	Перем КэшКатегории322, КэшКода322, КэшСтавки322;
	
	Раздел310		= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3.Строки;
	КоличествоР310	= Раздел310.Количество();
	
	Если СтруктураПараметров.Свойство("ЛимитСотрудников", ЛимитСотрудников) Тогда
		СтруктураПараметров.Вставить("ПриоритетПроизводительности", КоличествоР310 > ЛимитСотрудников);
	КонецЕсли;
	
	Для НомерСтраницы = 1 По КоличествоР310 Цикл
		
		// заполнение подраздела 3.1 раздела 3
		НоваяСтрока310 = ДанныеКС.ТаблицаПерсДанных310.Добавить();
		ДанныеСтраницы = Раздел310[НомерСтраницы - 1].Данные;
		НоваяСтрока310.Аннуляция	= ДанныеСтраницы.П000030001001;
		НоваяСтрока310.Снилс		= СокрЛП(ДанныеСтраницы.П000310003001);
		НоваяСтрока310.Фамилия		= СокрЛП(ДанныеСтраницы.П000310004001);
		НоваяСтрока310.Страница		= НомерСтраницы;
		НоваяСтрока310.Мес			= СтруктураПараметров.Мес;
		НоваяСтрока310.Вид			= СтруктураПараметров.Вид;
		НоваяСтрока310.Отчет		= СтруктураПараметров.Отчет;
		НоваяСтрока310.Ключ			= "" + НоваяСтрока310.Мес + НоваяСтрока310.Вид + НоваяСтрока310.Страница;
		
		// заполнение подраздела 3.2.1 раздела 3
		Раздел321		= Раздел310[НомерСтраницы - 1].ДанныеМногострочныхЧастей.П00321М1.Строки;
		Количество321	= Раздел321.Количество();
		Для НомерСтроки	= 1 По Количество321 Цикл
			ДанныеСтраницы			= Раздел321[НомерСтроки - 1].Данные;
			НоваяСтрока321			= ДанныеКС.ТаблицаПерсДанных321.Добавить();
			НоваяСтрока321.Ключ		= НоваяСтрока310.Ключ;
			НоваяСтрока321.СтрокаТЧ	= НомерСтроки;
			НоваяСтрока321.Мес		= ?(ДанныеСтраницы.П00321М112001 = "", 0, 
				СтруктураПараметров.Мес - 3 + Число(ДанныеСтраницы.П00321М112001));
			НоваяСтрока321.МесСтр	= Строка(НоваяСтрока321.Мес);
			НоваяСтрока321.С130		= ДанныеСтраницы.П00321М113001;
			НоваяСтрока321.С140		= ДанныеСтраницы.П00321М114001;
			НоваяСтрока321.С150		= ДанныеСтраницы.П00321М115001;
			НоваяСтрока321.С160		= ДанныеСтраницы.П00321М116001;
			НоваяСтрока321.С170		= ДанныеСтраницы.П00321М117001;
			
			Если НоваяСтрока321.С130 = КэшКатегории321 Тогда
				НоваяСтрока321.Код		= КэшКода321;
				НоваяСтрока321.Ставка	= КэшСтавки321;
			Иначе
				КодКатегории			= ДанныеКС.Категории321.Найти(НоваяСтрока321.С130, "Категория");
				НоваяСтрока321.Код		= ?(КодКатегории = Неопределено, "", КодКатегории.Код);
				Ставка					= ДанныеКС.Ставки321.Найти(НоваяСтрока321.Код, "Код");
				НоваяСтрока321.Ставка	= ?(Ставка = Неопределено, 0, Ставка.Ставка);
				КэшКатегории321			= НоваяСтрока321.С130;
				КэшКода321				= НоваяСтрока321.Код;
				КэшСтавки321			= НоваяСтрока321.Ставка;
			КонецЕсли;
		КонецЦикла;
		
		// заполнение подраздела 3.2.2 раздела 3
		Раздел322		= Раздел310[НомерСтраницы - 1].ДанныеМногострочныхЧастей.П00322М1.Строки;
		Количество322	= Раздел322.Количество();
		Для НомерСтроки	= 1 По Количество322 Цикл
			ДанныеСтраницы			= Раздел322[НомерСтроки - 1].Данные;
			НоваяСтрока322			= ДанныеКС.ТаблицаПерсДанных322.Добавить();
			НоваяСтрока322.Ключ		= НоваяСтрока310.Ключ;
			НоваяСтрока322.СтрокаТЧ	= НомерСтроки;
			НоваяСтрока322.Мес		= ?(ДанныеСтраницы.П00322М118001 = "", 0, 
				СтруктураПараметров.Мес - 3 + Число(ДанныеСтраницы.П00322М118001));
			НоваяСтрока322.С190		= ДанныеСтраницы.П00322М119001;
			НоваяСтрока322.С200		= ДанныеСтраницы.П00322М120001;
			НоваяСтрока322.С210		= ДанныеСтраницы.П00322М121001;
			
			Если НоваяСтрока322.С190 = КэшКатегории322 Тогда
				НоваяСтрока322.Код		= КэшКода322;
				НоваяСтрока322.Ставка	= КэшСтавки322;
			Иначе
				КодКатегории 			= ДанныеКС.Категории322.Найти(НоваяСтрока322.С190, "Категория");
				НоваяСтрока322.Код		= ?(КодКатегории = Неопределено, "", КодКатегории.Код);
				Ставка					= ДанныеКС.Ставки322.Найти(НоваяСтрока322.Код, "Код");
				НоваяСтрока322.Ставка	= ?(Ставка = Неопределено, 0, Ставка.Ставка);
				КэшКатегории322			= НоваяСтрока322.С190;
				КэшКода322				= НоваяСтрока322.Код;
				КэшСтавки322			= НоваяСтрока322.Ставка;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуПрил9_2021(СтруктураПараметров, ДанныеОтчета)
	
	Приложение900	= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1Прил9.Строки;
	КоличествоП900	= Приложение900.Количество();
	Для НомерСтраницы = 1 По КоличествоП900 Цикл
		Для НомерГрафы = 2 По 4 Цикл
		
			НоваяСтрока900 = ДанныеКС.ТаблицаПриложения900.Добавить();
			ДанныеСтраницы = Приложение900[НомерСтраницы - 1].Данные;
			НоваяСтрока900.Отчет		= СтруктураПараметров.Отчет;
			НоваяСтрока900.Вид			= СтруктураПараметров.Вид;
			НоваяСтрока900.Квартал		= СтруктураПараметров.Мес;
			НоваяСтрока900.Мес			= СтруктураПараметров.Мес + НомерГрафы - 4;
			НоваяСтрока900.Страница		= НомерСтраницы;
			НоваяСтрока900.Графа		= "0" + НомерГрафы;
			НоваяСтрока900.Значение_	= ДанныеСтраницы["П0001900010" + НоваяСтрока900.Графа];
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуПоказателейИзЭлемента2021(Элемент, СтруктураПараметров)
	
	Если Не Элемент.Данные = Неопределено Тогда
		Для каждого Показатель Из Элемент.Данные Цикл
			ЗаполнитьДанныеПоказателя2021(Показатель, СтруктураПараметров);
		КонецЦикла;	
	КонецЕсли;
	
	Если Не Элемент.ДанныеМногострочныхЧастей = Неопределено Тогда
		Для каждого МнЧасть Из Элемент.ДанныеМногострочныхЧастей Цикл
			КоличествоСтрок = МнЧасть.Значение.Строки.Количество();
			Для Счетчик = 1 По КоличествоСтрок Цикл
				СтруктураПараметров.Вставить("СтрокаТЧ", Счетчик);
				ЗаполнитьТаблицуПоказателейИзЭлемента2021(МнЧасть.Значение.Строки[Счетчик - 1], СтруктураПараметров);
			КонецЦикла; 
			СтруктураПараметров.Вставить("СтрокаТЧ", 0);
		КонецЦикла;	
	КонецЕсли;	
	
	Если Не Элемент.Строки = Неопределено Тогда
		Для каждого СтрокаДерева Из Элемент.Строки Цикл
			ЗаполнитьТаблицуПоказателейИзЭлемента2021(СтрокаДерева, СтруктураПараметров);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоказателя2021(Показатель, СтруктураПараметров)
	
	СтруктураПараметров.Вставить("Раздел"			, Лев(Показатель.Ключ, 6));
	СтруктураПараметров.Вставить("ТабЧасть"			, Сред(Показатель.Ключ, 7, 2));
	СтруктураПараметров.Вставить("Строка_"			, Сред(Показатель.Ключ, 9, 3));
	СтруктураПараметров.Вставить("Графа"			, Сред(Показатель.Ключ, 12, 2));
	СтруктураПараметров.Вставить("Значение_"		, Показатель.Значение);
	
	НоваяСтрока	= ДанныеКС.ТаблицаСводныхДанных.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПараметров);
	
КонецПроцедуры

Процедура ПолучитьДанныеОтчетовПредыдущихПериодов2021()
	
	Перем СтруктураРеквизитов;
	Перем СтруктураРазделов;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			, ДанныеКС.Организация);
	Запрос.УстановитьПараметр("ГодОтчета"			, ДанныеКС.Год);
	Запрос.УстановитьПараметр("МесяцОтчета"			, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("НомерКорректировки"	, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МЕСЯЦ(ДокументРО.ДатаОкончания) КАК Мес,
	|	ДокументРО.ДатаОкончания КАК ДатаОкончания,
	|	ДокументРО.Вид КАК Вид,
	|	ДокументРО.Ссылка КАК Отчет,
	|	ДокументРО.ВыбраннаяФорма КАК ИмяФормы
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК ДокументРО
	|ГДЕ
	|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетРасчетПоСтраховымВзносам""
	|	И ДокументРО.Организация = &Организация
	|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
	|	И МЕСЯЦ(ДокументРО.ДатаОкончания) <= &МесяцОтчета
	|	И ВЫБОР
	|			КОГДА МЕСЯЦ(ДокументРО.ДатаОкончания) = &МесяцОтчета
	|				ТОГДА ДокументРО.Вид < &НомерКорректировки
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ ДокументРО.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мес УБЫВ,
	|	Вид
	|ИТОГИ
	|	МАКСИМУМ(Вид)
	|ПО
	|	Мес";
	
	Результат			= Запрос.Выполнить();
	ВыборкаПериод		= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоЦиклов	= ДанныеКС.Мес / 3 - 1;
	
	Для Счетчик = 0 По КоличествоЦиклов Цикл
		
		Если ВыборкаПериод.НайтиСледующий(Новый Структура("Мес", ДанныеКС.Мес - Счетчик * 3)) Тогда
			Выборка = ВыборкаПериод.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				СтруктураПараметров = Новый Структура("Отчет, Вид, Мес, ИмяФормы");
				ЗаполнитьЗначенияСвойств(СтруктураПараметров, Выборка);
				
				СформироватьСтруктуруРеквизитовФормы(Выборка.ИмяФормы	, СтруктураРеквизитов);
				СтруктураРеквизитов.мСохраненныйДок = Выборка.Отчет;
				ИнициализироватьМногострочныеЧасти(Выборка.ИмяФормы		, СтруктураРеквизитов);	
				ИнициализироватьМногоуровневыеРазделы(Выборка.ИмяФормы	, СтруктураРеквизитов, СтруктураРазделов);
				СтруктураПараметров.Вставить("СтруктураРеквизитовФормы"	, СтруктураРеквизитов);
				СтруктураПараметров.Вставить("СтруктураМнРазделов"		, СтруктураРазделов);
				
				ЗаполнитьТолькоРаздел3 = Счетчик = 0 ИЛИ НЕ ВыборкаПериод.Вид = Выборка.Вид;
				ЗаполнитьТаблицыРазделов2021(СтруктураПараметров			, ЗаполнитьТолькоРаздел3);
			КонецЦикла;
		КонецЕсли;
			
		ВыборкаПериод.Сбросить();
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьВременныеТаблицы2021()
	
	ВремТаблицы		= Новый МенеджерВременныхТаблиц;
	СхемаЗапроса	= Новый СхемаЗапроса;
	
	ИменаТаблиц		= Новый Структура;
	ИменаТаблиц.Вставить("ТаблицаСводныхДанных"	, "Т_100");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных310"	, "Т_310_Все");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных321"	, "Т_321_Все");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных322"	, "Т_322_Все");
	ИменаТаблиц.Вставить("ТаблицаПриложения900"	, "Т_900");
	
	// Формирование временных таблиц с данными разделов
	Для каждого Таблица Из ИменаТаблиц Цикл
		Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
		Оператор	= Пакет.Операторы[0];
		ОписаниеВТ	= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), "&" + Таблица.Значение);
		Пакет.ТаблицаДляПомещения = "В" + Таблица.Значение;
		
		Для каждого Колонка Из ДанныеКС[Таблица.Ключ].Колонки Цикл
			ОписаниеВТ.Источник.ДоступныеПоля.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Для каждого ДоступноеПоле Из ОписаниеВТ.Источник.ДоступныеПоля Цикл
			Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
		КонецЦикла;
	КонецЦикла;
	
	Пакет100 = СхемаЗапроса.ПакетЗапросов.Получить(1);
	Пакет100.Индекс.Добавить("Раздел");
	Пакет100.Индекс.Добавить("Строка_");
	
	// Удаление страниц с повторяющимися и аннулированными СНИЛС из Раздела 3
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения	= "ВТ_310_Отбор";
	Оператор	= Пакет.Операторы[0];
	ВТ_Отбора	= Оператор.Источники.Добавить("ВТ_310_Все");
	Оператор.ВыбираемыеПоля.Добавить("Мес", 0);
	Оператор.ВыбираемыеПоля.Добавить("Снилс", 1);
	Оператор.ВыбираемыеПоля.Добавить("МАКСИМУМ(Вид)", 2);
	Пакет.Колонки[2].Псевдоним	= "Вид";
	Оператор.Группировка.Добавить("Мес");
	Оператор.Группировка.Добавить("Снилс");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения	= "ВТ_310";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_310_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310_Отбор");
	ВТ_Раздела.Соединения.Добавить("ВТ_310_Отбор", "ВТ_310_Все.Снилс = ВТ_310_Отбор.Снилс 
		|И ВТ_310_Все.Мес = ВТ_310_Отбор.Мес И ВТ_310_Все.Вид = ВТ_310_Отбор.Вид");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Оператор.Отбор.Добавить("НЕ ВТ_310_Все.Аннуляция = ""1""");
	Пакет.Индекс.Добавить("Ключ");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения = "ВТ_321";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_321_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310");
	ВТ_Раздела.Соединения.Добавить("ВТ_310", "ВТ_321_Все.Ключ = ВТ_310.Ключ");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Пакет.Индекс.Добавить("Ключ");
	Пакет.Индекс.Добавить("Мес");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения = "ВТ_322";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_322_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310");
	ВТ_Раздела.Соединения.Добавить("ВТ_310", "ВТ_322_Все.Ключ = ВТ_310.Ключ");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Пакет.Индекс.Добавить("Ключ");
	Пакет.Индекс.Добавить("Мес");
	
	// Удаление отработавших таблиц отборов
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_310_Все";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_310_Отбор";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_321_Все";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_322_Все";
	
	// Выполнение запроса
	Запрос			= Новый Запрос;
	Запрос.Текст	= СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.МенеджерВременныхТаблиц = ВремТаблицы;
	
	Запрос.УстановитьПараметр("Т_100"		, ДанныеКС.ТаблицаСводныхДанных);
	Запрос.УстановитьПараметр("Т_310_Все"	, ДанныеКС.ТаблицаПерсДанных310);
	Запрос.УстановитьПараметр("Т_321_Все"	, ДанныеКС.ТаблицаПерсДанных321);
	Запрос.УстановитьПараметр("Т_322_Все"	, ДанныеКС.ТаблицаПерсДанных322);
	Запрос.УстановитьПараметр("Т_900"		, ДанныеКС.ТаблицаПриложения900);
	
	Запрос.Выполнить();
	
	ДанныеКС.Вставить("ВременныеТаблицы"		, ВремТаблицы);
	ДанныеКС.ТаблицаСводныхДанных.Очистить();
	ДанныеКС.ТаблицаПерсДанных310.Очистить();
	ДанныеКС.ТаблицаПерсДанных321.Очистить();
	ДанныеКС.ТаблицаПерсДанных322.Очистить();

	ДанныеКС.Вставить("Р01111Заполнен"		, РазделЗаполнен2021("П01111"));
	ДанныеКС.Вставить("Р01112Заполнен"		, РазделЗаполнен2021("П01112"));
	ДанныеКС.Вставить("Р11131Заполнен"		, РазделЗаполнен2021("П11131"));
	ДанныеКС.Вставить("Р11132Заполнен"		, РазделЗаполнен2021("П11132"));
	ДанныеКС.Вставить("Р00111Заполнен"		, РазделЗаполнен2021("П00111"));
	ДанныеКС.Вставить("Р00012Заполнен"		, РазделЗаполнен2021("П00012"));
	ДанныеКС.Вставить("Р00013Заполнен"		, РазделЗаполнен2021("П00013"));
	ДанныеКС.Вставить("Р00014Заполнен"		, РазделЗаполнен2021("П00014"));
	ДанныеКС.Вставить("Р00015Заполнен"		, РазделЗаполнен2021("П00015"));
	ДанныеКС.Вставить("Р00151Заполнен"		, РазделЗаполнен2021("П00151"));
	ДанныеКС.Вставить("Р00016Заполнен"		, РазделЗаполнен2021("П00016"));
	ДанныеКС.Вставить("Р00017Заполнен"		, РазделЗаполнен2021("П00017"));
	ДанныеКС.Вставить("Р00018Заполнен"		, РазделЗаполнен2021("П00018"));
	ДанныеКС.Вставить("Р00019Заполнен"		, РазделЗаполнен2021("П00019"));
	ДанныеКС.Вставить("Р00002Заполнен"		, РазделЗаполнен2021("П00002"));
	ДанныеКС.Вставить("Р00021Заполнен"		, РазделЗаполнен2021("П00021"));
	
КонецПроцедуры

// Процедуры межформенных КС РСВ - Прибыль

Процедура ПолучитьСсылкуНаОтчетПрибыль()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			, ДанныеКС.Организация);
	Запрос.УстановитьПараметр("ГодОтчета"			, ДанныеКС.Год);
	Запрос.УстановитьПараметр("МесяцОтчета"			, ДанныеКС.Мес);
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МЕСЯЦ(ДокументРО.ДатаОкончания) КАК Мес,
	|	ДокументРО.ДатаОкончания КАК ДатаОкончания,
	|	ДокументРО.Вид КАК Вид,
	|	ДокументРО.Ссылка КАК Отчет,
	|	ДокументРО.ВыбраннаяФорма КАК ИмяФормы
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК ДокументРО
	|ГДЕ
	|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетПрибыль""
	|	И ДокументРО.Организация = &Организация
	|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
	|	И МЕСЯЦ(ДокументРО.ДатаОкончания) = &МесяцОтчета
	|	И НЕ ДокументРО.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Вид УБЫВ";
	
	Результат			= Запрос.Выполнить();
	Выборка 			= Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеКС.Вставить("ОтчетПрибыль", Выборка.Отчет);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьДанныеОтчетаПрибыль()
	
	Если НЕ ДанныеКС.ОтчетПрибыль = Неопределено Тогда
		ИсходнаяСтруктура = ДанныеКС.ОтчетПрибыль.ДанныеОтчета.Получить();
		
		Если ТипЗнч(ИсходнаяСтруктура) = Тип("Структура") И ИсходнаяСтруктура.Свойство("ДанныеМногоуровневыхРазделов") Тогда
			Для каждого Раздел Из ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов Цикл
				
				Если НЕ Раздел.Ключ = "Лист02" Тогда
					Продолжить;
				КонецЕсли;
				
				ДанныеКС.Вставить("КолвоСтраниц" + Раздел.Ключ, Раздел.Значение.Строки.Количество());
				МассивСтраниц = Новый Массив;
				РазделЗаполнен = Ложь;
				
				Для каждого СтраницаРаздела Из Раздел.Значение.Строки Цикл
					
					ДанныеСтраницы = Новый Структура;
					ДанныеСтраницы.Вставить("Страница", XMLСтрока(Раздел.Значение.Строки.Индекс(СтраницаРаздела) + 1));
					ПолучитьДанныеСтраницыПрибыль(ДанныеСтраницы, СтраницаРаздела, 
						Новый Структура("Наименование, Уровень", Раздел.Ключ, 1),
						Новый Структура("Уровень", ""));
					МассивСтраниц.Добавить(ДанныеСтраницы);
					РазделЗаполнен = РазделЗаполнен ИЛИ ЗначениеЗаполнено(ДанныеСтраницы.ПризнакВключения);
					
				КонецЦикла;
				
				ДанныеКС.Вставить("Прибыль_" + Раздел.Ключ, МассивСтраниц);
				ДанныеКС.Вставить("Прибыль_РазделЗаполнен_" + Раздел.Ключ, РазделЗаполнен);
				ДанныеКС.Вставить("ОтчетПрибыльДанныеПолучены", Истина);
				
			КонецЦикла;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПолучитьДанныеСтраницыПрибыль(СтруктураПриемник, 
									СтруктураИсточник, 
									Знач ВходящийРаздел, 
									Знач ВходящаяМнЧасть)
	
	Если НЕ ЗначениеЗаполнено(ВходящаяМнЧасть.Уровень) Тогда
		Для каждого Элемент Из СтруктураИсточник.Данные Цикл
			СтруктураПриемник.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Для каждого МнЧасть Из СтруктураИсточник.ДанныеМногострочныхЧастей Цикл
		Для каждого СтрокаМнЧасти Из МнЧасть.Значение.Строки Цикл
			
			НомерСтроки = МнЧасть.Значение.Строки.Индекс(СтрокаМнЧасти) + 1;
			СтруктураПриемник.Вставить("КолвоСтрок" + МнЧасть.Ключ + ВходящаяМнЧасть.Уровень, 
				МнЧасть.Значение.Строки.Количество());
			Для каждого ПоказательСтроки Из СтрокаМнЧасти.Данные Цикл
				СтруктураПриемник.Вставить(ПоказательСтроки.Ключ + ВходящаяМнЧасть.Уровень + "_" + XMLСтрока(НомерСтроки), 
					ПоказательСтроки.Значение);
			КонецЦикла;
			
			Если НЕ СтрокаМнЧасти.ДанныеМногострочныхЧастей.Количество() = 0 Тогда
				ПолучитьДанныеСтраницыПрибыль(СтруктураПриемник, СтрокаМнЧасти, ВходящийРаздел,
					Новый Структура("Уровень", "_" +  XMLСтрока(НомерСтроки)));
			КонецЕсли;
				
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ СтруктураИсточник.Строки.Количество() = 0 Тогда
		Если ВходящийРаздел.Наименование = "Лист02" И ВходящийРаздел.Уровень = 1 Тогда
			Для каждого ПриложениеКЛисту02 Из СтруктураИсточник.Строки Цикл
				
				ИндексПриложения = СтруктураИсточник.Строки.Индекс(ПриложениеКЛисту02);
				
				Если НЕ ИндексПриложения = 2 Тогда
					Продолжить;
				КонецЕсли; 
				
				КлючПриложения = "Лист02_3";
				СтруктураПриемник.Вставить("КолвоСтраниц" + КлючПриложения, ПриложениеКЛисту02.Строки.Количество());
				МассивСтраниц = Новый Массив;
				РазделЗаполнен = Ложь;
				
				Для каждого СтраницаПриложения Из ПриложениеКЛисту02.Строки Цикл
			
					ДанныеСтраницы = Новый Структура;
					ДанныеСтраницы.Вставить("Страница", СтруктураПриемник.Страница + "," + (ИндексПриложения + 1) + "," +
						XMLСтрока(ПриложениеКЛисту02.Строки.Индекс(СтраницаПриложения) + 1));
					ПолучитьДанныеСтраницыПрибыль(ДанныеСтраницы, СтраницаПриложения, 
						Новый Структура("Наименование, Уровень", КлючПриложения, 2),
						Новый Структура("Уровень", ""));
					МассивСтраниц.Добавить(ДанныеСтраницы);
					ДанныеСтраницы.Вставить("РазделЗаполнен_" + КлючПриложения, ЗначениеЗаполнено(ДанныеСтраницы.ПризнакВключения));
					РазделЗаполнен = РазделЗаполнен ИЛИ ЗначениеЗаполнено(ДанныеСтраницы.ПризнакВключения);
					
				КонецЦикла;
				СтруктураПриемник.Вставить(КлючПриложения, МассивСтраниц);
				СтруктураПриемник.Вставить("РазделЗаполнен_" + КлючПриложения, РазделЗаполнен);
			КонецЦикла;
			
			СтруктураПриемник.Вставить("Лист02_3"	, СтруктураПриемник.Лист02_3[0]);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ТарифЗаполнен(ЗначениеТарифа)
	
	ТарифЗаполнен = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КодТарифа = ЗначениеТарифа Тогда
			ТарифЗаполнен = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТарифЗаполнен;
		
КонецФункции

#КонецОбласти

#Область КС_Сервис

Процедура ЗарегистрироватьФормулу2021(Знач Настройки);

	СчетчикФормулДляРасшифровок
					= СчетчикФормулДляРасшифровок + 1;
	НовСтр			= СписокРасшифровкиФормулы.Добавить();
	НовСтр.ТекстовоеПредставлениеФормулы
					= Настройки.ОписаниеКС;
	НовСтр.Номер	= СчетчикФормулДляРасшифровок;
	
КонецПроцедуры

Процедура ВнестиПоказательВРасшифровку2021(Источник, Показатель)
	
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	
	НоваяСтрока.ИмяПоказателя			= ?(Показатель.Многострочный, 
		Показатель.ИмяПоказателя + XMLСтрока(Источник.НомерСтроки), Показатель.ИмяПоказателя);
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
		Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	НоваяСтрока.ИмяСтраницы				= Показатель.ИмяСтраницы;
	
	НоваяСтрока.СсылкаНаДокументРО		= ?(ЗначениеЗаполнено(Источник.Отчет), 
		Источник.Отчет, ДанныеКС.ТекОтчет);
	НоваяСтрока.Страница				= XMLСтрока(Источник.Страница);
	НоваяСтрока.ЗначениеПоказателя		= Источник[Показатель.ИмяВИсточнике];
	
КонецПроцедуры

Процедура ВнестиПоказательБезРасшифровки2021(Представление, ЗначениеПоказателя)
	
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	НоваяСтрока.ПредставлениеПоказателя = Представление;
	НоваяСтрока.ЗначениеПоказателя		= ЗначениеПоказателя;
		
КонецПроцедуры

Процедура ДополнитьСтруктуруОшибок2021(Настройки)
	
	Если Настройки.ЭтоОшибка Тогда
		ДанныеКС.КолОшибок = ДанныеКС.КолОшибок + 1;
	Иначе
		ДанныеКС.КолНеОшибок = ДанныеКС.КолНеОшибок + 1;
	КонецЕсли;
	
	Счетчик		= XMLСтрока(ДанныеКС.КолОшибок + ДанныеКС.КолНеОшибок);
	ОписаниеКС	= СформироватьОписаниеКС2021(Настройки, "ДопИнфо");
	
	ДанныеКС.Результат.Вставить("ТекстовоеПредставлениеФормулы" + Счетчик, ОписаниеКС);
	ДанныеКС.Результат.Вставить("Расшифровка"	+ Счетчик, Настройки.Расшифровка);
	ДанныеКС.Результат.Вставить("ЭтоОшибка"		+ Счетчик, Настройки.ЭтоОшибка);
	ДанныеКС.Результат.Вставить("Нарушение"		+ Счетчик, Настройки.Нарушение);
	ДанныеКС.Результат.Вставить("Описание"		+ Счетчик, Настройки.ОписаниеОшибки);
	ДанныеКС.Результат.Вставить("Комментарий"	+ Счетчик, Настройки.Комментарий);
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей)
	
	Перем ИндексРаздела;
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		ИндексРаздела		= Лев(Элемент.Значение, 6);
		ПодстрокаРаздела	= ДанныеКС.ПредставлениеРазделов[ИндексРаздела];
		ПодстрокаСтроки		= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы		= Сред(Элемент.Значение, 12, 2);
		Представление		= "Графа " + ПодстрокаГрафы + " строка " + ПодстрокаСтроки + " " + ПодстрокаРаздела;
		Многострочный		= СтрДлина(Элемент.Значение) = 14;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, ДанныеКС.РазделыПоказателей[ИндексРаздела]);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет");
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("ИмяВИсточнике"	, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПоказателейТитульный2021(Показатели, ИменаПоказателей)
	
	Перем ИндексРаздела;
	
	ПредставленияПолей = Новый Соответствие;
	ПредставленияПолей.Вставить("ОтчетГод"		, "Титульный лист. Отчетный год");
	ПредставленияПолей.Вставить("ДатаПодписи"	, "Титульный лист. Дата подписи");
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, ПредставленияПолей.Получить(Элемент.Значение));
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, "Титульный");
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет"			, Неопределено);
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Ложь);
		Показатели[Элемент.Ключ].Вставить("ИмяВИсточнике"	, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьНастройки2021(Настройки);
	
	Если НЕ Настройки.Свойство("СчетчикИзменений") Тогда
		
		Настройки.ОписаниеКС = Настройки.ОписаниеКС + НСтр("ru=', когда Тип плательщика в стр.001 Раздела 1 = 1'");
	
	Иначе
	
		Настройки.ЭтоОшибка = Настройки.ЭтоОшибка И ДанныеКС.ТипПлательщика1;
	
	КонецЕсли;

КонецПроцедуры

Функция СформироватьОписаниеКС2021(Знач Настройки, ЗначениеСвойства)
	
	Если ДанныеКС[ЗначениеСвойства] Тогда
		Если ЗначениеЗаполнено(Настройки.ДопСведения) Тогда
				
			Возврат Настройки.ОписаниеКС + " (" + Настройки.ДопСведения + ")"; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Настройки.ОписаниеКС;
	
КонецФункции

Функция ОбработатьНастройки2021(Знач Настройки = Неопределено, Знач ИзменяемыеСвойства)
	
	Если Настройки = Неопределено Тогда
		
		Настройки = Новый Структура;
		Настройки.Вставить("Нарушение"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеКС"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеОшибки"			, (НСтр("ru=''")));
		Настройки.Вставить("Расшифровка"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонРасшифровки"		, (НСтр("ru=''")));
		Настройки.Вставить("ДопСведения"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонДопСведений"		, (НСтр("ru=''")));
		Настройки.Вставить("ЭтоОшибка"				, Ложь);
		Настройки.Вставить("Комментарий");
		Настройки.Вставить("СчетчикИзменений"		, 0);
		Настройки.Вставить("НомерКС");
		Настройки.Вставить("Раздел");
		Настройки.Вставить("Условие");
	
	КонецЕсли;
	
	Если Не ИзменяемыеСвойства = Неопределено Тогда
		Для каждого ЭлементКоллекции Из ИзменяемыеСвойства Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ОписаниеКС = Настройки.Раздел + ". Проверка КС " + Настройки.НомерКС + Символы.ПС + Настройки.ОписаниеКС;
	
	Если Документирование Тогда
		
		Если Настройки.Раздел = "Приложение 3" ИЛИ Настройки.Раздел = "Приложение 4" Тогда
			Настройки.Вставить("Комментарий", (НСтр("ru='Отключено с 2021 (Письмо ФНС от 29.01.2021 № БС-4-11/1020@)'")));
		КонецЕсли; 
		
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, Настройки);
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция ОбработатьРезультат2021(СтруктураПараметров)
	
	СтруктураРезультата = Новый Структура;
	
	СтруктураРезультата.Вставить("СтруктураОшибок", ОбщегоНазначения.СкопироватьРекурсивно(ДанныеКС.Результат));
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок"	, ДанныеКС.КолОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок"	, ДанныеКС.КолНеОшибок);
	СтруктураРезультата.Вставить("СписокРасшифровкиформулы"		, СтруктураПараметров.АдресФормул);
	СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей" , СтруктураПараметров.АдресПоказателей);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция РазделЗаполнен2021(Раздел)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Показатель
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И НЕ ВТ_100.Значение_ = 0
	|	И НЕ ВТ_100.Значение_ = ДАТАВРЕМЯ(1,1,1)
	|	И НЕ ВТ_100.Значение_ = """"
	|	И ВТ_100.Мес = &ОтчетныйМесяц";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ()

Функция ЭтоПострадавшаяОтрасль2021()
	
	Результат = Истина;
	
	ОтраслевойРаздел = СтрРазделить(ДанныеКС.ОКВЭД2, ".")[0];
	
	Если НЕ ДанныеКС.ПострадавшиеОтрасли = Неопределено Тогда
		
		Результат = НЕ ДанныеКС.ПострадавшиеОтрасли.Найти(ОтраслевойРаздел) = Неопределено;
	
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ()

// сервисные процедуры для межформенных КС РСВ - Прибыль

Процедура СформироватьПоказатели2021(Показатели, ИменаПоказателей)
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		МассивПредставления		= Новый Массив;
		ПодстрокаРаздела		= "";
		ПодстрокаСтраницы		= "";
		
		ИндексРаздела			= Сред(Элемент.Ключ, 1, 3);
		ИндексДополнения		= Сред(Элемент.Ключ, 4, 1);
		ПодстрокаСтроки			= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы			= Сред(Элемент.Значение, 13,1);
		
		ДанныеКС.ПредставлениеРазделов.Свойство(ИндексРаздела	, ПодстрокаРаздела);
		ДанныеКС.РазделыПоказателей.Свойство(ИндексРаздела		, ПодстрокаСтраницы);
		
		Если ИндексДополнения	= "С" Тогда
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		ИначеЕсли ИндексДополнения = "Г" Тогда
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
		Иначе
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		КонецЕсли;
		МассивПредставления.Добавить(ПодстрокаРаздела);
		
		Представление			= СтрСоединить(МассивПредставления, " ");
		Многострочный			= СтрДлина(Элемент.Значение) = 14;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("Раздел"			, ИндексРаздела);
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, ПодстрокаСтраницы);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет"			, ДанныеКС.ОтчетПрибыль);
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		Показатели[Элемент.Ключ].Вставить("ЗначениеСтр"		, "");
		Показатели[Элемент.Ключ].Вставить("Итог"			, 0);
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("Округление"		, Ложь);
		Показатели[Элемент.Ключ].Вставить("Синоним"			, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
		Показатели[Элемент.Ключ].Вставить("Расшифровывать"	, Истина);
		Показатели[Элемент.Ключ].Вставить("Инверсия"		, Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура РасшифроватьПоказатель2021(Показатель)
		
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	
	НоваяСтрока.ИмяПоказателя			= Показатель.ИмяПоказателя;
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
	Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	НоваяСтрока.ИмяСтраницы				= Показатель.ИмяСтраницы;
	
	НоваяСтрока.СсылкаНаДокументРО		= ?(ЗначениеЗаполнено(Показатель.Отчет), 
		Показатель.Отчет, ДанныеКС.Отчет);
	НоваяСтрока.Страница				= Показатель.Страница;
	
	Если ТипЗнч(Показатель.Значение) = Тип("Число") Тогда
		НоваяСтрока.ЗначениеПоказателя		= Показатель.Значение;
	Иначе
		НоваяСтрока.ЗначениеПоказателя		= Показатель.ЗначениеСтр;
	КонецЕсли;
	
	Показатель.Дополнение = "";
	
КонецПроцедуры

Процедура ЗаполнитьПоказатель2021(Показатель, Источник, 
								НомерСтроки = Неопределено,
								НомерСтроки2 = Неопределено)
	
	Перем ЗначениеВИсточнике;
	
	Если ТипЗнч(Источник) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) И ЗначениеЗаполнено(НомерСтроки2) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки) + "_" + 
				XMLСтрока(НомерСтроки2);
		ИначеЕсли ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки);
		КонецЕсли;
		
		Если Источник.Свойство(Показатель.ИмяПоказателя, ЗначениеВИсточнике) Тогда
			Показатель.Страница = ?(Источник.Свойство("Страница"), Источник.Страница, 1);
			
			ЗаполнитьПоказательЗначениями2021(Показатель, ЗначениеВИсточнике);
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Источник) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14);
		КонецЕсли;
	
		ЗначениеВИсточнике = Источник[Показатель.ИмяПоказателя];
		Показатель.Страница = Источник.Страница;
			
		ЗаполнитьПоказательЗначениями2021(Показатель, ЗначениеВИсточнике);
			
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Показатель.ИмяПоказателя + Источник.НомерСтроки;
		КонецЕсли;
	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьПоказательЗначениями2021(Показатель, ЗначениеВИсточнике)

	Если ТипЗнч(ЗначениеВИсточнике) = Тип("Число") И Показатель.Округление Тогда
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = Окр(ЗначениеВИсточнике);
		Показатель.Итог = Показатель.Итог + Показатель.Значение;
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Число") Тогда
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.Итог = Показатель.Итог + ЗначениеВИсточнике;
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Строка") Тогда
		Показатель.Значение = СокрЛП(ЗначениеВИсточнике);
		Показатель.ЗначениеСтр = ?(ЗначениеЗаполнено(ЗначениеВИсточнике), Показатель.Значение, "(...)");
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Дата") Тогда
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.ЗначениеСтр = Формат(ЗначениеВИсточнике, "ДФ=dd.MM.yy; ДП=(...)");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатель2021(Показатель, Источник, 
											НомерСтроки = Неопределено,
											НомерСтроки2 = Неопределено)
	
	ЗаполнитьПоказатель2021(Показатель, Источник, НомерСтроки, НомерСтроки2);
		
	Если Показатель.Расшифровывать Тогда
		РасшифроватьПоказатель2021(Показатель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки

#Область Проверки_Раздела_3

Процедура ПроверитьКС2021_0_1а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за 1 квартал'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 квартал отчетного периода: стр.170 (1 месяц ОП) подр. 3.2.1 Р.3 = стр.150 (1 месяц ОП) '") +
		НСтр("ru='х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_1б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за 1 квартал'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 квартал отчетного периода: стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) '") +
		НСтр("ru='+ стр.150 (2 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых '") +
		НСтр("ru='взносов) - стр.170 (1 месяц ОП)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_1в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за 1 квартал'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За 1 квартал отчетного периода: стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) '") +
		НСтр("ru='+ стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. '") +
		НСтр("ru='Р.3 тариф страховых взносов) - (стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_1г()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (1 месяц ОП) подр.3.2.1 Р.3 = '") +
		НСтр("ru='(стр.150 ПОП (с начала расчетного периода) + стр.150 (1 месяц ОП)) х соответствующий значению '") +
		НСтр("ru='стр.130 подр.3.2.1. Р.3 тариф страховых взносов)) -  стр.170 ПОП (с начала расчетного периода)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_1д()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = '") +
		НСтр("ru='(стр.150 ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП)) '") +
		НСтр("ru='х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП '") +
		НСтр("ru='(с начала расчетного периода) + стр.170 (1 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_1е()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.1е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = (стр.150 '") +
		НСтр("ru='ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц '") +
		НСтр("ru='ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП '") +
		НСтр("ru='(с начала расчетного периода) + стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_1_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	ИменаПоказателей.Вставить("Взнос"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.ОписаниеКС = ?(Настройки.Погрешность, 
		Настройки.ОписаниеКС + НСтр("ru=', с учетом погрешности 1 коп.'"), Настройки.ОписаниеКС);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_311.Снилс КАК Снилс,
	|	ВТ_321.С130 КАК С130,
	|	ВТ_321.С170 КАК С170
	|ПОМЕСТИТЬ ВТ_312
	|ИЗ
	|	ВТ_311 КАК ВТ_311
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_311.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.Мес = &ТекущийМесяц
	|	И НЕ ВТ_321.С150 + ВТ_321.С170 = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК СтрокаТЧ,
	|	ВТ_321.Код КАК Код,
	|	ВТ_321.С130 КАК С130,
	|	ВТ_321.Ставка КАК Ставка,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С150 КАК С150,
	|	ВТ_321.С170 КАК С170
	|ПОМЕСТИТЬ ВТ_313
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.Мес <= &ТекущийМесяц
	|	И НЕ ВТ_321.С150 + ВТ_321.С170 = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_313.Фамилия + ВТ_313.Снилс + ВТ_313.Код КАК КлючСортировки,
	|	ВТ_313.Снилс КАК Снилс,
	|	ВТ_313.Фамилия КАК Фамилия,
	|	ВТ_313.Отчет КАК Отчет,
	|	ВТ_313.Страница КАК Страница,
	|	ВТ_313.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_313.Код КАК КодТарифа,
	|	ВТ_313.С130 КАК Категория,
	|	ВТ_313.Ставка КАК Ставка,
	|	ВТ_313.Мес КАК Мес,
	|	ВТ_313.С150 КАК База,
	|	ВТ_313.С170 КАК Взнос,
	|	ВТ_312.С170 КАК ТекущийВзнос
	|ИЗ
	|	ВТ_313 КАК ВТ_313
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_312 КАК ВТ_312
	|		ПО ВТ_313.Снилс = ВТ_312.Снилс
	|			И ВТ_313.С130 = ВТ_312.С130
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	МИНИМУМ(Снилс),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Отчет),
	|	МИНИМУМ(Страница),
	|	МИНИМУМ(Ставка),
	|	СУММА(База),
	|	СУММА(Взнос),
	|	МИНИМУМ(ТекущийВзнос)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_312
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_313";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФ.Следующий() Цикл
		
		Погрешность	= 0.01;
		СуммаВзносовПрошлыхМесяцев = ВыборкаФ.Взнос - ВыборкаФ.ТекущийВзнос;
		Если Настройки.Погрешность Тогда
			РасчетнаяСумма		= ВыборкаФ.База * ВыборкаФ.Ставка / 100 - СуммаВзносовПрошлыхМесяцев;
			РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
			РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
			Настройки.ЭтоОшибка	= ВыборкаФ.ТекущийВзнос < РасчетнаяСуммаМин ИЛИ ВыборкаФ.ТекущийВзнос > РасчетнаяСуммаМак;
		Иначе
			РасчетнаяСумма		= Окр(ВыборкаФ.База * ВыборкаФ.Ставка / 100, 2) - СуммаВзносовПрошлыхМесяцев;
			Настройки.ЭтоОшибка = НЕ ВыборкаФ.ТекущийВзнос = РасчетнаяСумма;
		КонецЕсли;
		
		ДополнитьНастройки2021(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(ВыборкаФ, Показатели.Фамилия);
		С170ПСтр	= "";
		С150ПСтр	= "";
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
	
			С150ПСтр = С150ПСтр + Выборка.База + " + ";
			Если НЕ Выборка.Мес = Настройки.НомерМесяца Тогда
				С170ПСтр = С170ПСтр + " - " + Выборка.Взнос;
			КонецЕсли;
			Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория + ", ставка " 
				+ Выборка.Ставка;
			Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц";
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.База);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Взнос);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаФ.ТекущийВзнос, 
			Лев(С150ПСтр, СтрДлина(С150ПСтр) - 3), ВыборкаФ.Ставка, ?(Выборка.Количество() > 1, С170ПСтр, ""), 
			РасчетнаяСумма, ?(Настройки.Погрешность," (± " + Погрешность + " )",""));
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_2а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.2а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.061 подр.1.1 прил.1 (1 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru='стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_2б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.2б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.061 подр.1.1 прил.1 (2 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru='стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_2в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.2в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.061 подр.1.1 прил.1 (3 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru='стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_2_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, "П0111100061" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя", "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя", "061");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТТарифа.Значение_ = ""10"" ТОГДА ""11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ГруппаТарифов,
	|	ВЫБОР КОГДА ТТарифа.Значение_ В (""10"",""11"") ТОГДА ""10,11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ПредставлениеГруппы,
	|	ТТарифа.Значение_ КАК КодТарифа,
	|	ВЫРАЗИТЬ(ТПоказателя.Значение_ КАК ЧИСЛО) КАК ПоказательР1,
	|	ТПоказателя.Отчет КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|		ПО ТПоказателя.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя.Раздел = &РазделПоказателя
	|	И ТПоказателя.Строка_ = &СтрокаПоказателя
	|	И ТПоказателя.Графа = &НомерГрафы
	|	И ТПоказателя.Мес = &ОтчетныйМесяц
	|	И ТТарифа.Раздел = &РазделТарифа
	|	И ТТарифа.Строка_ = &СтрокаТарифа
	|	И ТТарифа.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаТарифов,
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МАКСИМУМ(ПредставлениеГруппы)
	|ПО
	|	ГруппаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.С130 КАК КлючСортировки,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Категория,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С170 КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И (НЕ ВТ_321.С170 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		Р3Сум	= 0;
		Счетчик = 1;
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР1.Дополнение = "тариф " + Выборка.КодТарифа;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.ГруппаТарифов)) Тогда
			Р3Сум	= ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р3Сум = ВыборкаР1.ПоказательР1 И ДанныеКС.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = ДанныеКС.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
						Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
							+ " => тариф " + ВыборкаР1.ПредставлениеГруппы + ", " + Выборка.Фамилия;
						ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
						Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР1 = Р3Сум;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР1, Р3Сум, 
			ВыборкаР1.ПредставлениеГруппы);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.ПредставлениеГруппы;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_3()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 02(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению'") +
		НСтр("ru=' стр.130 подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_4()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 '") +
		НСтр("ru='подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) + стр.170 ПОП) '") +
		НСтр("ru='подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_5а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.5а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.210 (1 месяц ОП) подр.3.2.2 Р.3 = стр.200 (1 месяц ОП) х соответствующий значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_5_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_5б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.5б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.210 (2 месяц ОП) подр.3.2.2 Р.3 = стр.200 (2 месяц ОП) х соответствующий значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_5_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_5в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.5в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.210 (3 месяц ОП) подр.3.2.2 Р.3 = стр.200 (3 месяц ОП) х соответствующий значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_5_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_5_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("База"	, "П00322М120001_");
	ИменаПоказателей.Вставить("Взнос"	, "П00322М121001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_322.С190 КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Ставка	КАК Ставка,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК База,
	|	ВТ_322.С210		КАК Взнос
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес = &НомерМесяца)
	|			И НЕ (ВТ_322.С200 + ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки";
	
	РезультатЗапроса	= Запрос.Выполнить();
	Выборка				= РезультатЗапроса.Выбрать();
	Погрешность			= 0.005;
	
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма		= Выборка.База * Выборка.Ставка / 100;
		РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
		РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
		Настройки.ЭтоОшибка	= Выборка.Взнос < РасчетнаяСуммаМин ИЛИ Выборка.Взнос > РасчетнаяСуммаМак;
		ДополнитьНастройки2021(Настройки);
			
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Фамилия);
		Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, код " + Выборка.Категория + ", ставка " 
			+ Выборка.Ставка;
		Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц";
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.База);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Взнос);
		
		Настройки.Расшифровка = "" + Выборка.Взнос + " = " + Выборка.База + " х " + Выборка.Ставка 
			+ " / 100 Итог [" + РасчетнаяСумма + "]  (± " + Погрешность + " )";
		ДополнитьСтруктуруОшибок2021(Настройки);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.050 подр. 1.3.1 (1 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.050 подр. 1.3.1 (2 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.050 подр. 1.3.1 (3 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6г()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.050 подр. 1.3.2 (1 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6д()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.050 подр. 1.3.2 (2 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6е()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.6е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.050 подр. 1.3.2 (3 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru='стр.190 подр.3.2.2 Р.3 = ∑  стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_6_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, Настройки.Раздел + "М1050" + Настройки.НомерГрафы + "_");
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00322М121001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя", "050");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("СтрокаКода001"	, "001");
	Запрос.УстановитьПараметр("СтрокаКода003"	, "002");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТКода001.Значение_ КАК Строка(1))	КАК Код001,
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК Код003,
	|	Выразить(ТКода001.Значение_ КАК Строка(1)) + 
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК КодТарифа,
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТКода001.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|			И (ТКода001.Раздел		= &Раздел)
	|			И (ТКода001.Строка_		= &СтрокаКода001)
	|			И (ТКода001.Мес			= &ОтчетныйМесяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода003
	|			ПО ТПоказателя.Страница = ТКода003.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода003.СтрокаТЧ
	|			И (ТКода003.Раздел		= &Раздел)
	|			И (ТКода003.Строка_		= &СтрокаКода003)
	|			И (ТКода003.Мес			= &ОтчетныйМесяц)
	|ГДЕ
	|	ТПоказателя.Раздел		= &Раздел
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МИНИМУМ(Код001),
	|	МИНИМУМ(Код003)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_322.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С210		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		Р3Сум	= 0;
		Счетчик = 1;
		
		ДополнениеР1 = "Код основания " + ВыборкаР1.Код001 
			+ ?(ЗначениеЗаполнено(ВыборкаР1.Код003), ", код класса " + ВыборкаР1.Код003, "");
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР1.Дополнение = ДополнениеР1;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.КодТарифа)) Тогда
			Р3Сум	= ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р3Сум = ВыборкаР1.ПоказательР1 И ДанныеКС.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = ДанныеКС.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
						Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., код " + Выборка.Категория 
							+ ", " + Выборка.Фамилия;
						ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
						Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР1 = Р3Сум;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаР1.ПоказательР1);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ВыборкаР1.Код001);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%4", ВыборкаР1.Код003);
		Настройки.ДопСведения	= ДополнениеР1;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_7а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.7а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 06(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.1 по значению поля 001 соответствующему значению стр.190 '") +
		НСтр("ru='подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_7б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.7б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 06(г,д,е)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.2 по значению поля 002 соответствующему значению стр.190 '") +
		НСтр("ru='подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_8а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.8а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.050 подр. 1.3.1  по значению поля 001 соответствующему значению стр.190 подр.3.2.2 Р.3 '") +
		НСтр("ru='= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_8б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.8б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.050 подр. 1.3.2  по значению поля 002 соответствующему значению стр.190 подр.3.2.2 Р.3 '") +
		НСтр("ru='= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_6_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_9а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.9а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020-й год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов за каждый месяц (∑ стр.150 подр.3.2.1 Р.3) по всем '") +
		НСтр("ru='используемым тарифам с начала расчетного периода (за 2020 год) <= 1 292 000'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= 1 292 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2020 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 1292000);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_9_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_9б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.9б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2021-й год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов за каждый месяц (∑ стр.150 подр.3.2.1 Р.3) по всем '") +
		НСтр("ru='используемым тарифам с начала расчетного периода (за 2021 год) <= 1 465 000'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= 1 465 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2021 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 1465000);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_9_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_9_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК База
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &НомерМесяца)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(База),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка = ВыборкаФ.База > Настройки.ПредельнаяВеличина;
		ДополнитьНастройки2021(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория + ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.База);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаФ.База);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_10а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.10а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020-й год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов (стр.170 подр.3.2.1 Р.3 / соответствующий значению стр.130 подр.3.2.1 Р.3 '") +
		НСтр("ru='тариф страховых взносов х 22%) с начала расчетного периода (за 2020 год) должна быть меньше или '") +
		НСтр("ru='равна 284 240, с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 284 240 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2020 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 284240);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru='(%1 / %2 х 22)'"));
	ПроверитьКС2021_0_10_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_10б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.10б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2021-й год'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов (стр.170 подр.3.2.1 Р.3 / соответствующий значению стр.130 подр.3.2.1 Р.3 '") +
		НСтр("ru='тариф страховых взносов х 22%) с начала расчетного периода (за 2021 год) должна быть меньше или '") +
		НСтр("ru='равна 322 300, с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] <= 322 300 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2021 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 322300);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru='(%1 / %2 х 22)'"));
	ПроверитьКС2021_0_10_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_10_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Взнос"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Ставка	КАК Ставка,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С170		КАК Взнос
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &НомерМесяца)
	|			И НЕ (ВТ_321.С170 = 0)
	|			И НЕ (ВТ_321.Ставка = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(Взнос),
	|	МИНИМУМ(Ставка),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки,
	|	Ставка";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаС.Следующий() Цикл
			РасчетнаяСумма	= РасчетнаяСумма + Окр(ВыборкаС.Взнос / ВыборкаС.Ставка * 22, 2);
			Погрешность		= Погрешность + 0.01;
		КонецЦикла;
		
		Настройки.ЭтоОшибка	= РасчетнаяСумма > Настройки.ПредельнаяВеличина + Погрешность;
		ДополнитьНастройки2021(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		МРасшифровки	= Новый Массив;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаС.Следующий() Цикл
			РасчетнаяСумма	= РасчетнаяСумма + Окр(ВыборкаС.Взнос / ВыборкаС.Ставка * 22, 2);
			Погрешность		= Погрешность + 0.01;
			ЭлементРасшифровки	= СтрЗаменить(Настройки.ШаблонРасшифровки2	, "%1", ВыборкаС.Взнос);
			ЭлементРасшифровки	= СтрЗаменить(ЭлементРасшифровки			, "%2", ВыборкаС.Ставка);
			МРасшифровки.Добавить(ЭлементРасшифровки);
		
			Выборка	= ВыборкаС.Выбрать();
			Пока Выборка.Следующий() Цикл
				Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория 
					+ ", ставка " + Выборка.Ставка + ", " + Выборка.Фамилия;
				ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Взнос);
			КонецЦикла;
		КонецЦикла;
		
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", СтрСоединить(МРасшифровки, " + "));
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", РасчетнаяСумма);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_11а() 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.11а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.030 подр.1.1 прил.1 (1 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru='∑ стр.140 (1 месяц ОП) подр.3.2.1 Р.3 + гр.2 стр.010 (1 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_11б() 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.11б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.030 подр.1.1 прил.1 (2 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru='∑ стр.140 (2 месяц ОП) подр.3.2.1 Р.3 + гр.3 стр.010 (2 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_11в() 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.11в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.030 подр.1.1 прил.1 (3 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru='∑ стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + гр.4 стр.010 (3 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_11_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, "П0111100030" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательП8"	, "П0001900010" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М114001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя", "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя", "030");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_900.Отчет		КАК Отчет,
	|	ВТ_900.Мес			КАК Мес,
	|	ВТ_900.Страница		КАК Страница,
	|	ВТ_900.Значение_	КАК ПоказательП8
	|ИЗ
	|	ВТ_900 КАК ВТ_900
	|ГДЕ
	|	ВТ_900.Графа		= &НомерГрафы
	|	И ВТ_900.Мес		<= &ТекущийМесяц
	|	И НЕ ВТ_900.Значение_= 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательП8)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_321.С140 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_900.Графа", ?(Настройки.НомерГрафы = "01", 
		"НЕ ВТ_900.Графа", "ВТ_900.Графа"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП8 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивСуммР1 = Новый Массив;
	МассивСуммР3 = Новый Массив;
	ЗарегистрироватьФормулу2021(Настройки);
	Счетчик = 0;
	Р1Сумм	= 0;
	П8Сумм	= 0;
	Р3Сумм	= 0;
	
	Если ВыборкаР1.Следующий() Тогда
		Р1Сумм	= ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР1.Добавить(Выборка.ПоказательР1);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаП8.Следующий() Тогда
		П8Сумм = ВыборкаП8.ПоказательП8;
		МассивСуммР3.Добавить(ВыборкаП8.ПоказательП8);
		Выборка = ВыборкаП8.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательП8.Дополнение = "" + Выборка.Мес + " мес.";
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательП8);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаР3.Следующий() Тогда
		Р3Сумм = ВыборкаР3.ПоказательР3;
		МассивСуммР3.Добавить(ВыборкаР3.ПоказательР3);
		Если НЕ (Р1Сумм = П8Сумм + Р3Сумм И ДанныеКС.ПриоритетПроизводительности) Тогда
			
			ЛимитРасшифровки = ДанныеКС.ЛимитРасшифровки;
			Выборка	= ВыборкаР3.Выбрать();
			
			Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
				Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
				ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
				Счетчик = Счетчик + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сумм = П8Сумм + Р3Сумм;
	ДополнитьНастройки2021(Настройки);
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР1, " + "), 
		ВыборкаР1.ПоказательР1, СтрСоединить(МассивСуммР3, " + "), П8Сумм + Р3Сумм);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_12() 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 011(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 по всем значениям поля 001 = ∑ стр.140 (1 месяц ОП) + '") +
		НСтр("ru='стр.140 (2 месяц ОП) + стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_13() 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.030 подр.1.1 прил.1 по всем значениям поля 001 = '") +
		НСтр("ru='(стр.140 (1,2,3 месяц) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц) прил.9 Р.1) + '") +
		НСтр("ru='(стр.140 (1,2,3 месяц ПОП) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц ПОП) прил.9 Р.1)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_14а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.14а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.2 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru='значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_14_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_14б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.14б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.3 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru='значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_14_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_14в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.14в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.4 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru='значению поля 001 прил.1 Р.1 соответствующий значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_14_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_14_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3", "П00321М115001_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"			, ?(Настройки.НомерГрафы = "01", "04", Настройки.НомерГрафы));
	Запрос.УстановитьПараметр("ТекущийМесяц"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя"	, "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "050");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "051");
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТТарифа.Значение_ = ""10"" ТОГДА ""11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ГруппаТарифов,
	|	ВЫБОР КОГДА ТТарифа.Значение_ В (""10"",""11"") ТОГДА ""10,11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ПредставлениеГруппы,
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	-Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Графа	<= &НомерГрафы
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Графа	<= &НомерГрафы
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаТарифов,
	|	КодТарифа,
	|	Страница,
	|	Графа
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МАКСИМУМ(ПредставлениеГруппы)
	|ПО
	|	ГруппаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.С130 КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		Р1Сум	= 0;
		Р3Сум	= 0;
		Счетчик	= 1;
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11", "П0111100050" + Выборка.Графа);
			ИменаПоказателей.Вставить("ПоказательР12", "П0111100051" + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			Разность = Выборка.ПоказательР11 + Выборка.ПоказательР12;
			Если Настройки.НомерГрафы = "01" И НЕ Выборка.Графа = "01" Тогда
				Р3Сум = Р3Сум + Разность;
			Иначе
				Р1Сум = Р1Сум + Разность;
			КонецЕсли;
			Показатели.ПоказательР11.Дополнение = "тариф " + Выборка.КодТарифа;
			Показатели.ПоказательР12.Дополнение = "тариф " + Выборка.КодТарифа;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.ГруппаТарифов)) Тогда
			Р3Сум	= Р3Сум + ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р1Сум = Р3Сум И ДанныеКС.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = ДанныеКС.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
					Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
					+ " => тариф " + ВыборкаР1.ПредставлениеГруппы + ", " + Выборка.Фамилия;
					ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
					Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, Р1Сум, Р3Сум, ВыборкаР1.ПредставлениеГруппы);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.ПредставлениеГруппы;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_0_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 014(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.050 подр.1.1 прил.1 р. 1 СВ - (гр.2 + гр.3 + гр.4) стр.051 подр.1.1 прил.1 '") +
		НСтр("ru='р. 1 СВ по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru='(1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.1 стр.051 подр.1.1 прил.1 р. 1 СВ по значению поля '") +
		НСтр("ru='001 соответствующему значению стр.130 подр.3.2.1 Р.3 = гр.2,3,4 стр.050 подр.1.1 прил.1 р. 1 '") +
		НСтр("ru='СВ - гр.2,3,4 стр.051 подр.1.1 прил.1 р. 1 СВ + ∑ (стр.150 (1 месяц ПОП) + стр.150 '") +
		НСтр("ru='(2 месяц ПОП) + стр.150 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2021_0_14_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.040 подр.1.3.1 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 001 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.040 подр.1.3.1 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 001 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.040 подр.1.3.1 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 001 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17г()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.040 подр.1.3.2 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 002 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17д()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.040 подр.1.3.2 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 002 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17е()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.17е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.040 подр.1.3.2 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 002 '") +
		НСтр("ru='соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_17_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00322М120001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, ?(Настройки.НомерГрафы = "01", "04", Настройки.НомерГрафы));
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя", "040");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("СтрокаКода001"	, "001");
	Запрос.УстановитьПараметр("СтрокаКода003"	, "002");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТКода001.Значение_ КАК Строка(1))	КАК Код001,
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК Код003,
	|	Выразить(ТКода001.Значение_ КАК Строка(1)) + 
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК КодТарифа,
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Графа		КАК Графа,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТКода001.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|			И (ТКода001.Раздел		= &Раздел)
	|			И (ТКода001.Строка_		= &СтрокаКода001)
	|			И (ТКода001.Мес			= &ОтчетныйМесяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода003
	|			ПО ТПоказателя.Страница = ТКода003.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода003.СтрокаТЧ
	|			И (ТКода003.Раздел		= &Раздел)
	|			И (ТКода003.Строка_		= &СтрокаКода003)
	|			И (ТКода003.Мес			= &ОтчетныйМесяц)
	|ГДЕ
	|	ТПоказателя.Раздел		= &Раздел
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		<= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МИНИМУМ(Код001),
	|	МИНИМУМ(Код003)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_322.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_322.С200 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		Р1Сум	= 0;
		Р3Сум	= 0;
		Счетчик	= 1;
		
		ДополнениеР1 = "Код основания " + ВыборкаР1.Код001 
			+ ?(ЗначениеЗаполнено(ВыборкаР1.Код003), ", код класса " + ВыборкаР1.Код003, "");
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР1", Настройки.Раздел + "М1040" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			Если Настройки.НомерГрафы = "01" И НЕ Выборка.Графа = "01" Тогда
				Р3Сум = Р3Сум + Выборка.ПоказательР1;
			Иначе
				Р1Сум = Р1Сум + Выборка.ПоказательР1;
			КонецЕсли;
			Показатели.ПоказательР1.Дополнение = ДополнениеР1;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.КодТарифа)) Тогда
			Р3Сум	= Р3Сум + ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р1Сум = Р3Сум И ДанныеКС.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = ДанныеКС.ЛимитРасшифровки;
				
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
					Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., код " + Выборка.Категория 
					+ ", " + Выборка.Фамилия;
					ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
					Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ВыборкаР1.Код001);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%4", ВыборкаР1.Код003);
		Настройки.ДопСведения	= ДополнениеР1;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_0_18а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.18а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 017(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.1 прил.1 р. 1 СВ по значению поля 001 соответствующему '") +
		НСтр("ru='значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 '") +
		НСтр("ru='(3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_18б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.18б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Избыточное, дублирует КС 017(г,д,е)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.2 прил.1 р. 1 СВ по значению поля 002 соответствующему '") +
		НСтр("ru='значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 '") +
		НСтр("ru='(3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_19а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.19а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.040 подразд. 1.3.1 по значению поля 001 соответствующему значению стр.190 подр.3.2.2 '") +
		НСтр("ru='Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 001 + ∑ (стр.200 (1 месяц ПОП) + стр.200 '") +
		НСтр("ru='(2 месяц ПОП) + стр.200 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_19б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.19б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.1 стр.040 подразд. 1.3.2 по значению поля 002 соответствующему значению стр.190 подр.3.2.2 '") +
		НСтр("ru='Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 003 + ∑ (стр.200 (1 месяц ПОП) + стр.200 '") +
		НСтр("ru='(2 месяц ПОП) + стр.200 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2021_0_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_20а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.20а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Спорное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более '") +
		НСтр("ru='набора идентичных показателей (СНИЛС + ФИО + код категории ЗЛ)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Повтор по Фамилии (%1), СНИЛС (%2), коду категории (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в '") +
		НСтр("ru='разделе 3 расчета'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_20б()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.20б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более '") +
		НСтр("ru='застрахованных лиц с идентичным набором показателей (СНИЛС + ФИО)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Повтор по Фамилии (%1), СНИЛС (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в '") +
		НСтр("ru='разделе 3 расчета'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Снилс"	, "П000310003001");
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("Вид"			, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ВТ_310_Отбор
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|	И ВТ_310.Вид = &Вид
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_310_Отбор.КлючСортировки)
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|	И ВТ_310.Вид = &Вид
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки
	|ИТОГИ
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_310_Отбор";
	
	РезультатЗапроса	= Запрос.Выполнить();
	ВыборкаР3			= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР3.Следующий() Цикл
		
		Настройки.Вставить("ДопСведения", ВыборкаР3.Фамилия + ", " + ВыборкаР3.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаР3.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Снилс);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Фамилия);
		КонецЦикла;
		
		Настройки.ЭтоОшибка	= Истина;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаР3.Фамилия);
		Настройки.Расшифровка = СтрЗаменить(Настройки.Расшифровка		, "%2", ВыборкаР3.Снилс);
		ДополнитьСтруктуруОшибок2021(Настройки);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_20в()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.20в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='В подр.3.2.1 Р.3 не должны содержаться 2 и более набора идентичных показателей '") +
		НСтр("ru='(месяц + код категории ЗЛ) по одному застрахованному лицу'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Повтор по месяцу (%1), коду категории (%2) для %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Наличие в расчете застрахованного лица с идентичным набором показателей в '") +
		НСтр("ru='разделе 3 расчета'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_21()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Титульный лист'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='2020 ≤ Значение поля ""Календарный год"" титульного листа ≤ значения текущего календарного года'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='2020 <= (%1) <= (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Значение календарного года должно быть больше или равно значению ""2020"" и меньше или '") +
		НСтр("ru='равно значению текущего календарного года'"));
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ОтчетГод"	, "ОтчетГод");
	ИменаПоказателей.Вставить("ДатаПодписи"	, "ДатаПодписи");
	
	ЗаполнитьСтруктуруПоказателейТитульный2021(Показатели, ИменаПоказателей);
	ЗарегистрироватьФормулу2021(Настройки);
	
	ИсточникДанных	= Новый Структура("Отчет, Страница", Неопределено, 1);
	ЗначениеОтчГода	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПараметрыКС.СтруктураДанныхТитульный.ОтчетГод);
	ЗначениеОтчГода	= ?(ЗначениеОтчГода = Неопределено, 0, ЗначениеОтчГода);
	ЗначениеКалГода	= Год(ПараметрыКС.СтруктураДанныхТитульный.ДатаПодписи);
	
	ИсточникДанных.Вставить("ОтчетГод"		, ЗначениеОтчГода);
	ИсточникДанных.Вставить("ДатаПодписи"	, ЗначениеКалГода);
	ВнестиПоказательВРасшифровку2021(ИсточникДанных, Показатели.ОтчетГод);
	ВнестиПоказательВРасшифровку2021(ИсточникДанных, Показатели.ДатаПодписи);
	
	Настройки.ЭтоОшибка		= НЕ (2020 <= ЗначениеОтчГода И ЗначениеОтчГода <= ЗначениеКалГода);	
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", ЗначениеОтчГода);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка, "%2", ЗначениеКалГода);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_22а()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сведения по застрахованному лицу не содержат отрицательных значений в данных о сумме '") +
		НСтр("ru='страховых взносов, не превышающих предельную величину и (или) начисленных страховых взносах'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения по застрахованному лицу содержат отрицательные суммы'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("Вид"			, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Ключ		КАК Ключ
	|ПОМЕСТИТЬ
	|	ВТ_310_Отбор
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК С140,
	|	ВТ_321.С150		КАК С150,
	|	ВТ_321.С160		КАК С160,
	|	ВТ_321.С170		КАК С170
	|ИЗ
	|	ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310 КАК ВТ_310
	|		ПО ВТ_310_Отбор.Ключ = ВТ_310.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310_Отбор.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.С140 < 0
	|	ИЛИ ВТ_321.С150 < 0
	|	ИЛИ ВТ_321.С160 < 0
	|	ИЛИ ВТ_321.С170 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес
	|ИТОГИ 
	| 	МИНИМУМ(Фамилия),
	| 	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК С200,
	|	ВТ_322.С210		КАК С210
	|ИЗ
	|	ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310 КАК ВТ_310
	|		ПО ВТ_310_Отбор.Ключ = ВТ_310.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310_Отбор.Ключ = ВТ_322.Ключ
	|ГДЕ
	|	ВТ_322.С200 < 0
	|	ИЛИ ВТ_322.С210 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес
	|ИТОГИ 
	| 	МИНИМУМ(Фамилия),
	| 	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_310_Отбор";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР321 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР322 = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("С140"	, "П00321М114001_");
	ИменаПоказателей.Вставить("С150"	, "П00321М115001_");
	ИменаПоказателей.Вставить("С160"	, "П00321М116001_");
	ИменаПоказателей.Вставить("С170"	, "П00321М117001_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Пока ВыборкаР321.Следующий() Цикл
		Выборка	= ВыборкаР321.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Показатель Из ИменаПоказателей Цикл
				Если Выборка[Показатель.Ключ] < 0 Тогда
					Настройки.Вставить("ДопСведения", ВыборкаР321.Фамилия + ", " + ВыборкаР321.Снилс);
					ЗарегистрироватьФормулу2021(Настройки);
					ВнестиПоказательВРасшифровку2021(Выборка, Показатели[Показатель.Ключ]);
					Настройки.ЭтоОшибка		= Истина;
					ДополнитьНастройки2021(Настройки);
					Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка[Показатель.Ключ]);
					ДополнитьСтруктуруОшибок2021(Настройки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Показатели = Неопределено;
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("С200"	, "П00322М120001_");
	ИменаПоказателей.Вставить("С210"	, "П00322М121001_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Пока ВыборкаР322.Следующий() Цикл
		Выборка	= ВыборкаР322.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Показатель Из ИменаПоказателей Цикл
				Если Выборка[Показатель.Ключ] < 0 Тогда
					Настройки.Вставить("ДопСведения", ВыборкаР322.Фамилия + ", " + ВыборкаР322.Снилс);
					ЗарегистрироватьФормулу2021(Настройки);
					ВнестиПоказательВРасшифровку2021(Выборка, Показатели[Показатель.Ключ]);
					Настройки.ЭтоОшибка = Истина;
					ДополнитьНастройки2021(Настройки);
					Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка[Показатель.Ключ]);
					ДополнитьСтруктуруОшибок2021(Настройки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_22б()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='(стр.050 – стр.051), стр.061 подр.1.1 прил.1 Р.1 по всем значениям граф ≥ 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru='взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	Настройки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= 0'"));
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru='%1 >= 0'"));
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделПоказателя"	, "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "050");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "051");
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, "061");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|			И ТПоказателя1.Графа = ТПоказателя3.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя3.Раздел	= &РазделПоказателя
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТПоказателя3.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	Графа";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Разность = Выборка.ПоказательР11 - Выборка.ПоказательР12;
			
		ИменаПоказателей = Новый Структура;
		ИменаПоказателей.Вставить("ПоказательР11"	, "П0111100050" + Выборка.Графа);
		ИменаПоказателей.Вставить("ПоказательР12"	, "П0111100051" + Выборка.Графа);
		ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		
		Настройки.ЭтоОшибка		= Разность < 0;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", 
			"" + Выборка.ПоказательР11 + " - " + Выборка.ПоказательР12);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка, "%2", Разность);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
		ИменаПоказателей = Новый Структура;
		ИменаПоказателей.Вставить("ПоказательР13"	, "П0111100061" + Выборка.Графа);
		ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
		ЗарегистрироватьФормулу2021(Настройки);
		
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
		Настройки.ЭтоОшибка		= Выборка.ПоказательР13 < 0;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки2, "%1", Выборка.ПоказательР13);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_22в()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='стр.040, стр.050 подр.1.3.1 прил.1 Р.1 по всем значения граф  ≥ 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru='взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"	, "П11131");
	ПроверитьКС2021_0_22_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_22г()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.22г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='стр.040, стр.050 подр.1.3.2 прил.1 Р.1 по всем значения граф  ≥ 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru='взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"	, "П11132");
	ПроверитьКС2021_0_22_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_22_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделПоказателя"	, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "040");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "050");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"		, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.СтрокаТЧ = ТПоказателя2.СтрокаТЧ
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки,
	|	Графа";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
			
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11"	, Настройки.Раздел + "М1040" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			ЗарегистрироватьФормулу2021(Настройки);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			
			Настройки.ЭтоОшибка		= Выборка.ПоказательР11 < 0;
			ДополнитьНастройки2021(Настройки);
			Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР11);
			ДополнитьСтруктуруОшибок2021(Настройки);
		
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР12"	, Настройки.Раздел + "М1050" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			ЗарегистрироватьФормулу2021(Настройки);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
			
			Настройки.ЭтоОшибка		= Выборка.ПоказательР12 < 0;
			ДополнитьНастройки2021(Настройки);
			Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР12);
			ДополнитьСтруктуруОшибок2021(Настройки);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_23()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.030 Р.1 = стр.030 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.031 + стр.032 + стр.033 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("030");
	МассивСтрок.Добавить("031");
	МассивСтрок.Добавить("032");
	МассивСтрок.Добавить("033");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010002001");
	
	ПроверитьКС2021_0_24_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = стр.070 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.071 + стр.072 + стр.073 Р.1 по каждому значению стр.060 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по КБК %4'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("070");
	МассивСтрок.Добавить("071");
	МассивСтрок.Добавить("072");
	МассивСтрок.Добавить("073");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П00001М106001_");
	
	ПроверитьКС2021_0_24_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_24_код(Настройки)
	
	Перем Показатели;
	
	Раздел		= Сред(Настройки.СтрокаКБК, 1, 6);
	РазделТЧ	= Сред(Настройки.СтрокаКБК, 1, 8);
	СтрокаКБК	= Сред(Настройки.СтрокаКБК, 9, 3);
	Окончание	= Сред(Настройки.СтрокаКБК, 12);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаКБК"		, СтрокаКБК);
	Запрос.УстановитьПараметр("МассивСтрок"		, Настройки.МассивСтрок);
	Запрос.УстановитьПараметр("СтрокаСуммы"		, Настройки.МассивСтрок[0]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТКБК.Значение_ КАК КБК,
	|	ТПоказателя1.Отчет КАК Отчет,
	|	ТПоказателя1.Страница КАК Страница,
	|	ТПоказателя1.СтрокаТЧ КАК НомерСтроки,
	|	ТПоказателя1.Строка_ КАК НомСтрПок,
	|	ТПоказателя1.Мес КАК Мес,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ""01""
	|		ИНАЧЕ ПОДСТРОКА(ТПоказателя1.Строка_,3,1) + ТПоказателя1.МесСтр
	|	КОНЕЦ КАК Ключ,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (""120"",""121"",""122"",""123"")
	|			ТОГДА -ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|	КОНЕЦ КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ = &СтрокаСуммы
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		КОГДА ТПоказателя1.Строка_ = ""120""
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА -ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Расшифровка
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКБК
	|		ПО ТПоказателя1.Мес = ТКБК.Мес
	|			И ТПоказателя1.Страница = ТКБК.Страница
	|			И ТПоказателя1.СтрокаТЧ = ТКБК.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя1.Раздел = &Раздел
	|	И ТПоказателя1.Строка_ В(&МассивСтрок)
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|		КОНЕЦ
	|	И ТПоказателя1.Мес В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТКБК.Раздел = &Раздел
	|	И ТКБК.Строка_ = &СтрокаКБК
	|	И ТКБК.Мес В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КБК,
	|	Ключ,
	|	НомСтрПок,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(Расшифровка)
	|ПО
	|	КБК,
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если ВыборкаК.Расшифровка Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", РазделТЧ + Выборка.НомСтрПок + Окончание);
				ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ДанныеКС.Мес - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность = ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КБК);
		Настройки.ДопСведения	= "КБК " + ВыборкаТ.КБК;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_0_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Идентификация стр.030, 040, 050, 060 подр.3.1 Р.3 с базами данных ЦУН АИС'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочные данные застрахованных лиц'"));
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_26()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Титульный лист'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='п.1 ст. 119 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отключено для 1 полугодия 2020г в связи с короновирусом'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Титульный лист (стр.001) ""Дата представления Расчета"" должна быть раньше или равна '") +
		НСтр("ru='установленному стр.431 НК РФ сроку представления Расчета, если ""Номер корректировки"" ""0--""'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2, когда номер корректировки = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Возможное нарушение срока представления первичного Расчета'"));
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Вид = 0 Тогда
		Возврат;
	КонецЕсли;

	// перенесение сроков в связи с короновирусом
	Если ДанныеКС.Год = 2020 И ДанныеКС.Мес <= 6 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ДатаПодписи"	, "ДатаПодписи");
	ЗаполнитьСтруктуруПоказателейТитульный2021(Показатели, ИменаПоказателей);
	ЗарегистрироватьФормулу2021(Настройки);
	
	ПредельныйМес	= ?(ДанныеКС.Мес = 12, 1, ДанныеКС.Мес + 1);
	ПредельныйГод	= ?(ДанныеКС.Мес = 12, ДанныеКС.Год + 1, ДанныеКС.Год);
	ПредельнаяДата	= Дата(ПредельныйГод, ПредельныйМес, 30, 23, 59, 59);
	ДатаПодписи		= ПараметрыКС.СтруктураДанныхТитульный.ДатаПодписи;
	
	ИсточникДанных	= Новый Структура("Отчет, Страница", Неопределено, 1);
	ИсточникДанных.Вставить("ДатаПодписи"	, ДатаПодписи);
	ВнестиПоказательВРасшифровку2021(ИсточникДанных, Показатели.ДатаПодписи);
	
	Настройки.ЭтоОшибка		= НЕ ДатаПодписи <= ПредельнаяДата;	
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Формат(ДатаПодписи		, "ДЛФ=D"));
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Формат(ПредельнаяДата	, "ДЛФ=D"));
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ДанныеКС.Вид);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_27()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2 в случае, если поле ""Расчетный (отчетный) '") +
		НСтр("ru='период (код)"" Титульного листа = 34, 83, 84, 85, 86 и поле ""По месту нахождения (учета) (код)"" '") +
		НСтр("ru='Титульного листа = 124, 240'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Раздел 2 и Приложение 1 к Разделу 2 заполнены'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2'"));
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР21", "П00021М101001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, "П00021");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Значение_	КАК ПоказательР21
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= ""010""
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка	= РезультатЗапроса.Выбрать();
		
	ЗарегистрироватьФормулу2021(Настройки);
	
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР21);
	КонецЦикла;
	
	ПериодНайден	= НЕ СтрНайти("34,83,84,85,86", ПараметрыКС.СтруктураДанныхТитульный.Период) = 0;
	ПоМестуНайден	= НЕ СтрНайти("124,240", ПараметрыКС.СтруктураДанныхТитульный.ПоМесту) = 0;
	Настройки.ЭтоОшибка	= ПериодНайден И ПоМестуНайден И НЕ (ДанныеКС.Р00002Заполнен И ДанныеКС.Р00021Заполнен);
	Настройки.Расшифровка	= Настройки.ШаблонРасшифровки;
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_50а_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.50а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.150 (1 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_50_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_50б_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.50б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.150 (2 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_50_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_50в_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.50в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.150 (3 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_50_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_50_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("Выплаты"	, "П00321М114001_");
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.Код КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК Выплаты,
	|	ВТ_321.С150		КАК База
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И (ВТ_321.С150 > ВТ_321.С140)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Фамилия);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Выплаты);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.База);
		
		Настройки.ЭтоОшибка		= Истина;
		ДополнитьНастройки2021(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Выборка.База);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Выборка.Выплаты);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_51а_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.51а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма базы страховых взносов ∑ (гр.2 стр.050 подр.1.1 прил.1 р. 1 - гр.2 стр.051 подр.1.1 '") +
		НСтр("ru='прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru='на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110005102");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_51_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_51б_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.51б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма базы страховых взносов ∑ (гр.3 стр.050 подр.1.1 прил.1 р. 1 - гр.3 стр.051 подр.1.1 '") +
		НСтр("ru='прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru='на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110005103");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_51_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_51в_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.51в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма базы страховых взносов ∑ (гр.4 стр.050 подр.1.1 прил.1 р. 1 - гр.4 стр.051 подр.1.1 '") +
		НСтр("ru='прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru='на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110005104");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_51_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_51_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11"	, Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12"	, Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделПоказателя", Лев(Настройки.ПоказательР11, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|		ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""051""
	|		ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Строка_		КАК Строка_,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	В (&СтрокаР11, &СтрокаР12)
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	Строка_
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР11 - ВыборкаР1.ПоказательР12, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2021(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Строка_ = "050" Тогда
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		Иначе
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЕсли;
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2021(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_52а_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.52а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр.2 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru='∑ стр. 170 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006102");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_52_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_52б_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.52б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр.3 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru='∑ стр. 170 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006103");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_52_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_52в_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.52в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов (гр.4 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru='∑ стр. 170 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006104");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_52_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_52_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР1, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделПоказателя", Лев(Настройки.ПоказательР1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя", Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С170		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И НЕ (ВТ_321.С170 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР1, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2021(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2021(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_53а_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.53а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.2 стр.040 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='по всем значениям стр.001 + ∑ всех гр.2 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru='значений полей 001, 002) = ∑ стр. 200 (1 месяц) подразд. 3.2.2 (допустимо различие '") +
		НСтр("ru='не более чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104002");
	Настройки.Вставить("ПоказательР12", "П11132М104002");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_54_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_53б_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.53б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.3 стр.040 подр.1.3.1 прил.1 Р.1 ") +
		НСтр("ru='по всем 'значениям стр.001 + ∑ всех гр.3 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru='значений полей 001, 002) = ∑ стр. 200 (2 месяц) подразд. 3.2.2 (допустимо различие не более '") +
		НСтр("ru='чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104003");
	Настройки.Вставить("ПоказательР12", "П11132М104003");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_54_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_53в_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.53в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.4 стр.040 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 по всем значениям стр.001 + ∑ всех гр.4 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru='значений полей 001, 002) = ∑ стр. 200 (3 месяц) подразд. 3.2.2 (допустимо различие не более '") +
		НСтр("ru='чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104004");
	Настройки.Вставить("ПоказательР12", "П11132М104004");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_54_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_54а_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.54а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 '") +
		НСтр("ru='прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (1 месяц) подразд. 3.2.2 '") +
		НСтр("ru='(допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105002");
	Настройки.Вставить("ПоказательР12", "П11132М105002");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2021_0_54_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_54б_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.54б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 '") +
		НСтр("ru='прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (2 месяц) подразд. 3.2.2 '") +
		НСтр("ru='(допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru='умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105003");
	Настройки.Вставить("ПоказательР12", "П11132М105003");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2021_0_54_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_54в_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='0.54в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Наличие ошибки'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу (гр.4 стр.050 подразд. '") +
		НСтр("ru='1.3.1 прил.1 + гр.4 стр.050 подразд. 1.3.2) = ∑ стр. 210 (3 месяц) подразд. 3.2.2 '") +
		НСтр("ru='(допустимо различие не более чем на значение в 0,5 копейки, умноженное на '") +
		НСтр("ru='количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2021(Заголовки);	
	Настройки = ОбработатьНастройки2021(	, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105004");
	Настройки.Вставить("ПоказательР12", "П11132М105004");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2021_0_54_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_0_54_код(Настройки)
	
	Перем Показатели;
	
	СтрокаПоказателя = Сред(Настройки.ПоказательР11, 9, 3);
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3"	, ?(СтрокаПоказателя = "050", "П00322М121001_", "П00322М120001_"));
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделР11"		, Лев(Настройки.ПоказательР11, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Лев(Настройки.ПоказательР12, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя", Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Строка_		КАК Строка_,
	|	ТПоказателя.Страница + ВЫБОР
	|		КОГДА ТПоказателя.Раздел = ""П11131""
	|			ТОГДА "",2""
	|		ИНАЧЕ "",3""
	|	КОНЕЦ КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя.Раздел		КАК Раздел,
	|	ТПоказателя.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		В (&РазделР11, &РазделР12)
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки,
	|	Раздел
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С210		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес = &НомерМесяца)
	|			И НЕ (ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Категория
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "С210", ?(СтрокаПоказателя = "040", "С200", "С210"));	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР1, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2021(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		ИменаПоказателей = Новый Структура("ПоказательР1", Выборка.Раздел + "М1" + Выборка.Строка_ 
			+ Выборка.Графа + "_");
		ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2021(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_1

Процедура ПроверитьКС2021_1_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.050 Р.1 = стр.050 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.051 + стр.052 + стр.053 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("050");
	МассивСтрок.Добавить("051");
	МассивСтрок.Добавить("052");
	МассивСтрок.Добавить("053");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010004001");
	
	ПроверитьКС2021_0_24_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.090 Р.1 = стр.090 Р.1 предыдущего отчетного периода '") +
		НСтр("ru='+ стр.091 + стр.092 + стр.093 Р.1 по каждому значению стр.080 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по КБК %4'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("090");
	МассивСтрок.Добавить("091");
	МассивСтрок.Добавить("092");
	МассивСтрок.Добавить("093");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П00001М208001_");
	
	ПроверитьКС2021_0_24_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_3()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в (стр.110 - стр.120) Р.1 = (стр.110 - стр.120) Р.1 предыдущего '") +
		НСтр("ru='отчетного периода + (стр.111 - стр.121) + (стр.112 - стр.122) + (стр.113 - стр.123) Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("110");
	МассивСтрок.Добавить("111");
	МассивСтрок.Добавить("112");
	МассивСтрок.Добавить("113");
	МассивСтрок.Добавить("120");
	МассивСтрок.Добавить("121");
	МассивСтрок.Добавить("122");
	МассивСтрок.Добавить("123");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010010001");
	
	ПроверитьКС2021_0_24_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_4()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.030 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003001");
	Настройки.Вставить("ПоказательП1"	, "П011110006001");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_5()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.031 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003101");
	Настройки.Вставить("ПоказательП1"	, "П011110006002");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_6()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.032 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003201");
	Настройки.Вставить("ПоказательП1"	, "П011110006003");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_7()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.033 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003301");
	Настройки.Вставить("ПоказательП1"	, "П011110006004");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_8()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.050 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005001");
	Настройки.Вставить("ПоказательП1"	, "П011120006001");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_9()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.051 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005101");
	Настройки.Вставить("ПоказательП1"	, "П011120006002");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.052 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005201");
	Настройки.Вставить("ПоказательП1"	, "П011120006003");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.053 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005301");
	Настройки.Вставить("ПоказательП1"	, "П011120006004");
	ПроверитьКС2021_1_11_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_11_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП1", Настройки.ПоказательП1);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП1"		, Лев(Настройки.ПоказательП1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("СтрокаП1"		, "060");
	Запрос.УстановитьПараметр("ГрафаП1"			, Сред(Настройки.ПоказательП1, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП1
	|	И ТПоказателя.Строка_	= &СтрокаП1
	|	И ТПоказателя.Графа		= &ГрафаП1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательП1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП1 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2021(Настройки);
	Р1Сум	= 0;
	П1Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП1.Следующий() Цикл
		П1Сум = ВыборкаП1.ПоказательП1;
		Выборка = ВыборкаП1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательП1);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П1Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П1Сум);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_12а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.12а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105001_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_12б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.12б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105001_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_13а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.13а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105002_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_13б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.13б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105002_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_14а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.14а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105003_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_14б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.14б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105003_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_15а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.15а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105004_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_15б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.15б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105004_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_16а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.16а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105001_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_16б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.16б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105001_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_17а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.17а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105002_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_17б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.17б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105002_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_18а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.18а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105003_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_18б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.18б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105003_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_19а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.19а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105004_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_19б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.19б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru='при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105004_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2021_1_19_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_19_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП1", Настройки.ПоказательП1);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП1"		, Лев(Настройки.ПоказательП1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ГрафаП1"			, Сред(Настройки.ПоказательП1, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Лев(Настройки.ПоказательП1, 6) = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("КБК"				, Настройки.КБК);
	Запрос.УстановитьПараметр("С001"			, Настройки.С001);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКБК
	|		ПО ТПоказателя.СтрокаТЧ = ТКБК.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТКБК.Раздел			= ""П00001""
	|	И ТКБК.Строка_			= ""060""
	|	И ТКБК.Мес				= &ОтчетныйМесяц
	|	И ТКБК.Значение_		= &КБК
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП1
	|	И ТПоказателя.Строка_	= ""050""
	|	И ТПоказателя.Графа		= &ГрафаП1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТКода001.Раздел		= &РазделП1
	|	И ТКода001.Строка_		= ""001""
	|	И ТКода001.Мес			= &ОтчетныйМесяц
	|	И ТКода001.Значение_	= &С001
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательП1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП1 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2021(Настройки);
	Р1Сум	= 0;
	П1Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП1.Следующий() Цикл
		П1Сум = ВыборкаП1.ПоказательП1;
		Выборка = ВыборкаП1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательП1);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П1Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П1Сум);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_20()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.110 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.1 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011001");
	Настройки.Вставить("ПоказательП2"		, "П000120009002");
	Настройки.Вставить("ГрафаПризнака	"	, "01");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_21()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.111 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.3 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011101");
	Настройки.Вставить("ПоказательП2"		, "П000120009004");
	Настройки.Вставить("ГрафаПризнака	"	, "03");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_22()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.112 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.5 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011201");
	Настройки.Вставить("ПоказательП2"		, "П000120009006");
	Настройки.Вставить("ГрафаПризнака	"	, "05");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_23()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.113 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.7 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011301");
	Настройки.Вставить("ПоказательП2"		, "П000120009008");
	Настройки.Вставить("ГрафаПризнака	"	, "07");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.120 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.1 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012001");
	Настройки.Вставить("ПоказательП2"		, "П000120009002");
	Настройки.Вставить("ГрафаПризнака	"	, "01");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.121 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.3 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012101");
	Настройки.Вставить("ПоказательП2"		, "П000120009004");
	Настройки.Вставить("ГрафаПризнака	"	, "03");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_26()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.122 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.5 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012201");
	Настройки.Вставить("ПоказательП2"		, "П000120009006");
	Настройки.Вставить("ГрафаПризнака	"	, "05");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_27()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов в стр.123 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 '") +
		НСтр("ru='если гр.7 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012301");
	Настройки.Вставить("ПоказательП2"		, "П000120009008");
	Настройки.Вставить("ГрафаПризнака	"	, "07");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2021_1_27_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_27_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП2", Настройки.ПоказательП2);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП2"		, Лев(Настройки.ПоказательП2, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ГрафаП2"			, Сред(Настройки.ПоказательП2, 12, 2));
	Запрос.УстановитьПараметр("ГрафаПр"			, Настройки.ГрафаПризнака);
	Запрос.УстановитьПараметр("Признак"			, Настройки.ЗначениеПризнака);	
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП2,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя,
	|	ВТ_100 КАК ТПризнака
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП2
	|	И ТПоказателя.Строка_	= ""090""
	|	И ТПоказателя.Графа		= &ГрафаП2
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТПризнака.Раздел		= &РазделП2
	|	И ТПризнака.Строка_		= ""090""
	|	И ТПризнака.Графа		= &ГрафаПр
	|	И ТПризнака.Мес			= &ОтчетныйМесяц
	|	И ТПризнака.Значение_	= &Признак
	|
	|ИТОГИ
	|	СУММА(ПоказательП2)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП2 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2021(Настройки);
	Р1Сум	= 0;
	П2Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП2.Следующий() Цикл
		П2Сум = ВыборкаП2.ПоказательП2;
		Выборка = ВыборкаП2.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательП2);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П2Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П2Сум);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_1

#Область Проверки_Подраздела_1_1

Процедура ПроверитьКС2021_1_28()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001001");
	Настройки.Вставить("ПоказательР12", "П011110002001");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_29()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.2 стр.010 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001002");
	Настройки.Вставить("ПоказательР12", "П011110002002");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_30()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.3 стр.010 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001003");
	Настройки.Вставить("ПоказательР12", "П011110002003");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_31()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.4 стр.010 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001004");
	Настройки.Вставить("ПоказательР12", "П011110002004");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_32()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110001001");
	ПроверитьКС2021_1_42_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_33()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002001");
	Настройки.Вставить("ПоказательР12", "П011110002101");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_34()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц в гр.2 стр.020 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002002");
	Настройки.Вставить("ПоказательР12", "П011110002102");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_35()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц в гр.3 стр.020 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002003");
	Настройки.Вставить("ПоказательР12", "П011110002103");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_36()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц в гр.4 стр.020 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002004");
	Настройки.Вставить("ПоказательР12", "П011110002104");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_36_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Графа КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, ""П00011"")
	|	И (ВТ_100.Строка_	= &СтрокаР11 И ВТ_100.Графа	= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12 И ВТ_100.Графа = &ГрафаР12
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + "",1""	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|	И ТПоказателя2.Строка_	= &СтрокаР12
	|	И ТПоказателя2.Графа	= &ГрафаР12
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		МассивСуммР11	= Новый Массив;
		МассивСуммР12	= Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР11.Добавить(Выборка.ПоказательР11);
			МассивСуммР12.Добавить(Выборка.ПоказательР12);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 >= ВыборкаТ.ПоказательР12;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР11, " + "), 
			ВыборкаТ.ПоказательР11, СтрСоединить(МассивСуммР12, " + "), ВыборкаТ.ПоказательР12, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_37()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.37'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110002001");
	ПроверитьКС2021_1_42_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_38()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.38'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003001");
	Настройки.Вставить("ПоказательР12", "П011110002001");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_39()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.39'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.030 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003002");
	Настройки.Вставить("ПоказательР12", "П011110002002");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_40()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.40'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.030 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003003");
	Настройки.Вставить("ПоказательР12", "П011110002003");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_41()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.41'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.030 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003004");
	Настройки.Вставить("ПоказательР12", "П011110002004");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_42()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.42'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.021 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110002101");
	ПроверитьКС2021_1_42_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_42_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Мес		КАК Мес,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Мес = ТТарифа.Мес
	|			И ТПоказателя1.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя1.Графа	= ""01""
	|	И ТПоказателя1.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Мес Убыв,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа,
	|	Мес";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 >= Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаТ.ПоказательР12, Разность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_43()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.43'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 прил.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100030");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_44()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.44'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.1 прил.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100040");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_45()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.45'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.1 прил.1 Р.1 = гр.1 стр.045 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов к вычету'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100045");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_46()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.46'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.1 стр.040 подр.1.1 прил.1 Р.1 - гр.1 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005001");
	Настройки.Вставить("ПоказательР12", "П011110003001");
	Настройки.Вставить("ПоказательР13", "П011110004001");
	Настройки.Вставить("ПоказательР14", "П011110004501");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_47()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.47'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.2 стр.040 подр.1.1 прил.1 Р.1 - гр.2 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110003002");
	Настройки.Вставить("ПоказательР13", "П011110004002");
	Настройки.Вставить("ПоказательР14", "П011110004502");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_48()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.48'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.3 стр.040 подр.1.1 прил.1 Р.1 - гр.3 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110003003");
	Настройки.Вставить("ПоказательР13", "П011110004003");
	Настройки.Вставить("ПоказательР14", "П011110004503");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_49()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.49'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 - гр.4 стр.040 подр.1.1 прил.1 Р.1 - гр.4 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110003004");
	Настройки.Вставить("ПоказательР13", "П011110004004");
	Настройки.Вставить("ПоказательР14", "П011110004504");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_49_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя4"	, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.УстановитьПараметр("Графа"				, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, &РазделТарифа)
	|	И (ВТ_100.Строка_	В (&СтрокаПоказателя1, &СтрокаПоказателя2, &СтрокаПоказателя3, &СтрокаПоказателя4)
	|	И ВТ_100.Графа		= &Графа
	|	ИЛИ ВТ_100.Строка_	= &СтрокаТарифа И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО ТПоказателя1.Страница = ТПоказателя4.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТПоказателя4.Строка_	= &СтрокаПоказателя4
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	СУММА(ПоказательР14)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаР1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР14);
		КонецЦикла;
		
		Разность				= ВыборкаР1.ПоказательР12 - ВыборкаР1.ПоказательР13 - ВыборкаР1.ПоказательР14;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР11, ВыборкаР1.ПоказательР12, 
			ВыборкаР1.ПоказательР13, ВыборкаР1.ПоказательР14, Разность, ВыборкаР1.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_50()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.50'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам с начала периода в гр.1 стр.051 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005101");
	Настройки.Вставить("ПоказательР12", "П011110002101");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_51()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.51'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.2 стр.051 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005102");
	Настройки.Вставить("ПоказательР12", "П011110002102");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_52()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.52'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.3 стр.051 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005103");
	Настройки.Вставить("ПоказательР12", "П011110002103");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_53()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.53'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.4 стр.051 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.021 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005104");
	Настройки.Вставить("ПоказательР12", "П011110002104");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_53_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &Раздел
	|	И ТПоказателя2.Строка_	= &СтрокаР12
	|	И ТПоказателя2.Графа	= &ГрафаР12
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		МассивСуммР11	= Новый Массив;
		МассивСуммР12	= Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР11.Добавить(Выборка.ПоказательР11);
			МассивСуммР12.Добавить(Выборка.ПоказательР12);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ВыборкаТ.ПоказательР12 > 0 И НЕ ВыборкаТ.ПоказательР11 > 0 ;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР11, " + "), 
			ВыборкаТ.ПоказательР11, СтрСоединить(МассивСуммР12, " + "), ВыборкаТ.ПоказательР12, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_54()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.54'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 >= гр.1 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005001");
	Настройки.Вставить("ПоказательР12", "П011110005101");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_55()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.55'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110005102");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_56()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.56'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110005103");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_57()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.57'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.051 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110005104");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_58()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.58'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100050");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_59()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.59'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.1 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006001");
	Настройки.Вставить("ПоказательР12", "П011110006101");
	Настройки.Вставить("ПоказательР13", "П011110006201");
	ПроверитьКС2021_1_62_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_60()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.60'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в гр.2 стр.060 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.2 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006002");
	Настройки.Вставить("ПоказательР12", "П011110006102");
	Настройки.Вставить("ПоказательР13", "П011110006202");
	ПроверитьКС2021_1_62_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_61()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.61'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в гр.3 стр.060 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.3 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006003");
	Настройки.Вставить("ПоказательР12", "П011110006103");
	Настройки.Вставить("ПоказательР13", "П011110006203");
	ПроверитьКС2021_1_62_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_62()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.62'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в гр.4 стр.060 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 + гр.4 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006004");
	Настройки.Вставить("ПоказательР12", "П011110006104");
	Настройки.Вставить("ПоказательР13", "П011110006204");
	ПроверитьКС2021_1_62_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_62_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("Графа"				, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, &РазделТарифа)
	|	И (ВТ_100.Строка_	В (&СтрокаПоказателя1, &СтрокаПоказателя2, &СтрокаПоказателя3)
	|	И ВТ_100.Графа		= &Графа
	|	ИЛИ ВТ_100.Строка_	= &СтрокаТарифа И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаР1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
		КонецЦикла;
		
		РезультатСложения		= ВыборкаР1.ПоказательР12 + ВыборкаР1.ПоказательР13;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР11 = РезультатСложения;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР11, 
			ВыборкаР1.ПоказательР12, ВыборкаР1.ПоказательР13, РезультатСложения, ВыборкаР1.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_63()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.63'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.060 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100060");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_64()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.64'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.061 подр.1.1 прил.1 Р.1 = гр.1 стр.061 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.061 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100061");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_65()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.65'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.062 подр.1.1 прил.1 Р.1 = гр.1 стр.062 '") +
		НСтр("ru='подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.062 подр.1.1 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100062");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_65_код(Настройки)
	
	Перем Показатели;
	ОтчетныйМесяц = ДанныеКС.Мес;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа,
	|	ТПоказателя1.Мес		КАК Мес,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК Ключ,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Мес = ТТарифа.Мес
	|			И ТПоказателя1.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|	И ТПоказателя1.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Графа,
	|	Мес Убыв,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа,
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаК.ПоказательР12) Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа);
				ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаТ.ПоказательР12, 
			СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_2

Процедура ПроверитьКС2021_1_66()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.66'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001001");
	Настройки.Вставить("ПоказательР12", "П011120002001");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_67()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.67'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.2 стр.010 подр.1.2 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001002");
	Настройки.Вставить("ПоказательР12", "П011120002002");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_68()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.68'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.3 стр.010 подр.1.2 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001003");
	Настройки.Вставить("ПоказательР12", "П011120002003");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_69()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.69'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц в гр.4 стр.010 подр.1.2 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001004");
	Настройки.Вставить("ПоказательР12", "П011120002004");
	ПроверитьКС2021_1_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_70()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.70'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011120001001");
	ПроверитьКС2021_1_42_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_71()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.71'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.020 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011120002001");
	ПроверитьКС2021_1_42_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_72()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.72'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003001");
	Настройки.Вставить("ПоказательР12", "П011120002001");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_73()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.73'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.030 подр.1.2 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003002");
	Настройки.Вставить("ПоказательР12", "П011120002002");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_74()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.74'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.030 подр.1.2 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003003");
	Настройки.Вставить("ПоказательР12", "П011120002003");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_75()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.75'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.030 подр.1.2 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003004");
	Настройки.Вставить("ПоказательР12", "П011120002004");
	ПроверитьКС2021_1_53_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_76()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.76'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 прил.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200030");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_77()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.77'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.2 прил.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200040");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_78()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.78'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.2 прил.1 Р.1 = гр.1 стр.045 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов к вычету'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200045");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_79()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.79'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.1 стр.040 подр.1.2 прил.1 Р.1 - гр.1 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005001");
	Настройки.Вставить("ПоказательР12", "П011120003001");
	Настройки.Вставить("ПоказательР13", "П011120004001");
	Настройки.Вставить("ПоказательР14", "П011120004501");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_80()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.80'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 подр.1.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.2 стр.040 подр.1.2 прил.1 Р.1 - гр.2 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005002");
	Настройки.Вставить("ПоказательР12", "П011120003002");
	Настройки.Вставить("ПоказательР13", "П011120004002");
	Настройки.Вставить("ПоказательР14", "П011120004502");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_81()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.81'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 подр.1.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.3 стр.040 подр.1.2 прил.1 Р.1 - гр.3 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005003");
	Настройки.Вставить("ПоказательР12", "П011120003003");
	Настройки.Вставить("ПоказательР13", "П011120004003");
	Настройки.Вставить("ПоказательР14", "П011120004503");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_82()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.82'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 подр.1.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.2 '") +
		НСтр("ru='прил.1 Р.1 - гр.4 стр.040 подр.1.2 прил.1 Р.1 - гр.4 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005004");
	Настройки.Вставить("ПоказательР12", "П011120003004");
	Настройки.Вставить("ПоказательР13", "П011120004004");
	Настройки.Вставить("ПоказательР14", "П011120004504");
	ПроверитьКС2021_1_49_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_83()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.83'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 подр.1.2 прил.1 Р.1 = гр.1 стр.060 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200060");
	ПроверитьКС2021_1_65_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_84()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.84'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено как некорректное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 '") +
		НСтр("ru='подр.1.2 прил.1 Р.1 х соответствующий значению поля 001 прил.1 Р.1 тариф страховых взносов ± '") +
		НСтр("ru='(гр.2 + гр.3 + гр.4) стр.020 подр.1.2 прил.1 Р.1 / 3 х 0,005 руб.'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	// Отключено как некорректное
	Возврат;
	
	ПроверитьКС2021_1_84_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_84_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (""П01112"", ""П00011"")
	|	И (ВТ_100.Строка_	В (""020"", ""050"", ""060"")
	|	И ВТ_100.Графа		В (""02"", ""03"", ""04"")
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_	КАК КодТарифа,
	|	ТПоказателя.Отчет	КАК Отчет,
	|	ТПоказателя.Раздел + ""00""		КАК Раздел,
	|	ТПоказателя.Страница + "",1""	КАК Страница,
	|	ТПоказателя.Строка_	КАК НомСтроки,
	|	ТПоказателя.Графа	КАК Графа,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""060""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Взнос,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""020""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоФизлиц
	|ИЗ
	|	ВТ_101 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя.Строка_		В (""020"", ""050"", ""060"")
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	НомСтроки Убыв,
	|	Страница,
	|	Графа
	|ИТОГИ
	|	МИНИМУМ(КодТарифа),
	|	СУММА(Взнос),
	|	СУММА(База),
	|	СУММА(КолвоФизлиц)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Ставка = ДанныеКС.Ставки112.Найти(ВыборкаТ.КодТарифа, "Код");
		СтавкаПереопр = ?(Ставка = Неопределено, 0, Ставка.Ставка);
		
		Если ЗначениеЗаполнено(ВыборкаТ.КодТарифа) Тогда
			ВнестиПоказательБезРасшифровки2021("Ставка СВ на ОМС для тарифа " + ВыборкаТ.КодТарифа,
				СтавкаПереопр);
		КонецЕсли;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИмяПоказателя = ?(Выборка.НомСтроки = "060", "Взнос", ?(Выборка.НомСтроки = "050", "База", "КолвоФизлиц"));
			ИменаПоказателей.Вставить(ИмяПоказателя, Выборка.Раздел + Выборка.НомСтроки + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели[ИмяПоказателя]);
		КонецЦикла;
		
		РасчетныйВзнос		= Окр(ВыборкаТ.База * СтавкаПереопр / 100, 2);
		Погрешность			= Окр(Окр(ВыборкаТ.КолвоФизлиц / 3) * 0.005, 2);
		РасчетныйВзносМакс	= РасчетныйВзнос + Погрешность;
		РасчетныйВзносМин	= РасчетныйВзнос - Погрешность;
		
		Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено 
			И (ВыборкаТ.Взнос < РасчетныйВзносМин ИЛИ ВыборкаТ.Взнос > РасчетныйВзносМакс);
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.Взнос, ВыборкаТ.База, СтавкаПереопр, РасчетныйВзнос, Погрешность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_3_1

Процедура ПроверитьКС2021_1_85()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.85'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М101001_");
	ПроверитьКС2021_1_86_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_86()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.86'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М102001_");
	ПроверитьКС2021_1_86_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_86_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Мес			КАК Мес
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (""001"", ""002"", &СтрокаПоказателя)
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК КлючТарифа,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТКод2.Отчет
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТПоказателя1.Отчет
	|			И 	ТПоказателя1.Строка_	= &СтрокаПоказателя
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючТарифа,
	|	Мес УБЫВ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	КлючТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 >= Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, Разность, ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_87()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.87'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102001_");
	Настройки.Вставить("ПоказательР12", "П11131М101001_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_88()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.88'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.020 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102002_");
	Настройки.Вставить("ПоказательР12", "П11131М101002_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_89()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.89'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.020 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102003_");
	Настройки.Вставить("ПоказательР12", "П11131М101003_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_90()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.90'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.020 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.1 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102004_");
	Настройки.Вставить("ПоказательР12", "П11131М101004_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_90_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК СтрокаТЧ,
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Графа КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"", ""002"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И 	ТКод2.Строка_	= ""002""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ВыборкаТ.ПоказательР12 > 0 И НЕ ВыборкаТ.ПоказательР11 > 0;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_91()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.91'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.1 прил.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1020");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_92()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.92'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 422 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.1 прил.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1030");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_93()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.93'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.1 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104001_");
	Настройки.Вставить("ПоказательР12", "П11131М102001_");
	Настройки.Вставить("ПоказательР13", "П11131М103001_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_94()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.94'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.040 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.2 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104002_");
	Настройки.Вставить("ПоказательР12", "П11131М102002_");
	Настройки.Вставить("ПоказательР13", "П11131М103002_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_95()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.95'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.040 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.3 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104003_");
	Настройки.Вставить("ПоказательР12", "П11131М102003_");
	Настройки.Вставить("ПоказательР13", "П11131М103003_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_96()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.96'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.040 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 - гр.4 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104004_");
	Настройки.Вставить("ПоказательР12", "П11131М102004_");
	Настройки.Вставить("ПоказательР13", "П11131М103004_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_96_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111", ",2", ",3", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"", ""002"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТКод1.Страница	= ТПоказателя3.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя3.СтрокаТЧ
	|			И 	ТПоказателя3.Строка_	= &СтрокаР13
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
		КонецЦикла;
		
		Разность 				= ВыборкаТ.ПоказательР12 - ВыборкаТ.ПоказательР13;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.ПоказательР13, Разность, ВыборкаТ.КодИсчисления, 
			ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= "Код исчисления " + ВыборкаТ.КодИсчисления + ?(Раздел = "П11132", ", код класса " 
			+ ВыборкаТ.КодКласса, "");
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_97()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.97'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.1 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru='подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.1 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1050");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_97_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа,
	|	ВТ_100.Мес			КАК Мес,
	|	ВТ_100.МесСтр		КАК МесСтр
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (""001"", ""002"", &СтрокаПоказателя)
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_					КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК КлючСортировки,
	|	ТПоказателя1.Графа 		КАК Графа,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТКод2.Отчет
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТПоказателя1.Отчет
	|			И 	ТПоказателя1.Строка_	= &СтрокаПоказателя
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Графа,
	|	Мес УБЫВ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ,
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаК.ПоказательР12) Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа + "_");
				ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КодИсчисления, 
			ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_3_2

Процедура ПроверитьКС2021_1_98()
	
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.98'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.2 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М101001_");
	ПроверитьКС2021_1_86_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_99()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.99'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102001_");
	Настройки.Вставить("ПоказательР12", "П11132М101001_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_100()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.100'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.020 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102002_");
	Настройки.Вставить("ПоказательР12", "П11132М101002_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_101()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.101'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.020 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102003_");
	Настройки.Вставить("ПоказательР12", "П11132М101003_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_102()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.102'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.020 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102004_");
	Настройки.Вставить("ПоказательР12", "П11132М101004_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_103()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.103'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 подр.1.3.2 прил.1 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.2 прил.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1020");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_104()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.104'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.2 прил.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.2 '") +
		НСтр("ru='прил.1 Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1030");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_105()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.105'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.1 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104001_");
	Настройки.Вставить("ПоказательР12", "П11132М102001_");
	Настройки.Вставить("ПоказательР13", "П11132М103001_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_106()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.106'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.040 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.2 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104002_");
	Настройки.Вставить("ПоказательР12", "П11132М102002_");
	Настройки.Вставить("ПоказательР13", "П11132М103002_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_107()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.107'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.040 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.3 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104003_");
	Настройки.Вставить("ПоказательР12", "П11132М102003_");
	Настройки.Вставить("ПоказательР13", "П11132М103003_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_108()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.108'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.040 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 - гр.4 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104004_");
	Настройки.Вставить("ПоказательР12", "П11132М102004_");
	Настройки.Вставить("ПоказательР13", "П11132М103004_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_109()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.109'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.2 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru='подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.2 прил.1 '") +
		НСтр("ru='Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1050");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1

Процедура ПроверитьКС2021_1_110()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.110'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 прил.1.1 Р.1 = гр.1 стр.020 прил.1.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.1.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1020");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_111()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.111'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.1.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru='прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.1.1 Р.1 '") +
		НСтр("ru='по каждому значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1030");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_112()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.112'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru='прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.1.1 Р.1 '") +
		НСтр("ru='по каждому значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1040");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_113()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.113'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.1 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104001_");
	Настройки.Вставить("ПоказательР12", "П00111М102001_");
	Настройки.Вставить("ПоказательР13", "П00111М103001_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_114()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.114'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.040 прил.1.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.2 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104002_");
	Настройки.Вставить("ПоказательР12", "П00111М102002_");
	Настройки.Вставить("ПоказательР13", "П00111М103002_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_115()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.115'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.040 прил.1.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.3 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104003_");
	Настройки.Вставить("ПоказательР12", "П00111М102003_");
	Настройки.Вставить("ПоказательР13", "П00111М103003_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_116()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.116'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.040 прил.1.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru='прил.1.1 Р.1 - гр.4 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104004_");
	Настройки.Вставить("ПоказательР12", "П00111М102004_");
	Настройки.Вставить("ПоказательР13", "П00111М103004_");
	ПроверитьКС2021_1_96_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_117()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.117'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.050 прил.1.1 Р.1 = гр.1 стр.050 прил.1.1 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.1.1 Р.1 по каждому '") +
		НСтр("ru='значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1050");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_2

Процедура ПроверитьКС2021_1_118()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.118'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных лиц с начала периода в гр.1 стр.010 прил.2 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru='прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М101001_");
	ПроверитьКС2021_1_86_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_119()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.119'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество физических лиц с начала периода в гр.1 стр.015 прил.2 Р.1 >= гр.1 стр.015 '") +
		НСтр("ru='прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М101501_");
	ПроверитьКС2021_1_86_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_120()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.120'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 > 0 если гр.1 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102001_");
	Настройки.Вставить("ПоказательР12", "П00012М101501_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_121()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.121'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.020 прил.2 Р.1 (1 месяц ОП) > 0 если гр.2 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102002_");
	Настройки.Вставить("ПоказательР12", "П00012М101502_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_122()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.122'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.020 прил.2 Р.1 (2 месяц ОП) > 0 если гр.3 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102003_");
	Настройки.Вставить("ПоказательР12", "П00012М101503_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_123()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.123'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.020 прил.2 Р.1 (3 месяц ОП) > 0 если гр.4 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102004_");
	Настройки.Вставить("ПоказательР12", "П00012М101504_");
	ПроверитьКС2021_1_90_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_124()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.124'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 = гр.1 стр.020 прил.2 Р.1 предыдущего '") +
		НСтр("ru='отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.2 Р.1 по каждому значению поля 001 '") +
		НСтр("ru='прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1020");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_125()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.125'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.2 Р.1 = гр.1 стр.030 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.2 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1030");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_126()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.126'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма, превышающая предельную величину в гр.1 стр.040 прил.2 Р.1 = гр.1 стр.040 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.2 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма, превышающая предельную величину'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1040");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_127()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.127'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.050 прил.2 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 по каждому значению '") +
		НСтр("ru='поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1050");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_128()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.128'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.1 стр.030 прил.2 Р.1 - гр.1 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105001_");
	Настройки.Вставить("ПоказательР12", "П00012М102001_");
	Настройки.Вставить("ПоказательР13", "П00012М103001_");
	Настройки.Вставить("ПоказательР14", "П00012М104001_");
	ПроверитьКС2021_1_131_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_129()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) = гр.2 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.2 стр.030 прил.2 Р.1 - гр.2 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105002_");
	Настройки.Вставить("ПоказательР12", "П00012М102002_");
	Настройки.Вставить("ПоказательР13", "П00012М103002_");
	Настройки.Вставить("ПоказательР14", "П00012М104002_");
	ПроверитьКС2021_1_131_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_130()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.130'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) = гр.3 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.3 стр.030 прил.2 Р.1 - гр.3 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105003_");
	Настройки.Вставить("ПоказательР12", "П00012М102003_");
	Настройки.Вставить("ПоказательР13", "П00012М103003_");
	Настройки.Вставить("ПоказательР14", "П00012М104003_");
	ПроверитьКС2021_1_131_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_131()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.131'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) = гр.4 стр.020 прил.2 '") +
		НСтр("ru='Р.1 - гр.4 стр.030 прил.2 Р.1 - гр.4 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105004_");
	Настройки.Вставить("ПоказательР12", "П00012М102004_");
	Настройки.Вставить("ПоказательР13", "П00012М103004_");
	Настройки.Вставить("ПоказательР14", "П00012М104004_");
	ПроверитьКС2021_1_131_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_131_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР14"		, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТКод1.Страница	= ТПоказателя3.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя3.СтрокаТЧ
	|			И 	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТКод1.Страница	= ТПоказателя4.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя4.СтрокаТЧ
	|			И 	ТПоказателя4.Строка_	= &СтрокаР14
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	СУММА(ПоказательР14),
	|	МИНИМУМ(КодИсчисления)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР14);
		КонецЦикла;
		
		Разность 				= ВыборкаТ.ПоказательР12 - ВыборкаТ.ПоказательР13 - ВыборкаТ.ПоказательР14;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.ПоказательР13, ВыборкаТ.ПоказательР14, Разность, 
			ВыборкаТ.КодИсчисления);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений, 
			ВыборкаТ.КодИсчисления);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_132()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.132'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 >= гр.1 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105001_");
	Настройки.Вставить("ПоказательР12", "П00012М105501_");
	ПроверитьКС2021_1_135_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_133()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.133'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) >= гр.2 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105002_");
	Настройки.Вставить("ПоказательР12", "П00012М105502_");
	ПроверитьКС2021_1_135_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_134()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.134'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) >= гр.3 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105003_");
	Настройки.Вставить("ПоказательР12", "П00012М105503_");
	ПроверитьКС2021_1_135_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_135()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.135'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) >= гр.4 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105004_");
	Настройки.Вставить("ПоказательР12", "П00012М105504_");
	ПроверитьКС2021_1_135_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_135_код(Настройки)
	
	// копия ПроверитьКС2021_1_142_код
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"")
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР11 И ВТ_100.Графа	= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12 И ВТ_100.Графа	= &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|			И 	ТПоказателя1.Графа		= &ГрафаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|			И 	ТПоказателя2.Графа		= &ГрафаР12
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 >= ВыборкаТ.ПоказательР12;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.КодИсчисления);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_136()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.136'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат иностранным гражданам с начала периода в гр.1 стр.055 прил.2 Р.1 = гр.1 стр.055 '") +
		НСтр("ru='прил.2 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 по '") +
		НСтр("ru='каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат иностранным гражданам'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1055");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_137()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.137'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы с начала периода в гр.1 стр.060 прил.2 Р.1 = гр.1 стр.060 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 по '") +
		НСтр("ru='каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1060");
	ПроверитьКС2021_1_97_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_138()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.138'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено как некорректное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru='х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) '") +
		НСтр("ru='стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 равно 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	// Отключено как некорректное
	Возврат;
	
	Настройки.Вставить("НетИностранцев", Истина);
	ПроверитьКС2021_1_140_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_139()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.139'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено как некорректное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 >= (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru='х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов для иностранных граждан ± (гр.2'") +
		НСтр("ru=' + гр.3 + гр.4) стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 не р'") +
		НСтр("ru='авно 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	// Отключено как некорректное
	Возврат;
	
	Настройки.Вставить("НетИностранцев", Ложь);
	ПроверитьКС2021_1_140_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_140()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.140'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru='х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) '") +
		НСтр("ru='стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда код тарифа плательщика в поле 001 прил.2 Р.1 отличен от 01'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru='Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_140_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= ""П00012""
	|	И (ВТ_100.Строка_	В (""015"", ""050"", ""055"", ""060"")
	|	И ВТ_100.Графа		В (""02"", ""03"", ""04"")
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_	КАК КодТарифа,
	|	ТПоказателя.Отчет	КАК Отчет,
	|	ТПоказателя.Раздел + ""М1""		КАК Раздел,
	|	ТПоказателя.Страница			КАК Страница,
	|	ТПоказателя.НомерСтроки			КАК НомерСтроки,
	|	ТПоказателя.Строка_	КАК НомСтроки,
	|	ТПоказателя.Графа	КАК Графа,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""060""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Взнос,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""055""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаИностранцы,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""015""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоФизлиц
	|ИЗ
	|	ВТ_101 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя.Страница = ТТарифа.Страница
	|			И ТПоказателя.НомерСтроки = ТТарифа.НомерСтроки
	|ГДЕ
	|	ТПоказателя.Строка_		В (""015"", ""050"", ""055"", ""060"")
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	НомСтроки Убыв,
	|	Страница,
	|	НомерСтроки,
	|	Графа
	|ИТОГИ
	|	МИНИМУМ(КодТарифа),
	|	СУММА(Взнос),
	|	СУММА(База),
	|	СУММА(БазаИностранцы),
	|	СУММА(КолвоФизлиц)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		НетИностранцев = НЕ ЗначениеЗаполнено(ВыборкаТ.БазаИностранцы);
		ТаблицаСтавок = ?(Настройки.НетИностранцев, ДанныеКС.Ставки201, ДанныеКС.Ставки202);
		Ставка = ТаблицаСтавок.Найти(ВыборкаТ.КодТарифа, "Код");
		СтавкаПереопр = ?(Ставка = Неопределено, 0, Ставка.Ставка);
		
		Если ЗначениеЗаполнено(ВыборкаТ.КодТарифа) Тогда
			ВнестиПоказательБезРасшифровки2021("Ставка СВ на ОМС для тарифа " + ВыборкаТ.КодТарифа,
				СтавкаПереопр);
		КонецЕсли;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИмяПоказателя = ?(Выборка.НомСтроки = "060", "Взнос", ?(Выборка.НомСтроки = "050", "База", 
				?(Выборка.НомСтроки = "055", "БазаИностранцы", "КолвоФизлиц")));
			ИменаПоказателей.Вставить(ИмяПоказателя, Выборка.Раздел + Выборка.НомСтроки + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели[ИмяПоказателя]);
		КонецЦикла;
		
		РасчетныйВзнос		= Окр(ВыборкаТ.База * СтавкаПереопр / 100, 2);
		Погрешность			= Окр(Окр(ВыборкаТ.КолвоФизлиц / 3) * 0.005, 2);
		РасчетныйВзносМакс	= РасчетныйВзнос + Погрешность;
		РасчетныйВзносМин	= РасчетныйВзнос - Погрешность;
		
		Если НетИностранцев Тогда
			Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено И Настройки.НетИностранцев
				И (ВыборкаТ.Взнос < РасчетныйВзносМин ИЛИ ВыборкаТ.Взнос > РасчетныйВзносМакс);
		Иначе
			Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено И НЕ Настройки.НетИностранцев
				И ВыборкаТ.Взнос < РасчетныйВзносМин;
		КонецЕсли;
		
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.Взнос, ВыборкаТ.База, СтавкаПереопр, РасчетныйВзнос, Погрешность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_141()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.141'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Произведенные расходы с начала периода в гр.1 стр.070 прил.2 Р.1 = гр.1 стр.070 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.070 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма произведенных расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001200070");
	ПроверитьКС2021_1_142_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_142()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.142'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Возмещенные расходы с начала периода в гр.1 стр.080 прил.2 Р.1 = гр.1 стр.080 прил.2 '") +
		НСтр("ru='Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.080 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма возмещенных расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001200080");
	ПроверитьКС2021_1_142_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_142_код(Настройки)
	
	Перем Показатели;
	ОтчетныйМесяц = ДанныеКС.Мес;
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет КАК	Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа,
	|	ВТ_100.Мес			КАК Мес,
	|	ВТ_100.МесСтр		КАК МесСтр
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаПоказателя)
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК КлючСортировки,
	|	ТПоказателя1.Графа 		КАК Графа,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаПоказателя
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Графа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаТ.Следующий() Тогда
		ЗарегистрироватьФормулу2021(Настройки);
		МассивСумм = Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.ПоказательР12) Тогда
				МассивСумм.Добавить(Выборка.ПоказательР11);
			КонецЕсли;
			
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность);
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_5

Процедура ПроверитьКС2021_1_143()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.143'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.2 стр.010 прил.5 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_144()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.144'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.3 стр.010 прил.5 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_144_код(Настройки)
	
	// не удалять - используется из других КС
	
	Показатели = ПолучитьПоказатели2021(Настройки);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) И Показатели.ПоказательР11.Значение < 7;
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_145()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.145'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.2 стр.020 прил.5 Р.1 >= гр.2 стр.030 прил.5 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_146()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.146'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.3 стр.020 прил.5 Р.1 >= гр.3 стр.030 прил.5 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_146_код(Настройки)
	
	// не удалять - используется из других КС
	
	Показатели = ПолучитьПоказатели2021(Настройки);
	Настройки.ЭтоОшибка		= Показатели.ПоказательР11.Значение < Показатели.ПоказательР12.Значение;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_147()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.147'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.040 прил.5 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.5 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_148()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.148'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.3 стр.040 прил.5 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.5 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_148_код(Настройки)
	
	// не удалять - используется из других КС
	
	Показатели = ПолучитьПоказатели2021(Настройки);
	РезультатДеления = ?(Показатели.ПоказательР13.Значение = 0, 0, 
		Окр(Показатели.ПоказательР12.Значение / Показатели.ПоказательР13.Значение *100, 2));
	РезультатДеления = Макс(РезультатДеления, 0);
	Настройки.ЭтоОшибка		= НЕ Показатели.ПоказательР11.Значение = РезультатДеления;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		РезультатДеления);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_149()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.149'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.2 стр.040 прил.5 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_150()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.150'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.3 стр.040 прил.5 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_150_код(Настройки)
	
	// не удалять - используется из других КС
	
	Показатели = ПолучитьПоказатели2021(Настройки);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) И Показатели.ПоказательР11.Значение < 90;
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Функция ПолучитьПоказатели2021(Настройки)
	
	// не удалять - используется из других КС
	
	Перем Показатели;
	
	КолвоПоказателей = Настройки.МассивИмен.Количество();
	ИменаПоказателей = Новый Структура;
	
	Для Счетчик = 1 По 5 Цикл
		
		ТекущийЭлемент = ?(Счетчик > КолвоПоказателей, Настройки.МассивИмен[КолвоПоказателей - 1], 
			Настройки.МассивИмен[Счетчик - 1]);
		ИменаПоказателей.Вставить("ПоказательР1" + Счетчик, ТекущийЭлемент);
	
	КонецЦикла;
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.МассивИмен[0], 1, 6));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.МассивИмен[0], 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Для Счетчик = 1 По 5 Цикл
		
		ТекущийПоказатель = Показатели["ПоказательР1" + Счетчик];
		Запрос.УстановитьПараметр("СтрокаР1" + Счетчик, Сред(ТекущийПоказатель.ИмяПоказателя, 9, 3));
	
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14, &СтрокаР15)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	Выразить(ТПоказателя5.Значение_ КАК Число)	КАК ПоказательР15,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТПоказателя4.Строка_	= &СтрокаР14
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя5
	|			ПО	ТПоказателя5.Строка_	= &СтрокаР15
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	Для Счетчик = 1 По КолвоПоказателей Цикл
		Показатели["ПоказательР1" + Счетчик].Значение = 0;
	КонецЦикла;
	
	Если Выборка.Следующий() Тогда
		Для Счетчик = 1 По КолвоПоказателей Цикл
			Показатели["ПоказательР1" + Счетчик].Значение = Выборка["ПоказательР1" + Счетчик];
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели["ПоказательР1" + Счетчик]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Показатели;
		
КонецФункции

#КонецОбласти

#Область Проверки_Приложения_6

Процедура ПроверитьКС2021_1_151()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.151'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.1 стр.010 прил.6 Р.1 >= гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160001001");
	МассивИмен.Добавить("П000160002001");
	МассивИмен.Добавить("П000160003001");
	МассивИмен.Добавить("П000160004001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_152_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_152()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.152'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.010 прил.6 Р.1 >= гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160001002");
	МассивИмен.Добавить("П000160002002");
	МассивИмен.Добавить("П000160003002");
	МассивИмен.Добавить("П000160004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_152_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_152_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РасчетнаяСумма = Показатели.ПоказательР12.Значение + Показатели.ПоказательР13.Значение + 
		Показатели.ПоказательР14.Значение;
	Настройки.ЭтоОшибка		= Показатели.ПоказательР11.Значение < РасчетнаяСумма;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		Показатели.ПоказательР14.Значение, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_153()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.153'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.1 стр.050 прил.6 Р.1 = (гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1) / '") +
		НСтр("ru='гр.1 стр.010 прил.6 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005001");
	МассивИмен.Добавить("П000160002001");
	МассивИмен.Добавить("П000160003001");
	МассивИмен.Добавить("П000160004001");
	МассивИмен.Добавить("П000160001001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_154_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_154()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.154'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.050 прил.6 Р.1 = (гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1) / '") +
		НСтр("ru='гр.2 стр.010 прил.6 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005002");
	МассивИмен.Добавить("П000160002002");
	МассивИмен.Добавить("П000160003002");
	МассивИмен.Добавить("П000160004002");
	МассивИмен.Добавить("П000160001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_154_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_154_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РасчетнаяСумма = ?(Показатели.ПоказательР15.Значение = 0, 0, Окр((Показатели.ПоказательР12.Значение + 
		Показатели.ПоказательР13.Значение + Показатели.ПоказательР14.Значение) / Показатели.ПоказательР15.Значение * 100,2));
	Настройки.ЭтоОшибка		= НЕ Показатели.ПоказательР11.Значение = РасчетнаяСумма;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		Показатели.ПоказательР14.Значение, Показатели.ПоказательР15.Значение, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_155()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.155'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.1 стр.050 прил.6 Р.1 >= 70'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 70'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_156_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_156()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.156'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.050 прил.6 Р.1 >= 70, если отчет за расчетный период (год)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 70'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_156_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_156_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Графа = Прав(Показатели.ПоказательР11.ИмяПоказателя, 1);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) 
		И (Графа = "1" ИЛИ Графа = "2" И ДанныеКС.Мес = 12) И Показатели.ПоказательР11.Значение < 70;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_7

Процедура ПроверитьКС2021_1_157()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.157'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.2 стр.010 прил.7 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_144_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_158()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.158'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.3 стр.010 прил.7 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170001003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_144_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_159()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.159'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.2 стр.020 прил.7 Р.1 >= гр.2 стр.030 прил.7 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170002002");
	МассивИмен.Добавить("П000170003002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_146_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_160()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.160'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма доходов в гр.3 стр.020 прил.7 Р.1 >= гр.3 стр.030 прил.7 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170002003");
	МассивИмен.Добавить("П000170003003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_146_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_161()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.161'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.040 прил.7 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.7 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004002");
	МассивИмен.Добавить("П000170003002");
	МассивИмен.Добавить("П000170002002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_148_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_162()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.162'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.3 стр.040 прил.7 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.7 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004003");
	МассивИмен.Добавить("П000170003003");
	МассивИмен.Добавить("П000170002003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_148_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_163()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.163'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.2 стр.040 прил.7 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_150_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_164()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.164'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.3 стр.040 прил.7 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2021_1_150_код(Настройки);	
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_8

Процедура ПроверитьКС2021_1_165()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.165'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = ∑ всех гр.1 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001001");
	Настройки.Вставить("ПоказательР12", "П00018М108001_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_166()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.166'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.010 прил.8 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001002");
	Настройки.Вставить("ПоказательР12", "П00018М108002_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_167()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.167'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.010 прил.8 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001003");
	Настройки.Вставить("ПоказательР12", "П00018М108003_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_168()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.168'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.010 прил.8 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001004");
	Настройки.Вставить("ПоказательР12", "П00018М108004_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_168_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР11"		, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Сред(Настройки.ПоказательР12, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_100.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР11
	|	И ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_100.Значение_ КАК Число)	КАК ПоказательР12,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР12
	|	И ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР11 = РезультатЗапроса[0].Выбрать();
	ВыборкаР12 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаР11.Следующий() Тогда
		СумР11 = ВыборкаР11.ПоказательР11;
		ВнестиПоказательВРасшифровку2021(ВыборкаР11, Показатели.ПоказательР11);
	КонецЕсли;
	
	Если ВыборкаР12.Следующий() Тогда
		СумР12 = ВыборкаР12.ПоказательР12;
		Выборка = ВыборкаР12.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		СумР11, СумР12);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_1_169()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.169'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = гр.1 стр.010 прил.8 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001800010");
	ПроверитьКС2021_1_142_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_9

Процедура ПроверитьКС2021_1_170()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.170'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = ∑ всех гр.1 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001001");
	Настройки.Вставить("ПоказательР12", "П00019М108001_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_171()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.171'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.2 стр.010 прил.9 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001002");
	Настройки.Вставить("ПоказательР12", "П00019М108002_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_172()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.172'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.3 стр.010 прил.9 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001003");
	Настройки.Вставить("ПоказательР12", "П00019М108003_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_173()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.173'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат в гр.4 стр.010 прил.9 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001004");
	Настройки.Вставить("ПоказательР12", "П00019М108004_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_174()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.174'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = гр.1 стр.010 прил.9 Р.1 '") +
		НСтр("ru='предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001900010");
	ПроверитьКС2021_1_142_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_2

Процедура ПроверитьКС2021_1_175()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.175'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов за расчетный период в стр.030 Р.2 = ∑ всех гр.1 стр.090 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000020003001");
	Настройки.Вставить("ПоказательР12", "П00021М109001_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_176()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.176'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма страховых взносов за расчетный период в стр.050 Р.2 = ∑ всех гр.2 стр.090 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000020005001");
	Настройки.Вставить("ПоказательР12", "П00021М109002_");
	ПроверитьКС2021_1_168_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_177()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.177'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='1 января календарного года Титульного листа <= стр.070 прил.1 Р.2 <= 31 декабря календарного '") +
		НСтр("ru='года Титульного листа'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='01.01.%1 <= %2 <= 31.12.%1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная дата'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00021М107001_");
	ПроверитьКС2021_1_178_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_178()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.178'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='1 января календарного года Титульного листа <= стр.080 прил.1 Р.2 <= 31 декабря календарного '") +
		НСтр("ru='года Титульного листа'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='01.01.%1 <= %2 <= 31.12.%1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная дата'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00021М108001_");
	ПроверитьКС2021_1_178_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_178_код(Настройки)
	
	Перем Показатели;
	
	ГодТитульныйСтр	= ПараметрыКС.СтруктураДанныхТитульный.ОтчетГод;
	ГодТитульный	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ГодТитульныйСтр);
	
	Если ГодТитульный = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР2"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР2"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР2
	|	И ВТ_100.Строка_	= &СтрокаР2
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель);
		
		Настройки.ЭтоОшибка		= ДанныеКС.Р00021Заполнен И НЕ Год(Выборка.Показатель) = ГодТитульный;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ГодТитульныйСтр, Формат(Выборка.Показатель, "ДФ=dd.MM.yyyy; ДП=(...)"));
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_179()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.179'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Дата начала членства в КФХ в стр.070 прил.1 Р.2 <= стр.080 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная дата'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель1", "П00021М107001_");
	Настройки.Вставить("Показатель2", "П00021М108001_");
	ПроверитьКС2021_1_179_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_179_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель1", Настройки.Показатель1);
	ИменаПоказателей.Вставить("Показатель2", Настройки.Показатель2);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР21"		, Сред(Настройки.Показатель1, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР21"		, Сред(Настройки.Показатель1, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР22"		, Сред(Настройки.Показатель2, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки,
	|	ВТ_100.Строка_		КАК СтрокаПоказателя
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &РазделР21
	|	И ВТ_100.Строка_ В (&СтрокаР21, &СтрокаР22)
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТПоказателя1.Отчет			КАК Отчет,
	|	ТПоказателя1.Страница		КАК Страница,
	|	ТПоказателя1.НомерСтроки	КАК НомерСтроки,
	|	ТПоказателя1.Показатель		КАК Показатель1,
	|	ТПоказателя2.Показатель		КАК Показатель2
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|		ПО ТПоказателя1.НомерСтроки = ТПоказателя2.НомерСтроки
	|ГДЕ
	|	ТПоказателя1.СтрокаПоказателя = ""070""
	|	И ТПоказателя2.СтрокаПоказателя = ""080""
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель1);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель2);
		
		Настройки.ЭтоОшибка		= ДанныеКС.Р00021Заполнен И Выборка.Показатель1 > Выборка.Показатель2;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			Формат(Выборка.Показатель1, "ДФ=dd.MM.yyyy; ДП=(...)"), Формат(Выборка.Показатель2, "ДФ=dd.MM.yyyy; ДП=(...)"));
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Прочие

Процедура ПроверитьКС2021_1_180()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.180'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.020 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010002001");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_181()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.181'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.040 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010004001");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_182()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.182'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.060 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00001М106001_");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_183()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.183'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.080 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00001М208001_");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_184()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.184'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.100 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010010001");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_185()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.185'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.020 Р.2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000020002001");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_186()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.186'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='КБК в стр.040 Р.2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000020004001");
	ПроверитьКС2021_1_186_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_186_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР1"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР1
	|	И ВТ_100.Строка_	= &СтрокаР1
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	ПрефиксПоказателя = Сред(Настройки.Показатель, 1, 13);
	СпискиКБК = ПараметрыКС.СписочныеЗначения;
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель);
		
		Если СпискиКБК.Свойство(ПрефиксПоказателя) Тогда
			Настройки.ЭтоОшибка		= СпискиКБК[ПрефиксПоказателя].Найти(Выборка.Показатель) = Неопределено;
		Иначе
			Настройки.ЭтоОшибка		= Ложь;
		КонецЕсли; 
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			?(ЗначениеЗаполнено(Выборка.Показатель), Выборка.Показатель, "(...)"));
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_187()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.187'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='ОКТМО в стр.010 Р.1 должен соответствовать Общероссийскому классификатору территорий '") +
		НСтр("ru='муниципальных образований'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочный ОКТМО'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_188()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.188'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='ОКТМО в стр.010 Р.2 должен соответствовать Общероссийскому классификатору территорий '") +
		НСтр("ru='муниципальных образований'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочный ОКТМО'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_189()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.189'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ Стр.200 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.200 подр.3.2.2 Р.3 предыдущего '") +
		НСтр("ru='отчетного периода не равна 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_190()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.190'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='∑ Стр.210 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.210 подр.3.2.2 Р.3 предыдущего '") +
		НСтр("ru='отчетного периода не равна 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_191()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.191'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (2 месяц ОП) = стр.190 подр.3.2.2 '") +
		НСтр("ru='Р.3 (3 месяц ОП)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение тарифа'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_192()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.192'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (3 месяц ОП) предыдущего отчетного '") +
		НСтр("ru='периода'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение тарифа'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_193()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.193'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если код тарифа в стр.001 прил.1 Р.1 = 20, то наличие прил.1 Р.1 с кодом тарифа в стр.001 '") +
		НСтр("ru='= 01 обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код тарифа 01 заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода тарифа'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000110000101");
	ПроверитьКС2021_1_193_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_193_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР1"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Показатель,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВТ_100.Значение_ = ""01""
	|			ТОГДА ВТ_100.Значение_
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Тариф01,
	|	ВЫБОР
	|		КОГДА ВТ_100.Значение_ = ""20""
	|			ТОГДА ВТ_100.Значение_
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Тариф20
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &РазделР1
	|	И ВТ_100.Строка_ = &СтрокаР1
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	МАКСИМУМ(Тариф01),
	|	МАКСИМУМ(Тариф20)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаТ.Следующий() Тогда
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ЗначениеЗаполнено(ВыборкаТ.Тариф20) И НЕ ЗначениеЗаполнено(ВыборкаТ.Тариф01);
		Настройки.Расшифровка	= Настройки.ШаблонРасшифровки;
		ДополнитьСтруктуруОшибок2021(Настройки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_194()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.194'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории МС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, '") +
		НСтр("ru='то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = НР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код категории НР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "НР");
	Настройки.Вставить("КатегорияМС", "МС");
	
	ПроверитьКС2021_1_196_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_195()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.195'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВЖМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, '") +
		НСтр("ru='то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВЖНР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код категории ВЖНР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВЖНР");
	Настройки.Вставить("КатегорияМС", "ВЖМС");
	
	ПроверитьКС2021_1_196_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_196()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.196'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВПМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, '") +
		НСтр("ru='то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВПНР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='Код категории ВПНР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВПНР");
	Настройки.Вставить("КатегорияМС", "ВПМС");
	
	ПроверитьКС2021_1_196_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_196_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"		, "П000310004001");
	ИменаПоказателей.Вставить("Показатель"	, "П00321М113001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("КатегорияНР"	, Настройки.КатегорияНР);
	Запрос.УстановитьПараметр("КатегорияМС"	, Настройки.КатегорияМС);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК КатегорияМС
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) = &КатегорияМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Показатель,
	|	ВТ_321.МесСтр КАК Мес,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияНР,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияМС
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияМС
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|ИТОГИ
	|	МАКСИМУМ(КатегорияНР),
	|	МАКСИМУМ(КатегорияМС),
	|	МАКСИМУМ(Фамилия),
	|	МАКСИМУМ(Снилс),
	|	МИНИМУМ(Страница)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка	= ЗначениеЗаполнено(ВыборкаФ.КатегорияМС) И НЕ ЗначениеЗаполнено(ВыборкаФ.КатегорияНР);
		
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(ВыборкаФ, Показатели.Фамилия);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.Показатель.Дополнение	= "" + Выборка.Мес + " месяц";
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.Расшифровка = Настройки.ШаблонРасшифровки;
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_197()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.197'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории МС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, '") +
		НСтр("ru='то по стр.130 = НР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "НР");
	Настройки.Вставить("КатегорияМС", "МС");
	
	ПроверитьКС2021_1_199_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_198()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.198'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВЖМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, '") +
		НСтр("ru='то по стр.130 = ВЖНР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВЖНР");
	Настройки.Вставить("КатегорияМС", "ВЖМС");
	
	ПроверитьКС2021_1_199_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_199()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.199'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='При наличии категории ВПМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, '") +
		НСтр("ru='то по стр.130 = ВПНР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВПНР");
	Настройки.Вставить("КатегорияМС", "ВПМС");
	
	ПроверитьКС2021_1_199_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_199_код(Настройки)
	
	Перем Показатели;
	
	Если ДанныеКС.МРОТ = Неопределено ИЛИ ДанныеКС.ПредельнаяВеличинаБазы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"		, "П000310004001");
	ИменаПоказателей.Вставить("Показатель"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("КатегорияНР"	, Настройки.КатегорияНР);
	Запрос.УстановитьПараметр("КатегорияМС"	, Настройки.КатегорияМС);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК КатегорияМС
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) = &КатегорияМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	СУММА(ВТ_321.С150) КАК БазаИтогом
	|ПОМЕСТИТЬ ВТ_312
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ОтчетныйМесяц)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.МесСтр КАК КлючСортировки,
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Категория,
	|	ВТ_321.С150 КАК Показатель,
	|	ВТ_321.МесСтр КАК Мес,
	|	ВТ_312.БазаИтогом КАК БазаИтогом,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияНР,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияМС
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияМС,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С150
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаНР
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_312 КАК ВТ_312
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_312.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки
	|ИТОГИ
	|	МАКСИМУМ(Снилс),
	|	МАКСИМУМ(Фамилия),
	|	МИНИМУМ(Страница),
	|	МАКСИМУМ(Мес),
	|	МАКСИМУМ(БазаИтогом),
	|	МАКСИМУМ(КатегорияНР),
	|	МАКСИМУМ(КатегорияМС),
	|	МАКСИМУМ(БазаНР)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_312";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка	= ЗначениеЗаполнено(ВыборкаФ.КатегорияМС) И ЗначениеЗаполнено(ВыборкаФ.КатегорияНР) 
			И ВыборкаФ.БазаИтогом <= ДанныеКС.ПредельнаяВеличинаБазы - ДанныеКС.МРОТ И НЕ ВыборкаФ.БазаНР = ДанныеКС.МРОТ;
		
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс + ", " + ВыборкаФ.Мес + " мес");
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(ВыборкаФ, Показатели.Фамилия);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.Показатель.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория;
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаФ.БазаНР, ДанныеКС.МРОТ);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_200()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.200'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Титульный лист'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена.'") + Символы.ПС + 
		НСтр("ru='Не применяется в отношении плательщиков, не имеющих обособленных подразделений'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Значение поля ""Среднесписочная численность, чел."" Титульного листа <= гр.1 стр.010. подр.1.1 '") +
		НСтр("ru='прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение среднесписочной численности'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_5_1

Процедура ПроверитьКС2021_1_201()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.201'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.2 стр.010 прил.5.1 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М101002_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "2");
	ПроверитьКС2021_1_202_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_202()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.202'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Средняя численность работников в гр.3 стр.010 прил.5.1 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М101003_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "3");
	ПроверитьКС2021_1_202_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_202_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00151М10100" + Настройки.НомерГрафы + "_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Выборка = ПолучитьПоказателиМнЧ2021(Настройки);
	Пока Выборка.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Выборка.ПоказательР11) И Выборка.ПоказательР11 < 7;
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР11);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_203()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.203'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.020 прил.5.1 Р.1 >= гр.2 стр.030 прил.5.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М102002_");
	МассивИмен.Добавить("П00151М103002_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "2");
	ПроверитьКС2021_1_204_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_204()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.204'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.020 прил.5.1 Р.1 >= гр.3 стр.030 прил.5.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М102003_");
	МассивИмен.Добавить("П00151М103003_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "3");
	ПроверитьКС2021_1_204_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_204_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00151М10200" + Настройки.НомерГрафы + "_");
	ИменаПоказателей.Вставить("ПоказательР12", "П00151М10300" + Настройки.НомерГрафы + "_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Выборка = ПолучитьПоказателиМнЧ2021(Настройки);
	Пока Выборка.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		
		Настройки.ЭтоОшибка		= Выборка.ПоказательР11 < Выборка.ПоказательР12;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			Выборка.ПоказательР11, Выборка.ПоказательР12);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_205()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.205'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.2 стр.040 прил.5.1 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.5.1 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М104002_");
	МассивИмен.Добавить("П00151М103002_");
	МассивИмен.Добавить("П00151М102002_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "2");
	ПроверитьКС2021_1_206_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_206()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.206'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Доля доходов в гр.3 стр.040 прил.5.1 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.5.1 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М104003_");
	МассивИмен.Добавить("П00151М103003_");
	МассивИмен.Добавить("П00151М102003_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "3");
	ПроверитьКС2021_1_206_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_206_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00151М10400" + Настройки.НомерГрафы + "_");
	ИменаПоказателей.Вставить("ПоказательР12", "П00151М10300" + Настройки.НомерГрафы + "_");
	ИменаПоказателей.Вставить("ПоказательР13", "П00151М10200" + Настройки.НомерГрафы + "_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Выборка = ПолучитьПоказателиМнЧ2021(Настройки);
	Пока Выборка.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
		
		РезультатДеления = ?(Выборка.ПоказательР13 = 0, 0, Окр(Выборка.ПоказательР12 / Выборка.ПоказательР13 *100, 2));
		РезультатДеления = Макс(РезультатДеления, 0);
		Настройки.ЭтоОшибка		= НЕ Выборка.ПоказательР11 = РезультатДеления;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			Выборка.ПоказательР11, Выборка.ПоказательР12, Выборка.ПоказательР13, РезультатДеления);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_207()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.207'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.2 стр.040 прил.5.1 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М104002_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "2");
	ПроверитьКС2021_1_208_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_208()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.208'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='С 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Доля доходов в гр.3 стр.040 прил.5.1 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П00151М104003_");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	Настройки.Вставить("НомерГрафы"		, "3");
	ПроверитьКС2021_1_208_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_208_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00151М10400" + Настройки.НомерГрафы + "_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Выборка = ПолучитьПоказателиМнЧ2021(Настройки);
	Пока Выборка.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Выборка.ПоказательР11) И Выборка.ПоказательР11 < 90;
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР11);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПолучитьПоказателиМнЧ2021(Настройки)
	
	Перем Показатели;
	
	КолвоПоказателей = Настройки.МассивИмен.Количество();
	ИменаПоказателей = Новый Структура;
	
	Для Счетчик = 1 По 3 Цикл
		
		ТекущийЭлемент = ?(Счетчик > КолвоПоказателей, Настройки.МассивИмен[КолвоПоказателей - 1], 
			Настройки.МассивИмен[Счетчик - 1]);
		ИменаПоказателей.Вставить("ПоказательР1" + Счетчик, ТекущийЭлемент);
	
	КонецЦикла;
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.МассивИмен[0], 1, 6));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.МассивИмен[0], 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Для Счетчик = 1 По 3 Цикл
		
		ТекущийПоказатель = Показатели["ПоказательР1" + Счетчик];
		Запрос.УстановитьПараметр("СтрокаР1" + Счетчик, Сред(ТекущийПоказатель.ИмяПоказателя, 9, 3));
	
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК СтрокаТЧ
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И ВТ_100.Строка_ В (&СтрокаР11, &СтрокаР12, &СтрокаР13)
	|	И ВТ_100.Графа = &Графа
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО) КАК ПоказательР11,
	|	ВЫРАЗИТЬ(ТПоказателя2.Значение_ КАК ЧИСЛО) КАК ПоказательР12,
	|	ВЫРАЗИТЬ(ТПоказателя3.Значение_ КАК ЧИСЛО) КАК ПоказательР13,
	|	ТПоказателя1.Отчет КАК Отчет,
	|	ТПоказателя1.Страница КАК Страница,
	|	ТПоказателя1.СтрокаТЧ КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|		ПО (ТПоказателя2.Строка_ = &СтрокаР12)
	|			И ТПоказателя1.СтрокаТЧ = ТПоказателя2.СтрокаТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|		ПО (ТПоказателя3.Строка_ = &СтрокаР13)
	|			И ТПоказателя1.СтрокаТЧ = ТПоказателя3.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выбрать();
	
КонецФункции

#КонецОбласти

#Область Проверки_Прочие_2

Процедура ПроверитьКС2021_1_209а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.209а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1 к Разделу 2'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Расчетный период 2020, 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 430 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма взносов на ОПС в гр.1 стр.090 прил.1 Р.2 по '") +
		НСтр("ru='застрахованному лицу за расчетный период 2020, 2021 <= 32 448'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= 32448'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма взносов на ОПС'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"		, "01");
	Настройки.Вставить("СуммаВзносов"	, 32448);
	ПроверитьКС2021_1_210_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_210а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.210а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1 к Разделу 2'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Расчетный период 2020, 2021'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 430 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru='Сумма взносов на ОМС в гр.2 стр.090 прил.1 Р.2 по '") +
		НСтр("ru='застрахованному лицу за расчетный период 2020, 2021 <= 8 426'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= 8426'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма взносов на ОМС'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"		, "02");
	Настройки.Вставить("СуммаВзносов"	, 8426);
	ПроверитьКС2021_1_210_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_210_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00021М1090" + Настройки.НомерГрафы + "_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, "П00021");
	Запрос.УстановитьПараметр("СтрокаР11"		, "090");
	Запрос.УстановитьПараметр("Графа"			, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Значение_ КАК ПоказательР11,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И ВТ_100.Строка_ = &СтрокаР11
	|	И ВТ_100.Графа = &Графа
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		Настройки.ЭтоОшибка		= Выборка.ПоказательР11 > Настройки.СуммаВзносов;
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР11);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_300_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.300.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='Отключено с 2021'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 06, то Приложение 5 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru='Приложение 5 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необоснованное применение кода тарифа плательщика 06'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "06");
	Настройки.Вставить("РазделЗаполнен"		, ДанныеКС.Р00015Заполнен);
	ПроверитьКС2021_1_302_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_301_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.301.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 10, то Приложение 6 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru='Приложение 6 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необоснованное применение кода тарифа плательщика 10'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "10");
	Настройки.Вставить("РазделЗаполнен	"	, ДанныеКС.Р00016Заполнен);
	ПроверитьКС2021_1_302_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_302_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1.302.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Если в отчете указан код тарифа плательщика 18, то Приложение 7 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru='Приложение 7 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Необоснованное применение кода тарифа плательщика 18'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "18");
	Настройки.Вставить("РазделЗаполнен	"	, ДанныеКС.Р00017Заполнен);
	ПроверитьКС2021_1_302_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_1_302_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("КодТарифа"		, "П000110000101");
	ЗаполнитьСтруктуруПоказателей2021(Показатели	, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница";
	
	РезультатЗапроса = Запрос.Выполнить();
	ЗарегистрироватьФормулу2021(Настройки);
	КодНайден = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.КодТарифа);
		Если Выборка.КодТарифа = Настройки.КодТарифа Тогда
			КодНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка	= КодНайден И НЕ Настройки.РазделЗаполнен;
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_2_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Расчет обязателен к представлению в случае представления отчета 6-НДФЛ'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_2а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.2а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Отключено с 2021 (Письмо ФНС от 19.02.2021 № БС-4-11/2124@)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.020 - стр.025 Р.1 6-НДФЛ >= гр.1 стр.050 подр.1.1 прил.1 Р.1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_2б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.2б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена. Противоречивое'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Стр.110 Р.2 6-НДФЛ - стр.111 Р.2 6-НДФЛ >= гр.1 стр.050 подр.1.1 прил.1 Р.1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_3()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.2 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 1 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_4()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.3 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 2 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_5()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Гр.4 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 3 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_6()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 421 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Средняя сумма выплат застрахованному лицу по трудовому договору (сумма (ст. 140 подр. 3.2.1 Р.3 '") +
		НСтр("ru='- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, '") +
		НСтр("ru='должна быть больше или равна МРОТ, по каждому застрахованному'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='(%1 - %2) / %3 Итог [%4] >= %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Возможно занижение базы для исчисления страховых взносов'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2021(		, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.МРОТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Разность"	, "П00321М114001_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК Ключ,
	|	ВТ_310.Фамилия + "", "" + ВТ_310.Снилс + "", "" +
	|	ВТ_321.МесСтр + "" месяц, "" + ВТ_321.С130 КАК ПредставлениеПоказателя,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С140 - ВТ_321.С160 КАК Разность,
	|	ВТ_321.С140 КАК С140,
	|	ВТ_321.С160 КАК С160
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	НЕ ВТ_321.С140 - ВТ_321.С160 = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Мес
	|ИТОГИ
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мес),
	|	СУММА(Разность),
	|	СУММА(С140),
	|	СУММА(С160)
	|ПО
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма = Окр((Выборка.Разность) / Выборка.Мес, 2);
		Настройки.ЭтоОшибка	= РасчетнаяСумма < ДанныеКС.МРОТ;
		
		Если НЕ Настройки.ЭтоОшибка И ДанныеКС.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2021(Настройки);
		
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='Сумма выплат'")								, Выборка.Разность);
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='Количество месяцев, в которых были выплаты'")	, Выборка.Мес);
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='Средняя сумма выплат'")						, РасчетнаяСумма);
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='МРОТ'")										, ДанныеКС.МРОТ);
		
		ВыборкаД = Выборка.Выбрать();
		Пока ВыборкаД.Следующий() Цикл
			Показатели.Разность.Представление = ВыборкаД.ПредставлениеПоказателя;
			ВнестиПоказательВРасшифровку2021(ВыборкаД, Показатели.Разность);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, 
			Выборка.С140, Выборка.С160, Выборка.Мес, РасчетнаяСумма, ДанныеКС.МРОТ);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_7()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 421 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Средняя сумма выплат застрахованным лицам по трудовым договорам (сумма (ст. 140 подр. 3.2.1 Р.3 '") +
		НСтр("ru='- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, '") +
		НСтр("ru='должна быть больше или равна среднеотраслевой ЗП в регионе, в целом по плательщику страховых взносов'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='(%1 - %2) / %3 Итог [%4] >= %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru='Возможно занижение базы для исчисления страховых взносов'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2021(		, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.СредняяЗарплата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Разность"	, "П00321М114001_");
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.МесСтр КАК Ключ,
	|	ВТ_310.Фамилия + "", "" + ВТ_310.Снилс + "", "" +
	|	ВТ_321.МесСтр + "" месяц, "" + ВТ_321.С130 КАК ПредставлениеПоказателя,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С140 - ВТ_321.С160 КАК Разность,
	|	ВТ_321.С140 КАК С140,
	|	ВТ_321.С160 КАК С160
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	НЕ ВТ_321.С140 - ВТ_321.С160 = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ключ),
	|	СУММА(Разность),
	|	СУММА(С140),
	|	СУММА(С160)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КолвоСотрудников = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма = Окр((Выборка.Разность) / Выборка.Ключ, 2);
		Настройки.ЭтоОшибка	= РасчетнаяСумма < ДанныеКС.СредняяЗарплата;
		ЗарегистрироватьФормулу2021(Настройки);
		
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='Сумма выплат в целом по плательщику'")					, Выборка.Разность);
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='Количество человеко-месяцев, в которых были выплаты'")	, Выборка.Ключ);
		ВнестиПоказательБезРасшифровки2021(НСтр("ru='Средняя сумма выплат в целом по плательщику'")			, РасчетнаяСумма);
		ВнестиПоказательБезРасшифровки2021("Средняя зарплата, регион " + ДанныеКС.КодРегиона + ", отрасль (ОКВЭД) " 
			+ ДанныеКС.КодОКВЭД, ДанныеКС.СредняяЗарплата);
		
		Счетчик = 1;
		ВыборкаД = Выборка.Выбрать();
		Пока ВыборкаД.Следующий() И Счетчик < 2000 Цикл
			Показатели.Разность.Представление = ВыборкаД.ПредставлениеПоказателя;
			ВнестиПоказательВРасшифровку2021(ВыборкаД, Показатели.Разность);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, Выборка.С140, Выборка.С160, Выборка.Ключ, 
			РасчетнаяСумма, ДанныеКС.СредняяЗарплата);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_8()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в поле 001 подр.1.1 прил.1 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru='о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_9()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в поле 001 подр.1.2 прил.1 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru='о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в поле 001 прил.2 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru='о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_11()
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в подр.1.1 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru='условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru='Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00011");
	Настройки.Вставить("ИмяПоказателя"	, "П000110000101");
	ПроверитьКС2021_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_12()
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в подр.1.2 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru='условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru='Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00011");
	Настройки.Вставить("ИмяПоказателя"	, "П000110000101");
	ПроверитьКС2021_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_13()
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='При наличии в прил.2 Р.1 значения тарифа по стр.001 прил.2 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru='условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru='Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru='Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00012");
	Настройки.Вставить("ИмяПоказателя"	, "П00012М100101_");
	ПроверитьКС2021_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_13_код(Настройки)
	
	Перем Показатели;
	
	Если ДанныеКС.ПострадавшиеОтрасли = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("КодТарифа"		, Настройки.ИмяПоказателя);
	ЗаполнитьСтруктуруПоказателей2021(Показатели	, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, Настройки.РазделТарифа);
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ЗарегистрироватьФормулу2021(Настройки);
	ВнестиПоказательБезРасшифровки2021(НСтр("ru='Код ОКВЭД2'"), ДанныеКС.ОКВЭД2);
	КодНайден = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.КодТарифа);
		Если Выборка.КодТарифа = Настройки.КодТарифа Тогда
			КодНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка	= КодНайден И НЕ ДанныеКС.ЭтоПострадавшаяОтрасль;
	Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, СтрРазделить(ДанныеКС.ОКВЭД2, ".")[0], 
		СтрСоединить(ДанныеКС.ПострадавшиеОтрасли, ", "));
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_2_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.14'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных в гр.2 стр.010 подр.1.1 прил.1 Р.1 за 1 месяц отчетного периода = '") +
		НСтр("ru='сумме строк Р.4 формы СЗВ-М за аналогичный месяц'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных в гр.3 стр.010 подр.1.1 прил.1 Р.1 за 2 месяц отчетного периода = '") +
		НСтр("ru='сумме строк Р.4 формы СЗВ-М за аналогичный месяц'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Количество застрахованных в гр.4 стр.010 подр.1.1 прил.1 Р.1 за 3 месяц отчетного периода = '") +
		НСтр("ru='сумме строк Р.4 формы СЗВ-М за аналогичный месяц'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Прочие_Межформенные_Прибыль

Процедура ПроверитьКС2021_2_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.17'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020г, тариф 06 или заполнено Прил.5 Р.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.020 прил.5 Р.1 <= (стр.010 + стр.020) Листа 02 с кодом 01 + '") +
		НСтр("ru='стр.340 Прил.3 к Листу 02 с кодом 01 налоговой декларации по налогу на прибыль за '") +
		НСтр("ru='9 месяцев предыдущего отчетного года'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_18()
	
	Перем Показатели;
	Перем ПоказателиПр;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.18'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020г, тариф 06 или заполнено Прил.5 Р.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.020 прил.5 Р.1 <= (стр.010 + стр.020) Листа 02 с кодом 17 + '") +
		НСтр("ru='стр.340 Прил.3 к Листу 02 с кодом 17 налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("СтрокаПоказателя"		, "020");
	Настройки.Вставить("ГрафаПоказателя"		, "03");
	Настройки.Вставить("ПризнакПлательщика"		, "17");
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П0001500" + Настройки.СтрокаПоказателя + Настройки.ГрафаПоказателя);
	
	ИменаПоказателейПр = Новый Структура;
	ИменаПоказателейПр.Вставить("П02С010", "П000020001003");
	ИменаПоказателейПр.Вставить("П02С020", "П000020002003");
	ИменаПоказателейПр.Вставить("П02С001", "П000020000100");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СформироватьПоказатели2021(ПоказателиПр, ИменаПоказателейПр);
		
	ЗарегистрироватьФормулу2021(Настройки);
		
	ВыборкаГр = ПолучитьПоказателиМнЧ_50_2021(Настройки);
	Если ВыборкаГр.Следующий() Тогда
		Выборка = ВыборкаГр.Выбрать();
		Пока Выборка.Следующий() Цикл
		
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		КонецЦикла;
	КонецЕсли; 
		
	Если ДанныеКС.ОтчетПрибыльДанныеПолучены Тогда
		Для каждого Лист02 Из ДанныеКС.Прибыль_Лист02 Цикл
			
			ЗаполнитьПоказатель2021(ПоказателиПр.П02С001, Лист02);
			Если ПоказателиПр.П02С001.Значение = Настройки.ПризнакПлательщика Тогда
				
			     ЗаполнитьИРасшифроватьПоказатель2021(ПоказателиПр.П02С010, Лист02);
			     ЗаполнитьИРасшифроватьПоказатель2021(ПоказателиПр.П02С020, Лист02);
			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	РасчетнаяСумма 			= ПоказателиПр.П02С010.Итог + ПоказателиПр.П02С020.Итог;
	Настройки.ЭтоОшибка		= ВыборкаГр.ПоказательР11 > РасчетнаяСумма;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаГр.ПоказательР11, ПоказателиПр.П02С010.Итог,
		ПоказателиПр.П02С020.Итог, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_2_19()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.19'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020г, тариф 06 или заполнено Прил.5 Р.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.030 прил.5 Р.1 <= стр.010 Листа 02 с кодом 01 налоговой '") +
		НСтр("ru='декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_20()
	
	Перем Показатели;
	Перем ПоказателиПр;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='2020г, тариф 06 или заполнено Прил.5 Р.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.030 прил.5 Р.1 <= стр.010 Листа 02 с кодом 17 налоговой '") +
		НСтр("ru='декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("СтрокаПоказателя"		, "030");
	Настройки.Вставить("ГрафаПоказателя"		, "03");
	Настройки.Вставить("ПризнакПлательщика"		, "17");
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П0001500" + Настройки.СтрокаПоказателя + Настройки.ГрафаПоказателя);
	
	ИменаПоказателейПр = Новый Структура;
	ИменаПоказателейПр.Вставить("П02С010", "П000020001003");
	ИменаПоказателейПр.Вставить("П02С001", "П000020000100");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СформироватьПоказатели2021(ПоказателиПр, ИменаПоказателейПр);
		
	ЗарегистрироватьФормулу2021(Настройки);
		
	ВыборкаГр = ПолучитьПоказателиМнЧ_50_2021(Настройки);
	Если ВыборкаГр.Следующий() Тогда
		Выборка = ВыборкаГр.Выбрать();
		Пока Выборка.Следующий() Цикл
		
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		КонецЦикла;
	КонецЕсли; 
		
	Если ДанныеКС.ОтчетПрибыльДанныеПолучены Тогда
		Для каждого Лист02 Из ДанныеКС.Прибыль_Лист02 Цикл
			
			ЗаполнитьПоказатель2021(ПоказателиПр.П02С001, Лист02);
			Если ПоказателиПр.П02С001.Значение = Настройки.ПризнакПлательщика Тогда
				
			     ЗаполнитьИРасшифроватьПоказатель2021(ПоказателиПр.П02С010, Лист02);
			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= ВыборкаГр.ПоказательР11 > ПоказателиПр.П02С010.Итог;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаГр.ПоказательР11, ПоказателиПр.П02С010.Итог);
	ДополнитьСтруктуруОшибок2021(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_21()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 06 или заполнено Прил.5.1 Р.1, код плательщика 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.020 прил.5.1 Р.1 (код плательщика 1) <= (стр.010 + стр.020) Листа 02 '") +
		НСтр("ru='с кодом 01 + стр.340 Прил.3 к Листу 02 с кодом 01 налоговой декларации по налогу на прибыль '") +
		НСтр("ru='за 9 месяцев предыдущего отчетного года'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_22()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 06 или заполнено Прил.5.1 Р.1, код плательщика 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.020 прил.5.1 Р.1 (код плательщика 1) <= (стр.010 + стр.020) Листа 02 '") +
		НСтр("ru='с кодом 17 + стр.340 Прил.3 к Листу 02 с кодом 17 налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("СтрокаПоказателя"		, "020");
	Настройки.Вставить("ГрафаПоказателя"		, "03");
	Настройки.Вставить("КодПлательщика"			, "1");
	Настройки.Вставить("ПризнакПлательщика"		, "17");
	ПроверитьКС2021_2_26_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_23()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 06 или заполнено Прил.5.1 Р.1, код плательщика 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.030 прил.5.1 Р.1 (код плательщика 1) <= стр.010 Листа 02 с кодом 01 '") +
		НСтр("ru='налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 06 или заполнено Прил.5.1 Р.1, код плательщика 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.030 прил.5.1 Р.1 (код плательщика 1) <= стр.010 Листа 02 с кодом 17 '") +
		НСтр("ru='налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("СтрокаПоказателя"		, "030");
	Настройки.Вставить("ГрафаПоказателя"		, "03");
	Настройки.Вставить("КодПлательщика"			, "1");
	Настройки.Вставить("ПризнакПлательщика"		, "17");
	ПроверитьКС2021_2_28_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 22 или заполнено Прил.5.1 Р.1, код плательщика 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.020 прил.5.1 Р.1 (код плательщика 2) <= (стр.010 + стр.020) Листа 02 '") +
		НСтр("ru='с кодом 01 + стр.340 Прил.3 к Листу 02 с кодом 01 налоговой декларации по налогу на прибыль '") +
		НСтр("ru='за 9 месяцев предыдущего отчетного года'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_26()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 22 или заполнено Прил.5.1 Р.1, код плательщика 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.020 прил.5.1 Р.1 (код плательщика 2) <= (стр.010 + стр.020) Листа 02 '") +
		НСтр("ru='с кодом 19 + стр.340 Прил.3 к Листу 02 с кодом 19 налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("СтрокаПоказателя"		, "020");
	Настройки.Вставить("ГрафаПоказателя"		, "03");
	Настройки.Вставить("КодПлательщика"			, "2");
	Настройки.Вставить("ПризнакПлательщика"		, "19");
	ПроверитьКС2021_2_26_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_26_код(Настройки)
	
	Перем Показатели;
	Перем ПоказателиПр;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00151М1" + Настройки.СтрокаПоказателя + Настройки.ГрафаПоказателя + "_");
	
	ИменаПоказателейПр = Новый Структура;
	ИменаПоказателейПр.Вставить("П02С010", "П000020001003");
	ИменаПоказателейПр.Вставить("П02С020", "П000020002003");
	ИменаПоказателейПр.Вставить("П02С001", "П000020000100");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СформироватьПоказатели2021(ПоказателиПр, ИменаПоказателейПр);
	
	ВыборкаГр = ПолучитьПоказателиМнЧ_51_2021(Настройки);
	Пока ВыборкаГр.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаГр.Выбрать();
		Пока Выборка.Следующий() Цикл
		
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		КонецЦикла; 
		
		Если ДанныеКС.ОтчетПрибыльДанныеПолучены Тогда
			Для каждого Лист02 Из ДанныеКС.Прибыль_Лист02 Цикл
				
				ЗаполнитьПоказатель2021(ПоказателиПр.П02С001, Лист02);
				Если ПоказателиПр.П02С001.Значение = Настройки.ПризнакПлательщика Тогда
					
				     ЗаполнитьИРасшифроватьПоказатель2021(ПоказателиПр.П02С010, Лист02);
				     ЗаполнитьИРасшифроватьПоказатель2021(ПоказателиПр.П02С020, Лист02);
				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		РасчетнаяСумма 			= ПоказателиПр.П02С010.Итог + ПоказателиПр.П02С020.Итог;
		Настройки.ЭтоОшибка		= ВыборкаГр.ПоказательР11 > РасчетнаяСумма;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаГр.ПоказательР11, ПоказателиПр.П02С010.Итог,
			ПоказателиПр.П02С020.Итог, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_27()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru='Реализация отложена'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 22 или заполнено Прил.5.1 Р.1, код плательщика 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.2 стр.030 прил.5.1 Р.1 (код плательщика 2) <= стр.010 Листа 02 с кодом 01 '") +
		НСтр("ru='налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_28()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2.28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 5.1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru='с 2021г, тариф 22 или заполнено Прил.5.1 Р.1, код плательщика 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='ст. 431 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма доходов в гр.3 стр.030 прил.5.1 Р.1 (код плательщика 2) <= стр.010 Листа 02 с кодом 19 '") +
		НСтр("ru='налоговой декларации по налогу на прибыль'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("СтрокаПоказателя"		, "030");
	Настройки.Вставить("ГрафаПоказателя"		, "03");
	Настройки.Вставить("КодПлательщика"			, "2");
	Настройки.Вставить("ПризнакПлательщика"		, "19");
	ПроверитьКС2021_2_28_код(Настройки);	
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_28_код(Настройки)
	
	Перем Показатели;
	Перем ПоказателиПр;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", "П00151М1" + Настройки.СтрокаПоказателя + Настройки.ГрафаПоказателя + "_");
	
	ИменаПоказателейПр = Новый Структура;
	ИменаПоказателейПр.Вставить("П02С010", "П000020001003");
	ИменаПоказателейПр.Вставить("П02С001", "П000020000100");
	
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	СформироватьПоказатели2021(ПоказателиПр, ИменаПоказателейПр);
	
	ВыборкаГр = ПолучитьПоказателиМнЧ_51_2021(Настройки);
	Пока ВыборкаГр.Следующий() Цикл
		
		ЗарегистрироватьФормулу2021(Настройки);
		
		Выборка = ВыборкаГр.Выбрать();
		Пока Выборка.Следующий() Цикл
		
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		
		КонецЦикла; 
		
		Если ДанныеКС.ОтчетПрибыльДанныеПолучены Тогда
			Для каждого Лист02 Из ДанныеКС.Прибыль_Лист02 Цикл
				
				ЗаполнитьПоказатель2021(ПоказателиПр.П02С001, Лист02);
				Если ПоказателиПр.П02С001.Значение = Настройки.ПризнакПлательщика Тогда
					
				     ЗаполнитьИРасшифроватьПоказатель2021(ПоказателиПр.П02С010, Лист02);
				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= ВыборкаГр.ПоказательР11 > ПоказателиПр.П02С010.Итог;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаГр.ПоказательР11, ПоказателиПр.П02С010.Итог);
		ДополнитьСтруктуруОшибок2021(Настройки);
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПолучитьПоказателиМнЧ_51_2021(Настройки)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, "П00151");
	Запрос.УстановитьПараметр("СтрокаР11"		, Настройки.СтрокаПоказателя);
	Запрос.УстановитьПараметр("СтрокаР12"		, "001");
	Запрос.УстановитьПараметр("Графа"			, Настройки.ГрафаПоказателя);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("КодПлательщика"	, Настройки.КодПлательщика);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК СтрокаТЧ
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И (ВТ_100.Строка_ = &СтрокаР11
	|				И ВТ_100.Графа = &Графа
	|			ИЛИ ВТ_100.Строка_ = &СтрокаР12)
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО) КАК ПоказательР11,
	|	ВЫРАЗИТЬ(ТПоказателя2.Значение_ КАК СТРОКА(1)) КАК ПоказательР12,
	|	ТПоказателя1.Отчет КАК Отчет,
	|	ТПоказателя1.Страница КАК Страница,
	|	ТПоказателя1.СтрокаТЧ КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|		ПО (ТПоказателя2.Строка_ = &СтрокаР12)
	|			И (ТПоказателя2.Значение_ = &КодПлательщика)
	|			И ТПоказателя1.СтрокаТЧ = ТПоказателя2.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11)
	|ПО
	|	ПоказательР12
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Функция ПолучитьПоказателиМнЧ_50_2021(Настройки)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, "П00015");
	Запрос.УстановитьПараметр("СтрокаР11"		, Настройки.СтрокаПоказателя);
	Запрос.УстановитьПараметр("Графа"			, Настройки.ГрафаПоказателя);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И ВТ_100.Строка_ = &СтрокаР11
	|	И ВТ_100.Графа = &Графа
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО) КАК ПоказательР11,
	|	ТПоказателя1.Отчет КАК Отчет,
	|	ТПоказателя1.Страница КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|ИТОГИ
	|	СУММА(ПоказательР11)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

Процедура ПроверитьКС2021_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, (НСтр("ru='Отключено с 2021 (Письмо ФНС от 29.01.2021 № БС-4-11/1020@)'")));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма произведенных расходов в гр.1 стр.070 прил.2 Р.1 = гр.3 стр.100 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000120007001");
	Настройки.Вставить("ПоказательР12", "П000130010003");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_3

Процедура ПроверитьКС2021_1_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР11"		, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Сред(Настройки.ПоказательР12, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК ПоказательР11,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР11
	|	И ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК ПоказательР12,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР12
	|	И ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12
	|	И ВТ_100.Мес		= &ОтчетныйМесяц";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР11 = РезультатЗапроса[0].Выбрать();
	ВыборкаР12 = РезультатЗапроса[1].Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаР11.Следующий() Тогда
		СумР11 = ВыборкаР11.ПоказательР11;
		ВнестиПоказательВРасшифровку2021(ВыборкаР11, Показатели.ПоказательР11);
	КонецЕсли;
	
	Если ВыборкаР12.Следующий() Тогда
		СумР12 = ВыборкаР12.ПоказательР12;
		ВнестиПоказательВРасшифровку2021(ВыборкаР12, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.010 прил.3 Р.1 >= гр.1 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001001");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_2_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 >= СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_3()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.010 прил.3 Р.1 >= гр.2 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001102");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_4()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.010 прил.3 Р.1 >= гр.3 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001103");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_5()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.010 прил.3 Р.1 >= гр.4 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001004");
	Настройки.Вставить("ПоказательР12", "П000130001104");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_6()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.020 прил.3 Р.1 >= гр.1 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002001");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_7()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.020 прил.3 Р.1 >= гр.2 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002102");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_8()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.020 прил.3 Р.1 >= гр.3 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002103");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_9()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.030 прил.3 Р.1 >= гр.1 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003001");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.030 прил.3 Р.1 >= гр.2 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003102");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.030 прил.3 Р.1 >= гр.3 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003103");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.030 прил.3 Р.1 >= гр.4 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003004");
	Настройки.Вставить("ПоказательР12", "П000130003104");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.061 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='14'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.062 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.060 прил.3 Р.1 = гр.2 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	Настройки.Вставить("ПоказательР13", "П000130006202");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_15_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	СумР13 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		СумР13 = Выборка.ПоказательР13;
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
	КонецЕсли;
	
	СуммаПоказателей		= СумР12 + СумР13;
	Настройки.ЭтоОшибка		= НЕ СумР11 = СуммаПоказателей;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12, СумР13, СуммаПоказателей);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.060 прил.3 Р.1 = гр.3 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	Настройки.Вставить("ПоказательР13", "П000130006203");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='17'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006004");
	Настройки.Вставить("ПоказательР12", "П000130006104");
	Настройки.Вставить("ПоказательР13", "П000130006204");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_18()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='18'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.070 прил.3 Р.1 = гр.4 стр.070 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007003");
	Настройки.Вставить("ПоказательР12", "П000130007004");
	ПроверитьКС2021_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_18_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("Строка"			, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	= &Строка
	|	И ВТ_100.Графа		В (&ГрафаР11, &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Графа	= &ГрафаР12
	|ГДЕ
	|	ТПоказателя1.Графа	= &ГрафаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_19()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='19'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.080 прил.3 Р.1 = гр.4 стр.080 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130008003");
	Настройки.Вставить("ПоказательР12", "П000130008004");
	ПроверитьКС2021_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_20()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.100 прил.3 Р.1 = гр.3 (стр.010 + стр.020 + стр.030 + стр.040 + стр.050 + '") +
		НСтр("ru='стр.060 + стр.070 + стр.080 + стр.090) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("010");
	МассивНомеровСтрок.Добавить("020");
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("040");
	МассивНомеровСтрок.Добавить("050");
	МассивНомеровСтрок.Добавить("060");
	МассивНомеровСтрок.Добавить("070");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("090");
	МассивНомеровСтрок.Добавить("100");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00013");
	Настройки.Вставить("Графа"		, "03");
	Настройки.Вставить("СтрокаСуммы", "100");
	
	ПроверитьКС2021_20_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_20_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("Графа"			, Настройки.Графа);
	Запрос.УстановитьПараметр("МассивСтрок"		, Настройки.МассивСтрок);
	Запрос.УстановитьПараметр("СтрокаСуммы"		, Настройки.СтрокаСуммы);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.ТабЧасть		КАК ТабЧасть,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&МассивСтрок)
	|	И ВТ_100.Графа		В (&Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_101.Раздел + ВТ_101.ТабЧасть + ВТ_101.Строка_ + ВТ_101.Графа КАК КодПоказателя,
	|	ВЫБОР
	|		КОГДА ВТ_101.Строка_ = &СтрокаСуммы ТОГДА 1 ИНАЧЕ 2 
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТ_101.Строка_ = &СтрокаСуммы ТОГДА 
	|		Выразить(ВТ_101.Значение_ КАК Число) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПоказательР11,
	|	Выразить(ВТ_101.Значение_ КАК Число)		КАК ПоказательР12,
	|	ВТ_101.Отчет		КАК Отчет,
	|	ВТ_101.Страница	КАК Страница,
	|	ВТ_101.Строка_	КАК Строка_
	|ИЗ
	|	ВТ_101 КАК ВТ_101
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	Строка_
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаГ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2021(Настройки);
	МассивСумм = Новый Массив;
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаГ.Следующий() Тогда
		СумР11 = ВыборкаГ.ПоказательР11;
		СумР12 = ВыборкаГ.ПоказательР12 - ВыборкаГ.ПоказательР11;
		
		Выборка = ВыборкаГ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР12", Выборка.КодПоказателя);
			ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
			Если Выборка.Приоритет = 2 Тогда
				МассивСумм.Добавить(Выборка.ПоказательР12);
			КонецЕсли;
		КонецЦикла
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СтрСоединить(МассивСумм, " + "), СумР12);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_21()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 (стр.010 + стр.030 + стр.060 + стр.070 + стр.080) '") +
		НСтр("ru='прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("010");
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("060");
	МассивНомеровСтрок.Добавить("070");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("100");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00013");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "100");
	
	ПроверитьКС2021_20_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_22()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.010 прил.3 Р.1 = гр.4 стр.250 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001004");
	Настройки.Вставить("ПоказательР12", "П000140025004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_23()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.030 прил.3 Р.1 = гр.4 стр.260 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003004");
	Настройки.Вставить("ПоказательР12", "П000140026004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 стр.270 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006004");
	Настройки.Вставить("ПоказательР12", "П000140027004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.061 прил.3 Р.1 = гр.4 стр.280 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006104");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_26()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.062 прил.3 Р.1 = гр.4 стр.290 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006204");
	Настройки.Вставить("ПоказательР12", "П000140029004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_27()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.070 прил.3 Р.1 = гр.4 стр.300 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007004");
	Настройки.Вставить("ПоказательР12", "П000140030004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_28()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.080 прил.3 Р.1 = гр.4 стр.310 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130008004");
	Настройки.Вставить("ПоказательР12", "П000140031004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_29()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 стр.240 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130010004");
	Настройки.Вставить("ПоказательР12", "П000140024004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_4

Процедура ПроверитьКС2021_30()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140002002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_31()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140003002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_32()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_33()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004002");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_34()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004002");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_35()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.040 прил.4 Р.1 = гр.3 (стр.050 + стр.060) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140005003");
	Настройки.Вставить("ПоказательР13", "П000140006003");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_36()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.010 прил.4 Р.1 = гр.4 (стр.020 + стр.030 + стр.040) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001004");
	Настройки.Вставить("ПоказательР12", "П000140002004");
	Настройки.Вставить("ПоказательР13", "П000140003004");
	Настройки.Вставить("ПоказательР14", "П000140004004");
	ПроверитьКС2021_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_36_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР14"		, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТПоказателя4.Строка_	= &СтрокаР14
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	СумР13 = 0;
	СумР14 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		СумР13 = Выборка.ПоказательР13;
		СумР14 = Выборка.ПоказательР14;
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР13);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР14);
	КонецЕсли;
	
	СуммаПоказателей		= СумР12 + СумР13 + СумР14;
	Настройки.ЭтоОшибка		= НЕ СумР11 = СуммаПоказателей;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12, СумР13, СумР14, СуммаПоказателей);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_37()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='37'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.040 прил.4 Р.1 = гр.4 (стр.050 + стр.060) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	Настройки.Вставить("ПоказательР13", "П000140006004");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_38()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='38'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140008002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_39()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='39'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140009002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_40()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='40'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_41()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='41'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010002");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_42()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='42'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010002");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_43()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='43'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.100 прил.4 Р.1 = гр.3 (стр.110 + стр.120) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140011003");
	Настройки.Вставить("ПоказательР13", "П000140012003");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_44()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='44'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.070 прил.4 Р.1 = гр.4 (стр.080 + стр.090 + стр.100) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007004");
	Настройки.Вставить("ПоказательР12", "П000140008004");
	Настройки.Вставить("ПоказательР13", "П000140009004");
	Настройки.Вставить("ПоказательР14", "П000140010004");
	ПроверитьКС2021_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_45()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='45'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.4 Р.1 = гр.4 (стр.110 + стр.120) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140011004");
	Настройки.Вставить("ПоказательР13", "П000140012004");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_46()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='46'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.130 прил.4 Р.1 = гр.2 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140013002");
	Настройки.Вставить("ПоказательР12", "П000140014002");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_47()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='47'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.130 прил.4 Р.1 = гр.4 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140013004");
	Настройки.Вставить("ПоказательР12", "П000140014004");
	ПроверитьКС2021_1_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_48()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='48'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140016002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_49()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='49'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140017002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_50()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='50'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_51()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='51'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018002");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_52()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='52'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018002");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_53()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='53'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.180 прил.4 Р.1 = гр.3 (стр.190 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140019003");
	Настройки.Вставить("ПоказательР13", "П000140020003");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_54()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='54'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.150 прил.4 Р.1 = гр.4 (стр.160 + стр.170 + стр.180) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015004");
	Настройки.Вставить("ПоказательР12", "П000140016004");
	Настройки.Вставить("ПоказательР13", "П000140017004");
	Настройки.Вставить("ПоказательР14", "П000140018004");
	ПроверитьКС2021_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_55()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='55'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.180 прил.4 Р.1 = гр.4 (стр.190 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140019004");
	Настройки.Вставить("ПоказательР13", "П000140020004");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_56()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='56'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021002");
	Настройки.Вставить("ПоказательР12", "П000140022002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_57()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='57'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021002");
	Настройки.Вставить("ПоказательР12", "П000140023002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_58()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='58'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.210 прил.4 Р.1 = гр.4 (стр.220 + стр.230) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021004");
	Настройки.Вставить("ПоказательР12", "П000140022004");
	Настройки.Вставить("ПоказательР13", "П000140023004");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_59()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='59'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.010 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140001002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_60()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='60'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.070 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140007002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_61()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='61'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.130 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140013002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_62()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='62'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.150 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140015002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_63()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='63'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.210 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140021002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_64()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='64'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.250 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140025002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_65()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='65'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.260 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140026002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_66()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='66'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.270 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_67()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='67'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140002002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_68()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='68'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140008002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_69()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='69'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140014002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_70()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='70'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140016002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_71()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='71'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140022002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_72()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='72'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140003002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_73()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='73'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140009002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_74()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='74'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140017002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_75()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='75'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140023002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_76()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='76'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_77()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='77'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_78()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='78'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_79()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='79'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.280 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_80()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='80'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.290 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_81()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='81'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_82()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='82'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_83()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='83'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_84()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='84'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_85()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='85'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_86()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='86'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2021_2_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_87()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='87'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.270 прил.4 Р.1 = гр.3 (стр.280 + стр.290) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140028003");
	Настройки.Вставить("ПоказательР13", "П000140029003");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_88()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='88'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.240 прил.4 Р.1 = гр.4 (стр.250 + стр.260 + стр.270 + стр.300 + '") +
		НСтр("ru='стр.310) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("240");
	МассивНомеровСтрок.Добавить("250");
	МассивНомеровСтрок.Добавить("260");
	МассивНомеровСтрок.Добавить("270");
	МассивНомеровСтрок.Добавить("300");
	МассивНомеровСтрок.Добавить("310");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "240");
	
	ПроверитьКС2021_20_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_89()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='89'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.250 прил.4 Р.1 = гр.4 (стр.020 + стр.080 + стр.140 + стр.160 + '") +
		НСтр("ru='стр.220) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("020");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("140");
	МассивНомеровСтрок.Добавить("160");
	МассивНомеровСтрок.Добавить("220");
	МассивНомеровСтрок.Добавить("250");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "250");
	
	ПроверитьКС2021_20_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_90()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='90'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.260 прил.4 Р.1 = гр.4 (стр.030 + стр.090 + стр.170 + стр.230) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("090");
	МассивНомеровСтрок.Добавить("170");
	МассивНомеровСтрок.Добавить("230");
	МассивНомеровСтрок.Добавить("260");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "260");
	
	ПроверитьКС2021_20_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_91()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='91'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.270 прил.4 Р.1 = гр.4 (стр.280 + стр.290) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	Настройки.Вставить("ПоказательР13", "П000140029004");
	ПроверитьКС2021_15_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_92()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='92'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.280 прил.4 Р.1 = гр.4 (стр.050 + стр.110 + стр.190) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	Настройки.Вставить("ПоказательР13", "П000140011004");
	Настройки.Вставить("ПоказательР14", "П000140019004");
	ПроверитьКС2021_36_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_93()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='93'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.290 прил.4 Р.1 = гр.4 (стр.060 + стр.120 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140006004");
	Настройки.Вставить("ПоказательР13", "П000140012004");
	Настройки.Вставить("ПоказательР14", "П000140020004");
	ПроверитьКС2021_36_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_3

Процедура ПроверитьКС2021_94а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='94а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_94б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='94б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_94_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2021(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|				И ТПоказателя2.Графа	= &ГрафаР12
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2021(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2021(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= СумР11 <= 0 И СумР12 > 0;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2021(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2021_95а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='95а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001102");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_95б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='95б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001103");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_96а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='96а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_96б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='96б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_97а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='97а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002102");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_97б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='97б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002103");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_98а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='98а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_98б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='98б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_99а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='99а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003102");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_99б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='99б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003103");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_100()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='100'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.2 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_101()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='101'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.2 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001103");
	Настройки.Вставить("ПоказательР12", "П000130001102");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_102()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='102'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.2 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_103()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='103'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.2 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002103");
	Настройки.Вставить("ПоказательР12", "П000130002102");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_104()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='104'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.2 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_105()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='105'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.2 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003103");
	Настройки.Вставить("ПоказательР12", "П000130003102");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_106()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='106'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.040 прил.3 Р.1 > 0, если гр.2 стр.040 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130004003");
	Настройки.Вставить("ПоказательР12", "П000130004002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_107()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='107'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.050 прил.3 Р.1 > 0, если гр.2 стр.050 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130005003");
	Настройки.Вставить("ПоказательР12", "П000130005002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_108()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='108'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.3 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_109()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='109'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.3 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001102");
	Настройки.Вставить("ПоказательР12", "П000130001103");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_110()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='110'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.3 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_111()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='111'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.3 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002102");
	Настройки.Вставить("ПоказательР12", "П000130002103");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_112()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='112'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.3 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_113()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='113'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.3 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003102");
	Настройки.Вставить("ПоказательР12", "П000130003103");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_114а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='114а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_114б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='114б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_115а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='115а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_115б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='115б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_116а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='116а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_116б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='116б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_117а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='117а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006102");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_117б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='117б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006103");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_118а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='118а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006101");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_118б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='118б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006103");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_119а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='119а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006101");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_119б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='119б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006102");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_120а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='120а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006202");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_120б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='120б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006203");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_121а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='121а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006201");
	Настройки.Вставить("ПоказательР12", "П000130006202");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_121б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='121б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006203");
	Настройки.Вставить("ПоказательР12", "П000130006202");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_122а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='122а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006201");
	Настройки.Вставить("ПоказательР12", "П000130006203");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_122б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='122б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006202");
	Настройки.Вставить("ПоказательР12", "П000130006203");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_123()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='123'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.070 прил.3 Р.1 > 0, если гр.2 стр.070 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007003");
	Настройки.Вставить("ПоказательР12", "П000130007002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_124()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='124'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.070 прил.3 Р.1 > 0, если гр.3 стр.070 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007002");
	Настройки.Вставить("ПоказательР12", "П000130007003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_125а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='125а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009002");
	Настройки.Вставить("ПоказательР12", "П000130009001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_125б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='125б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009003");
	Настройки.Вставить("ПоказательР12", "П000130009001");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_126()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='126'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.2 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009003");
	Настройки.Вставить("ПоказательР12", "П000130009002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_127()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='127'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.3 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009002");
	Настройки.Вставить("ПоказательР12", "П000130009003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_4

Процедура ПроверитьКС2021_128()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='128'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.020 прил.4 Р.1 > 0, если гр.3 стр.020 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140002004");
	Настройки.Вставить("ПоказательР12", "П000140002003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_129()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.020 прил.4 Р.1 > 0, если гр.4 стр.020 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140002003");
	Настройки.Вставить("ПоказательР12", "П000140002004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_130()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='130'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.030 прил.4 Р.1 > 0, если гр.3 стр.030 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140003004");
	Настройки.Вставить("ПоказательР12", "П000140003003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_131()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.030 прил.4 Р.1 > 0, если гр.4 стр.030 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140003003");
	Настройки.Вставить("ПоказательР12", "П000140003004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_132а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='132а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_132б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='132б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_133()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='133'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.3 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140004003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_134()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='134'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.4 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140004004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_135а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='135а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005003");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_135б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='135б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005004");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_136()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='136'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.3 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005004");
	Настройки.Вставить("ПоказательР12", "П000140005003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_137()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='137'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.4 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005003");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_138а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='138а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006003");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_138б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='138б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006004");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_139()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='139'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.3 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006004");
	Настройки.Вставить("ПоказательР12", "П000140006003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_140()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='140'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.4 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006003");
	Настройки.Вставить("ПоказательР12", "П000140006004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_141()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='141'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.080 прил.4 Р.1 > 0, если гр.3 стр.080 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140008004");
	Настройки.Вставить("ПоказательР12", "П000140008003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_142()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='142'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.080 прил.4 Р.1 > 0, если гр.4 стр.080 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140008003");
	Настройки.Вставить("ПоказательР12", "П000140008004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_143()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='143'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.090 прил.4 Р.1 > 0, если гр.3 стр.090 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140009004");
	Настройки.Вставить("ПоказательР12", "П000140009003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_144()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='144'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.090 прил.4 Р.1 > 0, если гр.4 стр.090 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140009003");
	Настройки.Вставить("ПоказательР12", "П000140009004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_145а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='145а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_145б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='145б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_146()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='146'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.3 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140010003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_147()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='147'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.4 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140010004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_148а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='148а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011003");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_148б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='148б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011004");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_149()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='149'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.3 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011004");
	Настройки.Вставить("ПоказательР12", "П000140011003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_150()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='150'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.4 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011003");
	Настройки.Вставить("ПоказательР12", "П000140011004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_151а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='151а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012003");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_151б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='151б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012004");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_152()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='152'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.3 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012004");
	Настройки.Вставить("ПоказательР12", "П000140012003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_153()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='153'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.4 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012003");
	Настройки.Вставить("ПоказательР12", "П000140012004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_154()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='154'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.140 прил.4 Р.1 > 0, если гр.3 стр.140 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140014004");
	Настройки.Вставить("ПоказательР12", "П000140014003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_155()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='155'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.140 прил.4 Р.1 > 0, если гр.4 стр.140 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140014003");
	Настройки.Вставить("ПоказательР12", "П000140014004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_156()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='156'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.160 прил.4 Р.1 > 0, если гр.3 стр.160 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140016004");
	Настройки.Вставить("ПоказательР12", "П000140016003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_157()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='157'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.160 прил.4 Р.1 > 0, если гр.4 стр.160 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140016003");
	Настройки.Вставить("ПоказательР12", "П000140016004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_158()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='158'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.170 прил.4 Р.1 > 0, если гр.3 стр.170 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140017004");
	Настройки.Вставить("ПоказательР12", "П000140017003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_159()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='159'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.170 прил.4 Р.1 > 0, если гр.4 стр.170 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140017003");
	Настройки.Вставить("ПоказательР12", "П000140017004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_160а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='160а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_160б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='160б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_161()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='161'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.3 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140018003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_162()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='162'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.4 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140018004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_163а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='163а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019003");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_163б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='163б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019004");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_164()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='164'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.3 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019004");
	Настройки.Вставить("ПоказательР12", "П000140019003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_165()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='165'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.4 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019003");
	Настройки.Вставить("ПоказательР12", "П000140019004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_166а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='166а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020003");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_166б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='166б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020004");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_167()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='167'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.3 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020004");
	Настройки.Вставить("ПоказательР12", "П000140020003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_168()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='168'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.4 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020003");
	Настройки.Вставить("ПоказательР12", "П000140020004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_169()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='169'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.220 прил.4 Р.1 > 0, если гр.3 стр.220 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140022004");
	Настройки.Вставить("ПоказательР12", "П000140022003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_170()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='170'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.220 прил.4 Р.1 > 0, если гр.4 стр.220 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140022003");
	Настройки.Вставить("ПоказательР12", "П000140022004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_171()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='171'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.230 прил.4 Р.1 > 0, если гр.3 стр.230 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140023004");
	Настройки.Вставить("ПоказательР12", "П000140023003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_172()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='172'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.250 прил.4 Р.1 > 0, если гр.3 стр.250 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025004");
	Настройки.Вставить("ПоказательР12", "П000140025003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_173()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='173'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.250 прил.4 Р.1 > 0, если гр.4 стр.250 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025003");
	Настройки.Вставить("ПоказательР12", "П000140025004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_174()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='174'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.260 прил.4 Р.1 > 0, если гр.3 стр.260 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026004");
	Настройки.Вставить("ПоказательР12", "П000140026003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_175()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='175'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.260 прил.4 Р.1 > 0, если гр.4 стр.260 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026003");
	Настройки.Вставить("ПоказательР12", "П000140026004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_176а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='176а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_176б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='176б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_177()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='177'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.3 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140027003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_178()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='178'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.4 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140027004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_179а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='179а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028003");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_179б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='179б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_180()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='180'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.3 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140028003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_181()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='181'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.4 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028003");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_182а()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='182а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029003");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_182б()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='182б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_183()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='183'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.3 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140029003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_184()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='184'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.4 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029003");
	Настройки.Вставить("ПоказательР12", "П000140029004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_185()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='185'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Сумма расходов в гр.4 стр.300 прил.4 Р.1 > 0, если гр.3 стр.300 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140030004");
	Настройки.Вставить("ПоказательР12", "П000140030003");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2021_186()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru='186'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru='Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru='Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='Число дней пособий в гр.3 стр.300 прил.4 Р.1 > 0, если гр.4 стр.300 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru='%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru='Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2021(, Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140030003");
	Настройки.Вставить("ПоказательР12", "П000140030004");
	ПроверитьКС2021_94_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
#Область ОбработчикиСобытийФормы

&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьПериод(Форма)
	
	СтрПериодОтчета = ПредставлениеПериода(
		НачалоДня(Форма.мДатаНачалаПериодаОтчета), КонецДня(Форма.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
	Форма.ПолеВыбораПериодичностиПоказаПериода = СтрПериодОтчета;
	
	ГодПериода = Год(Форма.мДатаКонцаПериодаОтчета);
	
	ФормаУтратилаСилу = ГодПериода >= 2021;
	
	КоличествоФорм = РегламентированнаяОтчетностьКлиентСервер.КоличествоФормСоответствующихВыбранномуПериоду(Форма);
	Если КоличествоФорм >= 1 Тогда
		
		Форма.Элементы.ПолеРедакцияФормы.Видимость = КоличествоФорм > 1;
		Форма.Элементы.ОткрытьФормуОтчета.Доступность = Истина;
		
	Иначе
		
		Форма.Элементы.ПолеРедакцияФормы.Видимость = Ложь;
		Форма.Элементы.ОткрытьФормуОтчета.Доступность = Ложь;
		
		Форма.ОписаниеНормативДок = ?(ФормаУтратилаСилу,
		НСтр("ru='Утратила силу. Основание: приказ ФНС России от 15.10.2020 № ЕД-7-11/753@. "
		+ "С отчетности за 1 квартал 2021 г. применяется новая форма ""6-НДФЛ (с 2021 года)""'"),
		НСтр("ru='Отсутствует в программе.'"));
		
	КонецЕсли;
	
	Форма.Элементы.ОткрытьФормуОтчета.КнопкаПоУмолчанию = Форма.Элементы.ОткрытьФормуОтчета.Доступность;
	
	РегламентированнаяОтчетностьКлиентСервер.ВыборФормыРегламентированногоОтчетаПоУмолчанию(Форма);
	
	Если Форма.РезультирующаяТаблица.Количество() = 2
		И СокрЛП(Форма.РезультирующаяТаблица[0].ФормаОтчета) = "ФормаОтчета2017Кв4"
		И СокрЛП(Форма.РезультирующаяТаблица[1].ФормаОтчета) = "ФормаОтчета2016Кв1" Тогда
		Форма.РезультирующаяТаблица.Сдвинуть(0, 1);
		Форма.ПолеРедакцияФормы   = Форма.РезультирующаяТаблица[0].РедакцияФормы;
		Форма.мВыбраннаяФорма     = Форма.РезультирующаяТаблица[0].ФормаОтчета;
		Форма.ОписаниеНормативДок = Форма.РезультирующаяТаблица[0].ОписаниеОтчета;
	КонецЕсли;
	
	// В РезультирующаяТаблица - действующие на выбранный период формы.
	// Заполним список выбора форм отчетности.
	Форма.Элементы.ПолеРедакцияФормы.СписокВыбора.Очистить();
	
	Для Каждого ЭлФорма Из Форма.РезультирующаяТаблица Цикл
		Форма.Элементы.ПолеРедакцияФормы.СписокВыбора.Добавить(ЭлФорма.РедакцияФормы);
	КонецЦикла;
	
	// Для периодов ранее 2013 года ссылку Изменения законадательства скрываем.
	Форма.Элементы.ПолеСсылкаИзмененияЗаконодательства.Видимость = ГодПериода > 2012;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПериод(Форма, Шаг)
	
	Форма.мДатаКонцаПериодаОтчета  = КонецКвартала(ДобавитьМесяц(Форма.мДатаКонцаПериодаОтчета, Шаг * 3));
	Форма.мДатаНачалаПериодаОтчета = НачалоГода(Форма.мДатаКонцаПериодаОтчета);
	
	ПоказатьПериод(Форма);
	
	Форма.ПолучитьНалоговыеОрганы();
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Организация              = Параметры.Организация;
	мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	мПериодичность           = Параметры.мПериодичность;
	мСкопированаФорма        = Параметры.мСкопированаФорма;
	мСохраненныйДок          = Параметры.мСохраненныйДок;
	
	ЭтаФормаИмя = Строка(ЭтаФорма.ИмяФормы);
	ИсточникОтчета = РегламентированнаяОтчетностьВызовСервера.ИсточникОтчета(ЭтаФормаИмя);
	ЗначениеВДанныеФормы(РегламентированнаяОтчетностьВызовСервера.ОтчетОбъект(ИсточникОтчета).ТаблицаФормОтчета(),
		мТаблицаФормОтчета);
	
	мТаблицаФормОтчета.Сортировать("ДатаНачалоДействия Убыв");
	
	УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
	Элементы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
	
	ОргПоУмолчанию = РегламентированнаяОтчетность.ПолучитьОрганизациюПоУмолчанию();
	
	ПеречислениеПериодичностьКвартал = Перечисления.Периодичность.Квартал;
	
	Если НЕ ЗначениеЗаполнено(мДатаНачалаПериодаОтчета) И НЕ ЗначениеЗаполнено(мДатаКонцаПериодаОтчета) Тогда
		мДатаКонцаПериодаОтчета  = КонецКвартала(ДобавитьМесяц(ТекущаяДатаСеанса(), - 3));
		мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	мПериодичность = ПеречислениеПериодичностьКвартал;
	
	Элементы.ПолеРедакцияФормы.Видимость = НЕ (мТаблицаФормОтчета.Количество() > 1);
	
	ИзменитьПериод(ЭтаФорма, 0);
	
	Если НЕ ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ОргПоУмолчанию) Тогда
		Организация = ОргПоУмолчанию;
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		
		ОргПоУмолчанию = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации").ОрганизацияПоУмолчанию();
		Организация = ОргПоУмолчанию;
		
		Элементы.НадписьОрганизация.Видимость = Ложь;
		
	КонецЕсли;
	
	ПолучитьНалоговыеОрганы();
	
	// Вычислим общую часть ссылки на ИзмененияЗаконодательства.
	ПолеСсылкаИзмененияЗаконодательства = РегламентированнаяОтчетность.ПредставлениеСсылкиИзмененияЗаконодательства();
	ОбщаяЧастьHTTPссылкиИзмененияЗаконодательства = РегламентированнаяОтчетность.ОбщаяЧастьСсылкиНаИзмененияЗаконодательства(ИсточникОтчета);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьНалоговыеОрганы() Экспорт
	
	Элементы.ГруппаНастройки.Видимость = Ложь;
	
	НалоговыеОрганы.Очистить();
	
	МассивНО = Новый Массив;
	
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьНалоговыеОрганы(Организация, мДатаКонцаПериодаОтчета, МассивНО, "РегламентированныйОтчет6НДФЛ");
		
	Для Каждого НалоговыйОрган Из МассивНО Цикл
		
		ДобавленныйНО = НалоговыеОрганы.Добавить(НалоговыйОрган);
		
		ДобавленныйНО.Пометка = Истина;
		
	КонецЦикла;
	
	Если НалоговыеОрганы.Количество() > 1 Тогда
		
		Элементы.ГруппаНастройки.Видимость = Истина;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеРедакцияФормыПриИзменении(Элемент)
	
	СтрРедакцияФормы = ПолеРедакцияФормы;
	// Ищем в таблице мТаблицаФормОтчета для определения выбранной формы отчета.
	ЗаписьПоиска = Новый Структура;
	ЗаписьПоиска.Вставить("РедакцияФормы",СтрРедакцияФормы);
	МассивСтрок = мТаблицаФормОтчета.НайтиСтроки(ЗаписьПоиска);	
	
	Если МассивСтрок.Количество() > 0 Тогда
		
	    ВыбраннаяФорма = МассивСтрок[0];
		// Присваиваем.
	    мВыбраннаяФорма		= ВыбраннаяФорма.ФормаОтчета;
		ОписаниеНормативДок	= ВыбраннаяФорма.ОписаниеОтчета;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(Команда)
	
	Если мСкопированаФорма <> Неопределено Тогда
		// Документ был скопирован.
		// Проверяем соответствие форм.
		Если мВыбраннаяФорма <> мСкопированаФорма Тогда
			
			ПоказатьПредупреждение(,НСтр("ru='Форма отчета изменилась, копирование невозможно!'"));
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
			РегламентированнаяОтчетностьКлиент.ОсновнаяФормаОрганизацияНеЗаполненаВывестиТекст());
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
			
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("мДатаНачалаПериодаОтчета", мДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("мСохраненныйДок",          мСохраненныйДок);
	ПараметрыФормы.Вставить("мСкопированаФорма",        мСкопированаФорма);
	ПараметрыФормы.Вставить("мДатаКонцаПериодаОтчета",  мДатаКонцаПериодаОтчета);
	ПараметрыФормы.Вставить("мПериодичность",           мПериодичность);
	ПараметрыФормы.Вставить("Организация",              Организация);
	ПараметрыФормы.Вставить("мВыбраннаяФорма",          мВыбраннаяФорма);
	ПараметрыФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417",
		РегламентированнаяОтчетностьКлиент.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417());
		
	Если ФормироватьАвтоматически Тогда
		
		ВыбраныНалоговыеОрганы = Ложь;
		
		Для Каждого НалоговыйОрган Из НалоговыеОрганы Цикл
			
			Если НалоговыйОрган.Пометка Тогда
				
				ВыбраныНалоговыеОрганы = Истина;
				
				Прервать;
				
			КонецЕсли;	
			
		КонецЦикла;
				
		Если НЕ ВыбраныНалоговыеОрганы Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Не выбраны налоговые органы.'"));
			
			Возврат;
			
		КонецЕсли;
		
		РезультатЗапуска = СформироватьАвтоматическиРеглОтчет();
		
		Если РезультатЗапуска.Статус = "Выполнено" Тогда
			ОбновитьОтчеты();
			Возврат;
		ИначеЕсли РезультатЗапуска.Статус = "Выполняется" Тогда
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьЗавершениеАвтоформированияВФоне", ЭтотОбъект);
			ПараметрыОжидания = ПараметрыОжидания();
			ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатЗапуска, ОповещениеОЗавершении, ПараметрыОжидания);
		КонецЕсли;
		
	Иначе
		
		ОткрытьФорму(СтрЗаменить(ЭтаФорма.ИмяФормы, "ОсновнаяФорма", "") + мВыбраннаяФорма, ПараметрыФормы, , Истина);
		
		Закрыть();
						
	КонецЕсли;	
					
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоматическиРеглОтчет()
	
	АдресВоВременномХранилищеРезультатаАвтоформирования = ПоместитьВоВременноеХранилище(Новый Массив, УникальныйИдентификатор);
	
	СписокНО = Новый СписокЗначений;
	
	Для Каждого НалоговыйОрган Из НалоговыеОрганы Цикл
		
		Если НалоговыйОрган.Пометка Тогда
			
			СписокНО.Добавить(НалоговыйОрган.Значение,
							  НалоговыйОрган.Представление,
							  НалоговыйОрган.Пометка,
							  НалоговыйОрган.Картинка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	НаименованиеЗадания = НСтр("ru = 'Автоматическое формирование форм 6-НДФЛ'");
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ИмяОтчета", "РегламентированныйОтчет6НДФЛ");
	ПараметрыПроцедуры.Вставить("Организация", Организация);
	ПараметрыПроцедуры.Вставить("ДатаНачалаПериодаОтчета", мДатаНачалаПериодаОтчета);
	ПараметрыПроцедуры.Вставить("ДатаКонцаПериодаОтчета", мДатаКонцаПериодаОтчета);
	ПараметрыПроцедуры.Вставить("ИмяФормыОтчета", мВыбраннаяФорма);
	ПараметрыПроцедуры.Вставить("НалоговыеОрганы", СписокНО);
	ПараметрыПроцедуры.Вставить("АдресВоВременномХранилищеРезультатаАвтоформирования", АдресВоВременномХранилищеРезультатаАвтоформирования);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполненияВФоне.ЗапуститьВФоне = Истина;
	
	РезультатЗапуска = ДлительныеОперации.ВыполнитьВФоне("ИнтерфейсыВзаимодействияБРО.СформироватьАвтоматическиРеглОтчетВФоне",
	ПараметрыПроцедуры, ПараметрыВыполненияВФоне);
	
	Если РезультатЗапуска.Статус = "Ошибка" Тогда
		ВызватьИсключение РезультатЗапуска.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	Возврат РезультатЗапуска;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьЗавершениеАвтоформированияВФоне(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат.Статус = "Выполнено" Тогда
			ОбновитьОтчеты();
		ИначеЕсли Результат.Статус = "Ошибка" Тогда
			ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыОжидания()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Отчеты формируются.'");
	
	Возврат ПараметрыОжидания;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОтчеты()
	
	РезультатАвтоформирования = ПолучитьИзВременногоХранилища(АдресВоВременномХранилищеРезультатаАвтоформирования);
	
	Если РезультатАвтоформирования.Количество() > 0 Тогда
		
		Для Каждого ЭлементМассива Из РезультатАвтоформирования Цикл
		
			Сообщение = Новый СообщениеПользователю;
			Если НЕ ЭтаФорма.ВладелецФормы = Неопределено Тогда
				Сообщение.ИдентификаторНазначения = ЭтаФорма.ВладелецФормы.УникальныйИдентификатор;
			КонецЕсли;
			Сообщение.Текст = ЭлементМассива;
			Сообщение.Сообщить();
		
		КонецЦикла;
				
	КонецЕсли;
		
	Если НЕ ЭтаФорма.ВладелецФормы = Неопределено Тогда
		
		Если ЭтаФорма.ВладелецФормы.ИмяФормы = "ОбщаяФорма.РегламентированнаяОтчетность" Тогда
			
			ЭтаФорма.ВладелецФормы.Элементы.Отчеты.Обновить();
			
		ИначеЕсли ЭтаФорма.ВладелецФормы.ИмяФормы = "Обработка.ОбщиеОбъектыРеглОтчетности.Форма.УправлениеОтчетностью" Тогда
			
			ЭтаФорма.ВладелецФормы.Элементы.ЖурналОтчетов.Обновить();
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Если НЕ ЭтаФорма.ВладелецФормы = Неопределено Тогда
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(ЭтаФорма, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(ЭтаФорма, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФорму(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьФормуЗавершение", ЭтотОбъект);
	РегламентированнаяОтчетностьКлиент.ВыбратьФормуОтчетаИзДействующегоСписка(ЭтаФорма, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФормуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		мВыбраннаяФорма = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеСсылкаИзмененияЗаконодательстваНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ОбщаяЧастьHTTPссылкиИзмененияЗаконодательства = "" Тогда
		Возврат;
	КонецЕсли; 
	СсылкаИзмененияЗаконодательства = ОбщаяЧастьHTTPссылкиИзмененияЗаконодательства
		+ ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПостфиксСсылки(мДатаКонцаПериодаОтчета);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПопытатьсяПерейтиПоНавигационнойСсылке(СсылкаИзмененияЗаконодательства);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = "Активизировать" Тогда
	
		Если ИмяСобытия = ЭтаФорма.Заголовок Тогда
		
			ЭтаФорма.Активизировать();
		
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораНалоговыхОрганов(РезультатВыбора, ДополнительныеПараметры) Экспорт
			
	Если РезультатВыбора <> Неопределено Тогда
		
		Для Каждого НалоговыйОрган Из НалоговыеОрганы Цикл
			
			НалоговыйОрган.Пометка = Ложь;
			
		КонецЦикла;
		
		Если РезультатВыбора.Количество() > 0 Тогда
			
			Для Каждого НалоговыйОрган Из РезультатВыбора Цикл
				
				НайденноеЗначение = НалоговыеОрганы.НайтиПоЗначению(НалоговыйОрган);
				
				Если НЕ НайденноеЗначение = Неопределено Тогда
					
					НайденноеЗначение.Пометка = Истина;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	   		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьАвтоматическиПриИзменении(Элемент)
	
	Элементы.НалоговыеОрганы.Доступность = ФормироватьАвтоматически;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПолучитьНалоговыеОрганы();
			
КонецПроцедуры

&НаКлиенте
Процедура НалоговыеОрганыНажатие(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru='Не выбрана организация.'"));	
		
		Возврат;
		
	КонецЕсли;	
	
	МассивНО = Новый Массив;
	
	Для Каждого НалоговыйОрган Из НалоговыеОрганы Цикл
		
		Если НалоговыйОрган.Пометка Тогда
			
			МассивНО.Добавить(НалоговыйОрган.Значение);
			
		КонецЕсли;
				
	КонецЦикла;
	
	ЗначенияДляОтбора = Новый Массив;
	ЗначенияДляОтбора.Добавить(Новый Структура("НалоговыеОрганы", МассивНО));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",       Организация);
	ПараметрыФормы.Вставить("ЗначенияДляОтбора", ЗначенияДляОтбора);
	ПараметрыФормы.Вставить("НалоговыеОрганы",   НалоговыеОрганы);
	
	ФормаВыбораНалоговогоОргана = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени(
	                              "ФормаВыбораНалоговогоОргана", ПараметрыФормы, ЭтаФорма);
	
	Если НЕ ФормаВыбораНалоговогоОргана.ТаблицаНО.Количество() = 0 Тогда
									  
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораНалоговыхОрганов", ЭтотОбъект);
		ФормаВыбораНалоговогоОргана.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораНалоговогоОргана.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораНалоговогоОргана.Открыть();
					
	Иначе
		
		ПоказатьПредупреждение(, НСтр("ru='В справочник ""Регистрации в налоговом органе"" не добавлены налоговые органы.'"));
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
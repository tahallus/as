// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : {
		"СхемаВыгрузки502_2016Кв1" : "5.02",
		"СхемаВыгрузки503_2019Кв1" : "5.03",
	},
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100100620003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100100620004"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "Баланс", "Баланс"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Обязательность = СтрокаДерева.Обязательность + "П";
	КонецЦикла;
	
#КонецОбласти

#Область ПостОбработкаДокументаОтчета
	
	ПериодОтчета = Неопределено;
	Если П.ПараметрыОтчета.Свойство("Период", ПериодОтчета) Тогда
		Если ПериодОтчета = "90" Тогда
			П.ДанныеОтчета.СтруктураДанныхОтчета.Вставить("ВидСдачиОтчетности", 3);
		КонецЕсли;
	КонецЕсли;
	
	Баланс    = Неопределено;
	БалансНКО = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаБаланс", Баланс);
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаБалансНКО", БалансНКО);
	
	УзелБаланс = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/Баланс")[0]; //Узел "Баланс"
	
	ЭтоБалансНКО = УзлыПоXPath(УзелБаланс, "Пассив/ФондИмущИнЦФ/@СумОтч").Количество() > 0;
	
	П.ПараметрыОтчета.ЭтоБалансНекоммерческойОрганизации = ЭтоБалансНКО;
	
	Если Баланс <> Неопределено Тогда
		
		Если ЭтоБалансНКО Тогда
		
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Проверьте данные бухгалтерского баланса. Это баланс коммерческой организации, а загружается содержимое файла выгрузки некоммерческой организации!'");
			Сообщение.Сообщить();
		
		КонецЕсли;
		
		Баланс.ДатаУтвОтчетности = ДатаИзСтрокиЛюбогоФормата(П.ПараметрыОтчета.ДатаУтвОтч);
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелБаланс, П.ДанныеОтчета, П.ПараметрыОтчета);
		
	ИначеЕсли БалансНКО <> Неопределено Тогда
		
		Если НЕ ЭтоБалансНКО Тогда
		
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Проверьте данные бухгалтерского баланса. Это баланс некоммерческой организации, а загружается содержимое файла выгрузки коммерческой организации!'");
			Сообщение.Сообщить();
		
		КонецЕсли;
		
		П.ДанныеОтчета.ПоказателиОтчета.Вставить("ПолеТабличногоДокументаБаланс", БалансНКО);
		
		БалансНКО.ДатаУтвОтчетности = ДатаИзСтрокиЛюбогоФормата(П.ПараметрыОтчета.ДатаУтвОтч);
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелБаланс, П.ДанныеОтчета, П.ПараметрыОтчета);
		
	КонецЕсли;
	
#КонецОбласти
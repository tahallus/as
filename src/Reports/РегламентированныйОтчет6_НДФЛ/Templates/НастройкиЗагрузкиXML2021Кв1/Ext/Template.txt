// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/НДФЛ6.2");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		
		НайденныйУзел.МнУр = Истина;
		
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			
			ТекущийУзел.МнУр = Истина;
			Если ТекущийУзел.Код = "СерНомДок" И ТекущийУзел.Раздел = "Приложение1" Тогда
				ТекущийУзел.Ключ = "П000П10000011";
			ИначеЕсли (ТекущийУзел.Код = "УведВыч" И ТекущийУзел.Раздел = "Приложение1")
				  ИЛИ (ТекущийУзел.Код = "СведСумНалВоз" И ТекущийУзел.Раздел = "Раздел1") Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		Титульный.ОКТМО          = П.ПараметрыОтчета.ОКТМО;
		
		Если П.ПараметрыОтчета.Свойство("ФормРеорг") И ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
		РегНО = РегламентированнаяОтчетность.ПолучитьПоКодамРегистрациюВИФНС(
			П.ДанныеОтчета.ДокументОтчета.Организация, П.ПараметрыОтчета.КодНО);
			
		Если РегНО <> Неопределено Тогда
			Если ЗначениеЗаполнено(РегНО.КПП) Тогда
				Титульный.КПП = РегНО.КПП;
			КонецЕсли;
			
			ОКТМО = Неопределено;
			Если РегНО.Метаданные().Реквизиты.Найти("КодПоОКТМО") <> Неопределено Тогда
				ОКТМО =  СокрЛП(РегНО.КодПоОКТМО);
			КонецЕсли;
			Если ЗначениеЗаполнено(ОКТМО) Тогда
				Титульный.ОКТМО = ОКТМО;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	УзлыРаздел1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/НДФЛ6.2/ОбязНА"); // многоуровневый раздел 1
	
	НомСтраницы = Новый Массив(1);
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел1.Количество() Цикл
		
		УзелРаздел1 = УзлыРаздел1[НомСтраницыУровень1 - 1];
		
		НомСтроки = Новый Массив(1);
		НомСтраницы[0] = НомСтраницыУровень1;
		
		УзлыСведСумНалВоз = УзлыПоXPath(УзелРаздел1, "СведСумНалВоз");
		Для НомСтрокиУровень1 = 1 По УзлыСведСумНалВоз.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень1;
			УзелСведСумНалВоз = УзлыСведСумНалВоз[НомСтрокиУровень1 - 1];
			
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСведСумНалВоз, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
	КонецЦикла;
	
	УзлыПриложение1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/НДФЛ6.2/СправДох"); // многоуровневый раздел "Приложение 1"
	
	НомСтраницы = Новый Массив(1);
	
	Для НомСтраницыУровень1 = 1 По УзлыПриложение1.Количество() Цикл
		
		УзелПриложение1 = УзлыПриложение1[НомСтраницыУровень1 - 1];
		
		НомСтроки = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		
		УзелСерНомДок = УзлыПоXPath(УзелПриложение1, "ПолучДох/УдЛичнФЛ/@СерНомДок")[0];
		УзелУдЛичнФЛ = УзелСерНомДок.Родитель;
		УзелНомДок = УзелУдЛичнФЛ.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(УзелНомДок, УзелСерНомДок, ,"Родитель, Строки");
		УзелНомДок.Ключ = "П000П10000012";
		УзелНомДок.Код = "НомДок";
		
		ЧастиЗначения = СтрРазделить(УзелСерНомДок.Значение, " ", Ложь);
		Если ЧастиЗначения.Количество() > 0 Тогда
			УзелНомДок.Значение = ЧастиЗначения[ЧастиЗначения.ВГраница()];
			ЧастиЗначения.Удалить(ЧастиЗначения.ВГраница());
		КонецЕсли;
		Если ЧастиЗначения.Количество() > 0 Тогда
			УзелСерНомДок.Значение = СтрСоединить(ЧастиЗначения, " ");
		Иначе
			УзелСерНомДок.Значение = "";
		КонецЕсли;
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелУдЛичнФЛ, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		
		УзлыСведДох = УзлыПоXPath(УзелПриложение1, "СведДох");
		Для НомСтрокиУровень1 = 1 По УзлыСведДох.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень1;
			УзелСведДох = УзлыСведДох[НомСтрокиУровень1 - 1];
			
			УзлыУведВыч = УзлыПоXPath(УзелСведДох, "НалВычССИ/УведВыч");
			Для НомСтрокиУровень2 = 1 По УзлыУведВыч.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелУведВыч = УзлыУведВыч[НомСтрокиУровень2 - 1];
				
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелУведВыч, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
			УзлыСумДохНеУд = УзлыПоXPath(УзелСведДох, "СумДохНеУд");
			Для НомСтрокиУровень2 = 1 По УзлыСумДохНеУд.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелСумДохНеУд = УзлыСумДохНеУд[НомСтрокиУровень2 - 1];
				
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСумДохНеУд, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
#КонецОбласти
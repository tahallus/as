#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбораФормыОтчета";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеРассрочкаПоНалогам.Форма.Форма2020_1";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.ОписаниеФормы = "В соответствии с информацией от ФНС России от 09.04.2020";
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт

КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2020_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2020_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
КонецФункции

Функция СформироватьСписокЛистовФорма2020_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	Мкт = Отчеты.РегламентированноеУведомлениеРассрочкаПоНалогам.ПолучитьМакет("Печать_MXL_Рассрочка");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	Часть1 = Мкт.ПолучитьОбласть("Часть1");
	Для Каждого КЗ Из СтруктураПараметров.ДанныеУведомления.Титульная Цикл 
		Обл = Часть1.Области.Найти(КЗ.Ключ);
		Если Обл <> Неопределено и Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
			Обл.Значение = КЗ.Значение;
		КонецЕсли;
	КонецЦикла;
	ПечатнаяФорма.Вывести(Часть1);
	
	Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов.НалогКБК Цикл 
		НалогКБК = Стр.Значение;
		Если Не ЗначениеЗаполнено(НалогКБК.Налог) Тогда 
			Продолжить;
		КонецЕсли;
		
		Часть4 = Мкт.ПолучитьОбласть("Часть4");
		Часть4.Области.НалогКБК.Значение = НалогКБК.Налог + ", КБК:" + НалогКБК.КБК;
		Если Не ПечатнаяФорма.ПроверитьВывод(Часть4) Тогда 
			Лист = Новый Массив;
			Лист.Добавить(ПоместитьВоВременноеХранилище(ПечатнаяФорма));
			Лист.Добавить(Новый УникальныйИдентификатор);
			Лист.Добавить("Заявление");
			Листы.Добавить(Лист, "Заявление");
			ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
		КонецЕсли;
		ПечатнаяФорма.Вывести(Часть4);
		
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", НалогКБК.УИД)) Цикл 
			Часть5 = Мкт.ПолучитьОбласть("Часть5");
			Часть5.Области.СрокУплатыНКРФ.Значение = Формат(МнгСтр.СрокУплаты, "ДЛФ=DD; ДП=-");
			Часть5.Области.Сумма.Значение = МнгСтр.СуммаКУплате;
			Часть5.Области.НовыйСрок.Значение = Формат(МнгСтр.НовыйСрокУплаты, "ДЛФ=DD; ДП=-");
			Если Не ПечатнаяФорма.ПроверитьВывод(Часть5) Тогда 
				Лист = Новый Массив;
				Лист.Добавить(ПоместитьВоВременноеХранилище(ПечатнаяФорма));
				Лист.Добавить(Новый УникальныйИдентификатор);
				Лист.Добавить("Заявление");
				Листы.Добавить(Лист, "Заявление");
				ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
			КонецЕсли;
			ПечатнаяФорма.Вывести(Часть5);
		КонецЦикла;
	КонецЦикла;
	
	Часть2 = Мкт.ПолучитьОбласть("Часть2");
	Для Каждого КЗ Из СтруктураПараметров.ДанныеУведомления.Титульная Цикл 
		Обл = Часть2.Области.Найти(КЗ.Ключ);
		Если Обл <> Неопределено и Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
			Обл.Значение = КЗ.Значение;
		КонецЕсли;
	КонецЦикла;
	Часть2.Области.ДатаПодписи.Значение = Формат(СтруктураПараметров.ДанныеУведомления.Титульная.ДатаПодписи, "ДЛФ=DD; ДП=-");
	ПечатнаяФорма.Вывести(Часть2);
	Лист = Новый Массив;
	Лист.Добавить(ПоместитьВоВременноеХранилище(ПечатнаяФорма));
	Лист.Добавить(Новый УникальныйИдентификатор);
	Лист.Добавить("Заявление");
	Листы.Добавить(Лист, "Заявление");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	Часть3 = Мкт.ПолучитьОбласть("Часть3");
	Часть3.Области.НаимО1.Значение = СтруктураПараметров.ДанныеУведомления.Обязательство.Наим1;
	Часть3.Области.НаимО2.Значение = СтруктураПараметров.ДанныеУведомления.Обязательство.Наим2;
	Часть3.Области.ДатаПодписиО.Значение = Формат(СтруктураПараметров.ДанныеУведомления.Обязательство.ДатаПодписи, "ДЛФ=DD; ДП=-");
	ПечатнаяФорма.Вывести(Часть3);
	Лист = Новый Массив;
	Лист.Добавить(ПоместитьВоВременноеХранилище(ПечатнаяФорма));
	Лист.Добавить(Новый УникальныйИдентификатор);
	Лист.Добавить("Обязательство");
	Листы.Добавить(Лист, "Обязательство");
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Задать настройки формы отчета.
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения	 - Форма отчета
//  КлючВарианта - Строка						 - Ключ загружаемого варианта
//  Настройки	 - Структура					 - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	Настройки.Вставить("ИспользоватьСравнение", Истина);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиВариантов["Анализ движений"].ИмяМакетаОбразца = "ОбразецАнализДвижений";
	НастройкиВариантов["Анализ движений в валюте"].ИмяМакетаОбразца = "ОбразецАнализДвиженийВВалюте";
	
	// Функциональные опции вариантов
	НастройкиВариантов["Анализ движений"].ФункциональнаяОпция = "УчетВалютныхОпераций";
	НастройкиВариантов["Ведомость"].ФункциональнаяОпция = "УчетВалютныхОпераций";
	НастройкиВариантов["Остатки"].ФункциональнаяОпция = "УчетВалютныхОпераций";
	
	УстановитьТегиВариантов(НастройкиВариантов);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ОтчетыУНФ.ФормаОтчетаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// Обработчик события ПриЗагрузкеВариантаНаСервере
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения	 - Форма отчета
//  НовыеНастройкиКД - НастройкиКомпоновкиДанных	 - Загружаемые настройки КД
//
Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
	
	ОтчетыУНФ.ПреобразоватьСтарыеНастройки(Форма, НовыеНастройкиКД);	
	ОтчетыУНФ.ОбновитьВидимостьОтбораОрганизация(Форма.Отчет.КомпоновщикНастроек);	
	ОтчетыУНФ.ФормаОтчетаПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД);
	
КонецПроцедуры

// Обработчик события ПриЗагрузкеПользовательскихНастроекНаСервере
//
// Параметры:
//  Форма							 - ФормаКлиентскогоПриложения				 - Форма отчета
//  НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных - Загружаемые пользовательские настройки КД
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ОтчетыУНФ.ПеренестиПараметрыЗаголовкаВНастройки(КомпоновщикНастроек.Настройки, НовыеПользовательскиеНастройкиКД);	
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ОтчетыУНФ.ОбъединитьСПользовательскимиНастройками(КомпоновщикНастроек);
	ОтчетыУНФ.ПриКомпоновкеРезультата(КомпоновщикНастроек, СхемаКомпоновкиДанных, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	НастройкиВариантов["Ведомость"].Теги = НСтр("ru = 'Деньги,Кассы,Банки'");
	НастройкиВариантов["Остатки"].Теги = НСтр("ru = 'Деньги,Кассы,Банки'");
	НастройкиВариантов["Анализ движений"].Теги = НСтр("ru = 'Деньги'");
	НастройкиВариантов["ВедомостьВВалюте"].Теги = НСтр("ru = 'Главное,Деньги,Кассы,Банки,Валюты'");
	НастройкиВариантов["ОстаткиВВалюте"].Теги = НСтр("ru = 'Деньги,Кассы,Банки,Валюты'");
	НастройкиВариантов["Анализ движений в валюте"].Теги = НСтр("ru = 'Деньги,Валюты'");
	НастройкиВариантов["ДинамикаПоступленияДенежныхСредств"].Теги = НСтр("ru = 'Деньги,Поступления'");
	НастройкиВариантов["ДинамикаРасходаДенежныхСредств"].Теги = НСтр("ru = 'Деньги,Платежи'");
	
КонецПроцедуры

Процедура МодифицироватьСхемуФО()
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРезервированиеДенежныхСредств") Тогда
		
		Для каждого Набор Из СхемаКомпоновкиДанных.НаборыДанных Цикл
			
			МассивПолейДляУдаления = Новый Массив;
			МассивПолейДляУдаления.Добавить(Набор.Поля.Найти("СуммаРезерва"));
			МассивПолейДляУдаления.Добавить(Набор.Поля.Найти("СуммаРезерваВал"));
			МассивПолейДляУдаления.Добавить(Набор.Поля.Найти("СвободныйОстаток"));
			МассивПолейДляУдаления.Добавить(Набор.Поля.Найти("СвободныйОстатокВал"));
			
			Для каждого Поле Из МассивПолейДляУдаления Цикл
				Если Поле <> Неопределено И Тип(Поле) = Тип("ПолеНабораДанныхСхемыКомпоновкиДанных") Тогда
					Набор.Поля.Удалить(Поле);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла; 
		
		Для каждого ВариантНастроек Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
			
			МассивПолейДляУдаления = Новый Массив;
			
			Для каждого Элемент Из ВариантНастроек.Настройки.Выбор.Элементы Цикл
				Если ТипЗнч(Элемент) <> Тип("АвтоВыбранноеПолеКомпоновкиДанных") 
					 И (Строка(Элемент.Поле) = "СуммаРезерва" ИЛИ Строка(Элемент.Поле) = "СуммаРезерваВал" ИЛИ Строка(Элемент.Поле) = "СвободныйОстаток" ИЛИ Строка(Элемент.Поле) = "СвободныйОстатокВал") Тогда
					МассивПолейДляУдаления.Добавить(Элемент);
				КонецЕсли;
			КонецЦикла;
			
			Для каждого ЭлементМассива Из МассивПолейДляУдаления Цикл
				 ВариантНастроек.Настройки.Выбор.Элементы.Удалить(ЭлементМассива);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ЭтоОтчетУНФ = Истина;

МодифицироватьСхемуФО();

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : {
		"СхемаВыгрузки440_2021Кв1" : "4.40",
	},
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки

	////////////////////////////////////////////////////////
	// Настройка на конкретный отчет.
	ИмяУзлаДанныхПоОП 			= "ОбъемОборота";
	ИмяУзлаДанных 				= "Оборот";
	ИмяОсновногоРазделаПоОтчету = "Декларация";
	// Конец настройки на конкретный отчет.
	////////////////////////////////////////////////////////
	
	// Сохраним все узлы содержащие условия.
	П.ПараметрыОтчета.Вставить("Первичная", Истина);
	П.ПараметрыОтчета.Вставить("Корректирующая", Истина);
		
	ВерсияФормата = Неопределено;
	П.ПараметрыОтчета.Свойство("ВерсФорм", ВерсияФормата);
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//" + ИмяУзлаДанныхПоОП + "/@Наим");
	
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МаксРазмерность = 10000;
		НайденныйУзел.Раздел = ИмяОсновногоРазделаПоОтчету;
		НайденныйУзел.Ключ = "ОбособленноеПодразделение";
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//" + ИмяУзлаДанныхПоОП + "/@НаимЮЛ");
	
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МаксРазмерность = 10000;
		НайденныйУзел.Раздел = ИмяОсновногоРазделаПоОтчету;
		НайденныйУзел.Ключ = "ОбособленноеПодразделение";
	КонецЦикла;
	
	НайденныеУзлыОО = УзлыПоXPath(П.ДеревоДляЗагрузки, "//" + ИмяУзлаДанныхПоОП);
	Для Каждого НайденныйУзел Из НайденныеУзлыОО Цикл
		НайденныйУзел.Обязательность = НайденныйУзел.Обязательность + "П";
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(НайденныеУзлыОО[0], ИмяУзлаДанных);
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.Обязательность = НайденныйУзел.Обязательность + "П";		
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Деятельность/Лицензируемая/Лицензия/@ВидДеят");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МаксРазмерность = 100;
		НайденныйУзел.ЗначениеПоУмолчанию = ""; // удаляем значение по умолчанию, чтоб загрузилось значение из файла
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код", "Нелицензируемая"), Истина);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.Тип = "Э";
			СтрокаДерева.Обязательность = "О";
			Для Каждого ПодчиненнаяСтрока Из СтрокаДерева.Строки Цикл
				ПодчиненнаяСтрока.ЗначениеПоУмолчанию = ""; // удаляем значение по умолчанию, чтоб загрузилось значение из файла
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета

	////////////////////////////////////////////////////////
	// Настройка на конкретный отчет.
	ИмяОтчета = "РегламентированныйОтчетАлкоПриложение26";
	ЕстьЛицензии = Ложь;	
	КоличествоРазделовПоРегистрам = 3;
	
	ИмяРегРаздел = Новый Массив(КоличествоРазделовПоРегистрам + 1); // Чтобы обращаться по номеру раздела.
	ИмяРегРаздел[1] = "СведенияРеглОтчетАлкоПрил26Раздел1Обороты";
	ИмяРегРаздел[2] = "СведенияРеглОтчетАлкоПрил26Раздел2Поступления";
	ИмяРегРаздел[3] = "СведенияРеглОтчетАлкоПрил26Раздел3Возвраты";
	
	КоличествоРазделовПоОтчету = 1;
	ИмяРазделаПоОтчету = Новый Массив(КоличествоРазделовПоОтчету + 1);
	// Первым всегда указывается основной раздел, по которому происходит основная загрузка.
	ИмяРазделаПоОтчету[1] = "Декларация";
	
	ИмяУзлаДанныхПоОП 	= "ОбъемОборота";
	ИмяУзлаДанных 		= "Оборот";
	
	// В некоторых отчетах, например, в "виноградных" допускается несколько страниц 
	// с одним ОП (виноградником), в этом случае в каждом узле данных по ОП может
	// быть несколько узлов данных (по виноградникам) - собранных под одним ОП.
	// В остальных случаях - в узлах данных по ОП в узлах данных - информация строго по одному ОП.
	СчитатьКаждыйУзелДанныхСтраницейПоОП = Ложь;
	
	// Конец настройки на конкретный отчет.
	////////////////////////////////////////////////////////
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ИмяОтчета", 							ИмяОтчета);
	Параметры.Вставить("ЕстьЛицензии", 							ЕстьЛицензии);
	Параметры.Вставить("КоличествоРазделовПоРегистрам", 		КоличествоРазделовПоРегистрам);
	Параметры.Вставить("ИмяРегРаздел", 							ИмяРегРаздел);
	Параметры.Вставить("КоличествоРазделовПоОтчету", 			КоличествоРазделовПоОтчету);
	Параметры.Вставить("ИмяРазделаПоОтчету", 					ИмяРазделаПоОтчету);
	Параметры.Вставить("ИмяУзлаДанныхПоОП", 					ИмяУзлаДанныхПоОП);
	Параметры.Вставить("ИмяУзлаДанных", 						ИмяУзлаДанных);
	Параметры.Вставить("СчитатьКаждыйУзелДанныхСтраницейПоОП", 	СчитатьКаждыйУзелДанныхСтраницейПоОП);
	
	РегламентированнаяОтчетностьАЛКО.ПостОбработкаПриЗагрузкеИзФайлаВыгрузкиАЛКО(П, Параметры);
	
#КонецОбласти

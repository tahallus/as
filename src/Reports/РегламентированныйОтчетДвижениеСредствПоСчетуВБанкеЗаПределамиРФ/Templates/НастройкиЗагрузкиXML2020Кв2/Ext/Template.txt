// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы едиственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/ОтчЮЛИПСчетИно");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
		КонецЦикла;
		
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Если П.ПараметрыОтчета.Свойство("ИдФайлКорр") И ЗначениеЗаполнено(П.ПараметрыОтчета.ИдФайлКорр) Тогда
			Титульный.ИдФайлКорр = П.ПараметрыОтчета.ИдФайлКорр;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("НаимФил") И ЗначениеЗаполнено(П.ПараметрыОтчета.НаимФил) Тогда
			Титульный.НаимФил = П.ПараметрыОтчета.НаимФил;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("АдрФил") И ЗначениеЗаполнено(П.ПараметрыОтчета.АдрФил) Тогда
			Титульный.АдрФил = П.ПараметрыОтчета.АдрФил;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("КодСтраны") И ЗначениеЗаполнено(П.ПараметрыОтчета.КодСтраны) Тогда
			Титульный.КодСтраны = П.ПараметрыОтчета.КодСтраны;
		КонецЕсли;
		
		Если П.ПараметрыОтчета.Свойство("ИННОрг") И ЗначениеЗаполнено(П.ПараметрыОтчета.ИННОрг) Тогда
			Титульный.ИНН = П.ПараметрыОтчета.ИННОрг;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("КПП") И ЗначениеЗаполнено(П.ПараметрыОтчета.КПП) Тогда
			Титульный.КПП = П.ПараметрыОтчета.КПП;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("ОГРН") И ЗначениеЗаполнено(П.ПараметрыОтчета.ОГРН) Тогда
			Титульный.ОГРН = П.ПараметрыОтчета.ОГРН;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("ОГРНИП") И ЗначениеЗаполнено(П.ПараметрыОтчета.ОГРНИП) Тогда
			Титульный.ОГРНИП = П.ПараметрыОтчета.ОГРНИП;
		КонецЕсли;
		
		ЗначениеПараметра = Неопределено;
		
		НаименованиеОрг = "";
		
		Если П.ПараметрыОтчета.Свойство("Фамилия", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
			НаименованиеОрг = НаименованиеОрг + ЗначениеПараметра;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("Имя", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
			НаименованиеОрг = НаименованиеОрг + " " + ЗначениеПараметра;
		КонецЕсли;
		Если П.ПараметрыОтчета.Свойство("Отчество", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
			НаименованиеОрг = НаименованиеОрг + " " + ЗначениеПараметра;
		КонецЕсли;
		
		НаименованиеОрг = СокрЛП(НаименованиеОрг);
		
		Если НЕ ЗначениеЗаполнено(НаименованиеОрг) Тогда
			Если П.ПараметрыОтчета.Свойство("НаимОрг", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				НаименованиеОрг = ЗначениеПараметра;
			КонецЕсли;
		КонецЕсли; 
		
		Титульный.НаимОрг = НаименованиеОрг;
		
		Если П.ПараметрыОтчета.Свойство("ПрПодп") И ЗначениеЗаполнено(П.ПараметрыОтчета.ПрПодп) Тогда
			
			Титульный.ПрПодп = П.ПараметрыОтчета.ПрПодп;
			
			Если П.ПараметрыОтчета.Свойство("ПодписантИНН") И ЗначениеЗаполнено(П.ПараметрыОтчета.ПодписантИНН) Тогда
				Титульный.ПодписантИНН = П.ПараметрыОтчета.ПодписантИНН;
			КонецЕсли;
			Если П.ПараметрыОтчета.Свойство("ПодписантТел") И ЗначениеЗаполнено(П.ПараметрыОтчета.ПодписантТел) Тогда
				Титульный.ПодписантТел = П.ПараметрыОтчета.ПодписантТел;
			КонецЕсли;
			
			ФИОПодписанта = "";
			
			Если П.ПараметрыОтчета.Свойство("ФамилияПодписанта", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				ФИОПодписанта = ФИОПодписанта + ЗначениеПараметра;
			КонецЕсли;
			Если П.ПараметрыОтчета.Свойство("ИмяПодписанта", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				ФИОПодписанта = ФИОПодписанта + " " + ЗначениеПараметра;
			КонецЕсли;
			Если П.ПараметрыОтчета.Свойство("ОтчествоПодписанта", ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				ФИОПодписанта = ФИОПодписанта + " " + ЗначениеПараметра;
			КонецЕсли;
			
			Титульный.ОргПодписант = СокрЛП(ФИОПодписанта);
			
		КонецЕсли;
		
	КонецЕсли;
	
#КонецОбласти
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.КНД = "1120411";
	Стр.ВерсияФормата = "5.02";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 05.07.2019 № ММВ-7-13/338@";
	
	Возврат Результат;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2019_1(Объект);
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2019_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2015_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2015_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2015_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2019_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2019_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(СведенияОтправки)
	Префикс = "UT_UVUCHINO";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2019_1(СведенияОтправки)
	Префикс = "UT_UVUCHINO";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Процедура Проверить_Форма2015_1(Данные, УникальныйИдентификатор)
	Титульный = Данные.Титульный[0];
	
	Ошибок = 0;
	Если (Не ЗначениеЗаполнено(Титульный.ПрНпл)) Или (Не ЗначениеЗаполнено(Титульный.Основание)) Тогда
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Не заполнен код налогоплательщика, основание подачи уведомления на титульном листе", УникальныйИдентификатор);
		Ошибок = Ошибок + 1;
	КонецЕсли;
	
	НомСтр = 1;
	Для Каждого СведИО Из Данные.СведИО Цикл 
		Если ЗначениеЗаполнено(СведИО.ИО_Номер) И
			((Не ЗначениеЗаполнено(СведИО.ИО_ПолноеНаименование_RUS))
			Или (Не ЗначениеЗаполнено(СведИО.ИО_ПолноеНаименование_EN))
			Или (Не ЗначениеЗаполнено(СведИО.КодСтранаРегистрации))
			Или (Не ЗначениеЗаполнено(СведИО.РегНом1))
			Или (Не ЗначениеЗаполнено(СведИО.ИнАдр1))
			Или (Не ЗначениеЗаполнено(СведИО.ПрУч1))
			Или (Не ЗначениеЗаполнено(СведИО.ДатаНач1))
			Или (Не ЗначениеЗаполнено(СведИО.ДоляУчастия1))) Тогда 
		
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомСтр+" со сведениями об иностранных организациях не заполнены обязательные показатели:"+Символы.ПС+"строки 2, 3, 4, 6, 7, 8, 9", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		НомСтр = НомСтр + 1;
	КонецЦикла;
	
	НомСтр = 1;
	Для Каждого СведРО Из Данные.СведРО Цикл 
		Если ЗначениеЗаполнено(СведРО.РО_Номер) И
			((Не ЗначениеЗаполнено(СведРО.ОГРН2))
			Или (Не ЗначениеЗаполнено(СведРО.ИНН2))
			Или (Не ЗначениеЗаполнено(СведРО.КПП2))
			Или (Не ЗначениеЗаполнено(СведРО.РО_ПолноеНаименование))) Тогда 
		
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомСтр+" со сведениями о российских организациях не заполнены обязательные показатели:"+Символы.ПС+"строки 2, 3, 4, 5", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		НомСтр = НомСтр + 1;
	КонецЦикла;
	
	НомСтр = 0;
	Для Каждого СведИС Из Данные.СведИС Цикл 
		Если Не ЗначениеЗаполнено(СведИС.НомерСтруктуры) Тогда 
			Продолжить;
		КонецЕсли;
		НомСтр = НомСтр + 1;
		
		Если (Не ЗначениеЗаполнено(СведИС.ПрСтр))
			Или (Не ЗначениеЗаполнено(СведИС.ИС_ПолноеНаименование_RUS))
			Или (Не ЗначениеЗаполнено(СведИС.ИС_ПолноеНаименование_EN))
			Или (Не ЗначениеЗаполнено(СведИС.ИС_ДокНаименование_RUS))
			Или (Не ЗначениеЗаполнено(СведИС.ДатаРегСтр))
			Или (Не ЗначениеЗаполнено(СведИС.КодСтраныСтр)) Тогда 
		
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На странице "+НомСтр+" со сведениями об иностранных структурах не заполнены обязательные показатели:"+Символы.ПС+"строки 2.1, 2.2, 2.3, 2.4, 2.5", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		
		СведИСУч = Данные.СведИСУч.НайтиСтроки(Новый Структура("UID_parent", СведИС.UID));
		НомСтрУч = 1;
		Для Каждого Стр Из СведИСУч Цикл 
			Если (Не ЗначениеЗаполнено(Стр.ИС_Статус_RUS))
				Или (Не ЗначениеЗаполнено(Стр.УчИнСтр))
				Или (Не ЗначениеЗаполнено(Стр.ДатаНачИС)) Тогда
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На листе В1 "+НомСтрУч+", с информацией об иностранной структуре "+НомСтр+" не заполнены обязательные показатели:"+Символы.ПС+"строки 3, 6, 7", УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
			НомСтрУч = НомСтрУч + 1;
		КонецЦикла;
	КонецЦикла;
	
	НомСтр = 0;
	ТипЧисло = Новый ОписаниеТипов("Число");
	Для Каждого СведУч Из Данные.СведУч Цикл
		НомСтр = НомСтр + 1;
		Если Не ЗначениеЗаполнено(СведУч.НомерУчастника) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если (Не ЗначениеЗаполнено(СведУч.ПолноеНаименование))
			Или (Не ЗначениеЗаполнено(СведУч.ДоляКосвУчастия))
			Или (Не ЗначениеЗаполнено(СведУч.НомерГруппы))
			Или (Не ЗначениеЗаполнено(СведУч.ДоляКосвУчастияГр)) Тогда
			
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На листе Г "+НомСтр+" не заполнены обязательные показатели:"+Символы.ПС+"строки 1.2, 1.3, 2.1, 2.2", УникальныйИдентификатор);
			Ошибок = Ошибок + 1;
		КонецЕсли;
		
		СтрокиМНГ = Данные.МногострочнаяЧасть.НайтиСтроки(Новый Структура("UID", СведУч.UID));
		Для Каждого Стр Из СтрокиМНГ Цикл
			Если (Не ЗначениеЗаполнено(Стр.НомерУчастника)) Тогда 
				РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("На листе Г "+НомСтр+" не заполнены номер участника (строка 2.3.1)", УникальныйИдентификатор);
				Ошибок = Ошибок + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Ошибок > 0 Тогда
		ВызватьИсключение "";
	КонецЕсли;
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	Титульный = Данные.Титульный[0];
	
	ОсновныеСведения.Вставить("ПрНП", Титульный.ПрНпл);
	ОсновныеСведения.Вставить("ОснУвед", Титульный.Основание);
	ОсновныеСведения.Вставить("НомКорр", Формат(Титульный.НомерКорректировки, "ЧН=0"));
	ОсновныеСведения.Вставить("EmailПодп", Титульный.EMAIL_ПОДПИСАНТА);
	ОсновныеСведения.Вставить("ИННПодп", Титульный.ИНН_ПОДПИСАНТА);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("НаимДок", Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ);
	
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		СведФЛ = Данные.СведФЛ[0];
		
		ОсновныеСведения.Вставить("ИННФЛ", Титульный.П_ИНН);
		
		ОсновныеСведения.Вставить("ПолНП", СведФЛ.Пол);
		ОсновныеСведения.Вставить("ДатаРождНП", Формат(СведФЛ.ДатаРождения, "ДФ=dd.MM.yyyy"));
		ОсновныеСведения.Вставить("МестоРождНП", СведФЛ.МестоРождения);
		ОсновныеСведения.Вставить("ПрГраждНП", СведФЛ.Гражданство);
		ОсновныеСведения.Вставить("ОКСМНП", СведФЛ.КодСтрИностранец);
		
		ОсновныеСведения.Вставить("ПрАдрРФНП", СведФЛ.МЖРФ);
		ОсновныеСведения.Вставить("ОКСМНП_Ино", СведФЛ.КодСтрИностранец);
		ОсновныеСведения.Вставить("АдрИно_НП", СведФЛ.КодСтраныРегистрации);
		
		ОсновныеСведения.Вставить("КодВидДок", СведФЛ.КодВидДок1);
		ОсновныеСведения.Вставить("СерНомДок", СведФЛ.СерНомДок1);
		ОсновныеСведения.Вставить("ДатаДокУдЛичн", Формат(СведФЛ.ДатаВыдочиДок1, "ДФ=dd.MM.yyyy"));
		ОсновныеСведения.Вставить("ВыдДок", СведФЛ.КемВыданДок1);
		ОсновныеСведения.Вставить("Доп_КодВидДок", СведФЛ.КодВидДок2);
		ОсновныеСведения.Вставить("Доп_СерНомДок", СведФЛ.СерНомДок2);
		ОсновныеСведения.Вставить("Доп_ДатаДок", Формат(СведФЛ.ДатаВыдочиДок2, "ДФ=dd.MM.yyyy"));
		ОсновныеСведения.Вставить("Доп_ВыдДок", СведФЛ.КемВыданДок2);
		
		ОсновныеСведения.Вставить("ИндексНП", СведФЛ.Индекс);
		ОсновныеСведения.Вставить("КодРегионНП", СведФЛ.КодРегиона);
		ОсновныеСведения.Вставить("РайонНП", СведФЛ.Район);
		ОсновныеСведения.Вставить("ГородНП", СведФЛ.Город);
		ОсновныеСведения.Вставить("НаселПунктНП", СведФЛ.НаселенныйПункт);
		ОсновныеСведения.Вставить("УлицаНП", СведФЛ.Улица);
		ОсновныеСведения.Вставить("ДомНП", СведФЛ.Дом);
		ОсновныеСведения.Вставить("КорпусНП", СведФЛ.Корпус);
		ОсновныеСведения.Вставить("КвартНП", СведФЛ.Квартира);
		
		ОсновныеСведения.Вставить("Фамилия", СведФЛ.Фамилия_ип);
		ОсновныеСведения.Вставить("Имя", СведФЛ.Имя_ип);
		ОсновныеСведения.Вставить("Отчество", СведФЛ.Отчество_ип);
	Иначе
		ОсновныеСведения.Вставить("НаимОргЮЛ", Титульный.НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ);
		ОсновныеСведения.Вставить("ИННЮЛЮЛ", Титульный.П_ИНН);
		ОсновныеСведения.Вставить("КППЮЛ", Титульный.П_КПП);
		ОсновныеСведения.Вставить("ОГРНЮЛ", Титульный.ОГРН);
	КонецЕсли;
	
	ОсновныеСведения.Вставить("ПрПодп",  Титульный.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("Тлф",     Титульный.ТЕЛЕФОН);
	ОсновныеСведения.Вставить("НаимДок", Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Титульный.ДАТА_ПОДПИСИ, "ДФ=dd.MM.yyyy"));
	ОсновныеСведения.Вставить("email",   Титульный.EMAIL_ПОДПИСАНТА);
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2015_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	Данные = Объект.ДанныеУведомления.Получить();
	Титульный = Данные.ДанныеУведомления.Титульная;
	
	ОсновныеСведения.Вставить("ПрНП", Титульный.ПрНП);
	ОсновныеСведения.Вставить("ОснУвед", Титульный.ОснУвед);
	ОсновныеСведения.Вставить("НомКорр", Формат(?(ЗначениеЗаполнено(Титульный.НомерКорректировки), Титульный.НомерКорректировки, 0), "ЧН=0"));
	ОсновныеСведения.Вставить("EmailПодп", Титульный.ЭлАдрес);
	ОсновныеСведения.Вставить("ИННПодп", Титульный.ИННФЛ);
	ОсновныеСведения.Вставить("ТлфПодп", Титульный.Тлф);
	ОсновныеСведения.Вставить("НаимДок", Титульный.НаимДок);
	ОсновныеСведения.Вставить("ПрПодп",  Титульный.ПРИЗНАК_НП_ПОДВАЛ);
	ОсновныеСведения.Вставить("НаимДок", Титульный.НаимДок);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Титульный.ДАТА_ПОДПИСИ, "ДФ=dd.MM.yyyy"));
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2019_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2015_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2015_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2015_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2015_1");
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(ОсновныеСведения, СтруктураВыгрузки);
	ЗаполнитьДанными_Форма2015_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2019_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2019_1");
	ДополнитьПараметры(ДанныеУведомления);
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными_Форма2015_1(Объект, Параметры, ДеревоВыгрузки)
	Данные = Объект.ДанныеУведомления.Получить();
	ЛистыИО = Данные.СведИО;
	ЛистыРО = Данные.СведРО;
	ЛистыИС = Данные.СведИС;
	СведИСУч = Данные.СведИСУч;
	ЛистыУч = Данные.СведУч;
	МнгУч = Данные.МногострочнаяЧасть;
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(ДеревоВыгрузки, "Документ");
	Узел_УведУчИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "УведУчИО");
	
	Узел_СведИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "СведИО");
	Для Каждого ЛистИО Из ЛистыИО Цикл
		Если Не ЗначениеЗаполнено(ЛистИО.ИО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_ЛистИО = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведИО);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "НомерИО", "ИО-" + Формат(ЛистИО.ИО_Номер, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "НаимОрг", ЛистИО.ИО_ПолноеНаименование_RUS);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "НаимОргЛат", ЛистИО.ИО_ПолноеНаименование_EN);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "СтрРег", ЛистИО.КодСтранаРегистрации);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "РегНомер", ЛистИО.РегНом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "КодНПРег", ЛистИО.КодНом1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "АдрСтрРег", ЛистИО.ИнАдр1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "Участие", ЛистИО.ПрУч1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "ДатаВознУч", Формат(ЛистИО.ДатаНач1, "ДФ=dd.MM.yyyy"));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "ДоляУч", ЛистИО.ДоляУчастия1);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_ЛистИО, "ДатаКонУч", Формат(ЛистИО.ДатаКон1, "ДФ=dd.MM.yyyy"));
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СведИО);
	
	Узел_СведРос = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "СведРос");
	Для Каждого ЛистРО Из ЛистыРО Цикл
		Если Не ЗначениеЗаполнено(ЛистРО.РО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СведРос = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведРос);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "НомерРО", "РО-" + Формат(ЛистРО.РО_Номер, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "НаимОрг", ЛистРО.РО_ПолноеНаименование);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "ОГРН", ЛистРО.ОГРН2);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "ИННЮЛ", ЛистРО.ИНН2);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведРос, "КПП", ЛистРО.КПП2);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СведРос);
	
	Узел_СведИСБезЮЛ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "СведИСБезЮЛ");
	Для Каждого ЛистИС Из ЛистыИС Цикл
		Если Не ЗначениеЗаполнено(ЛистИС.НомерСтруктуры) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_СведИСБезЮЛ = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведИСБезЮЛ);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведИСБезЮЛ, "НомерИС", "ИС-" + Формат(ЛистИС.НомерСтруктуры, "ЧЦ=5; ЧВН=; ЧГ="));
		
		Узел_СведИС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_СведИСБезЮЛ, "СведИС");
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "ОргФорм", ЛистИС.ПрСтр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимОрг", ЛистИС.ИС_ПолноеНаименование_RUS);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимОргЛат", ЛистИС.ИС_ПолноеНаименование_EN);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимДокУчр", ЛистИС.ИС_ДокНаименование_RUS);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "НаимДокУчрЛат", ЛистИС.ИС_ДокНаименование_EN);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "ДатаУчр", Формат(ЛистИС.ДатаРегСтр, "ДФ=dd.MM.yyyy"));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "СтранаУчрИС", ЛистИС.КодСтраныСтр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "РегНомерИС", ЛистИС.РегНомСтр);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СведИС, "ИныеСведИС", ЛистИС.СведСтр);
		
		Узел_СведУчИС = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведИС, "СведУчИС");
		СтрокиИСУч = СведИСУч.НайтиСтроки(Новый Структура("UID_parent", ЛистИС.UID));
		Для Каждого СтрИСУч Из СтрокиИСУч Цикл
			НовыйУзел_СведУчИС = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведУчИС);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОснУчред", Формат(СтрИСУч.ПрУч, "ЧН=0"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОснОсущКонтр", Формат(СтрИСУч.ПрКон, "ЧН=0"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОснПравДоход", Формат(СтрИСУч.ПрДох, "ЧН=0"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "СтатУчаст", СтрИСУч.ИС_Статус_RUS);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "СтатУчастЛат", СтрИСУч.ИС_Статус_EN);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДокОснКонтр", СтрИСУч.ИС_НаимДок);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ОписОснКонтр", СтрИСУч.ИС_Основания);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "УчастИС", СтрИСУч.УчИнСтр);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДатаВознУчаст", Формат(СтрИСУч.ДатаНачИС, "ДФ=dd.MM.yyyy"));
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДоляУчаст", СтрИСУч.ДоляУчастияИС);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчИС, "ДатаКонУчаст", Формат(СтрИСУч.ДатаКонИС, "ДФ=dd.MM.yyyy"));
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Узел_СведУчИС);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СведИСБезЮЛ);
	
	Узел_РаскрУчИОКосв = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_УведУчИО, "РаскрУчИОКосв");
	Для Каждого ЛистУч Из ЛистыУч Цикл
		Если Не ЗначениеЗаполнено(ЛистУч.НомерУчастника) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйУзел_РаскрУчИОКосв = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_РаскрУчИОКосв);
		
		Узел_СвУчКосвИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_РаскрУчИОКосв, "СвУчКосвИО");
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СвУчКосвИО, "НомерИО", Формат(ЛистУч.НомерУчастника, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СвУчКосвИО, "НаимОрг", ЛистУч.ПолноеНаименование);
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_СвУчКосвИО, "ДоляУчКосвИт", ЛистУч.ДоляКосвУчастия);
		
		Узел_РаскрУчИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(НовыйУзел_РаскрУчИОКосв, "РаскрУчИО");
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РаскрУчИО, "НомерПосл", Формат(ЛистУч.НомерГруппы, "ЧЦ=5; ЧВН=; ЧГ="));
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(Узел_РаскрУчИО, "ДоляКосвПослИт", ЛистУч.ДоляКосвУчастияГр);
		
		СтрокиМнг = МнгУч.НайтиСтроки(Новый Структура("UID", ЛистУч.UID));
		Узел_СведУчПосл = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_РаскрУчИО, "СведУчПосл");
		Для Каждого Стр Из СтрокиМнг Цикл
			НовыйУзел_СведУчПосл = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СведУчПосл);
			
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчПосл, "НомерУч", Стр.НомерУчастника);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчПосл, "ДоляУчПрям", Стр.ДоляПрУчастия);
			Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьЗначениеЭлемента(НовыйУзел_СведУчПосл, "ДоляУчКосв", Стр.ДоляКосвУчастия);
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Узел_СведУчПосл);
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_РаскрУчИОКосв);
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	Если ТипЗнч(Данные) = Тип("Структура") Тогда 
		Для Каждого КЗ Из Данные Цикл 
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда 
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда 
				Возврат Истина
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Процедура ДополнитьПараметры(Параметры)
	Если Не ЗначениеЗаполнено(Параметры.ДанныеУведомления.Титульная.НомерКорректировки) Тогда 
		Параметры.ДанныеУведомления.Титульная.НомерКорректировки = "0";
	КонецЕсли;
	
	Если Параметры.ДанныеУведомления.Свойство("ЛистСведФЛ") Тогда 
		ПарамСтр = Параметры.ДанныеУведомления.ЛистСведФЛ;
		ПарамСтр.Вставить("ДатаДок", Формат(ПарамСтр.ДатаДокДата, "ДФ=dd.MM.yyyy; ДП=' '"));
		ПарамСтр.Вставить("ДатаДок1", Формат(ПарамСтр.ДатаДокДата1, "ДФ=dd.MM.yyyy; ДП=' '"));
		ПарамСтр.Вставить("ДатаРожд", Формат(ПарамСтр.ДатаРождДата, "ДФ=dd.MM.yyyy; ДП=' '"));
	КонецЕсли;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистА Цикл
		ПарамСтр = Стр.Значение;
		Если Не ЗначениеЗаполнено(ПарамСтр.НомерКонтрЛицЧисло) Тогда 
			Для Каждого КЗ Из ПарамСтр Цикл 
				ПарамСтр[КЗ.Ключ] = Неопределено;
			КонецЦикла;
		ИначеЕсли СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерИО", "ИО-" + Формат(ПарамСтр.НомерКонтрЛицЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("ДатаИзмДолиУчСтр", Формат(ПарамСтр.ДатаИзмДолиУч, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаКонУчСтр", Формат(ПарамСтр.ДатаКонУч, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаВознУчСтр", Формат(ПарамСтр.ДатаВознУч, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаРегИОСтр", Формат(ПарамСтр.ДатаРегИО, "ДФ=dd.MM.yyyy; ДП=' '"));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ПарамСтр = Стр.Значение;
		Если Не ЗначениеЗаполнено(ПарамСтр.НомерРосОргЧисло) Тогда 
			Для Каждого КЗ Из ПарамСтр Цикл 
				ПарамСтр[КЗ.Ключ] = Неопределено;
			КонецЦикла;
		ИначеЕсли СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерРО", "РО-" + Формат(ПарамСтр.НомерРосОргЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ПарамСтр = Стр.Значение;
		Если Не ЗначениеЗаполнено(ПарамСтр.НомерИСЧисло) Тогда 
			Для Каждого КЗ Из ПарамСтр Цикл 
				ПарамСтр[КЗ.Ключ] = Неопределено;
			КонецЦикла;
		ИначеЕсли СтраницаЗаполнена(ПарамСтр) Тогда
			ПарамСтр.Вставить("НомерИС", "ИС-" + Формат(ПарамСтр.НомерИСЧисло, "ЧЦ=5; ЧВН=; ЧГ="));
			ПарамСтр.Вставить("ДатаУчрСтр", Формат(ПарамСтр.ДатаУчр, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаКонУчСтр", Формат(ПарамСтр.ДатаКонУч, "ДФ=dd.MM.yyyy; ДП=' '"));
			ПарамСтр.Вставить("ДатаВознУчСтр", Формат(ПарамСтр.ДатаВознУч, "ДФ=dd.MM.yyyy; ДП=' '"));
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ДанныеМногостраничныхРазделов.Вставить("Лист_Г0", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("Лист_Г00", Новый СписокЗначений);
	Параметры.ДанныеМногостраничныхРазделов.Вставить("Лист_Г000", Новый СписокЗначений);
	
	С_Г0 = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерИОЧисло) И СтраницаЗаполнена(ПарамСтр) Тогда
			НомерИО = "ИО-" + Формат(ПарамСтр.НомерИОЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			Если С_Г0[НомерИО] = Неопределено Тогда 
				Стр_Г0 = Новый Структура("УИД,НаимОргЛат,ДоляУчКосвИт,НомерИО",Новый УникальныйИдентификатор, ПарамСтр.НаимОргЛат, ПарамСтр.ДоляУчКосвИт, НомерИО);
				С_Г0[НомерИО] = Стр_Г0;
				Параметры.ДанныеМногостраничныхРазделов.Лист_Г0.Добавить(Стр_Г0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	С_Г00 = Новый Соответствие;
	Для Каждого Стр Из Параметры.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ПарамСтр = Стр.Значение;
		Если ЗначениеЗаполнено(ПарамСтр.НомерИОЧисло) И СтраницаЗаполнена(ПарамСтр) Тогда
			НомерИО = "ИО-" + Формат(ПарамСтр.НомерИОЧисло, "ЧЦ=5; ЧВН=; ЧГ=");
			НомерПосл = Формат(ПарамСтр.НомерПосл, "ЧЦ=5; ЧВН=; ЧГ=");
			Если С_Г00[НомерИО + НомерПосл] = Неопределено Тогда 
				Стр_Г00 = Новый Структура("УИД,УИДРодителя,НомерПосл,ДоляКосвПослИт", Новый УникальныйИдентификатор, С_Г0[НомерИО].УИД, НомерПосл, ПарамСтр.ДоляКосвПослИт);
				С_Г00[НомерИО + НомерПосл] = Стр_Г00;
				Параметры.ДанныеМногостраничныхРазделов.Лист_Г00.Добавить(Стр_Г00);
				
				Для Каждого СтрМнг Из Параметры.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", ПарамСтр.УИД)) Цикл 
					Стр_Г000 = Новый Структура("УИД,УИДРодителя,НомерУч,ДоляУчПрям,ДоляУчКосв", Новый УникальныйИдентификатор, С_Г00[НомерИО + НомерПосл].УИД, СтрМнг.НомерУч, СтрМнг.ДоляУчПрям, СтрМнг.ДоляУчКосв);
					Параметры.ДанныеМногостраничныхРазделов.Лист_Г000.Добавить(Стр_Г000);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу_Форма2015_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
		"Устаревшая редакция формы", "Титульный", "Основание"));
	Возврат ТаблицаОшибок;
КонецФункции

Процедура ВывестиЧислоНаПечать(Число, ПрефиксПараметра, ОбластиМакета) Экспорт
	Инд = 1;
	ИмяПараметра = ПрефиксПараметра + "_1";
	Область = ОбластиМакета.Найти(ИмяПараметра);
	ЗнаковПослеЗапятой = 0;
	ЗнаковДоЗапятой = 1;
	
	Если Область = Неопределено 
		Или Область.Лево <> Область.Право Тогда 
		Возврат;
	КонецЕсли;
	
	Координата = Область.Лево;
	
	Пока Истина Цикл 
		Инд = Инд + 1;
		ИмяПараметра = ПрефиксПараметра + "_" + Инд;
		Область = ОбластиМакета.Найти(ИмяПараметра);
		Если Область = Неопределено 
			Или Область.Лево <> Область.Право Тогда 
			Прервать;
		КонецЕсли;
		
		ЗнаковДоЗапятой = ЗнаковДоЗапятой + 1;
		Если ЗнаковПослеЗапятой > 0 
			Или Область.Лево > Координата + 1 Тогда 
			
			ЗнаковПослеЗапятой = ЗнаковПослеЗапятой + 1;
			ЗнаковДоЗапятой = ЗнаковДоЗапятой - 1;
		КонецЕсли;
		
		Координата = Координата + 1;
	КонецЦикла;
	
	Если Число = 0 Тогда 
		Ч = "-------------------------------------------------";
	Иначе
		Ч = Лев(Формат(Цел(Число), "ЧН=0; ЧГ=") + "-------------------------------------------------", ЗнаковДоЗапятой);
		Ч2 = Прав("00000000000000000000000000000000000000000000" + Формат(   (Число - Цел(Число)) * Pow(10, ЗнаковПослеЗапятой), "ЧГ="), ЗнаковПослеЗапятой);
		Пока Прав(Ч2, 1) = "0" Цикл 
			Ч2 = Лев(Ч2, СтрДлина(Ч2) - 1);
		КонецЦикла;
		Ч = Ч + Ч2 + "-------------------------------------------------";
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Ч, ПрефиксПараметра, ОбластиМакета);
КонецПроцедуры

Процедура ДополнитьТекстовоеПредставление(ПечатнаяФорма, ТекстовоеПредставлениеДатыПодписи, ИмяОбласти = "ТекстовоеПредставлениеДатыПодписи")
	Обл = ПечатнаяФорма.Области.Найти(ИмяОбласти);
	Если Не Обл = Неопределено Тогда 
		Обл.Текст = ТекстовоеПредставлениеДатыПодписи;
	КонецЕсли;
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП)
	Попытка
		МакетПФ = Отчеты.РегламентированноеУведомлениеУ_ИО.ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомСтр = НомСтр + 1;
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области, "-");
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли КЗ.Значение = Неопределено Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", КЗ.Ключ, МакетПФ.Области, "-");
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", МакетПФ.Области, "-");
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ИННКПП)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если СтрПарам.ИДНаименования = "ЛистСведФЛ" И ЗначениеЗаполнено(ИННКПП.ИНН) Тогда
				Продолжить;
			КонецЕсли;
			
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
				Если СтрПарам.ИДНаименования = "Титульная" Тогда
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантФамилия, "ПодпФ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантИмя, "ПодпИ", ПечатнаяФорма.Области, "-");
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Объект.ПодписантОтчество, "ПодпО", ПечатнаяФорма.Области, "-");
					ПечатнаяФорма.Области.ЭлАдрес.Текст = СтруктураДанныхСтраницы.ЭлАдрес;
					Если Не ЗначениеЗаполнено(СтруктураДанныхСтраницы.НомерКорректировки) Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0--", "НомерКорректировки", ПечатнаяФорма.Области);
					КонецЕсли;
				КонецЕсли;
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ТекстовоеПредставлениеДатыПодписи);
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ФамилияВерх, "ФамилияВерх");
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ИмяВерх, "ИмяВерх");
				ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ОтчествоВерх, "ОтчествоВерх");
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					Если СтрПарам.ИДНаименования = "ЛистГ" Тогда
						ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", МнгСтр.Значение.УИД));
						
						Для Инд = 0 По ДопСтроки.ВГраница() Цикл 
							Если Инд%8 = 0 Тогда
								НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
								Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляУчКосвИт) Тогда 
									УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляУчКосвИт", ПечатнаяФорма.Области);
								КонецЕсли;
								Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляКосвПослИт) Тогда 
									УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляКосвПослИт", ПечатнаяФорма.Области);
								КонецЕсли;
							КонецЕсли;
							
							СтрокаНаЛисте = "_" + (Инд%8 + 1);
							ТекМнгСтрока = ДопСтроки[Инд];
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ТекМнгСтрока.НомерУч, "НомерУч"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
							Если ЗначениеЗаполнено(ТекМнгСтрока.ДоляУчПрям) Тогда 
								ВывестиЧислоНаПечать(ТекМнгСтрока.ДоляУчПрям, "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							Иначе
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------",  "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							КонецЕсли;
							
							Если ЗначениеЗаполнено(ТекМнгСтрока.ДоляУчКосв) Тогда 
								ВывестиЧислоНаПечать(ТекМнгСтрока.ДоляУчКосв, "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							Иначе
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------",  "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
							КонецЕсли;
							
							Если Инд%8 = 7 Или Инд = ДопСтроки.ВГраница() Тогда
								Если Инд = ДопСтроки.ВГраница() И Инд%8 <> 7 Тогда 
									Пока Инд%8 <> 7 Цикл
										Инд = Инд + 1;
										СтрокаНаЛисте = "_" + (Инд%8 + 1);
										УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("-------------", "НомерУч"+СтрокаНаЛисте, ПечатнаяФорма.Области, "-");
										ВывестиЧислоНаПечать(0, "ДоляУчПрям"+СтрокаНаЛисте, ПечатнаяФорма.Области);
										ВывестиЧислоНаПечать(0, "ДоляУчКосв"+СтрокаНаЛисте, ПечатнаяФорма.Области);
									КонецЦикла;
								КонецЕсли;
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ТекстовоеПредставлениеДатыПодписи);
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ФамилияВерх, "ФамилияВерх");
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ИмяВерх, "ИмяВерх");
								ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ОтчествоВерх, "ОтчествоВерх");
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерИОЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерИОЧисло", ПечатнаяФорма.Области);
								УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
								ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
							КонецЕсли;
						КонецЦикла;
					Иначе 
						НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ИННКПП);
						Если СтрПарам.ИДНаименования = "ЛистА" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерКонтрЛицЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерКонтрЛицЧисло", ПечатнаяФорма.Области);
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляУч", ПечатнаяФорма.Области);
							КонецЕсли;
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистБ" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерРосОргЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерРосОргЧисло", ПечатнаяФорма.Области);
						ИначеЕсли СтрПарам.ИДНаименования = "ЛистВ" Тогда 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(МнгСтр.Значение.НомерИСЧисло, "ЧЦ=5; ЧН=; ЧВН=; ЧГ="), "НомерИСЧисло", ПечатнаяФорма.Области);
							Если Не ЗначениеЗаполнено(МнгСтр.Значение.ДоляУч) Тогда 
								УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("0-------------------------------", "ДоляУч", ПечатнаяФорма.Области);
							КонецЕсли;
						КонецЕсли;
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ТекстовоеПредставлениеДатыПодписи);
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ФамилияВерх, "ФамилияВерх");
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ИмяВерх, "ИмяВерх");
						ДополнитьТекстовоеПредставление(ПечатнаяФорма, ИННКПП.ОтчествоВерх, "ОтчествоВерх");
						УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ИННКПП);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2019_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = Объект.Ссылка.ДанныеУведомления.Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИНН", СтруктураПараметров.ДанныеУведомления.Титульная.ИНН);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	ИННКПП.Вставить("ТекстовоеПредставлениеДатыПодписи", Формат(СтруктураПараметров.ДанныеУведомления.Титульная.ДАТА_ПОДПИСИ, "ДЛФ=DD; ДП="));
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(СтруктураПараметров.ДанныеУведомления.Титульная.Наименование);
		ИННКПП.Вставить("ФамилияВерх", ФИОИП.Фамилия);
		ИННКПП.Вставить("ИмяВерх", Лев(ВРег(СокрЛП(ФИОИП.Имя)), 1));
		ИННКПП.Вставить("ОтчествоВерх", Лев(ВРег(СокрЛП(ФИОИП.Отчество)), 1));
	Иначе
		ИННКПП.Вставить("ФамилияВерх", "");
		ИННКПП.Вставить("ИмяВерх", "");
		ИННКПП.Вставить("ОтчествоВерх", "");
	КонецЕсли;
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ИННКПП);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2019_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или (Не УведомлениеОСпецрежимахНалогообложения.СтрокаСодержитТолькоЦифры(Титульная.КодНО))
		Или СтрДлина(СокрЛП(Титульная.КодНО)) <> 4 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый орган", "Титульная", "КодНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ОснУвед) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано основание подачи уведомления", "Титульная", "ОснУвед"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрНП) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак налогоплательщика", "Титульная", "ПрНП"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимДок) И (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "4") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ (обязателен при подаче представителем)", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ) 
		И (Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "3" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "4") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан представитель", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ)
		И (Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Или Не ЗначениеЗаполнено(Данные.ПодписантИмя))Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны фамилия/имя представителя", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульная.ИННФЛ) И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИННФЛ, Ложь, "") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан ИНН", "Титульная", "ИННФЛ"));
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН) Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП) Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан/неправильно указан КПП", "Титульная", "КПП"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации", "Титульная", "Наименование"));
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Титульная.ИНН) И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		
		ЛистСведФЛ = Данные.ДанныеУведомления.ЛистСведФЛ;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.Фамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия", "ЛистСведФЛ", "Фамилия"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя", "ЛистСведФЛ", "Имя"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.ДатаРождДата) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата рождения", "ЛистСведФЛ", "ДатаРождДата"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.МестоРожд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано место рождения", "ЛистСведФЛ", "МестоРожд"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.ПрГражд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана признак гражданства", "ЛистСведФЛ", "ПрГражд"));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.КодВидДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код документа", "ЛистСведФЛ", "КодВидДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.ДатаДокДата) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата выдачи документа", "ЛистСведФЛ", "ДатаДокДата"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.СерНомДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана серия и номер документа", "ЛистСведФЛ", "СерНомДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистСведФЛ.ВыдДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан орган, выдавший документ", "ЛистСведФЛ", "ВыдДок"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛистСведФЛ.КодВидДок1)
			Или ЗначениеЗаполнено(ЛистСведФЛ.ДатаДокДата1)
			Или ЗначениеЗаполнено(ЛистСведФЛ.СерНомДок1)
			Или ЗначениеЗаполнено(ЛистСведФЛ.ВыдДок1) Тогда 
		
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.КодВидДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код документа", "ЛистСведФЛ", "КодВидДок1"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.ДатаДокДата1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата выдачи документа", "ЛистСведФЛ", "ДатаДокДата1"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.СерНомДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана серия и номер документа", "ЛистСведФЛ", "СерНомДок1"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистСведФЛ.ВыдДок1) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан орган, выдавший документ", "ЛистСведФЛ", "ВыдДок1"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НаличиеАВ = Ложь;
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл
		ЛистТек = Лист.Значение;
		Если Не ЗначениеЗаполнено(ЛистТек.НомерКонтрЛицЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		НаличиеАВ = Истина;
		Если Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации (лист А)", "ЛистА", "НаимОргЛат", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.СтрРег) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана страна регистрации (лист А)", "ЛистА", "СтрРег", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.РегНомер) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан регистрационный номер (лист А)", "ЛистА", "РегНомер", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.Участие) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак участия (лист А)", "ЛистА", "Участие", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДатаВознУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата (лист А)", "ЛистА", "ДатаВознУч", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДоляУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана доля (лист А)", "ЛистА", "ДоляУч", ЛистТек.УИД));
		КонецЕсли;
		
		Если Титульная.ОснУвед = "4" И ЛистТек.ДатаВознУч <> Дата('20150515') Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При основании подачи уведомления ""4"" дата должна принимать значение 15.05.2015 (лист А)", "ЛистА", "ДатаВознУч", ЛистТек.УИД));
		КонецЕсли;
		Если (Титульная.ОснУвед = "2" Или Титульная.ОснУвед = "7") И Не ЗначениеЗаполнено(ЛистТек.ДатаИзмДолиУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При основании подачи уведомления ""2"" или ""7"" должна быть указана дата изменения (лист А)", "ЛистА", "ДатаИзмДолиУч", ЛистТек.УИД));
		КонецЕсли;
		Если (Титульная.ОснУвед = "3") И Не ЗначениеЗаполнено(ЛистТек.ДатаКонУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При основании подачи уведомления ""3"" должна быть указана дата окончания (лист А)", "ЛистА", "ДатаКонУч", ЛистТек.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл
		ЛистТек = Лист.Значение;
		Если Не ЗначениеЗаполнено(ЛистТек.НомерРосОргЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистТек.НаимОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации (лист Б)", "ЛистБ", "НаимОрг", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ОГРН) Или Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ЛистТек.ОГРН, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан ОГРН (лист Б)", "ЛистБ", "ОГРН", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ИННЮЛ) Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ЛистТек.ИННЮЛ, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан ИНН (лист Б)", "ЛистБ", "ИННЮЛ", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.КПП) Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(ЛистТек.КПП, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан КПП (лист Б)", "ЛистБ", "КПП", ЛистТек.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл
		ЛистТек = Лист.Значение;
		Если Не ЗначениеЗаполнено(ЛистТек.НомерИСЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		НаличиеАВ = Истина;
		Если Не ЗначениеЗаполнено(ЛистТек.Учредит) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак учредителя (лист В)", "ЛистВ", "Учредит", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.КонтрЛиц) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак контролирующего лица (лист В)", "ЛистВ", "КонтрЛиц", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ОргФорм) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак организационной формы (лист В)", "ЛистВ", "ОргФорм", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование структуры (лист В)", "ЛистВ", "НаимОргЛат", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДатаУчр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата учереждения структуры (лист В)", "ЛистВ", "ДатаУчр", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДатаВознУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата возникновения участия (лист В)", "ЛистВ", "ДатаВознУч", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДоляУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана доля участия (лист В)", "ЛистВ", "ДоляУч", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.СтранаУчрИС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана страна регистрации (лист В)", "ЛистВ", "СтранаУчрИС", ЛистТек.УИД));
		КонецЕсли;
		
		Если Титульная.ОснУвед = "4" И ЛистТек.ДатаВознУч <> Дата('20150515') Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При основании подачи уведомления ""4"" дата должна принимать значение 15.05.2015 (лист В)", "ЛистВ", "ДатаВознУч", ЛистТек.УИД));
		КонецЕсли;
		Если (Титульная.ОснУвед = "3") И Не ЗначениеЗаполнено(ЛистТек.ДатаКонУч) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При основании подачи уведомления ""3"" должна быть указана дата окончания (лист В)", "ЛистВ", "ДатаКонУч", ЛистТек.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Если Не НаличиеАВ Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнены сведения об иностранных организациях", "ЛистА", "НомерКонтрЛицЧисло", Данные.ДанныеМногостраничныхРазделов.ЛистА[0].Значение.УИД));
	КонецЕсли;
	
	Для Каждого Лист Из Данные.ДанныеМногостраничныхРазделов.ЛистГ Цикл
		ЛистТек = Лист.Значение;
		Если Не ЗначениеЗаполнено(ЛистТек.НомерИОЧисло) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистТек.НаимОргЛат) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации (лист Г)", "ЛистГ", "НаимОргЛат", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДоляУчКосвИт) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана доля косвенного участия (лист Г)", "ЛистГ", "ДоляУчКосвИт", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.ДоляКосвПослИт) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана доля косвенного участия в последовательности (лист Г)", "ЛистГ", "ДоляКосвПослИт", ЛистТек.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистТек.НомерПосл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер последовательности (лист Г)", "ЛистГ", "НомерПосл", ЛистТек.УИД));
		КонецЕсли;
		
		Инд = 0;
		Для Каждого СтрМнг Из Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", ЛистТек.УИД)) Цикл 
			Инд = Инд + 1;
			Если Не ЗначениеЗаполнено(СтрМнг.НомерУч) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер участника последовательности (лист Г)", "ЛистГ", "НомерУч___" + Формат(Инд, "ЧГ="), ЛистТек.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2019_1", "СхемаВыгрузкиФорма2019_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2015_1" Тогда
		Возврат СформироватьМакет_Форма2015_1(Объект);
	ИначеЕсли ИмяФормы = "Форма2019_1" Тогда
		Возврат СформироватьМакет_Форма2019_1(Объект);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СформироватьМакет_Форма2015_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОСпецрежимах_"+Объект.ВидУведомления.Метаданные().Имя;
	
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2015_1");
	СтруктураПараметров = Объект.ДанныеУведомления.Получить();
	ПараметрыМакета = МакетУведомления.Параметры;
	
	НомерСтраницы = 2 + ?(РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация),0,1);
	Титульный = СтруктураПараметров.Титульный[0];
	СведФЛ = СтруктураПараметров.СведФЛ;
	СведРО = СтруктураПараметров.СведРО;
	СведИО = СтруктураПараметров.СведИО;
	СведУч = СтруктураПараметров.СведУч;
	СведИС = СтруктураПараметров.СведИС;
	СведИСУч = СтруктураПараметров.СведИСУч;
	МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть;
	
#Область ПечатьЛистФЛ
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		СведФЛ = СведФЛ[0];
		ОбластьЛистФЛ = МакетУведомления.ПолучитьОбласть("ЛистФЛ");
		ПараметрыМакета = ОбластьЛистФЛ.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.ФАМИЛИЯ_ИП, "Фамилия_", ПараметрыМакета, 35);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.ИМЯ_ИП, "Имя_", ПараметрыМакета, 35);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.ОТЧЕСТВО_ИП, "Отчество_", ПараметрыМакета, 35);
		ПараметрыМакета.Пол = СведФЛ.Пол;
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СведФЛ.ДатаРождения, "ДатаРожд_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.МестоРождения, "МестоРожд_", ПараметрыМакета, 80);
		ПараметрыМакета.Гражданство = СведФЛ.Гражданство;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодСтрИностранец, "КодСтрИнГр_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодВидДок1, "КодВидДок_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.СерНомДок1, "СерНомДок_", ПараметрыМакета, 19);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СведФЛ.ДатаВыдочиДок1, "ДатаВыдачиДок_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КемВыданДок1, "ВыданДок_", ПараметрыМакета, 35);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодВидДок2, "КодВидДокРег_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.СерНомДок2, "СерНомДокРег_", ПараметрыМакета, 19);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СведФЛ.ДатаВыдочиДок2, "ДатаВыдачиДокРег_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КемВыданДок2, "ВыданДокРег_", ПараметрыМакета, 35);
		
		ПараметрыМакета.ПрМЖ = СведФЛ.МЖРФ;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Индекс, "Индекс_", ПараметрыМакета, 6);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодРегиона, "КодСубъекта_", ПараметрыМакета, 2);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Район, "Район_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Город, "Город_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.НаселенныйПункт, "НаселенныйПункт_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Улица, "Улица_", ПараметрыМакета, 33);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Дом, "Дом_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Корпус, "Корпус_", ПараметрыМакета, 8);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.Квартира, "Квартира_", ПараметрыМакета, 8);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.КодСтраныРегистрации, "КодСтрИнГрМЖ_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СведФЛ.МЖИнГос, "МестоПрож_", ПараметрыМакета, 120);
		
		ПечатнаяФорма.Вывести(ОбластьЛистФЛ);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
#КонецОбласти

#Область ПечатьЛистА
	НомЛистА = 1;
	Для Каждого Свед Из СведИО Цикл
		Если Не ЗначениеЗаполнено(Свед.ИО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистА = МакетУведомления.ПолучитьОбласть("ЛистА");
		ПараметрыМакета = ОбластьЛистА.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистА, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.ИО_Номер, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИО_ПолноеНаименование_RUS, "ОрганизацияНазваниеRUS_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИО_ПолноеНаименование_EN, "ОрганизацияНазваниеEN_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КодСтранаРегистрации, "КодСтр_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.РегНом1, "РегНомСтрРег_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КодНом1, "КодНплСтрРег_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИнАдр1, "АдрСтрРег_", ПараметрыМакета, 120);
		ПараметрыМакета.ПрУчастие = Свед.ПрУч1;
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Свед.ДатаНач1, "ДатаВознПрава_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Свед.ДатаКон1, "ДатаУтрПрава_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(Свед.ДоляУчастия1, 3, 5, "ДоляУчастия_", ПараметрыМакета);
		
		ПечатнаяФорма.Вывести(ОбластьЛистА);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		НомЛистА = НомЛистА + 1;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистБ
	НомЛистБ = 1;
	Для Каждого Свед Из СведРО Цикл
		Если Не ЗначениеЗаполнено(Свед.РО_Номер) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистБ = МакетУведомления.ПолучитьОбласть("ЛистБ");
		ПараметрыМакета = ОбластьЛистБ.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистБ, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.РО_Номер, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ОГРН2, "ОГРНРО_", ПараметрыМакета, 13);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИНН2, "ИННРО_", ПараметрыМакета, 10);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КПП2, "КППРО_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.РО_ПолноеНаименование, "ПолнНазвРО_", ПараметрыМакета, 160);
		
		ПечатнаяФорма.Вывести(ОбластьЛистБ);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		НомЛистБ = НомЛистБ + 1;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистВ
	НомЛистВ = 1;
	НомЛистВ1 = 1;
	Для Каждого Свед Из СведИС Цикл
		Если Не ЗначениеЗаполнено(Свед.НомерСтруктуры) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистВ = МакетУведомления.ПолучитьОбласть("ЛистВ");
		ПараметрыМакета = ОбластьЛистВ.Параметры;
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистВ, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.НомерСтруктуры, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
		ПараметрыМакета.ОргФормаКод = Свед.ПрСтр;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ПолноеНаименование_RUS, "ОрганизацияНазваниеRUS_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ПолноеНаименование_EN, "ОрганизацияНазваниеEN_", ПараметрыМакета, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ДокНаименование_RUS, "НаимРеквДокRUS_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ИС_ДокНаименование_EN, "НаимРеквДокEN_", ПараметрыМакета, 80);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.КодСтраныСтр, "КодСтр_", ПараметрыМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Свед.ДатаРегСтр, "ДатаРегСтр_", ПараметрыМакета);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.РегНомСтр, "РегНомИд_", ПараметрыМакета, 20);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.СведСтр, "ИныеСвед_", ПараметрыМакета, 240);
		
		ПечатнаяФорма.Вывести(ОбластьЛистВ);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		НомЛистВ = НомЛистВ + 1;
		
		СведИСУчТек = СведИСУч.НайтиСтроки(Новый Структура("UID_parent", Свед.UID));
		Для Каждого ЛистВ1 Из СведИСУчТек Цикл
			ОбластьЛистВ1 = МакетУведомления.ПолучитьОбласть("ЛистВ1");
			ПараметрыМакета = ОбластьЛистВ1.Параметры;
			
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыМакета, 3);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистВ1, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыМакета, 3);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.НомерСтруктуры, "ЧЦ=5; ЧВН=; ЧГ="), "НомА_", ПараметрыМакета, 5);
			ПараметрыМакета.УчКод = Формат(ЛистВ1.ПрУч, "ЧН=0");
			ПараметрыМакета.КонКод = Формат(ЛистВ1.ПрКон, "ЧН=0");
			ПараметрыМакета.ДохКод = Формат(ЛистВ1.ПрДох, "ЧН=0");
			ПараметрыМакета.УчИнСтр = ЛистВ1.УчИнСтр;
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_Статус_RUS, "ОрганизацияНазваниеRUS_", ПараметрыМакета, 160);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_Статус_EN, "ОрганизацияНазваниеEN_", ПараметрыМакета, 160);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_НаимДок, "ИныеСвед_", ПараметрыМакета, 280);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(ЛистВ1.ИС_Основания, "Описание_", ПараметрыМакета, 120);
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(ЛистВ1.ДатаНачИС, "ДатаВознУч_", ПараметрыМакета);
			Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(ЛистВ1.ДатаКонИС, "ДатаКонУч_", ПараметрыМакета);
			Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(ЛистВ1.ДоляУчастияИС, 3, 5, "ДоляУч_", ПараметрыМакета);
			
			ПечатнаяФорма.Вывести(ОбластьЛистВ1);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомерСтраницы = НомерСтраницы + 1;
			НомЛистВ1 = НомЛистВ1 + 1;
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистГ
	НомЛистГ = 1;
	Для Каждого Свед Из СведУч Цикл
		Если Не ЗначениеЗаполнено(Свед.НомерУчастника) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбластьЛистГ = МакетУведомления.ПолучитьОбласть("ЛистГ_Верх");
		ОбластьЛистГМнг = МакетУведомления.ПолучитьОбласть("ЛистГ_Мнг");
		ОбластьНиз = МакетУведомления.ПолучитьОбласть("ЛистГ_Низ");
		
		ПараметрыЛистГ = ОбластьЛистГ.Параметры;
		МногострочнаяЧастьТекущая = МногострочнаяЧасть.НайтиСтроки(Новый Структура("UID", Свед.UID));
		
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыЛистГ, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыЛистГ, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Сред(Свед.НомерУчастника, 4), "НомА_", ПараметрыЛистГ, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Свед.ПолноеНаименование, "ПолнНазвВ_", ПараметрыЛистГ, 160);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(Свед.НомерГруппы, "ЧЦ=5; ЧВН=; ЧГ="), "НомГрВ_", ПараметрыЛистГ, 5);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(Свед.ДоляКосвУчастия, 3, 5, "ДолУчКосвВ_", ПараметрыЛистГ);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(Свед.ДоляКосвУчастияГр, 3, 5, "ДолУчКосвГрВ_", ПараметрыЛистГ);
		
		СтрокВМногострочке = МногострочнаяЧастьТекущая.Количество();
		КоличествоЛистовГ = Цел(СтрокВМногострочке / 15) + ?(СтрокВМногострочке % 15 = 0,0,1);
		
		Для Инд = 0 По КоличествоЛистовГ - 1 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомерСтраницы, "ЧЦ=3; ЧВН=; ЧГ="), "СТР_", ПараметрыЛистГ, 3);
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Формат(НомЛистГ, "ЧЦ=3; ЧВН=; ЧГ="), "СТРА_", ПараметрыЛистГ, 3);
			ПечатнаяФорма.Вывести(ОбластьЛистГ);
			
			Для ИндВн = 0 По 14 Цикл
				ОбластьЛистГМнг = МакетУведомления.ПолучитьОбласть("ЛистГ_Мнг");
				ПарамМнг = ОбластьЛистГМнг.Параметры;
				Сдвиг = Инд * 15 + ИндВн;
				
				Если Сдвиг < СтрокВМногострочке Тогда 
					НУ = СтрЗаменить(МногострочнаяЧастьТекущая[Сдвиг].НомерУчастника,"-","");
					Если ЗначениеЗаполнено(НУ) Тогда 
						Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(НУ, "НомУчГ_", ПарамМнг, 7);
						Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(МногострочнаяЧастьТекущая[Сдвиг].ДоляПрУчастия, 3, 5, "ДоляПрямУчГ_", ПарамМнг);
						Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(МногострочнаяЧастьТекущая[Сдвиг].ДоляКосвУчастия, 3, 5, "ДоляКосвУчГ_", ПарамМнг);
					КонецЕсли;
				КонецЕсли;
				ПечатнаяФорма.Вывести(ОбластьЛистГМнг);
			КонецЦикла;
			
			ПечатнаяФорма.Вывести(ОбластьНиз);
			ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			НомЛистГ = НомЛистГ + 1;
			НомерСтраницы = НомерСтраницы + 1;
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

#Область ПечатьЛистТитульный
	ОбластьЛистТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ПараметрыМакета = ОбластьЛистТитульный.Параметры;
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_ИНН, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.П_КПП, "КПП_", ПараметрыМакета, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.КОД_НО, "КодНО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(Формат(Титульный.НомерКорректировки, "ЧН=0"), "НомКорр_", ПараметрыМакета, 3);
	ПараметрыМакета.Нпл = Титульный.ПрНпл;
	ПараметрыМакета.Основание = Титульный.Основание;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ, "ПолнНазвВ_", ПараметрыМакета, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ОГРН, "ОГРН_", ПараметрыМакета, 13);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(НомерСтраницы - 1, "Страниц_", ПараметрыМакета, 3);
	
	ПараметрыМакета.ПРИЗНАК_НП_ПОДВАЛ = Титульный.ПРИЗНАК_НП_ПОДВАЛ;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Объект.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ИНН_ПОДПИСАНТА, "ИНН_ПОДПИСАНТА_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	ПараметрыМакета.EMAIL_ПОДПИСАНТА = Титульный.EMAIL_ПОДПИСАНТА;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ПараметрыМакета);
	
	ПечатнаяФормаИтоговая = Новый ТабличныйДокумент;
	ПечатнаяФормаИтоговая.АвтоМасштаб = Истина;
	ПечатнаяФормаИтоговая.ПолеСверху = 0;
	ПечатнаяФормаИтоговая.ПолеСнизу = 0;
	ПечатнаяФормаИтоговая.ПолеСлева = 0;
	ПечатнаяФормаИтоговая.ПолеСправа = 0;
	ПечатнаяФормаИтоговая.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОСпецрежимах_"+Объект.ВидУведомления.Метаданные().Имя;
	
	ПечатнаяФормаИтоговая.Вывести(ОбластьЛистТитульный);
	ПечатнаяФормаИтоговая.ВывестиГоризонтальныйРазделительСтраниц();
	ПечатнаяФормаИтоговая.Вывести(ПечатнаяФорма);
	ПечатнаяФорма = Неопределено;
#КонецОбласти

	Возврат ПечатнаяФормаИтоговая;
КонецФункции

Функция СформироватьМакет_Форма2019_1(Объект)
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("МакетПредупреждениеОНевозможностиПечати"));
	Возврат ПечатнаяФорма;
КонецФункции

#КонецОбласти
#КонецЕсли
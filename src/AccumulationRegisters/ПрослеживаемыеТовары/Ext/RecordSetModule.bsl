#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураВременныеТаблицы, "ДвиженияПрослеживаемыеТоварыИзменение", Ложь) Тогда
		
		// Если временная таблица "ДвиженияПрослеживаемыеТоварыИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияПрослеживаемыеТоварыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПрослеживаемыеТовары.НомерСтроки КАК НомерСтроки,
		|	ПрослеживаемыеТовары.Организация КАК Организация,
		|	ПрослеживаемыеТовары.РНПТ КАК РНПТ,
		|	ПрослеживаемыеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ПрослеживаемыеТовары.Номенклатура КАК Номенклатура,
		|	ПрослеживаемыеТовары.Характеристика КАК Характеристика,
		|	ПрослеживаемыеТовары.Партия КАК Партия,
		|	ВЫБОР
		|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ПрослеживаемыеТовары.Количество
		|		ИНАЧЕ -ПрослеживаемыеТовары.Количество
		|	КОНЕЦ КАК КоличествоПередЗаписью,
		|	ВЫБОР
		|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ПрослеживаемыеТовары.КоличествоПрослеживаемости
		|		ИНАЧЕ -ПрослеживаемыеТовары.КоличествоПрослеживаемости
		|	КОНЕЦ КАК КоличествоПрослеживаемостиПередЗаписью,
		|	ПрослеживаемыеТовары.Комиссионер КАК Комиссионер
		|ПОМЕСТИТЬ ДвиженияПрослеживаемыеТоварыПередЗаписью
		|ИЗ
		|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
		|ГДЕ
		|	ПрослеживаемыеТовары.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияПрослеживаемыеТоварыИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияПрослеживаемыеТоварыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияПрослеживаемыеТоварыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Организация КАК Организация,
		|	ДвиженияПрослеживаемыеТоварыИзменение.РНПТ КАК РНПТ,
		|	ДвиженияПрослеживаемыеТоварыИзменение.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура КАК Номенклатура,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Характеристика КАК Характеристика,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Партия КАК Партия,
		|	ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
		|	ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПрослеживаемостиПередЗаписью КАК КоличествоПрослеживаемостиПередЗаписью,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Комиссионер КАК Комиссионер
		|ПОМЕСТИТЬ ДвиженияПрослеживаемыеТоварыПередЗаписью
		|ИЗ
		|	ДвиженияПрослеживаемыеТоварыИзменение КАК ДвиженияПрослеживаемыеТоварыИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрослеживаемыеТовары.НомерСтроки,
		|	ПрослеживаемыеТовары.Организация,
		|	ПрослеживаемыеТовары.РНПТ,
		|	ПрослеживаемыеТовары.СтранаПроисхождения,
		|	ПрослеживаемыеТовары.Номенклатура,
		|	ПрослеживаемыеТовары.Характеристика,
		|	ПрослеживаемыеТовары.Партия,
		|	ВЫБОР
		|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ПрослеживаемыеТовары.Количество
		|		ИНАЧЕ -ПрослеживаемыеТовары.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ПрослеживаемыеТовары.КоличествоПрослеживаемости
		|		ИНАЧЕ -ПрослеживаемыеТовары.КоличествоПрослеживаемости
		|	КОНЕЦ,
		|	ПрослеживаемыеТовары.Комиссионер
		|ИЗ
		|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
		|ГДЕ
		|	ПрослеживаемыеТовары.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
				
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияПрослеживаемыеТоварыИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияПрослеживаемыеТоварыИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияПрослеживаемыеТоварыИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияПрослеживаемыеТоварыИзменение");
	
	КонецЕсли;
	
	// Хозяйственная операция
	ХозяйственныеОперацииСервер.ЗаполнитьХозяйственнуюОперациюВНабореЗаписей(ЭтотОбъект);
	// Конец Хозяйственная операция
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияПрослеживаемыеТоварыИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияПрослеживаемыеТоварыИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Организация КАК Организация,
	|	ДвиженияПрослеживаемыеТоварыИзменение.РНПТ КАК РНПТ,
	|	ДвиженияПрослеживаемыеТоварыИзменение.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура КАК Номенклатура,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Характеристика КАК Характеристика,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Партия КАК Партия,
	|	СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПередЗаписью) КАК КоличествоПередЗаписью,
	|	СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоИзменение) КАК КоличествоИзменение,
	|	СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПриЗаписи) КАК КоличествоПриЗаписи,
	|	СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПрослеживаемостиПередЗаписью) КАК КоличествоПрослеживаемостиПередЗаписью,
	|	СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПрослеживаемостиИзменение) КАК КоличествоПрослеживаемостиИзменение,
	|	СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПрослеживаемостиПриЗаписи) КАК КоличествоПрослеживаемостиПриЗаписи,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Комиссионер КАК Комиссионер
	|ПОМЕСТИТЬ ДвиженияПрослеживаемыеТоварыИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.Организация КАК Организация,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.РНПТ КАК РНПТ,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.Номенклатура КАК Номенклатура,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.Характеристика КАК Характеристика,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.Партия КАК Партия,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.Комиссионер КАК Комиссионер,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение,
	|		0 КАК КоличествоПриЗаписи,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.КоличествоПрослеживаемостиПередЗаписью КАК КоличествоПрослеживаемостиПередЗаписью,
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью.КоличествоПрослеживаемостиПередЗаписью КАК КоличествоПрослеживаемостиИзменение,
	|		0 КАК КоличествоПрослеживаемостиПриЗаписи
	|	ИЗ
	|		ДвиженияПрослеживаемыеТоварыПередЗаписью КАК ДвиженияПрослеживаемыеТоварыПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.НомерСтроки,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Организация,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.РНПТ,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.СтранаПроисхождения,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Номенклатура,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Характеристика,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Партия,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Комиссионер,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияПрослеживаемыеТоварыПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияПрослеживаемыеТоварыПриЗаписи.Количество
	|			ИНАЧЕ ДвиженияПрослеживаемыеТоварыПриЗаписи.Количество
	|		КОНЕЦ,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Количество,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияПрослеживаемыеТоварыПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияПрослеживаемыеТоварыПриЗаписи.КоличествоПрослеживаемости
	|			ИНАЧЕ ДвиженияПрослеживаемыеТоварыПриЗаписи.КоличествоПрослеживаемости
	|		КОНЕЦ,
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.КоличествоПрослеживаемости
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ДвиженияПрослеживаемыеТоварыПриЗаписи
	|	ГДЕ
	|		ДвиженияПрослеживаемыеТоварыПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияПрослеживаемыеТоварыИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияПрослеживаемыеТоварыИзменение.Организация,
	|	ДвиженияПрослеживаемыеТоварыИзменение.РНПТ,
	|	ДвиженияПрослеживаемыеТоварыИзменение.СтранаПроисхождения,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Характеристика,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Партия,
	|	ДвиженияПрослеживаемыеТоварыИзменение.Комиссионер
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоИзменение) <> 0
	|		ИЛИ СУММА(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПрослеживаемостиИзменение) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РНПТ,
	|	СтранаПроисхождения,
	|	Номенклатура,
	|	Характеристика,
	|	Партия");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияПрослеживаемыеТоварыИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияПрослеживаемыеТоварыИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияПрослеживаемыеТоварыЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияПрослеживаемыеТоварыПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Если ТипЗнч(Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ПриходнаяНакладная") И НЕ Отказ Тогда
		ПрослеживаемостьУНФ.УстановитьСвойстваРНПТ(ЭтотОбъект.Выгрузить(), Неопределено);
	КонецЕсли; 
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли
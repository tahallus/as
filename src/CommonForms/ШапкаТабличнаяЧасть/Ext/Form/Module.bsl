
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначенияСвойствПриОткрытии = Новый Структура;
	
	ВидимыеЭлементы = Новый Массив;
	
	Для Каждого ТекИмяСвойства Из ИменаВозможныхСвойств() Цикл
		
		Если Не Параметры.Свойство(ТекИмяСвойства) Тогда
			Элементы[ТекИмяСвойства].Видимость = Ложь;
			Продолжить;
		КонецЕсли;
		
		ЭтотОбъект[ТекИмяСвойства] = Параметры[ТекИмяСвойства];
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ТекИмяСвойства]) Тогда
			ЭтотОбъект[ТекИмяСвойства] = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		КонецЕсли; 
		ЗначенияСвойствПриОткрытии.Вставить(ТекИмяСвойства, Параметры[ТекИмяСвойства]);
		Элементы[ТекИмяСвойства].Видимость = Истина;
		ВидимыеЭлементы.Добавить(ТекИмяСвойства);
		
	КонецЦикла;
	
	Если Параметры.Свойство("Заголовки") Тогда
		ОбновитьЗаголовкиСвойств(Параметры.Заголовки);
	КонецЕсли; 
	
	Если Параметры.Свойство("Доступность") Тогда
		НастройкиДоступности = Параметры.Доступность;
	Иначе
		НастройкиДоступности = Новый Структура;
	КонецЕсли; 
	НастроитьДоступностьЭлементов(НастройкиДоступности);
	
	КлючСохраненияПоложенияОкна = СтрСоединить(ВидимыеЭлементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		НастроитьДоступностьЭлементов(НастройкиДоступности);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(ПараметрЗакрытия());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьВыбор(Команда)
	
	ЗаписатьНовыеНастройки();
	Закрыть(ПараметрЗакрытия());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура записывает настройки пользователя в регистр.
//
&НаСервере
Процедура УстановитьНастройку(ИмяНастройки)
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение	  = Пользователь;
	НаборЗаписей.Отбор.Настройка.Использование	  = Истина;
	НаборЗаписей.Отбор.Настройка.Значение		  = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройки];
	
	Запись = НаборЗаписей.Добавить();
	
	Запись.Пользователь = Пользователь;
	Запись.Настройка    = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройки];
	Запись.Значение     = ПланыВидовХарактеристик.НастройкиПользователей[ИмяНастройки].ТипЗначения.ПривестиЗначение(ЗначениеНастройки(ИмяНастройки, ЭтотОбъект));
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеНастройки(ИмяНастройки, Форма)
	
	Если Форма.Элементы[ИмяНастройки].Доступность Тогда
		Возврат Форма[ИмяНастройки];
	КонецЕсли;
	
	Возврат Форма.ЗначенияСвойствПриОткрытии[ИмяНастройки];
	
КонецФункции

// Процедура записывает настройки пользователя в регистр.
//
&НаСервере
Процедура ЗаписатьНовыеНастройки()
	
	Для Каждого ТекЭлемент Из ЗначенияСвойствПриОткрытии Цикл
		УстановитьНастройку(ТекЭлемент.Ключ);
	КонецЦикла;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Функция БылиВнесеныИзменения()
	
	Для Каждого ТекЭлемент Из ЗначенияСвойствПриОткрытии Цикл
		Если ЭтотОбъект[ТекЭлемент.Ключ] <> ТекЭлемент.Значение Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ПараметрЗакрытия()
	
	Результат = Новый Структура;
	
	Результат.Вставить("БылиВнесеныИзменения", БылиВнесеныИзменения());
	
	Для Каждого ТекЭлемент Из ЗначенияСвойствПриОткрытии Цикл
		Результат.Вставить(ТекЭлемент.Ключ, ЗначениеНастройки(ТекЭлемент.Ключ, ЭтотОбъект));
	КонецЦикла;
	
	Возврат Результат
	
КонецФункции

&НаСервере
Функция ИменаВозможныхСвойств()
	
	Результат = Новый Массив;
	Результат.Добавить("ПоложениеВидаРаботВЗаказНаряде");
	Результат.Добавить("ПоложениеВидаРаботВЗаданииНаРаботу");
	Результат.Добавить("ПоложениеДатыОтгрузкиВЗаказеПокупателя");
	Результат.Добавить("ПоложениеДатыПоступленияВЗаказеПоставщику");
	Результат.Добавить("ПоложениеЗаказаНаПроизводствоВДокументахОтгрузки");
	Результат.Добавить("ПоложениеЗаказаПокупателяВДокументахПоступления");
	Результат.Добавить("ПоложениеЗаказаПокупателяВДокументахОтгрузки");
	Результат.Добавить("ПоложениеЗаказаПокупателяВПеремещенииЗапасов");
	Результат.Добавить("ПоложениеЗаказаПокупателяВДокументахПроизводства");
	Результат.Добавить("ПоложениеЗаказаПоставщикуВДокументахПоступления");
	Результат.Добавить("ИспользоватьМатериалыЗаказчикаВЗаказНаряде");
	Результат.Добавить("ИспользоватьТоварыВЗаказНаряде");
	Результат.Добавить("ИспользоватьМатериалыВЗаказНаряде");
	Результат.Добавить("ИспользоватьЗарплатаИсполнителейВЗаказНаряде");
	Результат.Добавить("ПоложениеИсполнитель");
	Результат.Добавить("ПоложениеОтветственный");
	Результат.Добавить("ПоложениеСкладаВДокументахПоступления");
	Результат.Добавить("ПоложениеСкладаВДокументахОтгрузки");
	Результат.Добавить("ПоложениеСкладаВДокументахПроизводства");
	Результат.Добавить("ПоложениеИсполнителяВСдельномНаряде");
	Результат.Добавить("ПоложениеСтруктурнойЕдиницыВСдельномНаряде");
	Результат.Добавить("ПоложениеЭквайринговогоТерминалаВБанковскихДокументах");
	Результат.Добавить("ПоложениеНастроекНалоговогоУчетаВБанковскихДокументах");
	Результат.Добавить("ПроверятьРасхожденияСВходящимДокументом");
	Результат.Добавить("ПроверятьРасхожденияСЗаказом");
	Результат.Добавить("ПоложениеРасходовВОтчетеПереработчика");
	Результат.Добавить("ПоложениеПроекта");
	Результат.Добавить("ПоложениеСтатьи");
	Результат.Добавить("ПоложениеПодразделенияВДенежныхДокументах");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьЗаголовкиСвойств(Заголовки)
	
	Для Каждого ТекЭлемент Из ЗначенияСвойствПриОткрытии Цикл
		Если Заголовки.Свойство(ТекЭлемент.Ключ) Тогда
			Элементы[ТекЭлемент.Ключ].Заголовок = Заголовки[ТекЭлемент.Ключ];
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДоступностьЭлементов(НастройкиДоступности)
	
	Для Каждого ТекЭлемент Из ЗначенияСвойствПриОткрытии Цикл
		Элементы[ТекЭлемент.Ключ].Доступность = ДоступностьСвойства(ТекЭлемент.Ключ);
		Если Элементы[ТекЭлемент.Ключ].Доступность И НастройкиДоступности.Свойство(ТекЭлемент.Ключ) Тогда
			// Доступность регулируется параметрами открытия формы
			Элементы[ТекЭлемент.Ключ].Доступность = НастройкиДоступности[ТекЭлемент.Ключ];
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДоступностьСвойства(Знач ИмяСвойства)
	
	Если ИмяСвойства = "ПоложениеСкладаВДокументахПоступления" Тогда
		Возврат ПолучитьФункциональнуюОпцию("РазрешитьСкладыВТабличныхЧастях");
	КонецЕсли;
	
	Если ИмяСвойства = "ПоложениеСкладаВДокументахОтгрузки" Тогда
		Возврат ПолучитьФункциональнуюОпцию("РазрешитьСкладыВТабличныхЧастях");
	КонецЕсли;
	
	Если ИмяСвойства = "ПоложениеСкладаВДокументахПроизводства" Тогда
		Возврат ПолучитьФункциональнуюОпцию("РазрешитьСкладыВТабличныхЧастях");
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

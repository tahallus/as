#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Заголовок = Параметры.ЗаголовокФормыВыбора;
	ОписаниеЗаполняемыхЗначений = Новый Структура;
	ОписаниеЗаполняемыхЗначений.Вставить("ТаблицаЗаполнения", Параметры.ТаблицаЗаполнения);
	ОписаниеЗаполняемыхЗначений.Вставить("КолонкаЗаполнения", Параметры.КолонкаЗаполнения);

	ЗаполнитьСписокДоступныхЗначений(Параметры);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыВыбираемыеЗначения

&НаКлиенте
Процедура СписокВыбираемыхЗначенийФлажокПриИзменении(Элемент)
	ИзменитьФлажокВыделеннойСтроки(ВыбираемыеЗначения, Элемент.Родитель.ТекущаяСтрока,
		Элемент.Родитель.ТекущиеДанные.Флажок);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьОтмеченные(Команда)

	ПараметрыЗакрытияФормы = Новый Структура;
	ПараметрыЗакрытияФормы.Вставить("АдресТаблицыВыбранныхЗначений", АдресТаблицыВыбранныхЗначений());
	ПараметрыЗакрытияФормы.Вставить("ТаблицаЗаполнения", ОписаниеЗаполняемыхЗначений.ТаблицаЗаполнения);
	ПараметрыЗакрытияФормы.Вставить("КолонкаЗаполнения", ОписаниеЗаполняемыхЗначений.КолонкаЗаполнения);

	ОповеститьОВыборе(ПараметрыЗакрытияФормы);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ЗаполнитьСписокДоступныхЗначений(Параметры)

	Запрос = Новый Запрос;

	ТаблицаВыбранныхЗначений = ПолучитьИзВременногоХранилища(Параметры.АдресВыбранныхЗначений);
	ТаблицаВыбранныхЗначений.Колонки[Параметры.КолонкаЗаполнения].Имя = "ЗначениеЭлемента";
	Запрос.УстановитьПараметр("ТаблицаВыбранных", ТаблицаВыбранныхЗначений);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаВыбранных.ЗначениеЭлемента КАК ЗначениеЭлемента,
	|	1 КАК Флажок
	|ПОМЕСТИТЬ ВыбранныеЗначения
	|ИЗ
	|	&ТаблицаВыбранных КАК ТаблицаВыбранных
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗначениеЭлемента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВыбора.Наименование КАК Представление,
	|	ТаблицаВыбора.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ВыбранныеЗначения.Флажок, 0) КАК Флажок
	|ИЗ
	|	&ТаблицаВыбора КАК ТаблицаВыбора
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеЗначения КАК ВыбранныеЗначения
	|		ПО ТаблицаВыбора.Ссылка = ВыбранныеЗначения.ЗначениеЭлемента
	|ГДЕ
	|	ТаблицаВыбора.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаВыбора.Наименование";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТаблицаВыбора", Параметры.ТаблицаВыбора);

	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);

	Если Параметры.УпорядочитьПоВозрастаниюИерархии Тогда
		СхемаЗапроса.ПакетЗапросов[1].Порядок[0].Направление = НаправлениеПорядкаСхемыЗапроса.ПоВозрастаниюИерархии;
	КонецЕсли;

	Для Каждого Фильтр Из Параметры.Фильтры Цикл
		Условие = СтрШаблон("ТаблицаВыбора.%1 В (&%2)", Фильтр.ИмяПоля, Фильтр.ИмяПараметра);
		Отбор = СхемаЗапроса.ПакетЗапросов[1].Операторы[0].Отбор;
		Отбор.Добавить(Условие);
		Запрос.УстановитьПараметр(Фильтр.ИмяПараметра, Фильтр.ЗначениеПараметра);
	КонецЦикла;

	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();

	РезультатЗапроса = Запрос.Выполнить();
	ДеревоЗначений = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);

	КоллекцияЭлементовДерева = ВыбираемыеЗначения.ПолучитьЭлементы();
	КоллекцияЭлементовДерева.Очистить();

	ОбщегоНазначения.ЗаполнитьКоллекциюЭлементовДереваДанныхФормы(КоллекцияЭлементовДерева, ДеревоЗначений);

	РассчитатьСтатусВсехФлажковДереваЗначений(ВыбираемыеЗначения);

КонецПроцедуры

&НаСервере
Процедура РассчитатьСтатусВсехФлажковДереваЗначений(ДеревоВыбранныхЗначений)

	Для Каждого СтрокаДерева Из ДеревоВыбранныхЗначений.ПолучитьЭлементы() Цикл

		Если СтрокаДерева.Флажок = 1 Тогда
			ИзменитьФлажокВыделеннойСтроки(ВыбираемыеЗначения, СтрокаДерева.ПолучитьИдентификатор(), 1);
		КонецЕсли;

		РассчитатьСтатусВсехФлажковДереваЗначений(СтрокаДерева);

	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьФлажокВыделеннойСтроки(ДеревоВыбранныхЗначений, ВыделеннаяСтрока, Флажок)

	ЭлементДерева = ДеревоВыбранныхЗначений.НайтиПоИдентификатору(ВыделеннаяСтрока);

	ИзменитьФлажокЭлементаДерева(ЭлементДерева, Флажок % 2);

	Родитель = ЭлементДерева.ПолучитьРодителя();

	Пока Родитель <> Неопределено Цикл

		РассчитатьФлажокЭлементаДерева(Родитель);
		Родитель = Родитель.ПолучитьРодителя();

	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьФлажокЭлементаДерева(ЭлементДерева, Флажок)
	
	// Если у элемента есть подчиненные элементы, то изменение флажка распространяется на подчиненные элементы
	ЭлементДерева.Флажок = Флажок;
	ЭлементыДерева = ЭлементДерева.ПолучитьЭлементы();

	Для Каждого СтрокаДерева Из ЭлементыДерева Цикл
		ИзменитьФлажокЭлементаДерева(СтрокаДерева, ?(Флажок > 0, 1, 0));
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьФлажокЭлементаДерева(ЭлементДерева)

	Если ЭлементДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Флажок = 0;
	ПредыдущееСостояние = -1;

	Для Каждого СтрокаДерева Из ЭлементДерева.ПолучитьЭлементы() Цикл

		Флажок = СтрокаДерева.Флажок;

		Если Флажок = 2 Или (Флажок + ПредыдущееСостояние) = 1 Тогда
			ЭлементДерева.Флажок = 2;
			// Флажок подчиненного затемнен (2) или флажок подчиненного отличается от флажка предыдущего подчиненного
			Возврат;
		КонецЕсли;

		ПредыдущееСостояние = Флажок;

	КонецЦикла;

	ЭлементДерева.Флажок = Флажок; // Флажок последнего подчиненного определяет общее состояние элемента

КонецПроцедуры

&НаСервере
Функция АдресТаблицыВыбранныхЗначений()

	ТаблицаВыбранныхЗначений = Новый ТаблицаЗначений;
	ТаблицаВыбранныхЗначений.Колонки.Добавить("Ссылка");

	ВыгрузитьДеревоЗначенийВТаблицуЗначений(ВыбираемыеЗначения, ТаблицаВыбранныхЗначений);

	Результат = ПоместитьВоВременноеХранилище(ТаблицаВыбранныхЗначений, УникальныйИдентификатор);

	Возврат Результат;

КонецФункции

&НаСервере
Процедура ВыгрузитьДеревоЗначенийВТаблицуЗначений(ДеревоВыбранныхЗначений, ТаблицаВыбранныхЗначений,
	ФлажокВладельца = Неопределено)

	Для Каждого СтрокаДерева Из ДеревоВыбранныхЗначений.ПолучитьЭлементы() Цикл

		Если СтрокаДерева.Флажок = 1 Тогда
			Если ФлажокВладельца = Неопределено Или ФлажокВладельца <> 1 Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаВыбранныхЗначений.Добавить(), СтрокаДерева);
			КонецЕсли;
		КонецЕсли;

		ВыгрузитьДеревоЗначенийВТаблицуЗначений(СтрокаДерева, ТаблицаВыбранныхЗначений, СтрокаДерева.Флажок);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
#Область СлужебныйПрограммныйИнтерфейс

// Получает идентификатор Google Analitycs.
//
Функция ПолучитьИдентификаторGA() Экспорт
	
	Возврат "UA-58830638-1";
	
КонецФункции // ПолучитьИдентификаторПриложения()

// Получает версию протокола Google Analitycs.
//
Функция ПолучитьВерсиюПротоколаGA() Экспорт
	
	Возврат "1";
	
КонецФункции // ПолучитьИдентификаторПриложения()

// Получает идентификатор приложения.
//
Функция ПолучитьИдентификаторПриложения() Экспорт
	
	Возврат "574fb638-d559-11e9-6890-0050569f4ccd";
	
КонецФункции // ПолучитьИдентификаторПриложения()

// Получает идентификатор приложения.
//
Функция ПолучитьИдентификаторПриложенияURL() Экспорт
	
	//Если ОбщегоНазначенияВызовСервера.ЭтоШеф() Тогда
	//	Возврат "com.e1c.Chief";
	//Иначе
	//	Возврат "com.e1c.MobileSmallBusiness";
	//КонецЕсли;
	
КонецФункции // ПолучитьИдентификаторПриложения()

// Получает идентификатор экземпляра.
//
Функция ПолучитьИдентификаторЭкземпляра() Экспорт
	
	УИД = ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ИдентификаторЭкземпляраМП");
	
	Если НЕ ЗначениеЗаполнено(УИД)
		ИЛИ Строка(УИД) = "00000000-0000-0000-0000-000000000000" Тогда
		УИД = Новый УникальныйИдентификатор();
		ОбщегоНазначенияМПВызовСервера.УстановитьЗначениеКонстанты("ИдентификаторЭкземпляраМП", УИД);
	КонецЕсли;
	
	Возврат Строка(УИД);
	
КонецФункции // ПолучитьИдентификаторЭкземпляра()

// Инициализация сбора статистики.
//
Процедура Инициализация() Экспорт
	
	УИД = ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ИдентификаторЭкземпляраМП");
	
	Если НЕ ЗначениеЗаполнено(УИД)
		ИЛИ Строка(УИД) = "00000000-0000-0000-0000-000000000000" Тогда
		УИД = Новый УникальныйИдентификатор();
		ОбщегоНазначенияМПВызовСервера.УстановитьЗначениеКонстанты("ИдентификаторЭкземпляраМП", УИД);
	КонецЕсли;
	
КонецПроцедуры // Инициализация()

#КонецОбласти

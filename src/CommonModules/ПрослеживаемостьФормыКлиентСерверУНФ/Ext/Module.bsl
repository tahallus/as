
#Область ПрограммныйИнтерфейс

// Процедура - Заполнить представление РНПТ в строке табличной части
//
// Параметры:
//  Форма				 - 	УправляемаяФорма - Форма документа
//  СтрокаТабличнойЧасти - 	ДанныеФормыСтруктура - Данные строки табличной части
//
Процедура ЗаполнитьПредставлениеРНПТ(
	Форма,
	СтрокаТабличнойЧасти,
	ПрослеживаемаяТЧ = Истина,
	ПоставщикРезидентТаможенногоСоюза = Ложь) Экспорт
	
	Если СтрокаТабличнойЧасти.ПрослеживаемыйТовар И ПрослеживаемаяТЧ И Не ПоставщикРезидентТаможенногоСоюза Тогда
		Объект = Форма.Объект;
		СтрокаТабличнойЧасти.ПодсказкаРНПТ = "РНПТ:";
		СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		Если КоличествоРНПТ = 0 Тогда
			СтрокаТабличнойЧасти.РНПТ = "";
		ИначеЕсли КоличествоРНПТ = 1 Тогда
			СтрокаТабличнойЧасти.РНПТ = СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ));
		Иначе
			СтрокаТабличнойЧасти.РНПТ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и еще %2'"),
			СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ)),
			КоличествоРНПТ - 1);
		КонецЕсли;
	Иначе
		Если Форма.КэшЗначений.ВестиУчетПрослеживаемыхТоваров
			И ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтранаПроисхождения) 
			И СтрокаТабличнойЧасти.СтранаПроисхождения <> ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
			СтрокаТабличнойЧасти.ПодсказкаРНПТ = "ГТД:";
		Иначе
			СтрокаТабличнойЧасти.ПодсказкаРНПТ = "";
		КонецЕсли;
		СтрокаТабличнойЧасти.РНПТ = Строка(СтрокаТабличнойЧасти.НомерГТД);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Настроить видимость колонок РНПТ на форме документа
//
// Параметры:
//  Форма					 - 	УправляемаяФорма - Форма документа
//  ИмяГруппыРНПТ			 - 	Строка - Имя группы колонок с данными РНПТ
//  ИмяПодсказкиРНПТ		 - 	Строка - Имя элемента подсказки РНПТ
//  ПрослеживаемаяОперация	 - 	Булево - Признак прослеживаемости текущей операции документа
//
Процедура НастроитьВидимостьКолонокРНПТ(
	Форма,
	ИмяГруппыРНПТ = "ЗапасыГруппаРНПТ",
	ИмяПодсказкиРНПТ = "ЗапасыПодсказкаРНПТ",
	ПрослеживаемаяОперация = Истина,
	ПоставщикРезидентТаможенногоСоюза = Ложь) Экспорт
	
	Элементы = Форма.Элементы;
	КэшЗначений = Форма.КэшЗначений;
	ИспользоватьПрослеживаемость = (КэшЗначений.ВестиУчетПрослеживаемыхТоваров И ПрослеживаемаяОперация);
	Если ИспользоватьПрослеживаемость И НЕ ПоставщикРезидентТаможенногоСоюза Тогда
		ТекстЗаголовкаРНПТ = НСтр("ru = 'Номер ГТД или РНПТ'");
	Иначе
		ТекстЗаголовкаРНПТ = НСтр("ru = 'Номер ГТД'");
	КонецЕсли;
	
	УчетГТД = Ложь;
	КэшЗначений.Свойство("УчетГТД", УчетГТД);
	
	Элементы[ИмяГруппыРНПТ].Заголовок = ТекстЗаголовкаРНПТ;
	Элементы[ИмяПодсказкиРНПТ].Видимость = ИспользоватьПрослеживаемость И Не ПоставщикРезидентТаможенногоСоюза И УчетГТД;
	Элементы[ИмяГруппыРНПТ].Видимость = ИспользоватьПрослеживаемость И УчетГТД;
	
КонецПроцедуры

&НаСервере
// Процедура - Настроить условное оформление колонок РНПТ и НомерГТД на форме документа
//
// Параметры:
//  Форма					 - 	УправляемаяФорма - Форма документа
//  ИмяТЧ					 - 	Строка - Имя табличной части, для которой настраивается условное оформление
//  ПрослеживаемаяОперация	 - 	Булево - Признак прослеживаемости текущей операции документа
//
Процедура НастроитьУсловноеОформлениеКолонокРНПТ_и_ГТД(Форма, ИмяТЧ = "Запасы", ПрослеживаемаяОперация = Истина) Экспорт
	
	Элементы = Форма.Элементы;
	КэшЗначений = Форма.КэшЗначений;
	ИспользоватьПрослеживаемость = (КэшЗначений.ВестиУчетПрослеживаемыхТоваров И ПрослеживаемаяОперация);
	
	Если ИспользоватьПрослеживаемость Тогда
		// ЗапасыРНПТ
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыРНПТ");
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект."+ИмяТЧ+".ПрослеживаемыйТовар", Ложь, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
		
		// ЗапасыНомерГТД
		НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыНомерГТД");
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Объект."+ИмяТЧ+".ПрослеживаемыйТовар", Истина, ВидСравненияКомпоновкиДанных.Равно);
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Видимость", Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - добавить неизменяемые реквизиты для режима ГТД
//
// Параметры:
//  НеизменяемыеРеквизиты	 - 	Структура - незменяемые реквизита, видимость которых не нужно менять при переключении режимов.
//
&НаКлиенте
Процедура ДобавитьНеизменяемыеРеквизитыДляРежимаГТД(НеизменяемыеРеквизиты, ИмяТЧ = "Запасы") Экспорт
	
	НеизменяемыеРеквизиты.Добавить(ИмяТЧ + "ГруппаРНПТ");
	НеизменяемыеРеквизиты.Добавить(ИмяТЧ + "ПодсказкаРНПТ");
	НеизменяемыеРеквизиты.Добавить(ИмяТЧ + "РНПТ");
	
КонецПроцедуры

// Процедура - удалить связанные записи выделенных строк
//
// Параметры:
//  Форма					 - 	УправляемаяФорма - Форма документа
//
&НаСервере
Процедура УдалитьСвязанныеЗаписиВыделенныхСтрок(пФорма) Экспорт

	ТабличнаяЧасть = пФорма.Объект.Запасы;
	Для каждого СтрокаТаблицы Из пФорма.Объект.Запасы Цикл
		Если НЕ СтрокаТаблицы.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		УдалитьСвязанныеЗаписиНаСервере(пФорма, СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура - удалить связанные записи
//
// Параметры:
//  Форма		 - 	УправляемаяФорма - Форма документа
//  СтрокаЗапасы - 	ДанныеФормыСтруктура - Данные строки табличной части
//
&НаСервере
Процедура УдалитьСвязанныеЗаписиНаСервере(пФорма, СтрокаЗапасы) Экспорт
	
	СтруктураОтбора = Новый Структура("ИдентификаторСтроки", СтрокаЗапасы.ИдентификаторСтроки);
	МассивСтрокСведенияПрослеживаемости = пФорма.Объект.СведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
	Для каждого СтрокаТЧ Из МассивСтрокСведенияПрослеживаемости Цикл
		пФорма.Объект.СведенияПрослеживаемости.Удалить(СтрокаТЧ);
	КонецЦикла;
	
	ЗаполнитьПредставлениеРНПТ(пФорма, СтрокаЗапасы);
	
КонецПроцедуры

#КонецОбласти
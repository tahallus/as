#Область ПоискИСохранениеДанныхИзДругойВерсии

Процедура СохранитьНовыйОбъект(ОбъектXDTOВыгрузки, ФабрикаВыгрузки, ВерсияПакета, КодУзла, СтруктураПредопределенныхДанных, ИмяТипа) Экспорт
	
	ОбъектМетаданных = Лев(СокрЛП(ИмяТипа),Найти(СокрЛП(ИмяТипа),".")-1);
	
	Константа ="ConstantValueManager";
	Справочник = "CatalogObject";
	РегистрСведений = "InformationRegisterRecordSet";
	Документ = "DocumentObject";
	РегистрНакоплений = "AccumulationRegisterRecordSet";
	
	УникальныйИдентификаторНовогоОбъекта = Неопределено;
	Если ОбъектМетаданных = Справочник ИЛИ ОбъектМетаданных = Документ Тогда
		СформированнаяСтрока = ОбъектXDTOВыгрузки.Ref;
		УникальныйИдентификаторНовогоОбъекта = Новый УникальныйИдентификатор(ОбъектXDTOВыгрузки.Ref);
	ИначеЕсли ОбъектМетаданных = РегистрСведений ИЛИ ОбъектМетаданных = РегистрНакоплений Тогда
		СформированнаяСтрока = ИмяТипа;
		Для каждого FilterItemВыгрузки Из ОбъектXDTOВыгрузки.Filter.FilterItem Цикл
			МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипЗнч(FilterItemВыгрузки.Value));
			Если МетаданныеОбъекта <> Неопределено Тогда 
				СформированнаяСтрока = СформированнаяСтрока + "_" + FilterItemВыгрузки.Value.УникальныйИдентификатор();
			Иначе
				СформированнаяСтрока = СформированнаяСтрока + "_" + FilterItemВыгрузки.Value; 
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ОбъектМетаданных = Константа Тогда
		СформированнаяСтрока = ИмяТипа;
	КонецЕсли;
	
	СформированныйХеш = MD5ХешСтрока(СформированнаяСтрока);
	Сообщение = ПолучитьXMLОбъекта(ВерсияПакета, ОбъектXDTOВыгрузки);
	ПредопределенныеДанные = Новый ХранилищеЗначения(СтруктураПредопределенныхДанных, Новый СжатиеДанных(9));
	
	РегистрыСведений.СообщенияИзДругойВерсииМП.ДобавитьСообщениеСУникальнымИдентификаторомНовогоОбъекта(СформированныйХеш, ВерсияПакета, Сообщение,, ПредопределенныеДанные, КодУзла, УникальныйИдентификаторНовогоОбъекта);
	
КонецПроцедуры

Функция НайтиДанныеИзДругойВерсии(ОбъектXDTOВыгрузки, ОбъектXDTOКонфигурации, ВерсияПакета, СтруктураПредопределенныхДанных, Ссылка, КодУзла) Экспорт
	
	МассивСНовымиРеквизитами = ПоискНовыхРеквизитов(ОбъектXDTOКонфигурации, ОбъектXDTOВыгрузки);
	
	СтруктураМассивов = ПоискНовыхРеквизитовВТЧ(ОбъектXDTOКонфигурации, ОбъектXDTOВыгрузки);
	
	Возврат Новый Структура("МассивСНовымиРеквизитами, СтруктураМассивов", МассивСНовымиРеквизитами, СтруктураМассивов)
	
КонецФункции

Функция НайтиДанныеИзДругойВерсииДляРегистра(Регистр, ОбъектXDTOВыгрузки, ОбъектXDTOКонфигурации, ВерсияПакета, ОбъектМетаданных, ФабрикаВыгрузки, ЧтениеXML, ТипОбъекта, КодУзла, СтруктураПредопределенныхДанных) Экспорт
	
	Результат = Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.НичегоНеНайдено;
	
	FilterТип = ТипОбъекта.Свойства.Получить("Filter").Тип;
	FilterОбъектXDTO = ФабрикаXDTO.Создать(FilterТип);
	
	ОтборПоИзмерениям = Истина;
	
	МассивИзмеренийВыгрузки = Новый Массив;
	МассивСНовымиИзмерениями = Новый Массив;
	Для каждого FilterItemВыгрузки Из ОбъектXDTOВыгрузки.Filter.FilterItem Цикл
		ИзмерениеРегистра = Метаданные[Регистр][ОбъектМетаданных.Имя].Измерения.Найти(FilterItemВыгрузки.Name);
		МассивИзмеренийВыгрузки.Добавить(FilterItemВыгрузки.Name);
		Если ИзмерениеРегистра = Неопределено И FilterItemВыгрузки.Name <> "Period" И FilterItemВыгрузки.Name <> "Recorder" И Регистр = "РегистрыСведений" Тогда
			Результат = Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.НайденоНовоеИзмерение;
			МассивСНовымиИзмерениями.Добавить(FilterItemВыгрузки.Name);
		ИначеЕсли ИзмерениеРегистра = Неопределено И FilterItemВыгрузки.Name <> "Recorder" И Регистр = "РегистрыНакопления" Тогда
			Результат = Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.НайденоНовоеИзмерение;
			МассивСНовымиИзмерениями.Добавить(FilterItemВыгрузки.Name);
		ИначеЕсли FilterItemВыгрузки.Name = "Recorder" Тогда
			ОтборПоИзмерениям = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ОтборПоИзмерениям Тогда
		ИзмеренияКонфигурации = Метаданные[Регистр][ОбъектМетаданных.Имя].Измерения;
		Для каждого Измерение Из ИзмеренияКонфигурации Цикл
			ИзмерениеВыгрузки = МассивИзмеренийВыгрузки.Найти(Измерение.Имя);
			Если ИзмерениеВыгрузки = Неопределено Тогда
				Результат = Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.ВВыгрузкеНеХватаетИзмерения;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	МассивСНовымиРесурсамиИРеквизитами = Новый Массив;
	Для каждого ЗаписьВыгрузки Из ОбъектXDTOВыгрузки.Record Цикл
		Для каждого Свойство Из ЗаписьВыгрузки.Свойства() Цикл
			Если Свойство.Имя = "Period" ИЛИ Свойство.Имя = "Active" ИЛИ Свойство.Имя = "RecordType" ИЛИ Свойство.Имя = "Recorder" Тогда
				Продолжить;
			КонецЕсли;
			
			ИзмерениеРегистра = МассивИзмеренийВыгрузки.Найти(Свойство.Имя);
			Если ИзмерениеРегистра = Неопределено Тогда
				ИзмерениеРегистра = Метаданные[Регистр][ОбъектМетаданных.Имя].Измерения.Найти(Свойство.Имя);
			КонецЕсли;
			
			РесурсРегистра = Метаданные[Регистр][ОбъектМетаданных.Имя].Ресурсы.Найти(Свойство.Имя);
			РеквизитРегистра = Метаданные[Регистр][ОбъектМетаданных.Имя].Реквизиты.Найти(Свойство.Имя);
			
			Если РесурсРегистра = Неопределено И РеквизитРегистра = Неопределено И ИзмерениеРегистра = Неопределено Тогда
				Если Результат <> Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.ВВыгрузкеНеХватаетИзмерения Тогда
					Результат = Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.НайденНовыйРесурсИлиРеквизит;
				КонецЕсли;
				МассивСНовымиРесурсамиИРеквизитами.Добавить(Свойство.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Результат <> Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.НичегоНеНайдено Тогда
		Если Результат = Перечисления.СтатусыПоискаНовыхДанныхВРегистрахМП.ВВыгрузкеНеХватаетИзмерения Тогда
			ПолнаяЗагрузка = Истина;
		Иначе
			ПолнаяЗагрузка = Ложь;
		КонецЕсли;
		
		СформированнаяСтрока = СформироватьСтрокуДляХеша(FilterItemВыгрузки, ОбъектXDTOВыгрузки, Регистр, ОбъектМетаданных);
		
		СформированныйХеш = MD5ХешСтрока(СформированнаяСтрока);
		
		Сообщение = ПолучитьXMLОбъекта(ВерсияПакета, ОбъектXDTOВыгрузки);
		
		СтруктураСНовымиДанными = Новый Структура;
		СтруктураСНовымиДанными.Вставить("МассивСНовымиИзмерениями", МассивСНовымиИзмерениями);
		СтруктураСНовымиДанными.Вставить("МассивСНовымиРесурсамиИРеквизитами", МассивСНовымиРесурсамиИРеквизитами);
		СтруктураСНовымиДанными.Вставить("ПолнаяЗагрузка", ПолнаяЗагрузка);
		
		ПредопределенныеДанные = Новый ХранилищеЗначения(СтруктураПредопределенныхДанных, Новый СжатиеДанных(9));
		НовыеДанные = Новый ХранилищеЗначения(СтруктураСНовымиДанными, Новый СжатиеДанных(9));
		
		РегистрыСведений.СообщенияИзДругойВерсииМП.ДобавитьСообщениеСХешем(СформированныйХеш, ВерсияПакета, Сообщение, НовыеДанные, ПредопределенныеДанные, КодУзла);
	КонецЕсли;
	
	СтруктураСНовымиДанными = Новый Структура("Результат, МассивСНовымиИзмерениями, МассивСНовымиРесурсамиИРеквизитами", Результат, МассивСНовымиИзмерениями, МассивСНовымиРесурсамиИРеквизитами);
	
	Возврат СтруктураСНовымиДанными
	
КонецФункции

Функция ПолучитьXMLОбъекта(ВерсияПакета,ОбъектXDTOВыгрузки)
	
	ФабрикаВыгрузки = СинхронизацияЗагрузкаМП.ФабрикаВыгрузки(ВерсияПакета);
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ФабрикаВыгрузки.ЗаписатьXML(ЗаписьXML,ОбъектXDTOВыгрузки);
	ЗаписанныйОбъект = ЗаписьXML.Закрыть();
	
	Сообщение = Новый ХранилищеЗначения(ЗаписанныйОбъект, Новый СжатиеДанных(9));
	
	Возврат Сообщение
	
КонецФункции 

Функция MD5ХешСтрока(Строка)
	Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
	
	Хеш.Добавить(Строка);
	
	Возврат Хеш.ХешСумма; 
КонецФункции

Функция СформироватьСтрокуДляХеша(FilterItemВыгрузки, ОбъектXDTOВыгрузки, Регистр, ОбъектМетаданных)
	
	Хеш = Регистр + "_" + ОбъектМетаданных.Имя;
	
	Если Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных) Тогда
		
		РежимЗаписи = Метаданные.РегистрыСведений[ОбъектМетаданных.Имя].РежимЗаписи;
		
		Если РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда
			ХешИзмерений = "";
			Для каждого FilterItemВыгрузки Из ОбъектXDTOВыгрузки.Filter.FilterItem Цикл
				МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипЗнч(FilterItemВыгрузки.Value));
				Если МетаданныеОбъекта <> Неопределено Тогда 
					ХешИзмерений = ХешИзмерений + "_" + FilterItemВыгрузки.Value.УникальныйИдентификатор();
					Продолжить;
				КонецЕсли;
				ХешИзмерений = ХешИзмерений + "_" + FilterItemВыгрузки.Value;
			КонецЦикла;
			
			Хеш = Хеш + ХешИзмерений;
			Возврат Хеш
		КонецЕсли;
	КонецЕсли;
	
	ХешСРегистратором = FilterItemВыгрузки.Value.УникальныйИдентификатор();
	
	Хеш = Хеш + "_" + ХешСРегистратором;
	
	Возврат Хеш
	
КонецФункции

Функция ПоискНовыхРеквизитов(ОбъектXDTOКонфигурации, ОбъектXDTOВыгрузки)
	
	МассивСвойствКонфигурации = Новый Массив;
	Для каждого СвойствоКонфигурации Из ОбъектXDTOКонфигурации.Свойства() Цикл
		МассивСвойствКонфигурации.Добавить(СвойствоКонфигурации.Имя);
	КонецЦикла; 
	
	МассивСНовымиРеквизитами = Новый Массив;
	Для каждого СвойствоВыгрузки Из ОбъектXDTOВыгрузки.Свойства() Цикл
		
		Если ТипЗнч(ОбъектXDTOВыгрузки[СвойствоВыгрузки.Имя]) = Тип("СписокXDTO") Тогда
			Продолжить;
		КонецЕсли;
		
		Свойство = МассивСвойствКонфигурации.Найти(СвойствоВыгрузки.Имя);
		Если Свойство = Неопределено И ОбъектXDTOВыгрузки[СвойствоВыгрузки.Имя] <> "" Тогда
			НаименованиеРеквизита = СвойствоВыгрузки.Имя;
			МассивСНовымиРеквизитами.Добавить(НаименованиеРеквизита);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивСНовымиРеквизитами
	
КонецФункции

Функция ПоискНовыхРеквизитовВТЧ(ОбъектXDTOКонфигурации, ОбъектXDTOВыгрузки)
	
	МассивСНовымиРеквизитамиТЧ = Новый Массив;
	МассивНаименованийТЧ = Новый Массив;
	МассивСНаименованиямиНовыхТЧ = Новый Массив;
	
	Для каждого Свойство Из ОбъектXDTOВыгрузки.Свойства() Цикл 
		Если ТипЗнч(ОбъектXDTOВыгрузки[Свойство.Имя]) <> Тип("СписокXDTO") Тогда
			Продолжить;
		КонецЕсли;
		
		СвойствоОбъектаXDTOКонфигурации = ОбъектXDTOКонфигурации.Свойства().Получить(Свойство.Имя);
		Если СвойствоОбъектаXDTOКонфигурации = Неопределено Тогда 
			МассивСНаименованиямиНовыхТЧ.Добавить(Свойство.Имя);
			Продолжить;
		КонецЕсли;
		
		МассивСНовымиРеквизитамиТЧ.Добавить(Свойство.Имя);
		МассивНаименованийТЧ.Добавить(Свойство.Имя);
		
		МассивЭлементовСпискаКонфигурации = Новый Массив;
		
		ЭлементСпискаОбъектаXDTOКонфигурации = ФабрикаXDTO.Создать(СвойствоОбъектаXDTOКонфигурации.Тип);
		Для каждого СвойствоКонфигурации Из ЭлементСпискаОбъектаXDTOКонфигурации.Свойства() Цикл
			МассивЭлементовСпискаКонфигурации.Добавить(СвойствоКонфигурации.Имя);
		КонецЦикла;
		НомерСтроки = 1;
		Для каждого ЭлементСпискаОбъектаXDTOВыгрузки Из ОбъектXDTOВыгрузки[Свойство.Имя] Цикл
			МассивСНовымиРеквизитамиТЧ.Добавить(НомерСтроки);
			Для каждого СвойствоВыгрузки Из ЭлементСпискаОбъектаXDTOВыгрузки.Свойства() Цикл
				Свойство = МассивЭлементовСпискаКонфигурации.Найти(СвойствоВыгрузки.Имя);
				Если Свойство = Неопределено Тогда 
					Если ЗначениеЗаполнено(ЭлементСпискаОбъектаXDTOВыгрузки[СвойствоВыгрузки.Имя]) Тогда
						НаименованиеРеквизита = СвойствоВыгрузки.Имя;
						МассивСНовымиРеквизитамиТЧ.Добавить(НаименованиеРеквизита);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		ОчиститьМассив = Истина;
		
		Для каждого Элемент Из МассивСНовымиРеквизитамиТЧ Цикл
			Если ТипЗнч(Элемент) <> Тип("Число") И МассивНаименованийТЧ.Найти(Элемент) = Неопределено Тогда
				ОчиститьМассив = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ОчиститьМассив Тогда
			МассивСНовымиРеквизитамиТЧ.Очистить();
		КонецЕсли;
	КонецЦикла;
	
	СтруктураМассивов = Новый Структура("МассивСНовымиРеквизитамиТЧ, МассивНаименованийТЧ, МассивСНаименованиямиНовыхТЧ", МассивСНовымиРеквизитамиТЧ, МассивНаименованийТЧ, МассивСНаименованиямиНовыхТЧ);
	
	Возврат СтруктураМассивов
	
КонецФункции

Процедура СохранитьНовыеДанные(СтруктураСНовымиДанными, ОбъектXDTOВыгрузки, ВерсияПакета, СтруктураПредопределенныхДанных, КодУзла) Экспорт
	
	Если СтруктураСНовымиДанными.МассивСНовымиРеквизитами.Количество() > 0 ИЛИ СтруктураСНовымиДанными.СтруктураМассивов.МассивСНовымиРеквизитамиТЧ.Количество() > 0 ИЛИ СтруктураСНовымиДанными.СтруктураМассивов.МассивСНаименованиямиНовыхТЧ.Количество() > 0 Тогда
		
		Сообщение = ПолучитьXMLОбъекта(ВерсияПакета, ОбъектXDTOВыгрузки);
		
		ПредопределенныеДанные = Новый ХранилищеЗначения(СтруктураПредопределенныхДанных, Новый СжатиеДанных(9));
		НовыеДанные = Новый ХранилищеЗначения(СтруктураСНовымиДанными, Новый СжатиеДанных(9));
		
		РегистрыСведений.СообщенияИзДругойВерсииМП.ДобавитьСообщение(ОбъектXDTOВыгрузки.Ref, ВерсияПакета, Сообщение, ПредопределенныеДанные, НовыеДанные, КодУзла);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

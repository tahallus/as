
#Область ПрограммныйИнтерфейс

// Процедура устанавливает условное оформление для режима Остатки и Резервы
//
Процедура УстановитьУсловноеОформлениеЗапасыИРезервы(Форма, ИмяТЧ = "Запасы", ТипДокумента = Неопределено) Экспорт
	
	ТаблицаОбъекта = "Объект."+ИмяТЧ+".";
	
	Если ТипДокумента = "ЗаказНаряд" Тогда
		ПолеЗарезервировано = ИмяТЧ+"ЗарезервированоРасход";
		ПолеМожноОтгрузить = ИмяТЧ+"МожноОтгрузитьРасход";
		ТаблицаОбъектаРеквизитРезерв = ТаблицаОбъекта+"РезервОтгрузка";
	Иначе
		ПолеЗарезервировано = ИмяТЧ+"Зарезервировано";
		ПолеМожноОтгрузить = ИмяТЧ+"МожноОтгрузить";
		ТаблицаОбъектаРеквизитРезерв = ТаблицаОбъекта+"Резерв";
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	
	// Для Отгрузки
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"МожноОтгрузить", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"МожноОтгрузить", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"МожноОтгрузить", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "0");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ГоризонтальноеПоложение", ГоризонтальноеПоложение.Право);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"МожноОтгрузить", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста",ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "0");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ГоризонтальноеПоложение", ГоризонтальноеПоложение.Право);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Зеленый);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Зеленый);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ВРезервеТекСклад", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъектаРеквизитРезерв,  Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"Количество")
	, ВидСравненияКомпоновкиДанных.Меньше);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеХватает", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеЗарезервировано);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Количество", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "0");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ГоризонтальноеПоложение", ГоризонтальноеПоложение.Право);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"МожноОтгрузить", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"ОстатокВЯчейке"), ВидСравненияКомпоновкиДанных.Больше);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ЯчейкаДоступна", Истина, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"ОстатокВЯчейке");
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста",ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ТипНоменклатурыЗапас", Ложь);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ПолеМожноОтгрузить);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеХватает");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "");
	
	Если Не ТипДокумента = "ЗаказНаряд" Тогда Возврат КонецЕсли;
	
	// Для Заказа
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Обеспечено", 0, ВидСравненияКомпоновкиДанных.Больше);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Обеспечено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Обеспечено", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"НеОтгруженоВсего")
	, ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Обеспечено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Зеленый);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Обеспечено", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеОтгружено", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Обеспечено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "0");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ГоризонтальноеПоложение", ГоризонтальноеПоложение.Право);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ОстатокСвободно", 0, ВидСравненияКомпоновкиДанных.Меньше);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"ОстатокСвободно");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ПредставлениеНеОтгружено", "", ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"НеОтгружено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"ПредставлениеНеОтгружено"));
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеОтгруженоВсего", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"МожноОтгрузить")
	, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"МожноОтгрузить");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Зеленый);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Количество", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"МожноОтгрузить");
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Обеспечено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "0");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ГоризонтальноеПоложение", ГоризонтальноеПоложение.Право);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "ЗаказНарядВСостоянииВыполнения", Истина, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ПредставлениеДублей", "", ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "РежимОстаткиИРезервы", Истина, ВидСравненияКомпоновкиДанных.Равно);
	
	Если ТипДокумента = "ЗаказНаряд" И ИмяТЧ = "Материалы" Тогда
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗНМатериалыКоличество");
	Иначе
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Количество");
	КонецЕсли;
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"ПредставлениеДублей"));
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ИндексЦвета", 1, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"МожноОтгрузить");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"МожноОтгрузить", 0, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"НеОтгружено", 0, ВидСравненияКомпоновкиДанных.НеРавно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"МожноОтгрузить");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "0");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ГоризонтальноеПоложение", ГоризонтальноеПоложение.Право);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Красный);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Обеспечено", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"МожноОтгрузить"), ВидСравненияКомпоновкиДанных.Больше);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Обеспечено");
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"ВРезерве");
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Размещено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветТекстаПредупреждениеОбОкончанииДоговора);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"Обеспечено", Новый ПолеКомпоновкиДанных(ТаблицаОбъекта+"НеОтгружено"), ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяТЧ+"Обеспечено");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", WebЦвета.Зеленый);
	
	Если ИмяТЧ = "Запасы" Тогда
		НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
		РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ТаблицаОбъекта+"ТипНоменклатурыЗапас", Ложь);
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыМожноОтгрузить");
		РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ЗапасыОбеспечено");
		РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", "");
	КонецЕсли;
	
КонецПроцедуры

// Возвращает данные номенклатуры для передачи в заполняемые документы.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - элемент справочника Номенклатура, для которого извлекаются данные.
// 
// Возвращаемое значение:
//  Структура - данные номенклатуры для использования в НоменклатураВДокументахКлиент.ПодготовитьДанныеЭлемента()
//
Функция ДанныеНоменклатуры(Номенклатура) Экспорт
	
	Поля = Новый Массив;
	Поля.Добавить("ТипНоменклатуры");
	Поля.Добавить("ЕдиницаИзмерения");
	Поля.Добавить("ЭтоНабор");
	Поля.Добавить("Поставщик");
	Поля.Добавить("СтранаПроисхождения");
	Поля.Добавить("Склад");
	Поля.Добавить("Ячейка");
	
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, Поля);
	Результат.Вставить("Номенклатура", Номенклатура);
	Результат.Вставить("Количество", 1);
	Результат.Вставить("Цена", 0);
	Результат.Вставить("СтавкаНДС", СтавкаНоменклатуры(Номенклатура));
	Результат.Вставить("Характеристика", ЗначенияНоменклатурыПоУмолчанию(Номенклатура.Ссылка));
	
	Возврат Результат;
	
КонецФункции

#Область РаботаСТабличнойЧастьюНоменклатуры

// Заполняет данные строки табличной части документа, выбранной из списка номенклатуры в новый документ
// Объект - заполняемый документ
// ИмяТабличнойЧасти - Имя табличной части документа, куда добавляется строка
// СтрокаТабличнойЧасти - заполняемая строка
// СтруктураДопПараметровЗаполнения - Структура дополнительных параметров для заполнения строки
Процедура ЗаполнитьДанныеВСтрокеТабличнойЧасти(Объект, ИмяТабличнойЧасти, СтрокаТабличнойЧасти, ИзКорзины = Ложь) Экспорт
	
	СтруктураДанные = Новый Структура;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Организация", Объект) Тогда
		СтруктураДанные.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Характеристика", СтрокаТабличнойЧасти) Тогда
		СтруктураДанные.Вставить("Характеристика", СтрокаТабличнойЧасти.Характеристика);
	КонецЕсли;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Дата", Объект) Тогда
		СтруктураДанные.Вставить("ДатаОбработки", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
	Иначе
		СтруктураДанные.Вставить("ДатаОбработки", ТекущаяДата());
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Коэффициент", СтрокаТабличнойЧасти) 
		И НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Кратность", СтрокаТабличнойЧасти) 
		Тогда
		СтруктураДанные.Вставить("НормаВремени", 1);
	КонецЕсли;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("НалогообложениеНДС", Объект) Тогда
		СтруктураДанные.Вставить("НалогообложениеНДС", Объект.НалогообложениеНДС);
	КонецЕсли;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ВалютаДокумента", Объект) Тогда
		СтруктураДанные.Вставить("ВалютаДокумента", Объект.ВалютаДокумента);
	КонецЕсли;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("СуммаВключаетНДС", Объект) Тогда
		СтруктураДанные.Вставить("СуммаВключаетНДС", Объект.СуммаВключаетНДС);
	КонецЕсли;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ВидЦен", Объект) И ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		СтруктураДанные.Вставить("ВидЦен", Объект.ВидЦен);
	КонецЕсли; 
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ВидЦенКонтрагента", Объект) И ЗначениеЗаполнено(Объект.ВидЦенКонтрагента) Тогда
		СтруктураДанные.Вставить("ВидЦенКонтрагента", Объект.ВидЦенКонтрагента);
	КонецЕсли;
	//НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ЕдиницаИзмерения", Объект) ИЛИ 
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ЕдиницаИзмерения", СтрокаТабличнойЧасти) И ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения)=Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
		СтруктураДанные.Вставить("Коэффициент", СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент);
	Иначе
		СтруктураДанные.Вставить("Коэффициент", 1);
	КонецЕсли;
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ВидРабот", Объект) И ЗначениеЗаполнено(Объект.ВидРабот) Тогда
		СтруктураДанные.Вставить("ВидРабот", Объект.ВидРабот);
	КонецЕсли; 
	
	ИспользоватьСкидки = НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ВидСкидкиНаценки", Объект);
	Если ИспользоватьСкидки И ЗначениеЗаполнено(Объект.ВидСкидкиНаценки) Тогда
		СтруктураДанные.Вставить("ВидСкидкиНаценки", Объект.ВидСкидкиНаценки);
	КонецЕсли; 
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ДисконтнаяКарта", Объект) И ЗначениеЗаполнено(Объект.ДисконтнаяКарта) Тогда
		СтруктураДанные.Вставить("ДисконтнаяКарта", Объект.ДисконтнаяКарта);
		СтруктураДанные.Вставить("ПроцентСкидкиПоДисконтнойКарте", Объект.ПроцентСкидкиПоДисконтнойКарте);		
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("КодТНВЭД", СтрокаТабличнойЧасти) Тогда
		СтруктураДанные.Вставить("КодТНВЭД", СтрокаТабличнойЧасти.КодТНВЭД);
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ХарактеристикиИспользуются", СтрокаТабличнойЧасти) Тогда
		СтруктураДанные.Вставить("ХарактеристикиИспользуются", СтрокаТабличнойЧасти.ХарактеристикиИспользуются);
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("СтатусУказанияСерий", СтрокаТабличнойЧасти) Тогда
		СтруктураДанные.Вставить("СтатусУказанияСерий", СтрокаТабличнойЧасти.СтатусУказанияСерий);
	КонецЕсли;
	
	ЦенаКорзины = 0;
	Если ИзКорзины Тогда 
		ЦенаКорзины = СтрокаТабличнойЧасти.Цена;
	КонецЕсли;  
	
	ЦенообразованиеКлиентСервер.ДополнитьСтруктуруДанныхНоменклатурыСтруктурнойЕдиницей(Объект, СтрокаТабличнойЧасти, СтруктураДанные);	
	
	ДанныеЗаполненияСтроки = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеЗаполненияСтроки);
	
	Если ИзКорзины Тогда
		
		Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("СтруктурнаяЕдиница", СтрокаТабличнойЧасти)
			И НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("СтруктурнаяЕдиница", Объект)
			И Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтруктурнаяЕдиница) Тогда
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
		ИначеЕсли НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("СтруктурнаяЕдиницаРезерв", СтрокаТабличнойЧасти)
			И НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("СтруктурнаяЕдиницаРезерв", Объект)
			И Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв) Тогда
			СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв = Объект.СтруктурнаяЕдиницаРезерв;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Цена = ЦенаКорзины;
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("МРЦ", СтрокаТабличнойЧасти)
		И НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Цена", СтрокаТабличнойЧасти)
		И ЗначениеЗаполнено(СтрокаТабличнойЧасти.МРЦ) Тогда
		
		Если СтрокаТабличнойЧасти.Цена < СтрокаТабличнойЧасти.МРЦ * 0.75 ИЛИ СтрокаТабличнойЧасти.Цена > СтрокаТабличнойЧасти.МРЦ Тогда
			СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.МРЦ;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Количество", СтрокаТабличнойЧасти) Тогда
		
		Если ИмяТабличнойЧасти = "Работы" Тогда
			
			СтрокаТабличнойЧасти.Количество = СтруктураДанные.НормаВремени;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Кратность) Тогда
				СтрокаТабличнойЧасти.Кратность = 1;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Коэффициент) Тогда
				СтрокаТабличнойЧасти.Коэффициент = 1;
			КонецЕсли;
			
			СтрокаТабличнойЧасти.ТипНоменклатурыУслуга = СтруктураДанные.ЭтоУслуга;
			
		ИначеЕсли ИмяТабличнойЧасти = "Запасы" Тогда
			
			Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ТипНоменклатурыЗапас", Объект) Тогда
				СтрокаТабличнойЧасти.ТипНоменклатурыЗапас = СтруктураДанные.ЭтоЗапас;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
				СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.БазоваяЕдиницаИзмерения;
			КонецЕсли;
			
		ИначеЕсли ИмяТабличнойЧасти = "МатериалыЗаказчика" Тогда
			
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
				СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.БазоваяЕдиницаИзмерения;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("Сумма", СтрокаТабличнойЧасти) Тогда
			НоменклатураВДокументахКлиентСервер.РассчитатьСуммуВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти = "Запасы");
		КонецЕсли;
		
	КонецЕсли;
	
	Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ТипНоменклатурыЗапас", СтрокаТабличнойЧасти) Тогда
		Если ДанныеЗаполненияСтроки.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
			СтрокаТабличнойЧасти.ТипНоменклатурыЗапас = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("БазоваяЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	
	СтруктураДанные.Вставить("ЭтоУслуга", СтруктураДанные.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
	СтруктураДанные.Вставить("ЭтоЗапас", (СтруктураДанные.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас")
	ИЛИ СтруктураДанные.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат")));
	
	СтруктураДанные.Вставить("СтранаПроисхождения", СтруктураДанные.Номенклатура.СтранаПроисхождения);
	
	Если СтруктураДанные.Свойство("НормаВремени") Тогда
		СтруктураДанные.НормаВремени = ЦенообразованиеСервер.ПолучитьНормуВремениРаботы(СтруктураДанные);
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("НалогообложениеНДС")
		И НЕ СтруктураДанные.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС") Тогда
		
		Если СтруктураДанные.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.НеОблагаетсяНДС") Тогда
			СтруктураДанные.Вставить("СтавкаНДС", УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС());
		Иначе
			СтруктураДанные.Вставить("СтавкаНДС", УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль());
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(СтруктураДанные.Номенклатура.ВидСтавкиНДС) Тогда
		СтруктураДанные.Вставить("СтавкаНДС", Справочники.СтавкиНДС.СтавкаНДС(СтруктураДанные.Номенклатура.ВидСтавкиНДС, ?(ЗначениеЗаполнено(СтруктураДанные.ДатаОбработки), СтруктураДанные.ДатаОбработки, ТекущаяДатаСеанса())));
	Иначе
		СтруктураДанные.Вставить("СтавкаНДС", Справочники.СтавкиНДС.СтавкаНДС(СтруктураДанные.Организация.ВидСтавкиНДСПоУмолчанию, ?(ЗначениеЗаполнено(СтруктураДанные.ДатаОбработки), СтруктураДанные.ДатаОбработки, ТекущаяДатаСеанса())));
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("Характеристика") Тогда
		СтруктураДанные.Вставить("Спецификация", Справочники.Спецификации.СпецификацияПоУмолчанию(
			СтруктураДанные.Номенклатура, СтруктураДанные.Характеристика));
	Иначе
		СтруктураДанные.Вставить("Спецификация", Справочники.Спецификации.СпецификацияПоУмолчанию(
			СтруктураДанные.Номенклатура));
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("ВидЦен") Тогда
		
		Если НЕ СтруктураДанные.Свойство("Характеристика") Тогда
			СтруктураДанные.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		КонецЕсли;
		Если НЕ СтруктураДанные.Свойство("ВалютаДокумента") И ЗначениеЗаполнено(СтруктураДанные.ВидЦен) Тогда
			// для ЗаданиеНаРаботу - у которого нет реквизита ВалютыДокумента
			СтруктураДанные.Вставить("ВалютаДокумента", СтруктураДанные.ВидЦен.ВалютаЦены);
		КонецЕсли;
		
		Если СтруктураДанные.Свойство("ВидРабот") Тогда
			
			Если СтруктураДанные.Номенклатура.ФиксированнаяСтоимость Тогда
				
				Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
				СтруктураДанные.Вставить("Цена", Цена);
				
			Иначе
				
				ТекНоменклатура = СтруктураДанные.Номенклатура;
				СтруктураДанные.Номенклатура = СтруктураДанные.ВидРабот;
				СтруктураДанные.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
				СтруктураДанные.Вставить("Цена", Цена);
				
				СтруктураДанные.Номенклатура = ТекНоменклатура;
				
			КонецЕсли;
			
		Иначе
			
			Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
			СтруктураДанные.Вставить("Цена", Цена);
			
		КонецЕсли;
		
	Иначе
		
		СтруктураДанные.Вставить("Цена", 0);
		
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("ВидСкидкиНаценки")
		И ЗначениеЗаполнено(СтруктураДанные.ВидСкидкиНаценки) Тогда
		СтруктураДанные.Вставить("ПроцентСкидкиНаценки", СтруктураДанные.ВидСкидкиНаценки.Процент);
	Иначе
		СтруктураДанные.Вставить("ПроцентСкидкиНаценки", 0);
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("ПроцентСкидкиПоДисконтнойКарте") 
		И ЗначениеЗаполнено(СтруктураДанные.ДисконтнаяКарта) Тогда
		ТекПроцент = СтруктураДанные.ПроцентСкидкиНаценки;
		СтруктураДанные.Вставить("ПроцентСкидкиНаценки", ТекПроцент + СтруктураДанные.ПроцентСкидкиПоДисконтнойКарте);
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("КодТНВЭД") Тогда
		СтруктураДанные.КодТНВЭД = СтруктураДанные.Номенклатура.ТоварнаяНоменклатураВЭД;
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("ХарактеристикиИспользуются") Тогда
		СтруктураДанные.ХарактеристикиИспользуются = 
			ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") 
			И СтруктураДанные.Номенклатура.ИспользоватьХарактеристики;
	КонецЕсли;
		
	Если СтруктураДанные.Свойство("СтатусУказанияСерий") Тогда
		СтруктураДанные.СтатусУказанияСерий = 
			ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") 
			И СтруктураДанные.Номенклатура.ИспользоватьСерииНоменклатуры;
	КонецЕсли;
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

Функция СформироватьГарантийныеТалоныДокумента(ТабличныйДокумент, ТекущийДокумент, Ошибки) Экспорт
	
	ИмяДокумента = ТекущийДокумент.Метаданные().Имя;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокПечати.Дата КАК ДатаДокумента,
	|	ДокПечати.Номер КАК Номер,
	|	ДокПечати.Организация.Префикс КАК Префикс,
	|	ДокПечати.Организация.ФайлЛоготип КАК ФайлЛоготип,
	|	ДокПечати.Ответственный.Физлицо КАК Ответственный,
	|	ДокПечати.УсловияГарантийногоТалона,
	|	ДокПечати.Запасы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура.ГарантийныйСрок КАК ГарантийныйСрок,
	|		Номенклатура.ВыписыватьГарантийныйТалон КАК ВыписыватьГарантийныйТалон,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ДокПечати.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
	|				ТОГДА ДокПечати.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ДокПечати.Запасы.Номенклатура.НаименованиеПолное
	|		КОНЕЦ КАК Запас,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.Штрихкод КАК Штрихкод,
	|		Номенклатура.Код КАК Код,
	|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		Количество КАК Количество,
	|		Характеристика,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		КлючСвязи
	|	),
	|	ДокПечати.Контрагент,
	|	ДокПечати.Организация,
	|	ДокПечати.СерииНоменклатуры.(
	|		Серия,
	|		КлючСвязи
	|	)
	|ИЗ
	|	Документ."+ИмяДокумента+" КАК ДокПечати
	|ГДЕ
	|	ДокПечати.Ссылка = &ТекущийДокумент
	|	И ДокПечати.Запасы.Номенклатура.ВыписыватьГарантийныйТалон
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Если Шапка.Количество()=0 Тогда
		ТекстСообщения = НСтр("ru = '__________________
		|Документ %1.
		|В документе нет товаров с опцией <Выписывать гарантийный талон>'");
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ТекущийДокумент);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения, Неопределено);
		Возврат Неопределено;
	КонецЕсли;
	Шапка.Следующий();
	
	ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
	ВыборкаСтрокСерииНоменклатуры = Шапка.СерииНоменклатуры.Выбрать();
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГарантийныйТалон";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ГарантийныйТалон");
	
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
	
	Если ЗначениеЗаполнено(Шапка.ФайлЛоготип) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСЛоготипом");
		
		ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Шапка.ФайлЛоготип);
		Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
			
			ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
			
		КонецЕсли;
		
	Иначе // Если картинки не выбраны печатаем обычный заголовок
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
	КонецЕсли;
	
	ОбластьМакета.Параметры.ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Гарантийный талон № %1 от %2'"), НомерДокумента,
		Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	
	СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.Организация = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации,
		"ПолноеНаименование,ФактическийАдрес,Телефоны");
	ОбластьМакета.Параметры.Контрагент = Шапка.Контрагент;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	НомерСтроки = 1;
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		Если НЕ ВыборкаСтрокЗапасы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
		
		СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСтрокСерииНоменклатуры, ВыборкаСтрокЗапасы.КлючСвязи);
		ОбластьМакета.Параметры.Запас = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
		ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерииНоменклатуры);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтроки = НомерСтроки+1;
		
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныеУсловия");
	// Дополнительные условия
	Если ЗначениеЗаполнено(Шапка.УсловияГарантийногоТалона) И
		ЗначениеЗаполнено(Макет.Области.Найти("ДополнительныеУсловия")) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныеУсловия");
		
		// Добавим отступ перед текстом
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим построчно многострочный текст
		// для того, чтобы корректно печатались длинные тексты
		ТекстДополнительныхУсловий = Шапка.УсловияГарантийногоТалона.ТекстУсловий;
		ЧислоСтрокТекста = СтрЧислоСтрок(ТекстДополнительныхУсловий);
		Для СчетчикСтрок = 1 По ЧислоСтрокТекста Цикл
			СтруктураПараметров = Новый Структура("ТекстДополнительныхУсловий", 
			СтрПолучитьСтроку(ТекстДополнительныхУсловий, СчетчикСтрок));
			ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;			
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьГарантийныеТалоныПроизводство(ТабличныйДокумент, ТекущийДокумент, Ошибки, ИмяТЧПродукция="Продукция") Экспорт
	
	ИмяТЧСерииНоменклатуры = "СерииНоменклатуры"+?(ИмяТЧПродукция="Продукция", "Продукция","");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокПечати.Дата КАК ДатаДокумента,
	|	ДокПечати.Номер КАК Номер,
	|	ДокПечати.Организация.Префикс КАК Префикс,
	|	ДокПечати.Организация.ФайлЛоготип КАК ФайлЛоготип,
	|	ДокПечати.Автор.ФизическоеЛицо КАК Ответственный,
	|	ДокПечати.УсловияГарантийногоТалона,
	|	ДокПечати."+ИмяТЧПродукция+".(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура.ГарантийныйСрок КАК ГарантийныйСрок,
	|		Номенклатура.ВыписыватьГарантийныйТалон КАК ВыписыватьГарантийныйТалон,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ДокПечати."+ИмяТЧПродукция+".Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
	|				ТОГДА ДокПечати."+ИмяТЧПродукция+".Номенклатура.Наименование
	|			ИНАЧЕ ДокПечати."+ИмяТЧПродукция+".Номенклатура.НаименованиеПолное
	|		КОНЕЦ КАК Запас,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.Штрихкод КАК Штрихкод,
	|		Номенклатура.Код КАК Код,
	|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		Количество КАК Количество,
	|		Характеристика,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		КлючСвязи
	|	),
	|	ДокПечати.ЗаказПокупателя.Контрагент КАК Контрагент,
	|	ДокПечати.Организация,
	|	ДокПечати."+ИмяТЧСерииНоменклатуры+".(
	|		Серия,
	|		КлючСвязи
	|	)
	|ИЗ
	|	Документ.СборкаЗапасов КАК ДокПечати
	|ГДЕ
	|	ДокПечати.Ссылка = &ТекущийДокумент
	|	И ДокПечати."+ИмяТЧПродукция+".Номенклатура.ВыписыватьГарантийныйТалон
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Если Шапка.Количество()=0 Тогда
		ТекстСообщения = НСтр("ru = '__________________
		|Документ %1.
		|В документе нет товаров с опцией <Выписывать гарантийный талон>'");
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ТекущийДокумент);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения, Неопределено);
		Возврат Неопределено;
	КонецЕсли;
	Шапка.Следующий();
	
	ВыборкаСтрокЗапасы = Шапка[ИмяТЧПродукция].Выбрать();
	ВыборкаСтрокСерииНоменклатуры = Шапка[ИмяТЧСерииНоменклатуры].Выбрать();
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГарантийныйТалон";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ГарантийныйТалон");
	
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Истина);
	
	Если ЗначениеЗаполнено(Шапка.ФайлЛоготип) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСЛоготипом");
		
		ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Шапка.ФайлЛоготип);
		Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
			
			ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
			
		КонецЕсли;
		
	Иначе // Если картинки не выбраны печатаем обычный заголовок
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
	КонецЕсли;
	
	ОбластьМакета.Параметры.ТекстЗаголовка = СтрШаблон(
		НСтр("ru='Гарантийный талон № %1 от ___________________'"), НомерДокумента);
	
	// Дату продажи не указываем
	
	СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.Организация = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ФактическийАдрес,Телефоны");
	ОбластьМакета.Параметры.Контрагент = Шапка.Контрагент;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	НомерСтроки = 1;
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		Если НЕ ВыборкаСтрокЗапасы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
		
		СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСтрокСерииНоменклатуры, ВыборкаСтрокЗапасы.КлючСвязи);
		ОбластьМакета.Параметры.Запас = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
		ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерииНоменклатуры);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтроки = НомерСтроки+1;
		
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныеУсловия");
	// Дополнительные условия
	Если ЗначениеЗаполнено(Шапка.УсловияГарантийногоТалона) И
		ЗначениеЗаполнено(Макет.Области.Найти("ДополнительныеУсловия")) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДополнительныеУсловия");
		
		// Добавим отступ перед текстом
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим построчно многострочный текст
		// для того, чтобы корректно печатались длинные тексты
		ТекстДополнительныхУсловий = Шапка.УсловияГарантийногоТалона.ТекстУсловий;
		ЧислоСтрокТекста = СтрЧислоСтрок(ТекстДополнительныхУсловий);
		Для СчетчикСтрок = 1 По ЧислоСтрокТекста Цикл
			СтруктураПараметров = Новый Структура("ТекстДополнительныхУсловий", 
			СтрПолучитьСтроку(ТекстДополнительныхУсловий, СчетчикСтрок));
			ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;			
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьГарантийныйТалон(МассивОбъектов, ОбъектыПечати) Экспорт
	
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СформироватьГарантийныеТалоныДокумента(ТабличныйДокумент, ТекущийДокумент, Ошибки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет поля табличной части Запасы признаками использования характеристик
//
// Параметры:
//  ОткрытиеФормы - Булево. Устанавливается в значение - Истина, если заполнение происходит при открытии формы. 
Процедура ЗаполнитьПризнакиИспользованияХарактеристик(Объект, ОткрытиеФормы = Ложь) Экспорт
	
	СерииНоменклатурыУНФ.ЗаполнитьПризнакиИспользованияСерий(Объект);
	
	ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьПартии = ПолучитьФункциональнуюОпцию("ИспользоватьПартии");
	
	Если НЕ ИспользоватьПартии И НЕ ИспользоватьХарактеристики Тогда Возврат КонецЕсли;
	
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	МассивИменТабличныхЧастей = Новый Массив;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти	Цикл
		
		Если НЕ ТабличнаяЧасть.Реквизиты.Найти("Характеристика") = Неопределено
			Тогда
			МассивИменТабличныхЧастей.Добавить(ТабличнаяЧасть.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтоДокументКорректировкаПоступления = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПоступления"),Истина, Ложь);
	ЭтоДокументКорректировкаРеализации = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации"),Истина, Ложь);
	ЭтоДокументЗаказПоставщику = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПоставщику"),Истина, Ложь);
	ЭтоДокументСчетНаОплатуПолученный = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуПоставщика"),Истина, Ложь);
	
	НеПроверятьУслуги = ?(ЭтоДокументЗаказПоставщику Или ЭтоДокументСчетНаОплатуПолученный, Истина, Ложь);
	
	Запрос = Новый Запрос;
	
	Если ЭтоДокументКорректировкаПоступления Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаНоменклатурыДокумента.Номенклатура КАК Справочник.Номенклатура) КАК Ссылка,
		|	ТаблицаНоменклатурыДокумента.НомерСтроки КАК НомерСтрокиНоменклатуры,
		|	ТаблицаНоменклатурыДокумента.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатурыДокумента.ЕстьВДокументеПоступления КАК ЕстьВДокументеПоступления
		|ПОМЕСТИТЬ ВыборкаИзТабличнойЧастиЗапасы
		|ИЗ
		|	&ИмяТЧ КАК ТаблицаНоменклатурыДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыборкаИзТабличнойЧастиЗапасы.НомерСтрокиНоменклатуры КАК НомерСтрокиНоменклатуры,
		|	ВЫБОР
		|		КОГДА НЕ ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ИспользоватьХарактеристики
		|				И НЕ ВыборкаИзТабличнойЧастиЗапасы.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ИспользоватьХарактеристики
		|	КОНЕЦ КАК ИспользоватьХарактеристики,
		|	ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ПроверятьЗаполнениеХарактеристики КАК ПроверятьЗаполнениеХарактеристики,
		|	ВыборкаИзТабличнойЧастиЗапасы.ЕстьВДокументеПоступления КАК ЕстьВДокументеПоступления,
		|	ИСТИНА КАК ЗаполнениеХарактеристикиПроверено,
		|	ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ИспользоватьПартии КАК ИспользоватьПартии,
		|	ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ПроверятьЗаполнениеПартий КАК ПроверятьЗаполнениеПартий
		|ИЗ
		|	ВыборкаИзТабличнойЧастиЗапасы КАК ВыборкаИзТабличнойЧастиЗапасы
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиНоменклатуры";
		
	ИначеЕсли ЭтоДокументКорректировкаРеализации Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаНоменклатурыДокумента.Номенклатура КАК Справочник.Номенклатура) КАК Ссылка,
		|	ТаблицаНоменклатурыДокумента.НомерСтроки КАК НомерСтрокиНоменклатуры,
		|	ТаблицаНоменклатурыДокумента.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатурыДокумента.ЕстьВДокументеРеализации КАК ЕстьВДокументеРеализации
		|ПОМЕСТИТЬ ВыборкаИзТабличнойЧастиЗапасы
		|ИЗ
		|	&ИмяТЧ КАК ТаблицаНоменклатурыДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыборкаИзТабличнойЧастиЗапасы.НомерСтрокиНоменклатуры КАК НомерСтрокиНоменклатуры,
		|	ВЫБОР
		|		КОГДА НЕ ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ИспользоватьХарактеристики
		|				И НЕ ВыборкаИзТабличнойЧастиЗапасы.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ИспользоватьХарактеристики
		|	КОНЕЦ КАК ИспользоватьХарактеристики,
		|	ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ПроверятьЗаполнениеХарактеристики КАК ПроверятьЗаполнениеХарактеристики,
		|	ВыборкаИзТабличнойЧастиЗапасы.ЕстьВДокументеРеализации КАК ЕстьВДокументеРеализации,
		|	ИСТИНА КАК ЗаполнениеХарактеристикиПроверено,
		|	ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ИспользоватьПартии КАК ИспользоватьПартии,
		|	ВыборкаИзТабличнойЧастиЗапасы.Ссылка.ПроверятьЗаполнениеПартий КАК ПроверятьЗаполнениеПартий
		|ИЗ
		|	ВыборкаИзТабличнойЧастиЗапасы КАК ВыборкаИзТабличнойЧастиЗапасы
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиНоменклатуры";
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.ИспользоватьПартии КАК ИспользоватьПартии,
		|	Номенклатура.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики,
		|	Номенклатура.ПроверятьЗаполнениеХарактеристики КАК ПроверятьЗаполнениеХарактеристики,
		|	Номенклатура.ПроверятьЗаполнениеПартий КАК ПроверятьЗаполнениеПартий,
		|	ВЫБОР
		|		КОГДА Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	ИСТИНА КАК ЗаполнениеХарактеристикиПроверено
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&МассивПроверяемойНоменклатуры)
		|	И НЕ Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)";
		
	КонецЕсли;
	
	МассивПроверяемойНоменклатуры = Новый Массив;
	
	//Если Не ОткрытиеФормы Тогда
	
	КоличествоПакетовЗапроса = 1;
	
	СоответствиеТабличныхЧастейИндексамПакета = Новый Соответствие();
	
	Для Каждого ИмяТабличнойЧасти Из МассивИменТабличныхЧастей Цикл
		
		ОтборНеПроверенныхСтрок = Новый Структура("ЗаполнениеХарактеристикиПроверено", Ложь);
		МассивНеПроверенныхСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(ОтборНеПроверенныхСтрок);
		
		Если ЭтоДокументКорректировкаПоступления Тогда
			
			Если Не Объект[ИмяТабличнойЧасти].Количество() Тогда Продолжить КонецЕсли;
			
			ТаблицаНоменклатурыДокумента = Объект[ИмяТабличнойЧасти].Выгрузить(МассивНеПроверенныхСтрок,"Номенклатура, НомерСтроки, Характеристика, ЕстьВДокументеПоступления");
		ИначеЕсли ЭтоДокументКорректировкаРеализации Тогда
			
			Если Не Объект[ИмяТабличнойЧасти].Количество() Тогда Продолжить КонецЕсли;
			
			ТаблицаНоменклатурыДокумента = Объект[ИмяТабличнойЧасти].Выгрузить(МассивНеПроверенныхСтрок,"Номенклатура, НомерСтроки, Характеристика, ЕстьВДокументеРеализации");
		Иначе
			
			Если Не Объект[ИмяТабличнойЧасти].Количество() Тогда Продолжить КонецЕсли;
			
			Для Каждого СтрокаТаблицы Из Объект[ИмяТабличнойЧасти] Цикл
				
				Если СтрокаТаблицы.ЗаполнениеХарактеристикиПроверено Тогда Продолжить КонецЕсли;
				
				МассивПроверяемойНоменклатуры.Добавить(СтрокаТаблицы.Номенклатура);
				
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		ТекстПакета = ТекстЗапроса;
		
		ТекстПакета = СтрЗаменить(ТекстПакета, "&ИмяТЧ", "&"+ИмяТабличнойЧасти);
		ТекстПакета = СтрЗаменить(ТекстПакета, "ВыборкаИзТабличнойЧастиЗапасы", "ВыборкаИзТабличнойЧастиЗапасы"+ИмяТабличнойЧасти);
		
		Запрос.Текст = Запрос.Текст + ТекстПакета + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.УстановитьПараметр(ИмяТабличнойЧасти, ТаблицаНоменклатурыДокумента);
		
		СоответствиеТабличныхЧастейИндексамПакета.Вставить(КоличествоПакетовЗапроса, ИмяТабличнойЧасти);
		КоличествоПакетовЗапроса = КоличествоПакетовЗапроса + 2;
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Запрос.Текст) И Не МассивПроверяемойНоменклатуры.Количество() Тогда Возврат КонецЕсли;
	
	ИндексПакета = 1;
	
	Если ЭтоДокументКорректировкаПоступления Тогда
		
		ПакетЗапросов = Запрос.ВыполнитьПакет();
		
		Пока ИндексПакета <= ПакетЗапросов.Количество()-1 Цикл
			
			ВыборкаПоХарактеристикам = ПакетЗапросов[ИндексПакета].Выбрать();
			
			ИмяТабличнойЧасти = СоответствиеТабличныхЧастейИндексамПакета.Получить(ИндексПакета);
			
			Пока ВыборкаПоХарактеристикам.Следующий() Цикл
				
				Если ВыборкаПоХарактеристикам.ЕстьВДокументеПоступления Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаТабЧасти = Объект[ИмяТабличнойЧасти][ВыборкаПоХарактеристикам.НомерСтрокиНоменклатуры-1];
				ЗаполнитьЗначенияСвойств(СтрокаТабЧасти,ВыборкаПоХарактеристикам);
				
				Если СтрокаТабЧасти.Свойство("Партия") И ЗначениеЗаполнено(СтрокаТабЧасти.Партия) Тогда
					СтрокаТабЧасти.ИспользоватьПартии = Истина
				КонецЕсли;
				
			КонецЦикла;
			
			ИндексПакета = ИндексПакета + 2;
			
		КонецЦикла;
		
	ИначеЕсли ЭтоДокументКорректировкаРеализации Тогда
		
		ПакетЗапросов = Запрос.ВыполнитьПакет();
		
		Пока ИндексПакета <= ПакетЗапросов.Количество()-1 Цикл
			
			ВыборкаПоХарактеристикам = ПакетЗапросов[ИндексПакета].Выбрать();
			
			ИмяТабличнойЧасти = СоответствиеТабличныхЧастейИндексамПакета.Получить(ИндексПакета);
			
			Пока ВыборкаПоХарактеристикам.Следующий() Цикл
				
				Если ВыборкаПоХарактеристикам.ЕстьВДокументеРеализации Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаТабЧасти = Объект[ИмяТабличнойЧасти][ВыборкаПоХарактеристикам.НомерСтрокиНоменклатуры-1];
				ЗаполнитьЗначенияСвойств(СтрокаТабЧасти,ВыборкаПоХарактеристикам);
				
				Если СтрокаТабЧасти.Свойство("Партия") И ЗначениеЗаполнено(СтрокаТабЧасти.Партия) Тогда
					СтрокаТабЧасти.ИспользоватьПартии = Истина
				КонецЕсли;
				
			КонецЦикла;
			
			ИндексПакета = ИндексПакета + 2;
			
		КонецЦикла;
		
	Иначе
		
		Если НеПроверятьУслуги = Ложь Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И НЕ Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)","");
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("МассивПроверяемойНоменклатуры", МассивПроверяемойНоменклатуры);
		ВыборкаПоХарактеристикам = Запрос.Выполнить().Выбрать();
		
		Для Каждого ИмяТабличнойЧасти Из МассивИменТабличныхЧастей Цикл
			
			Для Каждого СтрокаТабЧасти Из Объект[ИмяТабличнойЧасти] Цикл
				
				ПараметрыОтбора = Новый Структура("Номенклатура", СтрокаТабЧасти.Номенклатура);
				
				НайденаСтрока = ВыборкаПоХарактеристикам.НайтиСледующий(ПараметрыОтбора);
				
				Если НайденаСтрока Тогда
					ЗаполнитьЗначенияСвойств(СтрокаТабЧасти, ВыборкаПоХарактеристикам);
					
					Если СтрокаТабЧасти.Свойство("Партия") И ЗначениеЗаполнено(СтрокаТабЧасти.Партия) Тогда
						СтрокаТабЧасти.ИспользоватьПартии = Истина
					КонецЕсли;
					
					Если СтрокаТабЧасти.Свойство("Характеристика") И ЗначениеЗаполнено(СтрокаТабЧасти.Характеристика) Тогда
						СтрокаТабЧасти.ИспользоватьХарактеристики = Истина
					КонецЕсли;
				КонецЕсли;
				
				ВыборкаПоХарактеристикам.Сбросить();
				
			КонецЦикла;
		КонецЦикла
		
	КонецЕсли;
	
КонецПроцедуры

// Получает значение характеристики номенклатуры по умолчанию
//
Функция ЗначенияНоменклатурыПоУмолчанию(Номенклатура) Экспорт
	
	Если Номенклатура.ЭтоНабор Тогда
		Возврат Неопределено
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Категория", Номенклатура.КатегорияНоменклатуры);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Характеристика
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Характеристика.Владелец = ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Номенклатура
	|					ТОГДА ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Характеристика
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Номенклатура.КатегорияНоменклатуры = ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Характеристика.Владелец
	|							ТОГДА ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Характеристика
	|						ИНАЧЕ НЕОПРЕДЕЛЕНО
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Характеристика
	|ИЗ
	|	РегистрСведений.ЗначенияНоменклатурыПоУмолчанию КАК ЗначенияНоменклатурыПоУмолчаниюНоменклатура
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЗначенияНоменклатурыПоУмолчаниюНоменклатура.Номенклатура КАК Справочник.Номенклатура)) = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗначенияНоменклатурыПоУмолчаниюКатегории.Характеристика КАК ХарактеристикаКатегории
	|ИЗ
	|	РегистрСведений.ЗначенияНоменклатурыПоУмолчанию КАК ЗначенияНоменклатурыПоУмолчаниюКатегории
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЗначенияНоменклатурыПоУмолчаниюКатегории.Номенклатура КАК Справочник.КатегорииНоменклатуры)) = &Категория";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	РезультатПоНоменклатуре = РезультатЗапроса[0].Выбрать();
	
	Если РезультатПоНоменклатуре.Следующий() Тогда
		Возврат РезультатПоНоменклатуре.Характеристика
	КонецЕсли;
	
	РезультатПоКатегории = РезультатЗапроса[1].Выбрать();
	
	Если РезультатПоКатегории.Следующий() И ЗначениеЗаполнено(РезультатПоКатегории.ХарактеристикаКатегории) Тогда
		Возврат РезультатПоКатегории.ХарактеристикаКатегории
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция СтавкаНоменклатуры(Номенклатура) Экспорт
	Возврат Справочники.СтавкиНДС.СтавкаНДС(Номенклатура.ВидСтавкиНДС);
КонецФункции

// Проверяет,в зависимости от использования, заполнение характеристик номенклатуры
//
Процедура ПроверитьЗаполнениеХарактеристик(Объект, Отказ, ПроверятьЗаполнениеПартий = Ложь, ИменаТЧДляИсключенияПроверкиПартий = Неопределено) Экспорт
	
	СписокИменТЧДляИсключенияПроверкиПартий = Новый СписокЗначений;
	
	Если Не ИменаТЧДляИсключенияПроверкиПартий = Неопределено Тогда
		СписокИменТЧДляИсключенияПроверкиПартий = ИменаТЧДляИсключенияПроверкиПартий;
	КонецЕсли;
	
	Если Отказ Тогда Возврат КонецЕсли;
	
	Если ПроверятьЗаполнениеПартий И Не Объект.Метаданные().Реквизиты.Найти("ВидОперации") = Неопределено
		И (Объект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемВПереработку 
		Или Объект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию 
		Или Объект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаОтветХранение) Тогда
		
		ПроверятьЗаполнениеПартий = Ложь;
	КонецЕсли;
	
	ЭтоДокументКорректировкаПоступления = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПоступления"),Истина, Ложь);
	ЭтоДокументКорректировкаРеализации = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации"),Истина, Ложь);
	ЭтоДокументПересортицаЗапасов = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПересортицаЗапасов"),Истина, Ложь);
	ЭтоДокументЗаказПоставщику = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПоставщику"),Истина, Ложь);
	ЭтоДокументСчетНаОплатуПолученный = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуПоставщика"),Истина, Ложь);
	
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	МассивИменТабличныхЧастей = Новый Массив;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		Если НЕ ТабличнаяЧасть.Реквизиты.Найти("Характеристика") = Неопределено Тогда
			
			Если ТабличнаяЧасть.Имя = "Калькуляция" Тогда Продолжить КонецЕсли;
			
			Если ТабличнаяЧасть.Имя = "РаспределениеЗапасов" 
				И Объект.Метаданные().Реквизиты.Найти("РучноеРаспределение") <> Неопределено 
				И НЕ Объект.РучноеРаспределение Тогда
				// При автоматическом распределении контроль табличной части не выполняется, она имеет служебный характер
				Продолжить;
			КонецЕсли; 
			
			МассивИменТабличныхЧастей.Добавить(ТабличнаяЧасть.Имя);
			
		КонецЕсли;
	КонецЦикла;
	
	НеПроверятьУслуги = ?(ЭтоДокументЗаказПоставщику Или ЭтоДокументСчетНаОплатуПолученный, Истина, Ложь);
	
	ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьПартии = ПолучитьФункциональнуюОпцию("ИспользоватьПартии");
	
	Для Каждого ИмяТабличнойЧасти Из МассивИменТабличныхЧастей Цикл
		
		ПроверятьПартии = Ложь;
		
		Если ПроверятьЗаполнениеПартий 
			И Не МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Найти("Партия") = Неопределено Тогда
			
			ПроверятьПартии = ?(Не СписокИменТЧДляИсключенияПроверкиПартий.НайтиПоЗначению(ИмяТабличнойЧасти) = Неопределено, Ложь, Истина);
			
		КонецЕсли;
		
		ТаблицаРеквизитов = ТаблицаЗначенийРеквизитовНоменклатурыТабличнойЧасти(Объект[ИмяТабличнойЧасти]);
		
		Для Каждого СтрокаЗапасы Из Объект[ИмяТабличнойЧасти] Цикл
			
			Номенклатура = СтрокаЗапасы.Номенклатура;
			
			Если Не ЗначениеЗаполнено(Номенклатура) Тогда Продолжить КонецЕсли;
			
			НомерСтроки = СтрокаЗапасы.НомерСтроки;
			
			ЭтоНоменклатура = ?(ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура"), Истина, Ложь);
			
			Если Не ЭтоНоменклатура Тогда Продолжить КонецЕсли;
			
			ЭтоГруппа = ТаблицаРеквизитов[НомерСтроки-1].ЭтоГруппа;
			Если ЭтоГруппа Тогда Продолжить КонецЕсли;
			
			ПроверятьЗаполнениеХарактеристики = ТаблицаРеквизитов[НомерСтроки-1].ПроверятьЗаполнениеХарактеристики;
			ПроверятьЗаполнениеПартий = ТаблицаРеквизитов[НомерСтроки-1].ПроверятьЗаполнениеПартий;
			
			ПроверятьЗаполнениеХарактеристикВТабЧасти = ПроверятьЗаполнениеХарактеристики И ИспользоватьХарактеристики;
			ПроверятьЗаполнениеПартийВТабЧасти = ПроверятьЗаполнениеПартий И ИспользоватьПартии;
			
			Если (ЭтоДокументКорректировкаПоступления И СтрокаЗапасы.ЕстьВДокументеПоступления) 
				Или (ЭтоДокументКорректировкаРеализации И СтрокаЗапасы.ЕстьВДокументеРеализации) Тогда
				Продолжить;
			КонецЕсли;
			
			ТипНоменклатуры = ТаблицаРеквизитов[НомерСтроки-1].ТипНоменклатуры;
			
			Если НеПроверятьУслуги И ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПроверятьЗаполнениеХарактеристикВТабЧасти
				И Не ЗначениеЗаполнено(СтрокаЗапасы.Характеристика) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'В таблице ""%1"" для номенклатуры %2 в строке %3 заполнение поля ""Характеристика"" является обязательным.'"),
					ИмяТабличнойЧасти, Номенклатура, НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, НомерСтроки,
					"Характеристика");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
			
			Если ПроверятьПартии
				И ПроверятьЗаполнениеПартийВТабЧасти
				И Не ЗначениеЗаполнено(СтрокаЗапасы.Партия) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'В таблице ""%1"" для номенклатуры %2 в строке %3 заполнение поля ""Партия"" является обязательным.'"),
					ИмяТабличнойЧасти, Номенклатура, НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, НомерСтроки,
					"Партия");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
			
			Если ЭтоДокументПересортицаЗапасов
				И ПроверятьЗаполнениеХарактеристикВТабЧасти
				И Не ЗначениеЗаполнено(СтрокаЗапасы.ХарактеристикаОприходование) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'В таблице ""%1"" для номенклатуры %2 в строке %3 заполнение поля ""Характеристика"" является обязательным.'"),
					ИмяТабличнойЧасти, СтрокаЗапасы.НоменклатураОприходование, НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, НомерСтроки,
					"ХарактеристикаОприходование");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
			
			Если ЭтоДокументПересортицаЗапасов И ПроверятьПартии
				И ПроверятьЗаполнениеПартийВТабЧасти
				И Не ЗначениеЗаполнено(СтрокаЗапасы.ПартияОприходование) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'В таблице ""%1"" для номенклатуры %2 в строке %3 заполнение поля ""Партия"" является обязательным.'"),
					ИмяТабличнойЧасти, СтрокаЗапасы.НоменклатураОприходование, НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, НомерСтроки,
					"ПартияОприходование");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Обновляет условное оформление колонки "Характеристика" для формы документа
// Форма - Форма объекта для условного оформления
// СоответствиеИменТабличныхЧастей - Соответствие Имя Табличной части -> Имя колонки табличной части
Процедура ОбновитьУсловноеОформлениеТабличнойЧастиДляХарактеристик(Форма, СоответствиеИменТабличныхЧастей = Неопределено) Экспорт  
	
	ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьПартии = ПолучитьФункциональнуюОпцию("ИспользоватьПартии");
	
	Если НЕ ИспользоватьПартии И НЕ ИспользоватьХарактеристики Тогда Возврат КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.ЗаказНаПроизводство.Форма.ФормаДокумента" 
		Или Форма.ИмяФормы = "Документ.СборкаЗапасов.Форма.ФормаДокумента" Тогда
		
		НаименованиеПоляХарактеристика = "РаспределениеЗапасовХарактеристика";
		НаименованиеПоляПартия = "РаспределениеЗапасовПартия";
		
		ЗначениеПоиска = Форма.Элементы.Найти(НаименованиеПоляХарактеристика);
		
		ЗначениеПоискаПартия = Форма.Элементы.Найти(НаименованиеПоляПартия);
		
		Если ИспользоватьХарактеристики И НЕ ЗначениеПоиска = Неопределено Тогда
			
			ИмяПоляПроверятьЗаполнениеХарактеристики = "РаспределениеЗапасов.ПроверятьЗаполнениеХарактеристики";
			ИмяПоляИспользоватьХарактеристики = "РаспределениеЗапасов.ИспользоватьХарактеристики";
			ИмяПоляХарактеристики = НаименованиеПоляХарактеристика;
			
			НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляИспользоватьХарактеристики, Ложь, ВидСравненияКомпоновкиДанных.Равно);
			
			РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
			
			НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляПроверятьЗаполнениеХарактеристики, Истина, ВидСравненияКомпоновкиДанных.Равно);
			
			РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
			
			НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "РаспределениеЗапасов.Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
			РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
			
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
		КонецЕсли;
		
		Если ИспользоватьПартии И НЕ ЗначениеПоискаПартия = Неопределено Тогда
			ИмяПоляПроверятьЗаполнениеПартии = "РаспределениеЗапасов.ПроверятьЗаполнениеПартий";
			ИмяПоляИспользоватьПартии = "РаспределениеЗапасов.ИспользоватьПартии";
			ИмяПоляПартии = НаименованиеПоляПартия;
			
			НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляИспользоватьПартии, Ложь, ВидСравненияКомпоновкиДанных.Равно);
			
			РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляПартии);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
			
			НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляПроверятьЗаполнениеПартии, Истина, ВидСравненияКомпоновкиДанных.Равно);
			
			РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляПартии);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
			
			НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
			
			РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "РаспределениеЗапасов.Партия", Справочники.ПартииНоменклатуры.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
			РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляПартии);
			РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если СоответствиеИменТабличныхЧастей = Неопределено Тогда
		
		МетаданныеОбъекта = Форма.Объект.Ссылка.Метаданные();
		
		Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
			Если ИспользоватьХарактеристики И НЕ ТабличнаяЧасть.Реквизиты.Найти("Характеристика") = Неопределено Тогда
				НаименованиеПоля = ТабличнаяЧасть.Имя + "Характеристика";
				ЗначениеПоиска = Форма.Элементы.Найти(НаименованиеПоля);
				
				Если НЕ ЗначениеПоиска = Неопределено И ТипЗнч(ЗначениеПоиска.Родитель) = Тип("ТаблицаФормы") Тогда
					ИмяПоляПроверятьЗаполнениеХарактеристики = ЗначениеПоиска.Родитель.ПутьКДанным + ".ПроверятьЗаполнениеХарактеристики";
					ИмяПоляИспользоватьХарактеристики = ЗначениеПоиска.Родитель.ПутьКДанным+".ИспользоватьХарактеристики";
					ИмяПоляХарактеристики = НаименованиеПоля; 
					
					НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляИспользоватьХарактеристики, Ложь, ВидСравненияКомпоновкиДанных.Равно);
					
					Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли; 
					
					Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
					
					НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляПроверятьЗаполнениеХарактеристики, Истина, ВидСравненияКомпоновкиДанных.Равно);
					
					Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
					
					НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным+".Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
					РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
				КонецЕсли;
			КонецЕсли;
			
			Если ИспользоватьПартии И НЕ ТабличнаяЧасть.Реквизиты.Найти("Партия") = Неопределено Тогда
				НаименованиеПоля = ТабличнаяЧасть.Имя + "Партия";
				ЗначениеПоиска = Форма.Элементы.Найти(НаименованиеПоля);
				
				Если НЕ ЗначениеПоиска = Неопределено И ТипЗнч(ЗначениеПоиска.Родитель) = Тип("ТаблицаФормы") Тогда
					ИмяПоляИспользоватьПартии = ЗначениеПоиска.Родитель.ПутьКДанным+".ИспользоватьПартии";
					ИмяПоляХарактеристики = НаименованиеПоля; 
					ИмяПоляПроверятьЗаполнениеПартии = ЗначениеПоиска.Родитель.ПутьКДанным + ".ПроверятьЗаполнениеПартий";
					
					ИмяПоляВидОперации = "Объект.ВидОперации";
					СписокИсключенийВидовОпераций = Новый СписокЗначений;
					
					СписокИсключенийВидовОпераций.Добавить(Перечисления.ВидыОперацийПриходнаяНакладная.ПриемВПереработку);
					СписокИсключенийВидовОпераций.Добавить(Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию);
					СписокИсключенийВидовОпераций.Добавить(Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаОтветХранение);
					
					НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляИспользоватьПартии, Ложь, ВидСравненияКомпоновкиДанных.Равно);
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляВидОперации, СписокИсключенийВидовОпераций, ВидСравненияКомпоновкиДанных.НеВСписке);
					
					
					Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
					
					НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляПроверятьЗаполнениеПартии, Истина, ВидСравненияКомпоновкиДанных.Равно);
					
					Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
						РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
					КонецЕсли;
					
					РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
					
					НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным+".Партия", Справочники.ПартииНоменклатуры.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
					РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
					РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Для Каждого ТабличнаяЧасть Из СоответствиеИменТабличныхЧастей Цикл
			
			НаименованиеПоля =?(ЗначениеЗаполнено(ТабличнаяЧасть.Значение),ТабличнаяЧасть.Значение, ТабличнаяЧасть.Ключ + "Характеристика");
			ЗначениеПоиска = Форма.Элементы.Найти(НаименованиеПоля);
			
			Если ИспользоватьХарактеристики И НЕ ЗначениеПоиска = Неопределено И ТипЗнч(ЗначениеПоиска.Родитель) = Тип("ТаблицаФормы") Тогда
				ИмяПоляПроверятьЗаполнениеХарактеристики = ЗначениеПоиска.Родитель.ПутьКДанным + ".ПроверятьЗаполнениеХарактеристики";
				ИмяПоляИспользоватьХарактеристики = ЗначениеПоиска.Родитель.ПутьКДанным+".ИспользоватьХарактеристики";
				ИмяПоляХарактеристики = НаименованиеПоля; 
				
				НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляИспользоватьХарактеристики, Ложь, ВидСравненияКомпоновкиДанных.Равно);
				
				Если  Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
				
				НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляПроверятьЗаполнениеХарактеристики, Истина, ВидСравненияКомпоновкиДанных.Равно);
				
				Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
				
				НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным+".Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
				РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПоляХарактеристики);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
			КонецЕсли;
			
			НаименованиеПоля = ТабличнаяЧасть.Ключ + "Партия";
			ЗначениеПоиска = Форма.Элементы.Найти(НаименованиеПоля);
			
			Если ИспользоватьПартии И НЕ ЗначениеПоиска = Неопределено И ТипЗнч(ЗначениеПоиска.Родитель) = Тип("ТаблицаФормы") Тогда
				ИмяПоляИспользоватьПартии = ЗначениеПоиска.Родитель.ПутьКДанным+".ИспользоватьПартии";
				ИмяПолПартии = НаименованиеПоля; 
				ИмяПоляПроверятьЗаполнениеПартии = ЗначениеПоиска.Родитель.ПутьКДанным + ".ПроверятьЗаполнениеПартий";
				
				ИмяПоляВидОперации = "Объект.ВидОперации";
				СписокИсключенийВидовОпераций = Новый СписокЗначений;
				
				СписокИсключенийВидовОпераций.Добавить(Перечисления.ВидыОперацийПриходнаяНакладная.ПриемВПереработку);
				СписокИсключенийВидовОпераций.Добавить(Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию);
				СписокИсключенийВидовОпераций.Добавить(Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаОтветХранение);
				
				НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляИспользоватьПартии, Ложь, ВидСравненияКомпоновкиДанных.Равно);
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляВидОперации, СписокИсключенийВидовОпераций, ВидСравненияКомпоновкиДанных.НеВСписке);
				
				Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПолПартии);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "Текст", НСтр("ru = '<Не используется>'"));
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ТолькоПросмотр", Истина);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
				
				НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ИмяПоляПроверятьЗаполнениеПартии, Истина, ВидСравненияКомпоновкиДанных.Равно);
				
				Если Форма.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеПоступления", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				Если Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента" Тогда
					РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным + ".ЕстьВДокументеРеализации", Ложь, ВидСравненияКомпоновкиДанных.Равно);
				КонецЕсли;
				
				РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПолПартии);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Истина);
				
				НовоеУсловноеОформление = Форма.УсловноеОформление.Элементы.Добавить();
				РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, ЗначениеПоиска.Родитель.ПутьКДанным+".Партия", Справочники.ПартииНоменклатуры.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
				РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, ИмяПолПартии);
				РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ОтметкаНезаполненного", Ложь);
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Получает значение партии номенклатуры по умолчанию
//
Функция ЗначенияПартийНоменклатурыПоУмолчанию(Номенклатура, СтатусПартии = Неопределено, Контрагент = Неопределено) Экспорт 
	
	СписокСтатусов = Новый СписокЗначений;
	
	Если Не СтатусПартии = Неопределено Тогда
		Если Не ТипЗнч(СтатусПартии) = Тип("СписокЗначений")
			Тогда
			СписокСтатусов.Добавить(СтатусПартии);
		Иначе
			СписокСтатусов = СтатусПартии;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииКонтрагентов.Партия КАК Партия
	|ИЗ
	|	РегистрСведений.ПартииКонтрагентов КАК ПартииКонтрагентов
	|ГДЕ
	|	ПартииКонтрагентов.Номенклатура = &Номенклатура
	|	И ПартииКонтрагентов.Статус В (&СписокСтатусов)
	|	И ПартииКонтрагентов.Контрагент = &Контрагент";
	
	Если СписокСтатусов.Количество() Тогда
		Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ПартииКонтрагентов.Статус В (&СписокСтатусов)","");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		ВыборкаЗапроса = Запрос.Выполнить();
		Если ВыборкаЗапроса.Пустой() Тогда
			Запрос.УстановитьПараметр("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
		Иначе
			РезультатЗапроса = ВыборкаЗапроса.Выбрать();
		КонецЕсли;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПартииКонтрагентов.Контрагент = &Контрагент","");
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	
	Если РезультатЗапроса.Количество()>1 Тогда
		Возврат Неопределено
	Иначе	
		Если РезультатЗапроса.Следующий() Тогда
			Возврат РезультатЗапроса.Партия;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает статус партии, соответствующий операции документа
//
// Параметры:
//  Объект		 - ЛюбаяСсылка							 - Ссылка или ключ объекта, для которого определяются статусы партии
//  ВидОперации	 - ПеречислениеСсылка					 - Текущая операция объекта
//  ХозОперация	 - СправочникСсылка.ХозяйственныеОперации	 - Хозяйственная операция
// 
// Возвращаемое значение:
//  СписокЗначений - Список доступных статусов партий
//
Функция СоответствиеВидаОперацииИлиХозОперацииСтатусуПартии(Объект = Неопределено, ВидОперации = Неопределено, 
	ХозОперация = Неопределено) Экспорт
	
	ОперацияДокумента = ?(Не ВидОперации = Неопределено, ВидОперации, ХозОперация);
	
	ОтборСтатус = Новый СписокЗначений;
	
	Если ОперацияДокумента = Неопределено Тогда
		ОтборСтатус.Добавить(Перечисления.СтатусыПартий.СобственныеЗапасы);
		ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ДавальческоеСырье);
		ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ОтветственноеХранение);
		ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
		Возврат ОтборСтатус;
	КонецЕсли;
	
	Если Не ОперацияДокумента = Неопределено 
		И ТипЗнч(ОперацияДокумента) = Тип("СправочникСсылка.ХозяйственныеОперации") Тогда
		
		Если ОперацияДокумента = Справочники.ХозяйственныеОперации.ВозвратКомитенту
			Или ОперацияДокумента = Справочники.ХозяйственныеОперации.ПриемНаКомиссию Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
		ИначеЕсли ОперацияДокумента = Справочники.ХозяйственныеОперации.ПриемНаОтветХранение
			Или ОперацияДокумента = Справочники.ХозяйственныеОперации.ВозвратСОтветХранения Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ОтветственноеХранение);
		ИначеЕсли ОперацияДокумента = Справочники.ХозяйственныеОперации.ПриемВПереработку
			Или ОперацияДокумента = Справочники.ХозяйственныеОперации.ВозвратИзПереработки Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ДавальческоеСырье);
		Иначе
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.СобственныеЗапасы);
			
			Если ОперацияДокумента = Справочники.ХозяйственныеОперации.ПродажаПокупателю Тогда
				ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ОтборСтатус.Количество()Тогда
			СообщитьЧтоВыборПартииНевозможен(Объект, ОперацияДокумента);
			Возврат Неопределено;
		КонецЕсли;
		
	ИначеЕсли Не ОперацияДокумента = Неопределено 
		И (ТипЗнч(ОперацияДокумента) = Тип("ПеречислениеСсылка.ВидыОперацийРасходнаяНакладная") 
		ИЛИ ТипЗнч(ОперацияДокумента) = Тип("ПеречислениеСсылка.ВидыОперацийПриходнаяНакладная"))Тогда
		
		Если ОперацияДокумента = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту
			Или ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
		ИначеЕсли ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаОтветХранение
			Или ОперацияДокумента = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратСОтветХранения Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ОтветственноеХранение);
		ИначеЕсли ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемВПереработку
			Или ОперацияДокумента = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратИзПереработки Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ДавальческоеСырье);
		ИначеЕсли ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.СобственныеЗапасы);
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
		Иначе
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.СобственныеЗапасы);
			
			Если ОперацияДокумента = Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю Тогда
				ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ОтборСтатус.Количество() Тогда
			СообщитьЧтоВыборПартииНевозможен(Объект, ОперацияДокумента);
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		
		Если ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
		ИначеЕсли ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаОтветХранение Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ОтветственноеХранение);
		ИначеЕсли ОперацияДокумента = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемВПереработку Тогда
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ДавальческоеСырье);
		Иначе
			ОтборСтатус.Добавить(Перечисления.СтатусыПартий.СобственныеЗапасы);
			
			Если ОперацияДокумента = Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю Тогда
				ОтборСтатус.Добавить(Перечисления.СтатусыПартий.ТоварыНаКомиссии);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ОтборСтатус.Количество() Тогда
			СообщитьЧтоВыборПартииНевозможен(Объект, ОперацияДокумента);
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОтборСтатус;
	
КонецФункции

// Возвращает признак того, что партия является основной для контрагента
//
// Параметры:
//  Ссылка	 - СправочникСсылка.ПартииНоменклатуры	 - Проверяемая партия
// 
// Возвращаемое значение:
//  Булево - Признак того, что партия является основной
//
Функция ПартияУстановленаПоУмолчанию(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПартииКонтрагентов.Партия КАК Партия
	|ИЗ
	|	РегистрСведений.ПартииКонтрагентов КАК ПартииКонтрагентов
	|ГДЕ
	|	ПартииКонтрагентов.Партия = &Ссылка";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Заполняет колонки табличной части документа Заказ на производство значениями по остаткам и резервам
//
Процедура ЗаполнитьЗначенияРезервовИОстатокЗаказНаПроизводство(Объект, СтруктураДанные = Неопределено, НомерВариантаКП = 0, НоменклатураОтбора = Неопределено, РезервированиеЗапасов = Ложь) Экспорт
	
	Если Не Объект.Запасы.Количество() Тогда Возврат КонецЕсли;
	
	ИмяТЧ = "Запасы";
	
	Запрос = Новый Запрос;
	
	Если СтруктураДанные = Неопределено Тогда
		
		Если ЗначениеЗаполнено(НоменклатураОтбора) Тогда
			ПараметрыОтбора = Новый Структура("Номенклатура", НоменклатураОтбора);
			СтрокиДляВыгрузки = Объект.Запасы.НайтиСтроки(ПараметрыОтбора);
		Иначе
			СтрокиДляВыгрузки = Неопределено;
		КонецЕсли;
		МассивНоменклатуры = Объект.Запасы.Выгрузить(СтрокиДляВыгрузки,"Номенклатура");
		МассивХарактеристик = Объект.Запасы.Выгрузить(СтрокиДляВыгрузки,"Характеристика");
		МассивПартий = Объект.Запасы.Выгрузить(СтрокиДляВыгрузки,"Партия");
	Иначе
		
		Номенклатура = СтруктураДанные.Номенклатура;
		Характеристика = ?(ЗначениеЗаполнено(СтруктураДанные.Характеристика)
		, СтруктураДанные.Характеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		Партия = ?(ЗначениеЗаполнено(СтруктураДанные.Партия), СтруктураДанные.Партия, Справочники.ПартииНоменклатуры.ПустаяСсылка());
		
		ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия", Номенклатура, Характеристика, Партия);

		СтрокиДляВыгрузки = Объект.Запасы.НайтиСтроки(ПараметрыОтбора);
		
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(Номенклатура);
		МассивХарактеристик = Новый Массив;
		МассивХарактеристик.Добавить(Характеристика);
		МассивПартий = Новый Массив;
		МассивПартий.Добавить(Партия);
	КонецЕсли;
	
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	Если Не СтрокиДляВыгрузки = Неопределено Тогда
		ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, Количество, ЕдиницаИзмерения, СтруктурнаяЕдиница, ЗаказПокупателя");
		СтрокиОбходаЗапасов = СтрокиДляВыгрузки;
	Иначе
		ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(,"Номенклатура, Характеристика, Партия, Количество, ЕдиницаИзмерения, СтруктурнаяЕдиница, ЗаказПокупателя");
		СтрокиОбходаЗапасов = Объект.Запасы;
	КонецЕсли;
	
	МассивЗаказов = Новый Массив;
	
	Для Каждого СтрокаТЧ Из Объект.Запасы Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.ЗаказПокупателя) И МассивЗаказов.Найти(СтрокаТЧ.ЗаказПокупателя) = Неопределено Тогда
			МассивЗаказов.Добавить(СтрокаТЧ.ЗаказПокупателя);
		КонецЕсли;
	КонецЦикла;
	
	Если Не МассивЗаказов.Количество() И ЗначениеЗаполнено(Объект.ЗаказПокупателя) Тогда
		МассивЗаказов.Добавить(Объект.ЗаказПокупателя)
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатура", ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Характеристика", МассивХарактеристик);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЗаказПокупателя", МассивЗаказов);
	Запрос.УстановитьПараметр("ЕстьЗаказы", ?(МассивЗаказов.Количество(), Истина, Ложь));
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	
	Запрос.Текст = ТекстЗапросаОстаткиИРезервыВРазрезеЗаказов();
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	РассчитатьКоличествоПоСтрокамСогласноКоэффициентам(ТаблицаНоменклатуры);
	
	ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Партия, ЗаказПокупателя", "Количество");
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ЗаказПокупателя");
	ПараметрыОтбораДляПоискаОстатков = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ЗаказПокупателя");
	ПараметрыОтбораСкладБезЗаказа = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница");
	
	ПараметрыОтбораБезСклада = Новый Структура();
	ПараметрыОтбораБезСклада.Вставить("Номенклатура");
	ПараметрыОтбораБезСклада.Вставить("Характеристика");
	ПараметрыОтбораБезСклада.Вставить("Партия");
	ПараметрыОтбораБезСклада.Вставить("ЗаказПокупателя");
	
	ПараметрыОтбораБезСкладаБезЗаказа = Новый Структура();
	ПараметрыОтбораБезСкладаБезЗаказа.Вставить("Номенклатура");
	ПараметрыОтбораБезСкладаБезЗаказа.Вставить("Характеристика");
	ПараметрыОтбораБезСкладаБезЗаказа.Вставить("Партия");
	
	ПараметрыОтбораБезСкладаБезПартии = Новый Структура();
	ПараметрыОтбораБезСкладаБезПартии.Вставить("Номенклатура");
	ПараметрыОтбораБезСкладаБезПартии.Вставить("Характеристика");
	ПараметрыОтбораБезСкладаБезПартии.Вставить("ЗаказПокупателя");

	НомерСтроки = 0;
	ОбъектПроведен = Объект.Проведен;
	ЕстьДубли = Ложь;
	
	СтруктураПараметровОтбора = Новый Структура("ССкладом, БезСклада, БезСкладаСЗаказом", ПараметрыОтбораДляПоискаОстатков, ПараметрыОтбораБезСклада, ПараметрыОтбораБезСкладаБезПартии);
	ЗаполнитьНачальныеДанныеДляОбработкиТабличнойЧастиЗаказНаПроизводство(Объект, МассивЗаказов, СтрокиОбходаЗапасов, ТаблицаНоменклатуры, СтруктураПараметровОтбора);
	
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		НомерСтроки = НомерСтроки + 1;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		ПараметрыОтбора.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ПараметрыОтбораБезСкладаБезЗаказа.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСкладаБезЗаказа.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСкладаБезЗаказа.Партия = СтрокаТабличнойЧасти.Партия;
		
		ПараметрыОтбораСкладБезЗаказа.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораСкладБезЗаказа.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораСкладБезЗаказа.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораСкладБезЗаказа.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		
		ПараметрыОтбораДляПоискаОстатков.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораДляПоискаОстатков.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораДляПоискаОстатков.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораДляПоискаОстатков.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		ПараметрыОтбораДляПоискаОстатков.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ЭтоДубльСтроки = СтрокаТабличнойЧасти.ЭтоДубльСтроки;
		ЕстьДубли = ?(Не ЕстьДубли, ЭтоДубльСтроки, ЕстьДубли);
	
		СтрокаТабличнойЧасти.МожноОтгрузить = 0;
		СтрокаТабличнойЧасти.Обеспечено = 0;
		СтрокаТабличнойЧасти.ВРезерве = 0;
		СтрокаТабличнойЧасти.Зарезервировано = 0;
		
		НайденныеСтрокиОстатки = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбораДляПоискаОстатков);
		СтрокаОстатка = ?(НайденныеСтрокиОстатки.Количество(), НайденныеСтрокиОстатки[0], Неопределено);
		
		Если СтрокаОстатка = Неопределено Тогда
			СтрокаТабличнойЧасти.ОстатокСвободно = 0;
			СтрокаТабличнойЧасти.КПоступлению = 0;
			СтрокаТабличнойЧасти.ОстатокОбщий = 0;
			СтрокаТабличнойЧасти.Размещено = 0;
			СтрокаТабличнойЧасти.СрокПополнения = 1;
			Продолжить
		КонецЕсли;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораБезСклада.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ОстатокСвободно = Окр(СтрокаОстатка.ОстатокТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницах = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораСкладБезЗаказа, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезерв = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницах/КоэффициентЕдиницыИзмерения,3);
		
		ЗарезервированоЗаказомСКоэффициентом = Окр(СтрокаОстатка.ЗарезервированоЗаказом/КоэффициентЕдиницыИзмерения,3);
		
		СтрокаТабличнойЧасти.ОстатокСвободно = (ОстатокСвободно +  ЗарезервированоЗаказомСКоэффициентом - ИтогПоЗначениюВРезерв);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезервПоВсемСкладам = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезервТекСклад = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		РезервНаСкладахСКоэффициентом = Окр(СтрокаОстатка.РезервНаСкладах/КоэффициентЕдиницыИзмерения,3);
		СтрокаТабличнойЧасти.ВРезерве = РезервНаСкладахСКоэффициентом + ИтогПоЗначениюВРезервПоВсемСкладам;
		
		РезервТекСкладСКоэффициентом = Окр(СтрокаОстатка.РезервТекСклад/КоэффициентЕдиницыИзмерения,3);
		СтрокаТабличнойЧасти.Зарезервировано = РезервТекСкладСКоэффициентом + ИтогПоЗначениюВРезервТекСклад;
		
		ЗаказаноБезРезерваСКоэффициентом = Окр(СтрокаОстатка.ЗаказаноБезРезерва/КоэффициентЕдиницыИзмерения,3);
		ОстатокОбщийСКоэффициентом = Окр(СтрокаОстатка.ОстатокОбщий/КоэффициентЕдиницыИзмерения,3);
		
		СтрокаТабличнойЧасти.КПоступлению = ЗаказаноБезРезерваСКоэффициентом;
		
		ЗарезервированоЗаказомСКоэффициентомВсеСклады = Окр(СтрокаОстатка.ЗарезервированоЗаказомВсеСклады/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСкладаБезЗаказа, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезервПоВсемСкладам = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам/КоэффициентЕдиницыИзмерения,3);
		
		Если Не ОбъектПроведен Тогда
			СтрокаТабличнойЧасти.ОстатокОбщий = ОстатокОбщийСКоэффициентом - ИтогПоЗначениюВРезервПоВсемСкладам;
		Иначе
			СтрокаТабличнойЧасти.ОстатокОбщий = ОстатокОбщийСКоэффициентом - ИтогПоЗначениюВРезервПоВсемСкладам + ЗарезервированоЗаказомСКоэффициентомВсеСклады;
		КонецЕсли;
		
		Если РезервированиеЗапасов Тогда
			
			Если ОбъектПроведен Тогда
				
				СтрокаТабличнойЧасти.Размещено = СтрокаОстатка.РезервЗаказано;
				
				Если Не СтрокаТабличнойЧасти.НеОтгружено = 0 Тогда
					СтрокаТабличнойЧасти.Обеспечено = СтрокаТабличнойЧасти.ВРезерве + СтрокаТабличнойЧасти.Размещено;
				КонецЕсли;
			Иначе
				
				СуммаПоСтрокамРезерв = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "Резервировать", НомерВариантаКП,,ИмяТЧ);
				СуммаПоСтрокамСТекКоэффициентомРезерв = СуммаПоСтрокамРезерв / КоэффициентЕдиницыИзмерения;
				СтрокаТабличнойЧасти.Обеспечено = СуммаПоСтрокамСТекКоэффициентомРезерв;
				
			КонецЕсли;
			
			Если Не ЭтоДубльСтроки Тогда
				РазностьСколькоНужноИСколькоЕсть = (СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.ВРезерве) - СтрокаТабличнойЧасти.НеОтгружено;
				МожноОтгрузитьВсего = ?(РазностьСколькоНужноИСколькоЕсть > 0, СтрокаТабличнойЧасти.НеОтгружено, СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.ВРезерве);
				СтрокаТабличнойЧасти.МожноОтгрузить = МожноОтгрузитьВсего;
			КонецЕсли
			
		Иначе
			
			Если Не ЭтоДубльСтроки Тогда
				РазностьСколькоНужноИСколькоЕсть = СтрокаТабличнойЧасти.ОстатокСвободно - СтрокаТабличнойЧасти.НеОтгружено;
				МожноОтгрузитьВсего = ?(РазностьСколькоНужноИСколькоЕсть > 0, СтрокаТабличнойЧасти.НеОтгружено, СтрокаТабличнойЧасти.ОстатокСвободно);
				СтрокаТабличнойЧасти.МожноОтгрузить = МожноОтгрузитьВсего;
			КонецЕсли
			
		КонецЕсли;
		
		Если Не ЭтоДубльСтроки 
			И Не СтрокаТабличнойЧасти.НеОтгружено = 0 
			И СтрокаТабличнойЧасти.МожноОтгрузить > 0 Тогда
			СуммаОстаткаИРезерва = СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.Зарезервировано;
			СтрокаТабличнойЧасти.ИндексЦвета = ?(СуммаОстаткаИРезерва < СтрокаТабличнойЧасти.НеОтгружено, 1,0);
		КонецЕсли;
		
		Если СтрокаОстатка.КоличествоДокументовЗаказано > 1 Тогда
			
			РасшифровкаСчетчика = ПредметИсчисления(
			СтрокаОстатка.КоличествоДокументовЗаказано,
			НСтр("ru = 'документ'"),
			НСтр("ru = 'документа'"),
			НСтр("ru = 'документов'"),
			"м");
			
			СтрокаТабличнойЧасти.ДатаПоступления = Строка(СтрокаОстатка.КоличествоДокументовЗаказано) + РасшифровкаСчетчика;
		Иначе
			СтрокаТабличнойЧасти.ДатаПоступления = ?(Не ЗначениеЗаполнено(СтрокаОстатка.ДатаПоступления),"", СтрокаОстатка.ДатаПоступления);
		КонецЕсли;
		
	КонецЦикла;
	
	// Дополним информацию по дублям строк
	Если Не ЕстьДубли Тогда Возврат КонецЕсли;

	ПараметрыОтбораДляДублей = Новый Структура("ЭтоДубльСтроки",  Истина);


	СтрокиДляОбхода = Объект.Запасы.НайтиСтроки(ПараметрыОтбораДляДублей);
	ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(СтрокиДляОбхода,"Номенклатура, Характеристика, Партия, ОстатокСвободно, Зарезервировано, ВРезерве, СтруктурнаяЕдиница, ЗаказПокупателя");
	ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Партия, ОстатокСвободно, Зарезервировано, ВРезерве, СтруктурнаяЕдиница, ЗаказПокупателя");
	
	ТаблицаОбхода = ТаблицаНоменклатуры.Скопировать(,"Номенклатура, Характеристика, Партия, ЗаказПокупателя");
	ТаблицаОбхода.Свернуть("Номенклатура, Характеристика, Партия, ЗаказПокупателя");
	
	Для Каждого СтрокаИзДублейСтрок Из ТаблицаОбхода Цикл
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаИзДублейСтрок.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаИзДублейСтрок.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаИзДублейСтрок.Партия;
		ПараметрыОтбораБезСклада.ЗаказПокупателя = СтрокаИзДублейСтрок.ЗаказПокупателя;
		
		СтрокиДляОбхода = Объект.Запасы.НайтиСтроки(ПараметрыОтбораБезСклада);
		
		ИндексЦвета = 0;
		
		Для Каждого СтрокаТабличнойЧасти Из СтрокиДляОбхода Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
				Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
				Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
				КоэффициентЕдиницыИзмерения = 1;
			Иначе
				КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
			
			// Колонка Можно отгрузить
			ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "НеОтгружено", НомерВариантаКП,,ИмяТЧ);
			ИтогПоЗначениюНеОтгружено = Окр(ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах/КоэффициентЕдиницыИзмерения,3);
			
			СтрокиДляВыгрузки = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбораБезСклада);
			ТаблицаДляИтоговПоСкладу = ТаблицаНоменклатуры.Скопировать(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, ОстатокСвободно");
			
			СвободноДляРезерва = ТаблицаДляИтоговПоСкладу.Итог("ОстатокСвободно");
			
			ДоступноКОтгрузке = СвободноДляРезерва + СтрокаТабличнойЧасти.ВРезерве;
			
			СтрокаТабличнойЧасти.МожноОтгрузить = ?(ИтогПоЗначениюНеОтгружено < ДоступноКОтгрузке, ИтогПоЗначениюНеОтгружено, ДоступноКОтгрузке);
			
			// Цвет значения колонки
			Если Не СтрокаТабличнойЧасти.НеОтгружено = 0 
				И СтрокаТабличнойЧасти.МожноОтгрузить > 0 Тогда
				
				ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
				ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
				ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
				ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
				ПараметрыОтбора.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
				
				ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "НеОтгружено", НомерВариантаКП,,ИмяТЧ);
				ИтогПоЗначениюНеОтгружено = Окр(ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах/КоэффициентЕдиницыИзмерения,2);
				
				ДоступноКОтгрузке = СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.Зарезервировано;
				
				Если ИтогПоЗначениюНеОтгружено > ДоступноКОтгрузке Тогда
					ИндексЦвета = 1;
				Иначе
					СтрокаТабличнойЧасти.ИндексЦвета = 0;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ИндексЦвета = 0 Тогда Продолжить КонецЕсли;
		
		Для Каждого СтрокаТабличнойЧасти Из СтрокиДляОбхода Цикл
			СтрокаТабличнойЧасти.ИндексЦвета = ИндексЦвета;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Предварительно заполняет колонки табличной части документа Заказ на производство значениями по остаткам и резервам
//
Процедура ЗаполнитьНачальныеДанныеДляОбработкиТабличнойЧастиЗаказНаПроизводство(Объект, МассивЗаказов, СтрокиОбходаЗапасов, ТаблицаНоменклатуры, СтруктураПараметровОтбора)
	
	ЕстьЗаказ = (МассивЗаказов.Количество()>0 ИЛИ НЕ Объект.Ссылка.Пустая());
	ИспользоватьРезервирование = ПолучитьФункциональнуюОпцию("РезервированиеЗапасов");
	
	ДокументСохранен = ЗначениеЗаполнено(Объект.Ссылка);
	
	ПараметрыОтбораБезСклада = СтруктураПараметровОтбора.БезСклада;
	ПараметрыОтбора = СтруктураПараметровОтбора.ССкладом;
	ПараметрыОтбораБезСкладаБезПартииСЗаказом = СтруктураПараметровОтбора.БезСкладаСЗаказом;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", МассивЗаказов);
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", Объект.Ссылка);
	Запрос.УстановитьПараметр("ЕстьЗаказы", ИспользоватьРезервирование И ЕстьЗаказ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПотребностьВЗапасах.Номенклатура КАК Номенклатура,
	|	ПотребностьВЗапасах.Характеристика КАК Характеристика,
	|	СУММА(ПотребностьВЗапасах.Количество) КАК Количество,
	|	СУММА(ПотребностьВЗапасах.Количество) КАК ОтгруженоИтог,
	|	ПотребностьВЗапасах.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПотребностьВЗапасах.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ИЗ
	|	РегистрНакопления.ПотребностьВЗапасах КАК ПотребностьВЗапасах
	|ГДЕ
	|	ПотребностьВЗапасах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ВЫБОР
	|			КОГДА &ЕстьЗаказы
	|				ТОГДА ПотребностьВЗапасах.ЗаказПокупателя В (&ЗаказПокупателя)
	|						ИЛИ ПотребностьВЗапасах.ЗаказНаПроизводство = &ЗаказНаПроизводство
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПотребностьВЗапасах.ЗаказПокупателя,
	|	ПотребностьВЗапасах.ЗаказНаПроизводство,
	|	ПотребностьВЗапасах.Характеристика,
	|	ПотребностьВЗапасах.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия,
	|	СУММА(Запасы.Количество) КАК Количество,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(Запасы.Количество) КАК ОтгруженоИтог,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ВЫБОР
	|			КОГДА &ЕстьЗаказы
	|				ТОГДА Запасы.ЗаказПокупателя В (&ЗаказПокупателя)
	|		КОНЕЦ
	|	И Запасы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|	И Запасы.СчетУчета = Запасы.Номенклатура.СчетУчетаЗапасов
	|	И НЕ ТИПЗНАЧЕНИЯ(Запасы.Регистратор) = ТИП(Документ.РезервированиеЗапасов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Партия,
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.ЗаказПокупателя";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ТаблицаОтгрузкаПоЗаказу = ПакетЗапросов[0].Выгрузить();
	ТаблицаОтгрузкаРезервовПоСкладам = ПакетЗапросов[1].Выгрузить();
	
	ПараметрыОтбораБезСкладаБезПартииСЗаказами = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыОтбораБезСкладаБезПартииСЗаказом);
	ПараметрыОтбораБезСкладаБезПартииСЗаказами.Вставить("ЗаказНаПроизводство", Объект.Ссылка);
	
	// Заполним по отгрузкам резервов
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
		
		СтрокаТабличнойЧасти.НеОтгружено = 0;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		КоличествоСКоэффициентом = СтрокаТабличнойЧасти.Количество * КоэффициентЕдиницыИзмерения;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		ПараметрыОтбора.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораБезСклада.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ПараметрыОтбораБезСкладаБезПартииСЗаказами.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСкладаБезПартииСЗаказами.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСкладаБезПартииСЗаказами.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ОтгруженоВБазовыхЕд = 0;
		Отгружено = 0;
		ОтгруженоИтог = 0;
		
		СтрокиПоНоменклатуре = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбораБезСклада);
		СуммаПоСтрокам = СтрокиПоНоменклатуре[0].Количество;
		СуммаПоСтрокамСТекКоэффициентом = СуммаПоСтрокам / КоэффициентЕдиницыИзмерения;
		
		Если Не ДокументСохранен Тогда 
			СтрокаТабличнойЧасти.НеОтгружено = СтрокаТабличнойЧасти.Количество;
			СтрокаТабличнойЧасти.Отгружено = 0;
			СтрокаТабличнойЧасти.ПредставлениеНеОтгружено = "";
		Иначе
			
			НайденныеСтрокиОтгруженоПоСкладам = ТаблицаОтгрузкаРезервовПоСкладам.НайтиСтроки(ПараметрыОтбора);
			НайденныеСтрокиОтгружено = ТаблицаОтгрузкаПоЗаказу.НайтиСтроки(ПараметрыОтбораБезСкладаБезПартииСЗаказом);
			
			Если НайденныеСтрокиОтгруженоПоСкладам.Количество() Тогда
				ОтгруженоВБазовыхЕд = ?(НайденныеСтрокиОтгруженоПоСкладам.Количество(), НайденныеСтрокиОтгруженоПоСкладам[0].Количество, 0);
				Отгружено = Окр(ОтгруженоВБазовыхЕд/КоэффициентЕдиницыИзмерения,3);
			КонецЕсли;
			
			Если Отгружено > 0 И НайденныеСтрокиОтгружено.Количество() Тогда
				
				Если СтрокаТабличнойЧасти.Количество >= Отгружено Тогда
					СтрокаТабличнойЧасти.Отгружено = Отгружено;
					НайденныеСтрокиОтгруженоПоСкладам[0].Количество = 0;
					СтрокаТабличнойЧасти.НеОтгружено = ?(СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.Отгружено<0, 0, СтрокаТабличнойЧасти.Количество - Отгружено);
				Иначе
					СтрокаТабличнойЧасти.Отгружено = СтрокаТабличнойЧасти.Количество;
					НайденныеСтрокиОтгруженоПоСкладам[0].Количество = ОтгруженоВБазовыхЕд - СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
					СтрокаТабличнойЧасти.НеОтгружено = 0;
				КонецЕсли;
				
				Если НайденныеСтрокиОтгружено[0].ОтгруженоИтог > СуммаПоСтрокам Тогда
					НайденныеСтрокиОтгружено[0].Количество = СуммаПоСтрокам;
					НайденныеСтрокиОтгружено[0].ОтгруженоИтог = СуммаПоСтрокам;
				КонецЕсли;
				
				НайденныеСтрокиОтгружено[0].Количество = НайденныеСтрокиОтгружено[0].Количество - СтрокаТабличнойЧасти.Отгружено;
				
			Иначе
				СтрокаТабличнойЧасти.Отгружено = 0;
				СтрокаТабличнойЧасти.НеОтгружено = СтрокаТабличнойЧасти.Количество;
			КонецЕсли;
	
		КонецЕсли;

		СтрокаТабличнойЧасти.СрокПополнения = СтрокаТабличнойЧасти.Номенклатура.СрокПополнения;
		
	КонецЦикла;
	
	// Дополним по отгрузкам без резервов
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
			
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		КоличествоСКоэффициентом = СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораБезСклада.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ПараметрыОтбораБезСкладаБезПартииСЗаказами.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСкладаБезПартииСЗаказами.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСкладаБезПартииСЗаказами.ЗаказПокупателя = СтрокаТабличнойЧасти.ЗаказПокупателя;
		
		ОтгруженоВБазовыхЕд = 0;
		Отгружено = 0;
		НеОтгруженоИтог = 0;
		ОтгруженоИтог = 0;
		
		СтрокиПоНоменклатуре = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбораБезСклада);
		СуммаПоСтрокам = СтрокиПоНоменклатуре[0].Количество;
		СуммаПоСтрокамСТекКоэффициентом = СуммаПоСтрокам / КоэффициентЕдиницыИзмерения;
		
		НайденныеСтрокиОтгружено = ТаблицаОтгрузкаПоЗаказу.НайтиСтроки(ПараметрыОтбораБезСкладаБезПартииСЗаказом);
		
		Если НайденныеСтрокиОтгружено.Количество() Тогда
			Отгружено = СтрокаТабличнойЧасти.Отгружено + Окр(НайденныеСтрокиОтгружено[0].Количество/КоэффициентЕдиницыИзмерения,3);
			ОтгруженоИтог = Окр(НайденныеСтрокиОтгружено[0].ОтгруженоИтог/КоэффициентЕдиницыИзмерения,3, РежимОкругления.Окр15как20);
			ОтгруженоВБазовыхЕд = НайденныеСтрокиОтгружено[0].Количество;
		КонецЕсли;
		
		НеОтгруженоИтог = СуммаПоСтрокамСТекКоэффициентом - ОтгруженоИтог;
		
		Если Не Отгружено = 0 Тогда
			
			Если СтрокаТабличнойЧасти.Количество >= Отгружено Тогда
				
				СтрокаТабличнойЧасти.Отгружено = Отгружено;
				НайденныеСтрокиОтгружено[0].Количество = 0;
				СтрокаТабличнойЧасти.НеОтгружено = ?(СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.Отгружено<0, 0, СтрокаТабличнойЧасти.Количество - Отгружено);
			Иначе
				НайденныеСтрокиОтгружено[0].Количество = ОтгруженоВБазовыхЕд - (СтрокаТабличнойЧасти.Количество-СтрокаТабличнойЧасти.Отгружено)*КоэффициентЕдиницыИзмерения;
				СтрокаТабличнойЧасти.Отгружено = СтрокаТабличнойЧасти.Количество;
				СтрокаТабличнойЧасти.НеОтгружено = 0;
			КонецЕсли
			
		Иначе
			СтрокаТабличнойЧасти.Отгружено = 0;
			СтрокаТабличнойЧасти.НеОтгружено = СтрокаТабличнойЧасти.Количество;
		КонецЕсли;
		
		ЭтоДубльСтроки = Ложь;
		СтрокаТабличнойЧасти.ПредставлениеНеОтгружено = "";
		
		Если Не СтрокаТабличнойЧасти.НеОтгружено = НеОтгруженоИтог Тогда
			Если Не СтрокаТабличнойЧасти.НеОтгружено = 0 Тогда 
				СтрокаТабличнойЧасти.ПредставлениеНеОтгружено = Формат(СтрокаТабличнойЧасти.НеОтгружено, "ЧДЦ = 3")+" / " + Формат(НеОтгруженоИтог, "ЧДЦ = 3");
			КонецЕсли;
			ЭтоДубльСтроки = Истина;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.ЭтоДубльСтроки = ЭтоДубльСтроки;
		СтрокаТабличнойЧасти.НеОтгруженоВсего = НеОтгруженоИтог;
		
		Если КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокам, "ЧДЦ=3");
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокамСТекКоэффициентом, "ЧДЦ=3");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонки табличной части документа Заказ покупателя значениями по остаткам и резервам
//
Процедура ЗаполнитьЗначенияРезервовИОстатокНоменклатурыВТабличнойЧасти(Объект, СтруктураДанные = Неопределено, НомерВариантаКП = 0, НоменклатураОтбора = Неопределено, РезервированиеЗапасов = Ложь, ИмяТЧ = "Запасы") Экспорт
	
	Если Не Объект[ИмяТЧ].Количество() Тогда Возврат КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если СтруктураДанные = Неопределено Тогда
		
		Если ИмяТЧ = "Запасы" Тогда
			Если Не ЗначениеЗаполнено(НоменклатураОтбора) Тогда
				ПараметрыОтбора = Новый Структура("НомерВариантаКП", НомерВариантаКП);
			Иначе
				ПараметрыОтбора = Новый Структура("НомерВариантаКП, Номенклатура", НомерВариантаКП, НоменклатураОтбора);
			КонецЕсли;
			СтрокиДляВыгрузки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
			МассивНоменклатуры = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки,"Номенклатура");
			МассивХарактеристик = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки,"Характеристика");
			МассивПартий = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки,"Партия");
		Иначе
			СтрокиДляВыгрузки = Неопределено;
			МассивНоменклатуры = Объект[ИмяТЧ].Выгрузить(,"Номенклатура");
			МассивХарактеристик = Объект[ИмяТЧ].Выгрузить(,"Характеристика");
			МассивПартий = Объект[ИмяТЧ].Выгрузить(,"Партия");
		КонецЕсли;
		
	Иначе
		
		Номенклатура = СтруктураДанные.Номенклатура;
		Характеристика = ?(СтруктураДанные.ИспользоватьХарактеристики И ЗначениеЗаполнено(СтруктураДанные.Характеристика)
		, СтруктураДанные.Характеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		Партия = ?(СтруктураДанные.ИспользоватьПартии, СтруктураДанные.Партия, Справочники.ПартииНоменклатуры.ПустаяСсылка());
		
		Если ИмяТЧ = "Запасы" Тогда
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, НомерВариантаКП", Номенклатура, Характеристика, Партия, НомерВариантаКП);
		Иначе
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия", Номенклатура, Характеристика, Партия);
		КонецЕсли;
	
		СтрокиДляВыгрузки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
		
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(Номенклатура);
		МассивХарактеристик = Новый Массив;
		МассивХарактеристик.Добавить(Характеристика);
		МассивПартий = Новый Массив;
		МассивПартий.Добавить(Партия);
		
	КонецЕсли;
	
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	Если Не СтрокиДляВыгрузки = Неопределено Тогда
		ТаблицаНоменклатуры = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв, Количество, ЕдиницаИзмерения");
		СтрокиОбходаЗапасов = СтрокиДляВыгрузки;
	Иначе
		ТаблицаНоменклатуры = Объект[ИмяТЧ].Выгрузить(,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв, Количество, ЕдиницаИзмерения");
		СтрокиОбходаЗапасов = Объект[ИмяТЧ];
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатура", ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Характеристика", МассивХарактеристик);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЗаказПокупателя", Объект.Ссылка);
	Если ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("ОрганизацииПередачи",
			РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.ПолучитьСписокОрганизацийДляОстатков(Организация));	
	Иначе
		Запрос.УстановитьПараметр("ОрганизацииПередачи", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаОстаткиИРезервы();
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	РассчитатьКоличествоПоСтрокамСогласноКоэффициентам(ТаблицаНоменклатуры);
	
	ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Партия", "Количество");
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв");
	
	ПараметрыОтбораБезСклада = Новый Структура();
	ПараметрыОтбораБезСклада.Вставить("Номенклатура");
	ПараметрыОтбораБезСклада.Вставить("Характеристика");
	ПараметрыОтбораБезСклада.Вставить("Партия");

	НомерСтроки = 0;
	ОбъектПроведен = Объект.Проведен;
	ЕстьДубли = Ложь;
	
	СтруктураПараметровОтбора = Новый Структура("ССкладом, БезСклада", ПараметрыОтбора, ПараметрыОтбораБезСклада);
	ЗаполнитьНачальныеДанныеДляОбработкиТабличнойЧасти(Объект, СтрокиОбходаЗапасов, ТаблицаНоменклатуры, СтруктураПараметровОтбора);
	
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		НомерСтроки = НомерСтроки + 1;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.СтруктурнаяЕдиницаРезерв = СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв;
		
		ЭтоДубльСтроки = СтрокаТабличнойЧасти.ЭтоДубльСтроки;
		ЕстьДубли = ?(Не ЕстьДубли, ЭтоДубльСтроки, ЕстьДубли);
	
		СтрокаТабличнойЧасти.МожноОтгрузить = 0;
		СтрокаТабличнойЧасти.Обеспечено = 0;
		СтрокаТабличнойЧасти.ВРезерве = 0;
		СтрокаТабличнойЧасти.Зарезервировано = 0;
		
		НайденныеСтрокиОстатки = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
		СтрокаОстатка = ?(НайденныеСтрокиОстатки.Количество(), НайденныеСтрокиОстатки[0], Неопределено);
		
		Если СтрокаОстатка = Неопределено Тогда
			СтрокаТабличнойЧасти.ОстатокСвободно = 0;
			СтрокаТабличнойЧасти.КПоступлению = 0;
			СтрокаТабличнойЧасти.ОстатокОбщий = 0;
			СтрокаТабличнойЧасти.Размещено = 0;
			СтрокаТабличнойЧасти.СрокПополнения = 1;
			Продолжить
		КонецЕсли;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		
		ОстатокСвободно = Окр(СтрокаОстатка.ОстатокТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницах = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезерв = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницах/КоэффициентЕдиницыИзмерения,3);
		
		ЗарезервированоЗаказомСКоэффициентом = Окр(СтрокаОстатка.ЗарезервированоЗаказом/КоэффициентЕдиницыИзмерения,3);
		
		СтрокаТабличнойЧасти.ОстатокСвободно = (ОстатокСвободно +  ЗарезервированоЗаказомСКоэффициентом - ИтогПоЗначениюВРезерв);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезервПоВсемСкладам = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП,,ИмяТЧ);
		ИтогПоЗначениюВРезервТекСклад = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		РезервНаСкладахСКоэффициентом = Окр(СтрокаОстатка.РезервНаСкладах/КоэффициентЕдиницыИзмерения,3);
		СтрокаТабличнойЧасти.ВРезерве = РезервНаСкладахСКоэффициентом + ИтогПоЗначениюВРезервПоВсемСкладам;
		
		РезервТекСкладСКоэффициентом = Окр(СтрокаОстатка.РезервТекСклад/КоэффициентЕдиницыИзмерения,3);
		СтрокаТабличнойЧасти.Зарезервировано = РезервТекСкладСКоэффициентом + ИтогПоЗначениюВРезервТекСклад;
		
		ЗаказаноБезРезерваСКоэффициентом = Окр(СтрокаОстатка.ЗаказаноБезРезерва/КоэффициентЕдиницыИзмерения,3);
		ОстатокОбщийСКоэффициентом = Окр(СтрокаОстатка.ОстатокОбщий/КоэффициентЕдиницыИзмерения,3);
		
		СтрокаТабличнойЧасти.КПоступлению = ЗаказаноБезРезерваСКоэффициентом;
		
		ЗарезервированоЗаказомСКоэффициентомВсеСклады = Окр(СтрокаОстатка.ЗарезервированоЗаказомВсеСклады/КоэффициентЕдиницыИзмерения,3);
		
		Если Не ОбъектПроведен Тогда
			СтрокаТабличнойЧасти.ОстатокОбщий = ОстатокОбщийСКоэффициентом - ИтогПоЗначениюВРезервПоВсемСкладам;
		Иначе
			СтрокаТабличнойЧасти.ОстатокОбщий = ОстатокОбщийСКоэффициентом - ИтогПоЗначениюВРезервПоВсемСкладам + ЗарезервированоЗаказомСКоэффициентомВсеСклады;
		КонецЕсли;
		
		Если РезервированиеЗапасов Тогда
			
			Если ОбъектПроведен Тогда
				
				СтрокаТабличнойЧасти.Размещено = СтрокаОстатка.РезервЗаказано;
				
				Если Не СтрокаТабличнойЧасти.НеОтгружено = 0 Тогда
					СтрокаТабличнойЧасти.Обеспечено = СтрокаТабличнойЧасти.ВРезерве + СтрокаТабличнойЧасти.Размещено;
				КонецЕсли;
			Иначе
				
				СуммаПоСтрокамРезерв = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "Резервировать", НомерВариантаКП,,ИмяТЧ);
				СуммаПоСтрокамСТекКоэффициентомРезерв = СуммаПоСтрокамРезерв / КоэффициентЕдиницыИзмерения;
				СтрокаТабличнойЧасти.Обеспечено = СуммаПоСтрокамСТекКоэффициентомРезерв;
				
			КонецЕсли;
			
			Если Не ЭтоДубльСтроки Тогда
				РазностьСколькоНужноИСколькоЕсть = (СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.ВРезерве) - СтрокаТабличнойЧасти.НеОтгружено;
				МожноОтгрузитьВсего = ?(РазностьСколькоНужноИСколькоЕсть > 0, СтрокаТабличнойЧасти.НеОтгружено, СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.ВРезерве);
				СтрокаТабличнойЧасти.МожноОтгрузить = МожноОтгрузитьВсего;
			КонецЕсли
			
		Иначе
			
			Если Не ЭтоДубльСтроки Тогда
				РазностьСколькоНужноИСколькоЕсть = СтрокаТабличнойЧасти.ОстатокСвободно - СтрокаТабличнойЧасти.НеОтгружено;
				МожноОтгрузитьВсего = ?(РазностьСколькоНужноИСколькоЕсть > 0, СтрокаТабличнойЧасти.НеОтгружено, СтрокаТабличнойЧасти.ОстатокСвободно);
				СтрокаТабличнойЧасти.МожноОтгрузить = МожноОтгрузитьВсего;
			КонецЕсли
			
		КонецЕсли;
		
		Если Не ЭтоДубльСтроки 
			И Не СтрокаТабличнойЧасти.НеОтгружено = 0 
			И СтрокаТабличнойЧасти.МожноОтгрузить > 0 Тогда
			СуммаОстаткаИРезерва = СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.Зарезервировано;
			СтрокаТабличнойЧасти.ИндексЦвета = ?(СуммаОстаткаИРезерва < СтрокаТабличнойЧасти.НеОтгружено, 1,0);
		КонецЕсли;
		
		Если СтрокаОстатка.КоличествоДокументовЗаказано > 1 Тогда
			
			РасшифровкаСчетчика = ПредметИсчисления(
			СтрокаОстатка.КоличествоДокументовЗаказано,
			НСтр("ru = 'документ'"),
			НСтр("ru = 'документа'"),
			НСтр("ru = 'документов'"),
			"м");
			
			СтрокаТабличнойЧасти.ДатаПоступления = Строка(СтрокаОстатка.КоличествоДокументовЗаказано) + РасшифровкаСчетчика;
		Иначе
			СтрокаТабличнойЧасти.ДатаПоступления = ?(Не ЗначениеЗаполнено(СтрокаОстатка.ДатаПоступления),"", СтрокаОстатка.ДатаПоступления);
		КонецЕсли;
		
	КонецЦикла;
	
	// Дополним информацию по дублям строк
	Если Не ЕстьДубли Тогда Возврат КонецЕсли;

	Если ИмяТЧ = "Запасы" Тогда
		ПараметрыОтбораДляДублей = Новый Структура("НомерВариантаКП, ЭтоДубльСтроки", НомерВариантаКП, Истина);
	Иначе
		ПараметрыОтбораДляДублей = Новый Структура("ЭтоДубльСтроки",  Истина);
	КонецЕсли;

	СтрокиДляОбхода = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбораДляДублей);
	ТаблицаНоменклатуры = Объект[ИмяТЧ].Выгрузить(СтрокиДляОбхода,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв, ОстатокСвободно, Зарезервировано, ВРезерве");
	ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв, ОстатокСвободно, Зарезервировано, ВРезерве");
	
	ТаблицаОбхода = ТаблицаНоменклатуры.Скопировать(,"Номенклатура, Характеристика, Партия");
	ТаблицаОбхода.Свернуть("Номенклатура, Характеристика, Партия");
	
	Для Каждого СтрокаИзДублейСтрок Из ТаблицаОбхода Цикл
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаИзДублейСтрок.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаИзДублейСтрок.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаИзДублейСтрок.Партия;
		
		СтрокиДляОбхода = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбораБезСклада);
		
		ИндексЦвета = 0;
		
		Для Каждого СтрокаТабличнойЧасти Из СтрокиДляОбхода Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
				Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
				Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
				КоэффициентЕдиницыИзмерения = 1;
			Иначе
				КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
			
			// Колонка Можно отгрузить
			ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "НеОтгружено", НомерВариантаКП,,ИмяТЧ);
			ИтогПоЗначениюНеОтгружено = Окр(ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах/КоэффициентЕдиницыИзмерения,3);
			
			СтрокиДляВыгрузки = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбораБезСклада);
			ТаблицаДляИтоговПоСкладу = ТаблицаНоменклатуры.Скопировать(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, ОстатокСвободно");
			
			СвободноДляРезерва = ТаблицаДляИтоговПоСкладу.Итог("ОстатокСвободно");
			
			ДоступноКОтгрузке = СвободноДляРезерва + СтрокаТабличнойЧасти.ВРезерве;
			
			СтрокаТабличнойЧасти.МожноОтгрузить = ?(ИтогПоЗначениюНеОтгружено < ДоступноКОтгрузке, ИтогПоЗначениюНеОтгружено, ДоступноКОтгрузке);
			
			// Цвет значения колонки
			Если Не СтрокаТабличнойЧасти.НеОтгружено = 0 
				И СтрокаТабличнойЧасти.МожноОтгрузить > 0 Тогда
				
				ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
				ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
				ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
				ПараметрыОтбора.СтруктурнаяЕдиницаРезерв = СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв;
				
				ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "НеОтгружено", НомерВариантаКП,,ИмяТЧ);
				ИтогПоЗначениюНеОтгружено = Окр(ИтогПоЗначениюНеОтгруженоВБазовыхЕдиницах/КоэффициентЕдиницыИзмерения,3);
				
				ДоступноКОтгрузке = СтрокаТабличнойЧасти.ОстатокСвободно + СтрокаТабличнойЧасти.Зарезервировано;
				
				Если ИтогПоЗначениюНеОтгружено > ДоступноКОтгрузке Тогда
					ИндексЦвета = 1;
				Иначе
					СтрокаТабличнойЧасти.ИндексЦвета = 0;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ИндексЦвета = 0 Тогда Продолжить КонецЕсли;
		
		Для Каждого СтрокаТабличнойЧасти Из СтрокиДляОбхода Цикл
			СтрокаТабличнойЧасти.ИндексЦвета = ИндексЦвета;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Предварительно заполняет колонки табличной части документа Заказ покупателя значениями по остаткам и резервам
//
Процедура ЗаполнитьНачальныеДанныеДляОбработкиТабличнойЧасти(Объект, СтрокиОбходаЗапасов, ТаблицаНоменклатуры, СтруктураПараметровОтбора)
	
	ДокументСохранен = ЗначениеЗаполнено(Объект.Ссылка);
	
	ПараметрыОтбораБезСклада = СтруктураПараметровОтбора.БезСклада;
	ПараметрыОтбора = СтруктураПараметровОтбора.ССкладом;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", Объект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Продажи.Номенклатура КАК Номенклатура,
	|	Продажи.Характеристика КАК Характеристика,
	|	Продажи.Партия КАК Партия,
	|	СУММА(Продажи.Количество) КАК Количество,
	|	СУММА(Продажи.Количество) КАК ОтгруженоИтог
	|ИЗ
	|	РегистрНакопления.Продажи КАК Продажи
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА Продажи.ЗаказПокупателя = &ЗаказПокупателя
	|		КОНЕЦ
	|	И Продажи.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Продажи.Характеристика,
	|	Продажи.Партия,
	|	Продажи.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия,
	|	СУММА(Запасы.Количество) КАК Количество,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаРезерв,
	|	СУММА(Запасы.Количество) КАК ОтгруженоИтог
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ВЫБОР
	|			КОГДА НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|		КОНЕЦ
	|	И НЕ ТИПЗНАЧЕНИЯ(Запасы.Регистратор) = ТИП(Документ.РезервированиеЗапасов)
	|	И НЕ ТИПЗНАЧЕНИЯ(Запасы.Регистратор) = ТИП(Документ.СборкаЗапасов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Партия,
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.СтруктурнаяЕдиница";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ТаблицаОтгрузкаПоЗаказу = ПакетЗапросов[0].Выгрузить();
	ТаблицаОтгрузкаРезервовПоСкладам = ПакетЗапросов[1].Выгрузить();
	
	// Заполним по отгрузкам резервов
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
		
		СтрокаТабличнойЧасти.НеОтгружено = 0;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		КоличествоСКоэффициентом = СтрокаТабличнойЧасти.Количество * КоэффициентЕдиницыИзмерения;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.СтруктурнаяЕдиницаРезерв = СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		
		ОтгруженоВБазовыхЕд = 0;
		Отгружено = 0;
		ОтгруженоИтог = 0;
		
		СтрокиПоНоменклатуре = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбораБезСклада);
		СуммаПоСтрокам = СтрокиПоНоменклатуре[0].Количество;
		СуммаПоСтрокамСТекКоэффициентом = СуммаПоСтрокам / КоэффициентЕдиницыИзмерения;
		
		Если Не ДокументСохранен Тогда 
			СтрокаТабличнойЧасти.НеОтгружено = СтрокаТабличнойЧасти.Количество;
			СтрокаТабличнойЧасти.Отгружено = 0;
			СтрокаТабличнойЧасти.ПредставлениеНеОтгружено = "";
		Иначе
			
			НайденныеСтрокиОтгруженоПоСкладам = ТаблицаОтгрузкаРезервовПоСкладам.НайтиСтроки(ПараметрыОтбора);
			НайденныеСтрокиОтгружено = ТаблицаОтгрузкаПоЗаказу.НайтиСтроки(ПараметрыОтбораБезСклада);
			
			Если НайденныеСтрокиОтгруженоПоСкладам.Количество() Тогда
				ОтгруженоВБазовыхЕд = ?(НайденныеСтрокиОтгруженоПоСкладам.Количество(), НайденныеСтрокиОтгруженоПоСкладам[0].Количество, 0);
				Отгружено = Окр(ОтгруженоВБазовыхЕд/КоэффициентЕдиницыИзмерения,3);
			КонецЕсли;
			
			Если Отгружено > 0 И НайденныеСтрокиОтгружено.Количество() Тогда
				
				Если СтрокаТабличнойЧасти.Количество >= Отгружено Тогда
					СтрокаТабличнойЧасти.Отгружено = Отгружено;
					НайденныеСтрокиОтгруженоПоСкладам[0].Количество = 0;
					СтрокаТабличнойЧасти.НеОтгружено = ?(СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.Отгружено<0, 0, СтрокаТабличнойЧасти.Количество - Отгружено);
				Иначе
					СтрокаТабличнойЧасти.Отгружено = СтрокаТабличнойЧасти.Количество;
					НайденныеСтрокиОтгруженоПоСкладам[0].Количество = ОтгруженоВБазовыхЕд - СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
					СтрокаТабличнойЧасти.НеОтгружено = 0;
				КонецЕсли;
				
				Если НайденныеСтрокиОтгружено[0].ОтгруженоИтог > СуммаПоСтрокам Тогда
					НайденныеСтрокиОтгружено[0].Количество = СуммаПоСтрокам;
					НайденныеСтрокиОтгружено[0].ОтгруженоИтог = СуммаПоСтрокам;
				КонецЕсли;
				
				НайденныеСтрокиОтгружено[0].Количество = НайденныеСтрокиОтгружено[0].Количество - СтрокаТабличнойЧасти.Отгружено;
				
			Иначе
				СтрокаТабличнойЧасти.Отгружено = 0;
				СтрокаТабличнойЧасти.НеОтгружено = СтрокаТабличнойЧасти.Количество;
			КонецЕсли;
	
		КонецЕсли;

		СтрокаТабличнойЧасти.СрокПополнения = СтрокаТабличнойЧасти.Номенклатура.СрокПополнения;
		
	КонецЦикла;
	
	// Дополним по отгрузкам без резервов
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
			
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		КоличествоСКоэффициентом = СтрокаТабличнойЧасти.Количество * КоэффициентЕдиницыИзмерения;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		
		ОтгруженоВБазовыхЕд = 0;
		Отгружено = СтрокаТабличнойЧасти.Отгружено;
		НеОтгруженоИтог = 0;
		ОтгруженоИтог = 0;
		
		СтрокиПоНоменклатуре = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбораБезСклада);
		СуммаПоСтрокам = СтрокиПоНоменклатуре[0].Количество;
		СуммаПоСтрокамСТекКоэффициентом = СуммаПоСтрокам / КоэффициентЕдиницыИзмерения;
		
		НайденныеСтрокиОтгружено = ТаблицаОтгрузкаПоЗаказу.НайтиСтроки(ПараметрыОтбораБезСклада);
		
		Если НайденныеСтрокиОтгружено.Количество() Тогда
			Отгружено = Отгружено + Окр(НайденныеСтрокиОтгружено[0].Количество/КоэффициентЕдиницыИзмерения,3);
			ОтгруженоИтог = Окр(НайденныеСтрокиОтгружено[0].ОтгруженоИтог/КоэффициентЕдиницыИзмерения,3, РежимОкругления.Окр15как20);
			ОтгруженоВБазовыхЕд = НайденныеСтрокиОтгружено[0].Количество;
		КонецЕсли;
		
		НеОтгруженоИтог = СуммаПоСтрокамСТекКоэффициентом - ОтгруженоИтог;
		
		Если Не Отгружено = 0 Тогда
			
			Если СтрокаТабличнойЧасти.Количество >= Отгружено Тогда
				
				СтрокаТабличнойЧасти.Отгружено = Отгружено;
				НайденныеСтрокиОтгружено[0].Количество = 0;
				СтрокаТабличнойЧасти.НеОтгружено = ?(СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.Отгружено<0, 0, СтрокаТабличнойЧасти.Количество - Отгружено);
			Иначе
				НайденныеСтрокиОтгружено[0].Количество = ОтгруженоВБазовыхЕд - (СтрокаТабличнойЧасти.Количество-СтрокаТабличнойЧасти.Отгружено)*КоэффициентЕдиницыИзмерения;
				СтрокаТабличнойЧасти.Отгружено = СтрокаТабличнойЧасти.Количество;
				СтрокаТабличнойЧасти.НеОтгружено = 0;
			КонецЕсли
			
		Иначе
			СтрокаТабличнойЧасти.Отгружено = 0;
			СтрокаТабличнойЧасти.НеОтгружено = СтрокаТабличнойЧасти.Количество;
		КонецЕсли;
		
		ЭтоДубльСтроки = Ложь;
		СтрокаТабличнойЧасти.ПредставлениеНеОтгружено = "";
		
		Если Не СтрокаТабличнойЧасти.НеОтгружено = НеОтгруженоИтог Тогда
			Если Не СтрокаТабличнойЧасти.НеОтгружено = 0 Тогда 
				СтрокаТабличнойЧасти.ПредставлениеНеОтгружено = Формат(СтрокаТабличнойЧасти.НеОтгружено, "ЧДЦ = 3")+" / " + Формат(НеОтгруженоИтог, "ЧДЦ = 3");
			КонецЕсли;
			ЭтоДубльСтроки = Истина;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.ЭтоДубльСтроки = ЭтоДубльСтроки;
		СтрокаТабличнойЧасти.НеОтгруженоВсего = НеОтгруженоИтог;
		
		Если КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокам, "ЧДЦ=3");
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокамСТекКоэффициентом, "ЧДЦ=3");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонки табличной части документа Расходная накладная, Производство, Заказ-Наряд (в стадии выполнения)
// значениями по остаткам
//
Процедура ЗаполнитьЗначенияОстатковНоменклатурыВТабличнойЧасти(Объект, СтруктураДанные = Неопределено,  НоменклатураОтбора = Неопределено, ИмяТЧ = "Запасы", ТипДокумента = Неопределено) Экспорт
	
	ИмяКолонкиЗаказ = ?(ТипДокумента = "Производство", "ЗаказПокупателя", "Заказ");
	
	Если ТипДокумента = "ЗаказНаряд" Тогда
		ИмяСклада = "СтруктурнаяЕдиницаРезерв";
		КолонкиДляВыгрузки = "Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Ячейка, ЯчейкаДоступна,"+ИмяСклада;
	Иначе
		ИмяСклада = "СтруктурнаяЕдиница";
		КолонкиДляВыгрузки = "Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Ячейка, ЯчейкаДоступна,"+ИмяСклада+", "+ ИмяКолонкиЗаказ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если СтруктураДанные = Неопределено Тогда
		
		ТаблицаНоменклатуры = Объект[ИмяТЧ].Выгрузить(,КолонкиДляВыгрузки);
		
		МассивНоменклатуры = Объект[ИмяТЧ].Выгрузить(,"Номенклатура");
		МассивХарактеристик = Объект[ИмяТЧ].Выгрузить(,"Характеристика");
		
		СтрокиДляВыгрузки = Объект[ИмяТЧ];
	Иначе
		Номенклатура = СтруктураДанные.Номенклатура;
		Характеристика = ?(СтруктураДанные.ИспользоватьХарактеристики И ЗначениеЗаполнено(СтруктураДанные.Характеристика)
		, СтруктураДанные.Характеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		Партия = ?(СтруктураДанные.ИспользоватьПартии, СтруктураДанные.Партия, Справочники.ПартииНоменклатуры.ПустаяСсылка());
		
		Если ЗначениеЗаполнено(НоменклатураОтбора) Тогда
			ПараметрыОтбора = Новый Структура(" Номенклатура", НоменклатураОтбора);
		Иначе
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия", Номенклатура, Характеристика, Партия);
		КонецЕсли;
		
		СтрокиДляВыгрузки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
		ТаблицаНоменклатуры = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки, КолонкиДляВыгрузки);
		
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(Номенклатура);
		МассивХарактеристик = Новый Массив;
		МассивХарактеристик.Добавить(Характеристика);
	КонецЕсли;
	
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	СтрокиОбходаЗапасов = СтрокиДляВыгрузки;
	
	МассивЗаказов = Новый Массив;
	
	Если ТипДокумента = "ЗаказНаряд" Тогда
		
		МассивЗаказов.Добавить(Объект.Ссылка);
		
		КолонкаСклад = ТаблицаНоменклатуры.Колонки.Найти("СтруктурнаяЕдиницаРезерв");
		КолонкаСклад.Имя = "СтруктурнаяЕдиница";
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		
		ТаблицаНоменклатуры.Колонки.Добавить("Заказ",ОписаниеТипов);
		
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СтрокаТаблицы.Заказ = Объект.Ссылка;
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.СтруктурнаяЕдиница) Тогда
				СтрокаТаблицы.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиницаПродажи;
			КонецЕсли;
		КонецЦикла;
	Иначе
		
		Если ТипДокумента = "Производство" Тогда
			КолонкаЗаказ = ТаблицаНоменклатуры.Колонки.Найти("ЗаказПокупателя");
			КолонкаЗаказ.Имя = "Заказ";
		КонецЕсли;
		
		Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТЧ] Цикл
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяКолонкиЗаказ]) Тогда
				МассивЗаказов.Добавить(СтрокаТабличнойЧасти[ИмяКолонкиЗаказ]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатура", ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Характеристика", МассивХарактеристик);
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Если ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("ОрганизацииПередачи",
			РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.ПолучитьСписокОрганизацийДляОстатков(Организация));	
	Иначе
		Запрос.УстановитьПараметр("ОрганизацииПередачи", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация));
	КонецЕсли;
	
	Запрос.Текст = ?(ТипДокумента = "ЗаказНаряд", ТекстЗапросаОстаткиИРезервыЗаказНаряд(), ТекстЗапросаОстаткиИРезервыРасходнаяНакладная());
		
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Заказ, Ячейка");
	ПараметрыОтбораБезСкладаБезЗаказа = Новый Структура("Номенклатура, Характеристика, Партия");
	ПараметрыОтбораСкладИЯчейка = Новый Структура("Номенклатура, Характеристика, Партия, Ячейка, " + ИмяСклада);
	ПараметрыОтбораСклад = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница");
	ПараметрыОтбораСкладПоТЧДокумента = Новый Структура("Номенклатура, Характеристика, Партия, " + ИмяСклада);
	
	Если ТипДокумента = "ЗаказНаряд" Тогда
		ПараметрыОтбораСкладЗаказБезЯчейки = Новый Структура("Номенклатура, Характеристика, Партия, " + ИмяСклада);
		ПараметрыОтбораБезСклада = Новый Структура("Номенклатура, Характеристика, Партия");
	Иначе
		ПараметрыОтбораСкладЗаказБезЯчейки = Новый Структура("Номенклатура, Характеристика, Партия," + ИмяКолонкиЗаказ+" ," + ИмяСклада);
		ПараметрыОтбораБезСклада = Новый Структура("Номенклатура, Характеристика, Партия," + ИмяКолонкиЗаказ);
	КонецЕсли;
	
	ОбщиеОстаткиПоНоменклатуреПоСкладам = ТаблицаОстатков.Скопировать(,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ОстатокТекСклад, КоличествоПроходов, КоличествоСтрок");
	ОбщиеОстаткиПоНоменклатуреПоСкладам.Свернуть("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ОстатокТекСклад, КоличествоПроходов, КоличествоСтрок");
	
	НомерСтроки = 0;
	
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		НомерСтроки = НомерСтроки + 1;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
			
		Заказ = ?(ТипДокумента = "ЗаказНаряд", Объект.Ссылка, СтрокаТабличнойЧасти[ИмяКолонкиЗаказ]);
			
		ПараметрыОтбораСклад.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораСклад.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораСклад.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораСклад.СтруктурнаяЕдиница = СтрокаТабличнойЧасти[ИмяСклада];
		
		ПараметрыОтбораСкладПоТЧДокумента.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораСкладПоТЧДокумента.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораСкладПоТЧДокумента.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораСкладПоТЧДокумента[ИмяСклада] = СтрокаТабличнойЧасти[ИмяСклада];
		
		ПараметрыОтбораБезСкладаБезЗаказа.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСкладаБезЗаказа.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСкладаБезЗаказа.Партия = СтрокаТабличнойЧасти.Партия;
		
		КоличествоСКоэффициентом = СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти[ИмяСклада];
		ПараметрыОтбора.Заказ = Заказ;
		ПараметрыОтбора.Ячейка = СтрокаТабличнойЧасти.Ячейка;
		
		ПараметрыОтбораСкладИЯчейка.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораСкладИЯчейка.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораСкладИЯчейка.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораСкладИЯчейка[ИмяСклада] = СтрокаТабличнойЧасти[ИмяСклада];
		ПараметрыОтбораСкладИЯчейка.Ячейка = СтрокаТабличнойЧасти.Ячейка;
		
		ПараметрыОтбораБезСклада.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезСклада.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезСклада.Партия = СтрокаТабличнойЧасти.Партия;
		
		ПараметрыОтбораСкладЗаказБезЯчейки.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораСкладЗаказБезЯчейки.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораСкладЗаказБезЯчейки.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораСкладЗаказБезЯчейки[ИмяСклада] = СтрокаТабличнойЧасти[ИмяСклада];
		
		Если Не ТипДокумента = "ЗаказНаряд" Тогда
			ПараметрыОтбораБезСклада[ИмяКолонкиЗаказ] = Заказ;
			ПараметрыОтбораСкладЗаказБезЯчейки[ИмяКолонкиЗаказ] = Заказ;
		КонецЕсли;
		
		НайденныеСтрокиОстатки = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
	
		ЭтоПоследняяСтрокаПоНоменклатуреПоЯчейке = Ложь;
		
		Если НайденныеСтрокиОстатки.Количество() Тогда
			СтрокаОстатка = НайденныеСтрокиОстатки[0];
			Если СтрокаОстатка.КоличествоПроходов = 0 Тогда
				СтрокиПоНоменклатуре = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбораСкладИЯчейка);
				СтрокаОстатка.КоличествоСтрок = СтрокиПоНоменклатуре.Количество();
			КонецЕсли;
			СтрокаОстатка.КоличествоПроходов = СтрокаОстатка.КоличествоПроходов+1;
			ЭтоПоследняяСтрокаПоНоменклатуреПоЯчейке = ?(СтрокаОстатка.КоличествоПроходов = СтрокаОстатка.КоличествоСтрок, Истина, Ложь);
		Иначе
			СтрокаОстатка = Неопределено
		КонецЕсли;
		
		СтрокаТабличнойЧасти.ПредставлениеДублей = "";
		
		СуммаПоСтрокам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСкладаБезЗаказа, "Количество",,,ИмяТЧ);
		СуммаПоСтрокамСТекКоэффициентом = СуммаПоСтрокам / КоэффициентЕдиницыИзмерения;
		
		Если КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокам, "ЧДЦ=3");
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокамСТекКоэффициентом, "ЧДЦ=3");
		КонецЕсли;
		
		СтрокаТабличнойЧасти.МожноОтгрузить = 0;
		СтрокаТабличнойЧасти.ВРезерве = 0;
		СтрокаТабличнойЧасти.НеХватает = 0;
		СтрокаТабличнойЧасти.ОстатокВЯчейке = 0;
		СтрокаТабличнойЧасти.ОстатокСвободно = 0;
		СтрокаТабличнойЧасти.ОстатокОбщий = 0;
		
		Если СтрокаОстатка = Неопределено Тогда Продолжить КонецЕсли;
		
		СтрокиОстаткиНоменклатураСкладБезЯчейки = ОбщиеОстаткиПоНоменклатуреПоСкладам.НайтиСтроки(ПараметрыОтбораСклад);
		
		ЭтоПоследняяСтрокаПоНоменклатуре = Ложь;
		
		Если СтрокиОстаткиНоменклатураСкладБезЯчейки.Количество() Тогда
			СтрокаОстаткаВЦелом = СтрокиОстаткиНоменклатураСкладБезЯчейки[0];
			
			Если СтрокаОстаткаВЦелом.КоличествоПроходов = 0 Тогда
				СтрокиПоНоменклатуре = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбораСкладПоТЧДокумента);
				СтрокаОстаткаВЦелом.КоличествоСтрок = СтрокиПоНоменклатуре.Количество();
			КонецЕсли;
			
			СтрокаОстаткаВЦелом.КоличествоПроходов = СтрокаОстаткаВЦелом.КоличествоПроходов+1;
			ЭтоПоследняяСтрокаПоНоменклатуре = ?(СтрокаОстаткаВЦелом.КоличествоПроходов = СтрокаОстаткаВЦелом.КоличествоСтрок, Истина, Ложь);
			
		Иначе
			СтрокаОстаткаВЦелом = Неопределено
		КонецЕсли;

		Если СтрокаОстаткаВЦелом = Неопределено Тогда Продолжить КонецЕсли;
		
		ОстатокСвободно = Окр(СтрокаОстаткаВЦелом.ОстатокТекСклад/КоэффициентЕдиницыИзмерения,3);
		ОстатокВЯчейке = Окр(СтрокаОстатка.ОстатокВЯчейке/КоэффициентЕдиницыИзмерения,3);
		
		Если Не ЭтоПоследняяСтрокаПоНоменклатуреПоЯчейке Тогда
			Если СтрокаТабличнойЧасти.ЯчейкаДоступна Тогда
				ОстатокВЯчейке = ?(СтрокаТабличнойЧасти.Количество < ОстатокВЯчейке, СтрокаТабличнойЧасти.Количество, ОстатокВЯчейке);
				СтрокаТабличнойЧасти.ОстатокВЯчейке = ?(СтрокаТабличнойЧасти.ЯчейкаДоступна, ОстатокВЯчейке, 0);
				СтрокаОстатка.ОстатокВЯчейке = СтрокаОстатка.ОстатокВЯчейке - (СтрокаТабличнойЧасти.ОстатокВЯчейке*КоэффициентЕдиницыИзмерения);
			Иначе
				СтрокаОстатка.ОстатокВЯчейке = 0;
				СтрокаТабличнойЧасти.ОстатокВЯчейке = 0;
			КонецЕсли;
		Иначе
			СтрокаТабличнойЧасти.ОстатокВЯчейке = ?(СтрокаТабличнойЧасти.ЯчейкаДоступна, ОстатокВЯчейке, 0);
		КонецЕсли;
		
		Резерв = ?(ТипДокумента = "ЗаказНаряд", СтрокаТабличнойЧасти.РезервОтгрузка, СтрокаТабличнойЧасти.Резерв);
		
		Если Не ЭтоПоследняяСтрокаПоНоменклатуре Тогда
			
			Если СтрокаТабличнойЧасти.ЯчейкаДоступна Тогда
				ОстатокСвободно = ?(СтрокаТабличнойЧасти.ОстатокВЯчейке < ОстатокСвободно, СтрокаТабличнойЧасти.ОстатокВЯчейке - Резерв, ОстатокСвободно);
				СтрокаТабличнойЧасти.ОстатокСвободно = ?(СтрокаТабличнойЧасти.Количество < ОстатокСвободно, СтрокаТабличнойЧасти.Количество, ОстатокСвободно);
			Иначе
				ОстатокСвободно = ?(СтрокаТабличнойЧасти.Количество < ОстатокСвободно, СтрокаТабличнойЧасти.Количество - Резерв, ОстатокСвободно);
				СтрокаТабличнойЧасти.ОстатокСвободно = ОстатокСвободно;
			КонецЕсли;
			
			СтрокаОстаткаВЦелом.ОстатокТекСклад = СтрокаОстаткаВЦелом.ОстатокТекСклад - ((СтрокаТабличнойЧасти.ОстатокСвободно*КоэффициентЕдиницыИзмерения)-(Резерв*КоэффициентЕдиницыИзмерения));
			
		Иначе
			СтрокаТабличнойЧасти.ОстатокСвободно = ОстатокСвободно;
		КонецЕсли;
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезСклада, "Резервировать",,,ИмяТЧ, ТипДокумента, "Отгрузка");
		ИтогПоЗначениюВРезервПоВсемСкладам = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад= ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораСкладЗаказБезЯчейки, "Резервировать",,,ИмяТЧ, ТипДокумента, "Отгрузка");
		ИтогПоЗначениюВРезервТекСклад = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		Если ЗначениеЗаполнено(Заказ) Тогда
			РезервНаСкладахСКоэффициентом = Окр(СтрокаОстатка.РезервНаСкладахИтог/КоэффициентЕдиницыИзмерения,3);
			РезервТекСкладСКоэффициентом = Окр(СтрокаОстатка.РезервТекСкладИтог/КоэффициентЕдиницыИзмерения,3);
		Иначе
			РезервНаСкладахСКоэффициентом = 0;
			РезервТекСкладСКоэффициентом = 0;
		КонецЕсли;
			
		СтрокаТабличнойЧасти.ВРезерве = РезервНаСкладахСКоэффициентом + СтрокаОстатка.СписаноРезерваНакладной - ИтогПоЗначениюВРезервПоВсемСкладам;
		СтрокаТабличнойЧасти.ВРезервеТекСклад = РезервТекСкладСКоэффициентом + СтрокаОстатка.СписаноРезерваНакладнойТекСклад - ИтогПоЗначениюВРезервТекСклад;
		
		ОстатокОбщийСКоэффициентом = Окр(СтрокаОстатка.ОстатокОбщий/КоэффициентЕдиницыИзмерения,3);
		СтрокаТабличнойЧасти.ОстатокОбщий = ОстатокОбщийСКоэффициентом;
		
		МожноОтгрузить = СтрокаТабличнойЧасти.ОстатокСвободно+ Резерв;
		
		СтрокаТабличнойЧасти.МожноОтгрузить = ?(СтрокаТабличнойЧасти.Количество < МожноОтгрузить, СтрокаТабличнойЧасти.Количество, МожноОтгрузить);
		
		СтрокаТабличнойЧасти.НеХватает = СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.МожноОтгрузить;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонки табличной части документа Чек ККМ значениями по остаткам
//
Процедура ЗаполнитьЗначенияОстатковНоменклатурыВТабличнойЧастиЧекККМ(Объект, СтруктураДанные = Неопределено,  НоменклатураОтбора = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если СтруктураДанные = Неопределено Тогда
		
		ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(,"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Заказ, Ячейка, ЯчейкаДоступна, СтруктурнаяЕдиница");
		
		МассивНоменклатуры = Объект.Запасы.Выгрузить(,"Номенклатура");
		МассивХарактеристик = Объект.Запасы.Выгрузить(,"Характеристика");
		
		СтрокиДляВыгрузки = Объект.Запасы;
	Иначе
		Номенклатура = СтруктураДанные.Номенклатура;
		Характеристика = ?(СтруктураДанные.ИспользоватьХарактеристики И ЗначениеЗаполнено(СтруктураДанные.Характеристика)
		, СтруктураДанные.Характеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		Партия = ?(СтруктураДанные.ИспользоватьПартии, СтруктураДанные.Партия, Справочники.ПартииНоменклатуры.ПустаяСсылка());
		
		Если ЗначениеЗаполнено(НоменклатураОтбора) Тогда
			ПараметрыОтбора = Новый Структура(" Номенклатура", НоменклатураОтбора);
		Иначе
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия", Номенклатура, Характеристика, Партия);
		КонецЕсли;
		
		СтрокиДляВыгрузки = Объект.Запасы.НайтиСтроки(ПараметрыОтбора);
		ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Заказ, Ячейка, ЯчейкаДоступна, СтруктурнаяЕдиница");
		
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(Номенклатура);
		МассивХарактеристик = Новый Массив;
		МассивХарактеристик.Добавить(Характеристика);
	КонецЕсли;
	
	ВШапке = (Объект.ПоложениеЗаказаПокупателя = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВШапке"));
	
	Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
		СтрокаТаблицы.Заказ = ?(Не ЗначениеЗаполнено(СтрокаТаблицы.Заказ) ИЛИ ВШапке, Объект.Заказ, СтрокаТаблицы.Заказ);
	КонецЦикла;
	
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	СтрокиОбходаЗапасов = СтрокиДляВыгрузки;
	
	МассивЗаказов = Новый Массив;
	МассивЗаказов.Добавить(Объект.Заказ);
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатура", ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Характеристика", МассивХарактеристик);
	Запрос.УстановитьПараметр("МассивЗаказов",МассивЗаказов);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Если ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("ОрганизацииПередачи",
			РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.ПолучитьСписокОрганизацийДляОстатков(Организация));	
	Иначе
		Запрос.УстановитьПараметр("ОрганизацииПередачи", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаОстаткиИРезервыЧекККМ();
		
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, Заказ, СтруктурнаяЕдиница, Ячейка");
	ПараметрыОтбораБезЗаказа = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка");
	
	ОбщиеОстаткиПоНоменклатуреПоСкладам = ТаблицаОстатков.Скопировать(,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, ОстатокТекСклад, КоличествоПроходов, КоличествоСтрок");
	ОбщиеОстаткиПоНоменклатуреПоСкладам.Свернуть("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, ОстатокТекСклад, КоличествоПроходов, КоличествоСтрок");
	
	НомерСтроки = 0;
	
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		НомерСтроки = НомерСтроки + 1;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
		
		КоличествоСКоэффициентом = СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
		
		ПараметрыОтбораБезЗаказа.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезЗаказа.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезЗаказа.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораБезЗаказа.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		ПараметрыОтбораБезЗаказа.Ячейка = СтрокаТабличнойЧасти.Ячейка;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.Заказ = СтрокаТабличнойЧасти.Заказ;
		ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		ПараметрыОтбора.Ячейка = СтрокаТабличнойЧасти.Ячейка;
		
		НайденныеСтрокиОстатки = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтрокиОстатки.Количество() Тогда
			СтрокаОстатка = НайденныеСтрокиОстатки[0];
			Если СтрокаОстатка.КоличествоПроходов = 0 Тогда
				СтрокиПоНоменклатуре = Объект.Запасы.НайтиСтроки(ПараметрыОтбора);
				СтрокаОстатка.КоличествоСтрок = СтрокиПоНоменклатуре.Количество();
			КонецЕсли;
			СтрокаОстатка.КоличествоПроходов = СтрокаОстатка.КоличествоПроходов+1;
		Иначе
			СтрокаОстатка = Неопределено
		КонецЕсли;
		
		СтрокаТабличнойЧасти.ПредставлениеДублей = "";
		
		СуммаПоСтрокам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбораБезЗаказа, "Количество");
		СуммаПоСтрокамСТекКоэффициентом = СуммаПоСтрокам / КоэффициентЕдиницыИзмерения;
		
		Если КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = СтрокаТабличнойЧасти.Количество Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокам, "ЧДЦ=3");
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")
		ИначеЕсли Не КоэффициентЕдиницыИзмерения = 1 И Не СуммаПоСтрокам = КоличествоСКоэффициентом Тогда
			СтрокаТабличнойЧасти.ПредставлениеДублей = Формат(СтрокаТабличнойЧасти.Количество, "ЧДЦ=3")+ " / " + Формат(СуммаПоСтрокамСТекКоэффициентом, "ЧДЦ=3");
		КонецЕсли;
		
		СтрокаТабличнойЧасти.МожноОтгрузить = 0;
		СтрокаТабличнойЧасти.ВРезерве = 0;
		СтрокаТабличнойЧасти.НеХватает = 0;
		СтрокаТабличнойЧасти.ОстатокСвободно = 0;
		СтрокаТабличнойЧасти.ОстатокОбщий = 0;
		
		Если СтрокаОстатка = Неопределено Тогда Продолжить КонецЕсли;
		
		СтрокиОстаткиНоменклатураСклад = ОбщиеОстаткиПоНоменклатуреПоСкладам.НайтиСтроки(ПараметрыОтбораБезЗаказа);
		
		ЭтоПоследняяСтрокаПоНоменклатуре = Ложь;
		
		Если СтрокиОстаткиНоменклатураСклад.Количество() Тогда
			СтрокаОстаткаВЦелом = СтрокиОстаткиНоменклатураСклад[0];
			
			Если СтрокаОстаткаВЦелом.КоличествоПроходов = 0 Тогда
				СтрокиПоНоменклатуре = Объект.Запасы.НайтиСтроки(ПараметрыОтбораБезЗаказа);
				СтрокаОстаткаВЦелом.КоличествоСтрок = СтрокиПоНоменклатуре.Количество();
			КонецЕсли;
			
			СтрокаОстаткаВЦелом.КоличествоПроходов = СтрокаОстаткаВЦелом.КоличествоПроходов+1;
			ЭтоПоследняяСтрокаПоНоменклатуре = ?(СтрокаОстаткаВЦелом.КоличествоПроходов = СтрокаОстаткаВЦелом.КоличествоСтрок, Истина, Ложь);
			
		Иначе
			СтрокаОстаткаВЦелом = Неопределено
		КонецЕсли;

		Если СтрокаОстаткаВЦелом = Неопределено Тогда Продолжить КонецЕсли;
		
		ОстатокСвободно = Окр(СтрокаОстаткаВЦелом.ОстатокТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		Если Не ЭтоПоследняяСтрокаПоНоменклатуре Тогда
			
			ОстатокСвободно = ?(СтрокаТабличнойЧасти.Количество < ОстатокСвободно, СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.Резерв, ОстатокСвободно);
			СтрокаТабличнойЧасти.ОстатокСвободно = ОстатокСвободно;
			СтрокаОстаткаВЦелом.ОстатокТекСклад = СтрокаОстаткаВЦелом.ОстатокТекСклад - ((СтрокаТабличнойЧасти.ОстатокСвободно*КоэффициентЕдиницыИзмерения)-(СтрокаТабличнойЧасти.Резерв*КоэффициентЕдиницыИзмерения));
			
		Иначе
			СтрокаТабличнойЧасти.ОстатокСвободно = ОстатокСвободно;
		КонецЕсли;
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам = ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать");
		ИтогПоЗначениюВРезервПоВсемСкладам = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахПоВсемСкладам/КоэффициентЕдиницыИзмерения,3);
		
		ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад= ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать");
		ИтогПоЗначениюВРезервТекСклад = Окр(ИтогПоЗначениюВРезервВБазовыхЕдиницахТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		Если ЗначениеЗаполнено(Объект.Заказ) Тогда
			РезервНаСкладахСКоэффициентом = Окр(СтрокаОстатка.РезервНаСкладахИтог/КоэффициентЕдиницыИзмерения,3);
			РезервТекСкладСКоэффициентом = Окр(СтрокаОстатка.РезервТекСкладИтог/КоэффициентЕдиницыИзмерения,3);
		Иначе
			РезервНаСкладахСКоэффициентом = 0;
			РезервТекСкладСКоэффициентом = 0;
		КонецЕсли;
			
		СтрокаТабличнойЧасти.ВРезерве = РезервНаСкладахСКоэффициентом + СтрокаОстатка.СписаноРезерваНакладной - ИтогПоЗначениюВРезервПоВсемСкладам;
		СтрокаТабличнойЧасти.ВРезервеТекСклад = РезервТекСкладСКоэффициентом + СтрокаОстатка.СписаноРезерваНакладнойТекСклад - ИтогПоЗначениюВРезервТекСклад;
		
		ОстатокОбщийСКоэффициентом = Окр(СтрокаОстатка.ОстатокОбщий/КоэффициентЕдиницыИзмерения,3);
		
		СтрокаТабличнойЧасти.ОстатокОбщий = ОстатокОбщийСКоэффициентом;
		
		МожноОтгрузить = ОстатокСвободно+ СтрокаТабличнойЧасти.Резерв;
		
		СтрокаТабличнойЧасти.МожноОтгрузить = ?(СтрокаТабличнойЧасти.Количество < МожноОтгрузить, СтрокаТабличнойЧасти.Количество, МожноОтгрузить);
		
		СтрокаТабличнойЧасти.НеХватает = СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.МожноОтгрузить;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонки табличной части документа Чек ККМ Форма РМК значениями по остаткам
//
Процедура ЗаполнитьЗначенияОстатковНоменклатурыВТабличнойЧастиЧекККМ_РМК(Объект, СтруктураДанные = Неопределено,  НоменклатураОтбора = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если СтруктураДанные = Неопределено Тогда
		
		ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(,"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Ячейка, ЯчейкаДоступна, СтруктурнаяЕдиница");
		
		МассивНоменклатуры = Объект.Запасы.Выгрузить(,"Номенклатура");
		МассивХарактеристик = Объект.Запасы.Выгрузить(,"Характеристика");
		
		СтрокиДляВыгрузки = Объект.Запасы;
	Иначе
		Номенклатура = СтруктураДанные.Номенклатура;
		Характеристика = ?(СтруктураДанные.ИспользоватьХарактеристики И ЗначениеЗаполнено(СтруктураДанные.Характеристика)
		, СтруктураДанные.Характеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		
		Если Не СтруктураДанные.Свойство("Партия") Тогда
			 СтруктураДанные.Вставить("Партия", Справочники.ПартииНоменклатуры.ПустаяСсылка())
		КонецЕсли;
		
		Партия = ?(СтруктураДанные.ИспользоватьПартии, СтруктураДанные.Партия, Справочники.ПартииНоменклатуры.ПустаяСсылка());
		
		Если ЗначениеЗаполнено(НоменклатураОтбора) Тогда
			ПараметрыОтбора = Новый Структура(" Номенклатура", НоменклатураОтбора);
		Иначе
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия", Номенклатура, Характеристика, Партия);
		КонецЕсли;
		
		СтрокиДляВыгрузки = Объект.Запасы.НайтиСтроки(ПараметрыОтбора);
		ТаблицаНоменклатуры = Объект.Запасы.Выгрузить(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Ячейка, ЯчейкаДоступна, СтруктурнаяЕдиница");
		
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(Номенклатура);
		МассивХарактеристик = Новый Массив;
		МассивХарактеристик.Добавить(Характеристика);
	КонецЕсли;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	
	ТаблицаНоменклатуры.Колонки.Добавить("Заказ",ОписаниеТипов);
	ТаблицаНоменклатуры.ЗаполнитьЗначения(Объект.Заказ, "Заказ");
	
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	СтрокиОбходаЗапасов = СтрокиДляВыгрузки;
	
	МассивЗаказов = Новый Массив;
	МассивЗаказов.Добавить(Объект.Заказ);
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатура", ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Характеристика", МассивХарактеристик);
	Запрос.УстановитьПараметр("ЗаказПокупателя",Объект.Заказ);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Если ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("ОрганизацииПередачи",
			РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.ПолучитьСписокОрганизацийДляОстатков(Организация));	
	Иначе
		Запрос.УстановитьПараметр("ОрганизацииПередачи", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаОстаткиИРезервыЧекККМ_РМК();
		
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Заказ, Ячейка");
	ПараметрыОтбораБезЗаказа = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка");
	
	ОбщиеОстаткиПоНоменклатуреПоСкладам = ТаблицаОстатков.Скопировать(,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, ОстатокТекСклад, КоличествоПроходов, КоличествоСтрок");
	ОбщиеОстаткиПоНоменклатуреПоСкладам.Свернуть("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, ОстатокТекСклад, КоличествоПроходов, КоличествоСтрок");
	
	НомерСтроки = 0;
	
	Для Каждого СтрокаТабличнойЧасти Из СтрокиОбходаЗапасов Цикл
		НомерСтроки = НомерСтроки + 1;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			Или ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("Строка") Тогда Продолжить КонецЕсли;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбора.Заказ = Объект.Заказ;
		ПараметрыОтбора.Ячейка = СтрокаТабличнойЧасти.Ячейка;
		ПараметрыОтбора.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		
		ПараметрыОтбораБезЗаказа.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбораБезЗаказа.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбораБезЗаказа.Партия = СтрокаТабличнойЧасти.Партия;
		ПараметрыОтбораБезЗаказа.Ячейка = СтрокаТабличнойЧасти.Ячейка;
		ПараметрыОтбораБезЗаказа.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
		
		НайденныеСтрокиОстатки = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтрокиОстатки.Количество() Тогда
			СтрокаОстатка = НайденныеСтрокиОстатки[0];
			Если СтрокаОстатка.КоличествоПроходов = 0 Тогда
				СтрокиПоНоменклатуре = Объект.Запасы.НайтиСтроки(ПараметрыОтбора);
				СтрокаОстатка.КоличествоСтрок = СтрокиПоНоменклатуре.Количество();
			КонецЕсли;
			СтрокаОстатка.КоличествоПроходов = СтрокаОстатка.КоличествоПроходов+1;
		Иначе
			СтрокаОстатка = Неопределено
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Доступно = 0;
		СтрокаТабличнойЧасти.КПоступлению = 0;
		ОстатокСвободно = 0;
		
		Если СтрокаОстатка = Неопределено Тогда Продолжить КонецЕсли;
		
		СтрокиОстаткиНоменклатураСклад = ОбщиеОстаткиПоНоменклатуреПоСкладам.НайтиСтроки(ПараметрыОтбораБезЗаказа);
		
		ЭтоПоследняяСтрокаПоНоменклатуре = Ложь;
		
		Если СтрокиОстаткиНоменклатураСклад.Количество() Тогда
			СтрокаОстаткаВЦелом = СтрокиОстаткиНоменклатураСклад[0];
			
			Если СтрокаОстаткаВЦелом.КоличествоПроходов = 0 Тогда
				СтрокиПоНоменклатуре = Объект.Запасы.НайтиСтроки(ПараметрыОтбораБезЗаказа);
				СтрокаОстаткаВЦелом.КоличествоСтрок = СтрокиПоНоменклатуре.Количество();
			КонецЕсли;
			
			СтрокаОстаткаВЦелом.КоличествоПроходов = СтрокаОстаткаВЦелом.КоличествоПроходов+1;
			ЭтоПоследняяСтрокаПоНоменклатуре = ?(СтрокаОстаткаВЦелом.КоличествоПроходов = СтрокаОстаткаВЦелом.КоличествоСтрок, Истина, Ложь);
			
		Иначе
			СтрокаОстаткаВЦелом = Неопределено
		КонецЕсли;

		Если СтрокаОстаткаВЦелом = Неопределено Тогда Продолжить КонецЕсли;
		
		ОстатокСвободно = Окр(СтрокаОстаткаВЦелом.ОстатокТекСклад/КоэффициентЕдиницыИзмерения,3);
		
		Если Не ЭтоПоследняяСтрокаПоНоменклатуре Тогда
			СтрокаОстаткаВЦелом.ОстатокТекСклад = СтрокаОстаткаВЦелом.ОстатокТекСклад - (СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Заказ) Тогда
			РезервНаСкладахСКоэффициентом = Окр(СтрокаОстатка.РезервНаСкладахИтог/КоэффициентЕдиницыИзмерения,3);
		Иначе
			РезервНаСкладахСКоэффициентом = 0;
		КонецЕсли;
			
		ВРезерве = РезервНаСкладахСКоэффициентом + СтрокаОстатка.СписаноРезерваНакладной;
		Доступно = ОстатокСвободно + ВРезерве;
		СтрокаТабличнойЧасти.КПоступлению = Окр(СтрокаОстатка.КПоступлению/КоэффициентЕдиницыИзмерения,3);
		
		СтрокаТабличнойЧасти.Доступно = Доступно;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонку "В резерв" табличной части документа Заказ покупателя по остаткам и производит распределение по
// свободным остаткам других складов
//
Процедура ЗаполнитьКолонкуРезервПоОстаткамЗаказПокупателя(Объект, ПараметрыОтбора = Неопределено, СтруктураОтбораНоменклатуры = Неопределено, ИмяТЧ = "Запасы") Экспорт
	
	Если ИмяТЧ = "Запасы" Тогда
		
		Если ПараметрыОтбора = Неопределено Тогда
			ПараметрыОтбора = Новый Структура;
		КонецЕсли;
		
		Если ПараметрыОтбора.Свойство("НомерВариантаКП") Тогда
			НомерВариантаКП = ПараметрыОтбора.НомерВариантаКП;
		Иначе
			НомерВариантаКП = 0;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСтруктурнуюЕдиницуРезерваВТЧ(Объект);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ИмяТЧ = "Запасы" И ПараметрыОтбора.Свойство("НомерВариантаКП") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаЗапасы.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиница,
		|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ТаблицаЗапасы.Характеристика КАК Характеристика,
		|	ТаблицаЗапасы.Партия КАК Партия
		|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
		|ИЗ
		|	&ТаблицаЗапасы КАК ТаблицаЗапасы
		|ГДЕ
		|	ТаблицаЗапасы.ТипНоменклатурыЗапас";
		Запрос.УстановитьПараметр("ТаблицаЗапасы", Объект[ИмяТЧ].Выгрузить(ПараметрыОтбора));
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаЗапасы.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиница,
		|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ТаблицаЗапасы.Характеристика КАК Характеристика,
		|	ТаблицаЗапасы.Партия КАК Партия
		|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
		|ИЗ
		|	&ТаблицаЗапасы КАК ТаблицаЗапасы";
		
		Запрос.УстановитьПараметр("ТаблицаЗапасы", Объект[ИмяТЧ].Выгрузить());
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапросаЗаполнитьРезервПоОстаткам();
	
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Объект.Организация));
	Запрос.УстановитьПараметр("ПриоритетныйСклад", Объект.СтруктурнаяЕдиницаРезерв);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
	
	Если ИмяТЧ = "Запасы" Тогда
		СвернутаяТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(,"Номенклатура, Характеристика, Цена, Партия, ЕдиницаИзмерения, ДатаОтгрузки, Количество, Резерв, НомерВариантаКП");
		СвернутаяТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, Цена, Партия, ЕдиницаИзмерения, ДатаОтгрузки, НомерВариантаКП", "Количество, Резерв");
		СвернутаяТаблицаЗапасы.Сортировать("Номенклатура Возр, ДатаОтгрузки Возр");
	Иначе
		СвернутаяТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(,"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Количество, Резерв");
		СвернутаяТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, Партия, ЕдиницаИзмерения", "Количество, Резерв");
		СвернутаяТаблицаЗапасы.Сортировать("Номенклатура Возр");
	КонецЕсли;
		
	Если Не СтруктураОтбораНоменклатуры = Неопределено Тогда
		СвернутаяТаблицаЗапасы = СвернутаяТаблицаЗапасы.НайтиСтроки(СтруктураОтбораНоменклатуры);
	ИначеЕсли ИмяТЧ = "Запасы" И ПараметрыОтбора.Свойство("НомерВариантаКП") Тогда
		СвернутаяТаблицаЗапасы = СвернутаяТаблицаЗапасы.НайтиСтроки(ПараметрыОтбора);
	КонецЕсли;
	
	СтруктураДляПоиска = Новый Структура;
	СтруктураДляПоиска.Вставить("Номенклатура",);
	СтруктураДляПоиска.Вставить("Характеристика",);
	СтруктураДляПоиска.Вставить("Партия",);
	
	Если ИмяТЧ = "Запасы" Тогда
		СтруктураДляПоиска.Вставить("ДатаОтгрузки",);
		СтруктураДляПоиска.Вставить("Цена",);
	КонецЕсли;

	СтруктураДляПоиска.Вставить("ЕдиницаИзмерения",);
	
	СтруктураДляПоискаБезДатыОтгрузки = Новый Структура;
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Номенклатура",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Характеристика",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Партия",);
	
	СтруктураДляПоискаПоСкладу = Новый Структура;
	СтруктураДляПоискаПоСкладу.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладу.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладу.Вставить("Партия",);
	СтруктураДляПоискаПоСкладу.Вставить("СтруктурнаяЕдиница",);
	
	СтрокиКУдалению = Новый Массив;
	МассивОбработанныхСтрок = Новый Массив;
	
	Для Каждого СтрокаТабЗапасы Из СвернутаяТаблицаЗапасы Цикл
		
		Если НЕ ТипЗнч(СтрокаТабЗапасы.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
			Или Не ЗначениеЗаполнено(СтрокаТабЗапасы.Номенклатура) Тогда 
			Продолжить
		КонецЕсли;
		
		СтруктураДляПоиска.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоиска.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоиска.Партия = СтрокаТабЗапасы.Партия;
		СтруктураДляПоиска.ЕдиницаИзмерения = СтрокаТабЗапасы.ЕдиницаИзмерения;
		
		Если ИмяТЧ = "Запасы" Тогда
			СтруктураДляПоиска.ДатаОтгрузки = СтрокаТабЗапасы.ДатаОтгрузки;
			СтруктураДляПоиска.Цена = СтрокаТабЗапасы.Цена;
		КонецЕсли;
		
		СтруктураДляПоискаБезДатыОтгрузки.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоискаБезДатыОтгрузки.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоискаБезДатыОтгрузки.Партия = СтрокаТабЗапасы.Партия;
		
		МассивСтрокОстаткиОбщие = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаБезДатыОтгрузки);
		
		Если Не МассивСтрокОстаткиОбщие.Количество() Тогда Продолжить КонецЕсли;
		
		РасходПоРезервуПоВсемСкладам = 0;
		
		Для Каждого СтрокаМассива Из МассивСтрокОстаткиОбщие Цикл
			РасходПоРезервуПоВсемСкладам = РасходПоРезервуПоВсемСкладам + СтрокаМассива.РасходПоРезерву;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(СтрокаТабЗапасы.ЕдиницаИзмерения)
			Или ТипЗнч(СтрокаТабЗапасы.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения")
			Тогда 
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабЗапасы.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		МассивСтрокЗапасы = Объект[ИмяТЧ].НайтиСтроки(СтруктураДляПоиска);
		
		КоличествоДляРаспределения = 0;
		ОтгруженоВсего = 0;
		
		Для Каждого СтрокаМассива Из МассивСтрокЗапасы Цикл
			КоличествоДляРаспределения = КоличествоДляРаспределения + СтрокаМассива.Количество;
			ОтгруженоВсего = ОтгруженоВсего + СтрокаМассива.Отгружено;
		КонецЦикла;
		
		ОтгруженоБезРезерва = ОтгруженоВсего - РасходПоРезервуПоВсемСкладам/КоэффициентЕдиницыИзмерения;
		КомпенсацияОтгружено = 0;
		
		Если КоличествоДляРаспределения = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Номенклатура %1% по заказу отгружена. Потребность в распределении отсутствует.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1%", Строка(СтрокаТабЗапасы.Номенклатура));
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстСообщения;
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;
		
		СтрокиКУдалению.Очистить();
		МассивОбработанныхСтрок.Очистить();
		ПерваяСтрока = Неопределено;
		ОстатокПослеРаспределенияСтроки = 0;
		
		Для Каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.Количество) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке: %1 не заполнено количество.'"),
					СтрокаЗапасы.НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаЗапасы.НомерСтроки,
					"Количество");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле); 
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			Если КоличествоДляРаспределения = 0 Тогда
				СтрокиКУдалению.Добавить(СтрокаЗапасы);
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗапасы.СтруктурнаяЕдиницаРезерв) Тогда
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.СтруктурнаяЕдиницаРезерв;
			ИначеЕсли ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаРезерв) Тогда
				СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиницаРезерв;
			Иначе
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
				СтрокаЗапасы.СтруктурнаяЕдиницаРезерв = СтруктурнаяЕдиницаДляПоиска;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтруктурнаяЕдиницаДляПоиска) Тогда Продолжить КонецЕсли;
				
			СтруктураДляПоискаПоСкладу.Номенклатура = СтрокаТабЗапасы.Номенклатура;
			СтруктураДляПоискаПоСкладу.Характеристика = СтрокаТабЗапасы.Характеристика;
			СтруктураДляПоискаПоСкладу.Партия = СтрокаТабЗапасы.Партия;
			СтруктураДляПоискаПоСкладу.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
			
			МассивСтрокОстатки = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаПоСкладу);
			
			СтрокаЗапасы.Резерв = 0;
			
			Если Не МассивСтрокОстатки.Количество() Или МассивСтрокОстатки[0].КоличествоОстаток = 0 Тогда
				
				Если МассивСтрокОстаткиОбщие.Количество() И СтрокаЗапасы.Отгружено = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				Иначе
					КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.Отгружено;
					СтрокаЗапасы.Количество = СтрокаЗапасы.Отгружено;
					ОтгруженоБезРезерва = ?(ОтгруженоБезРезерва > СтрокаЗапасы.Количество, ОтгруженоБезРезерва - СтрокаЗапасы.Количество, 0);
					МассивОбработанныхСтрок.Добавить(СтрокаЗапасы);
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			
			СтрокаОстатка = МассивСтрокОстатки[0];
			
			КоличествоОстаток = СтрокаОстатка.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
			РасходПоРезерву = СтрокаОстатка.РасходПоРезерву/КоэффициентЕдиницыИзмерения;
			ТекРасходПоРезерву = РасходПоРезерву;
			РезервПоДругимДокументам = СтрокаОстатка.РезервПоДругимДокументам/КоэффициентЕдиницыИзмерения;
			
			Если РезервПоДругимДокументам - РасходПоРезерву >= 0 Тогда
				РезервПоДругимДокументам = РезервПоДругимДокументам - РасходПоРезерву;
				СтрокаОстатка.РезервПоДругимДокументам = СтрокаОстатка.РезервПоДругимДокументам - СтрокаОстатка.РасходПоРезерву;
				РасходПоРезерву = 0;
				СтрокаОстатка.РасходПоРезерву = 0;
			Иначе
				РасходПоРезерву = РасходПоРезерву - РезервПоДругимДокументам;
				СтрокаОстатка.РасходПоРезерву = СтрокаОстатка.РасходПоРезерву - СтрокаОстатка.РезервПоДругимДокументам;
				РезервПоДругимДокументам = 0;
				СтрокаОстатка.РезервПоДругимДокументам = 0;
			КонецЕсли;
			
			Если ОтгруженоБезРезерва>0 И СтрокаЗапасы.НеОтгружено = 0 Тогда
				ПолнаяОтгрузка = ОтгруженоБезРезерва + ТекРасходПоРезерву;
				Если ПолнаяОтгрузка > СтрокаЗапасы.Количество Тогда
					КомпенсацияОтгружено = ПолнаяОтгрузка - СтрокаЗапасы.Количество;
					СтрокаЗапасы.Отгружено = СтрокаЗапасы.Отгружено+КомпенсацияОтгружено;
					СтрокаЗапасы.Количество = ПолнаяОтгрузка;
					КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.НеОтгружено;
					ОтгруженоБезРезерва = 0;
				КонецЕсли;
			Иначе
				СтрокаЗапасы.Отгружено = СтрокаЗапасы.Отгружено - КомпенсацияОтгружено;
			КонецЕсли;
			ПолнаяОтгрузка = 0;
			
			Если СтрокаЗапасы.НеОтгружено < КоличествоОстаток Тогда
				
				Если ОстатокПослеРаспределенияСтроки > 0 Тогда
					
					Если СтрокаЗапасы.НеОтгружено + ОстатокПослеРаспределенияСтроки < КоличествоОстаток Тогда
						
						СтрокаЗапасы.НеОтгружено = СтрокаЗапасы.НеОтгружено + ОстатокПослеРаспределенияСтроки;
						ОстатокПослеРаспределенияСтроки = 0;
					Иначе
						СтрокаЗапасы.НеОтгружено = СтрокаЗапасы.Количество - СтрокаЗапасы.Отгружено;
						ОстатокПослеРаспределенияСтроки = (СтрокаЗапасы.НеОтгружено + ОстатокПослеРаспределенияСтроки) - КоличествоОстаток;
					КонецЕсли;
					
				Иначе
					
					Количество = ?(КоличествоОстаток > КоличествоДляРаспределения, КоличествоДляРаспределения, КоличествоОстаток);
					
					СтрокаЗапасы.НеОтгружено = Количество - СтрокаЗапасы.Отгружено;
					ОстатокПослеРаспределенияСтроки = СтрокаЗапасы.Количество - СтрокаЗапасы.НеОтгружено;
					
				КонецЕсли;
				
			Иначе
				
				Количество = ?(КоличествоОстаток > КоличествоДляРаспределения, КоличествоДляРаспределения, КоличествоОстаток);
				
				СтрокаЗапасы.НеОтгружено = Количество - СтрокаЗапасы.Отгружено;
				ОстатокПослеРаспределенияСтроки = СтрокаЗапасы.Количество - СтрокаЗапасы.НеОтгружено;
				
			КонецЕсли;
			
			СтрокаЗапасы.НеОтгружено = ?(СтрокаЗапасы.НеОтгружено<0,0,СтрокаЗапасы.НеОтгружено);
			
			СтрокаЗапасы.Количество = СтрокаЗапасы.НеОтгружено + (ТекРасходПоРезерву);
			СтрокаОстатка.РасходПоРезерву = 0;
			
			Если СтрокаЗапасы.НеОтгружено > РезервПоДругимДокументам Тогда
				
				НеобходимыйРезерв = СтрокаЗапасы.НеОтгружено-РезервПоДругимДокументам+РасходПоРезерву;
				
				СтрокаЗапасы.Резерв = ?(НеобходимыйРезерв> КоличествоОстаток, КоличествоОстаток, НеобходимыйРезерв);
				
				СтрокаОстатка.РезервПоДругимДокументам = 0;
			Иначе
				СтрокаОстатка.РезервПоДругимДокументам = СтрокаОстатка.РезервПоДругимДокументам - СтрокаЗапасы.НеОтгружено*КоэффициентЕдиницыИзмерения;
			КонецЕсли;
			
			НеотъемлемыйРезервТекДокумент = СтрокаОстатка.НеотъемлемыйРезервТекДокумент/КоэффициентЕдиницыИзмерения;
			
			Если НеотъемлемыйРезервТекДокумент > СтрокаЗапасы.Резерв Тогда
				
				Если СтрокаЗапасы.Количество >= НеотъемлемыйРезервТекДокумент Тогда
					СтрокаЗапасы.Резерв = НеотъемлемыйРезервТекДокумент;
					СтрокаОстатка.НеотъемлемыйРезервТекДокумент = 0;
				Иначе
					СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
					СтрокаОстатка.НеотъемлемыйРезервТекДокумент = СтрокаОстатка.НеотъемлемыйРезервТекДокумент - СтрокаЗапасы.Резерв*КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
			Иначе
				СтрокаОстатка.НеотъемлемыйРезервТекДокумент = 0;
			КонецЕсли;
			
			СтрокаЗапасы.СтруктурнаяЕдиницаРезерв = ?(Не ЗначениеЗаполнено(СтрокаЗапасы.СтруктурнаяЕдиницаРезерв), СтруктурнаяЕдиницаДляПоиска, СтрокаЗапасы.СтруктурнаяЕдиницаРезерв);
			
			СтрокаОстатка.КоличествоОстаток = СтрокаОстатка.КоличествоОстаток - СтрокаЗапасы.НеОтгружено*КоэффициентЕдиницыИзмерения;
			
			Если Не СтрокаЗапасы.ЭтоДубльСтроки Тогда
				ТекРасходПоРезерву = РасходПоРезервуПоВсемСкладам;
			КонецЕсли;
			
			СтрокаЗапасы.Количество = СтрокаЗапасы.Количество + СтрокаЗапасы.Отгружено - ТекРасходПоРезерву;
			
			КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.Количество;
			
			ПерваяСтрока = ?(ПерваяСтрока = Неопределено, СтрокаЗапасы, ПерваяСтрока);
			
			СтрокаУдалена = НайденаСтрокаСТакимЖеСкладомОбработанаТекущаяИУдалена(СтрокиКУдалению,СтрокаЗапасы, МассивОбработанныхСтрок);
			
			Если Не СтрокаУдалена Тогда
				МассивОбработанныхСтрок.Добавить(СтрокаЗапасы);
			КонецЕсли;
			
		КонецЦикла;
		
		Если КоличествоДляРаспределения > 0 И МассивСтрокОстаткиОбщие.Количество() Тогда
			
			Если ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаРезерв) Тогда
				СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиницаРезерв;
			Иначе
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
				СтрокаЗапасы.СтруктурнаяЕдиницаРезерв = СтруктурнаяЕдиницаДляПоиска;
			КонецЕсли;
			
			ПодготовитьТаблицуСогласноПриоритетам(ТаблицаОстатков, СтруктурнаяЕдиницаДляПоиска);
			
			НоваяСтрока = Неопределено;
			
			НомерСтроки = СтрокаЗапасы.НомерСтроки;
			
			Для каждого СтрокаМассиваСтрокОстатки Из МассивСтрокОстаткиОбщие Цикл
				
				РасходПоРезерву = СтрокаМассиваСтрокОстатки.РасходПоРезерву/КоэффициентЕдиницыИзмерения;
				ТекРасходПоРезерву = РасходПоРезерву;
				РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам/КоэффициентЕдиницыИзмерения;
				
				Если РасходПоРезерву > 0 И РезервПоДругимДокументам > 0 Тогда
					
					Если РезервПоДругимДокументам - РасходПоРезерву >= 0 Тогда
						РезервПоДругимДокументам = РезервПоДругимДокументам - РасходПоРезерву;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам - СтрокаМассиваСтрокОстатки.РасходПоРезерву;
						РасходПоРезерву = 0;
						СтрокаМассиваСтрокОстатки.РасходПоРезерву = 0;
					Иначе
						РасходПоРезерву = РасходПоРезерву - РезервПоДругимДокументам;
						СтрокаМассиваСтрокОстатки.РасходПоРезерву = СтрокаОстатка.РасходПоРезерву - СтрокаОстатка.РезервПоДругимДокументам;
						РезервПоДругимДокументам = 0;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = 0;
					КонецЕсли;
					
				КонецЕсли;
				
				ОстатокНаСкладе = СтрокаМассиваСтрокОстатки.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
				
				Если ОстатокНаСкладе + РасходПоРезерву <= 0 Тогда Продолжить КонецЕсли;
				
				НоваяСтрока = Объект[ИмяТЧ].Вставить(НомерСтроки);
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасы);
				
				НоваяСтрока.СтруктурнаяЕдиницаРезерв = СтрокаМассиваСтрокОстатки.СтруктурнаяЕдиница;
				НоваяСтрока.Резерв = 0;
				
				Если ОстатокНаСкладе > КоличествоДляРаспределения Тогда
					
					НоваяСтрока.Количество = КоличествоДляРаспределения;
					СтрокаМассиваСтрокОстатки.КоличествоОстаток = СтрокаМассиваСтрокОстатки.КоличествоОстаток - КоличествоДляРаспределения*КоэффициентЕдиницыИзмерения;
					КоличествоДляРаспределения = 0;
					
					Если НоваяСтрока.Количество > РезервПоДругимДокументам Тогда
						НоваяСтрока.Резерв = НоваяСтрока.Количество-РезервПоДругимДокументам;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = 0;
					Иначе
						НоваяСтрока.Резерв = 0;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
					КонецЕсли;
				Иначе
					НоваяСтрока.Количество = ОстатокНаСкладе+ТекРасходПоРезерву;
					КоличествоДляРаспределения = КоличествоДляРаспределения - НоваяСтрока.Количество;
					СтрокаМассиваСтрокОстатки.КоличествоОстаток = 0;
							
					Если НоваяСтрока.Количество > РезервПоДругимДокументам Тогда
						НоваяСтрока.Резерв = (ОстатокНаСкладе + РасходПоРезерву)-РезервПоДругимДокументам;
;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = 0;
					Иначе
						НоваяСтрока.Резерв = 0;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
					КонецЕсли;
					
				КонецЕсли;
				
				СтрокаУдалена = НайденаСтрокаСТакимЖеСкладомОбработанаТекущаяИУдалена(СтрокиКУдалению,НоваяСтрока, МассивОбработанныхСтрок);
				
				Если Не СтрокаУдалена Тогда
					МассивОбработанныхСтрок.Добавить(НоваяСтрока);
				КонецЕсли;
				
				НомерСтроки = НомерСтроки + 1;
				
				Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
				
			КонецЦикла;
			
			ПоследняяСтрокаМассива = ?(МассивОбработанныхСтрок.Количество(), МассивОбработанныхСтрок[МассивОбработанныхСтрок.Количество() - 1], Неопределено);
			
			ПоследняяСтрока = ПоследняяСтрокаМассива;
			
			Если КоличествоДляРаспределения > 0 И Не ПоследняяСтрокаМассива = Неопределено Тогда
				ПоследняяСтрока.Количество = ПоследняяСтрока.Количество + КоличествоДляРаспределения;
			КонецЕсли;
			
		КонецЕсли;
		
		ОчиститьПриоритеты(ТаблицаОстатков);
		
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			Объект[ИмяТЧ].Удалить(СтрокаКУдалению);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонку "В резерв" табличной части документа Заказ на производство по остаткам и производит распределение
// по свободным остаткам других складов
//
Процедура ЗаполнитьКолонкуРезервПоОстаткамЗаказНаПроизводство(Объект, ПараметрыОтбора = Неопределено, СтруктураОтбораНоменклатуры = Неопределено, ИмяТЧ = "Запасы") Экспорт
	
	ЗаполнитьСтруктурнуюЕдиницуРезерваВТЧ(Объект);
	
	СвернутаяТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(,"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Количество, Резерв, ЗаказПокупателя");
	СвернутаяТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, ЗаказПокупателя", "Количество, Резерв");
	СвернутаяТаблицаЗапасы.Сортировать("Номенклатура Возр");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы";
	
	Запрос.УстановитьПараметр("ТаблицаЗапасы", Объект[ИмяТЧ].Выгрузить());
	
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапросаЗаполнитьРезервПоОстаткамЗаказНаПроизводство();
	
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Объект.Организация));
	Запрос.УстановитьПараметр("ПриоритетныйСклад", Объект.СтруктурнаяЕдиницаРезерв);

	МассивЗаказов = Новый Массив;
	
	Для Каждого СтрокаТЧ Из СвернутаяТаблицаЗапасы Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.ЗаказПокупателя) Тогда
			МассивЗаказов.Добавить(СтрокаТЧ.ЗаказПокупателя)
		КонецЕсли;
	КонецЦикла;
	 
	Запрос.УстановитьПараметр("ЗаказыЕсть", ?(МассивЗаказов.Количество(), Истина, Ложь));
	Запрос.УстановитьПараметр("Ссылка", МассивЗаказов);
	Запрос.УстановитьПараметр("СсылкаТекДокумент", Объект.Ссылка);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
		
	Если Не СтруктураОтбораНоменклатуры = Неопределено Тогда
		СвернутаяТаблицаЗапасы = СвернутаяТаблицаЗапасы.НайтиСтроки(СтруктураОтбораНоменклатуры);
	КонецЕсли;
	
	СтруктураДляПоискаСвободногоОстатка = Новый Структура;
	СтруктураДляПоискаСвободногоОстатка.Вставить("Номенклатура",);
	СтруктураДляПоискаСвободногоОстатка.Вставить("Характеристика",);
	СтруктураДляПоискаСвободногоОстатка.Вставить("Партия",);
	СтруктураДляПоискаСвободногоОстатка.Вставить("СвободныйОстаток", Истина);
	
	СтруктураДляПоиска = Новый Структура;
	СтруктураДляПоиска.Вставить("Номенклатура",);
	СтруктураДляПоиска.Вставить("Характеристика",);
	СтруктураДляПоиска.Вставить("Партия",);
	СтруктураДляПоиска.Вставить("ЕдиницаИзмерения",);
	СтруктураДляПоиска.Вставить("ЗаказПокупателя",);
	
	СтруктураДляПоискаБезДатыОтгрузки = Новый Структура;
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Номенклатура",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Характеристика",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Партия",);
	
	СтруктураДляПоискаПоСкладу = Новый Структура;
	СтруктураДляПоискаПоСкладу.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладу.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладу.Вставить("Партия",);
	СтруктураДляПоискаПоСкладу.Вставить("СтруктурнаяЕдиница",);
	СтруктураДляПоискаПоСкладу.Вставить("ЗаказПокупателя",);
	
	СтруктураДляПоискаПоСкладуПоЗаказу = Новый Структура;
	СтруктураДляПоискаПоСкладуПоЗаказу.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладуПоЗаказу.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладуПоЗаказу.Вставить("Партия",);
	СтруктураДляПоискаПоСкладуПоЗаказу.Вставить("СтруктурнаяЕдиница",);
	СтруктураДляПоискаПоСкладуПоЗаказу.Вставить("ЗаказПокупателя",);
	
	СтрокиКУдалению = Новый Массив;
	МассивОбработанныхСтрок = Новый Массив;
	
	Для Каждого СтрокаТабЗапасы Из СвернутаяТаблицаЗапасы Цикл
		
		Если НЕ ТипЗнч(СтрокаТабЗапасы.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
			Или Не ЗначениеЗаполнено(СтрокаТабЗапасы.Номенклатура) Тогда 
			Продолжить
		КонецЕсли;
		
		СтруктураДляПоиска.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоиска.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоиска.Партия = СтрокаТабЗапасы.Партия;
		СтруктураДляПоиска.ЕдиницаИзмерения = СтрокаТабЗапасы.ЕдиницаИзмерения;
		СтруктураДляПоиска.ЗаказПокупателя = СтрокаТабЗапасы.ЗаказПокупателя;
		
		СтруктураДляПоискаБезДатыОтгрузки.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоискаБезДатыОтгрузки.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоискаБезДатыОтгрузки.Партия = СтрокаТабЗапасы.Партия;
		
		МассивСтрокОстаткиСвободные = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаСвободногоОстатка);
		МассивСтрокОстаткиОбщие = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаБезДатыОтгрузки);
		
		Для Каждого СтрокаСвободногоОстатка Из МассивСтрокОстаткиСвободные Цикл
			 МассивСтрокОстаткиОбщие.Добавить(СтрокаСвободногоОстатка);
		КонецЦикла;
		
		Если Не МассивСтрокОстаткиОбщие.Количество() Тогда Продолжить КонецЕсли;
		
		РасходПоРезервуПоВсемСкладам = 0;
		
		Для Каждого СтрокаМассива Из МассивСтрокОстаткиОбщие Цикл
			РасходПоРезервуПоВсемСкладам = РасходПоРезервуПоВсемСкладам + СтрокаМассива.РасходПоРезерву;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(СтрокаТабЗапасы.ЕдиницаИзмерения)
			Или ТипЗнч(СтрокаТабЗапасы.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения")
			Тогда 
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабЗапасы.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		МассивСтрокЗапасы = Объект[ИмяТЧ].НайтиСтроки(СтруктураДляПоиска);
		
		КоличествоДляРаспределения = 0;
		ОтгруженоВсего = 0;
		
		Для Каждого СтрокаМассива Из МассивСтрокЗапасы Цикл
			КоличествоДляРаспределения = КоличествоДляРаспределения + СтрокаМассива.Количество;
			ОтгруженоВсего = ОтгруженоВсего + СтрокаМассива.Отгружено;
		КонецЦикла;
		
		ОтгруженоБезРезерва = ОтгруженоВсего - РасходПоРезервуПоВсемСкладам/КоэффициентЕдиницыИзмерения;
		КомпенсацияОтгружено = 0;
		
		Если КоличествоДляРаспределения = 0 Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура %1% по заказу %2% отгружена. 
									|Потребность в распределении отсутствует.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1%", Строка(СтрокаТабЗапасы.Номенклатура));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2%", ?(ЗначениеЗаполнено(СтрокаТабЗапасы.ЗаказПокупателя), Строка(СтрокаТабЗапасы.ЗаказПокупателя), "<Без заказа>"));
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстСообщения;
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;
		
		СтрокиКУдалению.Очистить();
		МассивОбработанныхСтрок.Очистить();
		ПерваяСтрока = Неопределено;
		ОстатокПослеРаспределенияСтроки = 0;
		
		Для Каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.Количество) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке: %1 не заполнено количество.'"),
					СтрокаЗапасы.НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаЗапасы.НомерСтроки,
					"Количество");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле); 
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			Если КоличествоДляРаспределения = 0 Тогда
				СтрокиКУдалению.Добавить(СтрокаЗапасы);
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗапасы.СтруктурнаяЕдиница) Тогда
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.СтруктурнаяЕдиница;
			ИначеЕсли ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаРезерв) Тогда
				СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиницаРезерв;
			Иначе
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
				СтрокаЗапасы.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтруктурнаяЕдиницаДляПоиска) Тогда Продолжить КонецЕсли;
				
			СтруктураДляПоискаПоСкладу.Номенклатура = СтрокаТабЗапасы.Номенклатура;
			СтруктураДляПоискаПоСкладу.Характеристика = СтрокаТабЗапасы.Характеристика;
			СтруктураДляПоискаПоСкладу.Партия = СтрокаТабЗапасы.Партия;
			СтруктураДляПоискаПоСкладу.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
			СтруктураДляПоискаПоСкладу.ЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();
			
			СтруктураДляПоискаПоСкладуПоЗаказу.Номенклатура = СтрокаТабЗапасы.Номенклатура;
			СтруктураДляПоискаПоСкладуПоЗаказу.Характеристика = СтрокаТабЗапасы.Характеристика;
			СтруктураДляПоискаПоСкладуПоЗаказу.Партия = СтрокаТабЗапасы.Партия;
			СтруктураДляПоискаПоСкладуПоЗаказу.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
			СтруктураДляПоискаПоСкладуПоЗаказу.ЗаказПокупателя = СтрокаТабЗапасы.ЗаказПокупателя;
			
			МассивСтрокОстаткиВЦелом = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаПоСкладу);
			МассивСтрокПоЗаказу = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаПоСкладуПоЗаказу);
			
			СтрокаЗапасы.Резерв = 0;
			
			Если Не МассивСтрокОстаткиВЦелом.Количество() Или МассивСтрокОстаткиВЦелом[0].КоличествоОстаток = 0 Тогда
				
				Если МассивСтрокОстаткиОбщие.Количество() И СтрокаЗапасы.Отгружено = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				Иначе
					КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.Отгружено;
					СтрокаЗапасы.Количество = СтрокаЗапасы.Отгружено;
					ОтгруженоБезРезерва = ?(ОтгруженоБезРезерва > СтрокаЗапасы.Количество, ОтгруженоБезРезерва - СтрокаЗапасы.Количество, 0);
					МассивОбработанныхСтрок.Добавить(СтрокаЗапасы);
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			
			СтрокаОстатка = МассивСтрокОстаткиВЦелом[0];
			
			Если НЕ МассивСтрокПоЗаказу.Количество() Тогда
				СтрокаПоСкладуПоЗаказу = СтрокаОстатка;
			Иначе
				СтрокаПоСкладуПоЗаказу = МассивСтрокПоЗаказу[0];
			КонецЕсли;
			
			КоличествоОстаток = СтрокаОстатка.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
			РасходПоРезерву = СтрокаПоСкладуПоЗаказу.РасходПоРезерву/КоэффициентЕдиницыИзмерения;
			ТекРасходПоРезерву = РасходПоРезерву;
			РезервПоДругимДокументам = СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам/КоэффициентЕдиницыИзмерения;
			
			Если РезервПоДругимДокументам - РасходПоРезерву >= 0 Тогда
				РезервПоДругимДокументам = РезервПоДругимДокументам - РасходПоРезерву;
				СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам = СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам - СтрокаПоСкладуПоЗаказу.РасходПоРезерву;
				РасходПоРезерву = 0;
				СтрокаПоСкладуПоЗаказу.РасходПоРезерву = 0;
			Иначе
				РасходПоРезерву = РасходПоРезерву - РезервПоДругимДокументам;
				СтрокаПоСкладуПоЗаказу.РасходПоРезерву = СтрокаПоСкладуПоЗаказу.РасходПоРезерву - СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам;
				РезервПоДругимДокументам = 0;
				СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам = 0;
			КонецЕсли;
			
			Если ОтгруженоБезРезерва>0 И СтрокаЗапасы.НеОтгружено = 0 Тогда
				ПолнаяОтгрузка = ОтгруженоБезРезерва + ТекРасходПоРезерву;
				Если ПолнаяОтгрузка > СтрокаЗапасы.Количество Тогда
					КомпенсацияОтгружено = ПолнаяОтгрузка - СтрокаЗапасы.Количество;
					СтрокаЗапасы.Отгружено = СтрокаЗапасы.Отгружено+КомпенсацияОтгружено;
					СтрокаЗапасы.Количество = ПолнаяОтгрузка;
					КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.НеОтгружено;
					ОтгруженоБезРезерва = 0;
				КонецЕсли;
			Иначе
				СтрокаЗапасы.Отгружено = СтрокаЗапасы.Отгружено - КомпенсацияОтгружено;
			КонецЕсли;
			ПолнаяОтгрузка = 0;
			
			Если СтрокаЗапасы.НеОтгружено < КоличествоОстаток Тогда
				
				Если ОстатокПослеРаспределенияСтроки > 0 Тогда
					
					Если СтрокаЗапасы.НеОтгружено + ОстатокПослеРаспределенияСтроки < КоличествоОстаток Тогда
						
						СтрокаЗапасы.НеОтгружено = СтрокаЗапасы.НеОтгружено + ОстатокПослеРаспределенияСтроки;
						ОстатокПослеРаспределенияСтроки = 0;
					Иначе
						СтрокаЗапасы.НеОтгружено = СтрокаЗапасы.Количество - СтрокаЗапасы.Отгружено;
						ОстатокПослеРаспределенияСтроки = (СтрокаЗапасы.НеОтгружено + ОстатокПослеРаспределенияСтроки) - КоличествоОстаток;
					КонецЕсли;
					
				Иначе
					
					Количество = ?(КоличествоОстаток > КоличествоДляРаспределения, КоличествоДляРаспределения, КоличествоОстаток);
					
					СтрокаЗапасы.НеОтгружено = Количество - СтрокаЗапасы.Отгружено;
					ОстатокПослеРаспределенияСтроки = СтрокаЗапасы.Количество - СтрокаЗапасы.НеОтгружено;
					
				КонецЕсли;
				
			Иначе
				
				Количество = ?(КоличествоОстаток > КоличествоДляРаспределения, КоличествоДляРаспределения, КоличествоОстаток);
				
				СтрокаЗапасы.НеОтгружено = Количество - СтрокаЗапасы.Отгружено;
				ОстатокПослеРаспределенияСтроки = СтрокаЗапасы.Количество - СтрокаЗапасы.НеОтгружено;
				
			КонецЕсли;
			
			СтрокаЗапасы.НеОтгружено = ?(СтрокаЗапасы.НеОтгружено<0,0,СтрокаЗапасы.НеОтгружено);
			
			СтрокаЗапасы.Количество = СтрокаЗапасы.НеОтгружено + (ТекРасходПоРезерву);
			СтрокаПоСкладуПоЗаказу.РасходПоРезерву = 0;
			
			Если СтрокаЗапасы.НеОтгружено > РезервПоДругимДокументам Тогда
				
				НеобходимыйРезерв = СтрокаЗапасы.НеОтгружено-РезервПоДругимДокументам+РасходПоРезерву;
				
				СтрокаЗапасы.Резерв = ?(НеобходимыйРезерв> КоличествоОстаток, КоличествоОстаток, НеобходимыйРезерв);
				
				СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам = 0;
			Иначе
				СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам = СтрокаПоСкладуПоЗаказу.РезервПоДругимДокументам - СтрокаЗапасы.НеОтгружено*КоэффициентЕдиницыИзмерения;
			КонецЕсли;
			
			НеотъемлемыйРезервТекДокумент = СтрокаПоСкладуПоЗаказу.НеотъемлемыйРезервТекДокумент/КоэффициентЕдиницыИзмерения;
			
			Если НеотъемлемыйРезервТекДокумент > СтрокаЗапасы.Резерв Тогда
				
				Если СтрокаЗапасы.Количество >= НеотъемлемыйРезервТекДокумент Тогда
					СтрокаЗапасы.Резерв = НеотъемлемыйРезервТекДокумент;
					СтрокаПоСкладуПоЗаказу.НеотъемлемыйРезервТекДокумент = 0;
				Иначе
					СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
					СтрокаПоСкладуПоЗаказу.НеотъемлемыйРезервТекДокумент = СтрокаПоСкладуПоЗаказу.НеотъемлемыйРезервТекДокумент - СтрокаЗапасы.Резерв*КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
			Иначе
				СтрокаПоСкладуПоЗаказу.НеотъемлемыйРезервТекДокумент = 0;
			КонецЕсли;
			
			СтрокаЗапасы.СтруктурнаяЕдиница = ?(Не ЗначениеЗаполнено(СтрокаЗапасы.СтруктурнаяЕдиница), СтруктурнаяЕдиницаДляПоиска, СтрокаЗапасы.СтруктурнаяЕдиница);
			
			СтрокаОстатка.КоличествоОстаток = СтрокаОстатка.КоличествоОстаток - СтрокаЗапасы.НеОтгружено*КоэффициентЕдиницыИзмерения;
			
			Если Не СтрокаЗапасы.ЭтоДубльСтроки Тогда
				ТекРасходПоРезерву = РасходПоРезервуПоВсемСкладам;
			КонецЕсли;
			
			СтрокаЗапасы.Количество = СтрокаЗапасы.Количество + СтрокаЗапасы.Отгружено - ТекРасходПоРезерву;
			
			КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.Количество;
			
			ПерваяСтрока = ?(ПерваяСтрока = Неопределено, СтрокаЗапасы, ПерваяСтрока);
			
			СтрокаУдалена = НайденаСтрокаСТакимЖеСкладомОбработанаТекущаяИУдаленаЗаказНаПроизводство(СтрокиКУдалению,СтрокаЗапасы, МассивОбработанныхСтрок);
			
			Если Не СтрокаУдалена Тогда
				МассивОбработанныхСтрок.Добавить(СтрокаЗапасы);
			КонецЕсли;
			
		КонецЦикла;
		
		Если КоличествоДляРаспределения > 0 И МассивСтрокОстаткиОбщие.Количество() Тогда
			
			Если ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаРезерв) Тогда
				СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиницаРезерв;
			Иначе
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
				СтрокаЗапасы.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
			КонецЕсли;
			
			ПодготовитьТаблицуСогласноПриоритетам(ТаблицаОстатков, СтруктурнаяЕдиницаДляПоиска);
			
			НоваяСтрока = Неопределено;
			
			НомерСтроки = СтрокаЗапасы.НомерСтроки;
			
			Для каждого СтрокаМассиваСтрокОстатки Из МассивСтрокОстаткиОбщие Цикл
				
				РасходПоРезерву = СтрокаМассиваСтрокОстатки.РасходПоРезерву/КоэффициентЕдиницыИзмерения;
				ТекРасходПоРезерву = РасходПоРезерву;
				РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам/КоэффициентЕдиницыИзмерения;
				
				Если РасходПоРезерву > 0 И РезервПоДругимДокументам > 0 Тогда
					
					Если РезервПоДругимДокументам - РасходПоРезерву >= 0 Тогда
						РезервПоДругимДокументам = РезервПоДругимДокументам - РасходПоРезерву;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам - СтрокаМассиваСтрокОстатки.РасходПоРезерву;
						РасходПоРезерву = 0;
						СтрокаМассиваСтрокОстатки.РасходПоРезерву = 0;
					Иначе
						РасходПоРезерву = РасходПоРезерву - РезервПоДругимДокументам;
						СтрокаМассиваСтрокОстатки.РасходПоРезерву = СтрокаОстатка.РасходПоРезерву - СтрокаОстатка.РезервПоДругимДокументам;
						РезервПоДругимДокументам = 0;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = 0;
					КонецЕсли;
					
				КонецЕсли;
				
				ОстатокНаСкладе = СтрокаМассиваСтрокОстатки.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
				
				Если ОстатокНаСкладе + РасходПоРезерву <= 0 Тогда Продолжить КонецЕсли;
				
				НоваяСтрока = Объект[ИмяТЧ].Вставить(НомерСтроки);
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасы);
				
				НоваяСтрока.СтруктурнаяЕдиница = СтрокаМассиваСтрокОстатки.СтруктурнаяЕдиница;
				НоваяСтрока.Резерв = 0;
				
				Если ОстатокНаСкладе > КоличествоДляРаспределения Тогда
					
					НоваяСтрока.Количество = КоличествоДляРаспределения;
					СтрокаМассиваСтрокОстатки.КоличествоОстаток = СтрокаМассиваСтрокОстатки.КоличествоОстаток - КоличествоДляРаспределения*КоэффициентЕдиницыИзмерения;
					КоличествоДляРаспределения = 0;
					
					Если НоваяСтрока.Количество > РезервПоДругимДокументам Тогда
						НоваяСтрока.Резерв = НоваяСтрока.Количество-РезервПоДругимДокументам;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = 0;
					Иначе
						НоваяСтрока.Резерв = 0;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
					КонецЕсли;
				Иначе
					НоваяСтрока.Количество = ОстатокНаСкладе+ТекРасходПоРезерву;
					КоличествоДляРаспределения = КоличествоДляРаспределения - НоваяСтрока.Количество;
					СтрокаМассиваСтрокОстатки.КоличествоОстаток = 0;
							
					Если НоваяСтрока.Количество > РезервПоДругимДокументам Тогда
						НоваяСтрока.Резерв = (ОстатокНаСкладе + РасходПоРезерву)-РезервПоДругимДокументам;
;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = 0;
					Иначе
						НоваяСтрока.Резерв = 0;
						СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам = СтрокаМассиваСтрокОстатки.РезервПоДругимДокументам - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
					КонецЕсли;
					
				КонецЕсли;
				
				СтрокаУдалена = НайденаСтрокаСТакимЖеСкладомОбработанаТекущаяИУдаленаЗаказНаПроизводство(СтрокиКУдалению,НоваяСтрока, МассивОбработанныхСтрок);
				
				Если Не СтрокаУдалена Тогда
					МассивОбработанныхСтрок.Добавить(НоваяСтрока);
				КонецЕсли;
				
				НомерСтроки = НомерСтроки + 1;
				
				Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
				
			КонецЦикла;
			
			ПоследняяСтрокаМассива = ?(МассивОбработанныхСтрок.Количество(), МассивОбработанныхСтрок[МассивОбработанныхСтрок.Количество() - 1], Неопределено);
			
			ПоследняяСтрока = ПоследняяСтрокаМассива;
			
			Если КоличествоДляРаспределения > 0 И Не ПоследняяСтрокаМассива = Неопределено Тогда
				ПоследняяСтрока.Количество = ПоследняяСтрока.Количество + КоличествоДляРаспределения;
			КонецЕсли;
			
		КонецЕсли;
		
		ОчиститьПриоритеты(ТаблицаОстатков);
		
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			Объект[ИмяТЧ].Удалить(СтрокаКУдалению);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет колонку "В резерв" табличной части документа Заказ покупателя без распределения по остаткам на других складах
//
Процедура ЗаполнитьКолонкуРезервПоОстаткамЗаказПокупателяБезРазбиения(Объект, ПараметрыОтбора = Неопределено, ИмяТЧ = "Запасы", ТипДокумента = "ЗаказПокупателя") Экспорт
	
	Если ПараметрыОтбора = Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
	КонецЕсли;
	ПараметрыОтбора.Вставить("ЭтоРазделитель", Ложь);
	
	Строки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
	Для каждого Строка Из Строки Цикл
		Строка.Резерв = 0;
	КонецЦикла;
	
	СтрокиДляВыгрузки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
	ТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки,"Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв");
	ТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв");
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаРезервПоОстаткамЗаказПокупателяБезРазбиения();
		
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.СтруктурнаяЕдиницаРезерв);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Если ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("Организации", РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.ПолучитьСписокОрганизацийДляОстатков(
			Объект.Организация));
	Иначе
		Запрос.УстановитьПараметр("Организации", 
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Константы.УчетПоКомпании.Компания(Объект.Организация)));
	КонецЕсли; 
	
	ТаблицаПериодов = Новый ТаблицаЗначений();
	ТаблицаПериодов.Колонки.Добавить("ДатаОтгрузки");
	ТаблицаПериодов.Колонки.Добавить("СтрокаЗапасы");
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		РезервДругимиДокументамиБазовыеЕдиницы = Выборка.РезервДругимиДокументами;
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", Выборка.Партия);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиницаРезерв", Выборка.СтруктурнаяЕдиницаРезерв);
		
		Для каждого КлючИЗначение Из ПараметрыОтбора Цикл
			Если СтруктураДляПоиска.Свойство(КлючИЗначение.Ключ) Тогда
				Продолжить;
			КонецЕсли;
			СтруктураДляПоиска.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
		
		МассивСтрокЗапасы = Объект[ИмяТЧ].НайтиСтроки(СтруктураДляПоиска);
		Для каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			НоваяСтрока = ТаблицаПериодов.Добавить();
			НоваяСтрока.ДатаОтгрузки = СтрокаЗапасы.ДатаОтгрузки;
			НоваяСтрока.СтрокаЗапасы = СтрокаЗапасы;
		КонецЦикла;
		
		ВсегоОстаток = Выборка.КоличествоОстаток;
		ТаблицаПериодов.Сортировать("ДатаОтгрузки");
		Для каждого СтрокаТаблицыПериодов Из ТаблицаПериодов Цикл
			СтрокаЗапасы = СтрокаТаблицыПериодов.СтрокаЗапасы;
			
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.ЕдиницаИзмерения)
				Или ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения")
				Тогда 
				КоэффициентЕдиницыИзмерения = 1;
			Иначе
				КоэффициентЕдиницыИзмерения = СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
			
			ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток / КоэффициентЕдиницыИзмерения);
			Количество = СтрокаЗапасы.Количество;
			
			Если РезервДругимиДокументамиБазовыеЕдиницы > 0 Тогда
				
				РезервДругимиДокументами = РезервДругимиДокументамиБазовыеЕдиницы/КоэффициентЕдиницыИзмерения;
				
				Если РезервДругимиДокументами>=Количество Тогда
					РезервДругимиДокументамиБазовыеЕдиницы =РезервДругимиДокументамиБазовыеЕдиницы - Количество*КоэффициентЕдиницыИзмерения;
					Продолжить
				Иначе
					Количество = Количество - РезервДругимиДокументами;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Количество >= ВсегоОстаток Тогда
				СтрокаЗапасы.Резерв = ВсегоОстаток;
				ВсегоОстаток = 0;
			Иначе
				СтрокаЗапасы.Резерв = Количество;
				ВсегоОстаток = ВсегоОстаток - Количество;
				ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток * КоэффициентЕдиницыИзмерения);
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаПериодов.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет количество по Остаткам и резервам в документе Расходная накладная
//
Процедура ЗаполнитьКоличествоПоОстаткамИРезервамРасходнаяНакладная(Объект, ПараметрыОтбора = Неопределено, СтруктураОтбораНоменклатуры = Неопределено, ИмяТЧ = "Запасы") Экспорт
	
	ЭтоЗаказНаряд = Ложь;
	
	ЭтоЧекККМ = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЧекККМ"), Истина, Ложь);
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЭтоЗаказНаряд = Истина;
		ИмяСтруктурнойЕдиницы = "СтруктурнаяЕдиницаРезерв"
	Иначе
		ИмяСтруктурнойЕдиницы = "СтруктурнаяЕдиница"
	КонецЕсли;
	
	Если ПараметрыОтбора = Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
	КонецЕсли;
	
	Для каждого Строка Из Объект[ИмяТЧ] Цикл
		Строка.Резерв = 0;
	КонецЦикла;
	
	Для Каждого СтрокаЗапасы Из Объект[ИмяТЧ] Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаЗапасы.Количество) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке: %1 не заполнено количество.'"),
				СтрокаЗапасы.НомерСтроки);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаЗапасы.НомерСтроки,
				"Количество");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, КонтекстноеПоле); 
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокиДляВыгрузки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);

	Если ЭтоЗаказНаряд Тогда
		Если ИмяТЧ = "Запасы" Тогда
			СтрокаКолонокДляЗапроса = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв, ТипНоменклатурыЗапас";
			СтрокаКолонокДляОбхода = "Номенклатура, Характеристика, Цена, ЕдиницаИзмерения, Партия";
			СтрокаСуммКолонокДляОбхода = "Количество, РезервОтгрузка, Вес, Объем";
		Иначе
			СтрокаКолонокДляЗапроса = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв";
			СтрокаКолонокДляОбхода = "Номенклатура, Характеристика, ЕдиницаИзмерения, Партия";
			СтрокаСуммКолонокДляОбхода = "Количество, РезервОтгрузка";
		КонецЕсли;
		
	Иначе
		СтрокаКолонокДляЗапроса = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Заказ, ТипНоменклатурыЗапас";
		СтрокаКолонокДляОбхода = "Номенклатура, Характеристика, Цена, ЕдиницаИзмерения, Партия, Заказ";
		
		Если ЭтоЧекККМ Тогда
			СтрокаСуммКолонокДляОбхода = "Количество, Резерв";
		Иначе
			СтрокаСуммКолонокДляОбхода = "Количество, Резерв, Вес, Объем";
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки, СтрокаКолонокДляЗапроса);
	ТаблицаЗапасы.Свернуть(СтрокаКолонокДляЗапроса);
	
	СвернутаяТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(,СтрокаКолонокДляОбхода + ","+СтрокаСуммКолонокДляОбхода);
	СвернутаяТаблицаЗапасы.Свернуть(СтрокаКолонокДляОбхода, СтрокаСуммКолонокДляОбхода);
	
	Если ЭтоЗаказНаряд Тогда
		Заказ = Объект.Ссылка;
	Иначе
		Заказ = ?(ЗначениеЗаполнено(Объект.Заказ), Объект.Заказ, Документы.ЗаказПокупателя.ПустаяСсылка());
	КонецЕсли;
	
	ЗаказДляТЧ = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, Неопределено);
	
	Если ТаблицаЗапасы.Колонки.Найти("Заказ") = Неопределено Тогда
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		
		ТаблицаЗапасы.Колонки.Добавить("Заказ", ОписаниеТипов);
		СвернутаяТаблицаЗапасы.Колонки.Добавить("Заказ", ОписаниеТипов);
		
		Для Каждого СтрокаТаблицы Из ТаблицаЗапасы Цикл
			СтрокаТаблицы.Заказ = ЗаказДляТЧ;
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из СвернутаяТаблицаЗапасы Цикл
			СтрокаТаблицы.Заказ = ЗаказДляТЧ;
		КонецЦикла;
		
		КолонкаСтруктурнойЕдиницы = ТаблицаЗапасы.Колонки.Найти("СтруктурнаяЕдиницаРезерв");
		
		Если Не КолонкаСтруктурнойЕдиницы = Неопределено Тогда
			КолонкаСтруктурнойЕдиницы.Имя = "СтруктурнаяЕдиница";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицаЗапасы.Колонки.Найти("ТипНоменклатурыЗапас") = Неопределено Тогда
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Булево"));
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		
		ТаблицаЗапасы.Колонки.Добавить("ТипНоменклатурыЗапас", ОписаниеТипов);
		
		Для Каждого СтрокаТаблицы Из ТаблицаЗапасы Цикл
			СтрокаТаблицы.ТипНоменклатурыЗапас = Истина;
		КонецЦикла;
		
	КонецЕсли;
		
	МассивНоменклатуры = ТаблицаЗапасы.ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаЗаполнитьКоличествоПоОстаткамИРезервамРасходнаяНакладная();
		
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	Если ЭтоЗаказНаряд Тогда
		ЗаказВШапке = Истина
	Иначе
		ЗаказВШапке = ?(Объект.ПоложениеЗаказаПокупателя = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, Истина, Ложь)
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПриоритетныйСклад", ?(ЭтоЗаказНаряд,Объект.СтруктурнаяЕдиницаРезерв,Объект.СтруктурнаяЕдиница));
	Запрос.УстановитьПараметр("ЗаказВШапке", ЗаказВШапке);
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
	
	УчетПоЯчейкам = ПолучитьФункциональнуюОпцию("УчетПоЯчейкам");
	
	Если УчетПоЯчейкам Тогда
		СтруктураПараметров = Новый Структура("Номенклатура, Организация, Регистратор", МассивНоменклатуры, Организация, Объект.Ссылка);
		ОстаткиПоЯчейкам = ОстаткиПоЯчейкам(СтруктураПараметров, ТаблицаЗапасы);
	КонецЕсли;
	
	СтруктураДляПоиска = Новый Структура;
	СтруктураДляПоиска.Вставить("Номенклатура",);
	СтруктураДляПоиска.Вставить("Характеристика",);
	СтруктураДляПоиска.Вставить("Партия",);
	Если ИмяТЧ = "Запасы" Тогда
		СтруктураДляПоиска.Вставить("Цена",);
	КонецЕсли;
	СтруктураДляПоиска.Вставить("ЕдиницаИзмерения",);
	
	Если Не ЭтоЗаказНаряд Тогда
		СтруктураДляПоиска.Вставить("Заказ",);
	КонецЕсли;
	
	СтруктураДляПоискаБезДатыОтгрузки = Новый Структура;
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Номенклатура",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Характеристика",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Партия",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Заказ",);
	
	СтруктураДляПоискаПоСкладу = Новый Структура;
	СтруктураДляПоискаПоСкладу.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладу.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладу.Вставить("Партия",);
	СтруктураДляПоискаПоСкладу.Вставить("СтруктурнаяЕдиница",);
	СтруктураДляПоискаПоСкладу.Вставить("Заказ",);
	
	СтруктураДляПоискаПоСкладуБезЗаказа = Новый Структура;
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("Партия",);
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("СтруктурнаяЕдиница",);
	
	Если УчетПоЯчейкам Тогда
		СтруктураДляПоискаПоЯчейкам = Новый Структура;
		СтруктураДляПоискаПоЯчейкам.Вставить("Номенклатура",);
		СтруктураДляПоискаПоЯчейкам.Вставить("Характеристика",);
		СтруктураДляПоискаПоЯчейкам.Вставить("Партия",);
		СтруктураДляПоискаПоЯчейкам.Вставить("СтруктурнаяЕдиница",);
		СтруктураДляПоискаПоЯчейкам.Вставить("Ячейка",);
	КонецЕсли;
	
	Для Каждого СтрокаТабЗапасы Из СвернутаяТаблицаЗапасы Цикл
		
		Если НЕ ТипЗнч(СтрокаТабЗапасы.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
			Или Не ЗначениеЗаполнено(СтрокаТабЗапасы.Номенклатура) Тогда 
			Продолжить
		КонецЕсли;
		
		Если Не ЭтоЧекККМ И СтрокаТабЗапасы.Количество > 0 Тогда
			ВесЕдиницы = Окр(СтрокаТабЗапасы.Вес/СтрокаТабЗапасы.Количество, 4, РежимОкругления.Окр15как20);
			ОбъемЕдиницы = Окр(СтрокаТабЗапасы.Объем/СтрокаТабЗапасы.Количество, 4, РежимОкругления.Окр15как20);
		Иначе
			ВесЕдиницы = 0;
			ОбъемЕдиницы = 0;
		КонецЕсли;
		
		СтруктураДляПоиска.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоиска.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоиска.Партия = СтрокаТабЗапасы.Партия;
		Если ИмяТЧ = "Запасы" Тогда
			СтруктураДляПоиска.Цена = СтрокаТабЗапасы.Цена;
		КонецЕсли;
		СтруктураДляПоиска.ЕдиницаИзмерения = СтрокаТабЗапасы.ЕдиницаИзмерения;
		
		Если Не ЭтоЗаказНаряд Тогда
			Если ЗначениеЗаполнено(СтрокаТабЗапасы.Заказ) Тогда
				СтруктураДляПоиска.Заказ = СтрокаТабЗапасы.Заказ;
			ИначеЕсли ЗначениеЗаполнено(Объект.Заказ) Тогда
				СтруктураДляПоиска.Заказ = Объект.Заказ;
			Иначе
				СтруктураДляПоиска.Заказ = Документы.ЗаказПокупателя.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДляПоискаБезДатыОтгрузки.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоискаБезДатыОтгрузки.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоискаБезДатыОтгрузки.Партия = СтрокаТабЗапасы.Партия;
		СтруктураДляПоискаБезДатыОтгрузки.Заказ = ?(СтрокаТабЗапасы.Заказ = Неопределено, Документы.ЗаказПокупателя.ПустаяСсылка(), СтрокаТабЗапасы.Заказ);
		
		МассивСтрокОстаткиОбщие = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаБезДатыОтгрузки);
		
		МассивСтрокЗапасы = Объект[ИмяТЧ].НайтиСтроки(СтруктураДляПоиска);
		
		КоличествоДляРаспределения = 0;
		Для Каждого СтрокаМассива Из МассивСтрокЗапасы Цикл
			КоличествоДляРаспределения = КоличествоДляРаспределения + СтрокаМассива.Количество;
		КонецЦикла;
		
		СтрокиКУдалению = Новый Массив;
		МассивОбработанныхСтрок = Новый Массив;
		
		Для Каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			Если ЭтоЗаказНаряд Тогда
				ЗаказТЧ = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, Неопределено);
			Иначе
				ЗаказТЧ = СтрокаЗапасы.Заказ;
			КонецЕсли;
			
			СтрокаУдалена = НайденИУдаленДубльТекущейСтроки(СтрокиКУдалению,СтрокаЗапасы, МассивОбработанныхСтрок,, ИмяСтруктурнойЕдиницы, ИмяТЧ);
			
			Если СтрокаУдалена Тогда Продолжить КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗапасы[ИмяСтруктурнойЕдиницы]) Тогда
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы[ИмяСтруктурнойЕдиницы];
			ИначеЕсли ЗначениеЗаполнено(Объект.СтруктурнаяЕдиница) Тогда
				СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиница;
			Иначе
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
				СтрокаЗапасы[ИмяСтруктурнойЕдиницы] = СтруктурнаяЕдиницаДляПоиска;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЗаказТЧ) Тогда
				СтруктураДляПоискаПоСкладу.Заказ = ЗаказТЧ;
			Иначе
				СтруктураДляПоискаПоСкладу.Заказ = Документы.ЗаказПокупателя.ПустаяСсылка();
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.ЕдиницаИзмерения)
				Или ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения")
				Тогда 
				КоэффициентЕдиницыИзмерения = 1;
			Иначе
				КоэффициентЕдиницыИзмерения = СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтруктурнаяЕдиницаДляПоиска) Тогда
				
				СтруктураДляПоискаПоСкладу.Номенклатура = СтрокаТабЗапасы.Номенклатура;
				СтруктураДляПоискаПоСкладу.Характеристика = СтрокаТабЗапасы.Характеристика;
				СтруктураДляПоискаПоСкладу.Партия = СтрокаТабЗапасы.Партия;
				СтруктураДляПоискаПоСкладу.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
				
				МассивСтрокОстатки = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаПоСкладу);
				
				Если МассивСтрокОстатки.Количество() И МассивСтрокОстатки[0].КоличествоОстаток = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
					Продолжить;
				КонецЕсли;
				
				Если Не МассивСтрокОстатки.Количество() Тогда
					Если МассивСтрокОстаткиОбщие.Количество() Тогда
						СтрокиКУдалению.Добавить(СтрокаЗапасы);
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				
				СтрокаОстатка = МассивСтрокОстатки[0];
				
				Если УчетПоЯчейкам Тогда
					
					СтруктураДляПоискаПоЯчейкам.Номенклатура = СтрокаТабЗапасы.Номенклатура;
					СтруктураДляПоискаПоЯчейкам.Характеристика = СтрокаТабЗапасы.Характеристика;
					СтруктураДляПоискаПоЯчейкам.Партия = СтрокаТабЗапасы.Партия;
					СтруктураДляПоискаПоЯчейкам.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
					СтруктураДляПоискаПоЯчейкам.Ячейка = СтрокаЗапасы.Ячейка;
					
					МассивСтрокОстатки = ОстаткиПоЯчейкам.НайтиСтроки(СтруктураДляПоискаПоЯчейкам);
					
					Если МассивСтрокОстатки.Количество() Тогда
						СтрокаПоЯчейке = МассивСтрокОстатки[0];
						КоличествоОстаток = СтрокаПоЯчейке.ОстатокСУчетомДвижения/КоэффициентЕдиницыИзмерения;
					Иначе
						КоличествоОстаток = 0;
					КонецЕсли
					
				Иначе
					КоличествоОстаток = СтрокаОстатка.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
				Если КоличествоДляРаспределения <= КоличествоОстаток Тогда
					СтрокаЗапасы.Количество = КоличествоДляРаспределения;
				Иначе
					СтрокаЗапасы.Количество = КоличествоОстаток;
				КонецЕсли;
				
				Если Не ЭтоЧекККМ Тогда
					СтрокаЗапасы.Вес = Окр(СтрокаЗапасы.Количество * ВесЕдиницы, 4, РежимОкругления.Окр15как20);
					СтрокаЗапасы.Объем = Окр(СтрокаЗапасы.Количество * ОбъемЕдиницы, 4, РежимОкругления.Окр15как20);
				КонецЕсли;
				
				Если УчетПоЯчейкам И МассивСтрокОстатки.Количество() Тогда
					СтрокаПоЯчейке.ОстатокСУчетомДвижения = СтрокаПоЯчейке.ОстатокСУчетомДвижения - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
				ВсегоРезерва = СтрокаОстатка.ВсегоРезерва/КоэффициентЕдиницыИзмерения;
				
				Если СтрокаЗапасы.Количество > ВсегоРезерва Тогда 
					СтрокаЗапасы.Резерв = ВсегоРезерва;
					СтрокаОстатка.ВсегоРезерва = 0;
				Иначе
					СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
					СтрокаОстатка.ВсегоРезерва = СтрокаОстатка.ВсегоРезерва - СтрокаЗапасы.Резерв*КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
				СтрокаОстатка.КоличествоОстаток = СтрокаОстатка.КоличествоОстаток - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
				
				КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.Количество;
				
				Если СтрокаЗапасы.Количество = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				Иначе
					МассивОбработанныхСтрок.Добавить(СтрокаЗапасы);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если КоличествоДляРаспределения > 0 И МассивСтрокОстаткиОбщие.Количество() Тогда
			
			Если Не ЗначениеЗаполнено(СтруктурнаяЕдиницаДляПоиска) Тогда
				
				Если ЗначениеЗаполнено(Объект.СтруктурнаяЕдиница) Тогда
					СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиница;
				Иначе
					СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
					СтрокаЗапасы[ИмяСтруктурнойЕдиницы] = СтруктурнаяЕдиницаДляПоиска;
				КонецЕсли;
				
			КонецЕсли;
			
			ПодготовитьТаблицуСогласноПриоритетам(ТаблицаОстатков, СтруктурнаяЕдиницаДляПоиска);
			
			НоваяСтрока = Неопределено;
			
			МассивСтрокОбходаСкладов = Новый Массив;
			
			Для каждого СтрокаМассиваСтрокОстатки Из МассивСтрокОстаткиОбщие Цикл
				
				ОстатокНаСкладе = СтрокаМассиваСтрокОстатки.КоличествоОстаток;
				
				Если ОстатокНаСкладе = 0 Тогда Продолжить КонецЕсли;
				Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
				
				МассивСтрокОбходаСкладов.Очистить();
				
				Если УчетПоЯчейкам Тогда
					СтруктураДляПоискаПоСкладуБезЗаказа.Номенклатура = СтрокаМассиваСтрокОстатки.Номенклатура;
					СтруктураДляПоискаПоСкладуБезЗаказа.Характеристика = СтрокаМассиваСтрокОстатки.Характеристика;
					СтруктураДляПоискаПоСкладуБезЗаказа.Партия = СтрокаМассиваСтрокОстатки.Партия;
					СтруктураДляПоискаПоСкладуБезЗаказа.СтруктурнаяЕдиница = СтрокаМассиваСтрокОстатки.СтруктурнаяЕдиница;
					
					СтрокиОбходаСкладов = ОстаткиПоЯчейкам.НайтиСтроки(СтруктураДляПоискаПоСкладуБезЗаказа);
					
					Если Не СтрокиОбходаСкладов.Количество() Тогда
						МассивСтрокОбходаСкладов.Добавить(СтрокаМассиваСтрокОстатки);
					Иначе
						Для Каждого НайденнаяСтрока Из СтрокиОбходаСкладов Цикл
							МассивСтрокОбходаСкладов.Добавить(НайденнаяСтрока);
						КонецЦикла;
					КонецЕсли;
					
				Иначе
					МассивСтрокОбходаСкладов.Добавить(СтрокаМассиваСтрокОстатки);
				КонецЕсли;
				
				НомерСтроки = СтрокаЗапасы.НомерСтроки;
				
				Для Каждого СтрокаОбхода Из МассивСтрокОбходаСкладов Цикл
					
					НоваяСтрока = Объект[ИмяТЧ].Вставить(НомерСтроки);
					НомерСтроки = НомерСтроки + 1;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасы);
					
					НоваяСтрока.Количество = 0;
					НоваяСтрока.Резерв = 0;
					НоваяСтрока.Ячейка = Неопределено;
					
					Если УчетПоЯчейкам Тогда 
						НоваяСтрока.Ячейка = СтрокаОбхода.Ячейка;
						ОстатокНаСкладе = СтрокаОбхода.ОстатокСУчетомДвижения/КоэффициентЕдиницыИзмерения;
					Иначе
						ОстатокНаСкладе = СтрокаОбхода.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
					КонецЕсли;
					
					НоваяСтрока[ИмяСтруктурнойЕдиницы] = СтрокаМассиваСтрокОстатки.СтруктурнаяЕдиница;
					
					ВсегоРезерва = СтрокаМассиваСтрокОстатки.ВсегоРезерва/КоэффициентЕдиницыИзмерения;
					
					Если ОстатокНаСкладе > КоличествоДляРаспределения Тогда
						
						ЗначениеРезерва = 0;
						
						НоваяСтрока.Количество = КоличествоДляРаспределения;
						
						Если СтрокаМассиваСтрокОстатки.ВсегоРезерва > 0 Тогда
							ЗначениеРезерва = ?(ВсегоРезерва > НоваяСтрока.Количество, НоваяСтрока.Количество, ВсегоРезерва);
						КонецЕсли;
						
						НоваяСтрока.Резерв = ЗначениеРезерва;
						
						СтрокаМассиваСтрокОстатки.КоличествоОстаток = СтрокаМассиваСтрокОстатки.КоличествоОстаток - КоличествоДляРаспределения*КоэффициентЕдиницыИзмерения;
						КоличествоДляРаспределения = 0;
						СтрокаМассиваСтрокОстатки.ВсегоРезерва = СтрокаМассиваСтрокОстатки.ВсегоРезерва - НоваяСтрока.Резерв*КоэффициентЕдиницыИзмерения;
						
						Если УчетПоЯчейкам Тогда СтрокаОбхода.ОстатокСУчетомДвижения = СтрокаОбхода.ОстатокСУчетомДвижения - КоличествоДляРаспределения*КоэффициентЕдиницыИзмерения КонецЕсли;
						
						МассивОбработанныхСтрок.Добавить(НоваяСтрока);
						
						Прервать;
					Иначе
						
						ЗначениеРезерва = 0;
						
						НоваяСтрока.Количество = ОстатокНаСкладе;
						
						Если ВсегоРезерва > 0 Тогда
							ЗначениеРезерва = ?(ВсегоРезерва > НоваяСтрока.Количество, НоваяСтрока.Количество, ВсегоРезерва);
						КонецЕсли;
						СтрокаМассиваСтрокОстатки.ВсегоРезерва = СтрокаМассиваСтрокОстатки.ВсегоРезерва - ЗначениеРезерва;
						
						НоваяСтрока.Резерв = ЗначениеРезерва;
						КоличествоДляРаспределения = КоличествоДляРаспределения - ОстатокНаСкладе;
						СтрокаМассиваСтрокОстатки.КоличествоОстаток = 0;
						Если УчетПоЯчейкам Тогда СтрокаОбхода.ОстатокСУчетомДвижения = 0 КонецЕсли;
						
					КонецЕсли;
					
					Если Не ЭтоЧекККМ Тогда
						НоваяСтрока.Вес = Окр(НоваяСтрока.Количество * ВесЕдиницы, 4, РежимОкругления.Окр15как20);
						НоваяСтрока.Объем = Окр(НоваяСтрока.Количество * ОбъемЕдиницы, 4, РежимОкругления.Окр15как20);
					КонецЕсли;
					
					СтрокаУдалена = НайденИУдаленДубльТекущейСтроки(СтрокиКУдалению,НоваяСтрока, МассивОбработанныхСтрок, Истина, ИмяСтруктурнойЕдиницы,ИмяТЧ);
					
					Если Не СтрокаУдалена Тогда
						МассивОбработанныхСтрок.Добавить(НоваяСтрока);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ПоследняяСтрокаМассива = ?(МассивОбработанныхСтрок.Количество(), МассивОбработанныхСтрок[МассивОбработанныхСтрок.Количество() - 1], Неопределено);
			
			ПоследняяСтрока = ПоследняяСтрокаМассива;
			
			Если КоличествоДляРаспределения > 0 И Не ПоследняяСтрока = Неопределено Тогда
				ПоследняяСтрока.Количество = ПоследняяСтрока.Количество + КоличествоДляРаспределения;
				
				Если Не ЭтоЧекККМ Тогда
					ПоследняяСтрока.Вес = Окр(ПоследняяСтрока.Количество * ВесЕдиницы, 4, РежимОкругления.Окр15как20);
					ПоследняяСтрока.Объем = Окр(ПоследняяСтрока.Количество * ОбъемЕдиницы, 4, РежимОкругления.Окр15как20);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОчиститьПриоритеты(ТаблицаОстатков);
		
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			Объект[ИмяТЧ].Удалить(СтрокаКУдалению);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет количество по Остаткам и резервам в документе Производство
//
Процедура ЗаполнитьКоличествоПоОстаткамИРезервамПроизводство(Объект, ПараметрыОтбора = Неопределено) Экспорт
	
	ИмяТЧ = "Запасы";
	ИмяСтруктурнойЕдиницы = "СтруктурнаяЕдиница";
	
	Если ПараметрыОтбора = Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
	КонецЕсли;
	
	Для каждого Строка Из Объект[ИмяТЧ] Цикл
		Строка.Резерв = 0;
	КонецЦикла;
	
	Для Каждого СтрокаЗапасы Из Объект[ИмяТЧ] Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаЗапасы.Количество) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке: %1 не заполнено количество.'"), СтрокаЗапасы.НомерСтроки);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаЗапасы.НомерСтроки,
				"Количество");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле); 
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокиДляВыгрузки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);

	СтрокаКолонокДляЗапроса = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, ЗаказПокупателя";
	СтрокаКолонокДляОбхода = "Номенклатура, Характеристика, ЕдиницаИзмерения, Партия, ЗаказПокупателя";
	СтрокаСуммКолонокДляОбхода = "Количество, Резерв";
	
	ТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(СтрокиДляВыгрузки, СтрокаКолонокДляЗапроса);
	ТаблицаЗапасы.Свернуть(СтрокаКолонокДляЗапроса);
	
	СвернутаяТаблицаЗапасы = Объект[ИмяТЧ].Выгрузить(,СтрокаКолонокДляОбхода + ","+СтрокаСуммКолонокДляОбхода);
	СвернутаяТаблицаЗапасы.Свернуть(СтрокаКолонокДляОбхода, СтрокаСуммКолонокДляОбхода);
	
	Заказ = Объект.ЗаказПокупателя;
	
	КолонкаЗаказ = ТаблицаЗапасы.Колонки.Найти("ЗаказПокупателя"); 
	КолонкаЗаказ.Имя = "Заказ";
	
	Если ТаблицаЗапасы.Колонки.Найти("ТипНоменклатурыЗапас") = Неопределено Тогда
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Булево"));
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		
		ТаблицаЗапасы.Колонки.Добавить("ТипНоменклатурыЗапас", ОписаниеТипов);
		
		Для Каждого СтрокаТаблицы Из ТаблицаЗапасы Цикл
			СтрокаТаблицы.ТипНоменклатурыЗапас = Истина;
		КонецЦикла;
		
	КонецЕсли;
		
	МассивНоменклатуры = ТаблицаЗапасы.ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаЗаполнитьКоличествоПоОстаткамИРезервамРасходнаяНакладная();
		
	Организация = Константы.УчетПоКомпании.Компания(Объект.Организация);
	
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПриоритетныйСклад", Объект.СтруктурнаяЕдиницаЗапасов);
	Запрос.УстановитьПараметр("ЗаказВШапке",?(Объект.ПоложениеЗаказаПокупателя = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке, Истина, Ложь));
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатков = РезультатЗапроса.Выгрузить();
	
	УчетПоЯчейкам = ПолучитьФункциональнуюОпцию("УчетПоЯчейкам");
	
	Если УчетПоЯчейкам Тогда
		СтруктураПараметров = Новый Структура("Номенклатура, Организация, Регистратор", МассивНоменклатуры, Организация, Объект.Ссылка);
		ОстаткиПоЯчейкам = ОстаткиПоЯчейкам(СтруктураПараметров, ТаблицаЗапасы);
	КонецЕсли;
	
	СтруктураДляПоиска = Новый Структура;
	СтруктураДляПоиска.Вставить("Номенклатура",);
	СтруктураДляПоиска.Вставить("Характеристика",);
	СтруктураДляПоиска.Вставить("Партия",);
	СтруктураДляПоиска.Вставить("ЕдиницаИзмерения",);
	СтруктураДляПоиска.Вставить("ЗаказПокупателя",);
	
	СтруктураДляПоискаБезДатыОтгрузки = Новый Структура;
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Номенклатура",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Характеристика",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Партия",);
	СтруктураДляПоискаБезДатыОтгрузки.Вставить("Заказ",);
	
	СтруктураДляПоискаПоСкладу = Новый Структура;
	СтруктураДляПоискаПоСкладу.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладу.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладу.Вставить("Партия",);
	СтруктураДляПоискаПоСкладу.Вставить("СтруктурнаяЕдиница",);
	СтруктураДляПоискаПоСкладу.Вставить("Заказ",);
	
	СтруктураДляПоискаПоСкладуБезЗаказа = Новый Структура;
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("Номенклатура",);
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("Характеристика",);
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("Партия",);
	СтруктураДляПоискаПоСкладуБезЗаказа.Вставить("СтруктурнаяЕдиница",);
	
	Если УчетПоЯчейкам Тогда
		СтруктураДляПоискаПоЯчейкам = Новый Структура;
		СтруктураДляПоискаПоЯчейкам.Вставить("Номенклатура",);
		СтруктураДляПоискаПоЯчейкам.Вставить("Характеристика",);
		СтруктураДляПоискаПоЯчейкам.Вставить("Партия",);
		СтруктураДляПоискаПоЯчейкам.Вставить("СтруктурнаяЕдиница",);
		СтруктураДляПоискаПоЯчейкам.Вставить("Ячейка",);
	КонецЕсли;
	
	Для Каждого СтрокаТабЗапасы Из СвернутаяТаблицаЗапасы Цикл
		
		Если НЕ ТипЗнч(СтрокаТабЗапасы.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
			Или Не ЗначениеЗаполнено(СтрокаТабЗапасы.Номенклатура) Тогда 
			Продолжить
		КонецЕсли;
		
		СтруктураДляПоиска.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоиска.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоиска.Партия = СтрокаТабЗапасы.Партия;
		СтруктураДляПоиска.ЕдиницаИзмерения = СтрокаТабЗапасы.ЕдиницаИзмерения;
		
		Если ЗначениеЗаполнено(СтрокаТабЗапасы.ЗаказПокупателя) Тогда
			СтруктураДляПоиска.ЗаказПокупателя = СтрокаТабЗапасы.ЗаказПокупателя;
		Иначе
			СтруктураДляПоиска.ЗаказПокупателя = Объект.ЗаказПокупателя;
		КонецЕсли;
		
		СтруктураДляПоискаБезДатыОтгрузки.Номенклатура = СтрокаТабЗапасы.Номенклатура;
		СтруктураДляПоискаБезДатыОтгрузки.Характеристика = СтрокаТабЗапасы.Характеристика;
		СтруктураДляПоискаБезДатыОтгрузки.Партия = СтрокаТабЗапасы.Партия;
		СтруктураДляПоискаБезДатыОтгрузки.Заказ = ?(СтрокаТабЗапасы.ЗаказПокупателя = Неопределено, Документы.ЗаказПокупателя.ПустаяСсылка(), СтрокаТабЗапасы.ЗаказПокупателя);
		
		МассивСтрокОстаткиОбщие = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаБезДатыОтгрузки);
		
		МассивСтрокЗапасы = Объект[ИмяТЧ].НайтиСтроки(СтруктураДляПоиска);
		
		КоличествоДляРаспределения = 0;
		Для Каждого СтрокаМассива Из МассивСтрокЗапасы Цикл
			КоличествоДляРаспределения = КоличествоДляРаспределения + СтрокаМассива.Количество;
		КонецЦикла;
		
		СтрокиКУдалению = Новый Массив;
		МассивОбработанныхСтрок = Новый Массив;
		
		Для Каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			ЗаказТЧ = СтрокаЗапасы.ЗаказПокупателя;
			
			СтрокаУдалена = НайденИУдаленДубльТекущейСтроки(СтрокиКУдалению,СтрокаЗапасы, МассивОбработанныхСтрок,, ИмяСтруктурнойЕдиницы, ИмяТЧ, "Производство");
			
			Если СтрокаУдалена Тогда Продолжить КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗапасы[ИмяСтруктурнойЕдиницы]) Тогда
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы[ИмяСтруктурнойЕдиницы];
			ИначеЕсли ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаЗапасов) Тогда
				СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиницаЗапасов;
			Иначе
				СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
				СтрокаЗапасы[ИмяСтруктурнойЕдиницы] = СтруктурнаяЕдиницаДляПоиска;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЗаказТЧ) Тогда
				СтруктураДляПоискаПоСкладу.Заказ = ЗаказТЧ;
			Иначе
				СтруктураДляПоискаПоСкладу.Заказ = Документы.ЗаказПокупателя.ПустаяСсылка();
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.ЕдиницаИзмерения)
				Или ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения")
				Тогда 
				КоэффициентЕдиницыИзмерения = 1;
			Иначе
				КоэффициентЕдиницыИзмерения = СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтруктурнаяЕдиницаДляПоиска) Тогда
				
				СтруктураДляПоискаПоСкладу.Номенклатура = СтрокаТабЗапасы.Номенклатура;
				СтруктураДляПоискаПоСкладу.Характеристика = СтрокаТабЗапасы.Характеристика;
				СтруктураДляПоискаПоСкладу.Партия = СтрокаТабЗапасы.Партия;
				СтруктураДляПоискаПоСкладу.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
				
				МассивСтрокОстатки = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоискаПоСкладу);
				
				Если МассивСтрокОстатки.Количество() И МассивСтрокОстатки[0].КоличествоОстаток = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
					Продолжить;
				КонецЕсли;
				
				Если Не МассивСтрокОстатки.Количество() Тогда
					Если МассивСтрокОстаткиОбщие.Количество() Тогда
						СтрокиКУдалению.Добавить(СтрокаЗапасы);
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				
				СтрокаОстатка = МассивСтрокОстатки[0];
				
				Если УчетПоЯчейкам Тогда
					
					СтруктураДляПоискаПоЯчейкам.Номенклатура = СтрокаТабЗапасы.Номенклатура;
					СтруктураДляПоискаПоЯчейкам.Характеристика = СтрокаТабЗапасы.Характеристика;
					СтруктураДляПоискаПоЯчейкам.Партия = СтрокаТабЗапасы.Партия;
					СтруктураДляПоискаПоЯчейкам.СтруктурнаяЕдиница = СтруктурнаяЕдиницаДляПоиска;
					СтруктураДляПоискаПоЯчейкам.Ячейка = СтрокаЗапасы.Ячейка;
					
					МассивСтрокОстатки = ОстаткиПоЯчейкам.НайтиСтроки(СтруктураДляПоискаПоЯчейкам);
					
					Если МассивСтрокОстатки.Количество() Тогда
						СтрокаПоЯчейке = МассивСтрокОстатки[0];
						КоличествоОстаток = СтрокаПоЯчейке.ОстатокСУчетомДвижения/КоэффициентЕдиницыИзмерения;
					Иначе
						КоличествоОстаток = 0;
					КонецЕсли
					
				Иначе
					КоличествоОстаток = СтрокаОстатка.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
				Если КоличествоДляРаспределения <= КоличествоОстаток Тогда
					СтрокаЗапасы.Количество = КоличествоДляРаспределения;
				Иначе
					СтрокаЗапасы.Количество = КоличествоОстаток;
				КонецЕсли;
				
				Если УчетПоЯчейкам И МассивСтрокОстатки.Количество() Тогда
					СтрокаПоЯчейке.ОстатокСУчетомДвижения = СтрокаПоЯчейке.ОстатокСУчетомДвижения - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
				ВсегоРезерва = СтрокаОстатка.ВсегоРезерва/КоэффициентЕдиницыИзмерения;
				
				Если СтрокаЗапасы.Количество > ВсегоРезерва Тогда 
					СтрокаЗапасы.Резерв = ВсегоРезерва;
					СтрокаОстатка.ВсегоРезерва = 0;
				Иначе
					СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
					СтрокаОстатка.ВсегоРезерва = СтрокаОстатка.ВсегоРезерва - СтрокаЗапасы.Резерв*КоэффициентЕдиницыИзмерения;
				КонецЕсли;
				
				СтрокаОстатка.КоличествоОстаток = СтрокаОстатка.КоличествоОстаток - СтрокаЗапасы.Количество*КоэффициентЕдиницыИзмерения;
				
				КоличествоДляРаспределения = КоличествоДляРаспределения - СтрокаЗапасы.Количество;
				
				Если СтрокаЗапасы.Количество = 0 Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				Иначе
					МассивОбработанныхСтрок.Добавить(СтрокаЗапасы);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если КоличествоДляРаспределения > 0 И МассивСтрокОстаткиОбщие.Количество() Тогда
			
			Если Не ЗначениеЗаполнено(СтруктурнаяЕдиницаДляПоиска) Тогда
				
				Если ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаЗапасов) Тогда
					СтруктурнаяЕдиницаДляПоиска = Объект.СтруктурнаяЕдиницаЗапасов;
				Иначе
					СтруктурнаяЕдиницаДляПоиска = СтрокаЗапасы.Номенклатура.Склад;
					СтрокаЗапасы[ИмяСтруктурнойЕдиницы] = СтруктурнаяЕдиницаДляПоиска;
				КонецЕсли;
				
			КонецЕсли;
			
			ПодготовитьТаблицуСогласноПриоритетам(ТаблицаОстатков, СтруктурнаяЕдиницаДляПоиска);
			
			НоваяСтрока = Неопределено;
			
			МассивСтрокОбходаСкладов = Новый Массив;
			
			Для каждого СтрокаМассиваСтрокОстатки Из МассивСтрокОстаткиОбщие Цикл
				
				ОстатокНаСкладе = СтрокаМассиваСтрокОстатки.КоличествоОстаток;
				
				Если ОстатокНаСкладе = 0 Тогда Продолжить КонецЕсли;
				Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
				
				МассивСтрокОбходаСкладов.Очистить();
				
				Если УчетПоЯчейкам Тогда
					СтруктураДляПоискаПоСкладуБезЗаказа.Номенклатура = СтрокаМассиваСтрокОстатки.Номенклатура;
					СтруктураДляПоискаПоСкладуБезЗаказа.Характеристика = СтрокаМассиваСтрокОстатки.Характеристика;
					СтруктураДляПоискаПоСкладуБезЗаказа.Партия = СтрокаМассиваСтрокОстатки.Партия;
					СтруктураДляПоискаПоСкладуБезЗаказа.СтруктурнаяЕдиница = СтрокаМассиваСтрокОстатки.СтруктурнаяЕдиница;
					
					СтрокиОбходаСкладов = ОстаткиПоЯчейкам.НайтиСтроки(СтруктураДляПоискаПоСкладуБезЗаказа);
					
					Если Не СтрокиОбходаСкладов.Количество() Тогда
						МассивСтрокОбходаСкладов.Добавить(СтрокаМассиваСтрокОстатки);
					Иначе
						Для Каждого НайденнаяСтрока Из СтрокиОбходаСкладов Цикл
							МассивСтрокОбходаСкладов.Добавить(НайденнаяСтрока);
						КонецЦикла;
					КонецЕсли;
					
				Иначе
					МассивСтрокОбходаСкладов.Добавить(СтрокаМассиваСтрокОстатки);
				КонецЕсли;
				
				НомерСтроки = СтрокаЗапасы.НомерСтроки;
				
				Для Каждого СтрокаОбхода Из МассивСтрокОбходаСкладов Цикл
					
					НоваяСтрока = Объект[ИмяТЧ].Вставить(НомерСтроки);
					НомерСтроки = НомерСтроки + 1;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасы);
					
					НоваяСтрока.Количество = 0;
					НоваяСтрока.Резерв = 0;
					НоваяСтрока.Ячейка = Неопределено;
					
					Если УчетПоЯчейкам Тогда 
						НоваяСтрока.Ячейка = СтрокаОбхода.Ячейка;
						ОстатокНаСкладе = СтрокаОбхода.ОстатокСУчетомДвижения/КоэффициентЕдиницыИзмерения;
					Иначе
						ОстатокНаСкладе = СтрокаОбхода.КоличествоОстаток/КоэффициентЕдиницыИзмерения;
					КонецЕсли;
					
					НоваяСтрока[ИмяСтруктурнойЕдиницы] = СтрокаМассиваСтрокОстатки.СтруктурнаяЕдиница;
					
					ВсегоРезерва = СтрокаМассиваСтрокОстатки.ВсегоРезерва/КоэффициентЕдиницыИзмерения;
					
					Если ОстатокНаСкладе > КоличествоДляРаспределения Тогда
						
						НоваяСтрока.Количество = КоличествоДляРаспределения;
						
						Если СтрокаМассиваСтрокОстатки.ВсегоРезерва > 0 Тогда
							ЗначениеРезерва = ?(ВсегоРезерва > НоваяСтрока.Количество, НоваяСтрока.Количество, ВсегоРезерва);
						КонецЕсли;
						
						НоваяСтрока.Резерв = ЗначениеРезерва;
						
						СтрокаМассиваСтрокОстатки.КоличествоОстаток = СтрокаМассиваСтрокОстатки.КоличествоОстаток - КоличествоДляРаспределения*КоэффициентЕдиницыИзмерения;
						КоличествоДляРаспределения = 0;
						СтрокаМассиваСтрокОстатки.ВсегоРезерва = СтрокаМассиваСтрокОстатки.ВсегоРезерва - НоваяСтрока.Резерв*КоэффициентЕдиницыИзмерения;
						
						Если УчетПоЯчейкам Тогда СтрокаОбхода.ОстатокСУчетомДвижения = СтрокаОбхода.ОстатокСУчетомДвижения - КоличествоДляРаспределения*КоэффициентЕдиницыИзмерения КонецЕсли;
						
						МассивОбработанныхСтрок.Добавить(НоваяСтрока);
						
						Прервать;
					Иначе
						
						ЗначениеРезерва = 0;
						
						НоваяСтрока.Количество = ОстатокНаСкладе;
						
						Если ВсегоРезерва > 0 Тогда
							ЗначениеРезерва = ?(ВсегоРезерва > НоваяСтрока.Количество, НоваяСтрока.Количество, ВсегоРезерва);
						КонецЕсли;
						СтрокаМассиваСтрокОстатки.ВсегоРезерва = СтрокаМассиваСтрокОстатки.ВсегоРезерва - ЗначениеРезерва;
						
						НоваяСтрока.Резерв = ЗначениеРезерва;
						КоличествоДляРаспределения = КоличествоДляРаспределения - ОстатокНаСкладе;
						СтрокаМассиваСтрокОстатки.КоличествоОстаток = 0;
						Если УчетПоЯчейкам Тогда СтрокаОбхода.ОстатокСУчетомДвижения = 0 КонецЕсли;
						
					КонецЕсли;
					
					СтрокаУдалена = НайденИУдаленДубльТекущейСтроки(СтрокиКУдалению,НоваяСтрока, МассивОбработанныхСтрок, Истина, ИмяСтруктурнойЕдиницы,ИмяТЧ, "Производство");
					
					Если Не СтрокаУдалена Тогда
						МассивОбработанныхСтрок.Добавить(НоваяСтрока);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ПоследняяСтрокаМассива = ?(МассивОбработанныхСтрок.Количество(), МассивОбработанныхСтрок[МассивОбработанныхСтрок.Количество() - 1], Неопределено);
			
			ПоследняяСтрока = ПоследняяСтрокаМассива;
			
			Если КоличествоДляРаспределения > 0 И Не ПоследняяСтрока = Неопределено Тогда
				ПоследняяСтрока.Количество = ПоследняяСтрока.Количество + КоличествоДляРаспределения;
			КонецЕсли;
			
		КонецЕсли;
		
		ОчиститьПриоритеты(ТаблицаОстатков);
		
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			Объект[ИмяТЧ].Удалить(СтрокаКУдалению);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает список документов по Заказу покупателя
//
Функция СписокДокументовПоЗаказу(Объект, ТипОперации, СтруктураПараметров, ИмяТЧ = "Запасы", СостояниеВыполнения = Неопределено, ТипДокумента = Неопределено) Экспорт
	
	Номенклатура = СтруктураПараметров.Номенклатура;
	Характеристика = СтруктураПараметров.Характеристика;
	Партия = СтруктураПараметров.Партия;
	Склад = СтруктураПараметров.Склад;
	ЕдиницаИзмерения = СтруктураПараметров.ЕдиницаИзмерения;
	ЗаказПокупателя = СтруктураПараметров.ЗаказПокупателя;
	НомерВариантаКП = СтруктураПараметров.НомерВариантаКП;

	ЗаказПокупателя = ?(ЗначениеЗаполнено(ЗаказПокупателя), ЗаказПокупателя, Объект.Ссылка);
	
	КакВРасходнойНакладной = Ложь;
	
	Если СтруктураПараметров.Свойство("ВидыЗаполненияПоЗаказНаряду") Тогда
		КакВЗаказеПокупателя = СтруктураПараметров.ВидыЗаполненияПоЗаказНаряду.КакВЗаказеПокупателя;
		КакВРасходнойНакладной = СтруктураПараметров.ВидыЗаполненияПоЗаказНаряду.КакВРасходнойНакладной;
	Иначе
		КакВЗаказеПокупателя = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя"), Истина, Ложь);
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ИмяКолонкиСклада = "СтруктурнаяЕдиницаРезерв";
	Иначе
		ИмяКолонкиСклада = "СтруктурнаяЕдиница";
	КонецЕсли;
	
	ОрганизацияОбъекта = СтруктураПараметров.ОрганизацияОбъекта;
	
	Коэффициент = ?(ТипЗнч(ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения"), ЕдиницаИзмерения.Коэффициент, 1);
	Организация = Константы.УчетПоКомпании.Компания(ОрганизацияОбъекта);
	
	СписокВозврата = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	
	ДлинаЧисла = 0;
	
	Если ТипОперации = "Заказано" Тогда
		
		Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		
		Запрос.Текст = ТекстЗапросаЗаказано();
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Количество = Окр(Выборка.Количество/Коэффициент,3);
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(Количество, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(Количество, ДлинаЧисла);
			
			СписокВозврата.Добавить(Выборка.Ссылка, КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " +"Поставка: " + Формат(Выборка.ДатаПоступления,"ДФ=dd.MM.yyyy") + ". " + Строка(Выборка.Ссылка));
		КонецЦикла;
		
	ИначеЕсли ТипОперации = "ЗапасыПоступления" Тогда
		
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЧекККМ") Тогда
			Запрос.УстановитьПараметр("ЗаказПокупателя", Объект.Заказ);
			Запрос.Текст = ТекстЗапросаЗапасыПоступленияСвободныеИПоЗаказу();
		Иначе
			Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
			Запрос.Текст = ТекстЗапросаЗапасыПоступленияСвободные();
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		
		ЕстьПравоПросмотраЗаказаПоставки = ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику, Пользователи.АвторизованныйПользователь())
											И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаПроизводство, Пользователи.АвторизованныйПользователь());
		
		Пока Выборка.Следующий() Цикл
			
			Количество = Окр(Выборка.Количество/Коэффициент,3);
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(Количество, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(Количество, ДлинаЧисла);
			
			Если ТипЗнч(Выборка.ДатаПоступления) = Тип("Дата") Тогда
				ДатаПоступления = Формат(Выборка.ДатаПоступления,"ДЛФ=ДД");
			Иначе
				ДатаПоступления = Строка(Выборка.ДатаПоступления) + ПредметИсчисления(
				Выборка.ДатаПоступления,
				НСтр("ru = 'дата'"),
				НСтр("ru = 'даты'"),
				НСтр("ru = 'дат'"),
				"м");
			КонецЕсли;
			
			СписокВозврата.Добавить(Выборка.Ссылка, КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " 
			+НСтр("ru = 'поставка:'") + " " + ДатаПоступления + ". " + ?(ЕстьПравоПросмотраЗаказаПоставки, Строка(Выборка.Ссылка), ""));
		КонецЦикла;
		
	ИначеЕсли ТипОперации = "Остаток" Тогда
		
		Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		Запрос.УстановитьПараметр("Партия", Партия);
		
		Запрос.Текст = ТекстЗапросаОстаток();
		
		Если Склад = Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Запасы.СтруктурнаяЕдиница = &Склад", "");
		Иначе
			Запрос.УстановитьПараметр("Склад", Склад);
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если ТипДокумента = "ЗаказНаПроизводство" Тогда
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, ЗаказПокупателя," + ИмяКолонкиСклада);
			ПараметрыОтбораБезСклада = Новый Структура("Номенклатура, Характеристика, Партия, ЗаказПокупателя");
		Иначе
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, " + ИмяКолонкиСклада);
			ПараметрыОтбораБезСклада = Новый Структура("Номенклатура, Характеристика, Партия");
		КонецЕсли;
		
		ПараметрыОтбора[ИмяКолонкиСклада] = Склад;
		
		Если КакВЗаказеПокупателя Тогда
			
			Если ЗначениеЗаполнено(Склад) Тогда
				
				ПараметрыОтбора.Номенклатура = Номенклатура;
				ПараметрыОтбора.Характеристика = Характеристика;
				ПараметрыОтбора.Партия = Партия;
				
				КоличествоВЕдиницахИзмеренияСтроки= ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП, Коэффициент, ИмяТЧ);
				
				ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(КоличествоВЕдиницахИзмеренияСтроки, "ЧДЦ=0")), ДлинаЧисла);
				КоличествоТовара = СформироватьПредставлениеКоличества(КоличествоВЕдиницахИзмеренияСтроки, ДлинаЧисла);
				
				ПредставлениеДокумента = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " + Строка(Склад)+ "; "+"<текущий документ>";
				СписокВозврата.Добавить(Объект.Ссылка, ПредставлениеДокумента);
				
			Иначе
				
				ПараметрыОтбораБезСклада.Номенклатура = Номенклатура;
				ПараметрыОтбораБезСклада.Характеристика = Характеристика;
				ПараметрыОтбораБезСклада.Партия = Партия;
				
				Если ТипДокумента = "ЗаказНаПроизводство" Тогда
					ПараметрыОтбораБезСклада.ЗаказПокупателя = ЗаказПокупателя;
				КонецЕсли;
				
				СтрокиПоНоменклатуре = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбораБезСклада);
				
				ТаблицаСкладов = Объект[ИмяТЧ].Выгрузить(СтрокиПоНоменклатуре,ИмяКолонкиСклада);
				ТаблицаСкладов.Свернуть(ИмяКолонкиСклада);
				
				Для Каждого СтрокаЗапасов Из ТаблицаСкладов Цикл
					
					ПараметрыОтбора.Номенклатура = Номенклатура;
					ПараметрыОтбора.Характеристика = Характеристика;
					ПараметрыОтбора.Партия = Партия;
					
					Если ТипДокумента = "ЗаказНаПроизводство" Тогда
						ПараметрыОтбора.ЗаказПокупателя = ЗаказПокупателя;
					КонецЕсли;
					
					СтруктурнаяЕдиница = СтрокаЗапасов[ИмяКолонкиСклада];
					ПараметрыОтбора[ИмяКолонкиСклада] = СтруктурнаяЕдиница;
					
					КоличествоВЕдиницахИзмеренияСтроки= ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП, Коэффициент, ИмяТЧ, ТипДокумента,СостояниеВыполнения);
					
					Если Не КоличествоВЕдиницахИзмеренияСтроки > 0 Тогда Продолжить КонецЕсли;
					
					ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(КоличествоВЕдиницахИзмеренияСтроки, "ЧДЦ=0")), ДлинаЧисла);
					КоличествоТовара = СформироватьПредставлениеКоличества(КоличествоВЕдиницахИзмеренияСтроки, ДлинаЧисла);
					
					ПредставлениеДокумента = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " + Строка(СтруктурнаяЕдиница)+ "; "+"<текущий документ>";
					
					СписокВозврата.Добавить(Объект.Ссылка, ПредставлениеДокумента);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(Выборка.Количество) ИЛИ (Выборка.Регистратор = Объект.Ссылка) Тогда Продолжить КонецЕсли;
			
			ПредставлениеДокумента = "";
			
			Количество = Окр(Выборка.Количество/Коэффициент,3);
			
			Если Количество = 0 Тогда Продолжить КонецЕсли;
			
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(Количество, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(Количество, ДлинаЧисла);
			ПредставлениеДокумента = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " + Строка(Выборка.Склад)+ "; " + Строка(Выборка.Регистратор);
			СписокВозврата.Добавить(Выборка.Регистратор, ПредставлениеДокумента);
			
		КонецЦикла;
		
	ИначеЕсли ТипОперации = "ОстатокПоРезервамРН" Тогда
		
		Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		Запрос.УстановитьПараметр("Партия", Партия);
		
		Запрос.Текст = ТекстЗапросаОстаток();
		
		Если Склад = Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Запасы.СтруктурнаяЕдиница = &Склад", "");
		Иначе
			Запрос.УстановитьПараметр("Склад", Склад);
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если КакВРасходнойНакладной Тогда
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиницаРезерв");
		Иначе
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница");
		КонецЕсли;
		
		ПараметрыОтбораБезСклада = Новый Структура("Номенклатура, Характеристика, Партия");
		
		Если ЗначениеЗаполнено(Склад) Тогда
			
			ПараметрыОтбора.Номенклатура = Номенклатура;
			ПараметрыОтбора.Характеристика = Характеристика;
			ПараметрыОтбора.Партия = Партия;
			ПараметрыОтбора.СтруктурнаяЕдиницаРезерв = Склад;
			
			КоличествоВЕдиницахИзмеренияСтроки= ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП, Коэффициент, ИмяТЧ,ТипДокумента, СостояниеВыполнения);
			
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(КоличествоВЕдиницахИзмеренияСтроки, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(КоличествоВЕдиницахИзмеренияСтроки, ДлинаЧисла);
			
			ПредставлениеДокумента = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " + Строка(Склад)+ "; "+"<текущий документ>";
			СписокВозврата.Добавить(Объект.Ссылка, ПредставлениеДокумента);
			
		Иначе
			
			ПараметрыОтбораБезСклада.Номенклатура = Номенклатура;
			ПараметрыОтбораБезСклада.Характеристика = Характеристика;
			ПараметрыОтбораБезСклада.Партия = Партия;
			
			СтрокиПоНоменклатуре = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбораБезСклада);
			
			ТаблицаСкладов = Объект[ИмяТЧ].Выгрузить(СтрокиПоНоменклатуре,"СтруктурнаяЕдиницаРезерв");
			ТаблицаСкладов.Свернуть("СтруктурнаяЕдиницаРезерв");
			
			Для Каждого СтрокаЗапасов Из ТаблицаСкладов Цикл
				
				ПараметрыОтбора.Номенклатура = Номенклатура;
				ПараметрыОтбора.Характеристика = Характеристика;
				ПараметрыОтбора.Партия = Партия;
				ПараметрыОтбора.СтруктурнаяЕдиницаРезерв = СтрокаЗапасов.СтруктурнаяЕдиницаРезерв;
				
				КоличествоВЕдиницахИзмеренияСтроки= ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП, Коэффициент, ИмяТЧ,ТипДокумента, СостояниеВыполнения);
				
				Если Не КоличествоВЕдиницахИзмеренияСтроки > 0 Тогда Продолжить КонецЕсли;
				
				ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(КоличествоВЕдиницахИзмеренияСтроки, "ЧДЦ=0")), ДлинаЧисла);
				КоличествоТовара = СформироватьПредставлениеКоличества(КоличествоВЕдиницахИзмеренияСтроки, ДлинаЧисла);
				
				ПредставлениеДокумента = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". " + Строка(СтрокаЗапасов.СтруктурнаяЕдиницаРезерв)+ "; "+"<текущий документ>";
				
				СписокВозврата.Добавить(Объект.Ссылка, ПредставлениеДокумента);
				
			КонецЦикла;
			
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(Выборка.Количество) ИЛИ Выборка.Регистратор = Объект.Ссылка Тогда Продолжить КонецЕсли;
			
			ПредставлениеДокумента = "";
			
			Количество = Окр(Выборка.Количество/Коэффициент,3);
			
			Если Количество = 0 Тогда Продолжить КонецЕсли;
			
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(Количество, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(Количество, ДлинаЧисла);
				
			ПредставлениеДокумента = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". "+ Строка(Выборка.Склад)+ "; " + Строка(Выборка.Регистратор);
			СписокВозврата.Добавить(Выборка.Регистратор, ПредставлениеДокумента);
			
		КонецЦикла;
		
	ИначеЕсли ТипОперации = "ЗапасыВРезервеПоСкладам" Тогда
		
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Партия", Партия);
		Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
		
		Запрос.Текст = ТекстЗапросаЗапасыВРезервеПоСкладам();
	
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтруктураЗначенийПоСкладу = Новый Структура("Склад, Количество");
			
			Количество = Окр(Выборка.Количество/Коэффициент,3);
			
			Если Количество = 0 Тогда Продолжить КонецЕсли;
			
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(Количество, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(Количество, ДлинаЧисла);
			
			ПредставлениеЗначения = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". "+ Строка(Выборка.Склад);
			
			СтруктураЗначенийПоСкладу.Склад = Выборка.Склад;
			СтруктураЗначенийПоСкладу.Количество = КоличествоТовара;
			
			СписокВозврата.Добавить(СтруктураЗначенийПоСкладу, ПредставлениеЗначения);
			
		КонецЦикла;
		
	Иначе //ОстаткиОбщие
		
		ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия," + ИмяКолонкиСклада);
		
		ПараметрыОтбора.Номенклатура = Номенклатура;
		ПараметрыОтбора.Характеристика = Характеристика;
		ПараметрыОтбора.Партия = Партия;
		
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Партия", Партия);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Если КакВЗаказеПокупателя Тогда
				Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
				Запрос.Текст = ТекстЗапросаОстаткиОбщие(Истина);
			Иначе
				Запрос.Текст = ТекстЗапросаОстаткиОбщие(Истина, Ложь);
			КонецЕсли;
		Иначе
			Запрос.Текст = ТекстЗапросаОстаткиОбщие();
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтруктураЗначенийПоСкладу = Новый Структура("Склад, Количество");

			ПараметрыОтбора[ИмяКолонкиСклада]= Выборка.Склад;
			
			ИтогПоЗначениюВРезерв = 0;
			
			Если КакВЗаказеПокупателя Тогда
				ИтогПоЗначениюВРезерв = ?(КакВЗаказеПокупателя = Истина, ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, "Резервировать", НомерВариантаКП,,ИмяТЧ, ТипДокумента,СостояниеВыполнения), 0);
			КонецЕсли;
			
			Количество = Выборка.Количество - ИтогПоЗначениюВРезерв + ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказНаПроизводство"), 0, Выборка.ЗарезервированоЗаказом);
			
			Если Количество = 0 Тогда Продолжить КонецЕсли;
			
			Количество = Окр(Количество/Коэффициент,3);
			ДлинаЧисла = ?(ДлинаЧисла = 0, СтрДлина(Формат(Количество, "ЧДЦ=0")), ДлинаЧисла);
			КоличествоТовара = СформироватьПредставлениеКоличества(Количество, ДлинаЧисла);
			
			ПредставлениеЗначения = КоличествоТовара +" "+ Строка(ЕдиницаИзмерения)+". "+ Строка(Выборка.Склад);
			
			СтруктураЗначенийПоСкладу.Склад = Выборка.Склад;
			СтруктураЗначенийПоСкладу.Количество = Количество;
			
			СписокВозврата.Добавить(СтруктураЗначенийПоСкладу, ПредставлениеЗначения);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокВозврата;
	
КонецФункции

// Формирует строковое значение количества в заданном формате формате
//
Функция СформироватьПредставлениеКоличества(ОбрабатываемоеЧисло, ДлинаЧисла) Экспорт
	
	СтрокаДляДополнения = Формат(ОбрабатываемоеЧисло, "ЧЦ=10; ЧДЦ=3");
	ДлинаТекЧисла = СтрДлина(Формат(ОбрабатываемоеЧисло, "ЧДЦ=0"));
	
	Если ДлинаТекЧисла = ДлинаЧисла Тогда Возврат СтрокаДляДополнения КонецЕсли;
	
	Для НомерПробела = ДлинаТекЧисла По ДлинаЧисла Цикл
		СтрокаДляДополнения = " " + СтрокаДляДополнения;
	КонецЦикла;
	
	Возврат СтрокаДляДополнения;
	
КонецФункции

// Возвращает преобразованное строковое значение Информации об отборе
//
Функция ИнформацияОбОтборе(НаименованиеМетки) Экспорт
	
	Цвет = ЦветаСтиля.ТекстВторостепеннойНадписи;
	Шрифт = ШрифтыСтиля.ШрифтПравойПанелиОтборов;
	
	КомпонентыФС = Новый Массив;
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НаименованиеМетки + " ", Шрифт, Цвет));
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(БиблиотекаКартинок.Очистить, , , , "ДублиСтрок"));
	
	Возврат Новый ФорматированнаяСтрока(КомпонентыФС);
	
КонецФункции

// Возвращает преобразованное строковое значение Информации об отборе для дублей строк
//
Функция ИнформацияОбОтбореДубльСтроки(НомерСтрокиПредставление) Экспорт
	ТекстСообщения = НСтр("ru = 'Дубли строки '");
	Возврат ИнформацияОбОтборе(ТекстСообщения + НомерСтрокиПредставление);
КонецФункции

// Заполняет признак типа запас в табличной части
//
// Параметры:
//  Объект	 - ДанныеФормыСтруктура, ДокументОбъект	 - Заполняемый документ
//  ИмяТЧ	 - Строка								 - Имя табличной части
//
Процедура ЗаполнитьПризнакТипаЗапасНоменклатуры(Объект, ИмяТЧ = "Запасы") Экспорт
	
	Если ТипЗнч(Объект[ИмяТЧ]) = Тип("ДанныеФормыКоллекция") Тогда
		ИспользуемаяНоменклатура = Объект[ИмяТЧ].Выгрузить().ВыгрузитьКолонку("Номенклатура");
	Иначе
		ИспользуемаяНоменклатура = Объект[ИмяТЧ].ВыгрузитьКолонку("Номенклатура");
	КонецЕсли;
	ЗначенияТипов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ИспользуемаяНоменклатура, "ТипНоменклатуры", Истина);
	Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТЧ] Цикл
		СтрокаТабличнойЧасти.ТипНоменклатурыЗапас = (ЗначенияТипов.Получить(СтрокаТабличнойЧасти.Номенклатура) = Перечисления.ТипыНоменклатуры.Запас);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет таблицу настроек формы выбора номенклатуры на основании вида документа
//
Процедура ЗаполнитьТаблицуНастроекФормыВыбораНоменклатурыСервер(Форма, ВидДокумента, НастройкиФормыВыбораНоменклатуры,
	ТипСохраняемыхНастроек, Текущая = Истина, ИмяТабличнойЧасти = "Запасы", СтруктураНастроек = Неопределено) Экспорт
	
	ИмяСтруктурнойЕдиницыНаФорме = Неопределено;
	Если ВидДокумента = "ЧекККМ" Тогда
		ИмяСтруктурнойЕдиницыНаФорме = "СтруктурнаяЕдиницаККМ";
	ИначеЕсли Форма.Объект.Свойство("СтруктурнаяЕдиница") Тогда
		ИмяСтруктурнойЕдиницыНаФорме = "СтруктурнаяЕдиница";
	ИначеЕсли Форма.Объект.Свойство("СтруктурнаяЕдиницаРезерв") Тогда
		ИмяСтруктурнойЕдиницыНаФорме = "СтруктурнаяЕдиницаРезерв";
	КонецЕсли;
	
	Если ТипСохраняемыхНастроек = 1 Тогда
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборОрганизация";
		НоваяСтрока.ЗначениеНастройки = Форма.Объект.Организация;
		
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборСклад";
		
		Если ЗначениеЗаполнено(ИмяСтруктурнойЕдиницыНаФорме) И ВидДокумента = "ЧекККМ" Тогда
			НоваяСтрока.ЗначениеНастройки = Форма.СтруктурнаяЕдиницаККМ;
		ИначеЕсли ЗначениеЗаполнено(ИмяСтруктурнойЕдиницыНаФорме) Тогда
			Если Форма.Объект.Свойство("ПоложениеСклада") Тогда
				НоваяСтрока.ЗначениеНастройки = ?(Форма.Объект.ПоложениеСклада = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВШапке")
				, Форма.Объект[ИмяСтруктурнойЕдиницыНаФорме], ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка"));
			Иначе 
				НоваяСтрока.ЗначениеНастройки = Форма.Объект[ИмяСтруктурнойЕдиницыНаФорме];
			КонецЕсли;
		Иначе
			НоваяСтрока.ЗначениеНастройки = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		КонецЕсли;
		
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборВидЦен";
		
		Если Форма.Объект.Свойство("ВидЦен") Тогда
			НоваяСтрока.ЗначениеНастройки = Форма.Объект.ВидЦен;
		Иначе
			НоваяСтрока.ЗначениеНастройки = ПредопределенноеЗначение("Справочник.ВидыЦен.Учетная");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипСохраняемыхНастроек = 2 Тогда
		
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборВидЦен";
		
		Если Форма.Объект.Свойство("ВидЦен") Тогда
			НоваяСтрока.ЗначениеНастройки = Форма.Объект.ВидЦен;
		Иначе
			НоваяСтрока.ЗначениеНастройки = ПредопределенноеЗначение("Справочник.ВидыЦен.Учетная");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипСохраняемыхНастроек = 3 Тогда
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборОрганизация";
		НоваяСтрока.ЗначениеНастройки = Форма.Объект.Организация;
		
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборСклад";
		НоваяСтрока.ЗначениеНастройки = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		
		НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
		НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
		НоваяСтрока.ИмяНастройки = "ОтборОстатки";
		НоваяСтрока.ЗначениеНастройки = 0;
	КонецЕсли;
	
	НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
	НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
	НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
	НоваяСтрока.ИмяНастройки = "КлючНазначенияДокумента";
	НоваяСтрока.ЗначениеНастройки = ТипСохраняемыхНастроек;
	
	Если ОграничиватьТипСклада(ВидДокумента) Тогда
		
		Если ВидДокумента = "ЧекККМ" Тогда
			НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
			НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
			НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
			НоваяСтрока.ИмяНастройки = "ТипСтруктурнойЕдиницы";
			
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.Склад);
			МассивТипов.Добавить(Перечисления.ТипыСтруктурныхЕдиниц.Розница);
			
			МассивТиповСтруктурныхЕдиниц = Новый ФиксированныйМассив(МассивТипов);
			
			НоваяСтрока.ЗначениеНастройки = МассивТиповСтруктурныхЕдиниц;
		Иначе
			ИмяОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Форма.Объект.Ссылка));
			ИмяОбъектМетаданных = ?(Не ИмяОбъектМетаданных = Неопределено, ИмяОбъектМетаданных.Имя, "");
			
			Если ЗначениеЗаполнено(ИмяСтруктурнойЕдиницыНаФорме) И ЗначениеЗаполнено(ИмяОбъектМетаданных) Тогда
				
				ПараметрыВыбораСклад = Метаданные.Документы[ИмяОбъектМетаданных].Реквизиты[ИмяСтруктурнойЕдиницыНаФорме].ПараметрыВыбора;
				
				Для Каждого СтрокаПараметровВыбора Из ПараметрыВыбораСклад Цикл
					Если СтрокаПараметровВыбора.Имя = "Отбор.ТипСтруктурнойЕдиницы" Тогда
						НоваяСтрока = НастройкиФормыВыбораНоменклатуры.Добавить();
						НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
						НоваяСтрока.ТекущаяТабличнаяЧасть = Текущая;
						НоваяСтрока.ИмяНастройки = "ТипСтруктурнойЕдиницы";
						НоваяСтрока.ЗначениеНастройки = СтрокаПараметровВыбора.Значение;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Обновляет настройки формы выбора номенклатуры в соответствии с изменением сохраняемым в настройках реквизитом формы
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  ВидДокумента - Строка
//  ИмяТЧ - Строка
//  НастройкиФормыВыбораНоменклатуры - ТаблицаЗначений:
//   * ИмяТабличнойЧасти - Строка
//   * ТекущаяТабличнаяЧасть - Строка
//   * ИмяНастройки - Строка
//   * ЗначениеНастройки - Произвольный
//  ДополнениеНаименованияНоменклатуры - Строка
Процедура ОбновитьНастройкиФормыВыбораНоменклатурыПриИзмененииРеквизита(Форма, ВидДокумента, ИмяТЧ,
	НастройкиФормыВыбораНоменклатуры, ДополнениеНаименованияНоменклатуры = "") Экспорт

	ПараметрыОтбора = Новый Структура("ИмяТабличнойЧасти", ИмяТЧ);

	НайденныеСтроки = НастройкиФормыВыбораНоменклатуры.НайтиСтроки(ПараметрыОтбора);

	Если НайденныеСтроки.Количество() Тогда
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НастройкиФормыВыбораНоменклатуры.Удалить(НайденнаяСтрока);
		КонецЦикла;
	КонецЕсли;

	ТипСохраняемыхНастроек = НоменклатураВДокументахКлиентСервер.ТипСохраняемыхНастроек(ВидДокумента);
	ЗаполнитьТаблицуНастроекФормыВыбораНоменклатурыСервер(Форма, ВидДокумента, НастройкиФормыВыбораНоменклатуры,
		ТипСохраняемыхНастроек, , ИмяТЧ);
	НоменклатураВДокументахКлиентСервер.ОбновитьПараметрыОткрытияФормыВыбора(Форма, ИмяТЧ,
		ДополнениеНаименованияНоменклатуры);

КонецПроцедуры

// Проверяет положение склада в Объекте и при необходимости переопределяет его
//
Процедура ПроверитьПереопределитьПоложениеСклада(Объект, ИмяТЧ = "Запасы", ИмяКолонкиСклад = "СтруктурнаяЕдиница", ИмяРеквизитаСклад = "СтруктурнаяЕдиница") Экспорт
	
	РазрешитьСкладыВТабличныхЧастях = ПолучитьФункциональнуюОпцию("РазрешитьСкладыВТабличныхЧастях");
	
	РеквизитОбъектаСуществует = ОбщегоНазначения.ЕстьРеквизитОбъекта("ПоложениеСклада", Объект.Метаданные());
	
	Если Не РеквизитОбъектаСуществует Или Объект.ПоложениеСклада = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти") Тогда Возврат КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ИмяКолонкиСклад = "СтруктурнаяЕдиницаРезерв";
		ИмяРеквизитаСклад = "СтруктурнаяЕдиницаРезерв";
	КонецЕсли;
	
	УчетПоЯчейкам = ПолучитьФункциональнуюОпцию("УчетПоЯчейкам") И ОбщегоНазначения.ЕстьРеквизитОбъекта("Ячейка", Объект.Метаданные());
	
	КоличествоСтрок = Объект[ИмяТЧ].Количество();
	
	Если Не КоличествоСтрок Тогда Возврат КонецЕсли;
	
	Если РазрешитьСкладыВТабличныхЧастях Тогда
		
		ЗначениеСклада = Неопределено;
		
		Если Не УчетПоЯчейкам Тогда
			
			Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТЧ] Цикл
				
				Если ЗначениеСклада = Неопределено Тогда
					
					ЗначениеСклада = СтрокаТабличнойЧасти[ИмяКолонкиСклад];
					
					Если ЗначениеЗаполнено(ЗначениеСклада) Тогда
						Объект[ИмяРеквизитаСклад] = ЗначениеСклада;
					КонецЕсли;
					
					Продолжить
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяКолонкиСклад]) И НЕ СтрокаТабличнойЧасти[ИмяКолонкиСклад] = ЗначениеСклада Тогда
					Объект.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
					Возврат;
				КонецЕсли;
				
				ЗначениеСклада = СтрокаТабличнойЧасти[ИмяКолонкиСклад];
			КонецЦикла;
			Возврат;
		КонецЕсли;
		
		Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТЧ] Цикл
			
			Если ЗначениеСклада = Неопределено Тогда
				
				ЗначениеСклада = СтрокаТабличнойЧасти[ИмяКолонкиСклад];
				
				Если ЗначениеЗаполнено(ЗначениеСклада) Тогда
					Объект[ИмяРеквизитаСклад] = ЗначениеСклада;
					Объект.Ячейка = СтрокаТабличнойЧасти.Ячейка;
				КонецЕсли;
				
				Продолжить
			КонецЕсли;
			
			Если  ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяКолонкиСклад]) И НЕ СтрокаТабличнойЧасти[ИмяКолонкиСклад] = ЗначениеСклада Или НЕ СтрокаТабличнойЧасти.Ячейка = Объект.Ячейка Тогда
				Объект.Ячейка = Справочники.Ячейки.ПустаяСсылка();
				Объект.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
				Возврат;
				
			КонецЕсли;
			ЗначениеСклада = СтрокаТабличнойЧасти[ИмяКолонкиСклад];
		КонецЦикла;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект[ИмяТЧ][0][ИмяКолонкиСклад]) Тогда
			Объект[ИмяРеквизитаСклад] = Объект[ИмяТЧ][0][ИмяКолонкиСклад];
			
			Если УчетПоЯчейкам Тогда
				Объект.Ячейка = Объект[ИмяТЧ][0].Ячейка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет тип номенклатуры в табличной части
//
// Параметры:
//  Объект	 - ДанныеФормыСтруктура, ДокументОбъект	 - Заполняемый документ
//  ИмяТЧ	 - Строка								 - Имя табличной части
//
Процедура ЗаполнитьТипНоменклатурыВТабличнойЧасти(Объект, ИмяТЧ = "Запасы") Экспорт
	
	Если ТипЗнч(Объект[ИмяТЧ]) = Тип("ДанныеФормыКоллекция") Тогда
		ИспользуемаяНоменклатура = Объект[ИмяТЧ].Выгрузить().ВыгрузитьКолонку("Номенклатура");
	Иначе
		ИспользуемаяНоменклатура = Объект[ИмяТЧ].ВыгрузитьКолонку("Номенклатура");
	КонецЕсли;
	ЗначенияТипов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ИспользуемаяНоменклатура, "ТипНоменклатуры", Истина);
	Для Каждого СтрокаТабличнойЧасти Из Объект[ИмяТЧ] Цикл
		СтрокаТабличнойЧасти.ТипНоменклатуры = ЗначенияТипов.Получить(СтрокаТабличнойЧасти.Номенклатура);
	КонецЦикла;
	
КонецПроцедуры

// Функция - Номенклатура табличной части по типу
//
// Параметры:
//  Объект			 - ДанныеФормыСтруктура, ДокументОбъект	 - Обрабатываемый документ
//  ТипНоменклатуры	 - ПеречислениеСсылка.ТипыНоменклатуры	 - Искомый тип номенклатуры
//  ИмяТЧ			 - Строка								 - Имя табличной части 
// 
// Возвращаемое значение:
//  Массив - Массив номенклатуры с указанным типом, присутствующей в табличной части 
//
Функция НоменклатураТабличнойЧастиПоТипу(Объект, ТипНоменклатуры, ИмяТЧ = "Запасы") Экспорт
	
	ТабличнаяЧасть = Объект[ИмяТЧ];
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
	Если ТипЗнч(ТабличнаяЧасть) = Тип("ДанныеФормыКоллекция") Тогда
		Запрос.УстановитьПараметр("Номенклатура", ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	Иначе
		Запрос.УстановитьПараметр("Номенклатура", ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"));
	КонецЕсли; 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Номенклатура)
	|	И Номенклатура.ТипНоменклатуры = &ТипНоменклатуры";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#КонецОбласти

#Область ОбновлениеОстатков

Процедура ОбновитьОстаткиНоменклатурыВФоне() Экспорт
	
	ВнешняяТранзакция = ТранзакцияАктивна();
	Если НЕ ВнешняяТранзакция Тогда
		НачатьТранзакцию();
	КонецЕсли;
	
	// Тут будут ждать другие фоновые задания.
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОстаткиТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	// Запрос возвращает разницу между регистром сведений ОстаткиТоваров и регистром накопления ЗапасыНаСкладах.
	// В запросе нельзя использовать ПОЛНОЕ СОЕДИНЕНИЕ из-за ограничений при работе на СУБД Postgresql.
	// Запрос корректно отрабатывает номенклатуру, которой нет в остатках РН, но есть в регистре сведений.
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	| ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	| СУММА(ВложенныйЗапрос.КоличествоОстаток) КАК Количество
	|ИЗ
	| (ВЫБРАТЬ
	|  ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|  ЗапасыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|  0 КАК Количество
	| ИЗ
	|  РегистрНакопления.ЗапасыНаСкладах.Остатки КАК ЗапасыНаСкладахОстатки
	| 
	| ОБЪЕДИНИТЬ ВСЕ
	| 
	| ВЫБРАТЬ
	|  ОстаткиТоваров.Номенклатура,
	|  0,
	|  ОстаткиТоваров.Количество
	| ИЗ
	|  РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	| ВложенныйЗапрос.Номенклатура
	|
	|ИМЕЮЩИЕ
	| СУММА(ВложенныйЗапрос.КоличествоОстаток) <> СУММА(ВложенныйЗапрос.Количество)"; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ОстаткиТоваров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
		
		Запись = НаборЗаписей.Добавить();
		Запись.Номенклатура = Выборка.Номенклатура;
		Запись.Количество = Выборка.Количество;
		
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	
	Если НЕ ВнешняяТранзакция Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаЗначенийРеквизитовНоменклатурыТабличнойЧасти(ТабличнаяЧасть)
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ТабличнаяЧасть.Выгрузить(,"НомерСтроки, Номенклатура"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК НоменклатураТабЧасти,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Итог
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Итог.НомерСтроки КАК НомерСтроки,
	|	Итог.НоменклатураТабЧасти КАК Номенклатура,
	|	Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
	|	Номенклатура.ПроверятьЗаполнениеХарактеристики КАК ПроверятьЗаполнениеХарактеристики,
	|	Номенклатура.ПроверятьЗаполнениеПартий КАК ПроверятьЗаполнениеПартий,
	|	Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	Итог КАК Итог
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО Итог.НоменклатураТабЧасти = Номенклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ОграничиватьТипСклада(ВидДокумента)
	Если ВидДокумента = "ЗаказПоставщику" Тогда
		Возврат Ложь
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

Функция ТекстЗапросаРезервПоОстаткамЗаказПокупателяБезРазбиения()
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв
	|ПОМЕСТИТЬ ВТНоменклатура
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТНоменклатура.Характеристика КАК Характеристика,
	|	ВТНоменклатура.Партия КАК Партия,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиНаСкладе
	|ИЗ
	|	ВТНоменклатура КАК ВТНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&Организации)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК ЗапасыОстатки
	|		ПО ВТНоменклатура.Номенклатура = ЗапасыОстатки.Номенклатура
	|			И ВТНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВТНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВТНоменклатура.СтруктурнаяЕдиницаРезерв = ЗапасыОстатки.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТНоменклатура.Номенклатура,
	|	ВТНоменклатура.Партия,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв,
	|	ВТНоменклатура.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТНоменклатура.Характеристика КАК Характеристика,
	|	ВТНоменклатура.Партия КАК Партия,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ) КАК КоличествоДвижение
	|ПОМЕСТИТЬ ДвижениеДокумента
	|ИЗ
	|	ВТНоменклатура КАК ВТНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|		ПО ВТНоменклатура.Номенклатура = ДвиженияДокументаЗапасы.Номенклатура
	|			И ВТНоменклатура.Характеристика = ДвиженияДокументаЗапасы.Характеристика
	|			И ВТНоменклатура.Партия = ДвиженияДокументаЗапасы.Партия
	|			И ВТНоменклатура.СтруктурнаяЕдиницаРезерв = ДвиженияДокументаЗапасы.СтруктурнаяЕдиница
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Ссылка = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		КОНЕЦ
	|	И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТНоменклатура.Партия,
	|	ВТНоменклатура.Характеристика,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв,
	|	ВТНоменклатура.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Запасы.Период КАК Период,
	|	Запасы.Регистратор КАК Регистратор,
	|	Запасы.НомерСтроки КАК НомерСтроки,
	|	Запасы.Активность КАК Активность,
	|	Запасы.ВидДвижения КАК ВидДвижения,
	|	Запасы.Организация КАК Организация,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.СчетУчета КАК СчетУчета,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Запасы.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Запасы.Количество КАК Количество,
	|	Запасы.Сумма КАК Сумма
	|ПОМЕСТИТЬ ДвиженияДокументаЗапасы
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Ссылка = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА Запасы.ЗаказПокупателя = &Ссылка
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &Ссылка = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА НЕ Запасы.Регистратор = &Ссылка
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТНоменклатура.Характеристика КАК Характеристика,
	|	ВТНоменклатура.Партия КАК Партия,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ) КАК КоличествоДвижение
	|ПОМЕСТИТЬ ДвижениеРезервовДругимиДокументами
	|ИЗ
	|	ВТНоменклатура КАК ВТНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияДокументаЗапасы КАК ДвиженияДокументаЗапасы
	|		ПО ВТНоменклатура.Номенклатура = ДвиженияДокументаЗапасы.Номенклатура
	|			И ВТНоменклатура.Характеристика = ДвиженияДокументаЗапасы.Характеристика
	|			И ВТНоменклатура.Партия = ДвиженияДокументаЗапасы.Партия
	|			И ВТНоменклатура.СтруктурнаяЕдиницаРезерв = ДвиженияДокументаЗапасы.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТНоменклатура.Партия,
	|	ВТНоменклатура.Характеристика,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв,
	|	ВТНоменклатура.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТНоменклатура.Характеристика КАК Характеристика,
	|	ВТНоменклатура.Партия КАК Партия,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
	|	СУММА(ЕСТЬNULL(ДвижениеДокумента.КоличествоДвижение, 0) + ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ДвижениеРезервовДругимиДокументами.КоличествоДвижение, 0) КАК РезервДругимиДокументами
	|ИЗ
	|	ВТНоменклатура КАК ВТНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаСкладе КАК ОстаткиНаСкладе
	|		ПО ВТНоменклатура.Номенклатура = ОстаткиНаСкладе.Номенклатура
	|			И ВТНоменклатура.Характеристика = ОстаткиНаСкладе.Характеристика
	|			И ВТНоменклатура.Партия = ОстаткиНаСкладе.Партия
	|			И ВТНоменклатура.СтруктурнаяЕдиницаРезерв = ОстаткиНаСкладе.СтруктурнаяЕдиницаРезерв
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвижениеДокумента КАК ДвижениеДокумента
	|		ПО ВТНоменклатура.Номенклатура = ДвижениеДокумента.Номенклатура
	|			И ВТНоменклатура.Характеристика = ДвижениеДокумента.Характеристика
	|			И ВТНоменклатура.Партия = ДвижениеДокумента.Партия
	|			И ВТНоменклатура.СтруктурнаяЕдиницаРезерв = ДвижениеДокумента.СтруктурнаяЕдиницаРезерв
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвижениеРезервовДругимиДокументами КАК ДвижениеРезервовДругимиДокументами
	|		ПО ВТНоменклатура.Номенклатура = ДвижениеРезервовДругимиДокументами.Номенклатура
	|			И ВТНоменклатура.Характеристика = ДвижениеРезервовДругимиДокументами.Характеристика
	|			И ВТНоменклатура.Партия = ДвижениеРезервовДругимиДокументами.Партия
	|			И ВТНоменклатура.СтруктурнаяЕдиницаРезерв = ДвижениеРезервовДругимиДокументами.СтруктурнаяЕдиницаРезерв
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТНоменклатура.Характеристика,
	|	ВТНоменклатура.СтруктурнаяЕдиницаРезерв,
	|	ВТНоменклатура.Номенклатура,
	|	ВТНоменклатура.Партия,
	|	ЕСТЬNULL(ДвижениеРезервовДругимиДокументами.КоличествоДвижение, 0)";
	
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаЗаполнитьРезервПоОстаткамЗаказНаПроизводство()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	0 КАК ВРезервеТекСклад,
	|	0 КАК РезервТекДокумент,
	|	0 КАК РасходПоРезерву,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ЗапасыОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			(Организация, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|				(ВЫБРАТЬ
	|					&Организация,
	|					ТаблицаЗапасы.Номенклатура,
	|					ТаблицаЗапасы.Характеристика,
	|					ТаблицаЗапасы.Партия,
	|					ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|				ИЗ
	|					ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДокументаЗапасы.Организация,
	|	ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|	ДвиженияДокументаЗапасы.Номенклатура,
	|	ДвиженияДокументаЗапасы.Характеристика,
	|	ДвиженияДокументаЗапасы.Партия,
	|	0,
	|	0,
	|	ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0),
	|	0,
	|	ДвиженияДокументаЗапасы.ЗаказПокупателя
	|ИЗ
	|	РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЗаказыЕсть
	|				ТОГДА ДвиженияДокументаЗапасы.ЗаказПокупателя В (&Ссылка)
	|		КОНЕЦ
	|	И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДвиженияДокументаЗапасы.Регистратор = &СсылкаТекДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДокументаЗапасы.Организация,
	|	ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|	ДвиженияДокументаЗапасы.Номенклатура,
	|	ДвиженияДокументаЗапасы.Характеристика,
	|	ДвиженияДокументаЗапасы.Партия,
	|	0,
	|	-1 * ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0),
	|	0,
	|	0,
	|	ДвиженияДокументаЗапасы.ЗаказПокупателя
	|ИЗ
	|	РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЗаказыЕсть
	|				ТОГДА ДвиженияДокументаЗапасы.ЗаказПокупателя В (&Ссылка)
	|		КОНЕЦ
	|	И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ТИПЗНАЧЕНИЯ(ДвиженияДокументаЗапасы.Регистратор) = ТИП(Документ.ЗаказНаПроизводство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Организация,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	0,
	|	Запасы.Количество,
	|	0,
	|	0,
	|	Запасы.ЗаказПокупателя
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ВЫБОР
	|			КОГДА &ЗаказыЕсть
	|				ТОГДА Запасы.ЗаказПокупателя В (&Ссылка)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Организация,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	0,
	|	0,
	|	0,
	|	Запасы.Количество,
	|	Запасы.ЗаказПокупателя
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ВЫБОР
	|			КОГДА &ЗаказыЕсть
	|				ТОГДА Запасы.ЗаказПокупателя В (&Ссылка)
	|		КОНЕЦ
	|	И ТИПЗНАЧЕНИЯ(Запасы.Регистратор) = ТИП(Документ.СборкаЗапасов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА ЗапасыОстатки.СтруктурнаяЕдиница = &ПриоритетныйСклад
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ЗапасыОстатки.ВРезервеТекСклад, 0) < 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ЗапасыОстатки.ВРезервеТекСклад, 0)
	|		КОНЕЦ) КАК ВРезервеТекСклад,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.РезервТекДокумент, 0)) КАК РезервТекДокумент,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.РасходПоРезерву, 0)) КАК РасходПоРезерву,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	ЗапасыОстатки КАК ЗапасыОстатки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗапасыОстатки.СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ЗапасыОстатки.СтруктурнаяЕдиница = &ПриоритетныйСклад
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.КоличествоОстаток + (ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент) - ВтИтог.РасходПоРезерву КАК КоличествоОстаток,
	|	ВтИтог.Приоритет КАК Приоритет,
	|	ВтИтог.ВРезервеТекСклад КАК ВРезервеТекСклад,
	|	ВтИтог.РезервТекДокумент КАК РезервТекДокумент,
	|	ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент КАК РезервПоДругимДокументам,
	|	ВЫБОР
	|		КОГДА ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент >= ВтИтог.РасходПоРезерву
	|			ТОГДА 0
	|		ИНАЧЕ ВтИтог.РасходПоРезерву - (ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент)
	|	КОНЕЦ КАК НеотъемлемыйРезервТекДокумент,
	|	ВтИтог.РасходПоРезерву КАК РасходПоРезерву,
	|	ВтИтог.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ВтИтог.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СвободныйОстаток
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|
	|УПОРЯДОЧИТЬ ПО
	|	НеотъемлемыйРезервТекДокумент УБЫВ,
	|	Приоритет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполнитьРезервПоОстаткам()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	0 КАК ВРезервеТекСклад,
	|	0 КАК РезервТекДокумент,
	|	0 КАК РасходПоРезерву
	|ПОМЕСТИТЬ ЗапасыОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			(Организация, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|				(ВЫБРАТЬ
	|					&Организация,
	|					ТаблицаЗапасы.Номенклатура.СчетУчетаЗапасов,
	|					ТаблицаЗапасы.Номенклатура,
	|					ТаблицаЗапасы.Характеристика,
	|					ТаблицаЗапасы.Партия,
	|					ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|				ИЗ
	|					ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДокументаЗапасы.Организация,
	|	ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|	ДвиженияДокументаЗапасы.СчетУчета,
	|	ДвиженияДокументаЗапасы.Номенклатура,
	|	ДвиженияДокументаЗапасы.Характеристика,
	|	ДвиженияДокументаЗапасы.Партия,
	|	ВЫБОР
	|		КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0
	|ИЗ
	|	РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Ссылка = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		КОНЕЦ
	|	И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Организация,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.СчетУчета,
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	0,
	|	Запасы.Количество,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ВЫБОР
	|			КОГДА НЕ &Ссылка = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА Запасы.ЗаказПокупателя = &Ссылка
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Организация,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.СчетУчета,
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	0,
	|	0,
	|	0,
	|	Запасы.Количество
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ВЫБОР
	|			КОГДА НЕ &Ссылка = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА Запасы.ЗаказПокупателя = &Ссылка
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА ЗапасыОстатки.СтруктурнаяЕдиница = &ПриоритетныйСклад
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.ВРезервеТекСклад, 0)) КАК ВРезервеТекСклад,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.РезервТекДокумент, 0)) КАК РезервТекДокумент,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.РасходПоРезерву, 0)) КАК РасходПоРезерву
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	ЗапасыОстатки КАК ЗапасыОстатки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗапасыОстатки.СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтИтог.СчетУчета КАК СчетУчета,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.КоличествоОстаток + (ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент) - ВтИтог.РасходПоРезерву КАК КоличествоОстаток,
	|	ВтИтог.Приоритет КАК Приоритет,
	|	ВтИтог.ВРезервеТекСклад КАК ВРезервеТекСклад,
	|	ВтИтог.РезервТекДокумент КАК РезервТекДокумент,
	|	ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент КАК РезервПоДругимДокументам,
	|	ВЫБОР
	|		КОГДА ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент >= ВтИтог.РасходПоРезерву
	|			ТОГДА 0
	|		ИНАЧЕ ВтИтог.РасходПоРезерву - (ВтИтог.ВРезервеТекСклад - ВтИтог.РезервТекДокумент)
	|	КОНЕЦ КАК НеотъемлемыйРезервТекДокумент,
	|	ВтИтог.РасходПоРезерву КАК РасходПоРезерву
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВтИтог.СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|	И ВтИтог.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НеотъемлемыйРезервТекДокумент УБЫВ,
	|	Приоритет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполнитьКоличествоПоОстаткамИРезервамРасходнаяНакладная()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА &ЗаказВШапке
	|			ТОГДА &Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаЗапасы.Заказ ССЫЛКА Документ.ЗаказПокупателя
	|						И ТаблицаЗапасы.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ТОГДА ТаблицаЗапасы.Заказ
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ВтНоменклатураВыбор
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.ТипНоменклатурыЗапас
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатураВыбор.Номенклатура КАК Номенклатура,
	|	ВтНоменклатураВыбор.Характеристика КАК Характеристика,
	|	ВтНоменклатураВыбор.Партия КАК Партия,
	|	ВтНоменклатураВыбор.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВТДекартовоПроизведениеНоменклатурыИСклада
	|ИЗ
	|	ВтНоменклатураВыбор КАК ВтНоменклатураВыбор,
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
	|					И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
	|				ТОГДА СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура КАК Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика КАК Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия КАК Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ОстаткиНаСкладе
	|ИЗ
	|	ВТДекартовоПроизведениеНоменклатурыИСклада КАК ВТДекартовоПроизведениеНоменклатурыИСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация = &Организация
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И Номенклатура В (&МассивНоменклатуры)) КАК ЗапасыОстатки
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ЗапасыОстатки.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ЗапасыОстатки.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура КАК Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика КАК Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия КАК Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ОстаткиРезервов
	|ИЗ
	|	ВТДекартовоПроизведениеНоменклатурыИСклада КАК ВТДекартовоПроизведениеНоменклатурыИСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация = &Организация
	|					И НЕ ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И Номенклатура В (&МассивНоменклатуры)) КАК ЗапасыОстатки
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ЗапасыОстатки.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ЗапасыОстатки.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ) КАК ОтгруженоБезРезерва,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура КАК Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика КАК Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия КАК Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя КАК ЗаказПокупателя1
	|ПОМЕСТИТЬ ДвижениеДокументаБезРезерва
	|ИЗ
	|	ВТДекартовоПроизведениеНоменклатурыИСклада КАК ВТДекартовоПроизведениеНоменклатурыИСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ДвиженияДокументаЗапасы.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ДвиженияДокументаЗапасы.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ДвиженияДокументаЗапасы.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ДвиженияДокументаЗапасы.СтруктурнаяЕдиница
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя = ДвиженияДокументаЗапасы.ЗаказПокупателя
	|ГДЕ
	|	ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|	И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДвиженияДокументаЗапасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ) КАК ОтгруженоРезерва,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура КАК Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика КАК Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия КАК Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя КАК ЗаказПокупателя1
	|ПОМЕСТИТЬ ДвижениеДокументаПоРезерву
	|ИЗ
	|	ВТДекартовоПроизведениеНоменклатурыИСклада КАК ВТДекартовоПроизведениеНоменклатурыИСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ДвиженияДокументаЗапасы.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ДвиженияДокументаЗапасы.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ДвиженияДокументаЗапасы.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ДвиженияДокументаЗапасы.СтруктурнаяЕдиница
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя = ДвиженияДокументаЗапасы.ЗаказПокупателя
	|ГДЕ
	|	ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|	И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ ДвиженияДокументаЗапасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОстаткиРезервов.КоличествоОстаток, 0) КАК Зарезервировано,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура КАК Номенклатура,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика КАК Характеристика,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.Партия КАК Партия,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя КАК Заказ,
	|	ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = &ПриоритетныйСклад
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ЕСТЬNULL(ДвижениеДокументаПоРезерву.ОтгруженоРезерва, 0) КАК ОтгруженоРезерва,
	|	ЕСТЬNULL(ДвижениеДокумента.ОтгруженоБезРезерва, 0) КАК ОтгруженоБезРезерва,
	|	ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0) + ЕСТЬNULL(ОстаткиРезервов.КоличествоОстаток, 0) + ЕСТЬNULL(ДвижениеДокументаПоРезерву.ОтгруженоРезерва, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ДвижениеДокументаПоРезерву.ОтгруженоРезерва, 0) + ЕСТЬNULL(ОстаткиРезервов.КоличествоОстаток, 0) КАК ВсегоРезерва,
	|	ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0) КАК СвободныйОстаток,
	|	ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0) + ЕСТЬNULL(ОстаткиРезервов.КоличествоОстаток, 0) + ЕСТЬNULL(ДвижениеДокументаПоРезерву.ОтгруженоРезерва, 0) КАК ОстатокСУчетомДвижения,
	|	ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка) КАК Ячейка
	|ИЗ
	|	ВТДекартовоПроизведениеНоменклатурыИСклада КАК ВТДекартовоПроизведениеНоменклатурыИСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаСкладе КАК ОстаткиНаСкладе
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ОстаткиНаСкладе.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ОстаткиНаСкладе.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ОстаткиНаСкладе.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ОстаткиНаСкладе.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвижениеДокументаБезРезерва КАК ДвижениеДокумента
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ДвижениеДокумента.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ДвижениеДокумента.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ДвижениеДокумента.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя = ДвижениеДокумента.ЗаказПокупателя1
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ДвижениеДокумента.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРезервов КАК ОстаткиРезервов
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ОстаткиРезервов.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя = ОстаткиРезервов.ЗаказПокупателя
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ОстаткиРезервов.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ОстаткиРезервов.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ОстаткиРезервов.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвижениеДокументаПоРезерву КАК ДвижениеДокументаПоРезерву
	|		ПО ВТДекартовоПроизведениеНоменклатурыИСклада.Номенклатура = ДвижениеДокументаПоРезерву.Номенклатура
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Характеристика = ДвижениеДокументаПоРезерву.Характеристика
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.Партия = ДвижениеДокументаПоРезерву.Партия
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.ЗаказПокупателя = ДвижениеДокументаПоРезерву.ЗаказПокупателя1
	|			И ВТДекартовоПроизведениеНоменклатурыИСклада.СтруктурнаяЕдиница = ДвижениеДокументаПоРезерву.СтруктурнаяЕдиница
	|ГДЕ
	|	(НЕ ЕСТЬNULL(ОстаткиРезервов.КоличествоОстаток, 0) = 0
	|			ИЛИ НЕ ЕСТЬNULL(ОстаткиНаСкладе.КоличествоОстаток, 0) = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заказ,
	|	Приоритет,
	|	Зарезервировано";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаОстаткиИРезервы()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатура.Номенклатура КАК НоменклатураЗапасов,
	|	ТаблицаНоменклатура.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатура.Партия КАК Партия,
	|	ТаблицаНоменклатура.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ ВтНоменклатураБезСклада
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(ЗапасыОстаткиРезервы.КоличествоОстаток, 0)) КАК РезервНаСкладах,
	|	СУММА(ЕСТЬNULL(ЗапасыОстаткиОбщие.КоличествоОстаток, 0)) КАК ОстатокОбщий,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ЕСТЬNULL(ЗапасыОстаткиРезервы.КоличествоОстаток, 0)) КАК РезервНаСкладахИтог
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ТОГДА ЗаказПокупателя = &ЗаказПокупателя
	|				КОНЕЦ) КАК ЗапасыОстаткиРезервы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиРезервы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиРезервы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиРезервы.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)) КАК ЗапасыОстаткиОбщие
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиОбщие.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиОбщие.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиОбщие.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0)) КАК ОстатокТекСклад,
	|	СУММА(ЕСТЬNULL(ЗапасыОстаткиРезервТекСклад.КоличествоОстаток, 0)) КАК РезервТекСклад
	|ПОМЕСТИТЬ ОстаткиВРазрезеСкладов
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК ЗапасыОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ТОГДА ЗаказПокупателя = &ЗаказПокупателя
	|				КОНЕЦ) КАК ЗапасыОстаткиРезервТекСклад
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстаткиРезервТекСклад.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстаткиРезервТекСклад.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстаткиРезервТекСклад.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстаткиРезервТекСклад.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ РезервСделанныйЗаказом
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|ГДЕ
	|	Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|	И Запасы.Регистратор = &ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.СтруктурнаяЕдиница,
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия
	|ПОМЕСТИТЬ РезервСделанныйЗаказомПоВсемСкладам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|ГДЕ
	|	Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|	И Запасы.Регистратор = &ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикамОстаткиДокументы.ЗаказПоставщикуДатаПоступления КАК ДатаПоступления,
	|	ЗаказаноНоменклатуры.ЗаказаноБезРезерва КАК ЗаказаноБезРезерва,
	|	ЗаказаноНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЗаказаноНоменклатуры.Характеристика КАК Характеристика,
	|	ЗаказаноНоменклатуры.Организация КАК Организация,
	|	ЗаказаноНоменклатуры.КоличествоДокументовЗаказано КАК КоличествоДокументовЗаказано
	|ПОМЕСТИТЬ Заказано
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.ЗаказаноБезРезерва) КАК ЗаказаноБезРезерва,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.Характеристика КАК Характеристика,
	|		ВложенныйЗапрос.Организация КАК Организация,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КоличествоДокументовЗаказано) КАК КоличествоДокументовЗаказано
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0)) КАК ЗаказаноБезРезерва,
	|			ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|			ЗаказыПоставщикамОстатки.Характеристика КАК Характеристика,
	|			ЗаказыПоставщикамОстатки.Организация КАК Организация,
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК КоличествоДокументовЗаказано
	|		ИЗ
	|			РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|					,
	|					Организация = &Организация
	|						И Номенклатура В (&Номенклатура)
	|						И Характеристика В (&Характеристика)) КАК ЗаказыПоставщикамОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки
	|				ПО ЗаказыПоставщикамОстатки.Организация = РазмещениеЗаказовОстатки.Организация
	|					И ЗаказыПоставщикамОстатки.ЗаказПоставщику = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|					И ЗаказыПоставщикамОстатки.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|					И ЗаказыПоставщикамОстатки.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|		ГДЕ
	|			ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) > 0
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыПоставщикамОстатки.Характеристика,
	|			ЗаказыПоставщикамОстатки.Организация,
	|			ЗаказыПоставщикамОстатки.Номенклатура,
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СУММА(ЗаказыНаПроизводствоОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0)),
	|			ЗаказыНаПроизводствоОстатки.Номенклатура,
	|			ЗаказыНаПроизводствоОстатки.Характеристика,
	|			ЗаказыНаПроизводствоОстатки.Организация,
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство
	|		ИЗ
	|			РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|					,
	|					Организация = &Организация
	|						И Номенклатура В (&Номенклатура)
	|						И Характеристика В (&Характеристика)) КАК ЗаказыНаПроизводствоОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки
	|				ПО ЗаказыНаПроизводствоОстатки.Организация = РазмещениеЗаказовОстатки.Организация
	|					И ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|					И ЗаказыНаПроизводствоОстатки.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|					И ЗаказыНаПроизводствоОстатки.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|		ГДЕ
	|			ЗаказыНаПроизводствоОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) > 0
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство,
	|			ЗаказыНаПроизводствоОстатки.Номенклатура,
	|			ЗаказыНаПроизводствоОстатки.Характеристика,
	|			ЗаказыНаПроизводствоОстатки.Организация) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.Характеристика,
	|		ВложенныйЗапрос.Организация) КАК ЗаказаноНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(ВложенныйЗапрос.ЗаказПоставщикуДатаПоступления) КАК ЗаказПоставщикуДатаПоступления,
	|			ВложенныйЗапрос.Организация КАК Организация,
	|			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|			ВложенныйЗапрос.Характеристика КАК Характеристика
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ГрафикДвиженияЗапасов.Период КАК ЗаказПоставщикуДатаПоступления,
	|				ЗаказыПоставщикамОстатки.Организация КАК Организация,
	|				ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|				ЗаказыПоставщикамОстатки.Характеристика КАК Характеристика
	|			ИЗ
	|				РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)) КАК ЗаказыПоставщикамОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияЗапасов КАК ГрафикДвиженияЗапасов
	|					ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ГрафикДвиженияЗапасов.Заказ
	|						И ЗаказыПоставщикамОстатки.Номенклатура = ГрафикДвиженияЗапасов.Номенклатура
	|						И ЗаказыПоставщикамОстатки.Характеристика = ГрафикДвиженияЗапасов.Характеристика
	|						И ЗаказыПоставщикамОстатки.Организация = ГрафикДвиженияЗапасов.Организация
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|							,
	|							Организация = &Организация
	|								И Номенклатура В (&Номенклатура)
	|								И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки
	|					ПО ЗаказыПоставщикамОстатки.Организация = РазмещениеЗаказовОстатки.Организация
	|						И ЗаказыПоставщикамОстатки.ЗаказПоставщику = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|						И ЗаказыПоставщикамОстатки.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|						И ЗаказыПоставщикамОстатки.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|			ГДЕ
	|				ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) > 0
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство.Финиш,
	|				ЗаказыНаПроизводствоОстатки.Организация,
	|				ЗаказыНаПроизводствоОстатки.Номенклатура,
	|				ЗаказыНаПроизводствоОстатки.Характеристика
	|			ИЗ
	|				РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)) КАК ЗаказыНаПроизводствоОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|							,
	|							Организация = &Организация
	|								И Номенклатура В (&Номенклатура)
	|								И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки
	|					ПО ЗаказыНаПроизводствоОстатки.Организация = РазмещениеЗаказовОстатки.Организация
	|						И ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|						И ЗаказыНаПроизводствоОстатки.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|						И ЗаказыНаПроизводствоОстатки.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|			ГДЕ
	|				ЗаказыНаПроизводствоОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) > 0) КАК ВложенныйЗапрос
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.Организация,
	|			ВложенныйЗапрос.Характеристика,
	|			ВложенныйЗапрос.Номенклатура) КАК ЗаказыПоставщикамОстаткиДокументы
	|		ПО ЗаказаноНоменклатуры.Номенклатура = ЗаказыПоставщикамОстаткиДокументы.Номенклатура
	|			И ЗаказаноНоменклатуры.Характеристика = ЗаказыПоставщикамОстаткиДокументы.Характеристика
	|			И ЗаказаноНоменклатуры.Организация = ЗаказыПоставщикамОстаткиДокументы.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамОстаткиДокументы.ЗаказПоставщикуДатаПоступления,
	|	ЗаказаноНоменклатуры.ЗаказаноБезРезерва,
	|	ЗаказаноНоменклатуры.Номенклатура,
	|	ЗаказаноНоменклатуры.Характеристика,
	|	ЗаказаноНоменклатуры.Организация,
	|	ЗаказаноНоменклатуры.КоличествоДокументовЗаказано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК РезервЗаказано,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК РезервЗаказаноИтог
	|ПОМЕСТИТЬ Размещено
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ТОГДА ЗаказПокупателя = &ЗаказПокупателя
	|				КОНЕЦ) КАК РазмещениеЗаказовОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = РазмещениеЗаказовОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(Запасы.Количество) КАК ОтгрузкаРезерва,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия
	|ПОМЕСТИТЬ ОтгрузкаПоРезервам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада,
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ ТИПЗНАЧЕНИЯ(Запасы.Регистратор) = ТИП(Документ.резервированиеЗапасов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(Заказано.ДатаПоступления, 0) КАК ДатаПоступления,
	|	ЕСТЬNULL(Заказано.КоличествоДокументовЗаказано, 0) КАК КоличествоДокументовЗаказано,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.НоменклатураЗапасов КАК Номенклатура,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаРезерв,
	|	ЕСТЬNULL(Размещено.РезервЗаказано, 0) КАК РезервЗаказано,
	|	ЕСТЬNULL(Заказано.ЗаказаноБезРезерва, 0) КАК ЗаказаноБезРезерва,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ОстатокТекСклад,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщий,
	|	ЕСТЬNULL(Остатки.РезервНаСкладахИтог, 0) КАК РезервНаСкладахИтог,
	|	ЕСТЬNULL(Размещено.РезервЗаказаноИтог, 0) КАК РезервЗаказаноИтог,
	|	ЛОЖЬ КАК СтрокаОбработана,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ОстатокТекСкладПослеРаспределения,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) + ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК МожноОтгрузитьПроведенныйДокумент,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщийПослеРаспределения,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) - ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК РезервТекСклад,
	|	ЕСТЬNULL(Остатки.РезервНаСкладах, 0) - ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК РезервНаСкладах,
	|	ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказом,
	|	ОстаткиВРазрезеСкладов.РезервТекСклад КАК РезервТекСкладОбщий,
	|	ЕСТЬNULL(ОтгрузкаПоРезервам.ОтгрузкаРезерва, 0) КАК ОтгрузкаРезерва,
	|	ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказомВсеСклады
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заказано КАК Заказано
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Заказано.Номенклатура
	|			И ВтНоменклатура.Характеристика = Заказано.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВРазрезеСкладов КАК ОстаткиВРазрезеСкладов
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиВРазрезеСкладов.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОстаткиВРазрезеСкладов.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиВРазрезеСкладов.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОстаткиВРазрезеСкладов.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ Размещено КАК Размещено
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Размещено.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Размещено.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказом.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказом.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказом.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтгрузкаПоРезервам КАК ОтгрузкаПоРезервам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОтгрузкаПоРезервам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОтгрузкаПоРезервам.Характеристика
	|			И ВтНоменклатура.Партия = ОтгрузкаПоРезервам.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказомПоВсемСкладам КАК РезервСделанныйЗаказомПоВсемСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказомПоВсемСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказомПоВсемСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказомПоВсемСкладам.Партия";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиИРезервыВРазрезеЗаказов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатура.Номенклатура КАК НоменклатураЗапасов,
	|	ТаблицаНоменклатура.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаНоменклатура.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатура.Партия КАК Партия,
	|	ТаблицаНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ ВтНоменклатураБезСклада
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(ЗапасыОстаткиОбщие.КоличествоОстаток, 0)) КАК ОстатокОбщий,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация = &Организация
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И ВЫБОР
	|						КОГДА НЕ ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.СборкаЗапасов)
	|								И НЕ ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ЗаказНаПроизводство)
	|							ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК ЗапасыОстаткиОбщие
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиОбщие.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиОбщие.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиОбщие.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК РезервНаСкладах,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК РезервНаСкладахИтог
	|ПОМЕСТИТЬ ОстаткиРезервыОбщие
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			ВЫБОР
	|				КОГДА &ЕстьЗаказы
	|					ТОГДА ЗаказПокупателя В (&ЗаказПокупателя)
	|			КОНЕЦ) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0)) КАК ОстатокТекСклад,
	|	СУММА(ЕСТЬNULL(ЗапасыОстаткиРезервТекСклад.КоличествоОстаток, 0)) КАК РезервТекСклад,
	|	ВтНоменклатура.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ОстаткиВРазрезеСкладов
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация = &Организация
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК ЗапасыОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА &ЕстьЗаказы
	|						ТОГДА ЗаказПокупателя В (&ЗаказПокупателя)
	|				КОНЕЦ) КАК ЗапасыОстаткиРезервТекСклад
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстаткиРезервТекСклад.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстаткиРезервТекСклад.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстаткиРезервТекСклад.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстаткиРезервТекСклад.СтруктурнаяЕдиница
	|			И ВтНоменклатура.ЗаказПокупателя = ЗапасыОстаткиРезервТекСклад.ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ РезервСделанныйЗаказом
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.ЗаказПокупателя = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&ЗаказПокупателя)
	|	И Запасы.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.СтруктурнаяЕдиница,
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия
	|ПОМЕСТИТЬ РезервСделанныйЗаказомПоВсемСкладам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&ЗаказПокупателя)
	|	И Запасы.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&ЗаказПокупателя)
	|	И Запасы.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	Запасы.ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикамОстаткиДокументы.ЗаказПоставщикуДатаПоступления КАК ДатаПоступления,
	|	ЗаказаноНоменклатуры.ЗаказаноБезРезерва КАК ЗаказаноБезРезерва,
	|	ЗаказаноНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЗаказаноНоменклатуры.Характеристика КАК Характеристика,
	|	ЗаказаноНоменклатуры.Организация КАК Организация,
	|	ЗаказаноНоменклатуры.КоличествоДокументовЗаказано КАК КоличествоДокументовЗаказано
	|ПОМЕСТИТЬ Заказано
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.ЗаказаноБезРезерва) КАК ЗаказаноБезРезерва,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.Характеристика КАК Характеристика,
	|		ВложенныйЗапрос.Организация КАК Организация,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КоличествоДокументовЗаказано) КАК КоличествоДокументовЗаказано
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК ЗаказаноБезРезерва,
	|			ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|			ЗаказыПоставщикамОстатки.Характеристика КАК Характеристика,
	|			ЗаказыПоставщикамОстатки.Организация КАК Организация,
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК КоличествоДокументовЗаказано
	|		ИЗ
	|			РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|					,
	|					Организация = &Организация
	|						И Номенклатура В (&Номенклатура)
	|						И Характеристика В (&Характеристика)
	|						И НЕ ЗаказПоставщику В
	|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|								ИЗ
	|									РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура В (&Номенклатура)
	|										И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыПоставщикамОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыПоставщикамОстатки.Характеристика,
	|			ЗаказыПоставщикамОстатки.Организация,
	|			ЗаказыПоставщикамОстатки.Номенклатура,
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СУММА(ЗаказыНаПроизводствоОстатки.КоличествоОстаток),
	|			ЗаказыНаПроизводствоОстатки.Номенклатура,
	|			ЗаказыНаПроизводствоОстатки.Характеристика,
	|			ЗаказыНаПроизводствоОстатки.Организация,
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство
	|		ИЗ
	|			РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|					,
	|					Организация = &Организация
	|						И Номенклатура В (&Номенклатура)
	|						И Характеристика В (&Характеристика)
	|						И НЕ ЗаказНаПроизводство В
	|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|								ИЗ
	|									РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура В (&Номенклатура)
	|										И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыНаПроизводствоОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство,
	|			ЗаказыНаПроизводствоОстатки.Номенклатура,
	|			ЗаказыНаПроизводствоОстатки.Характеристика,
	|			ЗаказыНаПроизводствоОстатки.Организация) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.Характеристика,
	|		ВложенныйЗапрос.Организация) КАК ЗаказаноНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ВложенныйЗапрос.ЗаказПоставщикуДатаПоступления) КАК ЗаказПоставщикуДатаПоступления,
	|			ВложенныйЗапрос.Организация КАК Организация,
	|			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|			ВложенныйЗапрос.Характеристика КАК Характеристика
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ГрафикДвиженияЗапасов.Период КАК ЗаказПоставщикуДатаПоступления,
	|				ЗаказыПоставщикамОстатки.Организация КАК Организация,
	|				ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|				ЗаказыПоставщикамОстатки.Характеристика КАК Характеристика
	|			ИЗ
	|				РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)
	|							И НЕ ЗаказПоставщику В
	|									(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|									ИЗ
	|										РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура В (&Номенклатура)
	|											И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыПоставщикамОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияЗапасов КАК ГрафикДвиженияЗапасов
	|					ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ГрафикДвиженияЗапасов.Заказ
	|						И ЗаказыПоставщикамОстатки.Номенклатура = ГрафикДвиженияЗапасов.Номенклатура
	|						И ЗаказыПоставщикамОстатки.Характеристика = ГрафикДвиженияЗапасов.Характеристика
	|			ГДЕ
	|				ГрафикДвиженияЗапасов.Организация = &Организация
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство.Финиш,
	|				ЗаказыНаПроизводствоОстатки.Организация,
	|				ЗаказыНаПроизводствоОстатки.Номенклатура,
	|				ЗаказыНаПроизводствоОстатки.Характеристика
	|			ИЗ
	|				РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)
	|							И НЕ ЗаказНаПроизводство В
	|									(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|									ИЗ
	|										РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура В (&Номенклатура)
	|											И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыНаПроизводствоОстатки) КАК ВложенныйЗапрос
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.Организация,
	|			ВложенныйЗапрос.Характеристика,
	|			ВложенныйЗапрос.Номенклатура) КАК ЗаказыПоставщикамОстаткиДокументы
	|		ПО ЗаказаноНоменклатуры.Номенклатура = ЗаказыПоставщикамОстаткиДокументы.Номенклатура
	|			И ЗаказаноНоменклатуры.Характеристика = ЗаказыПоставщикамОстаткиДокументы.Характеристика
	|			И ЗаказаноНоменклатуры.Организация = ЗаказыПоставщикамОстаткиДокументы.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамОстаткиДокументы.ЗаказПоставщикуДатаПоступления,
	|	ЗаказаноНоменклатуры.ЗаказаноБезРезерва,
	|	ЗаказаноНоменклатуры.Номенклатура,
	|	ЗаказаноНоменклатуры.Характеристика,
	|	ЗаказаноНоменклатуры.Организация,
	|	ЗаказаноНоменклатуры.КоличествоДокументовЗаказано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК РезервЗаказано,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК РезервЗаказаноИтог,
	|	РазмещениеЗаказовОстатки.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ Размещено
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА &ЕстьЗаказы
	|						ТОГДА ЗаказПокупателя В (&ЗаказПокупателя)
	|				КОНЕЦ) КАК РазмещениеЗаказовОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = РазмещениеЗаказовОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	РазмещениеЗаказовОстатки.ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(Запасы.Количество) КАК ОтгрузкаРезерва,
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ОтгрузкаПоРезервам
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.ЗаказПокупателя = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&ЗаказПокупателя)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.ЗаказПокупателя,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(Заказано.ДатаПоступления, 0) КАК ДатаПоступления,
	|	ЕСТЬNULL(Заказано.КоличествоДокументовЗаказано, 0) КАК КоличествоДокументовЗаказано,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.НоменклатураЗапасов КАК Номенклатура,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(Размещено.РезервЗаказано, 0) КАК РезервЗаказано,
	|	ЕСТЬNULL(Заказано.ЗаказаноБезРезерва, 0) КАК ЗаказаноБезРезерва,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ОстатокТекСклад,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщий,
	|	ЕСТЬNULL(ОстаткиРезервыОбщие.РезервНаСкладахИтог, 0) КАК РезервНаСкладахИтог,
	|	ЕСТЬNULL(Размещено.РезервЗаказаноИтог, 0) КАК РезервЗаказаноИтог,
	|	ЛОЖЬ КАК СтрокаОбработана,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ОстатокТекСкладПослеРаспределения,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) + ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК МожноОтгрузитьПроведенныйДокумент,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщийПослеРаспределения,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСклад,
	|	ЕСТЬNULL(ОстаткиРезервыОбщие.РезервНаСкладах, 0) - ЕСТЬNULL(РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам.ЗарезервированоЗаказом, 0) КАК РезервНаСкладах,
	|	ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказом,
	|	ОстаткиВРазрезеСкладов.РезервТекСклад КАК РезервТекСкладОбщий,
	|	ЕСТЬNULL(ОтгрузкаПоРезервам.ОтгрузкаРезерва, 0) КАК ОтгрузкаРезерва,
	|	ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказомВсеСклады,
	|	ВтНоменклатура.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заказано КАК Заказано
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Заказано.Номенклатура
	|			И ВтНоменклатура.Характеристика = Заказано.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВРазрезеСкладов КАК ОстаткиВРазрезеСкладов
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиВРазрезеСкладов.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОстаткиВРазрезеСкладов.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиВРазрезеСкладов.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОстаткиВРазрезеСкладов.СтруктурнаяЕдиница
	|			И ВтНоменклатура.ЗаказПокупателя = ОстаткиВРазрезеСкладов.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Размещено КАК Размещено
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Размещено.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Размещено.Характеристика
	|			И ВтНоменклатура.ЗаказПокупателя = Размещено.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказом.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказом.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказом.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
	|			И ВтНоменклатура.ЗаказПокупателя = РезервСделанныйЗаказом.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтгрузкаПоРезервам КАК ОтгрузкаПоРезервам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОтгрузкаПоРезервам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОтгрузкаПоРезервам.Характеристика
	|			И ВтНоменклатура.Партия = ОтгрузкаПоРезервам.Партия
	|			И ВтНоменклатура.ЗаказПокупателя = ОтгрузкаПоРезервам.ЗаказПокупателя
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОтгрузкаПоРезервам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказомПоВсемСкладам КАК РезервСделанныйЗаказомПоВсемСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказомПоВсемСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказомПоВсемСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказомПоВсемСкладам.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРезервыОбщие КАК ОстаткиРезервыОбщие
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиРезервыОбщие.Номенклатура
	|			И ВтНоменклатура.Характеристика = ОстаткиРезервыОбщие.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиРезервыОбщие.Партия
	|			И ВтНоменклатура.ЗаказПокупателя = ОстаткиРезервыОбщие.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам КАК РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.ЗаказПокупателя = РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам.ЗаказПокупателя
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказомВРазрезеЗаказовПоСкладам.Партия";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиИРезервыРасходнаяНакладная()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатура.Номенклатура КАК НоменклатураЗапасов,
	|	ТаблицаНоменклатура.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатура.Партия КАК Партия,
	|	ТаблицаНоменклатура.Заказ КАК Заказ,
	|	ТаблицаНоменклатура.ЯчейкаДоступна КАК ЯчейкаДоступна,
	|	ТаблицаНоменклатура.Ячейка КАК Ячейка,
	|	ТаблицаНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ ВтНоменклатураБезСклада
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладах,
	|	СУММА(ЗапасыОстаткиОбщие.КоличествоОстаток) КАК ОстатокОбщий,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладахИтог,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ,
	|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК ОстатокОбщийЯчеистоеХранение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиРезервы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиРезервы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиРезервы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = ЗапасыОстаткиРезервы.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И Номенклатура В (&Номенклатура)
	|					И ВЫБОР
	|						КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
	|								И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
	|							ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК ЗапасыОстаткиОбщие
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиОбщие.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиОбщие.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиОбщие.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И Номенклатура В (&Номенклатура)
	|					И СтруктурнаяЕдиница.ОрдерныйСклад = ЛОЖЬ
	|					И ВЫБОР
	|						КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
	|								И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
	|							ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыНаСкладахОстатки.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОстатокТекСклад,
	|	СУММА(ЗапасыОстаткиРезервТекСклад.КоличествоОстаток) КАК РезервТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОстатокТекЯчейка
	|ПОМЕСТИТЬ ОстаткиВРазрезеСкладов
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервТекСклад
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстаткиРезервТекСклад.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстаткиРезервТекСклад.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстаткиРезервТекСклад.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстаткиРезервТекСклад.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ЗапасыОстаткиРезервТекСклад.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыНаСкладахОстатки.Партия
	|			И ВтНоменклатура.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказом
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.СтруктурнаяЕдиница,
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказомПоВсемСкладам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество
	|			ИНАЧЕ Запасы.Количество * -1
	|		КОНЕЦ) КАК СписаноРезерваНакладной,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РасходРезерваПоНакладной
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество
	|			ИНАЧЕ Запасы.Количество * -1
	|		КОНЕЦ) КАК СписаноРезерваНакладной,
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ВтНоменклатура.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ РасходРезерваПоНакладнойПоСкладам
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|			И ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Заказ,
	|	ВтНоменклатура.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойПоСкладам
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойВсего
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыНаСкладах.Количество) КАК СписаноНакладной,
	|	ЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыНаСкладах.Ячейка КАК Ячейка,
	|	ЗапасыНаСкладах.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоЯчейкам
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|ГДЕ
	|	ЗапасыНаСкладах.Регистратор = &Ссылка
	|	И ЗапасыНаСкладах.Номенклатура В(&Номенклатура)
	|	И ЗапасыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладах.Номенклатура,
	|	ЗапасыНаСкладах.Характеристика,
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ЗапасыНаСкладах.Ячейка,
	|	ЗапасыНаСкладах.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыНаСкладах.Количество) КАК СписаноНакладной,
	|	ЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладах.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоЯчейкамВсего
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|ГДЕ
	|	ЗапасыНаСкладах.Регистратор = &Ссылка
	|	И ЗапасыНаСкладах.Номенклатура В(&Номенклатура)
	|	И ЗапасыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладах.Номенклатура,
	|	ЗапасыНаСкладах.Характеристика,
	|	ЗапасыНаСкладах.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОбщийРезерв
	|ПОМЕСТИТЬ ОбщийРезервПоНоменклатуре
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Организация В (&ОрганизацииПередачи)
	|				И НЕ ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|				И Номенклатура В (&Номенклатура)
	|				И ВЫБОР
	|					КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
	|							И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
	|						ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.НоменклатураЗапасов КАК Номенклатура,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойВсего.СписаноНакладной, 0) КАК ОстатокОбщий,
	|	ЕСТЬNULL(Остатки.РезервНаСкладахИтог, 0) КАК РезервНаСкладахИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) - ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК РезервТекСклад,
	|	ЕСТЬNULL(Остатки.РезервНаСкладах, 0) - ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК РезервНаСкладах,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладОбщий,
	|	ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказомВсеСклады,
	|	ЕСТЬNULL(РасходРезерваПоНакладной.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладной,
	|	ЕСТЬNULL(РасходРезерваПоНакладнойПоСкладам.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладнойТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной, 0) КАК ОстатокТекСклад,
	|	ВтНоменклатура.Ячейка КАК Ячейка,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщийОрдерныеСклады,
	|	ЕСТЬNULL(Остатки.ОстатокОбщийЯчеистоеХранение, 0) КАК ОстатокОбщийЯчеистыеСклады,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ТекущийОстатокПоСкладу,
	|	0 КАК КоличествоСтрок,
	|	0 КАК КоличествоПроходов,
	|	РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной КАК РасходОрдерныеСклады,
	|	РасходБезРезерваПоЯчейкам.СписаноНакладной КАК РасходЯчеистыеСклады,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекЯчейка, 0) + ЕСТЬNULL(РасходБезРезерваПоЯчейкам.СписаноНакладной, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОстатокВЯчейке
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВРазрезеСкладов КАК ОстаткиВРазрезеСкладов
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиВРазрезеСкладов.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОстаткиВРазрезеСкладов.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиВРазрезеСкладов.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОстаткиВРазрезеСкладов.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ОстаткиВРазрезеСкладов.Заказ
	|			И ВтНоменклатура.Ячейка = ОстаткиВРазрезеСкладов.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|			И ВтНоменклатура.Заказ = Остатки.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказом.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказом.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказом.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказом.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказомПоВсемСкладам КАК РезервСделанныйЗаказомПоВсемСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказомПоВсемСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказомПоВсемСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказомПоВсемСкладам.Партия
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказомПоВсемСкладам.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладной КАК РасходРезерваПоНакладной
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладной.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладной.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладной.Партия
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладной.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладнойПоСкладам КАК РасходРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладнойПоСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладнойПоСкладам.Заказ
	|			И ВтНоменклатура.Ячейка = РасходРезерваПоНакладнойПоСкладам.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойПоСкладам КАК РасходБезРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойПоСкладам.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходБезРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщийРезервПоНоменклатуре КАК ОбщийРезервПоНоменклатуре
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОбщийРезервПоНоменклатуре.Номенклатура
	|			И ВтНоменклатура.Характеристика = ОбщийРезервПоНоменклатуре.Характеристика
	|			И ВтНоменклатура.Партия = ОбщийРезервПоНоменклатуре.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоЯчейкам КАК РасходБезРезерваПоЯчейкам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоЯчейкам.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоЯчейкам.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоЯчейкам.Партия
	|			И ВтНоменклатура.Ячейка = РасходБезРезерваПоЯчейкам.Ячейка
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходБезРезерваПоЯчейкам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоЯчейкамВсего КАК РасходБезРезерваПоЯчейкамВсего
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоЯчейкамВсего.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоЯчейкамВсего.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоЯчейкамВсего.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойВсего КАК РасходБезРезерваПоНакладнойВсего
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойВсего.Номенклатура
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойВсего.Партия
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойВсего.Характеристика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиИРезервыЗаказНаряд()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатура.Номенклатура КАК НоменклатураЗапасов,
	|	ТаблицаНоменклатура.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатура.Партия КАК Партия,
	|	ТаблицаНоменклатура.Заказ КАК Заказ,
	|	ТаблицаНоменклатура.ЯчейкаДоступна КАК ЯчейкаДоступна,
	|	ТаблицаНоменклатура.Ячейка КАК Ячейка,
	|	ТаблицаНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ ВтНоменклатураБезСклада
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладах,
	|	СУММА(ЗапасыОстаткиОбщие.КоличествоОстаток) КАК ОстатокОбщий,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладахИтог,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ,
	|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК ОстатокОбщийЯчеистоеХранение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиРезервы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиРезервы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиРезервы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = ЗапасыОстаткиРезервы.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиОбщие
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиОбщие.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиОбщие.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиОбщие.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|					И Номенклатура В (&Номенклатура)
	|					И СтруктурнаяЕдиница.ОрдерныйСклад = ЛОЖЬ) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыНаСкладахОстатки.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОстатокТекСклад,
	|	СУММА(ЗапасыОстаткиРезервТекСклад.КоличествоОстаток) КАК РезервТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОстатокТекЯчейка
	|ПОМЕСТИТЬ ОстаткиВРазрезеСкладов
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервТекСклад
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстаткиРезервТекСклад.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстаткиРезервТекСклад.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстаткиРезервТекСклад.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстаткиРезервТекСклад.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ЗапасыОстаткиРезервТекСклад.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыНаСкладахОстатки.Партия
	|			И ВтНоменклатура.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказом
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.СтруктурнаяЕдиница,
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказомПоВсемСкладам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество
	|			ИНАЧЕ Запасы.Количество * -1
	|		КОНЕЦ) КАК СписаноРезерваНакладной,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РасходРезерваПоНакладной
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноРезерваНакладной,
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ВтНоменклатура.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ РасходРезерваПоНакладнойПоСкладам
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|			И ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Заказ,
	|	ВтНоменклатура.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойПоСкладам
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойВсего
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыНаСкладах.Количество) КАК СписаноНакладной,
	|	ЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыНаСкладах.Ячейка КАК Ячейка,
	|	ЗапасыНаСкладах.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоЯчейкам
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|ГДЕ
	|	ЗапасыНаСкладах.Регистратор = &Ссылка
	|	И ЗапасыНаСкладах.Номенклатура В(&Номенклатура)
	|	И ЗапасыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладах.Номенклатура,
	|	ЗапасыНаСкладах.Характеристика,
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ЗапасыНаСкладах.Ячейка,
	|	ЗапасыНаСкладах.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыНаСкладах.Количество) КАК СписаноНакладной,
	|	ЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладах.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоЯчейкамВсего
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|ГДЕ
	|	ЗапасыНаСкладах.Регистратор = &Ссылка
	|	И ЗапасыНаСкладах.Номенклатура В(&Номенклатура)
	|	И ЗапасыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладах.Номенклатура,
	|	ЗапасыНаСкладах.Характеристика,
	|	ЗапасыНаСкладах.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОбщийРезерв
	|ПОМЕСТИТЬ ОбщийРезервПоНоменклатуре
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Организация В (&ОрганизацииПередачи)
	|				И НЕ ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|				И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				И Номенклатура В (&Номенклатура)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.НоменклатураЗапасов КАК Номенклатура,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойВсего.СписаноНакладной, 0) КАК ОстатокОбщий,
	|	ЕСТЬNULL(Остатки.РезервНаСкладахИтог, 0) КАК РезервНаСкладахИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) - ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК РезервТекСклад,
	|	ЕСТЬNULL(Остатки.РезервНаСкладах, 0) - ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК РезервНаСкладах,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладОбщий,
	|	ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказомВсеСклады,
	|	ЕСТЬNULL(РасходРезерваПоНакладной.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладной,
	|	ЕСТЬNULL(РасходРезерваПоНакладнойПоСкладам.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладнойТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной, 0) КАК ОстатокТекСклад,
	|	ВтНоменклатура.Ячейка КАК Ячейка,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщийОрдерныеСклады,
	|	ЕСТЬNULL(Остатки.ОстатокОбщийЯчеистоеХранение, 0) КАК ОстатокОбщийЯчеистыеСклады,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ТекущийОстатокПоСкладу,
	|	0 КАК КоличествоСтрок,
	|	0 КАК КоличествоПроходов,
	|	РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной КАК РасходОрдерныеСклады,
	|	РасходБезРезерваПоЯчейкам.СписаноНакладной КАК РасходЯчеистыеСклады,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекЯчейка, 0) + ЕСТЬNULL(РасходБезРезерваПоЯчейкам.СписаноНакладной, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОстатокВЯчейке
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВРазрезеСкладов КАК ОстаткиВРазрезеСкладов
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиВРазрезеСкладов.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОстаткиВРазрезеСкладов.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиВРазрезеСкладов.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОстаткиВРазрезеСкладов.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ОстаткиВРазрезеСкладов.Заказ
	|			И ВтНоменклатура.Ячейка = ОстаткиВРазрезеСкладов.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|			И ВтНоменклатура.Заказ = Остатки.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказом.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказом.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказом.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказом.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказомПоВсемСкладам КАК РезервСделанныйЗаказомПоВсемСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказомПоВсемСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказомПоВсемСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказомПоВсемСкладам.Партия
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказомПоВсемСкладам.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладной КАК РасходРезерваПоНакладной
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладной.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладной.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладной.Партия
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладной.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладнойПоСкладам КАК РасходРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладнойПоСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладнойПоСкладам.Заказ
	|			И ВтНоменклатура.Ячейка = РасходРезерваПоНакладнойПоСкладам.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойПоСкладам КАК РасходБезРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойПоСкладам.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходБезРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщийРезервПоНоменклатуре КАК ОбщийРезервПоНоменклатуре
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОбщийРезервПоНоменклатуре.Номенклатура
	|			И ВтНоменклатура.Характеристика = ОбщийРезервПоНоменклатуре.Характеристика
	|			И ВтНоменклатура.Партия = ОбщийРезервПоНоменклатуре.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоЯчейкам КАК РасходБезРезерваПоЯчейкам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоЯчейкам.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоЯчейкам.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоЯчейкам.Партия
	|			И ВтНоменклатура.Ячейка = РасходБезРезерваПоЯчейкам.Ячейка
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходБезРезерваПоЯчейкам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоЯчейкамВсего КАК РасходБезРезерваПоЯчейкамВсего
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоЯчейкамВсего.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоЯчейкамВсего.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоЯчейкамВсего.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойВсего КАК РасходБезРезерваПоНакладнойВсего
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойВсего.Номенклатура
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойВсего.Партия
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойВсего.Характеристика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиИРезервыЧекККМ()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатура.Номенклатура КАК НоменклатураЗапасов,
	|	ТаблицаНоменклатура.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатура.Партия КАК Партия,
	|	ТаблицаНоменклатура.Заказ КАК Заказ,
	|	ТаблицаНоменклатура.ЯчейкаДоступна КАК ЯчейкаДоступна,
	|	ТаблицаНоменклатура.Ячейка КАК Ячейка,
	|	ТаблицаНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ ВтНоменклатураБезСклада
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладах,
	|	СУММА(ЗапасыОстаткиОбщие.КоличествоОстаток) КАК ОстатокОбщий,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладахИтог,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ,
	|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК ОстатокОбщийЯчеистоеХранение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиРезервы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиРезервы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиРезервы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = ЗапасыОстаткиРезервы.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет))
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиОбщие
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиОбщие.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиОбщие.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиОбщие.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет))
	|					И Номенклатура В (&Номенклатура)
	|					И СтруктурнаяЕдиница.ОрдерныйСклад = ЛОЖЬ) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыНаСкладахОстатки.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОстатокТекСклад,
	|	СУММА(ЗапасыОстаткиРезервТекСклад.КоличествоОстаток) КАК РезервТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОстатокТекЯчейка
	|ПОМЕСТИТЬ ОстаткиВРазрезеСкладов
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервТекСклад
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстаткиРезервТекСклад.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстаткиРезервТекСклад.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстаткиРезервТекСклад.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстаткиРезервТекСклад.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ЗапасыОстаткиРезервТекСклад.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыНаСкладахОстатки.Партия
	|			И ВтНоменклатура.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказом
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Регистратор В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.СтруктурнаяЕдиница,
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказомПоВсемСкладам
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.Регистратор В(&МассивЗаказов)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(Запасы.Количество) КАК СписаноРезерваНакладной,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РасходРезерваПоНакладной
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноРезерваНакладной,
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Заказ КАК Заказ
	|ПОМЕСТИТЬ РасходРезерваПоНакладнойПоСкладам
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|			И ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя В(&МассивЗаказов)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойПоСкладам
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойВсего
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОбщийРезерв
	|ПОМЕСТИТЬ ОбщийРезервПоНоменклатуре
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Организация В (&ОрганизацииПередачи)
	|				И НЕ ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|				И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				И Номенклатура В (&Номенклатура)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.НоменклатураЗапасов КАК Номенклатура,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойВсего.СписаноНакладной, 0) КАК ОстатокОбщий,
	|	ЕСТЬNULL(Остатки.РезервНаСкладахИтог, 0) КАК РезервНаСкладахИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) - ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК РезервТекСклад,
	|	ЕСТЬNULL(Остатки.РезервНаСкладах, 0) - ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК РезервНаСкладах,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладОбщий,
	|	ЕСТЬNULL(РезервСделанныйЗаказомПоВсемСкладам.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказомВсеСклады,
	|	ЕСТЬNULL(РасходРезерваПоНакладной.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладной,
	|	ЕСТЬNULL(РасходРезерваПоНакладнойПоСкладам.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладнойТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной, 0) КАК ОстатокТекСклад,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщийОрдерныеСклады,
	|	ЕСТЬNULL(Остатки.ОстатокОбщийЯчеистоеХранение, 0) КАК ОстатокОбщийЯчеистыеСклады,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ТекущийОстатокПоСкладу,
	|	0 КАК КоличествоСтрок,
	|	0 КАК КоличествоПроходов,
	|	РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной КАК РасходОрдерныеСклады,
	|	ВтНоменклатура.Ячейка КАК Ячейка
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВРазрезеСкладов КАК ОстаткиВРазрезеСкладов
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиВРазрезеСкладов.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОстаткиВРазрезеСкладов.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиВРазрезеСкладов.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОстаткиВРазрезеСкладов.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ОстаткиВРазрезеСкладов.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|			И ВтНоменклатура.Заказ = Остатки.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказом.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказом.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказом.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказом.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказомПоВсемСкладам КАК РезервСделанныйЗаказомПоВсемСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказомПоВсемСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказомПоВсемСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказомПоВсемСкладам.Партия
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказомПоВсемСкладам.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладной КАК РасходРезерваПоНакладной
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладной.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладной.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладной.Партия
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладной.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладнойПоСкладам КАК РасходРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладнойПоСкладам.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладнойПоСкладам.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойПоСкладам КАК РасходБезРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойПоСкладам.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходБезРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщийРезервПоНоменклатуре КАК ОбщийРезервПоНоменклатуре
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОбщийРезервПоНоменклатуре.Номенклатура
	|			И ВтНоменклатура.Характеристика = ОбщийРезервПоНоменклатуре.Характеристика
	|			И ВтНоменклатура.Партия = ОбщийРезервПоНоменклатуре.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойВсего КАК РасходБезРезерваПоНакладнойВсего
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойВсего.Номенклатура
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойВсего.Партия
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойВсего.Характеристика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиИРезервыЧекККМ_РМК()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатура.Номенклатура КАК НоменклатураЗапасов,
	|	ТаблицаНоменклатура.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатура.Партия КАК Партия,
	|	ТаблицаНоменклатура.Заказ КАК Заказ,
	|	ТаблицаНоменклатура.ЯчейкаДоступна КАК ЯчейкаДоступна,
	|	ТаблицаНоменклатура.Ячейка КАК Ячейка,
	|	ТаблицаНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ВтНоменклатура.Партия КАК Партия
	|ПОМЕСТИТЬ ВтНоменклатураБезСклада
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладах,
	|	СУММА(ЗапасыОстаткиОбщие.КоличествоОстаток) КАК ОстатокОбщий,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(ЗапасыОстаткиРезервы.КоличествоОстаток) КАК РезервНаСкладахИтог,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ,
	|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК ОстатокОбщийЯчеистоеХранение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя = &ЗаказПокупателя
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиРезервы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиРезервы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиРезервы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = ЗапасыОстаткиРезервы.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница))
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиОбщие
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыОстаткиОбщие.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыОстаткиОбщие.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыОстаткиОбщие.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ТИПЗНАЧЕНИЯ(СтруктурнаяЕдиница) = ТИП(Справочник.СтруктурныеЕдиницы)
	|					И СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница))
	|					И Номенклатура В (&Номенклатура)
	|					И СтруктурнаяЕдиница.ОрдерныйСклад = ЛОЖЬ) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = ЗапасыНаСкладахОстатки.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК ОстатокТекСклад,
	|	СУММА(ЗапасыОстаткиРезервТекСклад.КоличествоОстаток) КАК РезервТекСклад,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОстатокТекЯчейка
	|ПОМЕСТИТЬ ОстаткиВРазрезеСкладов
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстатки.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя = &ЗаказПокупателя
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыОстаткиРезервТекСклад
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыОстаткиРезервТекСклад.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыОстаткиРезервТекСклад.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыОстаткиРезервТекСклад.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыОстаткиРезервТекСклад.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ЗапасыОстаткиРезервТекСклад.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И Номенклатура В (&Номенклатура)) КАК ЗапасыНаСкладахОстатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ЗапасыНаСкладахОстатки.Номенклатура
	|			И ВтНоменклатура.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
	|			И ВтНоменклатура.Партия = ЗапасыНаСкладахОстатки.Партия
	|			И ВтНоменклатура.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ,
	|	ЗапасыНаСкладахОстатки.Ячейка,
	|	ВЫБОР
	|		КОГДА ВтНоменклатура.ЯчейкаДоступна
	|			ТОГДА ЗапасыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК ЗарезервированоЗаказом,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.Заказ КАК Заказ
	|ПОМЕСТИТЬ РезервСделанныйЗаказом
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатура.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатура.Партия = Запасы.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = Запасы.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|	И Запасы.Регистратор = &ЗаказПокупателя
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.СтруктурнаяЕдиница,
	|	ВтНоменклатура.НоменклатураЗапасов,
	|	ВтНоменклатура.СтруктурнаяЕдиница,
	|	ВтНоменклатура.Характеристика,
	|	ВтНоменклатура.Партия,
	|	ВтНоменклатура.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов КАК НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика КАК Характеристика,
	|	ВтНоменклатураБезСклада.Партия КАК Партия,
	|	СУММА(Запасы.Количество) КАК СписаноРезерваНакладной,
	|	ВтНоменклатураБезСклада.Заказ КАК Заказ
	|ПОМЕСТИТЬ РасходРезерваПоНакладной
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы КАК Запасы
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = Запасы.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = Запасы.Характеристика
	|			И ВтНоменклатураБезСклада.Партия = Запасы.Партия
	|			И ВтНоменклатураБезСклада.Заказ = Запасы.ЗаказПокупателя
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|	И НЕ Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНоменклатураБезСклада.НоменклатураЗапасов,
	|	ВтНоменклатураБезСклада.Характеристика,
	|	ВтНоменклатураБезСклада.Партия,
	|	ВтНоменклатураБезСклада.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойПоСкладам
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Запасы.Количество) КАК СписаноНакладной,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ РасходБезРезерваПоНакладнойВсего
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Регистратор = &Ссылка
	|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Запасы.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК РазмещеноРезерва,
	|	РазмещениеЗаказовОстатки.Номенклатура КАК Номенклатура,
	|	РазмещениеЗаказовОстатки.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Размещено
	|ИЗ
	|	ВтНоменклатураБезСклада КАК ВтНоменклатураБезСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				,
	|				ВЫБОР
	|					КОГДА НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ТОГДА Организация В (&ОрганизацииПередачи)
	|								И ЗаказПокупателя = &ЗаказПокупателя
	|				КОНЕЦ) КАК РазмещениеЗаказовОстатки
	|		ПО ВтНоменклатураБезСклада.НоменклатураЗапасов = РазмещениеЗаказовОстатки.Номенклатура
	|			И ВтНоменклатураБезСклада.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	РазмещениеЗаказовОстатки.Характеристика,
	|	РазмещениеЗаказовОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ Заказано
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыПоставщикамОстатки.Организация КАК Организация,
	|		ЗаказыПоставщикамОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыПоставщикамОстатки.Характеристика КАК Характеристика,
	|		ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И Номенклатура В (&Номенклатура)
	|					И Характеристика В (&Характеристика)
	|					И НЕ ЗаказПоставщику В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|							ИЗ
	|								РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура В (&Номенклатура)
	|									И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыПоставщикамОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыНаПроизводствоОстатки.Организация,
	|		ЗаказыНаПроизводствоОстатки.Номенклатура,
	|		ЗаказыНаПроизводствоОстатки.Характеристика,
	|		СУММА(ЗаказыНаПроизводствоОстатки.КоличествоОстаток)
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|				,
	|				Организация В (&ОрганизацииПередачи)
	|					И Номенклатура В (&Номенклатура)
	|					И Характеристика В (&Характеристика)
	|					И НЕ ЗаказНаПроизводство В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|							ИЗ
	|								РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура В (&Номенклатура)
	|									И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыНаПроизводствоОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказыНаПроизводствоОстатки.Номенклатура,
	|		ЗаказыНаПроизводствоОстатки.Организация,
	|		ЗаказыНаПроизводствоОстатки.Характеристика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтНоменклатура.Характеристика КАК Характеристика,
	|	ВтНоменклатура.НоменклатураЗапасов КАК Номенклатура,
	|	ВтНоменклатура.Партия КАК Партия,
	|	ВтНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойВсего.СписаноНакладной, 0) КАК ОстатокОбщий,
	|	ЕСТЬNULL(Остатки.РезервНаСкладахИтог, 0) КАК РезервНаСкладахИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладИтог,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) - ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК РезервТекСклад,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.РезервТекСклад, 0) КАК РезервТекСкладОбщий,
	|	ЕСТЬNULL(РасходРезерваПоНакладной.СписаноРезерваНакладной, 0) КАК СписаноРезерваНакладной,
	|	ВтНоменклатура.Заказ КАК Заказ,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) + ЕСТЬNULL(РасходБезРезерваПоНакладнойПоСкладам.СписаноНакладной, 0) КАК ОстатокТекСклад,
	|	ЕСТЬNULL(Остатки.ОстатокОбщий, 0) КАК ОстатокОбщийОрдерныеСклады,
	|	ЕСТЬNULL(Остатки.ОстатокОбщийЯчеистоеХранение, 0) КАК ОстатокОбщийЯчеистыеСклады,
	|	ЕСТЬNULL(ОстаткиВРазрезеСкладов.ОстатокТекСклад, 0) КАК ТекущийОстатокПоСкладу,
	|	0 КАК КоличествоСтрок,
	|	0 КАК КоличествоПроходов,
	|	ЕСТЬNULL(Заказано.КоличествоОстаток, 0) + ЕСТЬNULL(Размещено.РазмещеноРезерва, 0) КАК КПоступлению,
	|	ВтНоменклатура.Ячейка КАК Ячейка
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВРазрезеСкладов КАК ОстаткиВРазрезеСкладов
	|		ПО ВтНоменклатура.НоменклатураЗапасов = ОстаткиВРазрезеСкладов.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = ОстаткиВРазрезеСкладов.Характеристика
	|			И ВтНоменклатура.Партия = ОстаткиВРазрезеСкладов.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = ОстаткиВРазрезеСкладов.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = ОстаткиВРазрезеСкладов.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|			И ВтНоменклатура.Заказ = Остатки.Заказ
	|			И ВтНоменклатура.НоменклатураЗапасов = Остатки.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = Остатки.Характеристика
	|			И ВтНоменклатура.Партия = Остатки.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РезервСделанныйЗаказом.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РезервСделанныйЗаказом.Характеристика
	|			И ВтНоменклатура.Партия = РезервСделанныйЗаказом.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
	|			И ВтНоменклатура.Заказ = РезервСделанныйЗаказом.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходРезерваПоНакладной КАК РасходРезерваПоНакладной
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходРезерваПоНакладной.НоменклатураЗапасов
	|			И ВтНоменклатура.Характеристика = РасходРезерваПоНакладной.Характеристика
	|			И ВтНоменклатура.Партия = РасходРезерваПоНакладной.Партия
	|			И ВтНоменклатура.Заказ = РасходРезерваПоНакладной.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойПоСкладам КАК РасходБезРезерваПоНакладнойПоСкладам
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойПоСкладам.Номенклатура
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойПоСкладам.Характеристика
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойПоСкладам.Партия
	|			И ВтНоменклатура.СтруктурнаяЕдиница = РасходБезРезерваПоНакладнойПоСкладам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходБезРезерваПоНакладнойВсего КАК РасходБезРезерваПоНакладнойВсего
	|		ПО ВтНоменклатура.НоменклатураЗапасов = РасходБезРезерваПоНакладнойВсего.Номенклатура
	|			И ВтНоменклатура.Партия = РасходБезРезерваПоНакладнойВсего.Партия
	|			И ВтНоменклатура.Характеристика = РасходБезРезерваПоНакладнойВсего.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Размещено КАК Размещено
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Размещено.Номенклатура
	|			И ВтНоменклатура.Характеристика = Размещено.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заказано КАК Заказано
	|		ПО ВтНоменклатура.НоменклатураЗапасов = Заказано.Номенклатура
	|			И ВтНоменклатура.Характеристика = Заказано.Характеристика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаказано()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК Ссылка,
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК Количество,
	|	ТИПЗНАЧЕНИЯ(РазмещениеЗаказовОстатки.ИсточникОбеспечения) КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РазмещениеЗаказовОстатки.ИсточникОбеспечения) = ТИП(Документ.ЗаказНаПроизводство)
	|			ТОГДА РазмещениеЗаказовОстатки.ИсточникОбеспечения.Финиш
	|		ИНАЧЕ РазмещениеЗаказовОстатки.ИсточникОбеспечения.ДатаПоступления
	|	КОНЕЦ КАК ДатаПоступления
	|ИЗ
	|	РегистрНакопления.РазмещениеЗаказов.Остатки(
	|			,
	|			ЗаказПокупателя = &ЗаказПокупателя
	|				И Номенклатура = &Номенклатура
	|				И Характеристика = &Характеристика) КАК РазмещениеЗаказовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РазмещениеЗаказовОстатки.ИсточникОбеспечения,
	|	ТИПЗНАЧЕНИЯ(РазмещениеЗаказовОстатки.ИсточникОбеспечения),
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РазмещениеЗаказовОстатки.ИсточникОбеспечения) = ТИП(Документ.ЗаказНаПроизводство)
	|			ТОГДА РазмещениеЗаказовОстатки.ИсточникОбеспечения.Финиш
	|		ИНАЧЕ РазмещениеЗаказовОстатки.ИсточникОбеспечения.ДатаПоступления
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ,
	|	ТипДокумента,
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗапасыПоступленияСвободные()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПериодов > 1
	|			ТОГДА ВложенныйЗапрос.КоличествоПериодов
	|		ИНАЧЕ ВложенныйЗапрос.ДатаПоступления
	|	КОНЕЦ КАК ДатаПоступления,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос1.ДатаПоступления) КАК КоличествоПериодов,
	|		ВложенныйЗапрос1.Количество КАК Количество,
	|		ВложенныйЗапрос1.Ссылка КАК Ссылка,
	|		МИНИМУМ(ВложенныйЗапрос1.ДатаПоступления) КАК ДатаПоступления
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ГрафикДвиженияЗапасов.Период КАК ДатаПоступления,
	|			ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) КАК Количество,
	|			ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК Ссылка
	|		ИЗ
	|			РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|					,
	|					Организация = &Организация
	|						И Номенклатура В (&Номенклатура)
	|						И Характеристика В (&Характеристика)) КАК ЗаказыПоставщикамОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикДвиженияЗапасов КАК ГрафикДвиженияЗапасов
	|				ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ГрафикДвиженияЗапасов.Заказ
	|					И ЗаказыПоставщикамОстатки.Номенклатура = ГрафикДвиженияЗапасов.Номенклатура
	|					И ЗаказыПоставщикамОстатки.Характеристика = ГрафикДвиженияЗапасов.Характеристика
	|					И ЗаказыПоставщикамОстатки.Организация = ГрафикДвиженияЗапасов.Организация
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки
	|				ПО ЗаказыПоставщикамОстатки.Организация = РазмещениеЗаказовОстатки.Организация
	|					И ЗаказыПоставщикамОстатки.ЗаказПоставщику = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|					И ЗаказыПоставщикамОстатки.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|					И ЗаказыПоставщикамОстатки.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|		ГДЕ
	|			ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) > 0
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство.Финиш,
	|			СУММА(ЗаказыНаПроизводствоОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0)),
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство
	|		ИЗ
	|			РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|					,
	|					Организация = &Организация
	|						И Номенклатура В (&Номенклатура)
	|						И Характеристика В (&Характеристика)) КАК ЗаказыНаПроизводствоОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
	|						,
	|						Организация = &Организация
	|							И Номенклатура В (&Номенклатура)
	|							И Характеристика В (&Характеристика)) КАК РазмещениеЗаказовОстатки
	|				ПО ЗаказыНаПроизводствоОстатки.Организация = РазмещениеЗаказовОстатки.Организация
	|					И ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|					И ЗаказыНаПроизводствоОстатки.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|					И ЗаказыНаПроизводствоОстатки.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|		ГДЕ
	|			ЗаказыНаПроизводствоОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) > 0
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство,
	|			ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство.Финиш) КАК ВложенныйЗапрос1
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос1.Количество,
	|		ВложенныйЗапрос1.Ссылка) КАК ВложенныйЗапрос";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗапасыПоступленияСвободныеИПоЗаказу()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.ДатаПоступления КАК ДатаПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК Количество,
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК Ссылка,
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				,
	|				Организация = &Организация
	|					И Номенклатура = &Номенклатура
	|					И Характеристика = &Характеристика
	|					И НЕ ЗаказПоставщику В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|							ИЗ
	|								РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура = &Номенклатура
	|									И Характеристика = &Характеристика) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыПоставщикамОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ЗаказыНаПроизводствоОстатки.КоличествоОстаток),
	|		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство,
	|		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство.Финиш
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|				,
	|				Организация = &Организация
	|					И Номенклатура = &Номенклатура
	|					И Характеристика = &Характеристика
	|					И НЕ ЗаказНаПроизводство В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения
	|							ИЗ
	|								РегистрНакопления.РазмещениеЗаказов.Остатки(, Номенклатура = &Номенклатура
	|									И Характеристика = &Характеристика) КАК РазмещениеЗаказовОстатки)) КАК ЗаказыНаПроизводствоОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство,
	|		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство.Финиш
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РазмещениеЗаказовОстатки.КоличествоОстаток,
	|		РазмещениеЗаказовОстатки.ИсточникОбеспечения,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(РазмещениеЗаказовОстатки.ИсточникОбеспечения) = ТИП(Документ.ЗаказНаПроизводство)
	|				ТОГДА РазмещениеЗаказовОстатки.ИсточникОбеспечения.Финиш
	|			КОГДА ТИПЗНАЧЕНИЯ(РазмещениеЗаказовОстатки.ИсточникОбеспечения) = ТИП(Документ.ЗаказПоставщику)
	|				ТОГДА РазмещениеЗаказовОстатки.ИсточникОбеспечения.ДатаПоступления
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				,
	|				Организация = &Организация
	|					И Номенклатура = &Номенклатура
	|					И Характеристика = &Характеристика
	|					И ЗаказПокупателя = &ЗаказПокупателя) КАК РазмещениеЗаказовОстатки) КАК ВложенныйЗапрос";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаток()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Запасы.Регистратор КАК Регистратор,
	|	СУММА(ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество * -1
	|			ИНАЧЕ Запасы.Количество
	|		КОНЕЦ) КАК Количество,
	|	Запасы.СтруктурнаяЕдиница КАК Склад
	|ИЗ
	|	РегистрНакопления.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.ЗаказПокупателя = &ЗаказПокупателя
	|	И Запасы.Номенклатура = &Номенклатура
	|	И Запасы.Характеристика = &Характеристика
	|	И Запасы.Партия = &Партия
	|	И Запасы.СтруктурнаяЕдиница = &Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	Запасы.Регистратор,
	|	Запасы.СтруктурнаяЕдиница
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ,
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗапасыВРезервеПоСкладам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Номенклатура = &Номенклатура
	|				И ЗаказПокупателя = &ЗаказПокупателя
	|				И Организация = &Организация
	|				И Характеристика = &Характеристика
	|				И Партия = &Партия) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.СтруктурнаяЕдиница
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиОбщие(ЕстьСсылка = Ложь, ЭтоЗаказ = Истина)
	
	Если ЕстьСсылка Тогда
		
		Если ЭтоЗаказ Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
			|ПОМЕСТИТЬ Склады
			|ИЗ
			|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
			|ГДЕ
			|	ВЫБОР
			|			КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
			|					И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
			|				ТОГДА СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
			|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад
			|ПОМЕСТИТЬ Остатки
			|ИЗ
			|	РегистрНакопления.Запасы.Остатки(
			|			,
			|			Организация = &Организация
			|				И Номенклатура = &Номенклатура
			|				И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
			|				И Организация = &Организация
			|				И Характеристика = &Характеристика
			|				И Партия = &Партия
			|				И ВЫБОР
			|					КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
			|							И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
			|						ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
			|					ИНАЧЕ ИСТИНА
			|				КОНЕЦ) КАК ЗапасыОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗапасыОстатки.СтруктурнаяЕдиница
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР
			|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|				ТОГДА Запасы.Количество * -1
			|			ИНАЧЕ Запасы.Количество
			|		КОНЕЦ) КАК ЗарезервированоЗаказом
			|ПОМЕСТИТЬ РезервСделанныйЗаказом
			|ИЗ
			|	РегистрНакопления.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Регистратор = &ЗаказПокупателя
			|	И Запасы.ЗаказПокупателя = &ЗаказПокупателя
			|	И Запасы.Номенклатура = &Номенклатура
			|	И Запасы.Характеристика = &Характеристика
			|	И Запасы.Партия = &Партия
			|
			|СГРУППИРОВАТЬ ПО
			|	Запасы.СтруктурнаяЕдиница
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(Остатки.Количество, 0) КАК Количество,
			|	ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказом,
			|	Склады.СтруктурнаяЕдиница КАК Склад
			|ИЗ
			|	Склады КАК Склады
			|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
			|		ПО Склады.СтруктурнаяЕдиница = Остатки.Склад
			|		ЛЕВОЕ СОЕДИНЕНИЕ РезервСделанныйЗаказом КАК РезервСделанныйЗаказом
			|		ПО Склады.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница";
			
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
			|ПОМЕСТИТЬ Склады
			|ИЗ
			|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
			|ГДЕ
			|	ВЫБОР
			|			КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
			|					И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
			|				ТОГДА СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
			|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад
			|ПОМЕСТИТЬ Остатки
			|ИЗ
			|	РегистрНакопления.Запасы.Остатки(
			|			,
			|			Организация = &Организация
			|				И Номенклатура = &Номенклатура
			|				И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
			|				И Характеристика = &Характеристика
			|				И Партия = &Партия
			|				И ВЫБОР
			|					КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
			|							И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
			|						ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
			|					ИНАЧЕ ИСТИНА
			|				КОНЕЦ) КАК ЗапасыОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗапасыОстатки.СтруктурнаяЕдиница
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	СУММА(Запасы.Количество) КАК ЗарезервированоЗаказом
			|ПОМЕСТИТЬ ДвижениеПоНакладнойБезРезерва
			|ИЗ
			|	РегистрНакопления.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Регистратор = &Ссылка
			|	И Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
			|	И Запасы.Номенклатура = &Номенклатура
			|	И Запасы.Характеристика = &Характеристика
			|	И Запасы.Партия = &Партия
			|	И Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|
			|СГРУППИРОВАТЬ ПО
			|	Запасы.СтруктурнаяЕдиница
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(Остатки.Количество, 0) КАК Количество,
			|	ЕСТЬNULL(РезервСделанныйЗаказом.ЗарезервированоЗаказом, 0) КАК ЗарезервированоЗаказом,
			|	Склады.СтруктурнаяЕдиница КАК Склад
			|ИЗ
			|	Склады КАК Склады
			|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
			|		ПО Склады.СтруктурнаяЕдиница = Остатки.Склад
			|		ЛЕВОЕ СОЕДИНЕНИЕ ДвижениеПоНакладнойБезРезерва КАК РезервСделанныйЗаказом
			|		ПО Склады.СтруктурнаяЕдиница = РезервСделанныйЗаказом.СтруктурнаяЕдиница
			|
			|УПОРЯДОЧИТЬ ПО
			|	Склад,
			|	Количество УБЫВ";
			
			
			
		КонецЕсли;
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
		|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад,
		|	0 КАК ЗарезервированоЗаказом
		|ИЗ
		|	РегистрНакопления.Запасы.Остатки(
		|			,
		|			Организация = &Организация
		|				И Номенклатура = &Номенклатура
		|				И ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|				И Организация = &Организация
		|				И Характеристика = &Характеристика
		|				И Партия = &Партия
		|				И ВЫБОР
		|					КОГДА НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.СборкаЗапасов)
		|							И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ЗаказНаПроизводство)
		|						ТОГДА СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗапасыОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапасыОстатки.СтруктурнаяЕдиница
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ";
		
	КонецЕсли;
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция НайденаСтрокаСТакимЖеСкладомОбработанаТекущаяИУдаленаЗаказНаПроизводство(СтрокиКУдалению, СтрокаЗапасы, МассивОбработанныхСтрок)
	
	ИмяКолонкиРезерв = ?(СтрокаЗапасы.Свойство("СтруктурнаяЕдиницаРезерв"), "СтруктурнаяЕдиницаРезерв", "СтруктурнаяЕдиница");
	
	Для Каждого СтрокаМассива Из МассивОбработанныхСтрок Цикл
		
		Если СтрокаЗапасы[ИмяКолонкиРезерв] = СтрокаМассива[ИмяКолонкиРезерв]
			И СтрокаЗапасы.ЗаказПокупателя = СтрокаМассива.ЗаказПокупателя Тогда
			
			СтрокаМассива.Количество = СтрокаМассива.Количество + СтрокаЗапасы.Количество;
			СтрокаМассива.Резерв = СтрокаМассива.Резерв + СтрокаЗапасы.Резерв;
			
			СтрокиКУдалению.Добавить(СтрокаЗапасы);
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция НайденаСтрокаСТакимЖеСкладомОбработанаТекущаяИУдалена(СтрокиКУдалению, СтрокаЗапасы, МассивОбработанныхСтрок)
	
	ИмяКолонкиРезерв = ?(СтрокаЗапасы.Свойство("СтруктурнаяЕдиницаРезерв"), "СтруктурнаяЕдиницаРезерв", "СтруктурнаяЕдиница");
	
	Для Каждого СтрокаМассива Из МассивОбработанныхСтрок Цикл
		
		Если СтрокаЗапасы[ИмяКолонкиРезерв] = СтрокаМассива[ИмяКолонкиРезерв]
			И СтрокаЗапасы.Цена = СтрокаМассива.Цена Тогда
			
			СтрокаМассива.Количество = СтрокаМассива.Количество + СтрокаЗапасы.Количество;
			СтрокаМассива.Резерв = СтрокаМассива.Резерв + СтрокаЗапасы.Резерв;
			
			СтрокиКУдалению.Добавить(СтрокаЗапасы);
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция НайденИУдаленДубльТекущейСтроки(СтрокиКУдалению, СтрокаЗапасы, МассивОбработанныхСтрок, УчитыватьЯчейку = Ложь, ИмяКолонки =  "СтруктурнаяЕдиница", ИмяТЧ = "Запасы", ТипДокумента = "ЗаказПокупателя")
	
	ЕстьЦена = ?(ИмяТЧ = "Материалы" Или ТипДокумента = "Производство", Ложь, Истина);
	
	Если Не УчитыватьЯчейку Тогда
		
		Для Каждого СтрокаМассива Из МассивОбработанныхСтрок Цикл
			
			Если СтрокаЗапасы[ИмяКолонки] = СтрокаМассива[ИмяКолонки]
				И СтрокаЗапасы.ЕдиницаИзмерения = СтрокаМассива.ЕдиницаИзмерения Тогда
				
				Если ЕстьЦена И СтрокаЗапасы.Цена = СтрокаМассива.Цена Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				ИначеЕсли Не ЕстьЦена Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				КонецЕсли;
				
				Возврат Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		Для Каждого СтрокаМассива Из МассивОбработанныхСтрок Цикл
			
			Если СтрокаЗапасы[ИмяКолонки] = СтрокаМассива[ИмяКолонки]
				И СтрокаЗапасы["Ячейка"] = СтрокаМассива["Ячейка"]
				И СтрокаЗапасы.ЕдиницаИзмерения = СтрокаМассива.ЕдиницаИзмерения Тогда
				
				Если ЕстьЦена И СтрокаЗапасы.Цена = СтрокаМассива.Цена Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				ИначеЕсли Не ЕстьЦена Тогда
					СтрокиКУдалению.Добавить(СтрокаЗапасы);
				КонецЕсли;
				
				Возврат Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПодготовитьТаблицуСогласноПриоритетам(ТаблицаОстатков, СтруктурнаяЕдиницаОтгрузки)
	
	Если Не ЗначениеЗаполнено(СтруктурнаяЕдиницаОтгрузки) Тогда 
		
		ТаблицаОстатков.Сортировать("КоличествоОстаток Убыв");
		Возврат 
	КонецЕсли;
	
	Для Каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		СтрокаОстатка.Приоритет = ?(СтрокаОстатка.СтруктурнаяЕдиница = СтруктурнаяЕдиницаОтгрузки, 0, СтрокаОстатка.Приоритет);
	КонецЦикла;
	
	ТаблицаОстатков.Сортировать("Приоритет Возр");
	
КонецПроцедуры

Процедура ОчиститьПриоритеты(ТаблицаОстатков)
	
	Для Каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		СтрокаОстатка.Приоритет = ?(Не СтрокаОстатка.Приоритет = 1, 2, СтрокаОстатка.Приоритет);
	КонецЦикла;
	
КонецПроцедуры

Функция ОстаткиПоЯчейкам(СтруктураПараметров, ТаблицаЗапасы, ИмяКолонкиЗаказ = "Заказ")
	
	Заказы = ТаблицаЗапасы.Скопировать(,ИмяКолонкиЗаказ);
	Заказы.Свернуть(ИмяКолонкиЗаказ);
	
	ТаблицаНоменклатуры = ТаблицаЗапасы.Скопировать();
	ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Партия");
	
	ТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, Партия");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Номенклатура", СтруктураПараметров.Номенклатура);
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("Регистратор", СтруктураПараметров.Регистратор);
	Запрос.УстановитьПараметр("Заказы", Заказы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаЗапасы.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаЗапасы.Партия, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)) КАК Партия
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ РезервПоСкладу
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)
	|				И НЕ ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И НЕ ЗаказПокупателя В (&Заказы)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ОрдерныйСклад
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗапасыНаСкладахОстатки.Ячейка
	|	КОНЕЦ КАК Ячейка,
	|	ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладахОстатки.Партия КАК Партия,
	|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоЯчейкам
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|			,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)) КАК ЗапасыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладахОстатки.Партия,
	|	ЗапасыНаСкладахОстатки.Характеристика,
	|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница,
	|	ЗапасыНаСкладахОстатки.Номенклатура,
	|	ВЫБОР
	|		КОГДА ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ОрдерныйСклад
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗапасыНаСкладахОстатки.Ячейка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладах.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗапасыНаСкладах.СтруктурнаяЕдиница.ОрдерныйСклад
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗапасыНаСкладах.Ячейка
	|	КОНЕЦ КАК Ячейка,
	|	СУММА(ЗапасыНаСкладах.Количество) КАК Количество,
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ РасходПоЯчейкам
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|ГДЕ
	|	ЗапасыНаСкладах.Регистратор = &Регистратор
	|	И ЗапасыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладах.Партия,
	|	ЗапасыНаСкладах.Характеристика,
	|	ЗапасыНаСкладах.Номенклатура,
	|	ЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ЗапасыНаСкладах.СтруктурнаяЕдиница.ОрдерныйСклад
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗапасыНаСкладах.Ячейка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиПоЯчейкам.Номенклатура КАК Номенклатура,
	|	ОстаткиПоЯчейкам.Характеристика КАК Характеристика,
	|	ОстаткиПоЯчейкам.Партия КАК Партия,
	|	ОстаткиПоЯчейкам.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОстаткиПоЯчейкам.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ Ячейки
	|ИЗ
	|	ОстаткиПоЯчейкам КАК ОстаткиПоЯчейкам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходПоЯчейкам.Номенклатура,
	|	РасходПоЯчейкам.Характеристика,
	|	РасходПоЯчейкам.Партия,
	|	РасходПоЯчейкам.СтруктурнаяЕдиница,
	|	РасходПоЯчейкам.Ячейка
	|ИЗ
	|	РасходПоЯчейкам КАК РасходПоЯчейкам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОстатков.Партия КАК Партия,
	|	Ячейки.Ячейка КАК Ячейка,
	|	Ячейки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ НоменклатураПоЯчейкам
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Ячейки КАК Ячейки
	|		ПО ТаблицаОстатков.Номенклатура = Ячейки.Номенклатура
	|			И ТаблицаОстатков.Характеристика = Ячейки.Характеристика
	|			И ТаблицаОстатков.Партия = Ячейки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПоЯчейкам.Номенклатура КАК Номенклатура,
	|	НоменклатураПоЯчейкам.Характеристика КАК Характеристика,
	|	НоменклатураПоЯчейкам.Партия КАК Партия,
	|	НоменклатураПоЯчейкам.Ячейка КАК Ячейка,
	|	НоменклатураПоЯчейкам.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОстаткиПоЯчейкам.КоличествоОстаток КАК ОстатокВЯчейке,
	|	РасходПоЯчейкам.Количество КАК ДвижениеПоЯчейке,
	|	ЕСТЬNULL(ОстаткиПоЯчейкам.КоличествоОстаток, 0) + ЕСТЬNULL(РасходПоЯчейкам.Количество, 0) КАК ОстатокСУчетомДвижения,
	|	ЕСТЬNULL(РезервПоСкладу.КоличествоОстаток, 0) КАК РезервПоСкладуБезТекЗаказов
	|ИЗ
	|	НоменклатураПоЯчейкам КАК НоменклатураПоЯчейкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЯчейкам КАК ОстаткиПоЯчейкам
	|		ПО НоменклатураПоЯчейкам.Номенклатура = ОстаткиПоЯчейкам.Номенклатура
	|			И НоменклатураПоЯчейкам.Характеристика = ОстаткиПоЯчейкам.Характеристика
	|			И НоменклатураПоЯчейкам.Партия = ОстаткиПоЯчейкам.Партия
	|			И НоменклатураПоЯчейкам.Ячейка = ОстаткиПоЯчейкам.Ячейка
	|			И НоменклатураПоЯчейкам.СтруктурнаяЕдиница = ОстаткиПоЯчейкам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходПоЯчейкам КАК РасходПоЯчейкам
	|		ПО НоменклатураПоЯчейкам.Номенклатура = РасходПоЯчейкам.Номенклатура
	|			И НоменклатураПоЯчейкам.Характеристика = РасходПоЯчейкам.Характеристика
	|			И НоменклатураПоЯчейкам.Партия = РасходПоЯчейкам.Партия
	|			И НоменклатураПоЯчейкам.Ячейка = РасходПоЯчейкам.Ячейка
	|			И НоменклатураПоЯчейкам.СтруктурнаяЕдиница = РасходПоЯчейкам.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезервПоСкладу КАК РезервПоСкладу
	|		ПО НоменклатураПоЯчейкам.Номенклатура = РезервПоСкладу.Номенклатура
	|			И НоменклатураПоЯчейкам.Характеристика = РезервПоСкладу.Характеристика
	|			И НоменклатураПоЯчейкам.Партия = РезервПоСкладу.Партия
	|			И НоменклатураПоЯчейкам.СтруктурнаяЕдиница = РезервПоСкладу.СтруктурнаяЕдиница
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстатокСУчетомДвижения,
	|	Ячейка";
	
	ТаблицаПоЯчейкам = Запрос.Выполнить().Выгрузить();
	
	МассивСтрокКУдалению = Новый Массив;
	
	ТаблицаСкладов = ТаблицаПоЯчейкам.Скопировать(,"СтруктурнаяЕдиница");
	ТаблицаСкладов.Свернуть("СтруктурнаяЕдиница");
	
	Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
		
		Для Каждого СкладСОстатками Из ТаблицаСкладов Цикл
			
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница"
			, СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика, СтрокаТаблицы.Партия, СкладСОстатками.СтруктурнаяЕдиница);
			СтрокиПоЯчейкам = ТаблицаПоЯчейкам.НайтиСтроки(ПараметрыОтбора);
			
			ПерваяИтерация = Истина;
			РезервПоСкладуБезТекЗаказов = 0;
			
			Для Каждого СтрокаПоЯчейке Из СтрокиПоЯчейкам Цикл
				
				РезервПоСкладуБезТекЗаказов = ?(ПерваяИтерация, СтрокаПоЯчейке.РезервПоСкладуБезТекЗаказов, РезервПоСкладуБезТекЗаказов);
				ПерваяИтерация = Ложь;
				
				Если РезервПоСкладуБезТекЗаказов <= 0 Тогда Прервать КонецЕсли;
				
				Если РезервПоСкладуБезТекЗаказов > СтрокаПоЯчейке.ОстатокСУчетомДвижения Тогда
					РезервПоСкладуБезТекЗаказов = РезервПоСкладуБезТекЗаказов - СтрокаПоЯчейке.ОстатокСУчетомДвижения;
					СтрокаПоЯчейке.ОстатокСУчетомДвижения = 0;
					МассивСтрокКУдалению.Добавить(СтрокаПоЯчейке);
				Иначе
					СтрокаПоЯчейке.ОстатокСУчетомДвижения = СтрокаПоЯчейке.ОстатокСУчетомДвижения - РезервПоСкладуБезТекЗаказов;
					РезервПоСкладуБезТекЗаказов = 0;
				КонецЕсли;
				
				СтрокаПоЯчейке.РезервПоСкладуБезТекЗаказов = РезервПоСкладуБезТекЗаказов;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаКУдалению Из МассивСтрокКУдалению Цикл
		ТаблицаПоЯчейкам.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	Возврат ТаблицаПоЯчейкам;
	
КонецФункции

Процедура ЗаполнитьСтруктурнуюЕдиницуРезерваВТЧ(Объект, ИмяТЧ = "Запасы")
	
	Если Объект.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктурнаяЕдиницаРезерв = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказНаПроизводство"), "СтруктурнаяЕдиница", "СтруктурнаяЕдиницаРезерв");
	
	Для каждого СтрокаТабличнойЧасти Из Объект[ИмяТЧ] Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			ИЛИ ТипЗнч(СтрокаТабличнойЧасти.Номенклатура)<>Тип("СправочникСсылка.Номенклатура") Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТабличнойЧасти.Свойство("ТипНоменклатурыЗапас") И НЕ СтрокаТабличнойЧасти.ТипНоменклатурыЗапас Тогда
			Продолжить;
		КонецЕсли; 
		
		СтрокаТабличнойЧасти[СтруктурнаяЕдиницаРезерв] = Объект.СтруктурнаяЕдиницаРезерв;
		
		Если Объект.Свойство("Ячейка") Тогда
			СтрокаТабличнойЧасти.Ячейка = Объект.Ячейка;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.Свойство("Объект") Тогда
		Для каждого СтрокаТабличнойЧасти Из Объект.Материалы Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиницаРезерв = Объект.СтруктурнаяЕдиницаРезерв;
			СтрокаТабличнойЧасти.Ячейка = Объект.Ячейка;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьКоличествоПоСтрокамСогласноКоэффициентам(ТаблицаНоменклатуры)
	
	Для Каждого СтрокаТабличнойЧасти Из ТаблицаНоменклатуры Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			Или ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = 1;
		Иначе
			КоэффициентЕдиницыИзмерения = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСуммуПоТабличнойЧасти(Объект, ПараметрыОтбора, ВидСуммы = "Резерв", НомерВариантаКП = 0, КоэффициентТекЕдиницы = 1, ИмяТЧ = "Запасы", ТипДокумента = Неопределено, СостояниеВыполнения = "")
	
	Партия = ?(Партия = Неопределено, Справочники.ПартииНоменклатуры.ПустаяСсылка(), Партия);
	
	ЭтоЗаказПокупателя = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя"), Истина, Ложь);
	
	Если ЭтоЗаказПокупателя И ИмяТЧ = "Запасы" Тогда
		ПараметрыОтбора.Вставить("НомерВариантаКП", НомерВариантаКП);
		НайденныеСтроки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
		ПараметрыОтбора.Удалить("НомерВариантаКП");
	Иначе
		НайденныеСтроки = Объект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
	КонецЕсли;
	
	СуммаПоСтрокам = 0;
	
	Если ВидСуммы = "Резервировать" Тогда
		ИмяКолонки = ?(ТипДокумента = "ЗаказНаряд" И СостояниеВыполнения = "Отгрузка", "РезервОтгрузка", "Резерв");
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			КоэффициентЕдиницыИзмерения = КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			СуммаПоСтрокам = СуммаПоСтрокам + СтрокаТабличнойЧасти[ИмяКолонки]*КоэффициентЕдиницыИзмерения;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСуммы = "ВРезерве" Тогда 
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			КоэффициентЕдиницыИзмерения = КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			СуммаПоСтрокам = СуммаПоСтрокам + СтрокаТабличнойЧасти.ВРезерве*КоэффициентЕдиницыИзмерения;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСуммы = "Количество" Тогда 
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			КоэффициентЕдиницыИзмерения = КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			СуммаПоСтрокам = СуммаПоСтрокам + СтрокаТабличнойЧасти.Количество*КоэффициентЕдиницыИзмерения;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСуммы = "Отгружено" Тогда 
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			КоэффициентЕдиницыИзмерения = КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			СуммаПоСтрокам = СуммаПоСтрокам + СтрокаТабличнойЧасти.Отгружено*КоэффициентЕдиницыИзмерения;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСуммы = "НеОтгружено" Тогда 
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			КоэффициентЕдиницыИзмерения = КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			СуммаПоСтрокам = СуммаПоСтрокам + СтрокаТабличнойЧасти.НеОтгружено*КоэффициентЕдиницыИзмерения;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСуммы = "Свободно" Тогда 
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			КоэффициентЕдиницыИзмерения = КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			СуммаПоСтрокам = СуммаПоСтрокам + СтрокаТабличнойЧасти.ОстатокСвободно*КоэффициентЕдиницыИзмерения;
		КонецЦикла;
	КонецЕсли;
	
	СуммаПоСтрокам = СуммаПоСтрокам / КоэффициентТекЕдиницы;
	
	Возврат СуммаПоСтрокам;
	
КонецФункции

Функция КоэффициентЕдиницыИзмерения(ЕдиницаИзмерения)
	
	Если ТипЗнч(ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
		Возврат ЕдиницаИзмерения.Коэффициент
	Иначе
		Возврат 1;
	КонецЕсли;
	
КонецФункции

Функция ПредметИсчисления(Число, ПараметрыПредметаИсчисления1, ПараметрыПредметаИсчисления2, ПараметрыПредметаИсчисления3, Род)
	
	ФорматнаяСтрока = "Л = ru_RU";
	
	ПараметрыПредметаИсчисления = "%1,%2,%3,%4,,,,,0";
	ПараметрыПредметаИсчисления = СтрШаблон(
	ПараметрыПредметаИсчисления,
	ПараметрыПредметаИсчисления1,
	ПараметрыПредметаИсчисления2,
	ПараметрыПредметаИсчисления3,
	Род);
	
	ЧислоСтрокойИПредметИсчисления = НРег(ЧислоПрописью(Число, ФорматнаяСтрока, ПараметрыПредметаИсчисления));
	
	ЧислоПрописью = НРег(СокрЛП(СтрЗаменить(ЧислоПрописью(Число),"00","")));
	
	ПредметИсчисления = СтрЗаменить(ЧислоСтрокойИПредметИсчисления, ЧислоПрописью, "");
	
	Возврат ПредметИсчисления;
	
КонецФункции

Процедура СообщитьЧтоВыборПартииНевозможен(Объект, ОперацияДокумента)
	ТекстСообщения = СтрШаблон(НСтр(
		"ru = 'Для операции документа - %1, не найден статус партии. Выбор партии не возможен.'"),
		ОперацияДокумента);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект);
КонецПроцедуры

#КонецОбласти
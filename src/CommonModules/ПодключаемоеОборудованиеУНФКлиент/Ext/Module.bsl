#Область ПрограммныйИнтерфейс

// Загружает в таблицу данные из терминала сбора данных.
//
Процедура ПолучитьДанныеИзТСД(Форма) Экспорт
	
	ОчиститьСообщения();
	
	Форма.Доступность = Ложь;
	
	Параметры = Новый Структура;
	Параметры.Вставить("Форма", Форма);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьДанныеИзТСДЗавершение", ЭтотОбъект, Параметры);
	МенеджерОборудованияКлиент.НачатьЗагрузкуДанныеИзТСД(
		ОповещениеПриЗавершении,
		Форма.УникальныйИдентификатор
	);
	
КонецПроцедуры

Процедура ПолучитьДанныеИзТСДЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Параметры.Форма.Доступность = Истина; // Разблокировка интерфейса пользователя.
	
	Если РезультатВыполнения.Результат Тогда
		Параметры.Форма.ПолученыШтрихкоды(РезультатВыполнения.ТаблицаТоваров);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Получает вес с электронных весов для табличной части.
//    
Процедура ПолучениеВесаСЭлектронныхВесовДляТабличнойЧасти(Форма, ИмяТабличнойЧасти = "Товары", ВыполнитьПолучитьВесЗавершение = Истина) Экспорт
	
	// Проверим текущую строку табличной части.
	Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		
		ТекущаяСтрока = Форма.Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
		Если ТекущаяСтрока = Неопределено Тогда
			ТекстСообщения = НСтр("ru='Необходимо выбрать строку, для которой необходимо получить вес.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Иначе
			Форма.Доступность = Ложь;
			
			Параметры = Новый Структура;
			Параметры.Вставить("ВыполнитьПолучитьВесЗавершение", ВыполнитьПолучитьВесЗавершение);
			Параметры.Вставить("ТекущаяСтрока" , ТекущаяСтрока);
			Параметры.Вставить("Форма"         , Форма);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПолучениеВесаСЭлектронныхВесовДляТабличнойЧастиЗавершение", ЭтотОбъект, Параметры);
			МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОписаниеОповещения, Форма.УникальныйИдентификатор, , Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Получает вес с электронных весов для табличной части - завершение.
//    
Процедура ПолучениеВесаСЭлектронныхВесовДляТабличнойЧастиЗавершение(РезультатОперации, Параметры) Экспорт
	
	Параметры.Форма.Доступность = Истина;
	
	Если РезультатОперации.Результат Тогда
		
		Параметры.ТекущаяСтрока.Количество = РезультатОперации.Вес;
		
		Если Параметры.ВыполнитьПолучитьВесЗавершение Тогда
			Параметры.Форма.ПолучитьВесЗавершение(Параметры.ТекущаяСтрока);
		КонецЕсли;
		
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатОперации.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

 // Выгружает таблицу с данными в терминал сбора данных.
// 
// Параметры:
//  Форма - УправляемаяФорма - форма с данными из которой вызывается процедура процедура.
//  ВыгружатьЦену - Булево - признак выгрузки цены.
//  ДополнительныеПараметры - Структура - структура дополнительных параметров.
//
Процедура ВыгрузитьДокументВТСД(Форма, ВыгружатьЦену = Ложь, ДополнительныеПараметры = Неопределено) Экспорт
	
	ВидЦены = Неопределено;
	ИмяТаблицыВыборки = "";
	ПрефиксРаздела = "";
	АдресТоваровВХранилище = "";
	ПараметрыФормы = Новый Структура;
	ЭтоСсылочныйОбъект = Истина;
	ИмяРеквизитаОбъекта = "Объект";
	Если ДополнительныеПараметры <> Неопределено Тогда
		Если ДополнительныеПараметры.Свойство("ВидЦены") Тогда
			ВидЦены = ДополнительныеПараметры.ВидЦены;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("ИмяТаблицыВыборки") Тогда
			ИмяТаблицыВыборки = ДополнительныеПараметры.ИмяТаблицыВыборки;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("ПрефиксРаздела") Тогда
			ПрефиксРаздела = ДополнительныеПараметры.ПрефиксРаздела;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("АдресТоваровВХранилище") Тогда
			АдресТоваровВХранилище = ДополнительныеПараметры.АдресТоваровВХранилище;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("ЭтоСсылочныйОбъект") Тогда
			ЭтоСсылочныйОбъект = ДополнительныеПараметры.ЭтоСсылочныйОбъект;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("ИмяРеквизитаОбъекта") Тогда
			ИмяРеквизитаОбъекта = ДополнительныеПараметры.ИмяРеквизитаОбъекта;
		КонецЕсли;
	ИначеЕсли Форма.ПараметрыСобытийПО <> Неопределено Тогда
		Если Форма.ПараметрыСобытийПО.Свойство("ВидЦены") Тогда
			ВидЦены = Форма.ПараметрыСобытийПО.ВидЦены;
		КонецЕсли;
		Если Форма.ПараметрыСобытийПО.Свойство("ИмяТаблицыВыборки") Тогда
			ИмяТаблицыВыборки = Форма.ПараметрыСобытийПО.ИмяТаблицыВыборки;
		КонецЕсли;
		Если Форма.ПараметрыСобытийПО.Свойство("ПрефиксРаздела") Тогда
			ПрефиксРаздела = Форма.ПараметрыСобытийПО.ПрефиксРаздела;
		КонецЕсли;
		Если Форма.ПараметрыСобытийПО.Свойство("АдресТоваровВХранилище") Тогда
			АдресТоваровВХранилище = Форма.ПараметрыСобытийПО.АдресТоваровВХранилище;
		КонецЕсли;
		Если Форма.ПараметрыСобытийПО.Свойство("ЭтоСсылочныйОбъект") Тогда
			ЭтоСсылочныйОбъект = Форма.ПараметрыСобытийПО.ЭтоСсылочныйОбъект;
		КонецЕсли;
		Если Форма.ПараметрыСобытийПО.Свойство("ИмяРеквизитаОбъекта") Тогда
			ИмяРеквизитаОбъекта = Форма.ПараметрыСобытийПО.ИмяРеквизитаОбъекта;
		КонецЕсли;
	КонецЕсли;
	ПараметрыФормы.Вставить("ВидЦены", ВидЦены);
	ПараметрыФормы.Вставить("ИмяТаблицыВыборки", ИмяТаблицыВыборки);
	ПараметрыФормы.Вставить("ПрефиксРаздела", ПрефиксРаздела);
	ПараметрыФормы.Вставить("АдресТоваровВХранилище", АдресТоваровВХранилище);
	ПараметрыФормы.Вставить("ЭтоСсылочныйОбъект", ЭтоСсылочныйОбъект);
	ПараметрыФормы.Вставить("ВариантЗаполнения", "ПоДокументу");
	ПараметрыФормы.Вставить("ВыгружатьЦену", ВыгружатьЦену);
	
	Если ЭтоСсылочныйОбъект Тогда
		Если ЗначениеЗаполнено(Форма[ИмяРеквизитаОбъекта].Ссылка) Тогда
			Если Форма.Модифицированность Тогда
				ПараметрыФормы.Вставить("Форма", Форма);
				Оповещение = Новый ОписаниеОповещения("ВыгрузитьДокументВТСДПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыФормы);
				
				ТекстВопроса = НСтр("ru = 'Документ был изменен, записать изменения?'");
				ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
			Иначе
				ПараметрыФормы.Вставить("Документ", Форма[ИмяРеквизитаОбъекта].Ссылка);
				РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
				ОткрытьФорму("Обработка.ВыгрузкаТоваровВТСД.Форма", ПараметрыФормы,,,,,,РежимОткрытияОкна);
			КонецЕсли;
		Иначе
			ПараметрыФормы.Вставить("форма", Форма);
			Оповещение = Новый ОписаниеОповещения("ВыгрузитьДокументВТСДПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыФормы);
			ТекстВопроса = НСтр("ru = 'Документ необходимо записать. Записать документ?'");
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		КонецЕсли;
	Иначе
		//ПараметрыФормы.Вставить("Документ", Форма.Объект);
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ОткрытьФорму("Обработка.ВыгрузкаТоваровВТСД.Форма", ПараметрыФормы,,,,,,РежимОткрытияОкна);
	КонецЕсли;
	
КонецПроцедуры

// Выгружает таблицу с данными в терминал сбора данных - После закрытия вопроса.
//
// Параметры:
//  Результат - КодВозвратаДиалога - код возврата диалога.
//  Параметры - Структура - структура дополнительных параметров.
//
Процедура ВыгрузитьДокументВТСДПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Параметры.Форма.Записать() Тогда
			Параметры.Вставить("Документ", Параметры.Форма.Объект.Ссылка);
			Параметры.Удалить("Форма");
			РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			ОткрытьФорму("Обработка.ВыгрузкаТоваровВТСД.Форма", Параметры,,,,,,РежимОткрытияОкна);
		КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



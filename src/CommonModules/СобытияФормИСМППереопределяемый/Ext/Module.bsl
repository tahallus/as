#Область ПрограммныйИнтерфейс

// Обработчик команды формы, требующей контекстного вызова сервера.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма, из которой выполняется команда.
//   ПараметрыВызова - Структура - параметры вызова.
//   Источник - ТаблицаФормы, ДанныеФормыСтруктура - объект или список формы с полем "Ссылка".
//   Результат - Структура - результат выполнения команды.
//
Процедура ВыполнитьПереопределяемуюКоманду(Знач Форма, Знач ПараметрыВызова, Знач Источник, Результат) Экспорт
	
	Если ПараметрыВызова.Свойство("ОтправитьРаспоряжениеНаПриемкуКладовщику") Тогда
		ИнтеграцияИСУНФ.ОтправитьРаспоряжениеНаПриемкуКладовщику(Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияФорм

// Серверная переопределяемая процедура, вызываемая при заполнении реквизитов формы созданных ИСМП (при открытии)
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//
Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	ИнтеграцияИСМПУНФ.ЗаполнениеРеквизитовФормы(Форма);
	
КонецПроцедуры

// Переопределение параметров интеграции ИСМП (расположения команды проверки и подбора)
//
// Параметры:
//   Форма                - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки
//   СтандартнаяОбработка - Булево - стандартная работа с элементами проверки подбора
//
Процедура ПриОпределенииПараметровИнтеграции(Форма, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриОпределенииПараметровИнтеграции(Форма, СтандартнаяОбработка);
	
КонецПроцедуры

//Переопределение параметров интеграции ИСМП (расположения форматированной строки перехода к связанному объекту)
//
//Параметры:
//   Форма            - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки
//   ПараметрыНадписи - Структура        - (см. СобытияФормИСМП.ПараметрыИнтеграцииГиперссылкиИСМП)
//
Процедура ПриОпределенииПараметровИнтеграцииГиперссылкиИСМП(Форма, ПараметрыНадписи) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриОпределенииПараметровИнтеграцииГиперссылкиИСМП(Форма, ПараметрыНадписи);
	
КонецПроцедуры

// Переопределение доступности интеграции формы сверки для прикладной формы (расположения форматированной строки перехода к связанному объекту)
//
// Параметры:
//   Форма            - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки
//   СтандартнаяОбработка - Булево - установить ложь, если требуется отменить выполнение стандартной обработки.
//
Процедура ПриОпределенииДоступностиИнтеграцииФормыСверкиКодовМаркировки(Форма, СтандартнаяОбработка) Экспорт
	
	Возврат;
	//-
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриСозданииЧтенииНаСервере(Форма); 
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма         - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  ТекущийОбъект - Объект - объект, который будет прочитан.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФорм

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении"
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыВыбора

// Устанавливает параметры выбора шаблона этикетки.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой нужно установить параметры выбора,
//  ИмяПоляВвода - Строка - имя поля ввода шаблона этикетки.
Процедура УстановитьПараметрыВыбораШаблонаЭтикетки(Форма,  ИмяПоляВвода) Экспорт
	
	ИнтеграцияИСМПУНФ.УстановитьПараметрыВыбораШаблонаЭтикетки(Форма,  ИмяПоляВвода);
	
КонецПроцедуры

// Устанавливает параметры выбора контрагента.
//
//Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, в которой нужно установить параметры выбора.
//   ТолькоЮрЛицаНерезиденты - Неопределено, Булево - Признак нерезидента.
//   ИмяПоляВвода            - Строка               - имя поля ввода номенклатуры.
//
Процедура УстановитьПараметрыВыбораКонтрагента(Форма, ТолькоЮрЛицаНерезиденты = Неопределено, ИмяПоляВвода = "Контрагент") Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет действия при изменении номенклатуры в строке табличной части.
//
// Параметры:
//  Форма                  - ФормаКлиентскогоПриложения - форма, в которой произошло событие,
//  ТекущаяСтрока          - ДанныеФормыЭлементКоллекции - редактируемая строка таблицы,
//  КэшированныеЗначения   - Структура - сохраненные значения параметров, используемых при обработке,
//  ПараметрыУказанияСерий - Структура - (См. ПроверкаИПодборПродукцииМОТП.ПараметрыУказанияСерий).
Процедура ПриИзмененииНоменклатуры(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриИзмененииНоменклатуры(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий);
	
КонецПроцедуры

// Выполняет действия при изменении подобранного количества (поле КоличествоУпаковок) в строке таблицы формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой произошло событие,
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - строка таблицы товаров,
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке,
//  ПараметрыУказанияСерий - ФиксированнаяСтруктура - параметры указаний серий формы
Процедура ПриИзмененииКоличества(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	ИнтеграцияИСМПУНФ.ПриИзмененииКоличества(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий);
	
КонецПроцедуры

// Выполняет действия при изменении подобранного количества (поле Количество) в строке таблицы формы.
//
// Параметры:
//  Форма - ФормаУправляемогоПриложения - форма, в которой произошло событие,
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - строка таблицы товаров,
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке,
//  ПараметрыУказанияСерий - ФиксированнаяСтруктура - параметры указаний серий формы
Процедура ПриИзмененииКоличестваЕдиниц(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Заполняет табличную часть Товары подобранными товарами.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой производится подбор,
//  ВыбранноеЗначение - Произвольный - данные, содержащие подобранную пользователем номенклатуру,
Процедура ОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ПараметрыЗаполнения) Экспорт
	
	ИнтеграцияИСМПУНФ.ОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

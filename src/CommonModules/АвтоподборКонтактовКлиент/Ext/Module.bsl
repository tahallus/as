#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийЭлементовФормыДокумента

// Обработчик события АвтоПодбор в поле Наименование.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма элемента справочника Контрагенты, Контактные лица, Физические лица,
//  ИмяЭлемента - Строка - имя элемента формы, для которого обрабатывается событие АвтоПодбор,
//  Текст - Строка - строка текста, введенная в поле Наименование,
//  ДанныеВыбора - СписокЗначений - содержит список значений, который будет показан при обработке события АвтоПодбор,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура НаименованиеАвтоПодбор(Форма, ИмяЭлемента, Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт

	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;

	Если Не Форма.ПоддержкаАвтоподбораКонтактов.ЕстьКонтактыСозданныеПоСобытию Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоЗаполненныйКонтакт(Форма, ИмяЭлемента) Тогда
		Возврат;
	КонецЕсли;

	Если Форма.ПоддержкаАвтоподбораКонтактов.КлассификаторКонтактовЗаполнен
		Или Форма.ПоддержкаАвтоподбораКонтактов.ЕстьКонтактыСозданныеПоСобытию Тогда
		ДанныеВыбора = АвтоподборКонтактовВызовСервера.СписокАвтоПодбораКонтакта(
		Текст, Истина, ТипЗнч(Форма.Объект.Ссылка));
	КонецЕсли;

	СтандартнаяОбработка = Не ЗначениеЗаполнено(ДанныеВыбора);

КонецПроцедуры

// Подключаемый обработчик события АвтоПодбор в поле ввода формы для выбора контрагента
// Добавляет в выпадающий список контакты из классификатора.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, содержащая поле ввода, для которого
//                         вызывается обработчик.
//  Элемент				 - ПолеФормы - элемент, для которого вызывается обработчик.
//  Текст				 - Строка - строка текста, введенная в поле ввода.
//  ДанныеВыбора		 - СписокЗначений - содержит список значений, который
//                         будет показан при обработке события АвтоПодбор.
//  Параметры			 - Структура - содержит параметры поиска, подробное описание
//                         см. в синтакс-помощнике, для обработчика расширения поля формы
//                         для поля ввода АвтоПодбор.
//  Ожидание			 - Число - обработчик выполняется только когда Ожидание
//                         не равно 0, то есть только когда был введен текст.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки.
//
Процедура Подключаемый_АвтоПодбор(Форма, Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка) Экспорт

	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы Тогда
		Возврат;
	КонецЕсли;

	Если Не Форма.ПоддержкаАвтоподбораКонтактов.ЕстьКонтактыСозданныеПоСобытию Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;

	ДанныеВыбора = АвтоподборКонтактовВызовСервера.СписокАвтоПодбораКонтакта(Текст, Ложь,
		Форма.ПоддержкаАвтоподбораКонтактов.ОписаниеПолейДляАвтоПодбора[Элемент.Имя].ТипЗначения, Параметры.Отбор);

КонецПроцедуры

// Подключаемый обработчик события ОбработкаВыбора в поле ввода формы
// для выбора контрагента. Обеспечивает обработку выбора из классификатора
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, содержащая поле ввода, для которого
//                         вызывается обработчик
//  Элемент				 - ПолеФормы - элемент формы, для которого вызывается обработчик
//  ВыбранноеЗначение	 - Произвольный - выбранное значение, которое
//                         будет установлено как значение поля ввода
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки
//
Процедура Подключаемый_ОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт

	Если ТипЗнч(ВыбранноеЗначение) = Тип("ОписаниеОповещения") Тогда

		СтандартнаяОбработка = Ложь;
		ВыполнитьОбработкуОповещения(ВыбранноеЗначение);

	КонецЕсли;

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КлассификаторКонтактов") Тогда

		СтандартнаяОбработка = Ложь;

		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("КлассификаторДляЗаполненияКИ", ВыбранноеЗначение);

		Если ТипЗнч(Форма.Объект.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец", Форма.Объект.Ссылка));
		КонецЕсли;

		ДополнитьПараметрыФормыИзПараметровВыбораЭлемента(ПараметрыФормы, Элемент);

		ОткрытьФорму(Форма.ПоддержкаАвтоподбораКонтактов.ОписаниеПолейДляАвтоПодбора[Элемент.Имя].ИмяФормыОбъекта,
			ПараметрыФормы, Элемент);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

// Дополняет параметры формы из параметров выбора элемента.
// Используется, например, когда следует заполнить реквизиты "Покупатель", "Поставщик"
// в открывшейся форме создания контрагента из классификатора контактов.
//
// Параметры:
//  ПараметрыФормы	 - Структура - параметры формы, которые следует дополнить,
//  Элемент			 - ЭлементФормы - элемент формы, для которого вызывается процедура.
//
Процедура ДополнитьПараметрыФормыИзПараметровВыбораЭлемента(ПараметрыФормы, Знач Элемент) Экспорт
	
	Для Каждого ТекПараметрВыбора Из Элемент.ПараметрыВыбора Цикл
		
		КомпонентыИмени = СтрРазделить(ТекПараметрВыбора.Имя, ".", Ложь);
		
		Если КомпонентыИмени.Количество() = 1 Тогда
			ПараметрыФормы.Вставить(КомпонентыИмени[0], ТекПараметрВыбора.Значение);
			Продолжить;
		КонецЕсли;
		
		Если КомпонентыИмени[0] <> "Отбор" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПараметрыФормы.Свойство("ЗначенияЗаполнения") Тогда
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура);
		КонецЕсли;
		
		ПараметрыФормы.ЗначенияЗаполнения.Вставить(КомпонентыИмени[1], ТекПараметрВыбора.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоЗаполненныйКонтакт(Форма, ИмяЭлемента)

	Если ТипЗнч(Форма.Объект.Ссылка) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат ЗначениеЗаполнено(Форма.Объект.Ссылка);
	КонецЕсли;

	Если Не СтрНачинаетсяС(ИмяЭлемента, "НаименованиеКонтакт_") Тогда
		Возврат ЗначениеЗаполнено(Форма.Объект.Ссылка);
	КонецЕсли;

	ИндексЭлемента = Число(СтрЗаменить(ИмяЭлемента, "НаименованиеКонтакт_", ""));

	Возврат ЗначениеЗаполнено(Форма.ДанныеКонтактныхЛиц[ИндексЭлемента].КонтактноеЛицо);

КонецФункции

#КонецОбласти
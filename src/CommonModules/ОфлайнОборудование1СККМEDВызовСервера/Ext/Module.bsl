#Область ПрограммныйИнтерфейсСлужебныйWebСервис

Процедура ПакетыОбработаны(Отказ, ПакетыОбработаны, Выгрузка, Пакеты, ВыходныеПараметры) Экспорт
	
	Результат = Истина;
	URIПространстваИмен = "http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.8.Cashbox";
	СтрокаТипОбъекта = "Обработан";
	
	ОбъектXDTO = Неопределено;
	ТипXDTO = ФабрикаXDTO.Тип(URIПространстваИмен, СтрокаТипОбъекта);
	
	Для Каждого ТекПакет Из Пакеты Цикл
		
		ЧтениеXML = Новый ЧтениеXML;
		ПараметрыЧтения = Новый ПараметрыЧтенияXML("1.0");
		ЧтениеXML.УстановитьСтроку(ТекПакет, ПараметрыЧтения);
		ЧтениеXML.Прочитать(); // Message
		ЧтениеXML.Прочитать(); // Header
		ЗаголовокСообщенияXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип("http://www.1c.ru/SSL/Exchange/Message", "Header"));
		
		Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента
			Или ЧтениеXML.ЛокальноеИмя <> "Body" Тогда
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);

			СообщениеОбОшибке = НСтр("ru='При проверке файла на обработанность произошла ошибка.'")
				+ Символы.ПС + ПодробноеПредставлениеОшибки;
			
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить(СообщениеОбОшибке);

			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ЧтениеXML.Прочитать(); // Body

		Пока ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл
			
			// Получаем из файла ОбъектXDTO.
			ТипОбъектаXDTO = ФабрикаXDTO.Тип(URIПространстваИмен, ЧтениеXML.ЛокальноеИмя);
			Попытка
				ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипОбъектаXDTO);
				Если ТипОбъектаXDTO.Имя = СтрокаТипОбъекта Тогда
					Если Не ЗначениеЗаполнено(ОбъектXDTO.Дата) Тогда
						Результат = Ложь;
					КонецЕсли;
				КонецЕсли;
			Исключение
				
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
				
				СообщениеОбОшибке = НСтр("ru='При проверке файла на обработанность произошла ошибка.'")
					+ Символы.ПС + ПодробноеПредставлениеОшибки;
				
				ВыходныеПараметры.Добавить(999);
				ВыходныеПараметры.Добавить(СообщениеОбОшибке);

				Отказ = Истина;
				Возврат;
			КонецПопытки;
				
		КонецЦикла;
	КонецЦикла;
	
	ПакетыОбработаны = Результат;
	
КонецПроцедуры

Функция ВыгрузитьДанныеНаСервере(ДанныеВыгрузки) Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВерсияФормата", "1.8.Cashbox");
	СтруктураПараметров.Вставить("РасширениеФормата", "");
	СтруктураПараметров.Вставить("ДанныеВыгрузки", ДанныеВыгрузки);
	
	ИмяПроцедуры = "ОфлайнОборудование1СККМEDСлужебный.РезультатВыгрузкиВXML";
	
	МодульДлительныеОперации = ОбщегоНазначения.ОбщийМодуль("ДлительныеОперации");
	ПараметрыВыполнения = МодульДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	
	Возврат МодульДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, СтруктураПараметров, ПараметрыВыполнения);

КонецФункции

Функция ЗагрузитьДанныеНаСервере(АдресФайлаЗагрузки) Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресФайлаЗагрузки", АдресФайлаЗагрузки);
	
	ИмяПроцедуры = "ОфлайнОборудование1СККМEDСлужебный.ЗагрузкаСообщения";
	
	МодульДлительныеОперации = ОбщегоНазначения.ОбщийМодуль("ДлительныеОперации");
	ПараметрыВыполнения = МодульДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);

	Возврат МодульДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, СтруктураПараметров, ПараметрыВыполнения);

КонецФункции

Функция ПолучитьТекстXMLДанныеЗагружены() Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ОбменДанными") Тогда
		МодульОбменДаннымиXDTOСервер = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиXDTOСервер");

		КомпонентыОбмена     = МодульОбменДаннымиXDTOСервер.ИнициализироватьКомпонентыОбмена("Отправка");
		ТекВерсияФормата     = "1.8.Cashbox";
		ТекРасширениеФормата = "";
		
		КомпонентыОбмена.ЭтоОбменЧерезПланОбмена = Ложь;
		КомпонентыОбмена.КлючСообщенияЖурналаРегистрации = НСтр("ru = 'Обмен ККМ офлайн'", ОбщегоНазначения.КодОсновногоЯзыка());
		КомпонентыОбмена.ВерсияФорматаОбмена = ТекВерсияФормата;
		КомпонентыОбмена.XMLСхема = "http://v8.1c.ru/edi/edi_stnd/EnterpriseData/" + ТекВерсияФормата;
		ВключитьПространствоИмен(КомпонентыОбмена, ТекРасширениеФормата, "ext");

		МодульОбменДаннымиXDTOСервер.ОткрытьФайлВыгрузки(КомпонентыОбмена);
		
		СтрокаТипОбъекта = "Обработан";
		
		ТипОбъекта = ФабрикаXDTO.Тип("http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.8.Cashbox", СтрокаТипОбъекта);
		
		ОбъектВыгрузки = ФабрикаXDTO.Создать(ТипОбъекта);
		
		ОбъектВыгрузки.Дата = ТекущаяДатаСеанса();
		
		ФабрикаXDTO.ЗаписатьXML(КомпонентыОбмена.ФайлОбмена, ОбъектВыгрузки);
		
		КомпонентыОбмена.ФайлОбмена.ЗаписатьКонецЭлемента();
		КомпонентыОбмена.ФайлОбмена.ЗаписатьКонецЭлемента();
		
		ТекстВыгрузки = КомпонентыОбмена.ФайлОбмена.Закрыть();
	Иначе
		ТекстВыгрузки = Новый ЗаписьXML;
	КонецЕсли;
	
	Возврат ТекстВыгрузки;
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВключитьПространствоИмен(КомпонентыОбмена, Знач ПространствоИмен, Знач Псевдоним = "")
	
	Если ПустаяСтрока(ПространствоИмен) Тогда
		Возврат;
	КонецЕсли;
	
	КомпонентыОбмена.РасширенияФормата.Вставить(ПространствоИмен, Псевдоним);
	
КонецПроцедуры

#КонецОбласти

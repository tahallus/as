
#Область ПрограммныйИнтерфейс

// Открывает предопределенный вариант отчета
//
// Параметры:
//  Вариант  - Структура - описание варианта отчета:
//     * ИмяОтчета           - Строка - имя отчета
//     * КлючВарианта        - Строка - ключ варианта отчета
//
Процедура ОткрытьВариантОтчета(Вариант, Отбор = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КлючВарианта", Вариант.КлючВарианта);
	
	Уникальность = "Отчет." + Вариант.ИмяОтчета + "/КлючВарианта." + Вариант.КлючВарианта;
	
	ПараметрыОткрытия.Вставить("КлючПараметровПечати",        Уникальность);
	ПараметрыОткрытия.Вставить("КлючСохраненияПоложенияОкна", Уникальность);
	
	Если Отбор <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("Отбор", Отбор);
	КонецЕсли;
	
	ОткрытьФорму("Отчет." + Вариант.ИмяОтчета + ".Форма", ПараметрыОткрытия, Неопределено, Уникальность);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработкаРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	Если ЭтаФорма.КлючУникальности = "Отчет.ДинамикаЗадолженностиПокупателей/КлючВарианта.ДинамикаЗадолженности" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СвойстваВариантаОтчета = Новый Структура("КлючВарианта, КлючОбъекта",
			"Основной", "Отчет.РеестрСтаренияДебиторскойЗадолженности");
		
		КомпоновщикНастроекВариантаОтчета = УправлениеНебольшойФирмойОтчетыВызовСервера.КомпоновщикНастроекВариантаОтчета(СвойстваВариантаОтчета);
		Если КомпоновщикНастроекВариантаОтчета = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		КомпоновщикНастроекТекущегоВарианта = ЭтаФорма.Отчет.КомпоновщикНастроек;
		СкопироватьОтбор(КомпоновщикНастроекВариантаОтчета, КомпоновщикНастроекТекущегоВарианта);
		
		ПользовательскиеНастройкиВариантаОтчета = КомпоновщикНастроекВариантаОтчета.ПользовательскиеНастройки;
		
		ЗначениеПериода = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Период", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
		Если ЗначениеПериода <> Неопределено Тогда
			ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("ПериодПольз");
			Для Каждого ЭлементНастройки Из ПользовательскиеНастройкиВариантаОтчета.Элементы Цикл
				Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И ЭлементНастройки.Параметр = ПараметрКомпоновки Тогда
					ЗначениеПараметра = ЭлементНастройки;
					Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("СтандартнаяДатаНачала") Тогда
						ЗначениеПараметра.Значение.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
						ЗначениеПараметра.Значение.Дата = ЗначениеПериода;
						ЗначениеПараметра.Использование = Истина;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтчета = Новый Структура("ПользовательскиеНастройки, 
											|КлючВарианта, 
											|КлючНазначенияИспользования, 
											|СформироватьПриОткрытии",
											ПользовательскиеНастройкиВариантаОтчета,
											СвойстваВариантаОтчета.КлючВарианта,
											"РасшифровкаДинамикиЗадолженностиПокупателей",
											Истина);
		
		ОткрытьФорму("Отчет.РеестрСтаренияДебиторскойЗадолженности.Форма", ПараметрыОтчета);
		
	ИначеЕсли ЭтаФорма.КлючУникальности = "Отчет.ДинамикаЗадолженностиПоставщикам/КлючВарианта.ДинамикаЗадолженности" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СвойстваВариантаОтчета = Новый Структура("КлючВарианта, КлючОбъекта",
			"Основной", "Отчет.РеестрСтаренияКредиторскойЗадолженности");
		
		КомпоновщикНастроекВариантаОтчета = УправлениеНебольшойФирмойОтчетыВызовСервера.КомпоновщикНастроекВариантаОтчета(СвойстваВариантаОтчета);
		Если КомпоновщикНастроекВариантаОтчета = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		КомпоновщикНастроекТекущегоВарианта = ЭтаФорма.Отчет.КомпоновщикНастроек;
		СкопироватьОтбор(КомпоновщикНастроекВариантаОтчета, КомпоновщикНастроекТекущегоВарианта);
		
		ПользовательскиеНастройкиВариантаОтчета = КомпоновщикНастроекВариантаОтчета.ПользовательскиеНастройки;
		
		ЗначениеПериода = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("ДинамическийПериод", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
		Если ЗначениеПериода <> Неопределено Тогда
			ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("ПериодПольз");
			Для Каждого ЭлементНастройки Из ПользовательскиеНастройкиВариантаОтчета.Элементы Цикл
				Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") И ЭлементНастройки.Параметр = ПараметрКомпоновки Тогда
					ЗначениеПараметра = ЭлементНастройки;
					Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("СтандартнаяДатаНачала") Тогда
						ЗначениеПараметра.Значение.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
						ЗначениеПараметра.Значение.Дата = ЗначениеПериода;
						ЗначениеПараметра.Использование = Истина;
					КонецЕсли;
					
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтчета = Новый Структура("ПользовательскиеНастройки, 
											|КлючВарианта, 
											|КлючНазначенияИспользования, 
											|СформироватьПриОткрытии",
											ПользовательскиеНастройкиВариантаОтчета,
											СвойстваВариантаОтчета.КлючВарианта,
											"РасшифровкаДинамикиЗадолженностиПоставщикам",
											Истина);
		
		ОткрытьФорму("Отчет.РеестрСтаренияКредиторскойЗадолженности.Форма", ПараметрыОтчета);
		
	ИначеЕсли ЭтаФорма.ИмяФормы = "Отчет.КонтрольЗаполненияКонтактнойИнформации.Форма" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ЗначениеКЛ = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("КонтактноеЛицо", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		Если ЗначениеКЛ <> Неопределено Тогда
			ОткрытьФорму("Справочник.КонтактныеЛица.ФормаОбъекта", Новый Структура("Ключ", ЗначениеКЛ), ЭтаФорма);
		Иначе
			ЗначениеКА = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Контрагент", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
			Если ЗначениеКА <> Неопределено Тогда
				ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", Новый Структура("Ключ", ЗначениеКА), ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ВоронкаПродаж" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Расшифровка", Расшифровка);
		ПараметрыФормы.Вставить("ДанныеРасшифровки", ЭтаФорма.ОтчетДанныеРасшифровки);
		ПараметрыФормы.Вставить("АдресСхемы", ЭтаФорма.НастройкиОтчета.АдресСхемы);
		
		ЭтоДанныеПродаж = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("ДанныеПродаж", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		
		Если ЭтоДанныеПродаж = Неопределено ИЛИ НЕ ЭтоДанныеПродаж Тогда
			ОткрытьФорму("Отчет.ВоронкаПродаж.Форма.Расшифровка", ПараметрыФормы, ЭтаФорма);
			Возврат;
		КонецЕсли;
		
		МассивПокупателей = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("ПродажиПоПокупателям", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		
		Если МассивПокупателей.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("Контрагент", МассивПокупателей);
		СтруктураОтбора.Вставить("Период", МассивПокупателей);
		
		ПараметрыФормыОтчета = Новый Структура("КлючВарианта, Отбор, СформироватьПриОткрытии", "ВаловаяПрибыльПоПокупателям",СтруктураОтбора, Истина);
			
		ОткрытьФорму("Отчет.Продажи.Форма", ПараметрыФормыОтчета);

	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ВоронкаПоЛидам" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Расшифровка", Расшифровка);
		ПараметрыФормы.Вставить("ДанныеРасшифровки", ЭтаФорма.ОтчетДанныеРасшифровки);
		ПараметрыФормы.Вставить("АдресСхемы", ЭтаФорма.НастройкиОтчета.АдресСхемы);
		
		ОткрытьФорму("Отчет.ВоронкаПоЛидам.Форма.Расшифровка", ПараметрыФормы, ЭтаФорма);
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ОстаткиТоваров" 
		И ЭтаФорма.КлючТекущегоВарианта = "ПоМестамХранения" Тогда
		
		ОбработкаРасшифровкиОстаткиТоваров(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка);
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ОстаткиТоваровМеньшеНуля" 
		И ЭтаФорма.КлючТекущегоВарианта = "ОстаткиТоваровМеньшеНуля" Тогда
		
		ОбработкаРасшифровкиОстаткиТоваров(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка);
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ЗакрытиеМесяцаАнализОтрицательныхОстатков" Тогда
		
		ОбработкаРасшифровкиЗакрытиеМесяцаАнализОтрицательныхОстатков(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка);
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.ДенежныйПоток" Тогда
		
		ОбработкаРасшифровкиДенежныйПоток(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ФормаОтчета, ИмяСобытия, Параметр, Источник, ОповещениеОбработано) Экспорт
		
	Если ФормаОтчета.ИмяФормы <> "ОбщаяФорма.ФормаОтчета" Тогда
		Возврат;	
	КонецЕсли;
	
	Вариант = Неопределено;
	ФормаОтчета.НастройкиОтчета.Свойство("ВариантСсылка", Вариант);
	
	Если ИмяСобытия = ВариантыОтчетовКлиент.ИмяСобытияИзменениеВарианта() Тогда
		Если ЗначениеЗаполнено(Вариант) Тогда
			ОтчетыУНФВызовСервера.ДобавитьОтчетВИсторию(Вариант);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

Процедура СкопироватьОтбор(КомпоновщикПриемник, КомпоновщикИсточник) Экспорт
	
	НастройкиПриемник = КомпоновщикПриемник.Настройки;
	НастройкиИсточник = КомпоновщикИсточник.Настройки;
	ПользовательскиеНастройкиИсточник = КомпоновщикИсточник.ПользовательскиеНастройки;
	
	Для Каждого ЭлементОтбора Из НастройкиИсточник.Отбор.Элементы Цикл
		Если ЗначениеЗаполнено(ЭлементОтбора.ИдентификаторПользовательскойНастройки) Тогда
			
			Для каждого ПользовательскаяНастройка Из ПользовательскиеНастройкиИсточник.Элементы Цикл
				Если ПользовательскаяНастройка.ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки Тогда
					Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЭлементОтбораКомпоновкиДанных")
						И ПользовательскаяНастройка.Использование Тогда
						
						ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
							НастройкиПриемник.Отбор,
							Строка(ЭлементОтбора.ЛевоеЗначение),
							ПользовательскаяНастройка.ПравоеЗначение,
							ПользовательскаяНастройка.ВидСравнения,
							,
							Истина);
						
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикПриемник.ЗагрузитьНастройки(НастройкиПриемник);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаРасшифровкиОстаткиТоваров(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураОтбора = Новый Структура;
	
	Товары = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Номенклатура",  
		Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
	СтруктурныеЕдиницы = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("СтруктурнаяЕдиница", 
		Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
	ПараметрПериод = ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("Период"));
	Если НЕ ПараметрПериод.Использование ИЛИ НЕ ЗначениеЗаполнено(ПараметрПериод.Значение) Тогда
		Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.ЭтотМесяц);
	Иначе
		Период = Новый СтандартныйПериод(НачалоМесяца(ПараметрПериод.Значение), КонецДня(ПараметрПериод.Значение));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Товары) Тогда
		СтруктураОтбора.Вставить("Номенклатура", Товары);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктурныеЕдиницы) Тогда
		СтруктураОтбора.Вставить("СтруктурнаяЕдиница", СтруктурныеЕдиницы);
	КонецЕсли;
	СтруктураОтбора.Вставить("ПериодРасшифровки", Период);
	
	ПараметрыФормыОтчета = Новый Структура("КлючВарианта, Отбор, СформироватьПриОткрытии", "ДвижениеТоваров", СтруктураОтбора, Истина);
		
	ОткрытьФорму("Отчет.ДвижениеТоваров.Форма", ПараметрыФормыОтчета);
	
КонецПроцедуры

Процедура ОбработкаРасшифровкиЗакрытиеМесяцаАнализОтрицательныхОстатков(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка)
	
	ИмяПоля = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолеРасшифровки(ЭтаФорма.ОтчетДанныеРасшифровки, Расшифровка);
	Если ИмяПоля = "ОбщийПоВсемПартиям" Тогда
		КлючВарианта = "ПоПартиям";
	ИначеЕсли ИмяПоля = "ОбщийПоВсемХарактеристикам" Тогда
		КлючВарианта = "ПоХарактеристикам";
	ИначеЕсли ИмяПоля = "ОбщийНаВсехСкладах" Тогда
		КлючВарианта = "ПоСкладам";
	ИначеЕсли ИмяПоля = "ОбщийРезерв" Тогда
		КлючВарианта = "ПоЗаказам";
	Иначе
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	СтруктураОтбора = Новый Структура;
	
	Товары = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Номенклатура",  
		Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек); 
	Если ЗначениеЗаполнено(Товары) Тогда
		СтруктураОтбора.Вставить("Номенклатура", Товары);
	КонецЕсли;
		
	Если КлючВарианта <> "ПоСкладам" Тогда
		СтруктурныеЕдиницы = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("СтруктурнаяЕдиница", 
			Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		Если ЗначениеЗаполнено(СтруктурныеЕдиницы) Тогда
			СтруктураОтбора.Вставить("СтруктурнаяЕдиница", СтруктурныеЕдиницы);
		КонецЕсли;
	КонецЕсли;
	
	Если КлючВарианта <> "ПоХарактеристикам" Тогда
		Характеристики = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Характеристика", 
			Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		Если ЗначениеЗаполнено(Характеристики) Тогда
			СтруктураОтбора.Вставить("Характеристика", Характеристики);
		КонецЕсли;
	КонецЕсли;
	
	Если КлючВарианта <> "ПоПартиям" Тогда
		Партии = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Партия", 
			Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		Если ЗначениеЗаполнено(Партии) Тогда
			СтруктураОтбора.Вставить("Партия", Партии);
		КонецЕсли;
	КонецЕсли;
	
	Если КлючВарианта <> "ПоЗаказам" Тогда
		Заказы = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("ЗаказПокупателя", 
			Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки, ЭтаФорма.Отчет.КомпоновщикНастроек);
		Если ЗначениеЗаполнено(Заказы) Тогда
			СтруктураОтбора.Вставить("ЗаказПокупателя", Заказы);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрПериод = ЭтаФорма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("СтПериод"));
	Если НЕ ПараметрПериод.Использование ИЛИ НЕ ЗначениеЗаполнено(ПараметрПериод.Значение) Тогда
		Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.ЭтотМесяц);
	Иначе
		Период = ПараметрПериод.Значение;
	КонецЕсли;
	
	СтруктураОтбора.Вставить("Период", Период.ДатаОкончания);
	
	ПараметрыФормыОтчета = Новый Структура("КлючВарианта, Отбор, СформироватьПриОткрытии", КлючВарианта, СтруктураОтбора, Истина);
		
	ОткрытьФорму("Отчет.РасшифровкаАнализаЗакрытияМесяца.Форма", ПараметрыФормыОтчета);
	
КонецПроцедуры

Процедура ОбработкаРасшифровкиДенежныйПоток(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) <> Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		ПоказатьЗначение(, Расшифровка);
		Возврат;
	КонецЕсли;
	
	НовыеНастройкиКомпоновки = УправлениеНебольшойФирмойОтчетыВызовСервера.НастройкиРасшифровкиПоРегистратору(
		ЭтаФорма.ОтчетДанныеРасшифровки, Расшифровка, ЭтаФорма.НастройкиОтчета.АдресСхемы);
	НовыеНастройкиКомпоновки.ДополнительныеСвойства.Вставить("РежимРасшифровки", Истина);
	Отбор = Новый Структура;
	Для каждого ЭлементОтбора Из НовыеНастройкиКомпоновки.Отбор.Элементы Цикл
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;	
		КонецЕсли; 
		Если НЕ ПустаяСтрока(ЭлементОтбора.ИдентификаторПользовательскойНастройки) Тогда
			// Только отборы расшифровки
			Продолжить;	
		КонецЕсли;
		Отбор.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение);
	КонецЦикла;
	
	ОписаниеРасшифровки = Новый ОписаниеОбработкиРасшифровкиКомпоновкиДанных(ЭтаФорма.ОтчетДанныеРасшифровки, Расшифровка, 
		Новый НастройкиКомпоновкиДанных);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("Расшифровка", ОписаниеРасшифровки);
	ПараметрыФормы.Вставить("Отбор", Отбор);
    Если НЕ ПустаяСтрока(ЭтаФорма.КлючТекущегоВарианта) Тогда
		КлючУникальности = СтрШаблон("%1%2", ЭтаФорма.КлючТекущегоВарианта, "Расшифровка");
	Иначе
		КлючУникальности = "ДенежныйПотокРасшифровка";
	КонецЕсли;
	ОткрытьФорму("Отчет.ДенежныйПоток.Форма", ПараметрыФормы, , КлючУникальности);
	
КонецПроцедуры

#КонецОбласти


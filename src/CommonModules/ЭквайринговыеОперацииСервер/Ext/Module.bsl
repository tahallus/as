////////////////////////////////////////////////////////////////////////////////
// "Эквайринг" 
//
// Общие серверные процедуры и функции подсистемы учета операций эквайринга
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетодЭквайринг(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	// В этой процедуре нам нужно связать отложенную отгурзку и нераспределенную оплату 
	// на регистрах "ДоходыИРасходыКассовыйМетодЭквайринг" и "ДоходыИРасходыКассовыйМетод". В зависимости от того, оплачена
	// эквайринговая операция или нет.
	
	Если Не СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетодЭквайринг", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля, ВидГраницы.Включая));
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.Статья
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Статья";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДоходыИРасходыКассовыйМетодЭквайринг");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков.
	ТаблицаДоходыИРасходыОтложенные = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыОтложенные.Скопировать();
	ТаблицаДоходыИРасходыОтложенные.Свернуть("Документ, НаправлениеДеятельности", "НеРаспределено");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Документ КАК Документ,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Организация КАК Организация,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Статья КАК Статья,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаДоходовОстаток КАК СуммаДоходовОстаток
	|ПОМЕСТИТЬ ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходыКассовыйМетодЭквайринг.Остатки(
	|			&МоментКонтроля,
	|			НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|				И ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|				И (Организация, Документ, Статья) В
	|					(ВЫБРАТЬ
	|						ТаблицаДокумента.Организация КАК Организация,
	|						ТаблицаДокумента.Документ КАК Документ,
	|						ТаблицаДокумента.Статья
	|					ИЗ
	|						ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|					ГДЕ
	|						&КассовыйМетодУчетаДоходовИРасходов
	|						И ТаблицаДокумента.ЭтоЭквайринговаяОперация)) КАК ДоходыИРасходыКассовыйМетодЭквайрингОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоходыИРасходыКассовыйМетодЭквайринг.Документ,
	|	ДоходыИРасходыКассовыйМетодЭквайринг.Организация,
	|	ДоходыИРасходыКассовыйМетодЭквайринг.НаправлениеДеятельности,
	|	ДоходыИРасходыКассовыйМетодЭквайринг.Статья,
	|	ВЫБОР
	|		КОГДА ДоходыИРасходыКассовыйМетодЭквайринг.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаДоходов, 0)
	|		ИНАЧЕ -ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаДоходов, 0)
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходыКассовыйМетодЭквайринг КАК ДоходыИРасходыКассовыйМетодЭквайринг
	|ГДЕ
	|	ДоходыИРасходыКассовыйМетодЭквайринг.Регистратор = &Ссылка
	|	И ДоходыИРасходыКассовыйМетодЭквайринг.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|	И ДоходыИРасходыКассовыйМетодЭквайринг.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.Документ,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.Организация,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.НаправлениеДеятельности,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.Статья,
	|	СУММА(ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.СуммаДоходовОстаток) КАК СуммаДоходовОстаток
	|ПОМЕСТИТЬ ДоходыИРасходыКассовыйМетодЭквайрингОстатки
	|ИЗ
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние КАК ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.Документ,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.Организация,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.НаправлениеДеятельности,
	|	ДоходыИРасходыКассовыйМетодЭквайрингОстаткиОбъедиенние.Статья
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Документ КАК ДокументПредоплаты,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаКСписанию,
	|	СУММА(ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаДоходовОстаток, 0)) КАК СуммаДоходовОстаток,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя) КАК ВидОперацииЭквайринга
	|ИЗ
	|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДоходыИРасходыКассовыйМетодЭквайрингОстатки КАК ДоходыИРасходыКассовыйМетодЭквайрингОстатки
	|		ПО ТаблицаДокумента.Организация = ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Организация
	|			И ТаблицаДокумента.Документ = ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Документ
	|			И ТаблицаДокумента.Статья = ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Статья
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Статья";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРезультатаЗапроса = РезультатЗапроса.Выбрать();
	
	ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг = РегистрыНакопления.ДоходыИРасходыКассовыйМетодЭквайринг.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Очистить();
	
	ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Колонки.Удалить("Активность");
	
	ТаблицаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Скопировать();
	
	ТаблицаЭквайрингСторно = ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Скопировать();
	ТаблицаСторно = ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Скопировать();
	
	ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Колонки.Удалить("Документ");
	ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Колонки.Добавить("Документ");
	
	ТаблицаСторно.Колонки.Добавить("ДокументПредоплаты");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыОтложенные.Колонки.Добавить("ДокументПредоплаты");
	
	ТаблицаПредоплатаДоходыИРасходыОтложенные.Колонки.Удалить("Документ");
	ТаблицаПредоплатаДоходыИРасходыОтложенные.Колонки.Добавить("Документ");
	ТаблицаПредоплатаДоходыИРасходыОтложенные.Колонки.Добавить("ДокументПредоплаты");
	
	НеРаспределено = ТаблицаДоходыИРасходыОтложенные.Итог("НеРаспределено");
	
	Пока ВыборкаРезультатаЗапроса.Следующий() И НеРаспределено > 0 Цикл
		
		СуммаКСписаниюВБуферномРегистре = ВыборкаРезультатаЗапроса.СуммаДоходовОстаток;
		СуммаКСписаниюПоДоходамИРаскодамКМ = ВыборкаРезультатаЗапроса.СуммаКСписанию - СуммаКСписаниюВБуферномРегистре;
		
		// Необходимо распределить оставшуюся сумму отгрузки между двумя регистрами.
		// В первую очередь требуется распределять по уже оплаченным банком платежным картам, т.е. выполнять
		// движения по регистру ДоходыИРасходыКассовыйМетод.
		
		// Цикл №1. Зачесть сумму СуммаКСписаниюПоДоходамИРаскодамКМ.
		Если СуммаКСписаниюПоДоходамИРаскодамКМ > 0 Тогда
			СуммаКСписанию = СуммаКСписаниюПоДоходамИРаскодамКМ;
			ТекущаяТаблица = ТаблицаПредоплатаДоходыИРасходыОтложенные;
			ТекущаяТаблицаСторно = ТаблицаСторно;
			
			Для каждого СтрокаЗапасыДоходыИРасходыОтложенные Из ТаблицаДоходыИРасходыОтложенные Цикл
				Если СуммаКСписанию = 0 Или СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено <= 0 Тогда
					Продолжить
				ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено <= СуммаКСписанию Тогда
					Списать = СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено;
					СуммаКСписанию = СуммаКСписанию - Списать;
					СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено = 0;
				ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено > СуммаКСписанию Тогда
					Списать = СуммаКСписанию;
					СуммаКСписанию = 0;
					СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено = СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено - Списать;
				КонецЕсли;
				
				НеРаспределено = НеРаспределено - Списать;
				
				НоваяСтрока = ТекущаяТаблицаСторно.Добавить();
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				НоваяСтрока.ДокументПредоплаты = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				НоваяСтрока.СуммаДоходов = -Списать;
				НоваяСтрока.Период = СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата;
				
				НоваяСтрока = ТекущаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасыДоходыИРасходыОтложенные, "Документ, НаправлениеДеятельности");
				НоваяСтрока.СуммаДоходов = Списать;
				НоваяСтрока.ДокументПредоплаты = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				
				// Добавим записи в регистр "ДоходыИРасходыНераспределенные".
				НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыНераспределенные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				НоваяСтрока.Документ = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрока.СуммаДоходов = Списать;
			КонецЦикла;
		КонецЕсли;
		
		// Цикл №2. Зачесть сумму СуммаКСписаниюВБуферномРегистре.
		Если СуммаКСписаниюВБуферномРегистре > 0 И НеРаспределено > 0 Тогда
			СуммаКСписанию = СуммаКСписаниюВБуферномРегистре;
			ТекущаяТаблица = ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг;
			ТекущаяТаблицаСторно = ТаблицаЭквайрингСторно;
			
			Для каждого СтрокаЗапасыДоходыИРасходыОтложенные Из ТаблицаДоходыИРасходыОтложенные Цикл
				Если СуммаКСписанию = 0 Или СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено <= 0 Тогда
					Продолжить
				ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено <= СуммаКСписанию Тогда
					Списать = СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено;
					СуммаКСписанию = СуммаКСписанию - Списать;
					СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено = 0;
				ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено > СуммаКСписанию Тогда
					Списать = СуммаКСписанию;
					СуммаКСписанию = 0;
					СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено = СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено - Списать;
				КонецЕсли;
				
				НеРаспределено = НеРаспределено - Списать;
				
				НоваяСтрока = ТекущаяТаблицаСторно.Добавить();
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				НоваяСтрока.Документ = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				НоваяСтрока.СуммаДоходов = -Списать;
				НоваяСтрока.Период = СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата;
				
				// Добавим записи в регистр "ДоходыИРасходыОтложенные".
				НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасыДоходыИРасходыОтложенные, "Документ, НаправлениеДеятельности");
				НоваяСтрока.ДокументПредоплаты = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрока.СуммаДоходов = Списать;
				
				// Добавим записи в регистр "ТаблицаДоходыИРасходыКассовыйМетодЭквайринг".
				НоваяСтрока = ТекущаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				НоваяСтрока.НаправлениеДеятельности = СтрокаЗапасыДоходыИРасходыОтложенные.НаправлениеДеятельности;
				НоваяСтрока.Документ = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				НоваяСтрока.СуммаДоходов = Списать;
				
				// Добавим записи в регистр "ДоходыИРасходыНераспределенные".
				НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыНераспределенные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				НоваяСтрока.Документ = ВыборкаРезультатаЗапроса.ДокументПредоплаты;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрока.СуммаДоходов = Списать;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим записи в регистр "ДоходыИРасходыОтложенные".
	Для каждого ТекущаяСтрока Из ТаблицаПредоплатаДоходыИРасходыОтложенные Цикл
		НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыОтложенные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
	КонецЦикла;
	
	// Сторнируем записи в регистрах "ДоходыИРасходыКассовыйМетодЭквайринг" и "ДоходыИРасходыКассовыйМетод".
	Для каждого ТекущаяСтрокаСторно Из ТаблицаЭквайрингСторно Цикл
		НоваяСтрока = ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаСторно);
	КонецЦикла;
	Для каждого ТекущаяСтрокаСторно Из ТаблицаСторно Цикл
		НоваяСтрока = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаСторно);
	КонецЦикла;
	
	// Добавим записи в регистры "ДоходыИРасходыКассовыйМетодЭквайринг" и "ДоходыИРасходыКассовыйМетод".
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетодЭквайринг", ТаблицаПредоплатаДоходыИРасходыОтложенныеЭквайринг);
	Если СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыКассовыйМетод.Количество() = 0 Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", ТаблицаПредоплатаДоходыИРасходыОтложенные.СкопироватьКолонки());
	КонецЕсли;
	
	Если СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыКассовыйМетод.Колонки.Найти("Документ") = Неопределено Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыКассовыйМетод.Колонки.Добавить("Документ");
	КонецЕсли;
	Для каждого ТекущаяСтрока Из ТаблицаПредоплатаДоходыИРасходыОтложенные Цикл
		НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходыКассовыйМетод.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		НоваяСтрока.Документ = ТекущаяСтрока.ДокументПредоплаты;
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

// Процедура заполняет табличную часть "Эквайринговые операции" остатками по операциям эквайринга
//
Процедура ЗаполнитьЭквайринговыеОперации(Объект, ДатаНачала = '00010101', ДатаОкончания = '00010101', Договор = Неопределено) Экспорт
	
	ТипДокумента = ТипЗнч(Объект.Ссылка);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Объект.Организация));
	Запрос.УстановитьПараметр("ПродажиПоПлатежнымКартам", Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ПериодРасчетовДатаНачала", ДатаНачала);
	Если ДатаОкончания <> '00010101' Тогда
		Запрос.УстановитьПараметр("ПериодРасчетовДатаОкончания", КонецДня(ДатаОкончания));
	Иначе
		Запрос.УстановитьПараметр("ПериодРасчетовДатаОкончания", ДатаОкончания);
	КонецЕсли;
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("ЭквайринговыйТерминал", Объект.ЭквайринговыйТерминал);
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("НалогообложениеНДС", Объект.НалогообложениеНДС);
	Запрос.УстановитьПараметр("УчитыватьВНУ", Объект.УчитыватьВНУ);
	Запрос.УстановитьПараметр("ЭтоПоступление", ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет"));
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
		Запрос.УстановитьПараметр("Патент", Объект.Патент);
	Иначе //РасходСоСчета 
		Запрос.УстановитьПараметр("Патент", Справочники.Патенты.ПустаяСсылка());
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыПоЭквайрингуОстатки.Организация КАК Организация,
	|	РасчетыПоЭквайрингуОстатки.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингуОстатки.ДатаПлатежа КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингуОстатки.Документ КАК Документ,
	|	РасчетыПоЭквайрингуОстатки.СуммаОстаток КАК СуммаОстаток,
	|	РасчетыПоЭквайрингуОстатки.СуммаВалОстаток КАК СуммаВалОстаток,
	|	РасчетыПоЭквайрингуОстатки.КомиссияОстаток КАК КомиссияОстаток,
	|	РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток КАК КомиссияВалОстаток,
	|	РасчетыПоЭквайрингуОстатки.Заказ КАК Заказ,
	|	РасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга КАК ВидОперацииЭквайринга,
	|	РасчетыПоЭквайрингуОстатки.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	РасчетыПоЭквайрингуОстатки.НомерПлатежнойКарты КАК НомерПлатежнойКарты
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.РасчетыПоЭквайрингу.Остатки(
	|			,
	|			ДатаПлатежа >= &ПериодРасчетовДатаНачала
	|				И ВЫБОР
	|					КОГДА &ПериодРасчетовДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ДатаПлатежа <= &ПериодРасчетовДатаОкончания
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И Организация = &Организация
	|				И ЭквайринговыйТерминал.Эквайрер = &Контрагент
	|				И ЭквайринговыйТерминал = &ЭквайринговыйТерминал
	|				И ВЫБОР
	|					КОГДА &Договор <> НЕОПРЕДЕЛЕНО
	|						ТОГДА ЭквайринговыйТерминал.Договор = &Договор
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК РасчетыПоЭквайрингуОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.Организация,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Документ,
	|	ВЫБОР
	|		КОГДА РасчетыПоЭквайрингу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ЕСТЬNULL(РасчетыПоЭквайрингу.Сумма, 0)
	|		ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингу.Сумма, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыПоЭквайрингу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ЕСТЬNULL(РасчетыПоЭквайрингу.СуммаВал, 0)
	|		ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингу.СуммаВал, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыПоЭквайрингу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ЕСТЬNULL(РасчетыПоЭквайрингу.Комиссия, 0)
	|		ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингу.Комиссия, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыПоЭквайрингу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ЕСТЬNULL(РасчетыПоЭквайрингу.КомиссияВал, 0)
	|		ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингу.КомиссияВал, 0)
	|	КОНЕЦ,
	|	РасчетыПоЭквайрингу.Заказ,
	|	РасчетыПоЭквайрингу.ВидОперацииЭквайринга,
	|	РасчетыПоЭквайрингу.ВидПлатежнойКарты,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты
	|ИЗ
	|	РегистрНакопления.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Регистратор = &Ссылка
	|	И РасчетыПоЭквайрингу.ДатаПлатежа >= &ПериодРасчетовДатаНачала
	|	И ВЫБОР
	|			КОГДА &ПериодРасчетовДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РасчетыПоЭквайрингу.ДатаПлатежа <= &ПериодРасчетовДатаОкончания
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И РасчетыПоЭквайрингу.Организация = &Организация
	|	И РасчетыПоЭквайрингу.ЭквайринговыйТерминал.Эквайрер = &Контрагент
	|	И РасчетыПоЭквайрингу.ЭквайринговыйТерминал = &ЭквайринговыйТерминал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Документ КАК Документ,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.КомиссияОстаток) КАК КомиссияОстаток,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.КомиссияВалОстаток) КАК КомиссияВалОстаток,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ВидОперацииЭквайринга КАК ВидОперацииЭквайринга,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.НомерПлатежнойКарты КАК НомерПлатежнойКарты
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыПоЭквайрингуОстатки
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента КАК ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента
	|ГДЕ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Документ <> ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Организация,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ЭквайринговыйТерминал,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ДатаПлатежа,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Документ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Заказ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ВидОперацииЭквайринга,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ВидПлатежнойКарты,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.НомерПлатежнойКарты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ДатаПлатежа КАК ДатаПлатежа,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.СуммаВалОстаток КАК СуммаВалОстаток,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.КомиссияОстаток КАК КомиссияОстаток,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.КомиссияВалОстаток КАК КомиссияВалОстаток,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга КАК ВидОперацииЭквайринга,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.СуммаВалОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасчетовВозврата,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ТОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.СуммаВалОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
	|			ТОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.КомиссияВалОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасчетовКомиссииВозврата,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
	|			ТОГДА ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.КомиссияВалОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРасчетовКомиссии,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.НомерПлатежнойКарты КАК НомерПлатежнойКарты
	|ПОМЕСТИТЬ ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки КАК ВременнаяТаблицаРасчетыПоЭквайрингуОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ДатаПлатежа КАК ДатаПлатежа,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.Документ КАК Документ,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаОстаток КАК СуммаОстаток,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаВалОстаток КАК СуммаВалОстаток,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.КомиссияОстаток КАК КомиссияОстаток,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.КомиссияВалОстаток КАК КомиссияВалОстаток,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.Заказ КАК Заказ,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ВидОперацииЭквайринга КАК ВидОперацииЭквайринга,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовВозврата КАК СуммаРасчетовВозврата,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетов КАК СуммаРасчетов,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата КАК СуммаРасчетовКомиссииВозврата,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии КАК СуммаРасчетовКомиссии,
	|	ВЫБОР
	|		КОГДА &ЭтоПоступление
	|			ТОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетов - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовВозврата - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии
	|		ИНАЧЕ ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовВозврата + ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата + ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетов
	|	КОНЕЦ КАК СуммаПлатежаИтогоПоСтроке,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата + ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии КАК СуммаКомиссииИтогоПоСтроке,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.НомерПлатежнойКарты КАК НомерПлатежнойКарты,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал.СобственныеНастройкиНалоговогоУчета
	|			ТОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал.НалогообложениеНДС
	|		ИНАЧЕ &НалогообложениеНДС
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал.СобственныеНастройкиНалоговогоУчета
	|			ТОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал.УчитыватьВНУ
	|		ИНАЧЕ &УчитыватьВНУ
	|	КОНЕЦ КАК УчитыватьВНУ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал.СобственныеНастройкиНалоговогоУчета
	|			ТОГДА ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.ЭквайринговыйТерминал.Патент
	|		ИНАЧЕ &Патент
	|	КОНЕЦ КАК Патент
	|ИЗ
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций КАК ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций
	|ГДЕ
	|	(ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетов <> 0
	|			ИЛИ ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовВозврата <> 0
	|			ИЛИ ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии <> 0
	|			ИЛИ ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	Документ
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетов - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовВозврата - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии) КАК СуммаДокумента,
	|	СУММА(ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата + ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии) КАК СуммаКомиссии
	|ИЗ
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций КАК ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовВозврата + ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссииВозврата + ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетовКомиссии - ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций.СуммаРасчетов) КАК СуммаДокумента,
	|	0 КАК СуммаКомиссии
	|ИЗ
	|	ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций КАК ВременнаяТаблицаДляЗаполненияЭквайринговыхОпераций";
	
	// Если эквайринговый терминал - в табличной части, тогда отбор по эквайринговому терминалу нужно заменить на отбор по
	// банковскому счету
	Если Объект.ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ЭквайринговыйТерминал = &ЭквайринговыйТерминал", "И ЭквайринговыйТерминал.БанковскийСчетЭквайринг = &БанковскийСчетЭквайринг");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РасчетыПоЭквайрингу.ЭквайринговыйТерминал = &ЭквайринговыйТерминал", "И РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчетЭквайринг = &БанковскийСчетЭквайринг");
		Запрос.УстановитьПараметр("БанковскийСчетЭквайринг", Объект.БанковскийСчет);
	КонецЕсли; 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Объект.ЭквайринговыеОперации.Загрузить(МассивРезультатов[3].Выгрузить());
	
	Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
		ВыборкаИтог = МассивРезультатов[4].Выбрать();
	Иначе //РасходСоСчета 
		ВыборкаИтог = МассивРезультатов[5].Выбрать();
	КонецЕсли;
	
	ВыборкаИтог.Следующий();
		
	Если Объект.СуммаДокумента = 0 Тогда
		Объект.СуммаДокумента = ВыборкаИтог.СуммаДокумента;
	КонецЕсли;
	
	Если Объект.СуммаКомиссииДокумента = 0 Тогда
		Объект.СуммаКомиссииДокумента = ВыборкаИтог.СуммаКомиссии;
	КонецЕсли;
	
	Если Объект.ЭквайринговыеОперации.Количество() = 0 Тогда
		НоваяСтрока = Объект.ЭквайринговыеОперации.Добавить();
		НоваяСтрока.СуммаРасчетов = Объект.СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть "Расшифровка платежа" данными из табличной части "Эквайринговые операции".
//
Процедура ЗаполнитьРасшифровкуПлатежаПоОперациямЭквайринга(Объект) Экспорт
	
	ТипДокумента = ТипЗнч(Объект.Ссылка);
	
	АналитикаРасшифровки = Новый Структура;
	
	Если Объект.РасшифровкаПлатежа.Количество() > 0 Тогда
		АналитикаРасшифровки.Вставить("ДокументПланирования", Объект.РасшифровкаПлатежа[0].ДокументПланирования);
		АналитикаРасшифровки.Вставить("Проект", Объект.РасшифровкаПлатежа[0].Проект);
		АналитикаРасшифровки.Вставить("СтатьяДДС", Объект.РасшифровкаПлатежа[0].СтатьяДДС);
		АналитикаРасшифровки.Вставить("Подразделение", Объект.РасшифровкаПлатежа[0].Подразделение);
		ПеренестиДанныеИзРасшифровки = Истина;
	Иначе
		ПеренестиДанныеИзРасшифровки = Ложь;
	КонецЕсли;
	
	Объект.РасшифровкаПлатежа.Очистить();
	
	ТаблицаЭквайринговыхОпераций = Объект.ЭквайринговыеОперации.Выгрузить();
	
	Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
		КолонкиСвертки = "УчитыватьВНУ, НалогообложениеНДС, Патент";
	Иначе //РасходСоСчета
		КолонкиСвертки = "УчитыватьВНУ, НалогообложениеНДС";
	КонецЕсли;
	
	ТаблицаЭквайринговыхОпераций.Свернуть(КолонкиСвертки, "СуммаРасчетов, СуммаРасчетовКомиссии, СуммаРасчетовВозврата, СуммаРасчетовКомиссииВозврата");
	
	Для Каждого ТекущаяСтрока Из ТаблицаЭквайринговыхОпераций Цикл
		
		НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
		
		Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
			ТекущаяСуммаРасчетов = ТекущаяСтрока.СуммаРасчетов - ТекущаяСтрока.СуммаРасчетовКомиссии - ТекущаяСтрока.СуммаРасчетовВозврата - ТекущаяСтрока.СуммаРасчетовКомиссииВозврата;
		Иначе //РасходСоСчета 
			ТекущаяСуммаРасчетов = ТекущаяСтрока.СуммаРасчетовКомиссии + ТекущаяСтрока.СуммаРасчетовВозврата + ТекущаяСтрока.СуммаРасчетовКомиссииВозврата - ТекущаяСтрока.СуммаРасчетов;
		КонецЕсли; 
		
		Если ТекущаяСуммаРасчетов < 0 Тогда
			ТекущаяСуммаРасчетов = 0;
		КонецЕсли;
		
		НоваяСтрока.СуммаРасчетов = ТекущаяСуммаРасчетов;
		
		НоваяСтрока.Курс = 1;
		НоваяСтрока.Кратность = 1;
		
		НоваяСтрока.СуммаПлатежа = НоваяСтрока.СуммаРасчетов;
		
		НоваяСтрока.СуммаРасчетовКомиссии = ТекущаяСтрока.СуммаРасчетовКомиссии + ТекущаяСтрока.СуммаРасчетовКомиссииВозврата;
		НоваяСтрока.СуммаПлатежаКомиссии = НоваяСтрока.СуммаРасчетовКомиссии;
		
		НоваяСтрока.УчитыватьВНУ = ТекущаяСтрока.УчитыватьВНУ;
		НоваяСтрока.НалогообложениеНДС = ТекущаяСтрока.НалогообложениеНДС;
		
		Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда //Данный реквизит присутствует только в Поступлении
			НоваяСтрока.Патент = ТекущаяСтрока.Патент;
		КонецЕсли; 
		
		СтавкаНДСПоУмолчаниюЧисло = 0;
		РасчетыРаботаСФормамиВызовСервера.ЗаполнитьСтавкуНДСПоУмолчанию(НоваяСтрока.СтавкаНДС, СтавкаНДСПоУмолчаниюЧисло, Объект.НалогообложениеНДС, Объект.Организация);
		
		НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчаниюЧисло + 100) / 100);
		
		Если ПеренестиДанныеИзРасшифровки Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, АналитикаРасшифровки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура выполняет общие действия перед записью документов "Расход со счета" и "Поступление на счет" с видом
// операции "Отчет эквайера"
//
Процедура ПередЗаписьюОтчетаЭквайера(Объект) Экспорт
	
	ТипДокумента = ТипЗнч(Объект.Ссылка);
	ПараметрыЭквайринга = ПолучитьПараметрыЭквайрингаДляДокумента(Объект);
	
	Если НЕ ЗначениеЗаполнено(Объект.ПоложениеЭквайринговогоТерминала) ИЛИ Объект.ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		Объект.ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		Для каждого Операция Из Объект.ЭквайринговыеОперации Цикл
			Операция.ЭквайринговыйТерминал = Объект.ЭквайринговыйТерминал;
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
		
		// Заполняем положение ЭТ в шапке документа, заполняем НУ в ТЧ данными из шапки
		Если НЕ ЗначениеЗаполнено(Объект.ПоложениеНастроекНалоговогоУчета) ИЛИ Объект.ПоложениеНастроекНалоговогоУчета = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда 
			Для каждого СтрокаОперации Из Объект.ЭквайринговыеОперации Цикл
				Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда //Данный реквизит присутствует только в Поступлении
					СтрокаОперации.Патент = Объект.Патент;
				КонецЕсли;
				СтрокаОперации.НалогообложениеНДС = Объект.НалогообложениеНДС;
				СтрокаОперации.УчитыватьВНУ = Объект.УчитыватьВНУ;
			КонецЦикла; 
		КонецЕсли;
		
		// Приведем в соответствие суммы оплат и суммы комиссии в шапке и в ТЧ
		Если ПараметрыЭквайринга.РасчетКомиссииВОтчетеЭквайера И Объект.ЭквайринговыеОперации.Количество() > 0 Тогда
			
			МассивКоэффициентов = Объект.ЭквайринговыеОперации.ВыгрузитьКолонку("СуммаРасчетовКомиссии");
			МассивСумм = РаспределитьПропорционально(Объект.СуммаКомиссииДокумента, МассивКоэффициентов);
			Если МассивСумм <> Неопределено Тогда
				Объект.ЭквайринговыеОперации.ЗагрузитьКолонку(МассивСумм, "СуммаРасчетовКомиссии");
			КонецЕсли; 
			
		КонецЕсли; 
		
	Иначе
		
		Объект.ЭквайринговыеОперации.Очистить();
		НоваяСтрока = Объект.ЭквайринговыеОперации.Добавить();
		
		Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
			НоваяСтрока.СуммаРасчетов 				  = Объект.СуммаДокумента + Объект.СуммаКомиссииДокумента;
			НоваяСтрока.СуммаРасчетовКомиссии 		  = Объект.СуммаКомиссииДокумента;
			НоваяСтрока.СуммаПлатежаИтогоПоСтроке 	  = Объект.СуммаДокумента;
		Иначе //РасходСоСчета	
		 	НоваяСтрока.СуммаРасчетовВозврата 		  = Объект.СуммаДокумента;
			НоваяСтрока.СуммаРасчетовКомиссииВозврата = Объект.СуммаКомиссииДокумента;
			НоваяСтрока.СуммаПлатежаИтогоПоСтроке 	  = Объект.СуммаДокумента + Объект.СуммаКомиссииДокумента;
		КонецЕсли; 
		
		НоваяСтрока.ЭквайринговыйТерминал 			  = Объект.ЭквайринговыйТерминал;
		
		НоваяСтрока.НалогообложениеНДС 				  = Объект.НалогообложениеНДС;
		НоваяСтрока.УчитыватьВНУ 					  = Объект.УчитыватьВНУ;
		
		Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда //Данный реквизит присутствует только в Поступлении
			НоваяСтрока.Патент = Объект.Патент;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьРасшифровкуПлатежаПоОперациямЭквайринга(Объект);
	
	Для Каждого СтрокаОплатыКартами Из Объект.РасшифровкаПлатежа Цикл
		Если СтрокаОплатыКартами.Курс = 0 Тогда
			СтрокаОплатыКартами.Курс = 1;
		КонецЕсли;
		СтрокаОплатыКартами.СуммаПлатежаКомиссии = СтрокаОплатыКартами.СуммаРасчетовКомиссии * СтрокаОплатыКартами.Кратность / СтрокаОплатыКартами.Курс;
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает структуру настроек налогового учета эквайрингового терминала
//
Функция ПолучитьНастройкиНалоговогоУчетаТерминала(ЭквайринговыйТерминал) Экспорт
	
	СтруктураНастроекТерминала = Новый Структура;
	СтруктураНастроекТерминала.Вставить("СобственныеНастройкиНалоговогоУчета", ЭквайринговыйТерминал.СобственныеНастройкиНалоговогоУчета);
	СтруктураНастроекТерминала.Вставить("УчитыватьВНУ", ЭквайринговыйТерминал.УчитыватьВНУ);
	СтруктураНастроекТерминала.Вставить("Патент", ЭквайринговыйТерминал.Патент);
	СтруктураНастроекТерминала.Вставить("НалогообложениеНДС", ЭквайринговыйТерминал.НалогообложениеНДС);
	
	Возврат СтруктураНастроекТерминала;
	
КонецФункции


Функция ПолучитьПараметрыЭквайрингаДляДокумента(Документ) Экспорт
	
	ПараметрыЭквайринга = Новый Структура;
	
	ТипДокумента = ТипЗнч(Документ.Ссылка);
	
	Если (ТипДокумента = Тип("ДокументСсылка.ПоступлениеНаСчет") ИЛИ ТипДокумента = Тип("ДокументСсылка.РасходСоСчета"))
		И (Документ.ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти И Документ.ЭквайринговыеОперации.Количество() > 0) Тогда 
		
		// Из табличной части
		ЭквайринговыйТерминал = Документ.ЭквайринговыеОперации[0].ЭквайринговыйТерминал;
		
	Иначе 
		//Из Шапки
		ЭквайринговыйТерминал = Документ.ЭквайринговыйТерминал;
	КонецЕсли; 
	
	// Параметры договора
	ПараметрыЭквайринга.Вставить("ЭтоДоговорЭквайринга", 			ЭквайринговыйТерминал.Договор.ЭтоДоговорЭквайринга);
	ПараметрыЭквайринга.Вставить("КонтрольВзаиморасчетовЭквайринг", ЭквайринговыйТерминал.Договор.КонтрольВзаиморасчетовЭквайринг);
	ПараметрыЭквайринга.Вставить("РасчетКомиссииВОтчетеЭквайера", 	ЭквайринговыйТерминал.Договор.РасчетКомиссииВОтчетеЭквайера);
	
	Возврат  ПараметрыЭквайринга;
	
КонецФункции // ПолучитьПараметрыЭквайрингаДляДокумента()
	
Функция ЕстьДоговорыЭквайрингаСРазнесениемОплат() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	(ДоговорыКонтрагентов.ЭтоДоговорЭквайринга
		|			ИЛИ ДоговорыКонтрагентов.ЭтоДоговорКредита)
		|	И ДоговорыКонтрагентов.КонтрольВзаиморасчетовЭквайринг";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции // ЕстьДоговорыЭквайрингаСРазнесениемОплат()

// Выполняет пропорциональное распределение суммы в соответствии
// с заданными коэффициентами распределения.
//
// Параметры:
//  РаспределяемаяСумма - Число - сумма, которую надо распределить;
//  Коэффициенты - Массив - коэффициенты распределения;
//  Точность - Число - точность округления при распределении. Необязателен.
//
// Возвращаемое значение:
//  Массив - массив размерностью равный массиву коэффициентов, содержит
//           суммы в соответствии с весом коэффициента (из массива коэффициентов).
//           В случае если распределить не удалось (сумма = 0, кол-во коэффициентов = 0,
//           или суммарный вес коэффициентов = 0), тогда возвращается значение Неопределено.
//
Функция РаспределитьПропорционально(Знач РаспределяемаяСумма, Знач Коэффициенты, Знач Точность = 2) Экспорт

	Если Коэффициенты.Количество() = 0 Или Не ЗначениеЗаполнено(РаспределяемаяСумма) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИндексМаксимальногоКоэффициента = 0;
	МаксимальныйКоэффициент = 0;
	РаспределеннаяСумма = 0;
	СуммаКоэффициентов  = 0;
	
	Для Индекс = 0 По Коэффициенты.Количество() - 1 Цикл
		Коэффициент = Коэффициенты[Индекс];
		
		АбсолютноеЗначениеКоэффициента = ?(Коэффициент > 0, Коэффициент, -Коэффициент);
		Если МаксимальныйКоэффициент < АбсолютноеЗначениеКоэффициента Тогда
			МаксимальныйКоэффициент = АбсолютноеЗначениеКоэффициента;
			ИндексМаксимальногоКоэффициента = Индекс;
		КонецЕсли;
		
		СуммаКоэффициентов = СуммаКоэффициентов + Коэффициент;
	КонецЦикла;
	
	Если СуммаКоэффициентов = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Массив(Коэффициенты.Количество());
	
	Для Индекс = 0 По Коэффициенты.Количество() - 1 Цикл
		Результат[Индекс] = Окр(РаспределяемаяСумма * Коэффициенты[Индекс] / СуммаКоэффициентов, Точность, 1);
		РаспределеннаяСумма = РаспределеннаяСумма + Результат[Индекс];
	КонецЦикла;
	
	Дельта = РаспределяемаяСумма - РаспределеннаяСумма;
	
	Если Дельта > 0 Тогда 
		
		// Погрешности округления отнесем на коэффициент с максимальным весом.
		Если Не РаспределеннаяСумма = РаспределяемаяСумма Тогда
			Результат[ИндексМаксимальногоКоэффициента] = Результат[ИндексМаксимальногоКоэффициента] + Дельта;
		КонецЕсли;
		
	ИначеЕсли Дельта < 0 Тогда 
		
		// Если распределили больше чем положено, размазываем погрешность по ближайшим максимальным весам.
		ЗначениеПогрешности = 1 / Pow(10, Точность);
		КоличествоЭлементовПогрешности = -Дельта / ЗначениеПогрешности;
		
		КоэффициентыРешето = Новый Массив(Новый ФиксированныйМассив(Коэффициенты));
		
		Для Сч = 1 По КоличествоЭлементовПогрешности Цикл 
			МаксимальныйКоэффициент = МаксимальноеЗначениеВМассиве(КоэффициентыРешето);
			Индекс = КоэффициентыРешето.Найти(МаксимальныйКоэффициент);
			Результат[Индекс] = Результат[Индекс] - ЗначениеПогрешности;
			КоэффициентыРешето[Индекс] = 0;
		КонецЦикла;
		
	Иначе 
		// Если Дельта = 0, то все идеально.
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Служебная функция для распределения сумм оплат
//
Функция МаксимальноеЗначениеВМассиве(Массив)
	
	// Рассчитываем, что на вход будет получен массив, в котором все элементы либо все положительные, либо отрицательные.
	// Поэтому для определения максимального значения сравниваем абсолютное значение элемента.
	//
	// В случае, если на вход получен массив, в котором элементы с разными знаками, то максимальное значение будет
	// определено не правильно. Но этот случай оставлен для совместимости с предыдущими версиями.
	
	МаксимальноеЗначение = 0;
	Множитель            = 1;
	Для Индекс = 0 По Массив.Количество() - 1 Цикл
		Значение = Массив[Индекс];
		АбсолютноеЗначение = ?(Значение> 0, Значение, -Значение);
		Если МаксимальноеЗначение < АбсолютноеЗначение Тогда
			МаксимальноеЗначение = АбсолютноеЗначение;
			Множитель = ?(Значение > 0, 1, -1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МаксимальноеЗначение * Множитель;
	
КонецФункции

// Возвращает массив ссылок на эквайринговые терминалы,
// в которых указан переданный договор
//
// Параметры:
//  Договор - Справочник.ДоговорыКонтрагентов;
//
// Возвращаемое значение:
//  Массив - массив ссылок на терминалы.
Функция ПолучитьТерминалыПоДоговору(Договор) Экспорт
	
	ВозвращаемыйМассив = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭквайринговыеТерминалы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Договор = &Договор");
	Запрос.УстановитьПараметр("Договор", Договор);
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		ВозвращаемыйМассив.Добавить(Результат.Ссылка);
	КонецЦикла;
	
	Возврат ВозвращаемыйМассив;
	
КонецФункции

Процедура ЗаполнитьПоляКомиссии(ДокументОбъект) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ЭквайринговыйТерминал) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаВидовКартИПроцентовКомиссии = Справочники.ЭквайринговыеТерминалы.ВидыПлатежныхКартИПроцентыКомиссии(ДокументОбъект.ЭквайринговыйТерминал);
	
	МСтрок = ТаблицаВидовКартИПроцентовКомиссии.НайтиСтроки(Новый Структура("ВидПлатежнойКарты", ДокументОбъект.ВидПлатежнойКарты));
	Если МСтрок.Количество() > 0 Тогда
		ДокументОбъект.ПроцентКомиссии = МСтрок[0].ПроцентКомиссии;
		ДокументОбъект.СуммаКомиссииПоДоговору = МСтрок[0].ПроцентКомиссии * ДокументОбъект.СуммаДокумента / 100;
	Иначе
		ДокументОбъект.ПроцентКомиссии = 0;
		ДокументОбъект.СуммаКомиссииПоДоговору = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


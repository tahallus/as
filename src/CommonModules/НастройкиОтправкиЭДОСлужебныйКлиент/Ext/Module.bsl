
#Область СлужебныеПроцедурыИФункции

// Выполняет настройку регламента ЭДО.
// 
// Параметры:
// 	ПараметрыНастройки - см. НовыеПараметрыНастройкиРегламентаЭДО
// 	Владелец - Произвольный
// 	Оповещение - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана
//               после завершения настройки со следующими параметрами:
//    * Настройка - Неопределено
//                - см. НастройкиЭДОКлиентСервер.НоваяНастройкаОтправки.
//    * ДополнительныеПараметры - Произвольный - значение, которое было указано при создании объекта ОписаниеОповещения.
Процедура НастроитьРегламентЭДО(ПараметрыНастройки, Владелец = Неопределено, Оповещение = Неопределено) Экспорт
	
	ПараметрыОткрытия = ОбщегоНазначенияБЭДКлиент.НовыеПараметрыОткрытияФормы();
	ПараметрыОткрытия.Владелец = Владелец;
	ПараметрыОткрытия.ОписаниеОповещенияОЗакрытии = Оповещение;
	ПараметрыОткрытия.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОбщегоНазначенияБЭДКлиент.ОткрытьФормуБЭД("Обработка.НастройкиЭДО.Форма.НастройкаОбменаСКонтрагентом",
		ПараметрыНастройки, ПараметрыОткрытия);
		
КонецПроцедуры

// Возвращает параметры настройки регламента ЭДО.
// 
// Возвращаемое значение:
// 	Структура:
// * КлючНастроек - см. НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки
// * ИдентификаторОтправителя - Строка
// * ИдентификаторПолучателя - Строка
// * МаршрутПодписания - СправочникСсылка.МаршрутыПодписания
// * ВерсияФорматаУстановленаВручную - Булево
// * РасширенныйРежимНастройки - Булево
// * ЗаполнениеКодаТовара - Строка
// * ВыгружатьДопСведения - Булево
// * ТребуетсяПодтверждение - Булево
// * ТребуетсяИзвещение - Булево
// * СпособОбмена - ПеречислениеСсылка.СпособыОбменаЭД
// * Формат - Строка
// * НастройкаРегламентаЭДО - Булево - (служебное поле)
// * ПоказыватьДополнительныеНастройки - Булево
// * НастройкаДокумента - Булево
Функция НовыеПараметрыНастройкиРегламентаЭДО() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("КлючНастроек",                    НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки());
	Параметры.Вставить("ИдентификаторПолучателя",         "");
	Параметры.Вставить("ИдентификаторОтправителя",        "");
	Параметры.Вставить("Формат",                          "");
	Параметры.Вставить("ТребуетсяИзвещение",              Ложь);
	Параметры.Вставить("ТребуетсяПодтверждение",          Ложь);
	Параметры.Вставить("ВыгружатьДопСведения",            Ложь);
	Параметры.Вставить("ЗаполнениеКодаТовара",            "");
	Параметры.Вставить("НастройкаРегламентаЭДО",          Истина);
	Параметры.Вставить("РасширенныйРежимНастройки",       Ложь);
	Параметры.Вставить("ВерсияФорматаУстановленаВручную", Ложь);
	Параметры.Вставить("Формировать",                     Ложь);
	Параметры.Вставить("ОбменБезПодписи",                 Ложь);
	Параметры.Вставить("МаршрутПодписания",
		ПредопределенноеЗначение("Справочник.МаршрутыПодписания.ПустаяСсылка"));
	Параметры.Вставить("СпособОбмена",
		ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ПустаяСсылка"));
	Параметры.Вставить("ПоказыватьДополнительныеНастройки", Ложь);
	Параметры.Вставить("НастройкаДокумента", Ложь);
	
	Возврат Параметры;
	
КонецФункции

// Открывает форму выбора учетных записей.
// 
// Параметры:
// 	ПараметрыВыбора - см. НовыеПараметрыТранспортныхНастроек
// 	Владелец - Произвольный
// 	Оповещение - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана
//               после завершения настройки со следующими параметрами:
//    * Настройка - Неопределено
//                - см. НастройкиЭДОКлиентСервер.НоваяНастройкаОтправки.
//    * ДополнительныеПараметры - Произвольный - значение, которое было указано при создании объекта ОписаниеОповещения.
// 	Настройки - см. НастройкиЭДОКлиентСервер.НоваяНастройкаОтправки
Процедура ОткрытьТранспортныеНастройкиОтправки(ПараметрыВыбора, Владелец = Неопределено, Оповещение = Неопределено,
	Настройки = Неопределено) Экспорт
	
	ПараметрыОткрытия = ОбщегоНазначенияБЭДКлиент.НовыеПараметрыОткрытияФормы();
	ПараметрыОткрытия.Владелец = Владелец;
	ПараметрыОткрытия.ОписаниеОповещенияОЗакрытии = Оповещение;
	ПараметрыОткрытия.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	Если Настройки = Неопределено Тогда
		Настройки = НастройкиОтправкиЭДОСлужебныйВызовСервера.НастройкиОтправки(ПараметрыВыбора.КлючНастроек);
	КонецЕсли;
	
	Если Настройки <> Неопределено Тогда
		ПараметрыВыбора.МаршрутПодписания = Настройки.МаршрутПодписания;
		ПараметрыВыбора.Формат = Настройки.Формат;
		ПараметрыВыбора.ТребуетсяИзвещение = Настройки.ТребуетсяИзвещениеОПолучении;
		ПараметрыВыбора.ТребуетсяПодтверждение = Настройки.ТребуетсяОтветнаяПодпись;
		ПараметрыВыбора.ВыгружатьДопСведения = Настройки.ВыгружатьДополнительныеСведения;
		ПараметрыВыбора.ЗаполнениеКодаТовара = Настройки.ЗаполнениеКодаТовара;
		ПараметрыВыбора.ВерсияФорматаУстановленаВручную = Настройки.ВерсияФорматаУстановленаВручную;
		ПараметрыВыбора.СпособОбмена = Настройки.СпособОбмена;
		ПараметрыВыбора.Формировать = Настройки.Формировать;
		ПараметрыВыбора.ОбменБезПодписи = Настройки.ОбменБезПодписи;
	КонецЕсли;
	
	ОбщегоНазначенияБЭДКлиент.ОткрытьФормуБЭД("Обработка.НастройкиЭДО.Форма.НастройкаОбменаСКонтрагентом",
		ПараметрыВыбора, ПараметрыОткрытия);
		
КонецПроцедуры

// Возвращает параметры транспортных настроек ЭДО.
// 
// Возвращаемое значение:
// 	Структура:
// * КлючНастроек - см. НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки
// * ИдентификаторОтправителя - Строка
// * ИдентификаторПолучателя - Строка
// * НастройкаДокумента - Булево
// * ВыборУчетныхЗаписей - Булево - (служебное поле)
Функция НовыеПараметрыТранспортныхНастроек() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("КлючНастроек",             НастройкиЭДОКлиентСервер.НовыйКлючНастроекОтправки());
	Параметры.Вставить("ИдентификаторОтправителя", "");
	Параметры.Вставить("ИдентификаторПолучателя",  "");
	Параметры.Вставить("НастройкаДокумента", Ложь);
	Параметры.Вставить("ВыборУчетныхЗаписей",      Истина);
	Параметры.Вставить("ИдентификаторОтправителя", "");
	Параметры.Вставить("ИдентификаторПолучателя", "");
	Параметры.Вставить("МаршрутПодписания", ПредопределенноеЗначение("Справочник.МаршрутыПодписания.ПустаяСсылка"));
	Параметры.Вставить("Формат", "");
	Параметры.Вставить("ТребуетсяИзвещение", Ложь);
	Параметры.Вставить("ТребуетсяПодтверждение", Ложь);
	Параметры.Вставить("ВыгружатьДопСведения", Ложь);
	Параметры.Вставить("ЗаполнениеКодаТовара", "");
	Параметры.Вставить("ВерсияФорматаУстановленаВручную", Ложь);
	Параметры.Вставить("СпособОбмена", ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ПустаяСсылка"));
	Параметры.Вставить("Формировать", Ложь);
	Параметры.Вставить("ОбменБезПодписи", Ложь);
	
	Возврат Параметры;
	
КонецФункции

Процедура ОтправитьКаталогТоваров(Организация, Контрагент, ДоговорКонтрагента, УникальныйИдентификатор) Экспорт
	
	НастройкаЭДОСсылка = НастройкиОтправкиЭДОСлужебныйВызовСервера.СсылкаНаОбъектНастройкиЭДО(
		Организация, Контрагент, ДоговорКонтрагента);
		
	ИнтерфейсДокументовЭДОКлиент.СформироватьКаталогТоваров(НастройкаЭДОСсылка, УникальныйИдентификатор);
	
КонецПроцедуры

Процедура ОтправитьКаталогТоваровПослеПодбора(Результат, Контекст) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Контекст.АдресТаблицыТоваров = Результат;
		Оповещение = Новый ОписаниеОповещения("ОтправитьКаталогТоваровПослеПолученияОтпечатков", ЭтотОбъект, Контекст);
		КриптографияБЭДКлиент.ПолучитьОтпечаткиСертификатов(Оповещение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьКаталогТоваровПослеПолученияОтпечатков(Результат, Контекст) Экспорт
	
	ДлительнаяОперация = НастройкиОтправкиЭДОСлужебныйВызовСервера.НачатьОтправкуКаталогаТоваров(Контекст.НастройкаЭДО,
		Контекст.АдресТаблицыТоваров, Результат, Контекст.ИдентификаторФормы);
	
	Оповещение = Новый ОписаниеОповещения("ОтправитьКаталогТоваровПослеОбработкиДействийПоЭДО", ЭтотОбъект, Контекст);
	ЭлектронныеДокументыЭДОКлиент.ОжидатьВыполнениеДействийПоЭДО(Оповещение, ДлительнаяОперация,
		Контекст.КонтекстДиагностики);
	
КонецПроцедуры

Процедура ОтправитьКаталогТоваровПослеОбработкиДействийПоЭДО(Результат, Контекст) Экспорт
	
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Результат.КонтекстДиагностики);
	
КонецПроцедуры

Процедура СформироватьСоглашениеПоШаблону(Организация, Контрагент, ДоговорКонтрагента) Экспорт
	
	ДанныеСоглашения = НастройкиОтправкиЭДОСлужебныйВызовСервера.СоглашениеОбОбменеЭлектроннымиДокументами(
		Организация, Контрагент, ДоговорКонтрагента);
	Если ЗначениеЗаполнено(ДанныеСоглашения.АдресСоглашения) Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("АдресФайла", ДанныеСоглашения.АдресСоглашения);
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(ДанныеСоглашения.НастройкаЭДО,
			ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает ключ записи регистра сведений НастройкиОтправкиЭлектронныхДокументов.
// 
// Параметры:
// 	Отправитель - ОпределяемыйТип.Организация
// 	Получатель - ОпределяемыйТип.УчастникЭДО
// 	Договор - ОпределяемыйТип.ДоговорСКонтрагентомЭДО
// Возвращаемое значение:
// 	РегистрСведенийКлючЗаписи.УчетныеЗаписиЭДО
Функция КлючЗаписиНастроекОтправки(Отправитель, Получатель, Договор) Экспорт
	
	ЗначенияКлюча = Новый Структура;
	ЗначенияКлюча.Вставить("Отправитель", Отправитель);
	ЗначенияКлюча.Вставить("Получатель", Получатель);
	ЗначенияКлюча.Вставить("Договор", Договор);
	
	Тип = Тип("РегистрСведенийКлючЗаписи.НастройкиОтправкиЭлектронныхДокументов");
	Возврат ОбщегоНазначенияБЭДКлиент.КлючЗаписиРегистраСведений(Тип, ЗначенияКлюча);
	
КонецФункции

Процедура НастроитьРегламентЭДОПрямогоОбмена(ПараметрыНастройки, Владелец = Неопределено, Оповещение = Неопределено) Экспорт
	
	ОткрытьФорму("РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам.Форма.НастройкиРегламентаПрямогоОбмена",
		ПараметрыНастройки, Владелец,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Функция НовыеПараметрыНастройкиРегламентаПрямогоОбмена() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Организация",                     Неопределено);
	Параметры.Вставить("СпособОбмена",                    ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ПустаяСсылка"));
	Параметры.Вставить("АдресОтправителя",                "");
	Параметры.Вставить("АдресПолучателя",                 "");
	Параметры.Вставить("УчетнаяЗаписьПредставление",      "");
	Параметры.Вставить("ИдентификаторОтправителя",        "");
	Параметры.Вставить("ИдентификаторПолучателя",         "");
	Параметры.Вставить("ВидДокумента",                    ПредопределенноеЗначение("Справочник.ВидыДокументовЭДО.ПустаяСсылка"));
	Параметры.Вставить("ВерсияФормата",                   "");
	Параметры.Вставить("ИспользоватьПодпись",             Ложь);
	Параметры.Вставить("МаршрутПодписания",               ПредопределенноеЗначение("Справочник.МаршрутыПодписания.ПустаяСсылка"));
	Параметры.Вставить("ОжидатьОтветнуюПодпись",          Ложь);
	Параметры.Вставить("ОжидатьИзвещение",                Ложь);
	Параметры.Вставить("ЗаполнениеКодаТовара",            "");
	Параметры.Вставить("РасширенныйРежим",                Ложь);
	Параметры.Вставить("ВерсияФорматаУстановленаВручную", Ложь);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Определяет модуль интеграции с выбранной АТС.
// 
// Параметры:
// 	АТС
// Возвращаемое значение:
// 	CommonModule.ТелефонияItoolabs, CommonModule.ТелефонияMangoOffice, CommonModule.ТелефонияРостелеком - Описание
Функция ПриОпределенииМодуляИнтеграции(АТС) Экспорт
	
	Если Перечисления.ДоступныеАТС.ЭтоПлатформаItoolabs(АТС) Тогда
		Возврат ТелефонияItoolabs;
	КонецЕсли;
	
	МодулиИнтеграции = Новый Соответствие();
	МодулиИнтеграции.Вставить(Перечисления.ДоступныеАТС.MangoOffice, ТелефонияMangoOffice);
	МодулиИнтеграции.Вставить(Перечисления.ДоступныеАТС.Ростелеком, ТелефонияРостелеком);
	МодулиИнтеграции.Вставить(Перечисления.ДоступныеАТС.Яндекс, ТелефонияРостелеком);
	
	Возврат МодулиИнтеграции.Получить(АТС);
	
КонецФункции

// Переопределяемые настройки для формы настроек одного пользователя АТС.
// 
// Возвращаемое значение:
//  Структура
//   * ПоказыватьИсходящийНомер - Булево - Определяет видимость колонки "Исходящий номер АТС".
//
Функция НастройкиФормыПользователей() Экспорт
	
	НастройкиФормы = Новый Структура;
	НастройкиФормы.Вставить("ПоказыватьИсходящийНомер", Константы.ИспользуемаяАТС.Получить() = Перечисления.ДоступныеАТС.Яндекс);
	
	Возврат НастройкиФормы;
	
КонецФункции

#Область УстаревшиеПроцедурыИФункции

// Устарела. Будет удалена в следующей версии программы.
//
Функция СобытиеЖурналаРегистрации() Экспорт
	
	Возврат ТелефонияСервер.СобытиеЖурналаРегистрации();
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ЗаписатьЗапросВЖурналРегистрации(ВложенноеИмяСобытия, Текст, УровеньЖР = Неопределено) Экспорт
	
	ТелефонияСервер.ЗаписатьЗапросВЖурналРегистрации(ВложенноеИмяСобытия, Текст, УровеньЖР);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПриСозданииИсходящегоВызова(ДанныеЗвонка, ДанныеПользователяАТС, ПараметрыОтправки, Ошибка) Экспорт
	
	НастройкиТелефонии = ТелефонияСервер.ПолучитьНастройкиТелефонии();
	
	АТС = Константы.ИспользуемаяАТС.Получить();
	
	Если НЕ НастройкиИнтеграцииЗаполнены(АТС, НастройкиТелефонии) Тогда
		Ошибка = "НеЗаполненыНастройкиИнтеграции";
		Возврат;
	КонецЕсли;
	
	НомерКонтакта = ДанныеЗвонка.НомерКонтакта;
	НомерКонтакта = КонтактнаяИнформацияУНФ.ПреобразоватьНомерДляКонтактнойИнформации(НомерКонтакта);
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	МодульИнтеграции.ПриСозданииИсходящегоВызова(НомерКонтакта, ДанныеПользователяАТС, НастройкиТелефонии, ПараметрыОтправки, Ошибка);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПриОбработкеОтветаНаСозданиеИсходящегоВызова(HTTPОтвет, ИмяСобытияДляЖурналаРегистрации) Экспорт
	
	ЗаголовокОшибки = Неопределено;
	ТекстОшибки = Неопределено;
	
	АТС = Константы.ИспользуемаяАТС.Получить();
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	МодульИнтеграции.ПриОбработкеОтветаНаСозданиеИсходящегоВызова(HTTPОтвет, ЗаголовокОшибки, ТекстОшибки);
	
	Если НЕ ЗначениеЗаполнено(ЗаголовокОшибки) И НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = СтрШаблон("%1%2%3", ЗаголовокОшибки, Символы.ПС, ТекстОшибки);
	ЗаписатьЗапросВЖурналРегистрации(ИмяСобытияДляЖурналаРегистрации, ТекстОшибки);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
//
Функция СсылкаНаЗаписьРазговора(ДанныеЗвонка, Ошибка) Экспорт
	
	АТС = Константы.ИспользуемаяАТС.Получить();
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	Возврат МодульИнтеграции.СсылкаНаЗаписьРазговора(ДанныеЗвонка, Ошибка);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
//
Функция КорневойURLСервисаОсновнойПубликации(АТС) Экспорт
	
	ШаблонURL = "";
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	ШаблонURL = МодульИнтеграции.ШаблонURLHTTPСервиса();
	
	Возврат СтрШаблон("telephony/%1", ШаблонURL);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
//
Функция КорневойАдресАТС() Экспорт
	
	АТС = Константы.ИспользуемаяАТС.Получить();
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	Возврат МодульИнтеграции.КорневойАдрес();
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПоказУведомленияОНовомЗвонкеНеИспользуетсяВ(СписокАТС) Экспорт
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
//
Функция КорректнаяПодписьЗапроса(АТС, ПодписьЗапроса, ПараметрыЗапроса = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	Возврат МодульИнтеграции.КорректнаяПодписьЗапроса(ПодписьЗапроса, ПараметрыЗапроса);
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПриПолученииАдресаОбратногоВызова(АТС, ШаблонСтрокиПодключения, ПараметрыПодключения, АдресОбратногоВызова) Экспорт
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	МодульИнтеграции.ПриПолученииАдресаОбратногоВызова(ШаблонСтрокиПодключения, ПараметрыПодключения, АдресОбратногоВызова);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПриОбработкеПолученияИнформацииОВызывающемАбоненте(АТС, ДанныеАбонента, Ответ) Экспорт
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	МодульИнтеграции.ПриОбработкеПолученияИнформацииОВызывающемАбоненте(ДанныеАбонента, Ответ);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НастройкиИнтеграцииЗаполнены(АТС, НастройкиТелефонии)
	
	МодульИнтеграции = ТелефонияСервер.МодульИнтеграции(АТС);
	Возврат МодульИнтеграции.НастройкиИнтеграцииЗаполнены(АТС, НастройкиТелефонии);
	
КонецФункции

#КонецОбласти

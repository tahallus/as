///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "Персонал".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура устанавливает период регистрации на начало месяца.
// А так же обновляет надпись периода на форме
//
// Параметры:
//  ПереданнаяФорма - Форма - форма документа.
//
Процедура ПриИзмененииПериодаРегистрации(ПереданнаяФорма) Экспорт
	
	Если СтрНайти(ПереданнаяФорма.ИмяФормы, "ЖурналДокументов") > 0 
		ИЛИ СтрНайти(ПереданнаяФорма.ИмяФормы, "ФормаОтчета") Тогда
		ПереданнаяФорма.ПериодРегистрации 				= НачалоМесяца(ПереданнаяФорма.ПериодРегистрации);
		ПереданнаяФорма.ОтображениеПериодаРегистрации 	= Формат(ПереданнаяФорма.ПериодРегистрации, НСтр("ru = 'ДФ=''MMMM yyyy'''"));
	ИначеЕсли СтрНайти(ПереданнаяФорма.ИмяФормы, "ФормаСписка") > 0 Тогда
		ПереданнаяФорма.ОтборПериодРегистрации 			= НачалоМесяца(ПереданнаяФорма.ОтборПериодРегистрации);
		ПереданнаяФорма.ОтображениеПериодаРегистрации 	= Формат(ПереданнаяФорма.ОтборПериодРегистрации, НСтр("ru = 'ДФ=''MMMM yyyy'''"));
	Иначе
		ПереданнаяФорма.Объект.ПериодРегистрации 		= НачалоМесяца(ПереданнаяФорма.Объект.ПериодРегистрации);
		ПереданнаяФорма.ОтображениеПериодаРегистрации 	= Формат(ПереданнаяФорма.Объект.ПериодРегистрации, НСтр("ru = 'ДФ=''MMMM yyyy'''"));
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииПериодаРегистрации()

// Процедура выполняет приращение даты по кнопкам регулирования
// Используется в журнале и документах зарплаты, Расход ДС из кассы, отчетах Расчетные листки
// Шаг равняется месяцу
//
// Параметры:
//   ПереданнаяФорма 	- Форма - форма, данные которой правятся
//   Направление 		- Число - значение приращения, может быть положительным и отрицательным
//
Процедура ПриРегулированииПериодаРегистрации(ПереданнаяФорма, Направление) Экспорт
	
	Если СтрНайти(ПереданнаяФорма.ИмяФормы, "ЖурналДокументов") > 0 
		ИЛИ СтрНайти(ПереданнаяФорма.ИмяФормы, "ФормаОтчета") Тогда
		
		ПереданнаяФорма.ПериодРегистрации = ?(ЗначениеЗаполнено(ПереданнаяФорма.ПериодРегистрации), 
							ДобавитьМесяц(ПереданнаяФорма.ПериодРегистрации, Направление),
							ДобавитьМесяц(НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()), Направление));
		
	ИначеЕсли СтрНайти(ПереданнаяФорма.ИмяФормы, "ФормаСписка") > 0 Тогда
		
		ПереданнаяФорма.ОтборПериодРегистрации = ?(ЗначениеЗаполнено(ПереданнаяФорма.ОтборПериодРегистрации), 
							ДобавитьМесяц(ПереданнаяФорма.ОтборПериодРегистрации, Направление),
							ДобавитьМесяц(НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()), Направление));
		
	Иначе
		
		ПереданнаяФорма.Объект.ПериодРегистрации = ?(ЗначениеЗаполнено(ПереданнаяФорма.Объект.ПериодРегистрации), 
							ДобавитьМесяц(ПереданнаяФорма.Объект.ПериодРегистрации, Направление),
							ДобавитьМесяц(НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()), Направление));
		
	КонецЕсли;
	
КонецПроцедуры // ПриРегулированииПериодаРегистрации()

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Процедура подставляет счет затрат по умолчанию при выборе начисления
// в табличной части документа.
//
// Параметры:
//  ФормаДокумента - ПараметрыУказанияСерий - Содержит форму документа, реквизиты
//                 которой обрабатываются процедурой.
//
//  СтруктурнаяЕдиница - СправочникСсылка.СтруктурныеЕдиницы - Подразделение, 
//                 в разрезе которого определяем счет затрат
//
Процедура СчетЗатратПоУмолчаниюВТекущуюСтроку(ФормаДокумента, СтруктурнаяЕдиница = Неопределено, ИмяТабличнойЧасти = "НачисленияУдержания") Экспорт
	
	ДанныеТекущейСтроки = ФормаДокумента.Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура("СчетЗатрат, ТипСчета");
	СтруктураПараметров.Вставить("ВидНачисленияУдержания", ДанныеТекущейСтроки.ВидНачисленияУдержания);
	СтруктураПараметров.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	Если ЗначениеЗаполнено(ДанныеТекущейСтроки.ВидНачисленияУдержания) Тогда
		
		ЗарплатаИПерсоналСлужебный.ПолучитьСчетЗатратВидаНачисления(СтруктураПараметров);
		ДанныеТекущейСтроки.СчетЗатрат = СтруктураПараметров.СчетЗатрат;
		
	КонецЕсли;
	
	Если ДанныеТекущейСтроки.Свойство("ТипСчета") Тогда
		
		ДанныеТекущейСтроки.ТипСчета = СтруктураПараметров.ТипСчета;
		
	КонецЕсли;
	
КонецПроцедуры // СчетЗатратПоУмолчаниюВТекущуюСтроку()

// Устанавливает отбор при выборе счета затрат в документах
//
// Параметры:
//  ФормаДокумента - ПараметрыУказанияСерий - Содержит форму документа, реквизиты
//                 которой обрабатываются процедурой.
//
//  ИмяТабличнойЧасти - Строка - Имя элемента формы. 
//                 Если не указано, то считается, что работа происходит с табличной частью "НачисленияУдержания"
//                 
Процедура ПараметрыВыбораСчетаЗатрат(ФормаДокумента, ИмяТабличнойЧасти = "НачисленияУдержания") Экспорт
	
	ДанныеТекущейСтроки = ФормаДокумента.Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ВидНачисленияУдержания", 
		?(ДанныеТекущейСтроки = Неопределено, Неопределено, ДанныеТекущейСтроки.ВидНачисленияУдержания));
	
	ЗарплатаУНФВызовСервера.ПолучитьДанныеДляВыбораСчетаРасчетов(СтруктураДанных);
	
	НовыйМассив = Новый Массив;
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипСчета", Новый ФиксированныйМассив(СтруктураДанных.ДоступныеТипыСчетовУчета));
	НовыйМассив.Добавить(НовыйПараметр);
	ФормаДокумента.Элементы[ИмяТабличнойЧасти + "СчетЗатрат"].ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
	
КонецПроцедуры // ПараметрыВыбораСчетаЗатрат()

#КонецОбласти
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Справочник.ФизическиеЛица";
	НовыеСведения.ПоляРегистрации	= "Ссылка";
	НовыеСведения.ПоляДоступа		= "ДатаРождения";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрСведений.ДокументыФизическихЛиц";
	НовыеСведения.ПоляРегистрации	= "Физлицо";
	НовыеСведения.ПоляДоступа		= "ВидДокумента,Серия,Номер,ДатаВыдачи,СрокДействия,КемВыдан,КодПодразделения,Представление";
	НовыеСведения.ОбластьДанных		= "ПаспортныеДанные";
	
КонецПроцедуры

Процедура ЗаполнитьОбластиПерсональныхДанных(ОбластиПерсональныхДанных) Экспорт
	
	НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
	НоваяОбласть.Имя = "ЛичныеДанные";
	НоваяОбласть.Представление = НСтр("ru = 'Личные данные'");
	
	НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
	НоваяОбласть.Имя = "ПаспортныеДанные";
	НоваяОбласть.Представление = НСтр("ru = 'Паспортные данные'");
	НоваяОбласть.Родитель = "ЛичныеДанные";
	
КонецПроцедуры

Процедура ДополнитьДанныеСубъектовПерсональныхДанных(СубъектыПерсональныхДанных, ДатаАктуальности) Экспорт
	
	Для каждого ДанныеСубъекта Из СубъектыПерсональныхДанных Цикл
		
		// ДанныеСубъекта.Субъект
		// ДанныеСубъекта.ФИО
		// ДанныеСубъекта.Адрес
		// ДанныеСубъекта.ПаспортныеДанные
		
		СубъектСсылка = ДанныеСубъекта.Субъект;
		Если ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			
			ЗаполнитьДанныеПоФизическомуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		ИначеЕсли ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.Сотрудники") Тогда
			
			ЗаполнитьДанныеПоСотруднику(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		ИначеЕсли ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
			
			ЗаполнитьДанныеПоКонтактномуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		ИначеЕсли ТипЗнч(СубъектСсылка) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			ЗаполнитьДанныеПоКонтрагенту(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьДанныеОрганизацииОператораПерсональныхДанных(Организация, ДанныеОрганизации, ДатаАктуальности) Экспорт
	
	Если НЕ УправлениеДоступом.ЧтениеРазрешено(Организация) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Организация, ДатаАктуальности);
	ДанныеОрганизации.АдресОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес");
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		
		ДанныеОрганизации.ОтветственныйЗаОбработкуПерсональныхДанных = Организация.ПодписьРуководителя.ФизическоеЛицо;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередСкрытиемПерсональныхДанныхСубъектов(Субъекты, ТаблицаИсключений, Отказ) Экспорт
	
	Отказ = Ложь; // АПК:144 проектное решение
	
	ПричинаОтменыСкрытия = НСтр("ru = 'Субъект оформлен по ТК РФ'");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Субъекты", Субъекты);
	
	// АПК:96 -выкл результат должен содержать уникальные значения
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеЗарплатыНачисленияУдержания.Сотрудник.Физлицо КАК ФизическоеЛицо
	|ИЗ Документ.НачислениеЗарплаты.НачисленияУдержания КАК НачислениеЗарплатыНачисленияУдержания
	|ГДЕ НачислениеЗарплатыНачисленияУдержания.Сотрудник.Физлицо В(&Субъекты)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеЗарплатыНалогиНаДоходы.Сотрудник.Физлицо
	|ИЗ Документ.НачислениеЗарплаты.НалогиНаДоходы КАК НачислениеЗарплатыНалогиНаДоходы
	|ГДЕ НачислениеЗарплатыНалогиНаДоходы.Сотрудник.Физлицо В(&Субъекты)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеЗарплатыПогашениеЗаймов.Сотрудник.Физлицо
	|ИЗ Документ.НачислениеЗарплаты.ПогашениеЗаймов КАК НачислениеЗарплатыПогашениеЗаймов
	|ГДЕ НачислениеЗарплатыПогашениеЗаймов.Сотрудник.Физлицо В(&Субъекты)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеЗарплатыВзносы.Сотрудник.Физлицо
	|ИЗ Документ.НачислениеЗарплаты.Взносы КАК НачислениеЗарплатыВзносы
	|ГДЕ НачислениеЗарплатыВзносы.Сотрудник.Физлицо В(&Субъекты)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеЗарплатыПримененныеВычетыПоНДФЛ.Сотрудник.Физлицо
	|ИЗ Документ.НачислениеЗарплаты.ПримененныеВычетыПоНДФЛ КАК НачислениеЗарплатыПримененныеВычетыПоНДФЛ
	|ГДЕ НачислениеЗарплатыПримененныеВычетыПоНДФЛ.Сотрудник.Физлицо В(&Субъекты)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РССотрудники.Сотрудник.Физлицо КАК ФизическоеЛицо
	|ИЗ РегистрСведений.Сотрудники КАК РССотрудники
	|ГДЕ РССотрудники.Сотрудник.Физлицо В(&Субъекты)";
	
	// АПК:96 -вкл
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НовоеИсключение = ТаблицаИсключений.Добавить();
		НовоеИсключение.Субъект					= Выборка.ФизическоеЛицо;
		НовоеИсключение.ПричинаОтменыСкрытия	= ПричинаОтменыСкрытия;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФИОФизическогоЛица(ФизическоеЛицо, ФИО) Экспорт
	
	ФИО = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(ТекущаяДатаСеанса(), ФизическоеЛицо);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДанныеПоФизическомуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности) 
	
	ФИО = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(ДатаАктуальности, СубъектСсылка);
	
	ДанныеСубъекта.ФИО = ?(ПустаяСтрока(ФИО), СубъектСсылка.Наименование, ФИО);
	ДанныеСубъекта.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СубъектСсылка, Справочники.ВидыКонтактнойИнформации.АдресФизЛицаПоПрописке);
	
	ДокументыФизическихЛиц = Справочники.ФизическиеЛица.ДокументФизЛицаПоВиду(ДатаАктуальности, СубъектСсылка, Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	Если ДокументыФизическихЛиц.Количество() > 0 Тогда
		
		ДанныеСубъекта.ПаспортныеДанные	= ДокументыФизическихЛиц[0].Представление;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоСотруднику(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности) 
	
	Если ЗначениеЗаполнено(СубъектСсылка.Физлицо) Тогда
		
		ЗаполнитьДанныеПоФизическомуЛицу(ДанныеСубъекта, СубъектСсылка.Физлицо, ДатаАктуальности)
		
	Иначе
		
		ДанныеСубъекта.ФИО = СубъектСсылка.Наименование;
		ДанныеСубъекта.Адрес = "";
		ДанныеСубъекта.ПаспортныеДанные = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоКонтактномуЛицу(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности)
	
	ДанныеСубъекта.ФИО = СубъектСсылка.Наименование;
	ДанныеСубъекта.Адрес = "";
	ДанныеСубъекта.ПаспортныеДанные = СубъектСсылка.ДокументУдостоверяющийЛичность;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоКонтрагенту(ДанныеСубъекта, СубъектСсылка, ДатаАктуальности)
	
	Если СубъектСсылка.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо Тогда
		
		ДанныеСубъекта.ФИО = СубъектСсылка.Наименование;
		ДанныеСубъекта.ПаспортныеДанные = "";
		
	ИначеЕсли СубъектСсылка.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ФизическоеЛицо
		ИЛИ СубъектСсылка.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ИндивидуальныйПредприниматель Тогда
		
		ДанныеСубъекта.ФИО = СубъектСсылка.ФИО;
		Если ПустаяСтрока(ДанныеСубъекта.ФИО)
			И ЗначениеЗаполнено(СубъектСсылка.КонтактноеЛицо) Тогда
			
			ДанныеСубъекта.ФИО = СубъектСсылка.КонтактноеЛицо.Наименование;
			
		КонецЕсли;
		
		ДанныеСубъекта.ПаспортныеДанные = СубъектСсылка.ДокументУдостоверяющийЛичность;
		Если ПустаяСтрока(ДанныеСубъекта.ПаспортныеДанные)
			И ЗначениеЗаполнено(СубъектСсылка.КонтактноеЛицо) Тогда
			
			ДанныеСубъекта.ПаспортныеДанные = СубъектСсылка.КонтактноеЛицо.ДокументУдостоверяющийЛичность;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСубъекта.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СубъектСсылка, 
		Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, ТекущаяДатаСеанса());
	
КонецПроцедуры

#КонецОбласти

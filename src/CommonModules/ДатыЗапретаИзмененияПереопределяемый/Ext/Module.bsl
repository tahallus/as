///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Позволяет изменить работу интерфейса при встраивании.
//
// Параметры:
//  НастройкиРаботыИнтерфейса - Структура:
//   * ИспользоватьВнешнихПользователей - Булево - начальное значение Ложь,
//     если установить Истина, тогда даты запрета можно будет настраивать для внешних пользователей.
//
Процедура НастройкаИнтерфейса(НастройкиРаботыИнтерфейса) Экспорт
	
	НастройкиРаботыИнтерфейса.ИспользоватьВнешнихПользователей = Ложь;
	
КонецПроцедуры

// Заполняет разделы дат запрета изменения, используемые при настройке дат запрета.
// Если не указать ни одного раздела, тогда будет доступна только настройка общей даты запрета.
//
// Параметры:
//  Разделы - ТаблицаЗначений:
//   * Имя - Строка - имя, используемое в описании источников данных в
//       процедуре ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения.
//
//   * Идентификатор - УникальныйИдентификатор - идентификатор ссылки элемента плана видов характеристик.
//       Чтобы получить идентификатор, нужно в режиме 1С:Предприятие выполнить метод платформы:
//       "ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПолучитьСсылку().УникальныйИдентификатор()".
//       Не следует указывать идентификаторы, полученные любым другим способом,
//       так как это может нарушить их уникальность.
//
//   * Представление - Строка - представляет раздел в форме настройки дат запрета.
//
//   * ТипыОбъектов  - Массив - типы ссылок объектов, в разрезе которых можно настроить даты запрета,
//       например Тип("СправочникСсылка.Организации"); если не указано ни одного типа,
//       то даты запрета будут настраиваться только с точностью до раздела.
//
Процедура ПриЗаполненииРазделовДатЗапретаИзменения(Разделы) Экспорт
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "УправленческийУчет";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("9b115778-61b1-47db-afc0-1c92191545cd");
	Раздел.Представление = НСтр("ru = 'Управленческий учет'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.Организации"));
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "ЗаказыПоставщиков";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("70411f9a-cdb8-48ed-adee-c3f0368a09c7");
	Раздел.Представление = НСтр("ru = 'Заказы поставщиков'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.СостоянияЗаказовПоставщикам"));
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "ЗаказыПокупателей";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("5fcbf40d-10b5-4019-a07d-c62cfa1ba3b2");
	Раздел.Представление = НСтр("ru = 'Заказы покупателей'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.СостоянияЗаказовПокупателей"));
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "ЗаказНаПроизводство";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("0e5919e2-ea5d-4fa4-aa5c-ed4b1b4b9fbe");
	Раздел.Представление = НСтр("ru = 'Заказ на производство'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.СостоянияЗаказовНаПроизводство"));
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "ЗаказНаряд";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("e61bbaff-fd48-4140-bb9e-25141219d52e");
	Раздел.Представление = НСтр("ru = 'Заказ-наряд'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.СостоянияЗаказНарядов"));
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "ЗаказНаПеремещение";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("cb5c8b98-21fc-4f82-becd-49c8acea5043");
	Раздел.Представление = НСтр("ru = 'Заказ на перемещение'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.СостоянияЗаказовНаПеремещение"));
	
КонецПроцедуры

// Позволяет задать таблицы и поля объектов для проверки запрета изменения данных.
// Для добавления нового источника в ИсточникиДанных см. ДатыЗапретаИзменения.ДобавитьСтроку.
//
// Вызывается из процедуры ИзменениеЗапрещено общего модуля ДатыЗапретаИзменения,
// используемой в подписке на событие ПередЗаписью объекта для проверки наличия
// запретов и отказа от изменений запрещенного объекта.
//
// Параметры:
//  ИсточникиДанных - ТаблицаЗначений:
//   * Таблица     - Строка - полное имя объекта метаданных,
//                   например Метаданные.Документы.ПриходнаяНакладная.ПолноеИмя().
//   * ПолеДаты    - Строка - имя реквизита объекта или табличной части,
//                   например: "Дата", "Товары.ДатаОтгрузки".
//   * Раздел      - Строка - имя раздела дат запрета, указанного в
//                   процедуре ПриЗаполненииРазделовДатЗапретаИзменения (см. выше).
//   * ПолеОбъекта - Строка - имя реквизита объекта или реквизита табличной части,
//                   например: "Организация", "Товары.Склад".
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДокументыСПолемОрганизация = Новый Массив;
	ДокументыСПолемОрганизация.Добавить("Документ.АвансовыйОтчет");
	ДокументыСПолемОрганизация.Добавить("Документ.АктВыполненныхРабот");
	ДокументыСПолемОрганизация.Добавить("Документ.АмортизацияВА");
	ДокументыСПолемОрганизация.Добавить("Документ.Бюджет");
	ДокументыСПолемОрганизация.Добавить("Документ.ВводНачальныхОстатков");
	ДокументыСПолемОрганизация.Добавить("Документ.Взаимозачет");
	ДокументыСПолемОрганизация.Добавить("Документ.ВыработкаВА");
	ДокументыСПолемОрганизация.Добавить("Документ.Доверенность");
	ДокументыСПолемОрганизация.Добавить("Документ.ДополнительныеРасходы");
	ДокументыСПолемОрганизация.Добавить("Документ.ЗаданиеНаРаботу");
	ДокументыСПолемОрганизация.Добавить("Документ.ЗакрытиеМесяца");
	ДокументыСПолемОрганизация.Добавить("Документ.ИзменениеПараметровВА");
	ДокументыСПолемОрганизация.Добавить("Документ.ИнвентаризацияЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.КадровоеПеремещение");
	ДокументыСПолемОрганизация.Добавить("Документ.НачислениеЗарплаты");
	ДокументыСПолемОрганизация.Добавить("Документ.НачислениеНалогов");
	ДокументыСПолемОрганизация.Добавить("Документ.Операция");
	ДокументыСПолемОрганизация.Добавить("Документ.ОприходованиеЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.ОтчетКомиссионера");
	ДокументыСПолемОрганизация.Добавить("Документ.ОтчетКомитенту");
	ДокументыСПолемОрганизация.Добавить("Документ.ОтчетОПереработке");
	ДокументыСПолемОрганизация.Добавить("Документ.ОтчетОРозничныхПродажах");
	ДокументыСПолемОрганизация.Добавить("Документ.ОтчетПереработчика");
	ДокументыСПолемОрганизация.Добавить("Документ.ПередачаВА");
	ДокументыСПолемОрганизация.Добавить("Документ.ПеремещениеДС");
	ДокументыСПолемОрганизация.Добавить("Документ.ПеремещениеДСПлан");
	ДокументыСПолемОрганизация.Добавить("Документ.ПеремещениеЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.ПеремещениеПоЯчейкам");
	ДокументыСПолемОрганизация.Добавить("Документ.ПереоценкаВРозницеСуммовойУчет");
	ДокументыСПолемОрганизация.Добавить("Документ.ПланПродаж");
	ДокументыСПолемОрганизация.Добавить("Документ.ПлатежнаяВедомость");
	ДокументыСПолемОрганизация.Добавить("Документ.ПлатежноеПоручение");
	ДокументыСПолемОрганизация.Добавить("Документ.ПоступлениеВКассу");
	ДокументыСПолемОрганизация.Добавить("Документ.ПоступлениеДСПлан");
	ДокументыСПолемОрганизация.Добавить("Документ.ПоступлениеНаСчет");
	ДокументыСПолемОрганизация.Добавить("Документ.ПриемНаРаботу");
	ДокументыСПолемОрганизация.Добавить("Документ.ПринятиеКУчетуВА");
	ДокументыСПолемОрганизация.Добавить("Документ.ПриходнаяНакладная");
	ДокументыСПолемОрганизация.Добавить("Документ.ПриходныйОрдер");
	ДокументыСПолемОрганизация.Добавить("Документ.ПрочиеРасходы");
	ДокументыСПолемОрганизация.Добавить("Документ.РаспределениеЗатрат");
	ДокументыСПолемОрганизация.Добавить("Документ.РасходДСПлан");
	ДокументыСПолемОрганизация.Добавить("Документ.РасходИзКассы");
	ДокументыСПолемОрганизация.Добавить("Документ.РасходнаяНакладная");
	ДокументыСПолемОрганизация.Добавить("Документ.РасходныйОрдер");
	ДокументыСПолемОрганизация.Добавить("Документ.РасходСоСчета");
	ДокументыСПолемОрганизация.Добавить("Документ.РасходыПриИмпорте");
	ДокументыСПолемОрганизация.Добавить("Документ.РезервированиеЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.СборкаЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.СдельныйНаряд");
	ДокументыСПолемОрганизация.Добавить("Документ.СписаниеВА");
	ДокументыСПолемОрганизация.Добавить("Документ.СписаниеЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.СчетНаОплату");
	ДокументыСПолемОрганизация.Добавить("Документ.СчетНаОплатуПоставщика");
	ДокументыСПолемОрганизация.Добавить("Документ.СчетФактура");
	ДокументыСПолемОрганизация.Добавить("Документ.СчетФактураПолученный");
	ДокументыСПолемОрганизация.Добавить("Документ.Табель");
	ДокументыСПолемОрганизация.Добавить("Документ.Увольнение");
	ДокументыСПолемОрганизация.Добавить("Документ.УчетВремени");
	ДокументыСПолемОрганизация.Добавить("Документ.ЧекККМ");
	ДокументыСПолемОрганизация.Добавить("Документ.ЧекККМВозврат");
	ДокументыСПолемОрганизация.Добавить("Документ.ОперацияПоПлатежнымКартам");
	ДокументыСПолемОрганизация.Добавить("Документ.ДоговорКредитаИЗайма");
	ДокументыСПолемОрганизация.Добавить("Документ.НачисленияПоКредитамИЗаймам");
	ДокументыСПолемОрганизация.Добавить("Документ.КорректировкаПоступления");
	ДокументыСПолемОрганизация.Добавить("Документ.КорректировкаРеализации");
	ДокументыСПолемОрганизация.Добавить("Документ.ПересортицаЗапасов");
	ДокументыСПолемОрганизация.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	ДокументыСПолемОрганизация.Добавить("Документ.КомплектацияЗапасов");
	
	Для Каждого ТекДокумент Из ДокументыСПолемОрганизация Цикл
		ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, ТекДокумент, "Дата", "УправленческийУчет", "Организация");
	КонецЦикла;

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПередачаТоваровМеждуОрганизациями", "Дата",
		"УправленческийУчет", "ОрганизацияПолучатель");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УстановкаЦенНоменклатуры", "Дата",
		"УправленческийУчет");
	
	// Дополнительные разделы для заказов
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаказНаПеремещение", "Дата", "ЗаказНаПеремещение",
		"СостояниеЗаказа");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаказНаПроизводство", "Дата", "ЗаказНаПроизводство",
		"СостояниеЗаказа");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаказПокупателя", "Дата", "ЗаказыПокупателей",
		"СостояниеЗаказа");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаказПокупателя", "Дата", "ЗаказНаряд",
		"СостояниеЗаказа");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаказПоставщику", "Дата", "ЗаказыПоставщиков",
		"СостояниеЗаказа");
	
КонецПроцедуры

// Позволяет переопределить выполнение проверки запрета изменения произвольным образом.
//
// Если проверка выполняется в процессе записи документа, то в свойстве ДополнительныеСвойства документа Объект
// имеется свойство РежимЗаписи.
//  
// Параметры:
//  Объект       - СправочникОбъект
//               - ДокументОбъект
//               - ПланВидовХарактеристикОбъект
//               - ПланСчетовОбъект
//               - ПланВидовРасчетаОбъект
//               - БизнесПроцессОбъект
//               - ЗадачаОбъект
//               - ПланОбменаОбъект
//               - РегистрСведенийНаборЗаписей
//               - РегистрНакопленияНаборЗаписей
//               - РегистрБухгалтерииНаборЗаписей
//               - РегистрРасчетаНаборЗаписей - проверяемый элемент данных или набор записей 
//                 (который передается из обработчиков ПередЗаписью и ПриЧтенииНаСервере).
//
//  ПроверкаЗапретаИзменения    - Булево - установить в Ложь, чтобы пропустить проверку запрета изменения данных.
//  УзелПроверкиЗапретаЗагрузки - ПланОбменаСсылка
//                              - Неопределено - установить в Неопределено, чтобы 
//                                пропустить проверку запрета загрузки данных.
//  ВерсияОбъекта               - Строка - установить "СтараяВерсия" или "НоваяВерсия", чтобы
//                                выполнить проверку только старой (в базе данных) 
//                                или только новой версии объекта (в параметре Объект).
//                                По умолчанию содержит значение "" - проверяются обе версии объекта сразу.
//
Процедура ПередПроверкойЗапретаИзменения(Объект,
                                         ПроверкаЗапретаИзменения,
                                         УзелПроверкиЗапретаЗагрузки,
                                         ВерсияОбъекта) Экспорт
	
	//Если Объект.Метаданные().ПолноеИмя() = "Документ.ЗаказПокупателя" Тогда
	//	
	//	ПроверкаЗапретаИзменения = Ложь;
	//	
	//КонецЕсли;
	
КонецПроцедуры

// Позволяет переопределить получение данных для проверки даты запрета старой (существующей) версии данных.
//
// Параметры:
//  ОбъектМетаданных - ОбъектМетаданных - объект метаданных получаемых данных.
//  ИдентификаторДанных - СправочникСсылка
//                      - ДокументСсылка
//                      - ПланВидовХарактеристикСсылка
//                      - ПланСчетовСсылка
//                      - ПланВидовРасчетаСсылка
//                      - БизнесПроцессСсылка
//                      - ЗадачаСсылка
//                      - ПланОбменаСсылка
//                      - Отбор - ссылка на элемент данных или отбор набора записей, который нужно проверить.
//                                При этом значение для проверки будет получено из базы данных.
//
//  УзелПроверкиЗапретаЗагрузки - Неопределено
//                              - ПланОбменаСсылка - если Неопределено, то проверить запрет 
//                                изменения данных; иначе - загрузку данных из указанного узла плана обмена.
//
//  ДанныеДляПроверки - см. ДатыЗапретаИзменения.ШаблонДанныхДляПроверки.
//
//  Пример:
//  Если ТипЗнч(ИдентификаторДанных) = Тип("ДокументСсылка.Заказ") Тогда
//  	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИдентификаторДанных, "Организация, ДатаОкончанияРабот, ЗаказНаряд");
//  	Если Данные.ЗаказНаряд Тогда
//  		Проверка = ДанныеДляПроверки.Добавить();
//  		Проверка.Раздел = "ЗаказНаряды";
//  		Проверка.Объект =  Данные.Организация;
//  		Проверка.Дата   = Данные.ДатаОкончанияРабот;
//  	КонецЕсли;
//  КонецЕсли;
//
Процедура ПередПроверкойСтаройВерсииДанных(ОбъектМетаданных, ИдентификаторДанных, УзелПроверкиЗапретаЗагрузки, ДанныеДляПроверки) Экспорт
	
	Если ТипЗнч(ИдентификаторДанных) <> Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИдентификаторДанных, "ВидОперации, Финиш, Дата, СостояниеЗаказа");
	
	ЭтоЗаказНаряд		= (Данные.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд);
	
	ИмяРаздела			= ?(ЭтоЗаказНаряд, "ЗаказНаряд", "ЗаказыПокупателей");
	ДатаПроверки		= ?(ЭтоЗаказНаряд, Данные.Финиш, Данные.Дата);
	
	НоваяСтрока			= ДанныеДляПроверки.Добавить();
	НоваяСтрока.Дата	= ДатаПроверки;
	Новаястрока.Раздел	= ИмяРаздела;
	НоваяСтрока.Объект	= Данные.СостояниеЗаказа;
	
КонецПроцедуры

// Позволяет переопределить получение данных для проверки даты запрета новой (будущей) версии данных.
//
// Параметры:
//  ОбъектМетаданных - ОбъектМетаданных - объект метаданных получаемых данных.
//  Данные  - СправочникОбъект
//          - ДокументОбъект
//          - ПланВидовХарактеристикОбъект
//          - ПланСчетовОбъект
//          - ПланВидовРасчетаОбъект
//          - БизнесПроцессОбъект
//          - ЗадачаОбъект
//          - ПланОбменаОбъект
//          - РегистрСведенийНаборЗаписей
//          - РегистрНакопленияНаборЗаписей
//          - РегистрБухгалтерииНаборЗаписей
//          - РегистрРасчетаНаборЗаписей - проверяемый элемент данных или набор записей.
//
//  УзелПроверкиЗапретаЗагрузки - Неопределено
//                              - ПланОбменаСсылка - если Неопределено, то проверить запрет 
//                                изменения данных; иначе - загрузку данных из указанного узла плана обмена.
//
//  ДанныеДляПроверки - см. ДатыЗапретаИзменения.ШаблонДанныхДляПроверки.
//
//  Пример:
//  Если ТипЗнч(Данные) = Тип("ДокументОбъект.Заказ") И Данные.ЗаказНаряд Тогда
//  	
//  	Проверка = ДанныеДляПроверки.Добавить();
//  	Проверка.Раздел = "ЗаказНаряды";
//  	Проверка.Объект =  Данные.Организация;
//  	Проверка.Дата   = Данные.ДатаОкончанияРабот;
//  	
//  КонецЕсли;
//
Процедура ПередПроверкойНовойВерсииДанных(ОбъектМетаданных, Данные, УзелПроверкиЗапретаЗагрузки, ДанныеДляПроверки) Экспорт
	
	Если ТипЗнч(Данные) <> Тип("ДокументОбъект.ЗаказПокупателя") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЭтоЗаказНаряд		= (Данные.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд);
	
	ИмяРаздела			= ?(ЭтоЗаказНаряд, "ЗаказНаряд", "ЗаказыПокупателей");
	ДатаПроверки		= ?(ЭтоЗаказНаряд, Данные.Финиш, Данные.Дата);
	
	НоваяСтрока			= ДанныеДляПроверки.Добавить();
	НоваяСтрока.Дата	= ДатаПроверки;
	Новаястрока.Раздел	= ИмяРаздела;
	НоваяСтрока.Объект	= Данные.СостояниеЗаказа;
	
КонецПроцедуры

#КонецОбласти
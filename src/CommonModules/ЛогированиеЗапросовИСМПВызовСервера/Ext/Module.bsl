#Область СлужебныйПрограммныйИнтерфейс

// Получает содержимое текущего лога запросов и помещает во временной хранилище.
// 
// Параметры:
// 	УникальныйИдентификаторФормы - УникальныйИдентификатор - Уникальный идентификатор формы.
// Возвращаемое значение:
// 	Строка - Адрес содержания лога во временном хранилище.
Функция АдресСодержанияЛоговЗапросов(УникальныйИдентификаторФормы) Экспорт
	
	СодержаниеЛогаЗапросов = ЛогированиеЗапросовИСМП.СодержаниеЛогаЗапросов();
	
	Возврат ПоместитьВоВременноеХранилище(СодержаниеЛогаЗапросов, УникальныйИдентификаторФормы);
	
КонецФункции

// см. ЛогированиеЗапросовИСМП.ВключитьЛогированиеЗапросов
Процедура ВключитьЛогированиеЗапросов(ЗаписыватьСекунд = 300, НовыйЛог = Ложь) Экспорт
	
	ЛогированиеЗапросовИСМП.ВключитьЛогированиеЗапросов(ЗаписыватьСекунд, НовыйЛог);
	
КонецПроцедуры

// Выводит содержимое в лог запросов.
// 
// Параметры:
//  ТекстДляВывода - Строка - Текст для вывода в лог.
Процедура Вывести(ТекстДляВывода) Экспорт
	
	ДанныеЗаписи = ЛогированиеЗапросовИСМП.НоваяСтруктураДанныхЗаписи();
	ДанныеЗаписи.ТекстОшибки = ТекстДляВывода;
	
	ЛогированиеЗапросовИСМП.Вывести(ДанныеЗаписи);
	
КонецПроцедуры

// см. ЛогированиеЗапросовИСМП.ВыполняетсяЛогированиеЗапросов
Функция ВыполняетсяЛогированиеЗапросов() Экспорт
	ПараметрыЛогирования = ЛогированиеЗапросовИСМП.ПараметрыЛогированияЗапросов();
	Возврат ЛогированиеЗапросовИСМП.ВыполняетсяЛогированиеЗапросов(ПараметрыЛогирования);
КонецФункции

#КонецОбласти
#Область ПрограммныйИнтерфейс

// Устарела. Будет удалена в следующей версии программы.
// Возвращает значение параметра информационной базы.
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьЗначениеПараметра(Объект, Документ = Неопределено, Параметр, ПараметрПредставление = Неопределено) Экспорт
	
	Параметры = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами;
	
	Организация = Неопределено;
	Если Документ <> Неопределено Тогда
		Организация = Документ.Организация;
	Иначе
		Организация = Объект.Организация;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	Если Параметр = Параметры.БанкОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.БанковскийСчетПоУмолчанию.Банк.Наименование <> "",
					Организация.БанковскийСчетПоУмолчанию.Банк.Наименование, "");
		
	ИначеЕсли Параметр = Параметры.БанкКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.БанковскийСчетПоУмолчанию.Банк.Наименование <> "",
					Объект.Владелец.БанковскийСчетПоУмолчанию.Банк.Наименование, "");
		
	ИначеЕсли Параметр = Параметры.Дата Тогда
		
		ЗначениеПараметра = ?(Формат(Объект.ДатаДоговора, "ДЛФ=ДД") <> "",
					Формат(Объект.ДатаДоговора, "ДЛФ=ДД"), "");
		
	ИначеЕсли Параметр = Параметры.ДолжностьКонтактногоЛицаКонтрагента Тогда
		
		Должность = ПолучитьДолжностьКонтактногоЛица(Объект.Владелец,Объект.Владелец.КонтактноеЛицо);
		
		Если ЗначениеЗаполнено(Должность) Тогда
			ЗначениеПараметра = Должность;
		Иначе
			Если Объект.Владелец.КонтактноеЛицо.Роли.Количество() <> 0 Тогда 
				ЗначениеПараметра = ?(Объект.Владелец.КонтактноеЛицо.Роли[0].Роль.Наименование <> "",
							Объект.Владелец.КонтактноеЛицо.Роли[0].Роль.Наименование, "");
			Иначе
				ЗначениеПараметра = "";
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Параметр = Параметры.КонтактноеЛицоКонтрагента Тогда
		
		ЗначениеПараметра = ?(ЗначениеЗаполнено(Объект.Владелец.КонтактноеЛицо),
					Объект.Владелец.КонтактноеЛицо.Наименование, "");
		
	ИначеЕсли Параметр = Параметры.КонтактноеЛицоКонтрагентаИнициалы Тогда
		
		КонтактноеЛицо = Объект.Владелец.КонтактноеЛицо;
		Если НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			Возврат "";
		КонецЕсли;
		
		ЧастиИмени = ФизическиеЛицаКлиентСервер.ЧастиИмени(КонтактноеЛицо.Наименование);
		
		Падеж = ПадежПараметра(ПараметрПредставление);
		ПросклонятьЗначение(Параметр, ЧастиИмени.Фамилия, Падеж);
		ФамилияИнициалы = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ЧастиИмени);
		
		Возврат ФамилияИнициалы;
		
	ИначеЕсли Параметр = Параметры.НазваниеОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.НаименованиеПолное <> "",
					Организация.НаименованиеПолное, "");
					
	ИначеЕсли Параметр = Параметры.НазваниеОрганизацииКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.НаименованиеПолное <> "",
					Объект.Владелец.НаименованиеПолное, "");
		
	ИначеЕсли Параметр = Параметры.НомерДоговора Тогда
		
		ЗначениеПараметра = ?(Объект.НомерДоговора <> "",
					Объект.НомерДоговора, "");
		
	ИначеЕсли Параметр = Параметры.РасчетныйСчетОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.БанковскийСчетПоУмолчанию.НомерСчета <> "",
					Организация.БанковскийСчетПоУмолчанию.НомерСчета, "");
		
	ИначеЕсли Параметр = Параметры.РасчетныйСчетКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.БанковскийСчетПоУмолчанию.НомерСчета <> "",
					Объект.Владелец.БанковскийСчетПоУмолчанию.НомерСчета, "");
		
	ИначеЕсли Параметр = Параметры.СрокОплатыПокупателя Тогда
		
		ЗначениеПараметра = ?(Объект.СрокОплатыПокупателя <> "",
					Объект.СрокОплатыПокупателя, "");
		
	ИначеЕсли Параметр = Параметры.СрокОплатыПоставщику Тогда
		
		ЗначениеПараметра = ?(Объект.СрокОплатыПоставщику <> "",
					Объект.СрокОплатыПоставщику, "");
		
	ИначеЕсли Параметр = Параметры.ЮридическийАдресОрганизации Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Организация.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации Тогда 
				ЗначениеПараметра = Строка.Представление;
				
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ФактическийАдресОрганизации Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Организация.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ТелефонОрганизации Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Организация.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ФаксОрганизации Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Организация.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ФаксОрганизации Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.АдресЭлектроннойПочтыОрганизации Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Организация.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.EmailОрганизации Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ПочтовыйАдресОрганизации Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Организация.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ЮридическийАдресКонтрагента Тогда 
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Объект.Владелец.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ФактическийАдресКонтрагента Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Объект.Владелец.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ТелефонКонтрагента Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Объект.Владелец.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ФаксКонтрагента Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Объект.Владелец.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ФаксКонтрагента Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.АдресЭлектроннойПочтыКонтрагента Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Объект.Владелец.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагента Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ПочтовыйАдресКонтрагента Тогда
		
		ЗначениеПараметра = "";
		Для Каждого Строка Из Объект.Владелец.КонтактнаяИнформация Цикл 
			
			Если Строка.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента Тогда 
				ЗначениеПараметра = Строка.Представление;
			КонецЕсли;
		КонецЦикла;
		ЗначениеПараметра = ?(ЗначениеПараметра <> "", ЗначениеПараметра, "");
		
	ИначеЕсли Параметр = Параметры.ИННКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.ИНН <> "",
					Объект.Владелец.ИНН, "");
		
	ИначеЕсли Параметр = Параметры.ИННОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.ИНН <> "",
					Организация.ИНН, "");
		
	ИначеЕсли Параметр = Параметры.КППКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.КПП <> "",
					Объект.Владелец.КПП, "");
		
	ИначеЕсли Параметр = Параметры.КППОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.КПП <> "",
					Организация.КПП, "");
		
	ИначеЕсли Параметр = Параметры.ОКТМООрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.КодПоОКТМО <> "",
					Организация.КодПоОКТМО, "");
		
	ИначеЕсли Параметр = Параметры.ОКАТООрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.КодПоОКАТО <> "",
					Организация.КодПоОКАТО, "");
		
	ИначеЕсли Параметр = Параметры.ОКПОКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.КодПоОКПО <> "",
					Объект.Владелец.КодПоОКПО, "");
		
	ИначеЕсли Параметр = Параметры.ОКПООрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.КодПоОКПО <> "",
					Организация.КодПоОКПО, "");
		
	ИначеЕсли Параметр = Параметры.ОГРНОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.ОГРН <> "",
					Организация.ОГРН, "");
		
	ИначеЕсли Параметр = Параметры.ОГРНКонтрагента Тогда
		
		ЗначениеПараметра = ?(Объект.Владелец.РегистрационныйНомер <> "",
					Объект.Владелец.РегистрационныйНомер, "");
		
	ИначеЕсли Параметр = Параметры.ОКВЭДОрганизации Тогда
		
		ЗначениеПараметра = ?(Организация.КодОКВЭД <> "",
					Организация.КодОКВЭД, "");
		
	ИначеЕсли Параметр = Параметры.РуководительОрганизации Тогда
		
		Если НЕ ЗначениеЗаполнено(Организация.ПодписьРуководителя) Тогда
			Возврат "";
		КонецЕсли;
		ЗначениеПараметра = ?(ЗначениеЗаполнено(Организация.ПодписьРуководителя.ФизическоеЛицо),
					Организация.ПодписьРуководителя.ФизическоеЛицо.Наименование, "");
					
	ИначеЕсли Параметр = Параметры.РуководительОрганизацииИнициалы Тогда
		
		Если НЕ ЗначениеЗаполнено(Организация.ПодписьРуководителя) Тогда
			Возврат "";
		КонецЕсли;
		РуководительОрганизации = Организация.ПодписьРуководителя.ФизическоеЛицо;
		
		ФамилияИнициалы = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(, РуководительОрганизации);
		ЧастиИмени = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФамилияИнициалы);
		Фамилия = ЧастиИмени.Фамилия;
		
		Падеж = ПадежПараметра(ПараметрПредставление);
		ПросклонятьЗначение(Параметр, Фамилия, Падеж);
		ФамилияИнициалы = СтрЗаменить(ФамилияИнициалы, ЧастиИмени.Фамилия, Фамилия);
		
		Возврат ФамилияИнициалы;
		
	ИначеЕсли Параметр = Параметры.БикКонтрагента Тогда
		
		ЗначениеПараметра = ?(ЗначениеЗаполнено(Объект.Владелец.БанковскийСчетПоУмолчанию.Банк.Код),
					Объект.Владелец.БанковскийСчетПоУмолчанию.Банк.Код, "");
					
	ИначеЕсли Параметр = Параметры.КоррСчетКонтрагента Тогда
		
		ЗначениеПараметра = ?(ЗначениеЗаполнено(Объект.Владелец.БанковскийСчетПоУмолчанию.Банк.КоррСчет),
					Объект.Владелец.БанковскийСчетПоУмолчанию.Банк.КоррСчет, "");
					
	ИначеЕсли Параметр = Параметры.БикОрганизации Тогда
		
		ЗначениеПараметра = ?(ЗначениеЗаполнено(Организация.БанковскийСчетПоУмолчанию.Банк.Код),
					Организация.БанковскийСчетПоУмолчанию.Банк.Код, "");
					
	ИначеЕсли Параметр = Параметры.КоррСчетОрганизации Тогда
		
		ЗначениеПараметра = ?(ЗначениеЗаполнено(Организация.БанковскийСчетПоУмолчанию.Банк.КоррСчет),
					Организация.БанковскийСчетПоУмолчанию.Банк.КоррСчет, "");
					
	ИначеЕсли Параметр = Параметры.СуммаДокумента Тогда
		
		Если Документ <> Неопределено Тогда 
			ЗначениеПараметра = Документ.СуммаДокумента;
		Иначе 
			ЗначениеПараметра = "";
		КонецЕсли;
		
	ИначеЕсли Параметр = Параметры.СуммаДокументаПрописью Тогда
		
		Если Документ <> Неопределено Тогда 
			ЗначениеПараметра = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Документ.СуммаДокумента, Документ.ВалютаДокумента);
			ЧислоПрописью(Документ.СуммаДокумента);
		Иначе 
			ЗначениеПараметра = "";
		КонецЕсли;
		
	ИначеЕсли Параметр = Параметры.НомерДокумента Тогда
		
		Если Документ <> Неопределено Тогда 
			ЗначениеПараметра = Документ.Номер;
		Иначе 
			ЗначениеПараметра = "";
		КонецЕсли;
		
	ИначеЕсли Параметр = Параметры.ДатаДокумента Тогда 
		
		Если Документ <> Неопределено Тогда 
			ЗначениеПараметра = Формат(Документ.Дата, "ДФ='дд ММММ гггг'");
		Иначе 
			ЗначениеПараметра = "";
		КонецЕсли;
		
	ИначеЕсли Параметр = Параметры.ПаспортныеДанные Тогда
		
		Контрагент = Объект.Владелец;
		
		Если Контрагент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ИндивидуальныйПредприниматель
			ИЛИ Контрагент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ФизическоеЛицо Тогда
			
			ЗначениеПараметра = Контрагент.ДокументУдостоверяющийЛичность;
		Иначе
			КонтактноеЛицо = Контрагент.КонтактноеЛицо;
			ЗначениеПараметра = КонтактноеЛицо.ДокументУдостоверяющийЛичность;
		КонецЕсли;
		
		Возврат ЗначениеПараметра;
		
	ИначеЕсли Параметр = Параметры.ПаспортныеДанныеКонтактногоЛица Тогда
		
		КонтактноеЛицо = Объект.Владелец.КонтактноеЛицо;
		Возврат КонтактноеЛицо.ДокументУдостоверяющийЛичность;
		
	ИначеЕсли Параметр = "ПаспортныеДанные" Тогда
		
		ПаспортныеДанные = Новый Структура;
		ПаспортныеДанные.Вставить("Серия", "");
		ПаспортныеДанные.Вставить("Номер", "");
		ПаспортныеДанные.Вставить("ДатаВыдачи", "");
		ПаспортныеДанные.Вставить("СрокДействия", "");
		ПаспортныеДанные.Вставить("КемВыдан", "");
		ПаспортныеДанные.Вставить("КодПодразделения", "");
		
		Возврат ПаспортныеДанные;
		
	ИначеЕсли Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ПаспортныеДанные_ДатаВыдачи
		ИЛИ Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ПаспортныеДанные_КемВыдан
		ИЛИ Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ПаспортныеДанные_КодПодразделения
		ИЛИ Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ПаспортныеДанные_Номер
		ИЛИ Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ПаспортныеДанные_Серия
		ИЛИ Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ПаспортныеДанные_СрокДействия Тогда
		
		
		Возврат "";
		
	ИначеЕсли Параметр = Параметры.Факсимиле Тогда 
		Если ЗначениеЗаполнено(Организация.ФайлФаксимильнаяПечать) Тогда
			ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Организация.ФайлФаксимильнаяПечать);
			Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
				Возврат "<img src=""data:image/png;base64," + Base64Строка(ДанныеКартинки) + """>";
			КонецЕсли;
		КонецЕсли;
		
		Возврат "<span style='background-color: #DCDCDC'>Факсимиле не установлено для организации</span>";
		
	ИначеЕсли Параметр = Параметры.Логотип Тогда 
		Если ЗначениеЗаполнено(Организация.ФайлЛоготип) Тогда
			ДанныеКартинки =РаботаСФайлами.ДвоичныеДанныеФайла(Организация.ФайлЛоготип);
			Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
				Возврат "<img src=""data:image/png;base64," + Base64Строка(ДанныеКартинки) + """>";
			КонецЕсли;
		КонецЕсли;
		
		Возврат "<span style='background-color: #DCDCDC'>Логотип не установлен для организации</span>";
		
	КонецЕсли;
	
	Падеж = ПадежПараметра(ПараметрПредставление);
	Если Падеж = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		Возврат ЗначениеПараметра;
	КонецЕсли;
	
	ПросклонятьЗначение(Параметр, ЗначениеПараметра, Падеж, ЗначениеПараметра);
	Возврат ЗначениеПараметра;
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// Возвращает значение дополнительного реквизита.
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьЗначениеДополнительногоРеквизита(Объект, Документ, РеквизитСсылка) Экспорт
	
	ЗначенияДополнительныхРеквизитов = Неопределено;
	
	Если РеквизитСсылка.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ДоговорыКонтрагентов Тогда
		ЗначенияДополнительныхРеквизитов = Объект.ДополнительныеРеквизиты;
	ИначеЕсли РеквизитСсылка.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Контрагенты Тогда
		ЗначенияДополнительныхРеквизитов = Объект.Владелец.ДополнительныеРеквизиты;
	ИначеЕсли РеквизитСсылка.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_ЗаказПокупателя Тогда
		Если Документ <> Неопределено Тогда
			ЗначенияДополнительныхРеквизитов = Документ.ДополнительныеРеквизиты;
		Иначе
			ЗначенияДополнительныхРеквизитов = Неопределено;
		КонецЕсли;
	ИначеЕсли РеквизитСсылка.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_СчетНаОплату Тогда
		Если Документ <> Неопределено Тогда
			ЗначенияДополнительныхРеквизитов = Документ.ДополнительныеРеквизиты;
		Иначе
			ЗначенияДополнительныхРеквизитов = Неопределено;
		КонецЕсли;
	ИначеЕсли РеквизитСсылка.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Организации Тогда
		ЗначенияДополнительныхРеквизитов = Объект.Организация.ДополнительныеРеквизиты;
	КонецЕсли;
	
	Если ЗначенияДополнительныхРеквизитов = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Свойство", РеквизитСсылка);
	ТаблицаДанныхРеквизита = ЗначенияДополнительныхРеквизитов.Выгрузить(ПараметрыОтбора);
	
	Если ТаблицаДанныхРеквизита.Количество() = 0 Тогда
		
		Значение = Неопределено;
		ТипыРеквизита = РеквизитСсылка.ТипЗначения.Типы();
		Если ТипыРеквизита.Количество() > 0 Тогда 
			СоставнойРеквизит = ?(ТипыРеквизита.Количество() > 1, Истина, Ложь);
		КонецЕсли;
		
		Если Не СоставнойРеквизит Тогда 
			ТипРеквизита = ТипыРеквизита[0];
		Иначе
			Если ТаблицаДанныхРеквизита.Количество() = 0 Тогда 
				Возврат "";
			Иначе 
				ТипРеквизита = ТипЗнч(ТаблицаДанныхРеквизита[0].Значение);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Значение = ТаблицаДанныхРеквизита[0].Значение;
		ТипРеквизита = ТипЗнч(Значение);
		
	КонецЕсли;
	
	ФорматнаяСтрока = РеквизитСсылка.ФорматСвойства;
	
	Если ТипРеквизита = Тип("Булево") Тогда 
		
		Если ТаблицаДанныхРеквизита.Количество() > 0 Тогда 
			Возврат Формат(Значение, ФорматнаяСтрока);
		Иначе 
			Возврат Формат(Ложь, РеквизитСсылка.ФорматСвойства);
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("Строка") Тогда 
		
		Если ТаблицаДанныхРеквизита.Количество() > 0 Тогда 
			Возврат Значение;
		Иначе 
			Возврат "";
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("Дата") Тогда 
		
		Если НЕ ЗначениеЗаполнено(ФорматнаяСтрока) Тогда
			
			Если РеквизитСсылка.ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Дата Тогда
				ФорматнаяСтрока = "ДЛФ=Д";
			ИначеЕсли РеквизитСсылка.ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Время Тогда
				ФорматнаяСтрока = "ДЛФ=В";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТаблицаДанныхРеквизита.Количество() > 0 Тогда 
			Возврат Формат(Значение, ФорматнаяСтрока);
		Иначе
			Возврат "";
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("Число") Тогда 
		
		Если ТаблицаДанныхРеквизита.Количество() > 0 Тогда 
			Возврат Формат(Значение, ФорматнаяСтрока);
		Иначе
			Возврат "";
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипРеквизита = Тип("СправочникСсылка.Пользователи")
		ИЛИ ТипРеквизита = Тип("СправочникСсылка.ФизическиеЛица") 
		ИЛИ ТипРеквизита = Тип("СправочникСсылка.Валюты") Тогда 
		
		Если ТаблицаДанныхРеквизита.Количество() > 0 Тогда 
			Возврат Значение.Наименование;
		Иначе
			Возврат "";
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") 
		ИЛИ ТипРеквизита = Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия") Тогда 
		
		Если ТаблицаДанныхРеквизита.Количество() > 0 Тогда 
			Возврат Значение.Наименование;
		Иначе 
			Возврат "";
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

// Устарела. Будет удалена в следующей версии программы.
// Возвращает значение заполняемого поля.
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьЗначениеЗаполняемогоПоляПриФормированииПечатнойФормы(Объект, ПараметрИдентификатор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентовРедактируемыеПараметры.Значение
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов.УдалитьРедактируемыеПараметры КАК ДоговорыКонтрагентовРедактируемыеПараметры
	|ГДЕ
	|	ДоговорыКонтрагентовРедактируемыеПараметры.СсылкаБланка = &БланкСсылка
	|	И ДоговорыКонтрагентовРедактируемыеПараметры.Идентификатор = &ПараметрИдентификатор
	|	И ДоговорыКонтрагентовРедактируемыеПараметры.Ссылка = &ДоговорСсылка";
		
	Запрос.УстановитьПараметр("БланкСсылка", Объект.УдалитьБланкДоговора);
	Запрос.УстановитьПараметр("ДоговорСсылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ПараметрИдентификатор", ПараметрИдентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Значение;
	КонецЦикла;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПадежПараметра(Параметр)
	Если СтрНайти(Параметр, "именительный") <> 0 Тогда
		Возврат 1;
	ИначеЕсли СтрНайти(Параметр, "родительный") <> 0 Тогда
		Возврат 2;
	ИначеЕсли СтрНайти(Параметр, "дательный") <> 0 Тогда
		Возврат 3;
	ИначеЕсли СтрНайти(Параметр, "винительный") <> 0 Тогда
		Возврат 4;
	ИначеЕсли СтрНайти(Параметр, "творительный") <> 0 Тогда
		Возврат 5;
	ИначеЕсли СтрНайти(Параметр, "предложный") <> 0 Тогда
		Возврат 6;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Процедура ПросклонятьЗначение(Параметр, ПараметрЗначение, Падеж, ОбъектЗначение = Неопределено)
	
	Если Параметр = Перечисления.УдалитьПараметрыБланковДоговоровСКонтрагентами.ДолжностьКонтактногоЛицаКонтрагента Тогда
		ПараметрЗначение = СклонениеПредставленийОбъектов.ПросклонятьПредставление(ПараметрЗначение, Падеж, ОбъектЗначение);
	Иначе
		ПараметрЗначение = СклонениеПредставленийОбъектов.ПросклонятьФИО(ПараметрЗначение, Падеж, ОбъектЗначение);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДолжностьКонтактногоЛица(Контрагент,Контакт) 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязиКонтрагентКонтактСрезПоследних.Должность КАК Должность
	|ИЗ
	|	РегистрСведений.СвязиКонтрагентКонтакт.СрезПоследних(
	|			,
	|			Контрагент = &Контрагент
	|				И Контакт = &Контакт) КАК СвязиКонтрагентКонтактСрезПоследних";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
	Запрос.УстановитьПараметр("Контакт", Контакт.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Должность;
	КонецЦикла;
	
КонецФункции

#КонецОбласти

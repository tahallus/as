
#Область СлужебныйПрограммныйИнтерфейс

#Область Номенклатура

// Процедура открывает форму выбора номенклатуры.
// 
// Параметры:
//  ФормаВладелец - УправляемаяФорма - форма владелец.
//  Реквизиты     - Структура - параметры формы создания номенклатуры.
//
Процедура ОткрытьФормуВыбораНоменклатуры(ФормаВладелец, Знач Реквизиты) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("Услуга", Ложь);
	ПараметрыФормы.Вставить("СписокНоменклатуры", Реквизиты.СписокНоменклатуры);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры

#КонецОбласти

// Процедура открывает форму выбора ТНВЭД
// 
// Параметры:
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма владелец
//  СписокТНВЭД - СписокЗначений - устанавливает отбор по списку ТНВЭД
//
Процедура ОткрытьФормуВыбораТНВЭД(ФормаВладелец, СписокТНВЭД) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокТНВЭД", СписокТНВЭД);
	
	ОткрытьФорму("Справочник.КлассификаторТНВЭД.ФормаВыбора", ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры 

// Обработаывает оповещения от системы
//
// Параметры
//  ИмяСобытия - Строка - Имя события может быть использовано для идентификации сообщений принимающими их формами.
//  Параметр   - Параметр сообщения. Могут быть переданы любые необходимые данные.
//  Источник   - Источник события. Например, в качестве источника может быть указана другая форма.
//  Список      - ДинамическийСписок - ссылка на динамический список на форме.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Список) Экспорт
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		РаботаСОтборами.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает значения периода.
//
// Параметры:
//  Элемент      - ПолеФормы - элемент формы, с которым связано событие.
//  ВыбранноеЗначение - Дата - начало выбранного периода.
//  СтандартнаяОбработка - Булево - признак стандартной (системной) обработки события.
//  ВидПериода   - ПеречислениеСсылка.ДоступныеПериодыОтчета - кратность периода.
//  Период       - Строка - см. ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета().
//  НачалоПериода - Дата - нижняя граница периода.
//  КонецПериода - Дата - верхняя граница периода.
// 
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ВидПериода, Период, НачалоПериода, КонецПериода) Экспорт

	Если ТипЗнч(ВыбранноеЗначение) = Тип("Дата") Тогда
		НачалоПериода = ОтчетыУНФКлиентСервер.НачалоПериодаОтчета(ВидПериода, ВыбранноеЗначение);
		КонецПериода  = ОтчетыУНФКлиентСервер.КонецПериодаОтчета(ВидПериода, ВыбранноеЗначение);
		
		ВыбранноеЗначение = ПолучитьПредставлениеПериодаОтчета(
		ВидПериода, НачалоПериода, КонецПериода);
		
		Период = ВыбранноеЗначение;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

// Возвращает представление периода.
// 
// Параметры:
//   ВидПериода    - ПеречислениеСсылка.ДоступныеПериодыОтчета - Вид периода.
//   НачалоПериода - Дата - Дата начала периода.
//   КонецПериода  - Дата - Дата окончания периода.
// 
// Возвращаемое значение:
//   Строка - Текстовое представление периода.
// 
Функция ПолучитьПредставлениеПериодаОтчета(ВидПериода, Знач НачалоПериода, Знач КонецПериода) Экспорт
	
	Если ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.ПроизвольныйПериод") Тогда	
		Если Не ЗначениеЗаполнено(НачалоПериода) И Не ЗначениеЗаполнено(КонецПериода) Тогда
			Возврат "";
		Иначе
			Возврат Формат(НачалоПериода, "ДФ=dd.MM.yy") + " - " + Формат(КонецПериода, "ДФ=dd.MM.yy");
		КонецЕсли;
	Иначе
		РасчетныйВидПериода = ОтчетыУНФКлиентСервер.ПолучитьВидПериода(НачалоПериода, КонецПериода);
		Если РасчетныйВидПериода <> ВидПериода И ЗначениеЗаполнено(НачалоПериода) Тогда
			ВидПериода = РасчетныйВидПериода;
		КонецЕсли;
		
		Список = ОтчетыУНФКлиентСервер.СписокФиксированныхПериодов(НачалоПериода, ВидПериода);
		
		ЭлементСписка = Список.НайтиПоЗначению(НачалоПериода);
		Если ЭлементСписка <> Неопределено тогда
			Возврат ЭлементСписка.Представление;
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Выбор периода в помощнике получения РНПТ
// 
// Параметры:
// Форма - ФормаКлиентскогоПриложения - форма помощника
//
Процедура ПредставлениеПериодаНачалоВыбораВПомощникеРНПТ(Форма) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(Объект.Период));
	ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(Объект.Период));
	ПараметрыВыбора.Вставить("ВидПериода",    ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"));
	ПараметрыВыбора.Вставить("ОграничениеСнизу", Форма.ДатаНачалаУчетаПрослеживаемыхТоваров);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодЗавершениеВыбора", Форма);
	
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", 
		ПараметрыВыбора, Элементы.Представлениепериода, , , , ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ФормаВыбораНоменклатуры() Экспорт
	
	Возврат "Справочник.Номенклатура.Форма.ФормаВыбора";
	
КонецФункции

Функция ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении() Экспорт
	
      Возврат "Документ.РасходнаяНакладная.Форма.ФормаВыбора";
	
КонецФункции

Функция ФормаВыбораТНВЭД() Экспорт
	
	Возврат "Справочник.КлассификаторТНВЭД.Форма.ФормаВыбора";
	
КонецФункции

#КонецОбласти

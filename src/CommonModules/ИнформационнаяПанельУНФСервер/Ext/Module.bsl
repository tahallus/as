#Область ПрограммныйИнтерфейс

// Получает необходимые данные для вывода в информационную панель списка.
//
Функция ИнформационнаяПанельПолучитьДанные(ТекущийРеквизитКИ, ПараметрыИнформПанели) Экспорт
	
	СписокПолейКИ = "";
	ТекстЗапроса = "";
	
	Запрос = Новый Запрос;
	ПорядокЗапроса = 0;
	Если ПараметрыИнформПанели.Свойство("Контрагент") Тогда
		
		СписокПолейКИ = "Телефон,ЭлПочта,Факс,ФактАдрес,ЮрАдрес,ПочтовыйАдрес,АдресДоставки,ДругаяИнформация";
		СформироватьТекстЗапросаКонтрагентыИнформПанель(ТекстЗапроса);
		
		ПорядокЗапроса = ПорядокЗапроса + 1;
		ПараметрыИнформПанели.Контрагент = ПорядокЗапроса;
		
		Запрос.УстановитьПараметр("Контрагент", ТекущийРеквизитКИ);
		
		Если ПараметрыИнформПанели.Свойство("Взаиморасчеты") Тогда
			
			СписокПолейКИ = СписокПолейКИ + ",Долг,НашДолг";
			СформироватьТекстЗапросаВзаиморасчетыИнформПанель(ТекстЗапроса);
			
			ПорядокЗапроса = ПорядокЗапроса + 1;
			ПараметрыИнформПанели.Взаиморасчеты = ПорядокЗапроса;
			
			ПараметрыВзаиморасчетов = ИнформационнаяПанельПолучитьПараметрыВзаиморасчетов();
			Запрос.УстановитьПараметр("СписокОрганизаций", ПараметрыВзаиморасчетов.СписокОрганизаций);
			Запрос.УстановитьПараметр("СписокТиповРасчетов", ПараметрыВзаиморасчетов.СписокТиповРасчетов);
			
		КонецЕсли;
		
		Если ПараметрыИнформПанели.Свойство("ДисконтнаяКарта") Тогда
			СписокПолейКИ = СписокПолейКИ + ",ПроцентСкидкиПоДисконтнойКарте,СуммаПродажПоДисконтнойКарте,ПредставлениеПериода";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыИнформПанели.Свойство("КонтактноеЛицо") Тогда
		
		СписокПолейКИ = ?(ПустаяСтрока(СписокПолейКИ), "ТелефонКЛ,ЭлПочтаКЛ", СписокПолейКИ + ",ТелефонКЛ,ЭлПочтаКЛ");
		СформироватьТекстЗапросаКонтактныеЛицаИнформПанель(ТекстЗапроса);
		
		ПорядокЗапроса = ПорядокЗапроса + 1;
		ПараметрыИнформПанели.КонтактноеЛицо = ПорядокЗапроса;
		
		Если ТипЗнч(ТекущийРеквизитКИ) = Тип("СправочникСсылка.Контрагенты") Тогда
			Запрос.УстановитьПараметр("КонтактноеЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийРеквизитКИ, "КонтактноеЛицо"));
		Иначе
			Запрос.УстановитьПараметр("КонтактноеЛицо", ТекущийРеквизитКИ);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ДанныеИП = Новый Структура(СписокПолейКИ);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если ПараметрыИнформПанели.Свойство("Контрагент") Тогда
		
		ВыборкаКИ = Результат[ПараметрыИнформПанели.Контрагент - 1].Выбрать();
		ДанныеИП = ПолучитьДанныеКонтрагентыИнформПанель(ВыборкаКИ, ДанныеИП);
		
		Если ПараметрыИнформПанели.Свойство("Взаиморасчеты") Тогда
			
			ВыборкаДолги = Результат[ПараметрыИнформПанели.Взаиморасчеты - 1].Выбрать();
			ДанныеИП = ПолучитьЗаполнитьДанныеВзаиморасчетыИнформПанель(ВыборкаДолги, ДанныеИП);
			
		КонецЕсли;
		
		Если ПараметрыИнформПанели.Свойство("ДисконтнаяКарта") Тогда
			
			ДополнительныеПараметры = Новый Структура("ПолучатьСуммуПродаж, Сумма, ПредставлениеПериода", Истина, 0, "");
			ПроцентСкидкиПоДисконтнойКарте = ДисконтныеКартыУНФСервер.ВычислитьПроцентСкидкиПоДисконтнойКарте(ТекущаяДата(), ПараметрыИнформПанели.ДисконтнаяКарта, ДополнительныеПараметры);
			Если Не ПараметрыИнформПанели.ДисконтнаяКарта.Владелец.СтарыйМеханизмСкидок Тогда
				ПроцентСкидкиПоДисконтнойКарте = НСтр("ru = '<АвтоСкидки>'");
			КонецЕсли;
			ДанныеИП = ПолучитьЗаполнитьДанныеПроцентСкидкиПоДисконтнойКартеИнформПанель(ПроцентСкидкиПоДисконтнойКарте, ДополнительныеПараметры.Сумма, ДополнительныеПараметры.ПредставлениеПериода, ДанныеИП);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыИнформПанели.Свойство("КонтактноеЛицо") Тогда
		ВыборкаКИ = Результат[ПараметрыИнформПанели.КонтактноеЛицо - 1].Выбрать();
		ДанныеИП = ПолучитьДанныеКонтактныеЛицаИнформПанель(ВыборкаКИ, ДанныеИП);
	КонецЕсли;
	
	Возврат ДанныеИП;
	
КонецФункции // ИнформационнаяПанельПолучитьДанные()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура формирует текст запроса по КИ контрагента.
//
Процедура СформироватьТекстЗапросаКонтрагентыИнформПанель(ТекстЗапроса)
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВидыКИ.Ссылка КАК ВидКИ,
	|	ЕСТЬNULL(КонтрагентыКИ.Представление, """") КАК ПредставлениеКИ
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКИ
	|		ПО (КонтрагентыКИ.Ссылка = &Контрагент)
	|			И ВидыКИ.Ссылка = КонтрагентыКИ.Вид
	|ГДЕ
	|	ВидыКИ.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникКонтрагенты)
	|	И ВидыКИ.Предопределенный
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрагентыКИ.НомерСтроки";
	
КонецПроцедуры // СформироватьТекстЗапросаКонтрагентыИнформПанель()

// Процедура формирует текст запроса по КИ контактного лица.
//
Процедура СформироватьТекстЗапросаКонтактныеЛицаИнформПанель(ТекстЗапроса)
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		ТекстЗапроса = ТекстЗапроса +
		";
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВидыКИ.Ссылка КАК ВидКИ,
	|	ЕСТЬNULL(КонтактныеЛицаКИ.Представление, """") КАК ПредставлениеКИ
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаКИ
	|		ПО (КонтактныеЛицаКИ.Ссылка = &КонтактноеЛицо)
	|			И ВидыКИ.Ссылка = КонтактныеЛицаКИ.Вид
	|ГДЕ
	|	ВидыКИ.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникКонтактныеЛица)
	|	И ВидыКИ.Предопределенный";
	
КонецПроцедуры // СформироватьТекстЗапросаКонтактныеЛицаИнформПанель()

// Процедура формирует текст запроса по взаиморасчетам контрагента.
//
Процедура СформироватьТекстЗапросаВзаиморасчетыИнформПанель(ТекстЗапроса)
	
	ТекстЗапроса = ТекстЗапроса +
	";
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.СуммаОстаток < 0
	|				И РасчетыСПокупателямиОстатки.СуммаОстаток > 0
	|			ТОГДА -1 * РасчетыСПоставщикамиОстатки.СуммаОстаток + РасчетыСПокупателямиОстатки.СуммаОстаток
	|		КОГДА РасчетыСПоставщикамиОстатки.СуммаОстаток < 0
	|			ТОГДА -РасчетыСПоставщикамиОстатки.СуммаОстаток
	|		КОГДА РасчетыСПокупателямиОстатки.СуммаОстаток > 0
	|			ТОГДА РасчетыСПокупателямиОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДолгКонтрагента,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.СуммаОстаток > 0
	|				И РасчетыСПокупателямиОстатки.СуммаОстаток < 0
	|			ТОГДА -1 * РасчетыСПокупателямиОстатки.СуммаОстаток + РасчетыСПоставщикамиОстатки.СуммаОстаток
	|		КОГДА РасчетыСПоставщикамиОстатки.СуммаОстаток > 0
	|			ТОГДА РасчетыСПоставщикамиОстатки.СуммаОстаток
	|		КОГДА РасчетыСПокупателямиОстатки.СуммаОстаток < 0
	|			ТОГДА -РасчетыСПокупателямиОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НашДолг
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ТипРасчетов В (&СписокТиповРасчетов)
	|				И Контрагент = &Контрагент) КАК РасчетыСПоставщикамиОстатки,
	|	РегистрНакопления.РасчетыСПокупателями.Остатки(
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ТипРасчетов В (&СписокТиповРасчетов)
	|				И Контрагент = &Контрагент) КАК РасчетыСПокупателямиОстатки";
	
КонецПроцедуры // СформироватьТекстЗапросаВзаиморасчетыИнформПанель()

// Функция возвращает необходимые параметры для расчета взаиморасчетов в информационной панели.
//
Функция ИнформационнаяПанельПолучитьПараметрыВзаиморасчетов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	МассивОрганизаций = РезультатЗапроса.ВыгрузитьКолонку("Организация");
	
	МассивТиповРасчетов = Новый Массив;
	МассивТиповРасчетов.Добавить(Перечисления.ТипыРасчетов.Аванс);
	МассивТиповРасчетов.Добавить(Перечисления.ТипыРасчетов.Долг);
	
	Возврат Новый Структура("СписокОрганизаций,СписокТиповРасчетов", МассивОрганизаций, МассивТиповРасчетов);
	
КонецФункции // ИнформационнаяПанельПолучитьПараметрыВзаиморасчетов()

// Получает необходимые данные о КИ контрагента.
//
Функция ПолучитьДанныеКонтрагентыИнформПанель(ВыборкаКИ, ДанныеИП)
	
	Пока ВыборкаКИ.Следующий() Цикл
		
		ПредставлениеКИ = СокрЛП(ВыборкаКИ.ПредставлениеКИ);
		Если ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента") Тогда
			ДанныеИП.Телефон = ?(ПустаяСтрока(ДанныеИП.Телефон), ПредставлениеКИ, ДанныеИП.Телефон + ", "+ ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailКонтрагента") Тогда
			ДанныеИП.ЭлПочта = ?(ПустаяСтрока(ДанныеИП.ЭлПочта), ПредставлениеКИ, ДанныеИП.ЭлПочта + ", "+ ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФаксКонтрагента") Тогда
			ДанныеИП.Факс = ?(ПустаяСтрока(ДанныеИП.Факс), ПредставлениеКИ, ДанныеИП.Факс + ", "+ ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента") Тогда
			ДанныеИП.ФактАдрес = ?(ПустаяСтрока(ДанныеИП.ФактАдрес), ПредставлениеКИ, ДанныеИП.ФактАдрес + Символы.ПС + ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента") Тогда
			ДанныеИП.ЮрАдрес = ?(ПустаяСтрока(ДанныеИП.ЮрАдрес), ПредставлениеКИ, ДанныеИП.ЮрАдрес + Символы.ПС + ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента") Тогда
			ДанныеИП.ПочтовыйАдрес = ?(ПустаяСтрока(ДанныеИП.ПочтовыйАдрес), ПредставлениеКИ, ДанныеИП.ПочтовыйАдрес + Символы.ПС + ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагента") Тогда
			ДанныеИП.АдресДоставки = ?(ПустаяСтрока(ДанныеИП.АдресДоставки), ПредставлениеКИ, ДанныеИП.АдресДоставки + Символы.ПС + ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагента") Тогда
			ДанныеИП.ДругаяИнформация = ?(ПустаяСтрока(ДанныеИП.ДругаяИнформация), ПредставлениеКИ, ДанныеИП.ДругаяИнформация + Символы.ПС + ПредставлениеКИ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеИП;
	
КонецФункции // ПолучитьДанныеКонтрагентыИнформПанель()

// Получает необходимые данные о КИ контактного лица.
//
Функция ПолучитьДанныеКонтактныеЛицаИнформПанель(ВыборкаКИ, ДанныеИП)
	
	Пока ВыборкаКИ.Следующий() Цикл
		
		ПредставлениеКИ = СокрЛП(ВыборкаКИ.ПредставлениеКИ);
		Если ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица") Тогда
			ДанныеИП.ТелефонКЛ = ?(ПустаяСтрока(ДанныеИП.ТелефонКЛ), ПредставлениеКИ, ДанныеИП.ТелефонКЛ + ", "+ ПредставлениеКИ);
		ИначеЕсли ВыборкаКИ.ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailКонтактногоЛица") Тогда
			ДанныеИП.ЭлПочтаКЛ = ?(ПустаяСтрока(ДанныеИП.ЭлПочтаКЛ), ПредставлениеКИ, ДанныеИП.ЭлПочтаКЛ + ", "+ ПредставлениеКИ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеИП;
	
КонецФункции // ПолучитьДанныеКонтактныеЛицаИнформПанель()

// Получает необходимые данные о взаиморасчетах контрагента.
//
Функция ПолучитьЗаполнитьДанныеВзаиморасчетыИнформПанель(ВыборкаДолги, ДанныеИП)
	
	ВыборкаДолги.Следующий();
	
	ДанныеИП.Долг = ВыборкаДолги.ДолгКонтрагента;
	ДанныеИП.НашДолг = ВыборкаДолги.НашДолг;
	
	Возврат ДанныеИП;
	
КонецФункции // ПолучитьЗаполнитьДанныеВзаиморасчетыИнформПанель()

// Получает необходимые данные о проценте скидки по дисконтной карте контрагента.
//
Функция ПолучитьЗаполнитьДанныеПроцентСкидкиПоДисконтнойКартеИнформПанель(ПроцентСкидкиПоДисконтнойКарте, СуммаПродажПоДисконтнойКарте, ПредставлениеПериода, ДанныеИП)
	
	ДанныеИП.ПроцентСкидкиПоДисконтнойКарте = ПроцентСкидкиПоДисконтнойКарте;
	ДанныеИП.СуммаПродажПоДисконтнойКарте = СуммаПродажПоДисконтнойКарте;
	ДанныеИП.ПредставлениеПериода = ПредставлениеПериода;
		
	Возврат ДанныеИП;
	
КонецФункции // ПолучитьЗаполнитьДанныеПроцентСкидкиПоДисконтнойКартеИнформПанель()

#КонецОбласти
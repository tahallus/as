
#Область СлужебныйПрограммныйИнтерфейс

// Открывает форму создания учетной записи электронного документооборота.
// 
// Параметры:
// 	ПараметрыСоздания - см. НовыеПараметрыСозданияУчетнойЗаписи
Процедура СоздатьУчетнуюЗапись(ПараметрыСоздания = Неопределено) Экспорт
	
	Если ПараметрыСоздания = Неопределено Тогда
		ПараметрыСоздания = НовыеПараметрыСозданияУчетнойЗаписи();
	КонецЕсли;
	
	УчетныеЗаписиЭДОСлужебныйКлиент.СоздатьУчетнуюЗапись(ПараметрыСоздания);
	
КонецПроцедуры

// Возвращает параметры для создания учетной записи электронного документооборота.
// 
// Возвращаемое значение:
// 	Структура:
// * Организация - ОпределяемыйТип.Организация - организация, для которой создается учетная запись
// * КнопкаНазадДоступна - Булево - если Истина, на первой странице мастера создания учетной записи будет
//                                  отображаться кнопка "Назад".
// * ВладелецФормы - Неопределено
// * ОповещениеОЗавершении - ОписаниеОповещения - описание процедуры, которая будет выполнена после создания
//                           учетной записи со следующими параметрами:
//                             * ИдентификаторУчетнойЗаписи - Строка
//                             * ДополнительныеПараметры - Произвольный - значение, которое было указано при
//                                                          создании объекта ОписаниеОповещения.
// * РежимОткрытия - РежимОткрытияОкнаФормы - режим открытия окна.
Функция НовыеПараметрыСозданияУчетнойЗаписи() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Организация", Неопределено);
	Параметры.Вставить("ВладелецФормы", Неопределено);
	Параметры.Вставить("КнопкаНазадДоступна", Ложь);
	Параметры.Вставить("ОповещениеОЗавершении", Неопределено);
	Параметры.Вставить("РежимОткрытия", Неопределено);
	Параметры.Вставить("Контрагент", Неопределено);
	Параметры.Вставить("СпособыОбмена", Новый Массив);
	Параметры.Вставить("ОперацияЭДО", Неопределено);
	Параметры.Вставить("ДополнительныеПараметры", Неопределено);
	Параметры.Вставить("НастройкаОперацииЭДО", Ложь);
	
	Возврат Параметры;
	
КонецФункции

// Открывает учетную запись электронного документооборота.
// 
// Параметры:
// 	ИдентификаторУчетнойЗаписи - Строка
// 	ВладелецФормы - ФормаКлиентскогоПриложения
// 	Оповещение - ОписаниеОповещения
Процедура ОткрытьУчетнуюЗапись(ИдентификаторУчетнойЗаписи, ВладелецФормы = Неопределено,
	Оповещение = Неопределено) Экспорт
	
	УчетныеЗаписиЭДОСлужебныйКлиент.ОткрытьУчетнуюЗапись(ИдентификаторУчетнойЗаписи, ВладелецФормы, Оповещение);
	
КонецПроцедуры

// Открывает учетную запись электронного документооборота прямого обмена.
// 
// Параметры:
// 	Организация - ОпределяемыйТип.Организация
// 	ВладелецФормы - ФормаКлиентскогоПриложения
// 	Оповещение - ОписаниеОповещения
Процедура ОткрытьУчетнуюЗаписьПрямогоОбмена(Организация, ВладелецФормы = Неопределено, Оповещение = Неопределено) Экспорт
	
	УчетныеЗаписиЭДОСлужебныйКлиент.СоздатьУчетнуюЗаписьПрямогоОбмена(Организация, ВладелецФормы, Оповещение);
	
КонецПроцедуры

// Открывает форму списка учетных записей организации.
//
// Параметры:
//  Организация - ОпределяемыйТип.ОрганизацияБЭД - Организация
Процедура ОткрытьСписокУчетныхЗаписей(Организация = Неопределено) Экспорт
	
	НастройкиОтбора   = Новый Структура;
	Если Организация <> Неопределено Тогда
		НастройкиОтбора.Вставить("Организация", Организация);
	КонецЕсли;
	ПараметрыОткрытия = Новый Структура("Отбор", НастройкиОтбора);
	
	ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.ФормаСписка", ПараметрыОткрытия,, Организация);
	
КонецПроцедуры

// Возвращает ключ записи регистра сведений УчетныеЗаписиЭДО.
// 
// Параметры:
// 	ИдентификаторУчетнойЗаписи - Строка
// Возвращаемое значение:
// 	РегистрСведенийКлючЗаписи.УчетныеЗаписиЭДО
Функция КлючУчетнойЗаписи(ИдентификаторУчетнойЗаписи) Экспорт
	
	ЗначенияКлюча = Новый Структура("ИдентификаторЭДО", ИдентификаторУчетнойЗаписи);
	Тип = Тип("РегистрСведенийКлючЗаписи.УчетныеЗаписиЭДО");
	Возврат ОбщегоНазначенияБЭДКлиент.КлючЗаписиРегистраСведений(Тип, ЗначенияКлюча);
	
КонецФункции

// Открывает помощник регистрации сертификатов во время выполнении операции подписания или отправки
// электронного документа если для продолжения операции нет валидного сертификата.
//
// Параметры:
//  ПараметрыРегистрации - см. УчетныеЗаписиЭДОКлиентСервер.НовыеПараметрыРегистрацииСертификатов
//  ВладелецФормы - ФормаКлиентскогоПриложения - форма-владелец.
//  ОповещениеОЗакрытии - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана при закрытии
//                                             помощника регистрации сертификатов со следующими параметрами: 
//                        * РезультатЗакрытия - Неопределено.
//                        * ДополнительныеПараметры - Произвольный - значение, которое было указано при создании
//                                                    объекта ОписаниеОповещения.
//
Процедура ОткрытьПомощникРегистрацииСертификатов(ПараметрыРегистрации, ВладелецФормы = Неопределено,
	ОповещениеОЗакрытии = Неопределено) Экспорт
	
	Если ВладелецФормы <> Неопределено Тогда
		ОткрытьФорму("РегистрСведений.СертификатыУчетныхЗаписейЭДО.Форма.ПомощникРегистрацииСертификатов", ПараметрыРегистрации,
			ВладелецФормы, ВладелецФормы.УникальныйИдентификатор,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОткрытьФорму("РегистрСведений.СертификатыУчетныхЗаписейЭДО.Форма.ПомощникРегистрацииСертификатов", ПараметрыРегистрации,,,,,
			ОповещениеОЗакрытии);
	КонецЕсли;
	
КонецПроцедуры

// Подписывает и отправляет регистрационный пакет в сервис 1С-ЭДО.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения
// 	Оповещение - ОписаниеОповещения - содержит описание процедуры, которая будет выполнена после регистрации
// 	             сертификата со следующими параметрами:
// 	                * Результат - см. РезультатОперацииВСервисе1СЭДО
// 	                * ДополнительныеПараметры - Произвольный - значение, которое было указано при
// 	                создании объекта ОписаниеОповещения.
// 	ПараметрыРегистрации - см. СервисЭДОКлиент.НовыеПараметрыРегистрацииВСервисе1СЭДО
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики
Процедура ЗарегистрироватьСертификатВСервисе1СЭДО(Форма, Оповещение, ПараметрыРегистрации,
	КонтекстДиагностики) Экспорт
	
	УчетныеЗаписиЭДОСлужебныйКлиент.ЗарегистрироватьСертификатВСервисе1СЭДО(Форма, Оповещение, ПараметрыРегистрации,
		КонтекстДиагностики);
	
КонецПроцедуры

#КонецОбласти
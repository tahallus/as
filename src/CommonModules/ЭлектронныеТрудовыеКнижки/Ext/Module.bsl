#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру с описание трудовой деятельности сотрудника в заданном периоде.
// Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по конец месяца окнчания периода.
//
// Параметры:
//		Сотрудник			- Массив, СправочникСсылка.Сотрудники
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		Структура		- см.ПустаяСтруктураДанныхТрудовойДеятельности
//		Неопределено	- Если данных о трудовой деятельности нет
//
Функция ДанныеТрудовойДеятельностиСотрудника(ТолькоРазрешенные, МассивДокументов, Сотрудник, Организация, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено) Экспорт
	
	ДанныеСотрудников = ДанныеТрудовойДеятельностиСотрудников(
		ТолькоРазрешенные, МассивДокументов, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), Организация, НачалоПериода, ОкончаниеПериода);
	
	Если ДанныеСотрудников.Количество() > 0 Тогда
		Возврат ДанныеСотрудников[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает массив структур с описание трудовой деятельности сотрудников в заданном периоде.
// Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по конец месяца окончания периода.
//
// Параметры:
//		Документы			- Массив, состоящий из ДокументСсылка.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД
//		Сотрудники			- Массив, состоящий из СправочникСсылка.Сотрудники
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		Массив		- Структур, см.ПустаяСтруктураДанныхТрудовойДеятельности
//
Функция ДанныеТрудовойДеятельностиСотрудников(ТолькоРазрешенные, ДокументыСЗВТД,  Сотрудники, Организация, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено, ВидыМероприятий = Неопределено, ЗаполнитьВсемиСотрудниками = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Если ТипЗнч(ДокументыСЗВТД) = Тип("Массив") Тогда
		Запрос.УстановитьПараметр("ДокументыСЗВТД", ДокументыСЗВТД);
	Иначе
		МассивДокументов = Новый Массив;
		МассивДокументов.Добавить(ДокументыСЗВТД);
		Запрос.УстановитьПараметр("ДокументыСЗВТД", МассивДокументов);
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА КАК Получать
	|ПОМЕСТИТЬ ВТПолучатьДанныеНаНачало2020Года;
	|";
	Если ТипЗнч(ДокументыСЗВТД) = Тип("ДокументСсылка.СведенияОТрудовойДеятельностиРаботникаСТД_Р") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИСТИНА", "ЛОЖЬ");
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	СотрудникиСЗВТД.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиУчаствующиеВДокументахСЗВТД
	|ИЗ
	|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК СотрудникиСЗВТД
	|ГДЕ
	|	НЕ СотрудникиСЗВТД.Ссылка В (&ДокументыСЗВТД)
	|;";
	Запрос.Выполнить();
	
	Если ЗначениеЗаполнено(НачалоПериода)
		Или ЗначениеЗаполнено(ОкончаниеПериода) Тогда
		
		Запрос.УстановитьПараметр("НачалоПериода", ?(ЗначениеЗаполнено(НачалоПериода), НачалоМесяца(НачалоПериода), '00010101'));
		Запрос.УстановитьПараметр("ОкончаниеПериода", ?(ЗначениеЗаполнено(ОкончаниеПериода), КонецМесяца(ОкончаниеПериода), '39991231'));
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	&НачалоПериода КАК НачалоПериода,
			|	&ОкончаниеПериода КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.Ссылка В(&Сотрудники)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&НачалоПериода КАК Период,
			|	Сотрудники.Ссылка КАК Сотрудник
			|ПОМЕСТИТЬ ВТСотрудникиДляПечатиТрудовыхДоговоров
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.Ссылка В(&Сотрудники)";
		
		УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
		Запрос.Выполнить();
		
	Иначе
		
		Отборы = Новый Массив;
		ДобавитьВКоллекциюОтбор(Отборы, "Сотрудник", "В", Сотрудники);
			
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
		|	Сотрудники.Ссылка КАК Сотрудник
		|ПОМЕСТИТЬ ВТСотрудникиДляПечатиТрудовыхДоговоров
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка В(&Сотрудник)";
		
		Запрос.УстановитьПараметр("Сотрудник", Сотрудники);
		Запрос.Выполнить();
		
		// Получение кадровых данных сотрудника.
		ОписательВременныхТаблиц = Справочники.Сотрудники.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
			Запрос.МенеджерВременныхТаблиц,
			"ВТСотрудникиПериодыДанных", "ДатаПриема,ДатаУвольнения");
		ОписательВременныхТаблиц.Вставить("ИмяВТКадровыеДанныеСотрудников", "ВТТекущиеКадровыеДанныеСотрудников");
		
		КадровыеДанные = "Сотрудник,ДатаПриема,ДатаУвольнения";
		УчетСтраховыхВзносов.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
			|	НАЧАЛОПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, МЕСЯЦ) КАК НачалоПериода,
			|	ВЫБОР
			|		КОГДА ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
			|		ИНАЧЕ КОНЕЦПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, МЕСЯЦ)
			|	КОНЕЦ КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	ВТТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников";
		
		УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Возврат ДанныеТрудовойДеятельностиСотрудниковПоТаблицеОтборов(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, Организация, ВидыМероприятий, Истина, НачалоПериода, ЗаполнитьВсемиСотрудниками);
	
КонецФункции

// Возвращает массив структур с описание трудовой деятельности сотрудников заданной организации
// в заданном периоде. Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по
// конец месяца окончания периода.
//
// Параметры:
//		Организация			- СправочникСсылка.Организации
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		Массив		- Структур, см.ПустаяСтруктураДанныхТрудовойДеятельности
//
Функция ДанныеТрудовойДеятельностиСотрудниковОрганизации(ТолькоРазрешенные, МассивДокументов, Организация, НачалоПериода, ОкончаниеПериода, ВидыМероприятий = Неопределено, ЗаполнитьВсемиСотрудниками = Ложь) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УчетСтраховыхВзносов.СформироватьТаблицуВТФизическиеЛицаРаботавшиеВОрганизации(МенеджерВременныхТаблиц, Организация, НачалоПериода, ОкончаниеПериода);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТФизическиеЛицаРаботавшиеВОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТФизическиеЛицаРаботавшиеВОрганизации КАК ВТФизическиеЛицаРаботавшиеВОрганизации";
	
	СотрудникиОрганизации = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеТрудовойДеятельностиСотрудников(
		ТолькоРазрешенные, МассивДокументов, СотрудникиОрганизации.ВыгрузитьКолонку("ФизическоеЛицо"), Организация, НачалоПериода, ОкончаниеПериода, ВидыМероприятий, ЗаполнитьВсемиСотрудниками);
	
КонецФункции

Функция ВывестиМакетыДокументов(ДокументРезультат, ВыборкаДанныхДляПечати, ПутьКМакету, ОбъектыПечати) Экспорт
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ЧастиПутиКМакету = СтрРазделить(ПутьКМакету, ".");
	ДокументРезультат.КлючПараметровПечати = ЧастиПутиКМакету[ЧастиПутиКМакету.Количество() - 1];
	
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету);
	
	Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("НомерСтрокиСотрудника") Цикл
			
			Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("Организация") Цикл
				
				Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				Шапка = Макет.ПолучитьОбласть("Шапка");
				Шапка.Параметры.Заполнить(ВыборкаДанныхДляПечати);
				Шапка.Параметры.ДатаРождения = СправкиПоНДФЛ.ФорматДатыЧислоВКавычкахМесяцПрописью(Шапка.Параметры.ДатаРождения, Ложь);
				
				ОтформатироватьИНН(Шапка.Параметры, "ИНН");
				ОтформатироватьИНН(Шапка.Параметры, "ПрежнийСтраховательИНН");
				
				Подвал = Макет.ПолучитьОбласть("Подвал");
				Подвал.Параметры.Заполнить(ВыборкаДанныхДляПечати);
				
				ДополнительныеПараметры = Новый Структура("ДатаСведений",
					СправкиПоНДФЛ.ФорматДатыЧислоВКавычкахМесяцПрописью(ВыборкаДанныхДляПечати.Дата, Истина));
				
				Подвал.Параметры.Заполнить(ДополнительныеПараметры);
				
				ДокументРезультат.Вывести(Шапка);
				
				ОбластиСтрок = Новый Массив;
				НомерСтрокиФормы = 1;
				Пока ВыборкаДанныхДляПечати.Следующий() Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаДанныхДляПечати.ВидМероприятия) Тогда
						Продолжить;
					КонецЕсли;
					
					Строка = Макет.ПолучитьОбласть("Строка");
					
					Строка.Параметры.Заполнить(ВыборкаДанныхДляПечати);
					Строка.Параметры.НомерСтрокиФормы = НомерСтрокиФормы;
					
					Строка.Параметры.ТрудоваяФункция = ПредставлениеВыполняемойФункции(ВыборкаДанныхДляПечати);
					
					Строка.Параметры.ВидМероприятия = ПредставлениеВидаМероприятия(ВыборкаДанныхДляПечати);
					
				Если ВыборкаДанныхДляПечати.Дата >= '20210701' Тогда
					Если ЗначениеЗаполнено(ВыборкаДанныхДляПечати.КодПоОКЗ) Тогда
						СтркутраЗаполнения = Новый Структура;
						СтркутраЗаполнения.Вставить("КодПоОКЗ",
							ЭлектронныеТрудовыеКнижки.ПредставлениеКодаОКЗ(ВыборкаДанныхДляПечати.КодПоОКЗ));
						Строка.Параметры.Заполнить(СтркутраЗаполнения);
					КонецЕсли;
				КонецЕсли;
				
					Строка.Параметры.НомерДокументаОснования = ПредставлениеНомераДокументаОснования(ВыборкаДанныхДляПечати);
					
					Если ЗначениеЗаполнено(Строка.Параметры.ОснованиеУвольнения) Тогда
						Строка.Параметры.ОснованиеУвольнения = ПредставлениеПричиныУвольнения(ВыборкаДанныхДляПечати);
					КонецЕсли;
					
					ОбластиСтрок.Добавить(Строка);
					НомерСтрокиФормы = НомерСтрокиФормы + 1;
					
				КонецЦикла;
				
				Для Каждого Строка Из ОбластиСтрок Цикл
					
					МассивОбластей = Новый Массив;
					МассивОбластей.Добавить(Строка);
					Если Строка = ОбластиСтрок[ОбластиСтрок.Количество() - 1] Тогда
						МассивОбластей.Добавить(Подвал);
					КонецЕсли;
					
					Если Не ДокументРезультат.ПроверитьВывод(МассивОбластей) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
						ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
					КонецЕсли;
					
					ДокументРезультат.Вывести(Строка);
					
				КонецЦикла;
				
				ДокументРезультат.Вывести(Подвал);
				
			КонецЦикла;
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДанныхДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПустаяСтруктураДанныхТрудовойДеятельности()
	
	СтруктураДанных = Новый Структура(
		"Сотрудник,
		|Фамилия,
		|Имя,
		|Отчество,
		|СтраховойНомерПФР,
		|ДатаРождения,
		|ЯвляетсяСовместителем,
		|ЗаявлениеОПродолжении,
		|ЗаявлениеОПродолженииДата,
		|ЗаявлениеОПредоставлении,
		|ЗаявлениеОПредоставленииДата");
	
	СтруктураДанных.Вставить("ТрудоваяДеятельность", Новый Массив);
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПустаяСтруктураЗаписиОТрудовойДеятельности()
	
	СтруктураЗаписи = Новый Структура(
		"Регистратор,
		|Сотрудник,
		|СотрудникЗаписи,
		|ДатаМероприятия,
		|ВидМероприятия,
		|Сведения,
		|Подразделение,
		|Должность,
		|РазрядКатегория,
		|КодПоРееструДолжностей,
		|ТрудоваяФункция,
		|НаименованиеДокументаОснования,
		|ДатаДокументаОснования,
		|СерияДокументаОснования,
		|НомерДокументаОснования,
		|ОснованиеУвольнения,
		|КодПоОКЗ,
		|ТерриториальныеУсловия,
		|ДатаС,
		|ДатаПо,
		|ДатаОтмены,
		|Идентификатор,
		|ИдМероприятия");
	
	Возврат СтруктураЗаписи;
	
КонецФункции

Функция ДанныеТрудовойДеятельностиСотрудниковПоТаблицеОтборов(МенеджерВременныхТаблиц, ТолькоРазрешенные, Организация, ВидыМероприятий = Неопределено, УстановленОтбрСотрудников = Ложь, НачалоПериода, ЗаполнитьВсемиСотрудниками)
	
	ДанныеСотрудников = Новый Массив;
	Если НачалоПериода = Неопределено Тогда
		НачалоПериода = Дата('00010101');
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	КадровыеДанные = "ДатаПриема, ДатаУвольнения, Фамилия, Имя, Отчество, СтраховойНомерПФР, ДатаРождения, ВидЗанятости,"
		+ "ПриказОПриемеДата, ПриказОПриемеНомер, ПриказОбУвольненииДата, ПриказОбУвольненииНомер, ПриказОбУвольненииСтатьяТКРФ";
	
	Описатель = Справочники.Сотрудники.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериодыДанных", "Сотрудник,ОкончаниеПериода");
	
	УчетСтраховыхВзносов.СоздатьВТКадровыеДанныеСотрудников(Описатель, ТолькоРазрешенные, КадровыеДанные);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанные.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА КадровыеДанные.ВидЗанятости ЕСТЬ NULL
		|			ТОГДА 9999999999
		|		ИНАЧЕ РАЗНОСТЬДАТ(ВЫБОР
		|					КОГДА КадровыеДанные.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ДАТАВРЕМЯ(2100, 1, 1)
		|					ИНАЧЕ КадровыеДанные.ДатаУвольнения
		|				КОНЕЦ, ДАТАВРЕМЯ(2100, 1, 1), ДЕНЬ) * 100 + 1
		|	КОНЕЦ КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ ВТПриоритетыРабочихМест
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриоритетыРабочихМест.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МИНИМУМ(ПриоритетыРабочихМест.ПриоритетРабочегоМеста) КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ ВТПриоритетыФизическихЛиц
		|ИЗ
		|	ВТПриоритетыРабочихМест КАК ПриоритетыРабочихМест
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриоритетыРабочихМест.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриоритетыРабочихМест.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ПриоритетыРабочихМест.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТПриоритетныеСтрудники
		|ИЗ
		|	ВТПриоритетыРабочихМест КАК ПриоритетыРабочихМест
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыФизическихЛиц КАК ПриоритетыФизическихЛиц
		|		ПО ПриоритетыРабочихМест.ФизическоеЛицо = ПриоритетыФизическихЛиц.ФизическоеЛицо
		|			И ПриоритетыРабочихМест.ПриоритетРабочегоМеста = ПриоритетыФизическихЛиц.ПриоритетРабочегоМеста
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриоритетыРабочихМест.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриоритетныеСтрудники.Сотрудник КАК Сотрудник,
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанные.Фамилия КАК Фамилия,
		|	КадровыеДанные.Имя КАК Имя,
		|	КадровыеДанные.Отчество КАК Отчество,
		|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
		|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР
		|ПОМЕСТИТЬ ВТДанныеФизическихЛиц
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриоритетныеСтрудники КАК ПриоритетныеСтрудники
		|		ПО КадровыеДанные.ФизическоеЛицо = ПриоритетныеСтрудники.ФизическоеЛицо";
	
	УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	
	Запрос.Выполнить();
	
	СоздатьВТКадровыеСобытия(Запрос.МенеджерВременныхТаблиц, Организация, ТолькоРазрешенные);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанные.Сотрудник КАК Сотрудник,
		|	КадровыеСобытия.СотрудникЗаписи КАК СотрудникЗаписи,
		|	КадровыеДанные.Фамилия КАК Фамилия,
		|	КадровыеДанные.Имя КАК Имя,
		|	КадровыеДанные.Отчество КАК Отчество,
		|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
		|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ЛОЖЬ КАК ЯвляетсяСовместителем,
		|	КадровыеСобытия.Регистратор КАК Регистратор,
		|	КадровыеСобытия.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	КадровыеСобытия.ЗаявлениеОПродолженииДата КАК ЗаявлениеОПродолженииДата,
		|	КадровыеСобытия.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	КадровыеСобытия.ЗаявлениеОПредоставленииДата КАК ЗаявлениеОПредоставленииДата,
		|	КадровыеСобытия.ДатаМероприятия КАК ДатаМероприятия,
		|	КадровыеСобытия.ВидМероприятия КАК ВидМероприятия,
		|	КадровыеСобытия.Сведения КАК Сведения,
		|	КадровыеСобытия.Подразделение КАК Подразделение,
		|	КадровыеСобытия.Должность КАК Должность,
		|	КадровыеСобытия.РазрядКатегория КАК РазрядКатегория,
		|	КадровыеСобытия.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	КадровыеСобытия.ТрудоваяФункция КАК ТрудоваяФункция,
		|	КадровыеСобытия.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	КадровыеСобытия.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	КадровыеСобытия.СерияДокументаОснования КАК СерияДокументаОснования,
		|	КадровыеСобытия.НомерДокументаОснования КАК НомерДокументаОснования,
		|	КадровыеСобытия.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	КадровыеСобытия.ДатаС КАК ДатаС,
		|	КадровыеСобытия.ДатаПо КАК ДатаПо,
		|	КадровыеСобытия.ДатаОтмены КАК ДатаОтмены,
		|	КадровыеСобытия.КодПоОКЗ КАК КодПоОКЗ,
		|	КадровыеСобытия.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
		|	КадровыеСобытия.ИдМероприятия КАК ИдМероприятия
		|ИЗ
		|	ВТДанныеФизическихЛиц КАК КадровыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеСобытия КАК КадровыеСобытия
		|		ПО КадровыеДанные.Сотрудник = КадровыеСобытия.Сотрудник
		|			И (&ОтборПоВидамМероприятий
		|				ИЛИ НЕ КадровыеСобытия.ЗаявлениеОПродолжении ЕСТЬ NULL
		|				ИЛИ НЕ КадровыеСобытия.ЗаявлениеОПредоставлении ЕСТЬ NULL)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	ДатаМероприятия";
	
	Если ВидыМероприятий <> Неопределено Тогда
		Запрос.УстановитьПараметр("ВидыМероприятий", ВидыМероприятий);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидамМероприятий", "КадровыеСобытия.ВидМероприятия В (&ВидыМероприятий)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидамМероприятий", "ИСТИНА");
	КонецЕсли;
	
	СписокСвойств = ЭлектронныеТрудовыеКнижки.ДоступныеПоляВсехВидовМероприятий() + ",Сотрудник";
	ДоступныеПоля = ЭлектронныеТрудовыеКнижки.ИменаДоступныхПолейВидовМероприятий();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		
		ДанныеСотрудника = ПустаяСтруктураДанныхТрудовойДеятельности();
		ЗаполнитьЗначенияСвойств(ДанныеСотрудника, Выборка);
		
		
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ВидМероприятия) Тогда
				ЗаписьОДеятельности = ПустаяСтруктураЗаписиОТрудовойДеятельности();
				Если Выборка.ВидМероприятия = ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.Увольнение") Тогда
					ДоступныеПоляСтрокой = ДоступныеПоля[Выборка.ВидМероприятия];
					ДоступныеПоляСтрокой = СтрЗаменить(ДоступныеПоляСтрокой,
						",ОснованиеУвольненияТекстОснования,ОснованиеУвольненияСтатья,ОснованиеУвольненияЧасть,ОснованиеУвольненияПункт,ОснованиеУвольненияПодпункт,ОснованиеУвольненияАбзац",
						"");
					ЗаполнитьЗначенияСвойств(ЗаписьОДеятельности, Выборка, СписокСвойств + "," + ДоступныеПоляСтрокой);
				Иначе
					ЗаполнитьЗначенияСвойств(ЗаписьОДеятельности, Выборка, СписокСвойств + "," + ДоступныеПоля[Выборка.ВидМероприятия]);
				КонецЕсли;
				ЗаписьОДеятельности.Идентификатор = Строка(Новый УникальныйИдентификатор);
				ЗаписьОДеятельности.НомерДокументаОснования = 
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерДокументаОснования, Истина, Истина);
				ДанныеСотрудника.ТрудоваяДеятельность.Добавить(ЗаписьОДеятельности);
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявлениеОПродолжении) 
			И Не ЗначениеЗаполнено(ДанныеСотрудника.ЗаявлениеОПредоставлении)
			И ДанныеСотрудника.ТрудоваяДеятельность.Количество() = 1
			И ДанныеСотрудника.ТрудоваяДеятельность[0].ДатаМероприятия < НачалоПериода 
			И НЕ ЗаполнитьВсемиСотрудниками Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСотрудников.Добавить(ДанныеСотрудника);
		
	КонецЦикла;
	
	Возврат ДанныеСотрудников;
	
КонецФункции

Функция ДоступныеПоляВсехВидовМероприятий() Экспорт
	
	Возврат "ИдМероприятия,ДатаМероприятия,ВидМероприятия,Сведения,НаименованиеДокументаОснования,"
		+ "ДатаДокументаОснования,НомерДокументаОснования,СерияДокументаОснования,ДатаОтмены,СотрудникЗаписи";
	
КонецФункции

Функция ДоступныеПоляВсехВидовМероприятийДокумента() Экспорт 
	
	Возврат ДоступныеПоляВсехВидовМероприятий() + ",Идентификатор,ФиксСтрока";
	
КонецФункции

Функция ИменаДоступныхПолейВидовМероприятий() Экспорт
	
	ДоступныеПоля = Новый Соответствие;
	
	ДоступныеПоля.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.ЗапретЗаниматьДолжность"),
		"Должность,КодПоРееструДолжностей,РазрядКатегория,ТрудоваяФункция,ДатаС,ДатаПо,КодПоОКЗ");
	
	ДоступныеПоля.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.Перевод"),
		"Должность,КодПоРееструДолжностей,РазрядКатегория,Подразделение,ТрудоваяФункция,КодПоОКЗ,ТерриториальныеУсловия");
	
	ДоступныеПоля.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.Переименование"),
		"Должность,КодПоРееструДолжностей,РазрядКатегория,Подразделение,ТрудоваяФункция,КодПоОКЗ,ТерриториальныеУсловия");
	
	ДоступныеПоля.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.Прием"),
		"Должность,КодПоРееструДолжностей,РазрядКатегория,Подразделение,ТрудоваяФункция,КодПоОКЗ,ТерриториальныеУсловия");
	
	ДоступныеПоля.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.Увольнение"),
		"ОснованиеУвольнения,ОснованиеУвольненияТекстОснования,ОснованиеУвольненияСтатья,ОснованиеУвольненияЧасть,ОснованиеУвольненияПункт,ОснованиеУвольненияПодпункт,ОснованиеУвольненияАбзац");   
	
	ДоступныеПоля.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМероприятийТрудовойДеятельности.УстановлениеВторойПрофессии"),
		"Должность,КодПоРееструДолжностей,РазрядКатегория,ТрудоваяФункция,КодПоОКЗ"); 
	
	Возврат ДоступныеПоля;
	
КонецФункции

Процедура СоздатьВТКадровыеСобытия(МенеджерВременныхТаблиц, Организация, ТолькоРазрешенные)
	
	Запрос = ЗапросВТСобытияТрудовыхКнижек(Организация, ТолькоРазрешенные);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗаявлениеСотрудники.ВидЗаявления = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ВедениеБумажнойТрудовойКнижки)
		|				ТОГДА ЗаявлениеСотрудники.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК ЗаявлениеОПродолжении,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗаявлениеСотрудники.ВидЗаявления = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.СведенияОТрудовойДеятельностиВЭлектроннойФорме)
		|				ТОГДА ЗаявлениеСотрудники.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК ЗаявлениеОПредоставлении,
		|	ЗаявлениеСотрудники.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТЗаявленияСотрудников
		|ИЗ
		|	Документ.ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявлениеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ПО ЗаявлениеСотрудники.Сотрудник = СотрудникиПериодыДанных.Сотрудник
		|			И (ЗаявлениеСотрудники.Ссылка.Дата МЕЖДУ СотрудникиПериодыДанных.НачалоПериода И СотрудникиПериодыДанных.ОкончаниеПериода)
		|ГДЕ
		|	НЕ ЗаявлениеСотрудники.ЗаявлениеОтозвано
		|	И ЗаявлениеСотрудники.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявлениеСотрудники.Сотрудник";
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СобытияТрудовыхКнижек.Ссылка КАК Регистратор,
		|	""Приказ"" КАК НаименованиеДокументаОснования,
		|	СобытияТрудовыхКнижек.Номер КАК НомерДокументаОснования,
		|	СобытияТрудовыхКнижек.Дата КАК ДатаДокументаОснования,
		|	ПриоритетныеСтрудники.Сотрудник КАК Сотрудник,
		|	СобытияТрудовыхКнижек.Сотрудник КАК СотрудникЗаписи,
		|	КадровыеДанные.ВидЗанятости КАК ВидЗанятости,
		|	ЗаявленияСотрудников.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	ЗаявленияСотрудников.ЗаявлениеОПродолжении.Дата КАК ЗаявлениеОПродолженииДата,
		|	ЗаявленияСотрудников.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	ЗаявленияСотрудников.ЗаявлениеОПредоставлении.Дата КАК ЗаявлениеОПредоставленииДата,
		|	СобытияТрудовыхКнижек.ДатаМероприятия КАК ДатаМероприятия,
		|	СобытияТрудовыхКнижек.Организация КАК Организация,
		|	СобытияТрудовыхКнижек.Подразделение КАК Подразделение,
		|	СобытияТрудовыхКнижек.Должность КАК Должность,
		|	NULL КАК КодПоРееструДолжностей,
		|	СобытияТрудовыхКнижек.РазрядКатегория КАК РазрядКатегория,
		|	СобытияТрудовыхКнижек.ТрудоваяФункция КАК ТрудоваяФункция,
		|	СобытияТрудовыхКнижек.КодПоОКЗ КАК КодПоОКЗ,
		|	СобытияТрудовыхКнижек.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
		|	СобытияТрудовыхКнижек.ВидМероприятия КАК ВидМероприятия,
		|	СобытияТрудовыхКнижек.СтатьяТКРФ КАК ОснованиеУвольнения,
		|	"""" КАК Сведения,
		|	"""" КАК СерияДокументаОснования,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаС,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПо,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОтмены,
		|	СобытияТрудовыхКнижек.ИдМероприятия КАК ИдМероприятия
		|ПОМЕСТИТЬ ВТКадровыеСобытия
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриоритетныеСтрудники КАК ПриоритетныеСтрудники
		|		ПО КадровыеДанные.ФизическоеЛицо = ПриоритетныеСтрудники.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижек КАК СобытияТрудовыхКнижек
		|		ПО КадровыеДанные.Сотрудник = СобытияТрудовыхКнижек.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияСотрудников КАК ЗаявленияСотрудников
		|		ПО КадровыеДанные.Сотрудник = ЗаявленияСотрудников.Сотрудник";
	
	
	УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПредставлениеВыполняемойФункции(ВыборкаДанных)
	
	ПредставлениеФункции = "";
	
	СоставПредставления = Новый Массив;
	Если ЗначениеЗаполнено(ВыборкаДанных.ТрудоваяФункция) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.ТрудоваяФункция);
	Иначе
		
		Если ЗначениеЗаполнено(ВыборкаДанных.Должность) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.Должность);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДанных.РазрядКатегория) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.РазрядКатегория);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаДанных.КодПоРееструДолжностей) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.КодПоРееструДолжностей);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаДанных.Сведения) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.Сведения);
	КонецЕсли;
	
	ПредставлениеФункции = СтрСоединить(СоставПредставления, ", ");
	
	Если ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Прием
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение Тогда
		
		Если ЗначениеЗаполнено(ВыборкаДанных.Подразделение) Тогда
			ПредставлениеФункции = ?(ЗначениеЗаполнено(ПредставлениеФункции), ПредставлениеФункции + "; ", "") + Строка(ВыборкаДанных.Подразделение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПредставлениеФункции;
	
КонецФункции

Функция ПредставлениеПричиныУвольнения(ВыборкаДанных) Экспорт 
	
	НормативныйДокумент = УчетСтраховыхВзносов.НормативныйДокументОснованияУвольнения(ВыборкаДанных.ОснованиеУвольнения);
	Возврат ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеПричиныУвольнения), ВыборкаДанных.ОснованиеПричиныУвольнения, "")
		+ ?(ЗначениеЗаполнено(НормативныйДокумент), ", ", "") + НормативныйДокумент
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияСтатья), НСтр("ru = ' ст.'"), "") + ВыборкаДанных.ОснованиеУвольненияСтатья
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияЧасть), НСтр("ru = ' ч.'"), "") + ВыборкаДанных.ОснованиеУвольненияЧасть
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияПункт), НСтр("ru = ' п.'"), "") + ВыборкаДанных.ОснованиеУвольненияПункт
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияПодпункт), НСтр("ru = ' пп.'"), "") + ВыборкаДанных.ОснованиеУвольненияПодпункт;
	
КонецФункции

Функция ПредставлениеНомераДокументаОснования(ВыборкаДанных)
	
	Возврат ВыборкаДанных.НомерДокументаОснования + ?(ЗначениеЗаполнено(ВыборкаДанных.СерияДокументаОснования), " ", "") + ВыборкаДанных.СерияДокументаОснования;
	
КонецФункции

Функция ПредставлениеРазрядаКатегории(РазрядКатегория) Экспорт
	
	Возврат СокрЛП(РазрядКатегория);
	
КонецФункции

Функция ПредставлениеВидаМероприятия(Выборка)
	
	ПредставлениеВида = ВРег(Выборка.ВидМероприятия);

	Возврат ПредставлениеВида;
	
КонецФункции

Функция ПредставлениеКодаОКЗ(КодПоОКЗ) Экспорт
	
	Если Не ЗначениеЗаполнено(КодПоОКЗ) Тогда
		Возврат "";
	КонецЕсли;
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодПоОКЗ, "Код,КонтрольноеЧисло");
	Возврат ЗначенияРеквизитов.Код + "." + ЗначенияРеквизитов.КонтрольноеЧисло;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииИспользуемыеПриКонструированииЗапросов

// Производит замену ключевой фразы "ВЫБРАТЬ РАЗРЕШЕННЫЕ" на "ВЫБРАТЬ". Предполагается, что
// текст запроса изначально содержит фразу "ВЫБРАТЬ РАЗРЕШЕННЫЕ".
//
// Параметры:
//		ТекстЗапроса - Строка
//		ТолькоРазрешенные - Булево
//
Процедура УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапроса, ТолькоРазрешенные)
	
	Если Не ТолькоРазрешенные Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли; 
	
КонецПроцедуры

// Добавляет в коллекцию описание отбора.
//
// Параметры:
//		КоллекцияОтборов 	- Массив
//		ЛевоеЗначение		- Строка
//		ВидСравнения		- Строка, допустимы условия, применяемые в текстах запросов.
//		ПравоеЗначение		- Любое значение, допустимое в условиях текстов запросов.
//		ОтносительныйПуть	- Булево, если истина, то в параметре ЛевоеЗначение должно содержаться
//								имя измерения, ресурса, реквизита регистра и перед именем через точку будет
//								подставляться имя таблицы из которой осуществляется выборка.
//
Процедура ДобавитьВКоллекциюОтбор(КоллекцияОтборов, ЛевоеЗначение, ВидСравнения, ПравоеЗначение, ОтносительныйПуть = Истина)
	
	Если КоллекцияОтборов = Неопределено Тогда
		КоллекцияОтборов = Новый Массив;
	КонецЕсли;
	
	ОписаниеОтбора = Новый Структура;
	ОписаниеОтбора.Вставить("ЛевоеЗначение", ЛевоеЗначение);
	ОписаниеОтбора.Вставить("ВидСравнения", ВидСравнения);
	ОписаниеОтбора.Вставить("ПравоеЗначение", ПравоеЗначение);
	ОписаниеОтбора.Вставить("ОтносительныйПуть", ОтносительныйПуть);
	
	КоллекцияОтборов.Добавить(ОписаниеОтбора);
	
КонецПроцедуры

Функция ЗапросВТСобытияТрудовыхКнижек(Организация, ТолькоРазрешенные)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачалаЭлектронныхТрудовыхКнижек", Дата('20200101'));
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриемНаРаботу.Ссылка КАК Ссылка,
		|	ПриемНаРаботу.Ссылка.Номер КАК Номер,
		|	ПриемНаРаботу.Ссылка.Дата КАК Дата,
		|	ПриемНаРаботу.Сотрудник КАК Сотрудник,
		|	ПриемНаРаботу.Сотрудник.Физлицо КАК ФизическоеЛицо,
		|	ПриемНаРаботу.Период КАК ДатаМероприятия,
		|	ПриемНаРаботу.Ссылка.Организация КАК Организация,
		|	ПриемНаРаботу.СтруктурнаяЕдиница КАК Подразделение,
		|	ПриемНаРаботу.Должность КАК Должность,
		|	NULL КАК РазрядКатегория,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Прием) КАК ВидМероприятия,
		|	NULL КАК СтатьяТКРФ
		|ПОМЕСТИТЬ ВТСобытияТрудовыхКнижекПредварительно
		|ИЗ
		|	Документ.ПриемНаРаботу.Сотрудники КАК ПриемНаРаботу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ПО ПриемНаРаботу.Сотрудник = КадровыеДанные.Сотрудник
		|ГДЕ
		|	ПриемНаРаботу.Ссылка.Проведен
		|	И ПриемНаРаботу.Ссылка.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КадровыйПеревод.Ссылка,
		|	КадровыйПеревод.Ссылка.Номер,
		|	КадровыйПеревод.Ссылка.Дата,
		|	КадровыйПеревод.Сотрудник,
		|	КадровыйПеревод.Сотрудник.Физлицо,
		|	КадровыйПеревод.Период,
		|	КадровыйПеревод.Ссылка.Организация,
		|	КадровыйПеревод.СтруктурнаяЕдиница,
		|	КадровыйПеревод.Должность,
		|	NULL,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Перевод),
		|	NULL
		|ИЗ
		|	Документ.КадровоеПеремещение.Сотрудники КАК КадровыйПеревод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ПО КадровыйПеревод.Сотрудник = КадровыеДанные.Сотрудник
		|ГДЕ
		|	КадровыйПеревод.Ссылка.Проведен
		|	И КадровыйПеревод.Ссылка.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Увольнение.Ссылка,
		|	Увольнение.Ссылка.Номер,
		|	Увольнение.Ссылка.Дата,
		|	Увольнение.Сотрудник,
		|	Увольнение.Сотрудник.Физлицо,
		|	Увольнение.Период,
		|	Увольнение.Ссылка.Организация,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Увольнение),
		|	""""
		|ИЗ
		|	Документ.Увольнение.Сотрудники КАК Увольнение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ПО Увольнение.Сотрудник = КадровыеДанные.Сотрудник
		|ГДЕ
		|	Увольнение.Ссылка.Проведен
		|	И Увольнение.Ссылка.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияТрудовыхКнижек.Сотрудник КАК Сотрудник,
		|	СобытияТрудовыхКнижек.ДатаМероприятия КАК ДатаМероприятия,
		|	МАКСИМУМ(СобытияТрудовыхКнижекДоУвольнения.ДатаМероприятия) КАК ДатаПредыдущегоМероприятия
		|ПОМЕСТИТЬ ВТСобытияУвольнения
		|ИЗ
		|	ВТСобытияТрудовыхКнижекПредварительно КАК СобытияТрудовыхКнижек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижекПредварительно КАК СобытияТрудовыхКнижекДоУвольнения
		|		ПО СобытияТрудовыхКнижек.Сотрудник = СобытияТрудовыхКнижекДоУвольнения.Сотрудник
		|			И СобытияТрудовыхКнижек.ДатаМероприятия > СобытияТрудовыхКнижекДоУвольнения.ДатаМероприятия
		|ГДЕ
		|	СобытияТрудовыхКнижек.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	СобытияТрудовыхКнижек.Сотрудник,
		|	СобытияТрудовыхКнижек.ДатаМероприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияТрудовыхКнижек.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(СобытияТрудовыхКнижек.ДатаМероприятия) КАК ДатаМероприятия
		|ПОМЕСТИТЬ ВТПоследняяЗаписьДо2020года
		|ИЗ
		|	ВТСобытияТрудовыхКнижекПредварительно КАК СобытияТрудовыхКнижек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПолучатьДанныеНаНачало2020Года КАК ВТПолучатьДанныеНаНачало2020Года
		|		ПО (ВТПолучатьДанныеНаНачало2020Года.Получать)
		|			И (СобытияТрудовыхКнижек.ДатаМероприятия < &ДатаНачалаЭлектронныхТрудовыхКнижек)
		|			И (СобытияТрудовыхКнижек.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Прием)
		|				ИЛИ СобытияТрудовыхКнижек.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийТрудовойДеятельности.Перевод))
		|
		|СГРУППИРОВАТЬ ПО
		|	СобытияТрудовыхКнижек.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияТрудовыхКнижек.Ссылка КАК Ссылка,
		|	СобытияТрудовыхКнижек.Номер КАК Номер,
		|	СобытияТрудовыхКнижек.Дата КАК Дата,
		|	СобытияТрудовыхКнижек.Сотрудник КАК Сотрудник,
		|	СобытияТрудовыхКнижек.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СобытияТрудовыхКнижек.ДатаМероприятия КАК ДатаМероприятия,
		|	СобытияТрудовыхКнижек.Организация КАК Организация,
		|	СобытияТрудовыхКнижек.Подразделение КАК Подразделение,
		|	СобытияТрудовыхКнижек.Должность КАК Должность,
		|	СобытияТрудовыхКнижек.РазрядКатегория КАК РазрядКатегория,
		|	ЗНАЧЕНИЕ(Справочник.ТрудовыеФункции.ПустаяСсылка) КАК ТрудоваяФункция,
		|	СобытияТрудовыхКнижек.ВидМероприятия КАК ВидМероприятия,
		|	СобытияТрудовыхКнижек.СтатьяТКРФ КАК СтатьяТКРФ,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЗанятий.ПустаяСсылка) КАК КодПоОКЗ,
		|	ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка) КАК ТерриториальныеУсловия,
		|	"""" КАК ИдМероприятия
		|ПОМЕСТИТЬ ВТСобытияТрудовыхКнижек
		|ИЗ
		|	ВТСобытияТрудовыхКнижекПредварительно КАК СобытияТрудовыхКнижек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоследняяЗаписьДо2020года КАК ПоследняяЗаписьДо2020года
		|		ПО СобытияТрудовыхКнижек.Сотрудник = ПоследняяЗаписьДо2020года.Сотрудник
		|			И СобытияТрудовыхКнижек.ДатаМероприятия = ПоследняяЗаписьДо2020года.ДатаМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиУчаствующиеВДокументахСЗВТД КАК СотрудникиУчаствующиеВДокументахСЗВТД
		|		ПО СобытияТрудовыхКнижек.Сотрудник = СотрудникиУчаствующиеВДокументахСЗВТД.Сотрудник
		|ГДЕ
		|	СотрудникиУчаствующиеВДокументахСЗВТД.Сотрудник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СобытияТрудовыхКнижек.Ссылка,
		|	СобытияТрудовыхКнижек.Номер,
		|	СобытияТрудовыхКнижек.Дата,
		|	СобытияТрудовыхКнижек.Сотрудник,
		|	СобытияТрудовыхКнижек.ФизическоеЛицо,
		|	СобытияТрудовыхКнижек.ДатаМероприятия,
		|	СобытияТрудовыхКнижек.Организация,
		|	ЕСТЬNULL(СобытияТрудовыхКнижек.Подразделение, СобытияТрудовыхКнижекПередУвольнением.Подразделение),
		|	ЕСТЬNULL(СобытияТрудовыхКнижек.Должность, СобытияТрудовыхКнижекПередУвольнением.Должность),
		|	ЕСТЬNULL(СобытияТрудовыхКнижек.РазрядКатегория, СобытияТрудовыхКнижекПередУвольнением.РазрядКатегория),
		|	ЗНАЧЕНИЕ(Справочник.ТрудовыеФункции.ПустаяСсылка),
		|	СобытияТрудовыхКнижек.ВидМероприятия,
		|	СобытияТрудовыхКнижек.СтатьяТКРФ,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЗанятий.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловияПФР.ПустаяСсылка),
		|	""""
		|ИЗ
		|	ВТСобытияТрудовыхКнижекПредварительно КАК СобытияТрудовыхКнижек
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСобытияУвольнения КАК СобытияУвольнения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижекПредварительно КАК СобытияТрудовыхКнижекПередУвольнением
		|			ПО СобытияУвольнения.Сотрудник = СобытияТрудовыхКнижекПередУвольнением.Сотрудник
		|				И СобытияУвольнения.ДатаПредыдущегоМероприятия = СобытияТрудовыхКнижекПередУвольнением.ДатаМероприятия
		|		ПО СобытияТрудовыхКнижек.Сотрудник = СобытияУвольнения.Сотрудник
		|			И СобытияТрудовыхКнижек.ДатаМероприятия = СобытияУвольнения.ДатаМероприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ПО СобытияТрудовыхКнижек.Сотрудник = СотрудникиПериодыДанных.Сотрудник
		|			И (СобытияТрудовыхКнижек.ДатаМероприятия МЕЖДУ СотрудникиПериодыДанных.НачалоПериода И СотрудникиПериодыДанных.ОкончаниеПериода)";
	
	Возврат Запрос;
	
КонецФункции

Процедура ОтформатироватьИНН(Параметры, ИмяРеквизитаИНН)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры, ИмяРеквизитаИНН) Тогда
		Если ЗначениеЗаполнено(Параметры[ИмяРеквизитаИНН]) Тогда
			Параметры[ИмяРеквизитаИНН] = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(
				Параметры[ИмяРеквизитаИНН], 12, "-", "Справа");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти


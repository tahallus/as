#Область ПрограммныйИнтерфейс

// Функция возвращает пустую структуру состояния кассовой смены.
//
Функция ПолучитьСтруктуруОписанияКассовойСмены()
	
	СостояниеКассовойСмены = Новый Структура;
	СостояниеКассовойСмены.Вставить("НачалоКассовойСмены");
	СостояниеКассовойСмены.Вставить("ОкончаниеКассовойСмены");
	СостояниеКассовойСмены.Вставить("СтатусКассовойСмены");
	СостояниеКассовойСмены.Вставить("ОтчетОРозничныхПродажах");
	//СостояниеКассовойСмены.Вставить("НаличностьВКассе");
	СостояниеКассовойСмены.Вставить("НомерКассовойСмены");
	СостояниеКассовойСмены.Вставить("СменаОткрыта", Ложь);
	
	// Описание реквизитов кассовой смены.
	//СостояниеКассовойСмены.Вставить("КассаККМ");
	//СостояниеКассовойСмены.Вставить("Организация");
	//СостояниеКассовойСмены.Вставить("Кассир");
	//СостояниеКассовойСмены.Вставить("СтруктурнаяЕдиница");
	//СостояниеКассовойСмены.Вставить("ВалютаДокумента");
	//СостояниеКассовойСмены.Вставить("ВалютаДокументаПредставление");
	//СостояниеКассовойСмены.Вставить("ОтчетОРозничныхПродажах");
	//СостояниеКассовойСмены.Вставить("ВидЦен");
	//СостояниеКассовойСмены.Вставить("Подразделение");
	//СостояниеКассовойСмены.Вставить("СуммаВключаетНДС");
	//СостояниеКассовойСмены.Вставить("НДСВключатьВСтоимость");
	//СостояниеКассовойСмены.Вставить("НалогообложениеНДС");
	//СостояниеКассовойСмены.Вставить("Ответственный");
	
	Возврат СостояниеКассовойСмены;
	
КонецФункции

// Функция возвращает структуру, характеризующую состояние последней кассовой смены по кассе ККМ.
//
Функция ПолучитьСостояниеКассовойСмены() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассоваяСменаДокумент.Номер КАК НомерКассовойСмены,
	|	КассоваяСменаДокумент.Ссылка КАК ОтчетОРозничныхПродажах,
	|	КассоваяСменаДокумент.Статус КАК СтатусКассовойСмены,
	|	КассоваяСменаДокумент.НачалоКассовойСмены КАК НачалоКассовойСмены,
	|	КассоваяСменаДокумент.ОкончаниеКассовойСмены КАК ОкончаниеКассовойСмены,
	|	ВЫБОР
	|		КОГДА КассоваяСменаДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСменыМП.Открыта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СменаОткрыта
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажахМП КАК КассоваяСменаДокумент
	|ГДЕ
	|	НЕ КассоваяСменаДокумент.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассоваяСменаДокумент.Дата УБЫВ,
	|	ОтчетОРозничныхПродажах УБЫВ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ОписаниеКассовойСмены = ПолучитьСтруктуруОписанияКассовойСмены();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ОписаниеКассовойСмены, Выборка);
	КонецЕсли;
	
	Возврат ОписаниеКассовойСмены;
	
КонецФункции

// Функция выполняет закрытие кассовой смены.
//
Функция ЗаполнитьОтчетОРозничныхПродажах(ОтчетОРозничныхПродажахОбъект) Экспорт
	
	СтруктураВозвращаемоеЗначение = Новый Структура;
	СтруктураВозвращаемоеЗначение.Вставить("ОтчетОРозничныхПродажах");
	СтруктураВозвращаемоеЗначение.Вставить("ОписаниеОшибки");
	
	//МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Подготовка данных.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЧекККМЗапасы.Товар КАК Товар,
	|	СУММА(ЧекККМЗапасы.Количество) КАК Количество,
	|	ЧекККМЗапасы.Цена КАК Цена,
	|	СУММА(ЧекККМЗапасы.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЧекККМЗапасы.Товар КАК Товар,
	|		ЧекККМЗапасы.Количество КАК Количество,
	|		ЧекККМЗапасы.Цена КАК Цена,
	|		ЧекККМЗапасы.Сумма КАК Сумма
	|	ИЗ
	|		Документ.ЧекККММП.Товары КАК ЧекККМЗапасы
	|	ГДЕ
	|		ЧекККМЗапасы.Ссылка.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|		И ЧекККМЗапасы.Ссылка.Проведен
	|		И ЧекККМЗапасы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусЧекаККММП.Пробит)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЧекККМЗапасы.Товар,
	|		-ЧекККМЗапасы.Количество,
	|		ЧекККМЗапасы.Цена,
	|		-ЧекККМЗапасы.Сумма
	|	ИЗ
	|		Документ.ЧекККМВозвратМП.Товары КАК ЧекККМЗапасы
	|	ГДЕ
	|		ЧекККМЗапасы.Ссылка.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|		И ЧекККМЗапасы.Ссылка.Проведен
	|		И ЧекККМЗапасы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусЧекаККММП.Пробит)) КАК ЧекККМЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМЗапасы.Товар,
	|	ЧекККМЗапасы.Цена";
	
	//Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажахОбъект.Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Запасы = Результат[0].Выгрузить();
	ОтчетОРозничныхПродажахОбъект.Товары.Очистить();
	
	Для каждого СтрокаТЧ Из Запасы Цикл
		
		Если СтрокаТЧ.Сумма <> 0 Тогда
			СтрокаТабличнойЧастиЗапасы = ОтчетОРозничныхПродажахОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧастиЗапасы, СтрокаТЧ);
		КонецЕсли;
		
	КонецЦикла;
	
	ОтчетОРозничныхПродажахОбъект.Статус = Перечисления.СтатусыКассовойСменыМП.Закрыта;
	Если ОтчетОРозничныхПродажахОбъект.ДополнительныеСвойства.Свойство("ЗагрузкаИзВнешнегоИсточника") <> Истина Тогда
		ДатаЗакрытияКассовойСмены = ТекущаяДата();
		ОтчетОРозничныхПродажахОбъект.Дата = ДатаЗакрытияКассовойСмены;
		ОтчетОРозничныхПродажахОбъект.ОкончаниеКассовойСмены = ДатаЗакрытияКассовойСмены;
	КонецЕсли;
	ОтчетОРозничныхПродажахОбъект.СуммаДокумента = ОтчетОРозничныхПродажахОбъект.Товары.Итог("Сумма");
	
	ОтчетОРозничныхПродажахОбъект.Записать(РежимЗаписиДокумента.Запись);
	СтруктураВозвращаемоеЗначение.ОписаниеОшибки = "";
	СтруктураВозвращаемоеЗначение.ОтчетОРозничныхПродажах = ОтчетОРозничныхПродажахОбъект.Ссылка;
	
	Попытка
		ОтчетОРозничныхПродажахОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		СтруктураВозвращаемоеЗначение.ОписаниеОшибки = НСтр("ru = 'При формировании отчета о розничных продажах произошла ошибка.'");
		// Сбор статистики
		Инфо = ИнформацияОбОшибке();
		ПолноеОписание = ПодробноеПредставлениеОшибки(Инфо);
		СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОшибкуВGA(ПолноеОписание);
		// Конец сбор статистики
	КонецПопытки;
		
	Возврат СтруктураВозвращаемоеЗначение;
	
КонецФункции // ЗакрытьОтчетОРозничныхПродажах()

// Функция выполняет открытие кассовой смены.
//
Функция ОткрытьКассовуюСмену(ОтчетОРозничныхПродажах = Неопределено) Экспорт
	
	Результат = Истина;
	
	СтруктураСостояниеКассовойСмены = ПолучитьСостояниеКассовойСмены();
	ДатаОткрытияКассовойСмены = ТекущаяДата();
	
	НужноОткрытьКассовуюСмену = Ложь;
	
	Если СтруктураСостояниеКассовойСмены.СтатусКассовойСмены = Перечисления.СтатусыКассовойСменыМП.Открыта Тогда
		// Если смена открыта, то с момента открытия должно пройти не больше чем 24 часа.
		Если ДатаОткрытияКассовойСмены - СтруктураСостояниеКассовойСмены.НачалоКассовойСмены < 86400 Тогда
			ОтчетОРозничныхПродажах = СтруктураСостояниеКассовойСмены.ОтчетОРозничныхПродажах;
		Иначе
			ЗакрытьКассовуюСмену();
			НужноОткрытьКассовуюСмену = Истина;
		КонецЕсли;
	Иначе
		НужноОткрытьКассовуюСмену = Истина;
	КонецЕсли;
	
	Если НужноОткрытьКассовуюСмену Тогда;
		
		// Смена закрыта. Откроем новую кассовую смену.
		НовыйДокумент = Документы.ОтчетОРозничныхПродажахМП.СоздатьДокумент();
		НовыйДокумент.Дата                   = ДатаОткрытияКассовойСмены;
		НовыйДокумент.Статус                 = Перечисления.СтатусыКассовойСменыМП.Открыта;
		НовыйДокумент.НачалоКассовойСмены    = ДатаОткрытияКассовойСмены;
		НовыйДокумент.ОкончаниеКассовойСмены = '00010101';
		
		#Если МобильноеПриложениеСервер Тогда
			
			НовыйДокумент.КассаККМ = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("КассаККММобильногоПриложения");
			Если ЗначениеЗаполнено(НовыйДокумент.КассаККМ) Тогда
				НовыйДокумент.РозничнаяТочка = НовыйДокумент.КассаККМ.РозничнаяТочка;
			КонецЕсли;
			
		#КонецЕсли
		
		Если НовыйДокумент.ПроверитьЗаполнение() Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			ОтчетОРозничныхПродажах = НовыйДокумент.Ссылка;
		Иначе
			Результат = Ложь;
			Сообщить("ru = 'Проверьте настройки кассы ККМ.'");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Процедура выполняет закрытие кассовой смены.
//
Функция ЗакрытьКассовуюСмену() Экспорт
	
	ОтчетОРозничныхПродажах = Неопределено;
	
	СтруктураСостояниеКассовойСмены = ПолучитьСостояниеКассовойСмены();
	
	Если НЕ ЗначениеЗаполнено(СтруктураСостояниеКассовойСмены.ОтчетОРозничныхПродажах) Тогда
		Возврат Новый Структура("ОписаниеОшибки", НСтр("ru='Не найдена открытая смена'"));
	КонецЕсли;
	
	ОтчетОРозничныхПродажахОбъект = СтруктураСостояниеКассовойСмены.ОтчетОРозничныхПродажах.ПолучитьОбъект();
	СтруктураВозвращаемоеЗначение = ЗаполнитьОтчетОРозничныхПродажах(ОтчетОРозничныхПродажахОбъект);
	
	Возврат СтруктураВозвращаемоеЗначение;
	
КонецФункции // СформироватьОтчетОРозничныхПродажахИВыполнитьАрхивацию()

Функция ЕстьПодключенныеКассыККМ() Экспорт
	
	МассивОборудования = Новый Массив;
	МассивОборудования.Добавить("ФискальныйРегистратор");
	МассивОборудования.Добавить("ККТ");
	
	Результат = Справочники.ПодключаемоеОборудование.ОборудованиеПоПараметрам(МассивОборудования);
	
	Возврат Результат.Количество() > 0;
	
КонецФункции

Функция ПолучитьСистемуНалогообложенияККТ() Экспорт
	
	СистемаНалогообложения = Константы.СистемаНалогообложенияМП.Получить();
	
	Если СистемаНалогообложения = Перечисления.СистемыНалогообложенияМП.Общая Тогда
		
		Возврат Перечисления.ТипыСистемНалогообложенияККТ.ОСН;
		
	ИначеЕсли СистемаНалогообложения = Перечисления.СистемыНалогообложенияМП.УпрощеннаяДоход Тогда
		
		Возврат Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход;
		
	ИначеЕсли СистемаНалогообложения = Перечисления.СистемыНалогообложенияМП.УпрощеннаяДоходМинусРасход Тогда
		
		Возврат Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход;
		
	ИначеЕсли СистемаНалогообложения = Перечисления.СистемыНалогообложенияМП.ЕдиныйНалогНаВмененныйДоход Тогда
		
		Возврат Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
		
	ИначеЕсли СистемаНалогообложения = Перечисления.СистемыНалогообложенияМП.ЕдиныйСельскохозяйственныйНалог Тогда
		
		Возврат Перечисления.ТипыСистемНалогообложенияККТ.ЕСН;
		
	ИначеЕсли СистемаНалогообложения = Перечисления.СистемыНалогообложенияМП.Патентная Тогда
		
		Возврат Перечисления.ТипыСистемНалогообложенияККТ.Патент;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСуммуПродажЗаТекущуюСмену() Экспорт
	
	СостояниеСмены = ПолучитьСостояниеКассовойСмены();
	Если ЗначениеЗаполнено(СостояниеСмены.ОтчетОРозничныхПродажах)
		И СостояниеСмены.СменаОткрыта Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ЧекККМ.СуммаДокумента) КАК СуммаДокумента
		|ИЗ
		|	Документ.ЧекККММП КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
		|	И ЧекККМ.Проведен";
		Запрос.УстановитьПараметр("ОтчетОРозничныхПродажах", СостояниеСмены.ОтчетОРозничныхПродажах);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.СуммаДокумента;
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Возврат НСтр("ru='Нет открытых смен'");
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПризнакПредметаРасчетаТовара(Товар) Экспорт
	
	Если Товар.Вид = Перечисления.ВидыТоваровМП.Услуга Тогда
		Возврат Перечисления.ПризнакиПредметаРасчета.Услуга;
	ИначеЕсли Товар.Вид = Перечисления.ВидыТоваровМП.Товар Тогда
		Возврат Перечисления.ПризнакиПредметаРасчета.Товар;
	Иначе
		Возврат Перечисления.ПризнакиПредметаРасчета.ИнойПредметРасчета;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНомерСмены() Экспорт
	
	ОткрытаяСмена = ПолучитьСмену();
	
	Если ОткрытаяСмена <> Неопределено Тогда
		Возврат ОткрытаяСмена.Номер;
	КонецЕсли;
	
	ПоследняяСмена = ПолучитьПоследнююЗакрытуюСмену();
	
	Если ПоследняяСмена <> Неопределено Тогда
		Возврат ПоследняяСмена.Номер + 1;
	КонецЕсли;
	
	НомерПервойСмены = 1;
	Возврат НомерПервойСмены;
	
КонецФункции

Функция ПолучитьСмену() Экспорт
	
	КассоваяСмена = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажахМП КАК КассоваяСмена
	|ГДЕ
	|	КассоваяСмена.Проведен
	|	И КассоваяСмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСменыМП.Открыта)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПоследнююЗакрытуюСмену()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажахМП КАК КассоваяСмена
	|ГДЕ
	|	КассоваяСмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСменыМП.Закрыта)
	|	И КассоваяСмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСменыМП.ЗакрытаЧекиЗаархивированы)
	|	И КассоваяСмена.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассоваяСмена.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

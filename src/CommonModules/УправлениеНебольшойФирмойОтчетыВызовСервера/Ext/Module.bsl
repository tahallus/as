
#Область СлужебныйПрограммныйИнтерфейс

Функция КомпоновщикНастроекВариантаОтчета(СвойстваВариантаОтчета) Экспорт
	
	СхемаКомпоновкиДанных = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СвойстваВариантаОтчета.КлючОбъекта).ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ИскомыйВариантОтчета = СхемаКомпоновкиДанных.ВариантыНастроек.Найти(СвойстваВариантаОтчета.КлючВарианта);
	
	Если ИскомыйВариантОтчета <> Неопределено Тогда
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.ЗагрузитьНастройки(ИскомыйВариантОтчета.Настройки);
		Возврат КомпоновщикНастроек;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьЗначениеРасшифровки(Поле, Расшифровка, ОтчетДанныеРасшифровки, Знач ТекущийОтчет = Неопределено) Экспорт
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(ОтчетДанныеРасшифровки);
	МассивПолейРасшифровки = ПолучитьМассивПолейРасшифровки(Расшифровка, ДанныеРасшифровки, ТекущийОтчет, Истина);
	Для Каждого ЗначениеПоляРасшифровки Из МассивПолейРасшифровки Цикл
		Если ТипЗнч(ЗначениеПоляРасшифровки) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") И ЗначениеПоляРасшифровки.Поле = Поле Тогда
			Возврат ЗначениеПоляРасшифровки.Значение;
		ИначеЕсли ТипЗнч(ЗначениеПоляРасшифровки) = Тип("ЭлементОтбораКомпоновкиДанных") И ЗначениеПоляРасшифровки.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Поле) Тогда
			Возврат ЗначениеПоляРасшифровки.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолеРасшифровки(ОтчетДанныеРасшифровки, Расшифровка) Экспорт
		
	Данные = ПолучитьИзВременногоХранилища(ОтчетДанныеРасшифровки);
	ЭлементРасшифровки = Данные.Элементы.Получить(Расшифровка);
	Поля = ЭлементРасшифровки.ПолучитьПоля();
	Если Поля.Количество() = 0 Тогда
		ИмяПоля = "";
	Иначе 
		ИмяПоля = Поля[0].Поле;
	КонецЕсли;
	Возврат ИмяПоля;
	
КонецФункции

Функция НастройкиРасшифровкиПоРегистратору(ОтчетДанныеРасшифровки, Расшифровка, АдресСхемы) Экспорт
	
    ОбработкаРасшифровки =  Новый ОбработкаРасшифровкиКомпоновкиДанных(ОтчетДанныеРасшифровки, 
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
    Возврат ОбработкаРасшифровки.Расшифровать(Расшифровка, Новый ПолеКомпоновкиДанных("Регистратор"));
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Возвращает массив, по которому следует расшифровать отчет
Функция ПолучитьМассивПолейРасшифровки(Расшифровка, ДанныеРасшифровки, ТекущийОтчет = Неопределено, ВключатьРесурсы = Ложь)
	
	МассивПолейРасшифровки = Новый Массив;
	
	Если ТипЗнч(Расшифровка) <> Тип("ИдентификаторРасшифровкиКомпоновкиДанных") 
	   И ТипЗнч(Расшифровка) <> Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		Возврат МассивПолейРасшифровки;
	КонецЕсли;
	
	Если ТекущийОтчет = Неопределено Тогда
		ТекущийОтчет = ДанныеРасшифровки;
	КонецЕсли;
	
	// Добавим поля родительских группировок
	ДобавитьРодителей(ДанныеРасшифровки.Элементы[Расшифровка], ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы);
	
	Количество = МассивПолейРасшифровки.Количество();
	Для Индекс = 1 По Количество Цикл
		ОбратныйИндекс = Количество - Индекс;
		Для ИндексВнутри = 0 По ОбратныйИндекс - 1 Цикл
			Если МассивПолейРасшифровки[ОбратныйИндекс].Поле = МассивПолейРасшифровки[ИндексВнутри].Поле Тогда
				МассивПолейРасшифровки.Удалить(ОбратныйИндекс);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Добавим отбор, установленный в отчете
	Для каждого ЭлементОтбора Из ТекущийОтчет.Настройки.Отбор.Элементы Цикл
		Если Не ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		МассивПолейРасшифровки.Добавить(ЭлементОтбора);
	КонецЦикла;
	
	Возврат МассивПолейРасшифровки;
	
КонецФункции

Процедура ДобавитьРодителей(ЭлементРасшифровки, ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы = Ложь)
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого Поле Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			ДоступноеПоле = ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(Новый ПолеКомпоновкиДанных(Поле.Поле), ТекущийОтчет);
			Если ДоступноеПоле = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если Не ВключатьРесурсы И ДоступноеПоле.Ресурс Тогда
				Продолжить;
			КонецЕсли;
			МассивПолейРасшифровки.Добавить(Поле);
		КонецЦикла;
	КонецЕсли;
	Для каждого Родитель Из ЭлементРасшифровки.ПолучитьРодителей() Цикл
		ДобавитьРодителей(Родитель, ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает доступное поле по полю компоновки
Функция ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(ПолеКомпоновкиДанных, ОбластьПоиска)
	
	Если ТипЗнч(ПолеКомпоновкиДанных) = Тип("Строка") Тогда
		ПолеПоиска = Новый ПолеКомпоновкиДанных(ПолеКомпоновкиДанных);
	Иначе
		ПолеПоиска = ПолеКомпоновкиДанных;
	КонецЕсли;
	
	Если ТипЗнч(ОбластьПоиска) = Тип("КомпоновщикНастроекКомпоновкиДанных")
	 Или ТипЗнч(ОбластьПоиска) = Тип("ДанныеРасшифровкиКомпоновкиДанных")
	 Или ТипЗнч(ОбластьПоиска) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		Возврат ОбластьПоиска.Настройки.ДоступныеПоляВыбора.НайтиПоле(ПолеПоиска);
	Иначе
		Возврат ОбластьПоиска.НайтиПоле(ПолеПоиска);
	КонецЕсли;
	
КонецФункции

#КонецОбласти 


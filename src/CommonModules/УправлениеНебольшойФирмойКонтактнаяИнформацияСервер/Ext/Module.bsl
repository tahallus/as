
#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает описание типов метаданных для которых необходимо извлекать адреса электронной почты
//
Функция ПолучитьТипыМетаданныхСодержащиеПартнерскиеEmail() Экспорт
	
	СписокТиповМетаданныхСодержащиеEmail = Новый СписокЗначений;
	
	СписокТиповМетаданныхСодержащиеEmail.Добавить(Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	СписокТиповМетаданныхСодержащиеEmail.Добавить(Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛица"));
	
	Возврат СписокТиповМетаданныхСодержащиеEmail;
	
КонецФункции // ПолучитьТипыМетаданныхСодержащиеПартнерскиеEmail()

// Функция формирует получателей с адресами электронной почты для отправки электронного письма.
//
// Параметры:
//  Получатели			 - Список значений	 - допустимые типы элементов СправочникСсылка.Контрагенты, СправочникСсылка.КонтактныеЛица
//  ВключаяПодчиненные	 - Булево	 - признак включения в результат контактных лиц для контрагентов
// Возвращаемое значение:
//  Массив - Массив структур с ключами:
//   * Представление - СправочникСсылка.Контрагенты, СправочникСсылка.КонтактныеЛица
//   * Адрес - Строка
//   * ВидПочтовогоАдреса - не используется
Функция ПодготовитьЭлектронныеАдресаПолучателей(знач Получатели, ВключаяПодчиненные = Истина) Экспорт
	
	ЭлектронныеАдресаПолучателей = Новый Массив;
	Если Получатели.Количество() = 0 Тогда
		Возврат ЭлектронныеАдресаПолучателей;
	КонецЕсли;
	АдресЭлектроннойПочты = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	
	МассивПолучателей = Получатели.ВыгрузитьЗначения();
	ТаблицаEmail = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивПолучателей, 
		АдресЭлектроннойПочты, , ТекущаяДатаСеанса());
	
	Для каждого Получатель Из Получатели Цикл
		
		ЗначениеЭлементаСпискаЗначений = Получатель.Значение;
		
		АдресаЭП = "";
		МассивНайденныхСтрок = ТаблицаEmail.НайтиСтроки(Новый Структура("Объект", ЗначениеЭлементаСпискаЗначений));
		Для Каждого СтрокаКИ Из МассивНайденныхСтрок Цикл
			АдресаЭП = АдресаЭП + ?(АдресаЭП = "", "", "; ") + СтрокаКИ.Представление;
		КонецЦикла;
		
		СтруктураПолучателя = Новый Структура("
			|Представление,
			|Адрес,
			|ИсточникКонтактнойИнформации,
			|ВидПочтовогоАдреса"); // Необходим для чтения подсистемой БСП - ОбщаяФорма.ПодготовкаНовогоПисьма
		СтруктураПолучателя.Представление = ЗначениеЭлементаСпискаЗначений;
		СтруктураПолучателя.Адрес = АдресаЭП;
		СтруктураПолучателя.ИсточникКонтактнойИнформации = ЗначениеЭлементаСпискаЗначений;
		
		ЭлектронныеАдресаПолучателей.Добавить(СтруктураПолучателя);
		
		// Получим E-mail контактных лиц при помощи рекурсии
		Если ВключаяПодчиненные 
			И ТипЗнч(ЗначениеЭлементаСпискаЗначений) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			СписокКонтактов = Новый СписокЗначений;
			МассивКонтактов = Справочники.Контрагенты.СвязанныеКонтакты(ЗначениеЭлементаСпискаЗначений);
			
			Для Каждого Контакт Из МассивКонтактов Цикл
				СписокКонтактов.Добавить(Контакт);
			КонецЦикла;
			
			ЭлектронныеАдресаКонтактныхЛиц = ПодготовитьЭлектронныеАдресаПолучателей(
				СписокКонтактов,
				Ложь);
			
			Для каждого ЭлементАдреса Из ЭлектронныеАдресаКонтактныхЛиц Цикл
				
				ЭлектронныеАдресаПолучателей.Добавить(ЭлементАдреса);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЭлектронныеАдресаПолучателей;
	
КонецФункции

#КонецОбласти
#Область ПрограммныйИнтерфейс

// Отображает информацию пользователю об очистке дисконтных карт и скидках
//
// Параметры:
//  ПоказыватьОповещение - Булево - признак отображения оповещения, при установке в Ложь будет
//                                  отображено предупреждение.
//
Процедура ПоказатьПользователюИнформациюОбОчисткеДКИРучныхСкидок(ПоказыватьОповещение = Истина) Экспорт
	
	Если ПоказыватьОповещение Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Очищена дисконтная карта'")
			,,
			НСтр("ru = 'Очищена дисконтная карта'")
			, БиблиотекаКартинок.Внимание16
			,
			СтатусОповещенияПользователя.Информация);
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Очищена дисконтная карта'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обрабатывает событие активизации строки списка документов.
//
Процедура ДисконтныеКартыИнформационнаяПанельОбработатьАктивизациюСтрокиСписка(Форма, ПараметрыИнформационнойПанели) Экспорт
	
	ТекущиеДанныеСписка = Форма.Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанныеСписка <> Неопределено
		И ТекущиеДанныеСписка.Свойство(ПараметрыИнформационнойПанели.РеквизитКИ) Тогда
		
		ТекущийРеквизитКИ = ТекущиеДанныеСписка[ПараметрыИнформационнойПанели.РеквизитКИ];
		
		Если Форма.ИнформацияСсылка <> ПараметрыИнформационнойПанели.ДисконтнаяКарта Тогда
			
			Если ЗначениеЗаполнено(ПараметрыИнформационнойПанели.ДисконтнаяКарта) Тогда
				
				ДанныеИП = ИнформационнаяПанельУНФСервер.ИнформационнаяПанельПолучитьДанные(ТекущийРеквизитКИ, ПараметрыИнформационнойПанели);
				ДисконтныеКартыИнформационнаяПанельЗаполнить(Форма, ПараметрыИнформационнойПанели, ДанныеИП);
				
				Форма.ИнформацияСсылка = ТекущийРеквизитКИ;
				
			Иначе
				
				ДисконтныеКартыИнформационнаяПанельЗаполнить(Форма, ПараметрыИнформационнойПанели);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ДисконтныеКартыИнформационнаяПанельЗаполнить(Форма, ПараметрыИнформационнойПанели);
		
	КонецЕсли;
	
КонецПроцедуры // ИнформационнаяПанельОбработатьАктивизациюСтрокиСписка()

Функция ПреобразоватьДанныеСоСканераВМассив(Параметр) Экспорт
	
	Данные = Новый Массив;
	Данные.Добавить(ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
	
	Возврат Данные;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет данные информационной панели списка.
//
Процедура ДисконтныеКартыИнформационнаяПанельЗаполнить(Форма, ПараметрыИнформационнойПанели, ДанныеИП = Неопределено)
	
	Если ДанныеИП = Неопределено Тогда
	
		Форма.ИнформацияСсылка = Неопределено;
		
		// Контактная информация контрагентов.
		Если ПараметрыИнформационнойПанели.Свойство("Контрагент") Тогда
			
			Форма.ИнформацияКонтрагентТелефон = "";
			Форма.ИнформацияКонтрагентЭП = "";
			Форма.ИнформацияПроцентСкидкиПоДисконтнойКарте = "";
			Форма.ИнформацияСуммаПродажПоДисконтнойКарте = "";
			
		КонецЕсли;
		
	Иначе
		
		// Контактная информация контрагентов.
		Если ПараметрыИнформационнойПанели.Свойство("Контрагент") Тогда
			
			Форма.ИнформацияКонтрагентТелефон 				= ДанныеИП.Телефон;
			Форма.ИнформацияКонтрагентЭП 					= ДанныеИП.ЭлПочта;
			Форма.ИнформацияПроцентСкидкиПоДисконтнойКарте 	= ДанныеИП.ПроцентСкидкиПоДисконтнойКарте;
			Форма.ИнформацияСуммаПродажПоДисконтнойКарте	= ДанныеИП.СуммаПродажПоДисконтнойКарте;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ИнформационнаяПанельЗаполнить()

Функция ПреобразоватьДанныеСоСканераВСтруктуру(Параметр)
	
	Если Параметр[1] = Неопределено Тогда
		Данные = Новый Структура("Штрихкод, Количество", Параметр[0], 1); 	 // Достаем штрихкод из основных данных
	Иначе
		Данные = Новый Структура("Штрихкод, Количество", Параметр[1][1], 1); // Достаем штрихкод из дополнительных данных
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

#КонецОбласти
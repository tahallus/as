////////////////////////////////////////////////////////////////////////////////
// Подсистема "Сервис доставки".
// ОбщийМодуль.СервисДоставкиПовтИсп.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Параметры соединения к сервисам.
//
// Параметры:
//  ИмяСервиса	 - Строка - имя сервиса "БизнесСеть", "Рубрикатор", "ТорговыеПредложения"
// 
// Возвращаемое значение:
//  Структура - параметры соединения:
//   * Сервер - Строка - имя сервера.
//   * Порт - Число - порт соединения.
//   * Аутентификация - Булево - требуется аутентификация по токену.
//   * Таймаут - Число - длительность ожидания ответа в секундах.
//   * ЗащищенноеСоединение - ЗащищенноеСоединениеOpenSSL - объект защищенного соединения OpenSSL.
//   * Прокси - ИнтернетПрокси - параметры прокси-сервера.
//   * ИдентификаторПрограммы - Строка - уникальный идентификатор информационной базы.
//
Функция ПараметрыСоединения(ИмяСервиса) Экспорт

	ПараметрыСоединения = Неопределено;
	
	Если ИмяСервиса = "Доставка" Тогда
		ПараметрыСоединения = НовыйПараметрыСоединения("edi.1cfresh.com",443, Истина);
		ПараметрыСоединения.Аутентификация = Ложь;
		ПараметрыСоединения.Таймаут = 120;
	КонецЕсли;
	
	Возврат ПараметрыСоединения;

КонецФункции

// См. СервисДоставкиСлужебный.Типы.
Функция ТипыДанных() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Простой",   Новый ОписаниеТипов("Строка, Булево, Число, Дата, Null"));
	Результат.Вставить("Булево",    Новый ОписаниеТипов("Булево, Null"));
	Результат.Вставить("Число",     Новый ОписаниеТипов("Число, Null"));
	Результат.Вставить("Дата",      Новый ОписаниеТипов("Дата, Null"));
	Результат.Вставить("Строка",    Новый ОписаниеТипов("Строка, Null"));
	Результат.Вставить("Структура", Новый ОписаниеТипов("Структура, Null"));
	Результат.Вставить("Массив",    Новый ОписаниеТипов("Массив, Null"));
	Результат.Вставить("Таблица",   Новый ОписаниеТипов("ТаблицаЗначений, Null"));
	Результат.Вставить("Цена",      Новый ОписаниеТипов("Число, Null", 
		Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
		
	Результат.Вставить("Ссылка",    Неопределено);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйПараметрыСоединения(Сервер = "", Порт = 80, ЗащищенноеСоединение = Ложь)

	Результат = Новый Структура;
	Результат.Вставить("Сервер",         Сервер);
	Результат.Вставить("Порт",           Порт);
	Результат.Вставить("Аутентификация", Ложь);
	Результат.Вставить("Таймаут",        120);
	Результат.Вставить("Прокси",         Неопределено);
	Результат.Вставить("ЗащищенноеСоединение", Неопределено);
	Результат.Вставить("ИдентификаторПрограммы", Неопределено);
	
	Если ЗащищенноеСоединение Тогда
		Результат.ЗащищенноеСоединение = ОбщегоНазначенияКлиентСервер.НовоеЗащищенноеСоединение(,Новый СертификатыУдостоверяющихЦентровОС);
		Результат.Прокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси("https");
	Иначе
		Результат.Прокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси("http");
	КонецЕсли;
	
	Результат.ИдентификаторПрограммы = ИдентификаторПрограммы();
	
	Возврат Результат;
	
КонецФункции

Функция ИдентификаторПрограммы()
	
	Возврат 0;
	
КонецФункции

#КонецОбласти
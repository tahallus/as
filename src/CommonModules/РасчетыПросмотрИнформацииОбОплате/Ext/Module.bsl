#Область Просмотр

Функция ПолучитьПредставлениеДоговора(ТекущаяСтрока, ФормироватьПоДвижениям)
	
	КомпонентыФС = Новый Массив;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Договор) Тогда
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(""+ТекущаяСтрока.Договор,,,, "Договор"));
	Иначе
		Надпись = ""; //НСтр("ru = '<не указан>'");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(""+Надпись,, ЦветаСтиля.ЦветОтрицательногоЧисла));
	КонецЕсли;
	
	Надпись = Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ТекстВторостепеннойНадписи);
	
	Возврат Надпись;
	
КонецФункции

Функция ПолучитьНадписьОплатаПредоплата(ТекущаяСтрока, ФормироватьПоДвижениям, Шрифт)
	
	КомпонентыФС = Новый Массив;
	
	//Надпись = ?(ТекущаяСтрока.ПризнакАванса, НСтр("ru='аванс '"), НСтр("ru='оплата долга '")) + НСтр("ru='по договору '");
	//Надпись = ?(ТекущаяСтрока.ПризнакАванса, НСтр("ru='предоплата 	'"), НСтр("ru='оплата долга 	'")) + НСтр("ru='по договору '");
	//КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись, ШрифтНомера));
	
	Если ТекущаяСтрока.СпособЗачета <> Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто ИЛИ ФормироватьПоДвижениям Тогда
		Надпись = ?(ТекущаяСтрока.ПризнакАванса, НСтр("ru='предоплата '"), НСтр("ru='оплата '"));// + НСтр("ru='по '");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись, Шрифт));
	Иначе
		Надпись = НСтр("ru='<Авто>'");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись, Шрифт));
	КонецЕсли;
	
	Надпись = Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ТекстВторостепеннойНадписи);
	
	Возврат Надпись;
	
КонецФункции

Функция ПолучитьПредставлениеЗаказа(ТекущаяСтрока, ФормироватьПоДвижениям, Шрифт, ВыводитьЗаголовок = Ложь, пЗаказ = Неопределено)
	
	КомпонентыФС = Новый Массив;
	
	Если пЗаказ = Неопределено Тогда
		ТекущийЗаказ = ТекущаяСтрока.Заказ;
	Иначе
		ТекущийЗаказ = пЗаказ;
	КонецЕсли;
	
	Если ТекущаяСтрока.СпособЗачета <> Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто ИЛИ ФормироватьПоДвижениям Тогда
		
		Если ЗначениеЗаполнено(ТекущийЗаказ) Тогда
			Если ВыводитьЗаголовок Тогда
				КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Заказ '"), Шрифт));//+ТипЗнч(ТекущийЗаказ), ШрифтНомера));
			КонецЕсли;
			
			НомерНаПечать = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ТекущийЗаказ.Дата,
				ТекущийЗаказ.Номер, ТекущийЗаказ.Организация.Префикс);
			СтрокаНомерДата = ""+НомерНаПечать+НСтр("ru=' от '")+Формат(ТекущийЗаказ.Дата, "ДЛФ=D");
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(СтрокаНомерДата,,,, "Заказ"));
		Иначе
			Если ВыводитьЗаголовок Тогда
				КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Заказ '"), Шрифт));
			КонецЕсли;
			
			Надпись = ""; //НСтр("ru='<не указан>'");
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись));
		КонецЕсли;
		
	Иначе
		
		Надпись = ""; //НСтр("ru='<не указан>'");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись, Шрифт));
		
	КонецЕсли;
	
	Надпись = Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ТекстВторостепеннойНадписи);
	
	Возврат Надпись;
	
КонецФункции

Функция ПолучитьПредставлениеДокумента(ТекущаяСтрока, ФормироватьПоДвижениям, Шрифт, ВыводитьЗаголовок = Ложь, ЭтоОплата = Истина, ЭтоИзменениеДокумента = Ложь)
	
	КомпонентыФС = Новый Массив;
	
	Если ТекущаяСтрока.СпособЗачета <> Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто ИЛИ ФормироватьПоДвижениям Тогда
		
		Если ЭтоИзменениеДокумента ИЛИ НЕ ЭтоОплата ИЛИ ТекущаяСтрока.ЭтоЗачет Или НЕ ТекущаяСтрока.ПризнакАванса Тогда
			
			Если ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
				Если ВыводитьЗаголовок Тогда
					КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Документ: '"), Шрифт));
				КонецЕсли;
				
				ТекДокумент = ТекущаяСтрока.Документ;
				Если Ложь Тогда ТекДокумент = Документы.АктВыполненныхРабот.ПустаяСсылка() КонецЕсли;
				
				Если ТипЗнч(ТекДокумент) = Тип("СправочникСсылка.Номенклатура") Тогда // Подарочный сертификат
					КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(СокрЛП(ТекДокумент.Наименование),,,, "Документ"));
					Если ЗначениеЗаполнено(ТекущаяСтрока.НомерСертификата) Тогда
						ТекстДокумент = Символы.ПС
							+ СокрЛП(ТекущаяСтрока.НомерСертификата)
						;
						КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(ТекстДокумент, Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина),,, "Документ"));
					КонецЕсли;
				Иначе
					Если ТипЗнч(ТекДокумент) = Тип("ДокументСсылка.ЗаказПокупателя") И ТекДокумент.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
						КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Заказ-наряд'"),,,, "Документ"));
					Иначе
						КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(ТекДокумент.Метаданные().Представление(),,,, "Документ"));
					КонецЕсли;
					
					ПрефиксОрганизации = ПолучитьПрефиксОрганизации(ТекДокумент.Организация);
					Если ПрефиксОрганизации = Неопределено Тогда // Доступ ограничен на уровне записей.
						ТекстДокумент = "";
					Иначе
						ТекстДокумент = Символы.ПС
							+ ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ТекДокумент.Дата, ТекДокумент.Номер, ПрефиксОрганизации)
							+ НСтр("ru = ' от '")
							+ Формат(ТекДокумент.Дата, "ДЛФ=D")
						;
					КонецЕсли;
					КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(ТекстДокумент, Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина),,, "Документ"));
				КонецЕсли;
				
			Иначе
				Если ВыводитьЗаголовок Тогда
					КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Документ: '"), Шрифт));
					КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='<не указан>'")));
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			Надпись = "";
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись));
			
		КонецЕсли;
		
	Иначе
		Надпись = НСтр("ru='<Авто>'");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись));
	КонецЕсли;
	
	Надпись = Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ТекстВторостепеннойНадписи);
	
	Возврат Надпись;
	
КонецФункции

Функция ПолучитьПрефиксОрганизации(пОрганизация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Префикс КАК Префикс
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &пОрганизация";
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.УстановитьПараметр("пОрганизация", пОрганизация);
	УстановитьПривилегированныйРежим(Ложь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Префикс;
	Иначе
		Возврат Неопределено; // Доступ ограничен на уровне записей.
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПредставлениеСчетаНаОплату(ТекущаяСтрока, ФормироватьПоДвижениям, Шрифт, ВыводитьЗаголовок = Ложь)
	
	КомпонентыФС = Новый Массив;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.СчетНаОплату) Тогда
		
		Если ВыводитьЗаголовок Тогда
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Счет '"), Шрифт));//+ТипЗнч(ТекущаяСтрока.Заказ), ШрифтНомера));
		КонецЕсли;
		
		НомерНаПечать = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ТекущаяСтрока.СчетНаОплату.Дата,
			ТекущаяСтрока.СчетНаОплату.Номер, ТекущаяСтрока.СчетНаОплату.Организация.Префикс);
		СтрокаНомерДата = ""+НомерНаПечать+НСтр("ru=' от '")+Формат(ТекущаяСтрока.СчетНаОплату.Дата, "ДЛФ=D");
		КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(СтрокаНомерДата,,,, "СчетНаОплату"));
		
	Иначе
		
		Если ВыводитьЗаголовок Тогда
			Надпись = НСтр("ru='Счет '");
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись, Шрифт));
		КонецЕсли;
		
		Если ТекущаяСтрока.ЭтоЗачет Тогда
			Надпись = НСтр("ru='<не определен>'");
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись));
		Иначе
			Надпись = ""; //НСтр("ru=' <не указан>'");
			КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(Надпись));
		КонецЕсли;
		
	КонецЕсли;
	
	Надпись = Новый ФорматированнаяСтрока(КомпонентыФС, , ЦветаСтиля.ТекстВторостепеннойНадписи);
	
	Возврат Надпись;
	
КонецФункции

Функция ПолучитьСуммуПлатежаСтроки(ДокументОбъект, ТекущаяСтрока, ЭтоИзменениеДокумента)
	
	Если НЕ ЭтоИзменениеДокумента И ТекущаяСтрока.ЭтоЗачет Тогда
		Если ДокументОбъект.ВалютаДенежныхСредств = ТекущаяСтрока.ВалютаРасчетов Тогда
			ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов;
		ИначеЕсли ТекущаяСтрока.СуммаРег <> 0 И ТекущаяСтрока.СуммаРасчетов <> 0 Тогда
			// Для документов, которые оформлены раньше релиза 1.6.14 будем вычислять сумму расчетов так.
			Если ДокументОбъект.ВалютаДенежныхСредств = Константы.НациональнаяВалюта.Получить() Тогда
				ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРег;
			Иначе
				ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов * ТекущаяСтрока.СуммаРег / ТекущаяСтрока.СуммаРасчетов;
				ТекущаяСуммаПлатежа = ТекущаяСуммаПлатежа / ?(ДокументОбъект.Курс = 0, 1, ДокументОбъект.Курс) * ?(ДокументОбъект.Кратность = 0, 1, ДокументОбъект.Кратность);
				ТекущаяСуммаПлатежа = Окр(ТекущаяСуммаПлатежа, 2);
			КонецЕсли;
		ИначеЕсли ТекущаяСтрока.Курс <> 0 И ДокументОбъект.Ссылка.Метаданные().Реквизиты.Найти("Курс") <> Неопределено Тогда
			ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов * ТекущаяСтрока.Курс / ?(ТекущаяСтрока.Кратность = 0, 1, ТекущаяСтрока.Кратность);
			ТекущаяСуммаПлатежаВалютаДокумента = ТекущаяСуммаПлатежа / ?(ДокументОбъект.Курс = 0, 1, ДокументОбъект.Курс) * ?(ДокументОбъект.Кратность = 0, 1, ДокументОбъект.Кратность);
			ТекущаяСуммаПлатежа = Окр(ТекущаяСуммаПлатежаВалютаДокумента, 2);
		// Приходная накладная, Взаимозачет и др. документы, для которых не поддержана регистрация курса.
		ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
			КурсКратностьВалДокумента = РегистрыСведений.КурсыВалют.Получить(ДокументОбъект.Дата, Новый Структура("Валюта", ДокументОбъект.ВалютаДенежныхСредств));
			ТекущаяСуммаПлатежа = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
				ТекущаяСтрока.СуммаРасчетов,
				?(ТекущаяСтрока.Документ.Курс = 0, 1, ТекущаяСтрока.Документ.Курс),
				?(КурсКратностьВалДокумента.Курс = 0, 1, КурсКратностьВалДокумента.Курс),
				?(ТекущаяСтрока.Документ.Кратность = 0, 1, ТекущаяСтрока.Документ.Кратность),
				?(КурсКратностьВалДокумента.Кратность = 0, 1, КурсКратностьВалДокумента.Кратность)
			);
		Иначе
			КурсКратностьВалДокумента = РегистрыСведений.КурсыВалют.Получить(ДокументОбъект.Дата, Новый Структура("Валюта", ДокументОбъект.ВалютаДенежныхСредств));
			КурсКратностьВалютыРасчетов = РегистрыСведений.КурсыВалют.Получить(ДокументОбъект.Дата, Новый Структура("Валюта", ТекущаяСтрока.ВалютаРасчетов));
			ТекущаяСуммаПлатежа = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
				ТекущаяСтрока.СуммаРасчетов,
				?(КурсКратностьВалютыРасчетов.Курс = 0, 1, КурсКратностьВалютыРасчетов.Курс),
				?(КурсКратностьВалДокумента.Курс = 0, 1, КурсКратностьВалДокумента.Курс),
				?(КурсКратностьВалютыРасчетов.Кратность = 0, 1, КурсКратностьВалютыРасчетов.Кратность),
				?(КурсКратностьВалДокумента.Кратность = 0, 1, КурсКратностьВалДокумента.Кратность)
			);
		КонецЕсли;
	Иначе
		ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаПлатежа;
	КонецЕсли;
	
	Возврат ТекущаяСуммаПлатежа;
	
КонецФункции

Функция ПолучитьВалютаНакладной(пДокумент) Экспорт
	
	Если ЗначениеЗаполнено(пДокумент) Тогда
		Если ТипЗнч(пДокумент) = Тип("ДокументСсылка.Взаимозачет") Тогда
			Возврат Константы.ВалютаУчета.Получить();
		ИначеЕсли ТипЗнч(пДокумент) = Тип("ДокументСсылка.ПоступлениеВКассу")
			ИЛИ ТипЗнч(пДокумент) = Тип("ДокументСсылка.ПоступлениеНаСчет")
			ИЛИ ТипЗнч(пДокумент) = Тип("ДокументСсылка.РасходИзКассы")
			ИЛИ ТипЗнч(пДокумент) = Тип("ДокументСсылка.РасходСоСчета")
			ИЛИ ТипЗнч(пДокумент) = Тип("ДокументСсылка.ОперацияПоПлатежнымКартам") Тогда
			Возврат пДокумент.ВалютаДенежныхСредств;
		Иначе
			Возврат пДокумент.ВалютаДокумента;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьВалютаДокументаОплаты(пДокумент) Экспорт
	
	Если ЗначениеЗаполнено(пДокумент) Тогда
		Если ТипЗнч(пДокумент) = Тип("ДокументСсылка.Взаимозачет") Тогда
			Возврат Константы.ВалютаУчета.Получить();
		Иначе
			Возврат пДокумент.ВалютаДенежныхСредств;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПредставлениеВалюты(Валюта)
	
	МассивРеквизитовВалюты = Новый Массив;
	МассивРеквизитовВалюты.Добавить("СимвольноеПредставление");
	МассивРеквизитовВалюты.Добавить("Наименование");
	
	СтруктураРеквизитовВалюты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Валюта, МассивРеквизитовВалюты);
	Возврат ?(ПустаяСтрока(СтруктураРеквизитовВалюты.СимвольноеПредставление),
		СтруктураРеквизитовВалюты.Наименование,
		СтруктураРеквизитовВалюты.СимвольноеПредставление
	);
	
КонецФункции

#Область ВывестиОднуСтроку

Процедура ВывестиСтрокуРасшифровкиПлатежаДляПросмотра(ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
	СтруктураОбластей, ШрифтНадписей, ДокументОбъект, ЭтоИзменениеДокумента = Ложь) Экспорт
	
	Если Ложь Тогда ДокументОбъект = Документы.ПоступлениеВКассу.СоздатьДокумент() КонецЕсли;
	
	// Выведем основные данные
	СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.Заполнить(ТекущаяСтрока);
	Если ЭтоИзменениеДокумента Тогда
		Если ТекущаяСтрока.ВариантИзмененияДанных = Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Добавление Тогда
			СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СпособЗачета = НСтр("ru = 'вручную'");
		Иначе
			СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СпособЗачета = "" + ТекущаяСтрока.ВариантИзмененияДанных;
		КонецЕсли;
	Иначе
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактирования_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ПереходитьВРежимРедактированияСпособЗачета = "ПереходитьВРежимРедактированияСпособЗачета_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ПереходитьВРежимРедактированияСуммаПлатежа = "ПереходитьВРежимРедактированияСуммаПлатежа_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СпособЗачета = ?(ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто, НСтр("ru = 'авто'"), НСтр("ru = 'вручную'"));
	КонецЕсли;
	Если ЭтоОплата Тогда
		Если ЭтоИзменениеДокумента Или ТекущаяСтрока.ЭтоЗачет Тогда
			ТекстТипОплаты = НСтр("ru='зачет%предоплаты'");
			ТекстТипОплаты = СтрЗаменить(ТекстТипОплаты, "%", Символы.ПС);
			СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ТипОплаты = ТекстТипОплаты;
		Иначе
			СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ТипОплаты = ПолучитьНадписьОплатаПредоплата(ТекущаяСтрока, ФормироватьПоДвижениям, ШрифтНадписей);
		КонецЕсли;
	КонецЕсли;
	
	// Сумма платежа
	ТекущаяСуммаПлатежа = ПолучитьСуммуПлатежаСтроки(ДокументОбъект, ТекущаяСтрока, ЭтоИзменениеДокумента);
	
	СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СуммаПлатежа = Формат(ТекущаяСуммаПлатежа, "ЧДЦ=2");
	Если ТекущаяСуммаПлатежа = 0 Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СуммаПлатежа = "0,00";
	Иначе
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.ТекущаяОбласть.ЦветТекста = ЦветаСтиля.ЦветТекстаПравойПанелиОтборов;
	КонецЕсли;
	ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьСтрокаКолонкиСлева, 1,, Ложь);
	
	// Договор
	Если ЭтоОплата И ДокументОбъект.Контрагент.ВестиРасчетыПоДоговорам Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиДоговор.Параметры.Договор = ПолучитьПредставлениеДоговора(ТекущаяСтрока, ФормироватьПоДвижениям);
		СтруктураОбластей.ОбластьСтрокаКолонкиДоговор.Параметры.ДоговорСсылка = ТекущаяСтрока.Договор;
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластей.ОбластьСтрокаКолонкиДоговор);
	КонецЕсли;
	// Заказ
	ОбрабатыватьЗаказ = Ложь;
	Если ДокументОбъект.Контрагент.ВестиРасчетыПоЗаказам И НЕ ДокументЯвляетсяЗаказом(ТекущаяСтрока.Документ) Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.Заказ = ПолучитьПредставлениеЗаказа(ТекущаяСтрока, ФормироватьПоДвижениям, ШрифтНадписей);
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.ЗаказСсылка = ТекущаяСтрока.Заказ;
		ОбрабатыватьЗаказ = Истина;
	ИначеЕсли ДокументЯвляетсяЗаказом(ТекущаяСтрока.Документ) Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.Заказ = ПолучитьПредставлениеЗаказа(ТекущаяСтрока, ФормироватьПоДвижениям, ШрифтНадписей,, ТекущаяСтрока.Документ);
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.ЗаказСсылка = ТекущаяСтрока.Документ;
		ОбрабатыватьЗаказ = Истина;
	КонецЕсли;
	Если ОбрабатыватьЗаказ И НЕ ЭтоИзменениеДокумента И НЕ ЗначениеЗаполнено(СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.ЗаказСсылка) Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.ЗаказСсылка = "ПереходитьВРежимРедактированияЗаказ_"+ТекущаяСтрока.ИндексСтрокиДокумента;
	КонецЕсли;
	Если ОбрабатыватьЗаказ Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ);
	КонецЕсли;
	// Документ
	Если ДокументОбъект.Контрагент.ВестиРасчетыПоДокументам Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиДокумент.Параметры.Документ = ПолучитьПредставлениеДокумента(ТекущаяСтрока, ФормироватьПоДвижениям ИЛИ ЭтоИзменениеДокумента ИЛИ ТекущаяСтрока.ЭтоЗачет, ШрифтНадписей,,, ЭтоИзменениеДокумента);
		СтруктураОбластей.ОбластьСтрокаКолонкиДокумент.Параметры.ДокументСсылка = ТекущаяСтрока.Документ;
		Если НЕ ЭтоИзменениеДокумента И НЕ ЗначениеЗаполнено(СтруктураОбластей.ОбластьСтрокаКолонкиДокумент.Параметры.ДокументСсылка) Тогда
			СтруктураОбластей.ОбластьСтрокаКолонкиДокумент.Параметры.ДокументСсылка = "ПереходитьВРежимРедактированияДокумент_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		КонецЕсли;
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластей.ОбластьСтрокаКолонкиДокумент);
	КонецЕсли;
	// Счет
	Если НЕ ЭтоИзменениеДокумента И НЕ ТекущаяСтрока.ЭтоЗачет И ЭтоОплата И ДокументОбъект.Контрагент.ВестиУчетОплатыПоСчетам Тогда
		Если НЕ ЭтоИзменениеДокумента Тогда
			СтруктураОбластей.ОбластьСтрокаКолонкиСчет.Параметры.СчетНаОплату = ПолучитьПредставлениеСчетаНаОплату(ТекущаяСтрока, ФормироватьПоДвижениям, ШрифтНадписей);
			СтруктураОбластей.ОбластьСтрокаКолонкиСчет.Параметры.СчетНаОплатуСсылка = ТекущаяСтрока.СчетНаОплату;
			Если НЕ ЗначениеЗаполнено(СтруктураОбластей.ОбластьСтрокаКолонкиСчет.Параметры.СчетНаОплатуСсылка) Тогда
				СтруктураОбластей.ОбластьСтрокаКолонкиСчет.Параметры.СчетНаОплатуСсылка = "ПереходитьВРежимРедактированияСчетНаОплату_"+ТекущаяСтрока.ИндексСтрокиДокумента;
			КонецЕсли;
		Иначе
			СтруктураОбластей.ОбластьСтрокаКолонкиСчет.Параметры.СчетНаОплату = НСтр("ru = '<не определен>'");
			СтруктураОбластей.ОбластьСтрокаКолонкиСчет.Параметры.СчетНаОплатуСсылка = Неопределено;
		КонецЕсли;
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластей.ОбластьСтрокаКолонкиСчет);
	КонецЕсли;
	
	// Выведем дополнительные данные
	Если ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций") Тогда
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Курс валюты договора'");
		
		Если ТекущаяСтрока.Курс = 0 Тогда
			Если НЕ ЭтоИзменениеДокумента И ТекущаяСтрока.ЭтоЗачет И ТекущаяСтрока.СуммаРег <> 0 И ТекущаяСтрока.СуммаРасчетов <> 0 Тогда
				// Для документов, которые оформлены раньше релиза 1.6.14 будем вычислять курс таким образом.
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаРег / ТекущаяСтрока.СуммаРасчетов, "ЧДЦ=4");
			ИначеЕсли (НЕ ЭтоИзменениеДокумента И ТекущаяСтрока.ЭтоЗачет ИЛИ ЭтоИзменениеДокумента И ТекущаяСтрока.ЭтоСуществующийЗачет)
				И ТекущаяСтрока.ВалютаРасчетов = ПолучитьВалютаНакладной(ТекущаяСтрока.Документ)
				И ТекущаяСтрока.ВалютаРасчетов = Константы.НациональнаяВалюта.Получить() Тогда
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(1, "ЧДЦ=4");
			ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.Документ.Курс, "ЧДЦ=4");
			Иначе
				КурсКратностьВалютыРасчетов = РегистрыСведений.КурсыВалют.Получить(ДокументОбъект.Дата, Новый Структура("Валюта", ТекущаяСтрока.ВалютаРасчетов));
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(КурсКратностьВалютыРасчетов.Курс, "ЧДЦ=4");
			КонецЕсли;
		Иначе
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.Курс, "ЧДЦ=4");
		КонецЕсли;
		
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + Константы.НациональнаяВалюта.Получить().СимвольноеПредставление
			+ "/" + ТекущаяСтрока.ВалютаРасчетов.СимвольноеПредставление
		;
		Если НЕ ЭтоИзменениеДокумента Тогда
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияКурс_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		КонецЕсли;
		ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2,, Ложь);
		
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Сумма в валюте договора'");
	Иначе
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Сумма'");
	КонецЕсли;
	
	// Выведем 2-ой уровень иерархии.
	СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаРасчетов, "ЧДЦ=2");
	СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ТекущаяСтрока.ВалютаРасчетов.СимвольноеПредставление;
	Если НЕ ЭтоИзменениеДокумента Тогда
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияСуммаРасчетов_"+ТекущаяСтрока.ИндексСтрокиДокумента;
	КонецЕсли;
	ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2);
	
	Если НЕ ЭтоИзменениеДокумента И НЕ ТекущаяСтрока.ЭтоЗачет Тогда
		Если ДокументОбъект.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Включая НДС ('") + ТекущаяСтрока.СтавкаНДС + ")";
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаНДС, "ЧДЦ=2");
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ТекущаяСтрока.ВалютаРасчетов.СимвольноеПредставление;
			Если НЕ ЭтоИзменениеДокумента Тогда
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияСуммаНДС_"+ТекущаяСтрока.ИндексСтрокиДокумента;
			КонецЕсли;
			ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2);
		КонецЕсли;
		
		// Статья ДДС
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств") Тогда
			СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение1 = НСтр("ru = 'Статья ДДС'");
			СтатьяДДС = ?(ЗначениеЗаполнено(ТекущаяСтрока.СтатьяДДС), ТекущаяСтрока.СтатьяДДС, ДокументОбъект.Статья);
			СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение2 = СокрЛП(""+СтатьяДДС);
			СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение2Расшифровка = СтатьяДДС;
			ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока2Значения, 2);
		КонецЕсли;
		
		// Документ планирования
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
			СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение1 = НСтр("ru = 'Документ планирования'");
			Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументПланирования) Тогда
				СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение2 = СокрЛП(""+ТекущаяСтрока.ДокументПланирования);
				СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение2Расшифровка = ТекущаяСтрока.ДокументПланирования;
			Иначе
				СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение2 = ""; //НСтр("ru='<не указан>'");
				СтруктураОбластей.ОбластьДопСтрока2Значения.Параметры.Значение2Расшифровка = "";
			КонецЕсли;
			ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока2Значения, 2);
		КонецЕсли;
	КонецЕсли;
	
	// Выведем разделитель
	ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьСтрокаРазделитель, 1);
	
КонецПроцедуры

Процедура ВывестиСтрокуСИнформациейОбОплате(СтруктураВалютыКурсыИКратности, ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
	СтруктураОбластей, ШрифтНадписей, СсылкаНаДокумент, ЭтоЗаказ, ЭтоРасчетыСПоставщиком) Экспорт
	
	СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.Заполнить(ТекущаяСтрока);
	
	// Выведем основные данные
	ЗаполнитьЗначенияСвойств(СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры, ТекущаяСтрока, "СуммаПлатежа");
	СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СпособЗачета = ?(ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто, НСтр("ru = 'авто'"), НСтр("ru = 'вручную'"));
	
	// Тип оплаты
	Если ТекущаяСтрока.ЭтоЗачет И ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную Тогда
		
		ТекстТипОплаты = НСтр("ru='зачет%предоплаты'");
		ТекстТипОплаты = СтрЗаменить(ТекстТипОплаты, "%", Символы.ПС);
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ТипОплаты = ТекстТипОплаты;
		
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактирования_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ПереходитьВРежимРедактированияСпособЗачета = "ПереходитьВРежимРедактированияСпособЗачета_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ПереходитьВРежимРедактированияСуммаПлатежа = "ПереходитьВРежимРедактированияСуммаПлатежа_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		
	Иначе
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.ТипОплаты = НСтр("ru='оплата'");
	КонецЕсли;
	
	// Сумма платежа
	ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаПлатежа;
	Если ЭтоОплата Тогда
		Если СсылкаНаДокумент.ВалютаДокумента = ТекущаяСтрока.ВалютаРасчетов Тогда
			ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов;
		ИначеЕсли СсылкаНаДокумент.Курс <> ТекущаяСтрока.Курс Тогда
			ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов * СсылкаНаДокумент.Курс / СсылкаНаДокумент.Кратность;
		КонецЕсли;
	Иначе
		Если СсылкаНаДокумент.ВалютаДокумента = ТекущаяСтрока.ВалютаРасчетов Тогда
			ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов;
		Иначе
			ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов * ?(СсылкаНаДокумент.Курс = 0, 1, СсылкаНаДокумент.Курс)
				/ ?(СсылкаНаДокумент.Кратность = 0, 1, СсылкаНаДокумент.Кратность)
			;
		КонецЕсли;
	КонецЕсли;
	Если ТекущаяСуммаПлатежа = 0 Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СуммаПлатежа = "0,00";
	Иначе
		СтруктураОбластей.ОбластьСтрокаКолонкиСлева.Параметры.СуммаПлатежа = Формат(ТекущаяСуммаПлатежа, "ЧДЦ=2");
	КонецЕсли;
	
	ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьСтрокаКолонкиСлева, 1,, Ложь);
	
	// Заказ
	Если ЭтоЗаказ Тогда
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.Заказ = "";
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.ЗаказСсылка = "";
	Иначе
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.Заказ = ПолучитьПредставлениеЗаказа(ТекущаяСтрока, ФормироватьПоДвижениям, ШрифтНадписей);
		СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ.Параметры.ЗаказСсылка = ТекущаяСтрока.Заказ;
	КонецЕсли;
	
	// Документ
	СтруктураОбластей.ОбластьСтрокаКолонкиДокумент.Параметры.Документ = ПолучитьПредставлениеДокумента(ТекущаяСтрока, ФормироватьПоДвижениям ИЛИ ЭтоОплата ИЛИ Не ТекущаяСтрока.ЭтоЗачет, ШрифтНадписей,, ЭтоОплата);
	СтруктураОбластей.ОбластьСтрокаКолонкиДокумент.Параметры.ДокументСсылка = ТекущаяСтрока.Документ;
	Если ТипЗнч(СсылкаНаДокумент) <> Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") И СсылкаНаДокумент.Контрагент.ВестиРасчетыПоЗаказам Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластей.ОбластьСтрокаКолонкиЗаказ);
	КонецЕсли;
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") ИЛИ СсылкаНаДокумент.Контрагент.ВестиРасчетыПоДокументам Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластей.ОбластьСтрокаКолонкиДокумент);
	КонецЕсли;
	
	// Дополнительные данные
	Если ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций") Тогда
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Курс валюты договора'");
		Если ЭтоОплата Тогда
			Если ТекущаяСтрока.Курс = 0 Тогда
				Если ТекущаяСтрока.СуммаРег <> 0 И ТекущаяСтрока.СуммаРасчетов <> 0 Тогда
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаРег / ТекущаяСтрока.СуммаРасчетов, "ЧДЦ=4");
				ИначеЕсли ТекущаяСтрока.ВалютаРасчетов = СтруктураВалютыКурсыИКратности.НациональнаяВалюта Тогда
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(СтруктураВалютыКурсыИКратности.КурсРегВалюты, "ЧДЦ=4");
				Иначе
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(0, "ЧДЦ=4");
				КонецЕсли;
			Иначе
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.Курс, "ЧДЦ=4");
			КонецЕсли;
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "";
		Иначе // Зачет предоплаты.
			Если (ТекущаяСтрока.Курс = 0 ИЛИ ФормироватьПоДвижениям) Тогда
				Если ТекущаяСтрока.СуммаРег <> 0 И ТекущаяСтрока.СуммаРасчетов <> 0 Тогда
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаРег / ТекущаяСтрока.СуммаРасчетов, "ЧДЦ=4");
				ИначеЕсли ТекущаяСтрока.ВалютаРасчетов = СтруктураВалютыКурсыИКратности.НациональнаяВалюта Тогда
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(СтруктураВалютыКурсыИКратности.КурсРегВалюты, "ЧДЦ=4");
				ИначеЕсли ЭтоРасчетыСПоставщиком Тогда
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(СтруктураВалютыКурсыИКратности.КурсДокумента, "ЧДЦ=4");
				Иначе
					СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.Курс, "ЧДЦ=4");
				КонецЕсли;
			Иначе // Зачет выполнялся вручную и курс зафиксирован.
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.Курс, "ЧДЦ=4");
			КонецЕсли;
			Если ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную Тогда
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияКурс_"+ТекущаяСтрока.ИндексСтрокиДокумента;
			КонецЕсли; 
		КонецЕсли;
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ПолучитьПредставлениеВалюты(ТекущаяСтрока.ВалютаРасчетов)
			+ "/" + ПолучитьПредставлениеВалюты(СтруктураВалютыКурсыИКратности.НациональнаяВалюта)
		;
		ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2,, Ложь);
		
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Сумма в валюте договора'");
		
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаРасчетов, "ЧДЦ=2");
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ТекущаяСтрока.ВалютаРасчетов.СимвольноеПредставление;
		Если НЕ ЭтоОплата И ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную Тогда
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияСуммаРасчетов_"+ТекущаяСтрока.ИндексСтрокиДокумента;
		Иначе
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "";
		КонецЕсли;
		ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2);
		
		ТекущаяСуммаПлатежа = 0;
		СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = ?(ЭтоОплата, НСтр("ru = 'Сумма оплаты'"), НСтр("ru = 'Сумма по курсу документа'"));
		
		// Валюта документа может быть = национальной валюте или валюте расчетов.
		Если ЭтоОплата Тогда
			// Если сумма платежа есть, т.е. документ оплаты проведен после обновления на релиз 1.6.14, то выводим доп. секции.
			Если ТекущаяСтрока.СуммаПлатежа <> 0 Тогда
				ТекущаяВалютаПлатежа = ТекущаяСтрока.ВалютаПлатежа;
				ТекущаяСуммаПлатежа = Формат(ТекущаяСтрока.СуммаПлатежа, "ЧДЦ=2");
				
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСуммаПлатежа, "ЧДЦ=2");
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ТекущаяВалютаПлатежа.СимвольноеПредставление;
				ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2);
			Иначе
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = "";
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "";
			КонецЕсли;
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "";
		Иначе // Зачет предоплаты
			// Зачет вручную (после обновления).
			Если ФормироватьПоДвижениям И ТекущаяСтрока.СуммаПлатежа <> 0 Тогда
				ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаПлатежа;
			// Договор в национальной валюте
			ИначеЕсли ТекущаяСтрока.ВалютаРасчетов = СтруктураВалютыКурсыИКратности.НациональнаяВалюта Тогда
				ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов * СтруктураВалютыКурсыИКратности.КурсРегВалюты / СтруктураВалютыКурсыИКратности.КратностьРегВалюты;
			// Если договор валютный, то попытаемся рассчитать курс зачета по ресурсам СуммаРег и СуммаВал.
			ИначеЕсли ТекущаяСтрока.Курс = 0 И ТекущаяСтрока.СуммаРег <> 0 И ТекущаяСтрока.СуммаРасчетов <> 0 Тогда
				// Валюта документа = национальной валюте.
				Если СсылкаНаДокумент.ВалютаДокумента = СтруктураВалютыКурсыИКратности.НациональнаяВалюта Тогда
					ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРег;
				// Валюта договора и документа <> национальной валюте.
				Иначе
					ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРег / ?(СсылкаНаДокумент.Курс = 0, 1, СсылкаНаДокумент.Курс)
						* ?(СсылкаНаДокумент.Кратность = 0, 1, СсылкаНаДокумент.Кратность)
					;
				КонецЕсли;
			// Для расчетов с поставщиками пока СуммаРег не заполняется.
			ИначеЕсли ЭтоРасчетыСПоставщиком Тогда
				Если СсылкаНаДокумент.ВалютаДокумента = ТекущаяСтрока.ВалютаРасчетов Тогда
					ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов;
				Иначе
					ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаРасчетов * СтруктураВалютыКурсыИКратности.КурсДокумента * СтруктураВалютыКурсыИКратности.КратностьРегВалюты
						/ (СтруктураВалютыКурсыИКратности.КратностьДокумента * СтруктураВалютыКурсыИКратности.КурсРегВалюты)
					;
				КонецЕсли;
			Иначе
				ТекущаяСуммаПлатежа = ТекущаяСтрока.СуммаПлатежа;
			КонецЕсли;
			
			ТекущаяВалютаПлатежа = СсылкаНаДокумент.ВалютаДокумента;
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСуммаПлатежа, "ЧДЦ=2");
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ТекущаяВалютаПлатежа.СимвольноеПредставление;
			Если НЕ ЭтоОплата И ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную Тогда
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияСуммаПлатежа_"+ТекущаяСтрока.ИндексСтрокиДокумента;
			КонецЕсли;
			ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоОплата И НЕ ТекущаяСтрока.ПризнакАванса Тогда // Оплата долга денежным документом, а не зачёт оплаты в документе отгрузки.
		
		// НДС
		Если ЗначениеЗаполнено(ТекущаяСтрока.СтавкаНДС) Тогда
			
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение1 = НСтр("ru = 'Включая НДС ('") + ТекущаяСтрока.СтавкаНДС + ")";
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение2 = Формат(ТекущаяСтрока.СуммаНДС, "ЧДЦ=2");
			СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.Значение3 = "" + ТекущаяСтрока.ВалютаПлатежа.СимвольноеПредставление;
			Если НЕ ЭтоОплата И ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную Тогда
				СтруктураОбластей.ОбластьДопСтрока3Значения.Параметры.ПереходитьВРежимРедактирования = "ПереходитьВРежимРедактированияСуммаНДС_"+ТекущаяСтрока.ИндексСтрокиДокумента;
			КонецЕсли;
			ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока3Значения, 2);
			
		ИначеЕсли Не ТекущаяСтрока.ЭтоЧек Тогда
			
			СтруктураОбластей.ОбластьДопСтрока1Значение.Параметры.Значение1 = НСтр("ru = '<Данные об НДС будут видны, если перепровести документ оплаты>'");
			ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьДопСтрока1Значение, 2);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Выведем разделитель
	ТабличныйДокументКарточка.Вывести(СтруктураОбластей.ОбластьСтрокаРазделитель, 1);
	
КонецПроцедуры

#КонецОбласти

Процедура ВывестиШапку(ЭтоОплата, Контрагент, ТабличныйДокументКарточка, СтруктураОбластейШапки, ЭтоЗачет = Ложь, 
	ЭтоПередачаМеждуОрганизациями = Ложь)
	
	ТабличныйДокументКарточка.Вывести(СтруктураОбластейШапки.ОбластьШапкаКолонкиСлева);
	
	Если ЭтоОплата И Контрагент.ВестиРасчетыПоДоговорам Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластейШапки.ОбластьШапкаКолонкиДоговор);
	КонецЕсли;
	
	Если НЕ ЭтоПередачаМеждуОрганизациями И Контрагент.ВестиРасчетыПоЗаказам Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластейШапки.ОбластьШапкаКолонкиЗаказ);
	КонецЕсли;
	
	Если ЭтоПередачаМеждуОрганизациями ИЛИ Контрагент.ВестиРасчетыПоДокументам Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластейШапки.ОбластьШапкаКолонкиДокумент);
	КонецЕсли;
	
	Если НЕ ЭтоЗачет И ЭтоОплата И Контрагент.ВестиУчетОплатыПоСчетам Тогда
		ТабличныйДокументКарточка.Присоединить(СтруктураОбластейШапки.ОбластьШапкаКолонкиСчет);
	КонецЕсли;
	
	ТабличныйДокументКарточка.Вывести(СтруктураОбластейШапки.ОбластьСтрокаРазделитель);
	
КонецПроцедуры

// Процедура распределяет данные из ТаблицаДокументовДляИзменения на ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа.
Процедура РаспределитьДанныеИзТаблицыСуществующихДокументов(Реквизит4Отбора, Значение4Отбора,
	Документ,
	ТаблицаДокументовДляИзменения, ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа)
	
	Если НЕ Документ.Ссылка.Пустая()
		И НЕ ТаблицаДокументовДляИзменения = Неопределено
		И ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа.Количество() > 0 Тогда
		
		Если ТаблицаДокументовДляИзменения <> Неопределено Тогда
			Для Каждого СтрокаСИзменениями Из ТаблицаДокументовДляИзменения Цикл
				
				Если СтрокаСИзменениями.СуммаРасчетов = 0 И СтрокаСИзменениями.ВариантИзмененияДанных <> Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Удаление Тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаСИзменениями.ВариантИзмененияДанных = Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Добавление Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураОтбора = Новый Структура("Договор, Документ, Заказ, " + Реквизит4Отбора,
					СтрокаСИзменениями.Договор,
					СтрокаСИзменениями.Документ,
					СтрокаСИзменениями.Заказ,
					Значение4Отбора
				);
				
				НайденныеСтроки = ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа.НайтиСтроки(СтруктураОтбора);
				НужноРаспределить = СтрокаСИзменениями.СуммаРасчетов;
				Если СтрокаСИзменениями.ВариантИзмененияДанных = Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Изменение Тогда
					
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						
						Если НужноРаспределить > 0 И НайденнаяСтрока.СуммаРасчетов > 0 Тогда
							Если НайденнаяСтрока.СуммаРасчетов < НужноРаспределить Тогда
								вСуммаРасчетов = НужноРаспределить;
								НужноРаспределить = НужноРаспределить - НайденнаяСтрока.СуммаРасчетов;
								// Коэффициент = СтрокаСИзменениями.СуммаРасчетов / вСуммаРасчетов;
								//СтрокаСИзменениями.СуммаПлатежа = СтрокаСИзменениями.СуммаПлатежа * Коэффициент;
							Иначе
								вСуммаРасчетов = НайденнаяСтрока.СуммаРасчетов;
								НайденнаяСтрока.СуммаРасчетов = НужноРаспределить;
								Коэффициент = НайденнаяСтрока.СуммаРасчетов / вСуммаРасчетов;
								НайденнаяСтрока.СуммаПлатежа = Окр(НайденнаяСтрока.СуммаПлатежа * Коэффициент, 2);
								НайденнаяСтрока.СуммаНДС = Окр(НайденнаяСтрока.СуммаНДС * Коэффициент, 2);
								
								НужноРаспределить = 0;
							КонецЕсли;
						ИначеЕсли НужноРаспределить = 0 Тогда
							НайденнаяСтрока.СуммаРасчетов = 0;
							НайденнаяСтрока.СуммаПлатежа = 0;
						КонецЕсли;
						
					КонецЦикла;
					
					Если НужноРаспределить > 0 И НайденныеСтроки.Количество() > 0 Тогда
						НайденнаяСтрока = НайденныеСтроки[НайденныеСтроки.Количество()-1]; // Можно было и 1 взять, это особой роли не играет, т.к. это должно вызывать ошибку,
						// т.к. мы пытаемся зачесть больше, чем есть предоплаты.
						вСуммаРасчетов = НайденнаяСтрока.СуммаРасчетов;
						НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов + НужноРаспределить;
						Коэффициент = НайденнаяСтрока.СуммаРасчетов / вСуммаРасчетов;
						НайденнаяСтрока.СуммаПлатежа = НайденнаяСтрока.СуммаПлатежа * Коэффициент;
						НайденнаяСтрока.СуммаНДС = НайденнаяСтрока.СуммаНДС * Коэффициент;
						
						НужноРаспределить = 0;
					КонецЕсли;
					
				ИначеЕсли СтрокаСИзменениями.ВариантИзмененияДанных = Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Удаление Тогда
					
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						
						НайденнаяСтрока.СуммаРасчетов = 0;
						НайденнаяСтрока.СуммаПлатежа = 0;
						
					КонецЦикла;
					
				КонецЕсли; // Если СтрокаСИзменениями.ВариантИзмененияДанных = Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Изменение Тогда
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область ДокументыОплаты

Функция ДокументЯвляетсяЗаказом(пДокумент) Экспорт
	
	Возврат (ТипЗнч(пДокумент) = Тип("ДокументСсылка.ЗаказПокупателя") И ТипЗнч(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(пДокумент, "ВидЗаказа")) = Тип("СправочникСсылка.ВидыЗаказовПокупателей"))
		ИЛИ ТипЗнч(пДокумент) = Тип("ДокументСсылка.ЗаказПоставщику");
	
КонецФункции

// Возвращает табличный документ для просмотра расшифровки платежа.
// Параметры:
//  Документ - ДокументОбъект, ДанныеФормыСтруктура - элемент, для которого нужно сформировать табличный документ
//
// Возвращаемое значение:
//	ТабличныйДокумент - табличный документ с реквизитами расшифровки платежа
//
Функция ПолучитьТабличныйДокументОплатаПоДокументуОплаты(Документ, ФормироватьПоДвижениям, Модифицированность, ТаблицаДокументовДляИзменения = Неопределено,
	ВыводитьДанныеИзШапкиДокумента = Ложь) Экспорт
	
	// Выводим 3 секции, если в них есть данные.
	// 1. Разнесено - выводится оплата долгов по документам.
	// 2. Предоплата и авто - предоплата и еще не распределенные строки с вариантом Авто. После проведения они могут
	// оказаться в секции 3. 3. Зачтено в других документах.
	// Рядом с каждой секцией выводим итоговую сумму и % относительно итоговой суммы документа.
	
	ШрифтНадписей = Неопределено;
	
	Объект = Неопределено;
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеВКассу") Тогда
		Объект = Документ.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументОбъект.ПоступлениеВКассу")
		Или ТипЗнч(Документ) = Тип("ДанныеФормыСтруктура") Тогда
		Объект = Документ;
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Если Ложь Тогда
		Объект = Документы.ПоступлениеВКассу.СоздатьДокумент();
	КонецЕсли;
	
	ТабличныйДокументКарточка = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("ПФ_MXL_ТаблицаДляПросмотраРасшифровкиПлатежа");
	
	#Область ОбластиОплата
	
	ОбластьШапкаКолонкиСлева = Макет.ПолучитьОбласть("Шапка|КолонкиСлеваДокОплаты");
	ОбластьШапкаКолонкиЗаказ = Макет.ПолучитьОбласть("Шапка|КолонкиЗаказ");
	ОбластьШапкаКолонкиДокумент = Макет.ПолучитьОбласть("Шапка|КолонкиДокумент");
	ОбластьШапкаКолонкиСчет = Макет.ПолучитьОбласть("Шапка|КолонкиСчетНаОплату");
	ОбластьШапкаКолонкиДоговор = Макет.ПолучитьОбласть("Шапка|КолонкиДоговор");
	
	ОбластьСтрокаКолонкиСлева = Макет.ПолучитьОбласть("Строка|КолонкиСлеваДокОплаты");
	ОбластьСтрокаКолонкиЗаказ = Макет.ПолучитьОбласть("Строка|КолонкиЗаказ");
	ОбластьСтрокаКолонкиДокумент = Макет.ПолучитьОбласть("Строка|КолонкиДокумент");
	ОбластьСтрокаКолонкиСчет = Макет.ПолучитьОбласть("Строка|КолонкиСчетНаОплату");
	ОбластьСтрокаКолонкиДоговор = Макет.ПолучитьОбласть("Строка|КолонкиДоговор");
	
	ОбластьСтрокаРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
	ОбластьДопСтрока1Значение = Макет.ПолучитьОбласть("ДопСтрока1Значение");
	ОбластьДопСтрока2Значения = Макет.ПолучитьОбласть("ДопСтрока2Значения");
	ОбластьДопСтрока3Значения = Макет.ПолучитьОбласть("ДопСтрока3Значения");
	ОбластьГруппаВерхнегоУровня = Макет.ПолучитьОбласть("ГруппаВерхнегоУровня");
	ОбластьГруппаВерхнегоУровняСвязанныеДокументы = Макет.ПолучитьОбласть("ГруппаВерхнегоУровняСвязанныеДокументы");
	ОбластьГруппаВерхнегоУровняДвеКартинки = Макет.ПолучитьОбласть("ГруппаВерхнегоУровняДвеКартинки");
	ОбластьГруппаВерхнегоУровняДокументыПозжеТекущего = Макет.ПолучитьОбласть("ГруппаВерхнегоУровняДокументыПозжеТекущего");
	ОбластьТекстДляПечати = Макет.ПолучитьОбласть("ОбластьТекстДляПечати");
	
	// Структура областей для передачи в процедуры и функции.
	СтруктураОбластей = Новый Структура;
	
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиСлева", ОбластьСтрокаКолонкиСлева);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиЗаказ", ОбластьСтрокаКолонкиЗаказ);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиДокумент", ОбластьСтрокаКолонкиДокумент);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиСчет", ОбластьСтрокаКолонкиСчет);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиДоговор", ОбластьСтрокаКолонкиДоговор);
	
	СтруктураОбластей.Вставить("ОбластьДопСтрока3Значения", ОбластьДопСтрока3Значения);
	СтруктураОбластей.Вставить("ОбластьДопСтрока2Значения", ОбластьДопСтрока2Значения);
	СтруктураОбластей.Вставить("ОбластьДопСтрока1Значение", ОбластьДопСтрока1Значение);
	СтруктураОбластей.Вставить("ОбластьСтрокаРазделитель", ОбластьСтрокаРазделитель);
	
	СтруктураОбластейШапки = Новый Структура;
	
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиСлева", ОбластьШапкаКолонкиСлева);
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиЗаказ", ОбластьШапкаКолонкиЗаказ);
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиДокумент", ОбластьШапкаКолонкиДокумент);
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиСчет", ОбластьШапкаКолонкиСчет);
	СтруктураОбластейШапки.Вставить("ОбластьСтрокаРазделитель", ОбластьСтрокаРазделитель);
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиДоговор", ОбластьШапкаКолонкиДоговор);
	// Конец Структура областей
	
	#КонецОбласти
	
	// Выведем информацию из шапки документа
	Если ВыводитьДанныеИзШапкиДокумента Тогда
		
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		// Документ
		ОбластьШапкаДокумент = Макет.ПолучитьОбласть("ШапкаДокумент");
		ОбластьШапкаДокумент.Параметры.Документ = ТипЗнч(Документ);
		ОбластьШапкаДокумент.Параметры.ДокументРасшифровка = Документ;
		ОбластьШапкаДокумент.Параметры.Номер = Документ.Номер;
		ОбластьШапкаДокумент.Параметры.Дата = Документ.Дата;
		ТабличныйДокументКарточка.Вывести(ОбластьШапкаДокумент);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		// Контрагент
		ОбластьШапкаКонтрагент = Макет.ПолучитьОбласть("ШапкаКонтрагент");
		ОбластьШапкаКонтрагент.Параметры.Контрагент = Документ.Контрагент;
		ОбластьШапкаКонтрагент.Параметры.Организация = Документ.Организация;
		ТабличныйДокументКарточка.Вывести(ОбластьШапкаКонтрагент);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		ОбластьСумма = Макет.ПолучитьОбласть("Сумма");
		ОбластьСумма.Параметры.Сумма = "" + Документ.СуммаДокумента + " " + Документ.ВалютаДенежныхСредств; // Сумма документа в валюте документа.
		ТабличныйДокументКарточка.Вывести(ОбластьСумма);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
	КонецЕсли;
	
	// Получим данные для вывода расшифровки платежа
	ПредставлениеРасшифровкиПлатежа = Объект.РасшифровкаПлатежа.Выгрузить();
	ПредставлениеРасшифровкиПлатежа.Очистить();
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ВалютаРасчетов", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ЭтоЗачет", Новый ОписаниеТипов("Булево"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ИндексСтрокиДокумента", Новый ОписаниеТипов("Число"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("СуммаРег");
	
	ЕстьСтрокиСАвто = Ложь;
	Для Каждого ТекущаяСтрока Из Объект.РасшифровкаПлатежа Цикл
		Если ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто Тогда
			ЕстьСтрокиСАвто = Истина;
		КонецЕсли;
	КонецЦикла;
	ФормироватьПоДвижениям = ФормироватьПоДвижениям И ЕстьСтрокиСАвто;
	
	// Получим информацию по данным движений.
	ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа = РасчетыРаботаСФормамиВызовСервера.ПолучитьТаблицуЗаписейДляЗаполненияПредставленияРасшифровкиПлатежа(Объект.Ссылка, ФормироватьПоДвижениям);
	
	ПредставлениеРасшифровкиПлатежа.Очистить();
	Для Каждого ТекущаяСтрока Из Объект.РасшифровкаПлатежа Цикл
		Если ТекущаяСтрока.СпособЗачета <> Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто
			ИЛИ НЕ ФормироватьПоДвижениям Тогда
			НоваяСтрокаПредставления = ПредставлениеРасшифровкиПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаПредставления, ТекущаяСтрока);
			НоваяСтрокаПредставления.ВалютаРасчетов = ТекущаяСтрока.Договор.ВалютаРасчетов;
			НоваяСтрокаПредставления.ИндексСтрокиДокумента = Объект.РасшифровкаПлатежа.Индекс(ТекущаяСтрока);
		ИначеЕсли ФормироватьПоДвижениям Тогда
			СтрокиАвтоРаспределения = ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа.НайтиСтроки(
				Новый Структура("ИндексСтрокиДокумента, СпособЗачета", (ТекущаяСтрока.НомерСтроки - 1), Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто)
			);
			Для Каждого СтрокаАвтоРаспределения Из СтрокиАвтоРаспределения Цикл
				НоваяСтрокаПредставления = ПредставлениеРасшифровкиПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПредставления, СтрокаАвтоРаспределения);
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПредставления, ТекущаяСтрока, "Курс, Кратность, СтавкаНДС, СтатьяДДС, ДокументПланирования, СчетНаОплату");
				НоваяСтрокаПредставления.ПризнакАванса = (СтрокаАвтоРаспределения.Документ = Объект.Ссылка);
				НоваяСтрокаПредставления.ИндексСтрокиДокумента = Объект.РасшифровкаПлатежа.Индекс(ТекущаяСтрока);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ВывелиШапку = Ложь;

	// Распределим данные из ТаблицаДокументовДляИзменения на ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа;
	Реквизит4Отбора = "ЭтоЗачет"; // Параметр №1 процедуры.
	Значение4Отбора = Истина; // Параметр №2 процедуры.
	РаспределитьДанныеИзТаблицыСуществующихДокументов(Реквизит4Отбора, Значение4Отбора,
		Документ,
		ТаблицаДокументовДляИзменения, ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа
	);
	
	#Область Разнесено_Итоги
	
	ОбластьРазнесено = Макет.ПолучитьОбласть("Разнесено");
	ОбластьРазнесено.Параметры.ИмяДействия = "";
	Разнесено = 0;
	
	Если НЕ ФормироватьПоДвижениям Тогда
		Для Каждого ТекущаяСтрока Из Документ.РасшифровкаПлатежа Цикл
			Если ТекущаяСтрока.ПризнакАванса Тогда
				Продолжить;
			КонецЕсли;
			Разнесено = Разнесено + ТекущаяСтрока.СуммаПлатежа;
		КонецЦикла;
	КонецЕсли;
	Для Каждого ТекущаяСтрока Из ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа Цикл
		Если ТекущаяСтрока.ПризнакАванса И НЕ ТекущаяСтрока.ЭтоЗачет Тогда
			Продолжить;
		КонецЕсли;
		Если ДокументЯвляетсяЗаказом(ТекущаяСтрока.Документ) Тогда // Зачет предоплаты в заказе покупателя тоже будем пропускать.
			Продолжить;
		КонецЕсли;
		ТекущаяСуммаПлатежа = ПолучитьСуммуПлатежаСтроки(Объект, ТекущаяСтрока, Ложь);
		Разнесено = Разнесено + ТекущаяСуммаПлатежа;
	КонецЦикла;
	Если ТаблицаДокументовДляИзменения <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из ТаблицаДокументовДляИзменения Цикл
			Если ТекущаяСтрока.ВариантИзмененияДанных <> Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Добавление Тогда // См. вызов функции РаспределитьДанныеИзТаблицыСуществующихДокументов
				Продолжить;
			КонецЕсли;
			ТекущаяСуммаПлатежа = ПолучитьСуммуПлатежаСтроки(Объект, ТекущаяСтрока, Истина);
			Разнесено = Разнесено + ТекущаяСуммаПлатежа;
		КонецЦикла;
	КонецЕсли;
	
	ОбластьРазнесено.Параметры.Разнесено = НСтр("ru = 'Всего разнесено для оплаты долгов: '") + Разнесено + " " + Объект.ВалютаДенежныхСредств.СимвольноеПредставление
		+ " (" + ?(Документ.СуммаДокумента = 0, "0", Формат(Разнесено / Объект.СуммаДокумента * 100, "ЧДЦ=2; ЧН=0")) + "%)";
	;
	
	ТабличныйДокументКарточка.Вывести(ОбластьРазнесено);
	ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
	ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);

	#КонецОбласти
	
	#Область Оплачено
	
	Если Разнесено <> 0 ИЛИ НЕ ВывелиШапку Тогда
		
		// Выведем расшифровку платежа
		ТабличныйДокументКарточка.НачатьАвтогруппировкуСтрок();
		Для Каждого ТекущаяСтрока Из ПредставлениеРасшифровкиПлатежа Цикл
			
			Если ТекущаяСтрока.ЭтоЗачет Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ВывелиШапку Тогда
				ВывестиШапку(Истина, Объект.Контрагент, ТабличныйДокументКарточка, СтруктураОбластейШапки);
				ВывелиШапку = Истина;
			КонецЕсли;
			
			ЭтоОплата = Истина;
			ВывестиСтрокуРасшифровкиПлатежаДляПросмотра(ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
				СтруктураОбластей, ШрифтНадписей, Объект
			);
			
		КонецЦикла;
		ТабличныйДокументКарточка.ЗакончитьАвтогруппировкуСтрок();
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Зачтено_Итоги
	
	Если ПравоДоступа("Изменение", Документ.Ссылка.Метаданные(), Пользователи.АвторизованныйПользователь()) Тогда
		ОбластьРазнесено = Макет.ПолучитьОбласть("РазнесеноГиперссылка");
		ОбластьРазнесено.Параметры.ИмяДействия = "ОткрытьПомощник";
	Иначе
		ОбластьРазнесено = Макет.ПолучитьОбласть("Разнесено");
		ОбластьРазнесено.Параметры.ИмяДействия = "";
	КонецЕсли;
	
	Разнесено = 0;
	
	Для Каждого ТекущаяСтрока Из ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа Цикл
		Если НЕ ТекущаяСтрока.ЭтоЗачет Тогда
			Продолжить;
		КонецЕсли;
		ТекущаяСуммаПлатежа = ПолучитьСуммуПлатежаСтроки(Объект, ТекущаяСтрока, Ложь);
		Разнесено = Разнесено + ТекущаяСуммаПлатежа;
	КонецЦикла;
	Для Каждого ТекущаяСтрока Из ТаблицаДокументовДляИзменения Цикл
		Если ТекущаяСтрока.ВариантИзмененияДанных <> Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Добавление Тогда
			Продолжить;
		КонецЕсли;
		Разнесено = Разнесено + ТекущаяСтрока.СуммаПлатежа;
	КонецЦикла;
	
	Если Разнесено <> 0 Тогда
		
		ОбластьРазнесено.Параметры.Разнесено = НСтр("ru ='Зачтено в документах:'");
		Если ВывелиШапку Тогда
			ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		КонецЕсли;
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		ТабличныйДокументКарточка.Вывести(ОбластьРазнесено);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Зачтено
	
	Если Разнесено <> 0 Тогда
	
		// Выведем информацию о документах, в которых зачтен текущий
		Если НЕ Документ.Ссылка.Пустая() Тогда
			ЕстьЗачет = Ложь;
			ВыводилиЗаголовок = Ложь;
			
			Для Каждого ТекущаяСтрока Из ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа Цикл
				
				Если НЕ ТекущаяСтрока.ЭтоЗачет Тогда
					Продолжить;
				КонецЕсли;
				Если ТекущаяСтрока.СуммаРасчетов = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ВыводилиЗаголовок Тогда
					ВыводилиЗаголовок = Истина;
					ТабличныйДокументКарточка.НачатьАвтогруппировкуСтрок();
				КонецЕсли;
				
				Если НЕ ВывелиШапку Тогда
					ВывестиШапку(Истина, Объект.Контрагент, ТабличныйДокументКарточка, СтруктураОбластейШапки, Истина);
					ВывелиШапку = Истина;
				КонецЕсли;
				
				ЭтоОплата = Истина;
				ВывестиСтрокуРасшифровкиПлатежаДляПросмотра(ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
					СтруктураОбластей, ШрифтНадписей, Объект
				);
				
				ЕстьЗачет = Истина;
				
			КонецЦикла;
			
			Если НЕ ЕстьЗачет Тогда
				ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
			Иначе
				ТабличныйДокументКарточка.ЗакончитьАвтогруппировкуСтрок();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ИзмененияКоторыеНеРаспределены
	
	// Выведем информацию об изменяемых документах.
	Если НЕ ТаблицаДокументовДляИзменения = Неопределено Тогда
		ЕстьИзменения = Ложь;
		ВыводилиЗаголовок = Ложь;
		
		Если ТаблицаДокументовДляИзменения <> Неопределено Тогда
			Для Каждого ТекущаяСтрока Из ТаблицаДокументовДляИзменения Цикл
				
				Если ТекущаяСтрока.ВариантИзмененияДанных <> Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Добавление Тогда // См. вызов функции РаспределитьДанныеИзТаблицыСуществующихДокументов
					Продолжить;
				КонецЕсли;
				
				Если НЕ ВыводилиЗаголовок Тогда
					ВыводилиЗаголовок = Истина;
					ТабличныйДокументКарточка.НачатьАвтогруппировкуСтрок();
				КонецЕсли;
				
				Если НЕ ВывелиШапку Тогда
					ВывестиШапку(Истина, Объект.Контрагент, ТабличныйДокументКарточка, СтруктураОбластейШапки);
					ВывелиШапку = Истина;
				КонецЕсли;
				
				ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
				ЭтоОплата = Истина;
				ЭтоИзменениеДокумента = Истина;
				ВывестиСтрокуРасшифровкиПлатежаДляПросмотра(ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
					СтруктураОбластей, ШрифтНадписей, Объект, ЭтоИзменениеДокумента
				);
				
				ЕстьИзменения = Истина;
				
			КонецЦикла;
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			ТабличныйДокументКарточка.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат ТабличныйДокументКарточка;
	
КонецФункции

#КонецОбласти

#Область ДокументыОтгрузки

// Возвращает табличный документ для просмотра расшифровки платежа.
// Параметры:
//  Документ - ДокументОбъект, ДанныеФормыСтруктура - элемент, для которого нужно сформировать табличный документ
//
// Возвращаемое значение:
//	ТабличныйДокумент - табличный документ с реквизитами расшифровки платежа
//
Функция ПолучитьТабличныйДокументОплатаПоДокументуОтгрузки(Документ, пФормироватьПоДвижениям, Модифицированность, ТаблицаДокументовДляИзменения = Неопределено,
	ВыводитьДанныеИзШапкиДокумента = Ложь, ИмяТЧ = "Предоплата") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШрифтНадписей = Неопределено;
	
	Если Ложь Тогда
		Документ = Документы.АктВыполненныхРабот.ПустаяСсылка();
	КонецЕсли;
	
	Договор = Документ.Договор;
	
	Объект = Неопределено;
	Объект = Документ;
	
	Если Ложь Тогда
		Объект = Документы.АктВыполненныхРабот.ПустаяСсылка();
	КонецЕсли;
	
	ЭтоПередачаМеждуОрганизациями = (ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями"));
	
	СтруктураВалютыКурсыИКратности = Новый Структура;
	РасчетыПроведениеДокументов.ЗаполнитьКурсВалютыУчетаИРегВалюты(СтруктураВалютыКурсыИКратности, Документ.Дата);
	СтруктураВалютыКурсыИКратности.Вставить("КурсДокумента", Документ.Курс);
	СтруктураВалютыКурсыИКратности.Вставить("КратностьДокумента", Документ.Кратность);
	СтруктураВалютыКурсыИКратности.Вставить("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	
	// Получим данные для вывода расшифровки платежа
	ПредставлениеРасшифровкиПлатежа = Объект[ИмяТЧ].Выгрузить();
	ПредставлениеРасшифровкиПлатежа.Очистить();
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("Договор", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ВалютаРасчетов", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ВалютаПлатежа", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ПризнакАванса", Новый ОписаниеТипов("Булево"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("СпособЗачета");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("СтавкаНДС");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("СуммаНДС");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("СуммаРег");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("СтатьяДДС");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ДокументПланирования");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ИндексСтрокиДокумента");
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ЭтоЗачет", Новый ОписаниеТипов("Булево"));
	ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("ЭтоЧек", Новый ОписаниеТипов("Булево"));
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЭтоЗаказ = Истина;
		ПредставлениеРасшифровкиПлатежа.Колонки.Добавить("Заказ");
		ЭтоЗаказНаряд = (Объект.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд);
	Иначе
		ЭтоЗаказ = Ложь;
		ЭтоЗаказНаряд = Ложь;
	КонецЕсли;
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПриходнаяНакладная")
		ИЛИ ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ДополнительныеРасходы") Тогда
		ЭтоРасчетыСПоставщиком = Истина;
	ИначеЕсли ЭтоПередачаМеждуОрганизациями И ИмяТЧ = "ПредоплатаПолучатель" Тогда
		ЭтоРасчетыСПоставщиком = Истина;
	Иначе
		ЭтоРасчетыСПоставщиком = Ложь;
	КонецЕсли;
	
	ФормироватьПоДвижениям = Объект.Проведен И Объект.СпособЗачетаПредоплаты = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто;
	
	ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа = РасчетыРаботаСФормамиВызовСервера.ПолучитьДанныеОбОплатеПоДокументуОтгрузки(Объект.Ссылка, ФормироватьПоДвижениям, ЭтоРасчетыСПоставщиком);
	Если Ложь Тогда ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа = Новый ТаблицаЗначений КонецЕсли;
	
	ПредставлениеРасшифровкиПлатежа.Очистить();
	Если НЕ ФормироватьПоДвижениям Тогда
		Для Каждого ТекущаяСтрока Из Объект[ИмяТЧ] Цикл
			НоваяСтрокаПредставления = ПредставлениеРасшифровкиПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаПредставления, ТекущаяСтрока);
			НоваяСтрокаПредставления.ВалютаРасчетов = Объект.Договор.ВалютаРасчетов;
			НоваяСтрокаПредставления.ПризнакАванса = Истина;
			НоваяСтрокаПредставления.СпособЗачета = Объект.СпособЗачетаПредоплаты;
			Если (ЭтоЗаказ И НЕ ЭтоЗаказНаряд)
				ИЛИ (ЭтоЗаказНаряд И НЕ ТекущаяСтрока.ЭтоПредоплатаБезЗаказа) Тогда
				НоваяСтрокаПредставления.Заказ = Объект.Ссылка;
			КонецЕсли;
			НоваяСтрокаПредставления.ЭтоЗачет = Истина;
			Попытка
				НоваяСтрокаПредставления.ИндексСтрокиДокумента = ТекущаяСтрока.ИсходныйНомерСтроки;
			Исключение
				НоваяСтрокаПредставления.ИндексСтрокиДокумента = (ТекущаяСтрока.НомерСтроки - 1);
			КонецПопытки;
			НоваяСтрокаПредставления.ЭтоЧек = (ТипЗнч(ТекущаяСтрока.Документ) = Тип("ДокументСсылка.ЧекККМ"));
		КонецЦикла;
	Иначе
		Для Каждого СтрокаДвижения Из ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа Цикл
			НоваяСтрокаПредставления = ПредставлениеРасшифровкиПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаПредставления, СтрокаДвижения);
		КонецЦикла;
	КонецЕсли;
	
	// Сформируем табличный документ
	ТабличныйДокументКарточка = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("ПФ_MXL_ТаблицаДляПросмотраРасшифровкиПлатежа");
	
	#Область ОбластиНакладной
	
	ОбластьШапкаКолонкиСлева = Макет.ПолучитьОбласть("Шапка|КолонкиСлеваДокОплаты");
	ОбластьШапкаКолонкиЗаказ = Макет.ПолучитьОбласть("Шапка|КолонкиЗаказ");
	ОбластьШапкаКолонкиДокумент = Макет.ПолучитьОбласть("Шапка|КолонкиДокумент");
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокаКолонкиСлева = Макет.ПолучитьОбласть("Строка|КолонкиСлеваДокОплаты");
	ОбластьСтрокаКолонкиЗаказ = Макет.ПолучитьОбласть("Строка|КолонкиЗаказ");
	ОбластьСтрокаКолонкиДокумент = Макет.ПолучитьОбласть("Строка|КолонкиДокумент");
	ОбластьСтрокаКолонкиСчет = Макет.ПолучитьОбласть("Строка|КолонкиСчетНаОплату");
	ОбластьСтрокаКолонкиДоговор = Макет.ПолучитьОбласть("Строка|КолонкиДоговор");
	
	ОбластьСтрокаРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
	
	ОбластьДопСтрока1Значение = Макет.ПолучитьОбласть("ДопСтрока1Значение");
	ОбластьДопСтрока2Значения = Макет.ПолучитьОбласть("ДопСтрока2Значения");
	ОбластьДопСтрока3Значения = Макет.ПолучитьОбласть("ДопСтрока3Значения");
	
	ОбластьГруппаВерхнегоУровня = Макет.ПолучитьОбласть("ГруппаВерхнегоУровня");
	ОбластьГруппаВерхнегоУровняСвязанныеДокументы = Макет.ПолучитьОбласть("ГруппаВерхнегоУровняСвязанныеДокументы");
	ОбластьГруппаВерхнегоУровняДвеКартинки = Макет.ПолучитьОбласть("ГруппаВерхнегоУровняДвеКартинки");
	ОбластьГруппаВерхнегоУровняДокументыПозжеТекущего = Макет.ПолучитьОбласть("ГруппаВерхнегоУровняДокументыПозжеТекущего");
	
	ОбластьТребуетсяАктуализация = Макет.ПолучитьОбласть("ТребуетсяАктуализация");
	
	// Структура областей для передачи в процедуры и функции.
	СтруктураОбластей = Новый Структура;
	
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиСлева", ОбластьСтрокаКолонкиСлева);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиЗаказ", ОбластьСтрокаКолонкиЗаказ);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиДокумент", ОбластьСтрокаКолонкиДокумент);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиСчет", ОбластьСтрокаКолонкиСчет);
	СтруктураОбластей.Вставить("ОбластьСтрокаКолонкиДоговор", ОбластьСтрокаКолонкиДоговор);
	
	СтруктураОбластей.Вставить("ОбластьДопСтрока3Значения", ОбластьДопСтрока3Значения);
	СтруктураОбластей.Вставить("ОбластьДопСтрока2Значения", ОбластьДопСтрока2Значения);
	СтруктураОбластей.Вставить("ОбластьДопСтрока1Значение", ОбластьДопСтрока1Значение);
	СтруктураОбластей.Вставить("ОбластьСтрокаРазделитель", ОбластьСтрокаРазделитель);
	
	СтруктураОбластейШапки = Новый Структура;
	
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиСлева", ОбластьШапкаКолонкиСлева);
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиЗаказ", ОбластьШапкаКолонкиЗаказ);
	СтруктураОбластейШапки.Вставить("ОбластьШапкаКолонкиДокумент", ОбластьШапкаКолонкиДокумент);
	СтруктураОбластейШапки.Вставить("ОбластьСтрокаРазделитель", ОбластьСтрокаРазделитель);
	
	#КонецОбласти
	
	// Выведем информацию из шапки документа
	Если ВыводитьДанныеИзШапкиДокумента Тогда
		
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		// Документ
		ОбластьШапкаДокумент = Макет.ПолучитьОбласть("ШапкаДокумент");
		ОбластьШапкаДокумент.Параметры.Документ = ТипЗнч(Документ);
		ОбластьШапкаДокумент.Параметры.ДокументРасшифровка = Документ;
		ОбластьШапкаДокумент.Параметры.Номер = Документ.Номер;
		ОбластьШапкаДокумент.Параметры.Дата = Документ.Дата;
		ТабличныйДокументКарточка.Вывести(ОбластьШапкаДокумент);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		// Контрагент
		ОбластьШапкаКонтрагент = Макет.ПолучитьОбласть("ШапкаКонтрагент");
		ОбластьШапкаКонтрагент.Параметры.Контрагент = Документ.Контрагент;
		ОбластьШапкаКонтрагент.Параметры.Организация = Документ.Организация;
		ТабличныйДокументКарточка.Вывести(ОбластьШапкаКонтрагент);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
		// Договор
		Если Документ.Контрагент.ВестиРасчетыПоДоговорам Тогда
			ОбластьШапкаДоговор = Макет.ПолучитьОбласть("ШапкаДоговор");
			ОбластьШапкаДоговор.Параметры.Договор = Договор;
			ТабличныйДокументКарточка.Вывести(ОбластьШапкаДоговор);
			ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		КонецЕсли;
			
		ОбластьСумма = Макет.ПолучитьОбласть("Сумма");
		ОбластьСумма.Параметры.Сумма = "" + Документ.СуммаДокумента + " " + Документ.ВалютаДокумента; // Сумма документа в валюте документа.
		ТабличныйДокументКарточка.Вывести(ОбластьСумма);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
	Иначе
		
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
		
	КонецЕсли;
	
	// Если договор в валюте, а документ в национальной валюте, т.е. в договоре установлен флаг "в у.е.",
	// то выведем информацию о сумме документа в валюте расчетов, чтобы эту сумму можно было сопоставить с суммой,
	// которая оплачена.
	
	// Распределим данные из ТаблицаДокументовДляИзменения на ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа;
	Реквизит4Отбора = "ПризнакАванса"; // Параметр №1 процедуры.
	Значение4Отбора = Ложь; // Параметр №2 процедуры.
	РаспределитьДанныеИзТаблицыСуществующихДокументов(Реквизит4Отбора, Значение4Отбора,
		Документ,
		ТаблицаДокументовДляИзменения, ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа
	);
	
	#Область Оплачено_Итоги
	
	ВалютаДокументаСимвольноеПредставление = Объект.ВалютаДокумента.СимвольноеПредставление;
	ВалютаРасчетов = Объект.Договор.ВалютаРасчетов;
	
	СуммаДокументаВалРасчетов = Формат(Объект.СуммаДокумента / ?(Объект.Курс = 0, 1, Объект.Курс) * ?(Объект.Кратность = 0, 1, Объект.Кратность), "ЧДЦ=2; ЧН=0");
	
	Если Объект.ВалютаДокумента <> ВалютаРасчетов И ЗначениеЗаполнено(ВалютаРасчетов) Тогда
		ОбластьСуммаДокумента = Макет.ПолучитьОбласть("СуммаДокумента");
		ОбластьСуммаДокумента.Параметры.СуммаДокумента = ""+Формат(Объект.СуммаДокумента, "ЧДЦ=2; ЧН=0") + " " + ВалютаДокументаСимвольноеПредставление
			+ ?(ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"), " (" + СуммаДокументаВалРасчетов+" "+ВалютаРасчетов.СимвольноеПредставление
			+ НСтр("ru = ' по курсу '") + Формат(Объект.Курс, "ЧДЦ=4") + ")", "");
		;
		ТабличныйДокументКарточка.Вывести(ОбластьСуммаДокумента);
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
	КонецЕсли;
	
	ОплаченоВалДокумента = 0;
	Оплачено = 0;
	ОбластьВсегоОплачено = Макет.ПолучитьОбласть("ВсегоОплачено");
	
	Если ЭтоЗаказНаряд Тогда
		Для Каждого ТекущаяСтрока Из ПредставлениеРасшифровкиПлатежа Цикл
			// Особенность оплаты заказ-наряда.
			// 1. Сначала поступила предоплата по заказ-наряду.
			// 2. Потом ее зачли в заказ-наряде.
			// Такой зачет считать не будем, т.к. он будет учтен в цикле по таблице ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа.
			// Учитывать будем только зачет предоплаты без заказа.
			Если ФормироватьПоДвижениям Тогда
				// В этом случае у нас в таблице ФормироватьПоДвижениям будут находится и данные о зачете, и данные об оплате.
			Иначе
				// В этом случае у нас в таблице ФормироватьПоДвижениям будут находится только данные о зачете.
				Если НЕ ТекущаяСтрока.ПризнакАванса Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущаяСтрока.Заказ) И ТекущаяСтрока.ПризнакАванса Тогда
				Продолжить;
			КонецЕсли;
			
			Оплачено = Оплачено + ТекущаяСтрока.СуммаРасчетов;
			УвеличитьОплаченоВалДокумента(ОплаченоВалДокумента, Оплачено, ТекущаяСтрока, Документ, ВалютаРасчетов);
		КонецЦикла;
	ИначеЕсли Объект.ВалютаДокумента = ВалютаРасчетов Тогда
		Оплачено = ПредставлениеРасшифровкиПлатежа.Итог("СуммаРасчетов");
	Иначе
		Для Каждого ТекущаяСтрока Из ПредставлениеРасшифровкиПлатежа Цикл
			Оплачено = Оплачено + ТекущаяСтрока.СуммаРасчетов;
			УвеличитьОплаченоВалДокумента(ОплаченоВалДокумента, Оплачено, ТекущаяСтрока, Документ, ВалютаРасчетов);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ФормироватьПоДвижениям И НЕ Документ.Ссылка.Пустая() Тогда
		Для Каждого ТекущаяСтрока Из ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа Цикл
			// Если зачет был выполнен текущим документом, то пропускаем.
			// В этом цикле обрабатываем только оплату другими документами.
			Если ТекущаяСтрока.ПризнакАванса Тогда
				Продолжить;
			КонецЕсли;
			Оплачено = Оплачено + ТекущаяСтрока.СуммаРасчетов;
			УвеличитьОплаченоВалДокумента(ОплаченоВалДокумента, Оплачено, ТекущаяСтрока, Документ, ВалютаРасчетов);
		КонецЦикла;
	КонецЕсли;
	
	Если Объект.ВалютаДокумента = ВалютаРасчетов Тогда
		ОбластьВсегоОплачено.Параметры.Оплачено = "" + Формат(Оплачено, "ЧДЦ=2; ЧН=0") + " "
			+ ВалютаРасчетов.СимвольноеПредставление
			+ " (" + ?(Документ.СуммаДокумента = 0, "0", Формат(Оплачено/Объект.СуммаДокумента * 100, "ЧДЦ=2; ЧН=0")) + "%)"
		;
	Иначе
		ОбластьВсегоОплачено.Параметры.Оплачено = "" + Формат(ОплаченоВалДокумента, "ЧДЦ=2; ЧН=0") + " " + ВалютаДокументаСимвольноеПредставление
			+ " (" + Формат(Оплачено, "ЧДЦ=2; ЧН=0") + " "
			+ ВалютаРасчетов.СимвольноеПредставление
			+ ", " + ?(Документ.СуммаДокумента = 0, "0", Формат(Оплачено/СуммаДокументаВалРасчетов * 100, "ЧДЦ=2; ЧН=0")) + "%)";
		;
	КонецЕсли;
	ТабличныйДокументКарточка.Вывести(ОбластьВсегоОплачено);
	ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
	ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
	
	#КонецОбласти
	
	// Выведем шапку
	Если ФормироватьПоДвижениям Тогда
		ОбластьГруппаВерхнегоУровня.Параметры.Наименование = НСтр("ru = 'Зачтена предоплата:'");
	Иначе
		ОбластьГруппаВерхнегоУровня.Параметры.Наименование = НСтр("ru = 'Будет зачтено:'");
	КонецЕсли;
	
	#Область Предоплата
	
	Если Объект.СпособЗачетаПредоплаты = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто Тогда
		Если Документ.Проведен И НЕ пФормироватьПоДвижениям И Модифицированность Тогда
			ОбластьТребуетсяАктуализация.Параметры.ТекстДляПользователя = НСтр("ru = 'Для получения актуальной информации запишите изменения'");
			ТабличныйДокументКарточка.Вывести(ОбластьТребуетсяАктуализация);
		ИначеЕсли НЕ Документ.Проведен Тогда
			ОбластьТребуетсяАктуализация.Параметры.ТекстДляПользователя = НСтр("ru = 'Информация об автозачете предоплаты появится после проведения документа'");
			ТабличныйДокументКарточка.Вывести(ОбластьТребуетсяАктуализация);
		КонецЕсли;
	КонецЕсли;
	
	// Выведем расшифровку платежа
	ВыводилиЗаголовок = Ложь;
	Для Каждого ТекущаяСтрока Из ПредставлениеРасшифровкиПлатежа Цикл
		
		Если ФормироватьПоДвижениям
			И НЕ ТекущаяСтрока.ПризнакАванса Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ВыводилиЗаголовок Тогда
			ВыводилиЗаголовок = Истина;
			
			Если ЭтоПередачаМеждуОрганизациями И ИмяТЧ = "ПредоплатаПолучатель" Тогда
				КонтрагентШапки = Объект.КонтрагентВладелец;
			ИначеЕсли ЭтоПередачаМеждуОрганизациями Тогда
				КонтрагентШапки = Объект.КонтрагентПолучатель;
			Иначе
				КонтрагентШапки = Объект.Контрагент;
			КонецЕсли;	
			ВывестиШапку(Ложь, КонтрагентШапки, ТабличныйДокументКарточка, СтруктураОбластейШапки, , ЭтоПередачаМеждуОрганизациями);
			
			ТабличныйДокументКарточка.НачатьАвтогруппировкуСтрок();
		КонецЕсли;
		
		ЭтоОплата = Ложь;
		ВывестиСтрокуСИнформациейОбОплате(СтруктураВалютыКурсыИКратности, ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
			СтруктураОбластей,
			ШрифтНадписей,
			Объект.Ссылка,
			ЭтоЗаказ И НЕ ЭтоЗаказНаряд,
			ЭтоРасчетыСПоставщиком
		);
		
	КонецЦикла;
	ВыводилиШапку = ВыводилиЗаголовок;
	
	Если ВыводилиЗаголовок Тогда
		ТабличныйДокументКарточка.ЗакончитьАвтогруппировкуСтрок();
	Иначе
		ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Оплата
	
	// Выведем информацию о документах, в которых оплачен текущий
	Если НЕ Документ.Ссылка.Пустая() Тогда
		ЕстьОплата = Ложь;
		ВыводилиЗаголовок = Ложь;
		
		Для Каждого ТекущаяСтрока Из ТаблицаЗаписейДляПредставленияРасшифровкиПлатежа Цикл
			
			Если ТекущаяСтрока.ПризнакАванса Тогда
				Продолжить;
			КонецЕсли;
			Если ТекущаяСтрока.СуммаРасчетов = 0 Тогда // Могли удалить зачет в Помощнике.
				Продолжить;
			КонецЕсли;
			
			Если НЕ ВыводилиЗаголовок Тогда
				ВыводилиЗаголовок = Истина;
				ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
				ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
				Если ВыводилиШапку Тогда
					ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
				КонецЕсли;
				ОбластьЗачтено = Макет.ПолучитьОбласть("РазнесеноГиперссылка");
				ОбластьЗачтено.Параметры.ИмяДействия = "ОткрытьПомощник";
				ОбластьЗачтено.Параметры.Разнесено = ?(ЭтоЗаказ, НСтр("ru = 'Оплачен документами:'"), НСтр("ru = 'Документы постоплаты:'"));
				ТабличныйДокументКарточка.Вывести(ОбластьЗачтено); //, 1,, Истина);
				//ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
				
				Если НЕ ВыводилиШапку Тогда
					Если ЭтоПередачаМеждуОрганизациями И ИмяТЧ = "ПредоплатаПолучатель" Тогда
						КонтрагентШапки = Объект.КонтрагентВладелец;
					ИначеЕсли ЭтоПередачаМеждуОрганизациями Тогда
						КонтрагентШапки = Объект.КонтрагентПолучатель;
					Иначе
						КонтрагентШапки = Объект.Контрагент;
					КонецЕсли;	
					ВывестиШапку(Ложь, КонтрагентШапки, ТабличныйДокументКарточка, СтруктураОбластейШапки, , ЭтоПередачаМеждуОрганизациями);
					ВыводилиШапку = Истина;
				КонецЕсли;
				
				ТабличныйДокументКарточка.НачатьАвтогруппировкуСтрок();
			КонецЕсли;
			
			ЭтоОплата = Истина;
			ВывестиСтрокуСИнформациейОбОплате(СтруктураВалютыКурсыИКратности, ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
				СтруктураОбластей,
				ШрифтНадписей,
				Объект.Ссылка,
				ЭтоЗаказ И НЕ ЭтоЗаказНаряд,
				ЭтоРасчетыСПоставщиком
			);
			
			ЕстьОплата = Истина;
			
		КонецЦикла;
		
		Если ЕстьОплата Тогда
			ТабличныйДокументКарточка.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ИзмененияКоторыеНеРаспределены
	
	// Выведем информацию об изменяемых документах.
	Если НЕ ТаблицаДокументовДляИзменения = Неопределено Тогда
		ЕстьИзменения = Ложь;
		
		Если ТаблицаДокументовДляИзменения <> Неопределено Тогда
			Для Каждого ТекущаяСтрока Из ТаблицаДокументовДляИзменения Цикл
				
				Если ТекущаяСтрока.ВариантИзмененияДанных <> Перечисления.ВариантыИзмененияДанныхВДокументахИзПомощника.Добавление Тогда // См. вызов функции РаспределитьДанныеИзТаблицыСуществующихДокументов
					Продолжить;
				КонецЕсли;
				
				Если НЕ ВыводилиЗаголовок Тогда
					
					ВыводилиЗаголовок = Истина;
					
					ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
					ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
					Если ВыводилиШапку Тогда
						ТабличныйДокументКарточка.Вывести(ОбластьСтрокаРазделитель);
					КонецЕсли;
					ОбластьЗачтено = Макет.ПолучитьОбласть("РазнесеноГиперссылка");
					ОбластьЗачтено.Параметры.ИмяДействия = "ОткрытьПомощник";
					ОбластьЗачтено.Параметры.Разнесено = ?(ЭтоЗаказ, НСтр("ru = 'Оплачен документами:'"), НСтр("ru = 'Документы постоплаты:'"));
					ТабличныйДокументКарточка.Вывести(ОбластьЗачтено);
					
					Если НЕ ВыводилиШапку Тогда
						Если ЭтоПередачаМеждуОрганизациями И ИмяТЧ = "ПредоплатаПолучатель" Тогда
							КонтрагентШапки = Объект.КонтрагентВладелец;
						ИначеЕсли ЭтоПередачаМеждуОрганизациями Тогда
							КонтрагентШапки = Объект.КонтрагентПолучатель;
						Иначе
							КонтрагентШапки = Объект.Контрагент;
						КонецЕсли;	
						ВывестиШапку(Ложь, КонтрагентШапки, ТабличныйДокументКарточка, СтруктураОбластейШапки, , ЭтоПередачаМеждуОрганизациями);
					КонецЕсли;
					
					ТабличныйДокументКарточка.НачатьАвтогруппировкуСтрок();
					
				КонецЕсли;
				
				ТекущаяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
				ЭтоОплата = Ложь;
				ЭтоИзменениеДокумента = Истина;
				ВывестиСтрокуРасшифровкиПлатежаДляПросмотра(ЭтоОплата, ТабличныйДокументКарточка, ТекущаяСтрока, ФормироватьПоДвижениям,
					СтруктураОбластей, ШрифтНадписей, Объект, ЭтоИзменениеДокумента
				);
				
				ЕстьИзменения = Истина;
				
			КонецЦикла;
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			ТабличныйДокументКарточка.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат ТабличныйДокументКарточка;
	
КонецФункции

Процедура УвеличитьОплаченоВалДокумента(ОплаченоВалДокумента, Оплачено, ТекущаяСтрока, Документ, ВалютаРасчетов)
	
	Если Документ.ВалютаДокумента = ВалютаРасчетов Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.Курс = Документ.Курс И ТекущаяСтрока.СуммаПлатежа <> 0 Тогда
		ОплаченоВалДокумента = ОплаченоВалДокумента + ТекущаяСтрока.СуммаПлатежа;
	Иначе
		ОплаченоВалДокумента = ОплаченоВалДокумента + Оплачено * ?(Документ.Курс = 0, 1, Документ.Курс) / ?(Документ.Кратность = 0, 1, Документ.Кратность);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗапускВыгрузки

Процедура ЗапускВыгрузки(КодУзла) Экспорт
	
	НачатьТранзакцию();
	
	Узел = ПланыОбмена.СинхронизацияМП.НайтиПоКоду(КодУзла);
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, Узел);
	
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(ЗаписьСообщения.Получатель, ЗаписьСообщения.НомерСообщения);
	
	КоличествоОбъектов = 0;
	ДанныеВВыборкеЕсть = Ложь;
	Пока ВыборкаИзменений.Следующий() Цикл
		
		Если НЕ ДанныеВВыборкеЕсть Тогда
			ДанныеВВыборкеЕсть = Истина;
		КонецЕсли;
		
		ТекОбъектОбмена = ВыборкаИзменений.Получить();
		
		Если КоличествоОбъектов > 500 Тогда
			СформироватьИЗаписатьПакет(ЗаписьСообщения, ЗаписьXML, Узел);
			
			ЗаписьXML = Новый ЗаписьXML;
			ЗаписьXML.УстановитьСтроку();
			ЗаписьXML.ЗаписатьОбъявлениеXML();
			
			ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
			ЗаписьСообщения.НачатьЗапись(ЗаписьXML, Узел);
			
			КоличествоОбъектов = 0;
		КонецЕсли;
		
		СтруктураПредопределенныхДанных = СинхронизацияРаботаСПредопределеннымиДаннымиМП.ПроверкаОбъектаНаПредопределенныеДанные(ТекОбъектОбмена);
		
		КоличествоОбъектов = КоличествоОбъектов + 1;
		
		УдалитьКартинкуИзВыгрузки(КодУзла, ТекОбъектОбмена);
		
		Если КодУзла = "001" Тогда
			Результат = СинхронизацияРаботаСКлассификаторамиМП.НачатьПоискКлассификаторов(ЗаписьXML, ТекОбъектОбмена, СтруктураПредопределенныхДанных);
			Если Результат Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		СериализацияПредопределенныхДанных(ЗаписьXML, СтруктураПредопределенныхДанных, ТекОбъектОбмена);
		
		СериализаторXDTO.ЗаписатьXML(ЗаписьXML, ТекОбъектОбмена, НазначениеТипаXML.Явное);
		
	КонецЦикла;
	
	Если ДанныеВВыборкеЕсть Тогда
		
		СформироватьИЗаписатьПакет(ЗаписьСообщения, ЗаписьXML, Узел);
		
		Если ПланыОбмена.СинхронизацияМП.ЭтотУзел().Код = "001" Тогда
			ОбработкаИзмененныхДанных(Узел);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаписатьИнформацию(КодУзла, Узел);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ЗаписатьИнформацию(Знач КодУзла, Знач Узел)
	
	Перем СтруктураЗаписи;
	
	Если КодУзла = "001" Тогда
		СтруктураЗаписи = Новый Структура("ФормированиеПакетовНаКлиенте, Узел", Перечисления.СтатусыФормированияПакетовМП.Завершено, Узел);
	Иначе
		СтруктураЗаписи = Новый Структура("ФормированиеПакетовНаСервере, Узел", Перечисления.СтатусыФормированияПакетовМП.Завершено, Узел);
	КонецЕсли;
	
	РегистрыСведений.ЖурналСинхронизацииМП.ЗаписатьИнформацию(СтруктураЗаписи);
	
КонецПроцедуры

Процедура СериализацияПредопределенныхДанных(Знач ЗаписьXML, Знач СтруктураПредопределенныхДанных, Знач ТекОбъектОбмена)
	
	Если ТипЗнч(ТекОбъектОбмена) = Тип("УдалениеОбъекта") Тогда
		Возврат;
	ИначеЕсли Метаданные.Справочники.Содержит(Метаданные.НайтиПоТипу(ТипЗнч(ТекОбъектОбмена))) ИЛИ Метаданные.Документы.Содержит(Метаданные.НайтиПоТипу(ТипЗнч(ТекОбъектОбмена))) Тогда
		Если СтруктураПредопределенныхДанных.МассивПредопределенныхРеквизитовВТЧ.Количество() > 0 ИЛИ СтруктураПредопределенныхДанных.СтруктураПредопределенныхРеквизитов.Количество() > 0 Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента("PredefinedData");
			СериализаторXDTO.ЗаписатьXML(ЗаписьXML, СтруктураПредопределенныхДанных, НазначениеТипаXML.Явное);
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	Иначе
		Если СтруктураПредопределенныхДанных.Количество() > 0 Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента("PredefinedData");
			СериализаторXDTO.ЗаписатьXML(ЗаписьXML, СтруктураПредопределенныхДанных, НазначениеТипаXML.Явное);
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьКартинкуИзВыгрузки(Знач КодУзла, Знач ТекОбъектОбмена)
	
	Если ТипЗнч(ТекОбъектОбмена) = Тип("СправочникОбъект.ТоварыМП") Тогда
		Если КодУзла <> "001" И Метаданные.НайтиПоТипу(ТипЗнч(ТекОбъектОбмена.Ссылка)).Имя = Метаданные.Справочники.ТоварыМП.Имя Тогда
			Если ТекОбъектОбмена.Картинка = Null Тогда
				Возврат;
			КонецЕсли;
			ТекОбъектОбмена.КартинкаСсылка = "";
			ТекОбъектОбмена.Картинка = Новый ХранилищеЗначения(Неопределено, Новый СжатиеДанных(9));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаИзмененныхДанных(Узел)
	
	ПланыОбмена.УдалитьРегистрациюИзменений(Узел, Узел.НомерОтправленного);
	
КонецПроцедуры

Функция ЭкспортXMLСхемыКонфигурации() Экспорт
	
	ВыгружаемыеПакеты = Новый Массив;
	ВыгружаемыеПакеты.Добавить("http://v8.1c.ru/8.1/data/enterprise/current-config");
	
	НаборСхем = ФабрикаXDTO.ЭкспортСхемыXML(ВыгружаемыеПакеты);
	
	Схема = НаборСхем.Получить(0);
	Схема.ОбновитьЭлементDOM();
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьXMLСтрока = Новый ЗаписьXML;
	ЗаписьXMLСтрока.УстановитьСтроку();
	ЗаписьXMLФайл = Новый ЗаписьXML;
	ЗаписьDOM.Записать(Схема.ДокументDOM, ЗаписьXMLСтрока);
	ЗаписьXMLФайл.УстановитьСтроку();
	ЗаписьXMLФайл.ЗаписатьБезОбработки(ЗаписьXMLСтрока.Закрыть());
	СхемаВСтроку = ЗаписьXMLФайл.Закрыть();
	
	Возврат СхемаВСтроку;
	
КонецФункции

Процедура СформироватьИЗаписатьПакет(ЗаписьСообщения, ЗаписьXML, Узел)
	
	ЗаписьСообщения.ЗакончитьЗапись();
	НомерСообщенияОбмена = Узел.НомерОтправленного;
	Хранилище = Новый ХранилищеЗначения(ЗаписьXML.Закрыть(), Новый СжатиеДанных(9));
	Версия = СинхронизацияМПУНФ.ПолучитьТекущуюВерсиюПриложения();
	
	РегистрыСведений.СформированныеСообщенияДляОтправкиМП.ДобавитьСообщение(НомерСообщенияОбмена, Хранилище, Узел.Код, Версия);
	
КонецПроцедуры

#КонецОбласти
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Сервис доставки".
// ОбщийМодуль.СервисДоставкиВызовСервера.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Имя формы выбора метаданных.
//
// Параметры:
//  ИмяОпределяемогоТипа - Строка - наименование определяемого типа.
// 
// Возвращаемое значение:
//  Строка - имя формы выбора.
//
Функция ИмяФормыВыбораПоОпределяемомуТипу(ИмяОпределяемогоТипа) Экспорт
	
	ОпределяемыйТип = Метаданные.ОпределяемыеТипы.Найти(ИмяОпределяемогоТипа);
	Если ОпределяемыйТип <> Неопределено Тогда
		
		ИмяФормы = "";
		Тип = ОпределяемыйТип.Тип.Типы()[0];
		Менеджер = Метаданные.НайтиПоТипу(Тип);
		Если Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяФормы = "Справочник." + Менеджер.Имя + ".ФормаВыбора";
		ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяФормы = "Документ." + Менеджер.Имя + ".ФормаВыбора";
		КонецЕсли;
		
		Возврат ИмяФормы;
	КонецЕсли;
	
КонецФункции

// Имя формы выбора метаданных.
//
// Параметры:
//  ИмяОпределяемогоТипа - Строка - наименование определяемого типа.
// 
// Возвращаемое значение:
//  Строка - имя формы выбора.
//
Функция ИмяФормыОбъектаПоОпределяемомуТипу(ИмяОпределяемогоТипа) Экспорт
	
	ОпределяемыйТип = Метаданные.ОпределяемыеТипы.Найти(ИмяОпределяемогоТипа);
	Если ОпределяемыйТип <> Неопределено Тогда
		
		ИмяФормы = "";
		Тип = ОпределяемыйТип.Тип.Типы()[0];
		Менеджер = Метаданные.НайтиПоТипу(Тип);
		Если Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяФормы = "Справочник." + Менеджер.Имя + ".ФормаОбъекта";
		ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяФормы = "Документ." + Менеджер.Имя + ".ФормаОбъекта";
		КонецЕсли;
		
		Возврат ИмяФормы;
	КонецЕсли;
	
КонецФункции

Функция ПараметрыЗаказаНаДоставкуПоДокументуОснованию(ТипГрузоперевозки, Основание = Неопределено) Экспорт
	
	Основания = Новый СписокЗначений();
	
	Если Основание <> Неопределено Тогда
		Основания.Добавить(Основание);
	КонецЕсли;
	
	Возврат ПараметрыЗаказаНаДоставку(ТипГрузоперевозки, Основания);
	
КонецФункции

Функция ПараметрыЗаказаНаДоставкуПоДокументамОснованиям(ТипГрузоперевозки, Основания) Экспорт
	
	Возврат ПараметрыЗаказаНаДоставку(ТипГрузоперевозки, Основания);
	
КонецФункции

Функция ОрганизацияПоУмолчанию(ТипГрузоперевозки) Экспорт
	
	ОрганизацияБизнесСетиСсылка = СервисДоставки.ПараметрыПоУмолчанию(ТипГрузоперевозки, "ОрганизацияБизнесСети").ОрганизацияБизнесСети;
		
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) 
		ИЛИ Не ОрганизацияПодключена(ОрганизацияБизнесСетиСсылка) Тогда
		
		ОрганизацияБизнесСетиСсылка = Неопределено;
		ДанныеОрганизаций = БизнесСеть.ПодключенныеОрганизации();
		
		Если ДанныеОрганизаций.Количество() Тогда
			
			Если ДанныеОрганизаций.Количество() = 1 Тогда
				ОрганизацияБизнесСетиСсылка = ДанныеОрганизаций[0].Организация;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОрганизацияБизнесСетиСсылка;
	
КонецФункции

Функция ОрганизацияПодключена(Организация) Экспорт
	
	Возврат СервисДоставкиСлужебный.ОрганизацияПодключена(Организация)
	
КонецФункции

Функция СохранитьНастройкиФормыСпискаЗаказов(Настройки) Экспорт
	
	КлючНастроекФормы = "Обработка.СервисДоставки.Форма.СписокЗаказов/ТекущиеДанные";
	ХранилищеСистемныхНастроек.Сохранить(КлючНастроекФормы,,Настройки);
	
	Возврат Настройки;
	
КонецФункции

Функция КонтактнаяИнформацияПоПредставлению(Представление, ТипКонтактнойИнформацииИмя) Экспорт
	
	Если ТипКонтактнойИнформацииИмя = "Телефон" Тогда
		ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Иначе
		ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес;
	КонецЕсли;
	
	Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Представление, ТипКонтактнойИнформации);
	
КонецФункции

Функция АдресСДополнительнымиПолями(Тип, Адрес) Экспорт
	
	Если Тип <> Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат Адрес;
	КонецЕсли;
	
	Если Адрес = "" Тогда
		СведенияОбАдресе = РаботаСАдресами.СведенияОбАдресе(Адрес);
		СведенияОбАдресе.ТипАдреса = РаботаСАдресамиКлиентСервер.АдминистративноТерриториальныйАдрес();
		Адрес = РаботаСАдресами.ПоляАдресаВJSON(СведенияОбАдресе);
	КонецЕсли;
	
	ПараметрыАдреса = СервисДоставки.ЗначениеИзСтрокиJSON(Адрес);
	
	Если ПараметрыАдреса.addressType = ""
		ИЛИ ПараметрыАдреса.addressType = "ВСвободнойФорме" Тогда
		ПараметрыАдреса.addressType = РаботаСАдресамиКлиентСервер.АдминистративноТерриториальныйАдрес();
	КонецЕсли;
	
	ДополнительныеПараметры = Новый ТаблицаЗначений();
	ДополнительныеПараметры.Колонки.Добавить("Тип", Новый ОписаниеТипов("Строка"));
	ДополнительныеПараметры.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка"));
	НоваяСтрока = ДополнительныеПараметры.Добавить();
	НоваяСтрока.Тип = НСтр("ru='Квартира'");
	НоваяСтрока = ДополнительныеПараметры.Добавить();
	НоваяСтрока.Тип = НСтр("ru='Этаж'");
	НоваяСтрока = ДополнительныеПараметры.Добавить();
	НоваяСтрока.Тип = НСтр("ru='Подъезд'");
	НоваяСтрока = ДополнительныеПараметры.Добавить();
	НоваяСтрока.Тип = НСтр("ru='Код домофона'");
	
	Помещения = Новый Массив();
	Если ПараметрыАдреса.Свойство("apartments") Тогда
		Помещения = ПараметрыАдреса.apartments;
	КонецЕсли;
	
	МассивУдаления = Новый Массив();
	Ид = Помещения.Количество()-1;
	Пока Ид >= 0 Цикл
		СтрокаПараметра = ДополнительныеПараметры.Найти(Помещения[Ид].type, "Тип");
		Если СтрокаПараметра <> Неопределено Тогда
			СтрокаПараметра.Значение = Помещения[Ид].number;
			МассивУдаления.Добавить(Ид);
		КонецЕсли;
		Ид = Ид - 1;
	КонецЦикла;
	
	Для Каждого ТекИндекс Из МассивУдаления Цикл
		Помещения.Удалить(ТекИндекс);
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ДополнительныеПараметры Цикл
		Параметр = Новый Структура("type,number", ТекСтрока.Тип, ТекСтрока.Значение);
		Помещения.Добавить(Параметр);
	КонецЦикла;
	
	ПараметрыАдреса.Вставить("apartments", Помещения);
	
	Возврат СервисДоставки.ЗначениеВСтрокуJSON(ПараметрыАдреса);
	
КонецФункции

Процедура ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису) Экспорт
	
	СервисДоставки.ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису);
	
КонецПроцедуры

Процедура ПроверитьНаличиеШаблонаДоставкиПоОснованию(ИмяФормы, ПараметрыЗаказа) Экспорт
	
	СервисДоставки.ПроверитьНаличиеШаблонаДоставкиПоОснованию(ИмяФормы, ПараметрыЗаказа);
	
КонецПроцедуры

// Получить доступные типы грузоперевозки
//
// Возвращаемое значение:
//  Массив - список доступных типов грузоперевозки.
//
Функция ДоступныеСервисыДоставки() Экспорт
	
	ДоступныеСервисы = Новый Массив();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСервис1СДоставка") = Истина Тогда
		ДоступныеСервисы.Добавить(1);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСервис1СКурьер") = Истина Тогда
		ДоступныеСервисы.Добавить(2);
	КонецЕсли;
	
	Возврат ДоступныеСервисы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыЗаказаНаДоставку(ТипГрузоперевозки, Основания = Неопределено)
	
	ПараметрыЗаказа = СервисДоставки.НовыйПараметрыЗаказаНаДоставку();
	ПараметрыЗаказа.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если ЗначениеЗаполнено(Основания) Тогда
		ПараметрыЗаказа.ДокументОснование = Основания[0].Значение;
		ПараметрыЗаказа.ДокументыОснования = Основания;
		СервисДоставкиПереопределяемый.ЗаполнитьПараметрыЗаказаНаДоставку(ПараметрыЗаказа);
	КонецЕсли;
	
	ДобавитьПараметрыПоУмолчанию(ПараметрыЗаказа);
	
	ПараметрыЗаказа.Вставить("ТоварныйСостав", ОбщегоНазначения.ТаблицаЗначенийВМассив(ПараметрыЗаказа.Товары));
	ПараметрыЗаказа.Удалить("Товары");
	ПараметрыЗаказа.Удалить("Услуги");
	ПараметрыЗаказа.Удалить("ДополнительныеУслуги");
		
	Возврат ПараметрыЗаказа;
	
КонецФункции

Процедура ДобавитьПараметрыПоУмолчанию(Параметры)
	
	ДанныеПоУмолчанию = СервисДоставки.ПараметрыПоУмолчанию(Параметры.ТипГрузоперевозки);
	
	Если Не Параметры.Свойство("ОрганизацияБизнесСетиСсылка") Тогда
		Параметры.Вставить("ОрганизацияБизнесСетиСсылка");
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(Параметры.ОрганизацияБизнесСетиСсылка) 
		И НЕ БизнесСеть.ОрганизацияПодключена(Параметры.ОрганизацияБизнесСетиСсылка))
		ИЛИ Не ЗначениеЗаполнено(Параметры.ОрганизацияБизнесСетиСсылка) Тогда
		
		Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияПоУмолчанию(Параметры.ТипГрузоперевозки));
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяДоставки.ОбедПо) Тогда
		Параметры.ВремяДоставки.ОбедПо = ДанныеПоУмолчанию.ВремяДоставкиОбедПо;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяДоставки.ОбедС) Тогда
		Параметры.ВремяДоставки.ОбедС = ДанныеПоУмолчанию.ВремяДоставкиОбедС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяДоставки.По) Тогда
		Параметры.ВремяДоставки.По = ДанныеПоУмолчанию.ВремяДоставкиПо;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяДоставки.С) Тогда
		Параметры.ВремяДоставки.С = ДанныеПоУмолчанию.ВремяДоставкиС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяОтгрузки.ОбедПо) Тогда
		Параметры.ВремяОтгрузки.ОбедПо = ДанныеПоУмолчанию.ВремяОтгрузкиОбедПо;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяОтгрузки.ОбедС) Тогда
		Параметры.ВремяОтгрузки.ОбедС = ДанныеПоУмолчанию.ВремяОтгрузкиОбедС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяОтгрузки.По) Тогда
		Параметры.ВремяОтгрузки.По = ДанныеПоУмолчанию.ВремяОтгрузкиПо;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяОтгрузки.С) Тогда
		Параметры.ВремяОтгрузки.С = ДанныеПоУмолчанию.ВремяОтгрузкиС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ВремяОтгрузки.С) Тогда
		Параметры.ВремяОтгрузки.С = ДанныеПоУмолчанию.ВремяОтгрузкиС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.СпособДоставки) Тогда
		Параметры.СпособДоставки = ДанныеПоУмолчанию.СпособДоставки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.СпособОтгрузки) Тогда
		Параметры.СпособОтгрузки = ДанныеПоУмолчанию.СпособОтгрузки;
	КонецЕсли;
	
	ПараметрыУчастника = Параметры.Отправитель;
	Если ПараметрыУчастника.Контрагент.ЭтоОрганизация Тогда
		
		Если ДанныеПоУмолчанию.СпособОпределенияКонтактногоЛица = 1 Тогда
			ПараметрыУчастника.КонтактноеЛицо.Ссылка = Неопределено;
			ПараметрыУчастника.КонтактноеЛицо.Наименование = "";
			ПараметрыУчастника.КонтактноеЛицо.Телефон.Представление = "";
			ПараметрыУчастника.КонтактноеЛицо.Телефон.Значение = "";
		ИначеЕсли ДанныеПоУмолчанию.СпособОпределенияКонтактногоЛица = 2 
			И ЗначениеЗаполнено(ДанныеПоУмолчанию.КонтактноеЛицо) Тогда
			Если ТипЗнч(ДанныеПоУмолчанию.КонтактноеЛицо) = Тип("Строка") Тогда
				ПараметрыУчастника.КонтактноеЛицо.Наименование = ДанныеПоУмолчанию.КонтактноеЛицо;
			Иначе
				ПараметрыУчастника.КонтактноеЛицо.Ссылка = ДанныеПоУмолчанию.КонтактноеЛицо;
				СервисДоставкиПереопределяемый.ЗаполнитьПараметрыКонтактногоЛица(ПараметрыУчастника.КонтактноеЛицо);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыУчастника = Параметры.Получатель;
	Если ПараметрыУчастника.Контрагент.ЭтоОрганизация Тогда
		
		Если ДанныеПоУмолчанию.СпособОпределенияКонтактногоЛица = 1 Тогда
			ПараметрыУчастника.КонтактноеЛицо.Ссылка = Неопределено;
			ПараметрыУчастника.КонтактноеЛицо.Наименование = "";
			ПараметрыУчастника.КонтактноеЛицо.Телефон.Представление = "";
			ПараметрыУчастника.КонтактноеЛицо.Телефон.Значение = "";
		ИначеЕсли ДанныеПоУмолчанию.СпособОпределенияКонтактногоЛица = 2 
			И ЗначениеЗаполнено(ДанныеПоУмолчанию.КонтактноеЛицо) Тогда
			Если ТипЗнч(ДанныеПоУмолчанию.КонтактноеЛицо) = Тип("Строка") Тогда
				ПараметрыУчастника.КонтактноеЛицо.Наименование = ДанныеПоУмолчанию.КонтактноеЛицо;
			Иначе
				ПараметрыУчастника.КонтактноеЛицо.Ссылка = ДанныеПоУмолчанию.КонтактноеЛицо;
				СервисДоставкиПереопределяемый.ЗаполнитьПараметрыКонтактногоЛица(ПараметрыУчастника.КонтактноеЛицо);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Товары = Параметры.Товары;
	ВсегоВес = 0;
	ВсегоОбъем = 0;
	
	Для Каждого ТекСтрока Из Товары Цикл
		
		Если ТекСтрока.Вес = 0 Тогда
			ТекСтрока.Вес = ДанныеПоУмолчанию.ВесЕдиницыТовара;
		КонецЕсли;
		
		Если ТекСтрока.Объем = 0 Тогда
		
			Если ТекСтрока.Длина = 0 Тогда
				ТекСтрока.Длина = ДанныеПоУмолчанию.ДлинаЕдиницыТовара;
			КонецЕсли;
			
			Если ТекСтрока.Ширина = 0 Тогда
				ТекСтрока.Ширина = ДанныеПоУмолчанию.ШиринаЕдиницыТовара;
			КонецЕсли;
			
			Если ТекСтрока.Высота = 0 Тогда
				ТекСтрока.Высота = ДанныеПоУмолчанию.ВысотаЕдиницыТовара;
			КонецЕсли;
			
		ИначеЕсли ТекСтрока.Длина*ТекСтрока.Ширина*ТекСтрока.Высота = 0 Тогда
			
			Если ТекСтрока.Длина <> 0 Тогда
				
				Если ТекСтрока.Ширина <> 0 Тогда
					ТекСтрока.Высота = Окр(ТекСтрока.Объем/(ТекСтрока.Длина*ТекСтрока.Ширина), 0);
				ИначеЕсли ТекСтрока.Высота <> 0 Тогда
					ТекСтрока.Ширина = Окр(ТекСтрока.Объем/(ТекСтрока.Длина*ТекСтрока.Высота), 0);
				ИначеЕсли ДанныеПоУмолчанию.ШиринаЕдиницыТовара <> 0 Тогда
					ТекСтрока.Ширина = ДанныеПоУмолчанию.ШиринаЕдиницыТовара;
					ТекСтрока.Высота = Окр(ТекСтрока.Объем/(ТекСтрока.Длина*ТекСтрока.Ширина), 0);
				ИначеЕсли ДанныеПоУмолчанию.ВысотаЕдиницыТовара <> 0 Тогда
					ТекСтрока.Высота = ДанныеПоУмолчанию.ВысотаЕдиницыТовара;
					ТекСтрока.Ширина = Окр(ТекСтрока.Объем/(ТекСтрока.Длина*ТекСтрока.Высота), 0);
				Иначе
					ТекСтрока.Ширина = Окр(Sqrt(ТекСтрока.Объем/ТекСтрока.Длина), 0);
					ТекСтрока.Высота = Окр(Sqrt(ТекСтрока.Объем/ТекСтрока.Длина), 0);
				КонецЕсли;
				
			ИначеЕсли ТекСтрока.Ширина <> 0 Тогда
				
				Если ТекСтрока.Высота <> 0 Тогда
					ТекСтрока.Длина = Окр(ТекСтрока.Объем/(ТекСтрока.Ширина*ТекСтрока.Высота), 0);
				ИначеЕсли ДанныеПоУмолчанию.ДлинаЕдиницыТовара <> 0 Тогда
					ТекСтрока.Длина = ДанныеПоУмолчанию.ДлинаЕдиницыТовара;
					ТекСтрока.Высота = Окр(ТекСтрока.Объем/(ТекСтрока.Ширина*ТекСтрока.Длина), 0);
				ИначеЕсли ДанныеПоУмолчанию.ВысотаЕдиницыТовара <> 0 Тогда
					ТекСтрока.Высота = ДанныеПоУмолчанию.ВысотаЕдиницыТовара;
					ТекСтрока.Длина = Окр(ТекСтрока.Объем/(ТекСтрока.Ширина*ТекСтрока.Высота), 0);
				Иначе
					ТекСтрока.Длина = Окр(Sqrt(ТекСтрока.Объем/ТекСтрока.Ширина), 0);
					ТекСтрока.Высота = Окр(Sqrt(ТекСтрока.Объем/ТекСтрока.Ширина), 0);
				КонецЕсли;
				
			ИначеЕсли ТекСтрока.Высота <> 0 Тогда
				
				Если ДанныеПоУмолчанию.ДлинаЕдиницыТовара <> 0 Тогда
					ТекСтрока.Длина = ДанныеПоУмолчанию.ДлинаЕдиницыТовара;
					ТекСтрока.Ширина = Окр(ТекСтрока.Объем/(ТекСтрока.Высота*ТекСтрока.Длина), 0);
				ИначеЕсли ДанныеПоУмолчанию.ШиринаЕдиницыТовара <> 0 Тогда
					ТекСтрока.Ширина = ДанныеПоУмолчанию.ШиринаЕдиницыТовара;
					ТекСтрока.Длина = Окр(ТекСтрока.Объем/(ТекСтрока.Высота*ТекСтрока.Ширина), 0);
				Иначе
					ТекСтрока.Длина = Окр(Sqrt(ТекСтрока.Объем/ТекСтрока.Высота), 0);
					ТекСтрока.Ширина = Окр(Sqrt(ТекСтрока.Объем/ТекСтрока.Высота), 0);
				КонецЕсли;
			Иначе
				ТекСтрока.Длина = ДанныеПоУмолчанию.ДлинаЕдиницыТовара;
				ТекСтрока.Ширина = ДанныеПоУмолчанию.ШиринаЕдиницыТовара;
				ТекСтрока.Высота = ДанныеПоУмолчанию.ВысотаЕдиницыТовара;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекСтрока.Объем = Окр(ТекСтрока.Длина*ТекСтрока.Ширина*ТекСтрока.Высота/1000000, 3);
		
		ВсегоВес = ВсегоВес + ТекСтрока.Вес * ТекСтрока.Количество;
		ВсегоОбъем = ВсегоОбъем + ТекСтрока.Объем * ТекСтрока.Количество;
		
	КонецЦикла;
	
	Параметры.Груз.КоличествоГрузовыхМест = ?(Параметры.Груз.КоличествоГрузовыхМест = 0, 1, Параметры.Груз.КоличествоГрузовыхМест);
	
	МаксимальныйВес = ?(Параметры.Груз.МаксимальныйВес = 0, ДанныеПоУмолчанию.ВесГрузовогоМеста, Параметры.Груз.МаксимальныйВес);
	
	Если Параметры.Груз.КоличествоГрузовыхМест = 1 Тогда
		Если Параметры.Груз.Вес = 0 Тогда
			Параметры.Груз.Вес = ?(ВсегоВес > МаксимальныйВес, ВсегоВес, МаксимальныйВес);
			Параметры.Груз.МаксимальныйВес = Параметры.Груз.Вес;
		КонецЕсли;
	Иначе
		Если Параметры.Груз.Вес = 0 Тогда
			Параметры.Груз.Вес = ?(ВсегоВес > МаксимальныйВес*Параметры.Груз.КоличествоГрузовыхМест, ВсегоВес, МаксимальныйВес*Параметры.Груз.КоличествоГрузовыхМест);
			Параметры.Груз.МаксимальныйВес = МаксимальныйВес;
		ИначеЕсли Параметры.Груз.МаксимальныйВес = 0 Тогда
			Параметры.Груз.МаксимальныйВес = МаксимальныйВес;
		КонецЕсли
	КонецЕсли;
	
	Если Параметры.Груз.КоличествоГрузовыхМест = 1 Тогда
		
		Если Параметры.Груз.Объем = 0
			И ВсегоОбъем = 0 Тогда
			
			Если Параметры.Груз.МаксимальнаяДлина = 0 Тогда
				Параметры.Груз.МаксимальнаяДлина = ДанныеПоУмолчанию.ДлинаГрузовогоМеста;
			КонецЕсли;
			
			Если Параметры.Груз.МаксимальнаяШирина = 0 Тогда
				Параметры.Груз.МаксимальнаяШирина = ДанныеПоУмолчанию.ШиринаГрузовогоМеста;
			КонецЕсли;
			
			Если Параметры.Груз.МаксимальнаяВысота = 0 Тогда
				Параметры.Груз.МаксимальнаяВысота = ДанныеПоУмолчанию.ВысотаГрузовогоМеста;
			КонецЕсли;
			
		ИначеЕсли Параметры.Груз.МаксимальнаяДлина*Параметры.Груз.МаксимальнаяШирина*Параметры.Груз.МаксимальнаяВысота = 0 Тогда
			
			ОбъемДляРасчетов = ?(Параметры.Груз.Объем = 0, ВсегоОбъем, Параметры.Груз.Объем);
			
			Если Параметры.Груз.МаксимальнаяДлина <> 0 Тогда
				
				Если Параметры.Груз.МаксимальнаяШирина <> 0 Тогда
					Параметры.Груз.МаксимальнаяВысота = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяДлина*Параметры.Груз.МаксимальнаяШирина), 0);
				ИначеЕсли Параметры.Груз.МаксимальнаяВысота <> 0 Тогда
					Параметры.Груз.МаксимальнаяШирина = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяДлина*Параметры.Груз.МаксимальнаяВысота), 0);
				ИначеЕсли ДанныеПоУмолчанию.ШиринаГрузовогоМеста <> 0 Тогда
					Параметры.Груз.МаксимальнаяШирина = ДанныеПоУмолчанию.ШиринаГрузовогоМеста;
					Параметры.Груз.МаксимальнаяВысота = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяДлина*Параметры.Груз.МаксимальнаяШирина), 0);
				ИначеЕсли ДанныеПоУмолчанию.ВысотаГрузовогоМеста <> 0 Тогда
					Параметры.Груз.МаксимальнаяВысота = ДанныеПоУмолчанию.ВысотаГрузовогоМеста;
					Параметры.Груз.МаксимальнаяШирина = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяДлина*Параметры.Груз.МаксимальнаяВысота), 0);
				Иначе
					Параметры.Груз.МаксимальнаяШирина = Окр(Sqrt(ОбъемДляРасчетов/Параметры.Груз.МаксимальнаяДлина), 0);
					Параметры.Груз.МаксимальнаяВысота = Окр(Sqrt(ОбъемДляРасчетов/Параметры.Груз.МаксимальнаяДлина), 0);
				КонецЕсли;
				
			ИначеЕсли Параметры.Груз.МаксимальнаяШирина <> 0 Тогда
				
				Если Параметры.Груз.МаксимальнаяВысота <> 0 Тогда
					Параметры.Груз.МаксимальнаяДлина = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяШирина*Параметры.Груз.МаксимальнаяВысота), 0);
				ИначеЕсли ДанныеПоУмолчанию.ДлинаГрузовогоМеста <> 0 Тогда
					Параметры.Груз.МаксимальнаяДлина = ДанныеПоУмолчанию.ДлинаГрузовогоМеста;
					Параметры.Груз.МаксимальнаяВысота = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяШирина*Параметры.Груз.МаксимальнаяДлина), 0);
				ИначеЕсли ДанныеПоУмолчанию.ВысотаГрузовогоМеста <> 0 Тогда
					Параметры.Груз.МаксимальнаяВысота = ДанныеПоУмолчанию.ВысотаГрузовогоМеста;
					Параметры.Груз.МаксимальнаяДлина = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяШирина*Параметры.Груз.МаксимальнаяВысота), 0);
				Иначе
					Параметры.Груз.МаксимальнаяДлина = Окр(Sqrt(ОбъемДляРасчетов/Параметры.Груз.МаксимальнаяШирина), 0);
					Параметры.Груз.МаксимальнаяВысота = Окр(Sqrt(ОбъемДляРасчетов/Параметры.Груз.МаксимальнаяШирина), 0);
				КонецЕсли;
				
			ИначеЕсли Параметры.Груз.МаксимальнаяВысота <> 0 Тогда
				
				Если ДанныеПоУмолчанию.ДлинаГрузовогоМеста <> 0 Тогда
					Параметры.Груз.МаксимальнаяДлина = ДанныеПоУмолчанию.ДлинаГрузовогоМеста;
					Параметры.Груз.МаксимальнаяШирина = Окр(ОбъемДляРасчетов/(Параметры.Груз.МаксимальнаяВысота*Параметры.Груз.МаксимальнаяДлина), 0);
				ИначеЕсли ДанныеПоУмолчанию.ШиринаГрузовогоМеста <> 0 Тогда
					Параметры.Груз.МаксимальнаяШирина = ДанныеПоУмолчанию.ШиринаГрузовогоМеста;
					Параметры.Груз.МаксимальнаяДлина = Окр(Параметры.Груз.МаксимальнаяОбъем/(Параметры.Груз.МаксимальнаяВысота*Параметры.Груз.МаксимальнаяШирина), 0);
				Иначе
					Параметры.Груз.МаксимальнаяДлина = Окр(Sqrt(ОбъемДляРасчетов/Параметры.Груз.МаксимальнаяВысота), 0);
					Параметры.Груз.МаксимальнаяШирина = Окр(Sqrt(ОбъемДляРасчетов/Параметры.Груз.МаксимальнаяВысота), 0);
				КонецЕсли;
			Иначе
				Параметры.Груз.МаксимальнаяДлина = ДанныеПоУмолчанию.ДлинаГрузовогоМеста;
				Параметры.Груз.МаксимальнаяШирина = ДанныеПоУмолчанию.ШиринаГрузовогоМеста;
				Параметры.Груз.МаксимальнаяВысота = ДанныеПоУмолчанию.ВысотаГрузовогоМеста;
			КонецЕсли;
			
		КонецЕсли;
		
		Объем = Параметры.Груз.МаксимальнаяДлина * Параметры.Груз.МаксимальнаяШирина * Параметры.Груз.МаксимальнаяВысота/1000000;
		
	Иначе
		
		Если Параметры.Груз.МаксимальнаяДлина = 0 Тогда
			Параметры.Груз.МаксимальнаяДлина = ДанныеПоУмолчанию.ДлинаГрузовогоМеста;
		КонецЕсли;
		
		Если Параметры.Груз.МаксимальнаяШирина = 0 Тогда
			Параметры.Груз.МаксимальнаяШирина = ДанныеПоУмолчанию.ШиринаГрузовогоМеста;
		КонецЕсли;
		
		Если Параметры.Груз.МаксимальнаяВысота = 0 Тогда
			Параметры.Груз.МаксимальнаяВысота = ДанныеПоУмолчанию.ВысотаГрузовогоМеста;
		КонецЕсли;
		
		ОбъемГрузовогоМестаПоУмолчанию = ДанныеПоУмолчанию.ДлинаГрузовогоМеста * ДанныеПоУмолчанию.ШиринаГрузовогоМеста * ДанныеПоУмолчанию.ВысотаГрузовогоМеста/1000000;
		
		Объем = Параметры.Груз.Объем;
		Если Объем = 0 Тогда
			Объем = Макс(ВсегоОбъем, ОбъемГрузовогоМестаПоУмолчанию*Параметры.Груз.КоличествоГрузовыхМест);
		КонецЕсли
		
	КонецЕсли;
	
	Если Объем > 0 Тогда
		Параметры.Груз.Объем = ?(Окр(Объем, 3) = 0, 0.001, Окр(Объем, 3));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

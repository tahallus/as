#Область ПрограммныйИнтерфейс

// Формирует временные таблицы: 
//	ВТПревышениеПредельнойВеличиныДоходаХХХ, где ХХХ принимает следующие значения: ПФР, ФСС, ФОМС
//		в зависимости от значения параметра ВидСтрахования
//
// ВТПревышениеПредельнойВеличиныДоходаХХХ содержит следующие поля
//		ФизическоеЛицо
//		Организация
//		Период - дата, начало месяца получения дохода
//		ВидТарифаСтраховыхВзносов
//		ЭтоТрудовойДоговор - трудовой/ГПХ
//		ВидДохода - Вид дохода с точки зрения страховых взносов
//		СуммаПревысившаяПредел
//
// Параметры
//  НачалоПериода
//  ОкончаниеПериода
//  МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещены сформированные временные таблицы,
//		содержит вр. таблицу ВТРасширенныеСведенияОДоходах с полями
//			ФизическоеЛицо
//			Организация
//			Период - дата, начало месяца получения дохода
//			ВидТарифаСтраховыхВзносов - применяемый тариф страховых взносов
//			ЭтоТрудовойДоговор - трудовой/ГПХ
//			ВидДохода - Вид дохода с точки зрения страховых взносов
//			БазаПФР
//			БазаФСС
//			БазаФОМС
//
Процедура СформироватьВТПревышениеПредельнойВеличиныДохода(НачалоПериода, ОкончаниеПериода, МенеджерВременныхТаблиц) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Формируем список месяцев, в разрезе которых собираем данные
	ИзмеренияДаты = Новый ТаблицаЗначений();
	ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты()));
	// конец месяца налогового периода
	НачалоМесяца = НачалоГода(НачалоПериода);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачалоМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериодыРасчетаПревышения";
	ИзмеренияДаты.Добавить().Период = НачалоМесяца;
	// прибавим остальные месяцы
	Пока НачалоМесяца < НачалоМесяца(ОкончаниеПериода) Цикл
		НачалоМесяца = КонецМесяца(НачалоМесяца) + 1;
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачалоМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
		ИзмеренияДаты.Добавить().Период = НачалоМесяца;
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// получаем временные таблицы, используя общие алгоритмы
	ПолучитьТаблицуСрезаПоследних(Запрос.МенеджерВременныхТаблиц, "ПредельнаяВеличинаБазыСтраховыхВзносов", ИзмеренияДаты, , Истина);

	ТекстЗапроса =
 	"ВЫБРАТЬ
 	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	СведенияОДоходах.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
 	|	СведенияОДоходах.Организация КАК Организация,
 	|	СведенияОДоходах.Период КАК Период,
 	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
 	|	СведенияОДоходах.ЭтоТрудовойДоговор,
 	|	СведенияОДоходах.ВидДохода,
 	|	СУММА(СведенияОДоходах.БазаПФР) КАК ЗаМесяцПФР,
 	|	СУММА(СведенияОДоходах.БазаФСС) КАК ЗаМесяцФСС,
 	|	СУММА(СведенияОДоходах.БазаФОМС) КАК ЗаМесяцФОМС
 	|ПОМЕСТИТЬ ВТБазаЗаМесяц
 	|ИЗ
 	|	ВТСведенияОДоходах КАК СведенияОДоходах
 	|
 	|СГРУППИРОВАТЬ ПО
 	|	СведенияОДоходах.ФизическоеЛицо,
 	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
 	|	СведенияОДоходах.Организация,
 	|	СведенияОДоходах.ЭтоТрудовойДоговор,
 	|	СведенияОДоходах.Период,
 	|	СведенияОДоходах.ВидДохода,
 	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ
 	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	СведенияОДоходах.Организация КАК Организация,
 	|	СведенияОДоходах.Период КАК Период,
 	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяцПФР) КАК ЗаМесяцПФР,
 	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяцФСС) КАК ЗаМесяцФСС,
 	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяцФОМС) КАК ЗаМесяцФОМС
 	|ПОМЕСТИТЬ ВТМаксимальнаяБазаЗаМесяц
 	|ИЗ
 	|	ВТБазаЗаМесяц КАК СведенияОДоходах
 	|
 	|СГРУППИРОВАТЬ ПО
 	|	СведенияОДоходах.ФизическоеЛицо,
 	|	СведенияОДоходах.Организация,
 	|	СведенияОДоходах.Период
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ
 	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	СведенияОДоходах.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
 	|	СведенияОДоходах.Организация КАК Организация,
 	|	Периоды.Период КАК Период,
 	|	СУММА(СведенияОДоходах.БазаПФР) КАК ЗаГодПФР,
 	|	СУММА(СведенияОДоходах.БазаФСС) КАК ЗаГодФСС,
 	|	СУММА(СведенияОДоходах.БазаФОМС) КАК ЗаГодФОМС,
 	|	СУММА(ВЫБОР
 	|			КОГДА Периоды.Период = СведенияОДоходах.Период
 	|				ТОГДА СведенияОДоходах.БазаПФР
 	|			ИНАЧЕ 0
 	|		КОНЕЦ) КАК ЗаМесяцПФР,
 	|	СУММА(ВЫБОР
 	|			КОГДА Периоды.Период = СведенияОДоходах.Период
 	|				ТОГДА СведенияОДоходах.БазаФСС
 	|			ИНАЧЕ 0
 	|		КОНЕЦ) КАК ЗаМесяцФСС,
 	|	СУММА(ВЫБОР
 	|			КОГДА Периоды.Период = СведенияОДоходах.Период
 	|				ТОГДА СведенияОДоходах.БазаФОМС
 	|			ИНАЧЕ 0
 	|		КОНЕЦ) КАК ЗаМесяцФОМС
 	|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
 	|ИЗ
 	|	ВТПериодыРасчетаПревышения КАК Периоды
 	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СведенияОДоходах
 	|		ПО (СведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
 	|
 	|СГРУППИРОВАТЬ ПО
 	|	СведенияОДоходах.ФизическоеЛицо,
 	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
 	|	СведенияОДоходах.Организация,
 	|	Периоды.Период
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ
 	|	ОблагаемаяБаза.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	ОблагаемаяБаза.НачислятьНакопительнуюЧасть,
 	|	ОблагаемаяБаза.Организация КАК Организация,
 	|	ОблагаемаяБаза.Период КАК Период,
 	|	ВЫБОР
 	|		КОГДА ОблагаемаяБаза.ЗаГодПФР - Предел.РазмерПФР >= 0
 	|			ТОГДА ОблагаемаяБаза.ЗаГодПФР - Предел.РазмерПФР
 	|		ИНАЧЕ 0
 	|	КОНЕЦ - ВЫБОР
 	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодПФР, 0) - Предел.РазмерПФР >= 0
 	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодПФР, 0) - Предел.РазмерПФР
 	|		ИНАЧЕ 0
 	|	КОНЕЦ КАК СуммаПревысившаяПределПФР,
 	|	ВЫБОР
 	|		КОГДА ОблагаемаяБаза.ЗаГодФСС - Предел.РазмерФСС >= 0
 	|			ТОГДА ОблагаемаяБаза.ЗаГодФСС - Предел.РазмерФСС
 	|		ИНАЧЕ 0
 	|	КОНЕЦ - ВЫБОР
 	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФСС, 0) - Предел.РазмерФСС >= 0
 	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФСС, 0) - Предел.РазмерФСС
 	|		ИНАЧЕ 0
 	|	КОНЕЦ КАК СуммаПревысившаяПределФСС,
 	|	ВЫБОР
	|		КОГДА Предел.РазмерФОМС = 0
	|			ТОГДА 0
	|	ИНАЧЕ ВЫБОР
	|			КОГДА ОблагаемаяБаза.ЗаГодФОМС - Предел.РазмерФОМС >= 0
 	|				ТОГДА ОблагаемаяБаза.ЗаГодФОМС - Предел.РазмерФОМС
 	|			ИНАЧЕ 0
 	|		КОНЕЦ - ВЫБОР
 	|			КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФОМС, 0) - Предел.РазмерФОМС >= 0
 	|				ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФОМС, 0) - Предел.РазмерФОМС
 	|			ИНАЧЕ 0
 	|		КОНЕЦ
	|	КОНЕЦ КАК СуммаПревысившаяПределФОМС
 	|ПОМЕСТИТЬ ВТБазаПревышенияДохода
 	|ИЗ
 	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
 	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних КАК Предел
 	|		ПО ОблагаемаяБаза.Период = Предел.Период
 	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
 	|		ПО ОблагаемаяБаза.ФизическоеЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизическоеЛицо
 	|			И (ОблагаемаяБаза.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ
 	|	ОблагаемаяБаза.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	ОблагаемаяБаза.НачислятьНакопительнуюЧасть,
 	|	ОблагаемаяБаза.Организация,
 	|	ОблагаемаяБаза.Период КАК Период,
 	|	ВЫБОР
 	|		КОГДА ПревышениеДоходаВцелом.СуммаПревысившаяПределПФР = 0
 	|				ИЛИ ОблагаемаяБаза.ЗаМесяцПФР = 0
 	|			ТОГДА 0
 	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(ПревышениеДоходаВцелом.СуммаПревысившаяПределПФР КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаЗаМесяцВРазрезеПараметров.ЗаМесяцПФР КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОблагаемаяБаза.ЗаМесяцПФР КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
 	|	КОНЕЦ КАК СуммаПревысившаяПределПФР,
 	|	ВЫБОР
 	|		КОГДА ПревышениеДоходаВцелом.СуммаПревысившаяПределФСС = 0
 	|				ИЛИ ОблагаемаяБаза.ЗаМесяцФСС = 0
 	|			ТОГДА 0
 	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(ПревышениеДоходаВцелом.СуммаПревысившаяПределФСС КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаЗаМесяцВРазрезеПараметров.ЗаМесяцФСС КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОблагаемаяБаза.ЗаМесяцФСС КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
 	|	КОНЕЦ КАК СуммаПревысившаяПределФСС,
 	|	ВЫБОР
 	|		КОГДА ПревышениеДоходаВцелом.СуммаПревысившаяПределФОМС = 0
 	|				ИЛИ ОблагаемаяБаза.ЗаМесяцФОМС = 0
 	|			ТОГДА 0
 	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(ПревышениеДоходаВцелом.СуммаПревысившаяПределФОМС КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаЗаМесяцВРазрезеПараметров.ЗаМесяцФОМС КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОблагаемаяБаза.ЗаМесяцФОМС КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
 	|	КОНЕЦ КАК СуммаПревысившаяПределФОМС,
 	|	БазаЗаМесяцВРазрезеПараметров.ВидТарифаСтраховыхВзносов,
 	|	БазаЗаМесяцВРазрезеПараметров.ЭтоТрудовойДоговор,
 	|	БазаЗаМесяцВРазрезеПараметров.ВидДохода
 	|ПОМЕСТИТЬ ВТПревышениеДохода
 	|ИЗ
 	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
 	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаВцелом
 	|		ПО ОблагаемаяБаза.ФизическоеЛицо = ПревышениеДоходаВцелом.ФизическоеЛицо
 	|			И ОблагаемаяБаза.Организация = ПревышениеДоходаВцелом.Организация
 	|			И ОблагаемаяБаза.Период = ПревышениеДоходаВцелом.Период
 	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяц КАК БазаЗаМесяцВРазрезеПараметров
 	|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцВРазрезеПараметров.Период
 	|			И ОблагаемаяБаза.Организация = БазаЗаМесяцВРазрезеПараметров.Организация
 	|			И ОблагаемаяБаза.ФизическоеЛицо = БазаЗаМесяцВРазрезеПараметров.ФизическоеЛицо
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ РАЗЛИЧНЫЕ
 	|	Превышение.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	Превышение.НачислятьНакопительнуюЧасть,
 	|	Превышение.Организация,
 	|	Превышение.Период КАК Период,
 	|	Превышение.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПредел,
 	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
 	|	Превышение.ЭтоТрудовойДоговор,
 	|	Превышение.ВидДохода
 	|ПОМЕСТИТЬ ВТПревышениеПредельнойВеличиныДоходаПФР
 	|ИЗ
 	|	ВТПревышениеДохода КАК Превышение
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ РАЗЛИЧНЫЕ
 	|	Превышение.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	Превышение.НачислятьНакопительнуюЧасть,
 	|	Превышение.Организация,
 	|	Превышение.Период КАК Период,
 	|	Превышение.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПредел,
 	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
 	|	Превышение.ЭтоТрудовойДоговор,
 	|	Превышение.ВидДохода
 	|ПОМЕСТИТЬ ВТПревышениеПредельнойВеличиныДоходаФСС
 	|ИЗ
 	|	ВТПревышениеДохода КАК Превышение
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ РАЗЛИЧНЫЕ
 	|	Превышение.ФизическоеЛицо КАК ФизическоеЛицо,
 	|	Превышение.НачислятьНакопительнуюЧасть,
 	|	Превышение.Организация,
 	|	Превышение.Период КАК Период,
 	|	Превышение.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПредел,
 	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
 	|	Превышение.ЭтоТрудовойДоговор,
 	|	Превышение.ВидДохода
 	|ПОМЕСТИТЬ ВТПревышениеПредельнойВеличиныДоходаФОМС
 	|ИЗ
 	|	ВТПревышениеДохода КАК Превышение
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПревышениеДохода
	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|УНИЧТОЖИТЬ ВТБазаПревышенияДохода
 	|;
 	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБазаНарастающимИтогом
	|;
 	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних
	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|УНИЧТОЖИТЬ ВТМаксимальнаяБазаЗаМесяц
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|УНИЧТОЖИТЬ ВТБазаЗаМесяц
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|УНИЧТОЖИТЬ ВТПериодыРасчетаПревышения";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу с последними значениями ресурсов заданного регистра сведений
// Параметры:
//		МенеджерВременныхТаблиц
//
//		ИмяРегистра - имя регистра сведений (не полное)
//
//		ОписаниеПараметровСреза - структура полученная функцией ПараметрыСрезаПоследних
//			Содержит следующие поля:
//							ИмяВТИзмеренияДаты - имя временной таблицы с параметрами среза.
//												 Должна обязательно поле "Период"
//												 Используется как фильтр - переданные в ней значения измерений "фильтруют" регистр.
//												 В зависимости от значения параметра ВсеЗаписи строки ИзмеренияДаты используются 
//												 не только как фильтр, но и как набор значений для дополнения результирующей 
//												 временной таблицы.
//												 Содержит даты получения последних значений ресурсов.
//												 В предельном случае, когда нет колонок таблицы, соответствующих измерениям, 
//												 (т.е. фильтрация по измерениям не выполняется), в таблице содержится одна строка 
//												 с датой на которую нужно получить значения ресурсов.
//							Измерения - массив с именами измерений, по которым будет получен "Срез последних"
//										Может содержать колонки с именами, совпадающими с именами 
//										измерений регистра сведений
//
//			
//		Отбор - коллекция условий отбора, соединяемых по "И" и применяемых к регистру сведений
//			Коллекция строки которой имеют поля
//				ЛевоеЗначение - строка, имя поля регистра сведений
//				ВидСравнения - строка, вид сравнения, допустимый в языке запросов
//				ПравоеЗначение - значение для сравнения с полем ЛевоеЗначение
//
//		ВсеЗаписи - булево значение. 
//			Если Истина, то в результирующей временной таблице
//			должно быть столько же записей, сколько передано в параметре ИзмеренияДаты
//			Если Ложь, то временная таблица содержит записи только для тех 
//			значений измерений, для которых существуют данные в регистре
//			По умолчанию - Ложь
//		
//
// Создает в МенеджерВременныхТаблиц временную таблицу с именем ВТ<ИмяРегистра>СрезПоследних.
// Например: ВТПлановыеНачисленияСрезПоследних
// Поля временной таблицы
//	- Период
//	- Все измерения (не только переданные в качестве фильтра, а все)
//	- Все ресурсы без постфикса ПоОкончании
//	- Все реквизиты
//
Процедура ТаблицаСрезаПоследнихИзВТ(МенеджерВременныхТаблиц, ИмяРегистра, ОписаниеПараметровСреза, Отбор = Неопределено, ВсеЗаписи = Ложь)Экспорт
		
	КоллекцииПолей = КоллекцииПолейДляПодготовкиТекстаЗапроса(ИмяРегистра, ОписаниеПараметровСреза.Измерения);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ПодготовитьТаблицуСрезаПоследних(Запрос, КоллекцииПолей, ИмяРегистра, ОписаниеПараметровСреза.ИмяВТИзмеренияДаты, Отбор, ВсеЗаписи); 		
КонецПроцедуры

// Формирует временную таблицу с последними значениями ресурсов заданного регистра сведений
// Параметры:
//		МенеджерВременныхТаблиц
//
//		ИмяРегистра - имя регистра сведений (не полное)
//
//		ИзмеренияДаты - таблица значений
//			Должна обязательно содержать колонку "Период"
//			Может содержать колонки с именами, совпадающими с именами 
//			измерений регистра сведений
//
//			Используется как фильтр - переданные в ней значения измерений "фильтруют" регистр.
//			В зависимости от значения параметра ВсеЗаписи строки ИзмеренияДаты используются 
//			не только как фильтр, но и как набор значений для дополнения результирующей 
//			временной таблицы.
//			Содержит даты получения последних значений ресурсов.
//			В предельном случае, когда нет колонок таблицы, соответствующих измерениям, 
//			(т.е. фильтрация по измерениям не выполняется), в таблице содержится одна строка 
//			с датой на которую нужно получить значения ресурсов.
//
//		Отбор - коллекция условий отбора, соединяемых по "И" и применяемых к регистру сведений
//			Коллекция строки которой имеют поля
//				ЛевоеЗначение - строка, имя поля регистра сведений
//				ВидСравнения - строка, вид сравнения, допустимый в языке запросов
//				ПравоеЗначение - значение для сравнения с полем ЛевоеЗначение
//
//		ВсеЗаписи - булево значение. 
//			Если Истина, то в результирующей временной таблице
//			должно быть столько же записей, сколько передано в параметре ИзмеренияДаты
//			Если Ложь, то временная таблица содержит записи только для тех 
//			значений измерений, для которых существуют данные в регистре
//			По умолчанию - Ложь
//		
//
// Создает в МенеджерВременныхТаблиц временную таблицу с именем ВТ<ИмяРегистра>СрезПоследних.
// Например: ВТПлановыеНачисленияСрезПоследних
// Поля временной таблицы
//	- Период
//	- Все измерения (не только переданные в качестве фильтра, а все)
//	- Все ресурсы без постфикса ПоОкончании
//	- Все реквизиты
//
Процедура ПолучитьТаблицуСрезаПоследних(МенеджерВременныхТаблиц, ИмяРегистра, ИзмеренияДаты, Отбор = Неопределено, ВсеЗаписи = Ложь) Экспорт
	
	МассивИзмерений = Новый Массив;
	Для Каждого Колонка Из ИзмеренияДаты.Колонки Цикл
		МассивИзмерений.Добавить(Колонка.Имя);		
	КонецЦикла;	
	
	КоллекцииПолей = КоллекцииПолейДляПодготовкиТекстаЗапроса(ИмяРегистра, МассивИзмерений);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ИзмеренияДаты", ИзмеренияДаты);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ПодготовитьТаблицуСрезаПоследних(Запрос, КоллекцииПолей, ИмяРегистра, "&ИзмеренияДаты", Отбор, ВсеЗаписи);
		
КонецПроцедуры

// Возвращает структуру с полями
//	ИзмеренияФильтра - массив имен измерений по которым выполняется отбор
//	Измерения - массив имен всех измерений регистра
//	Ресурсы - массив имен ресурсов, которые не имеют "пары" ...ПоОкончании, кроме ДействуетДо
//	ВозвратныеРесурсы - массив имен ресурсов, которые имеют "пару" с именем ...ПоОкончании
//	Реквизиты - массив имен всех реквизитов
Функция КоллекцииПолейДляПодготовкиТекстаЗапроса(ИмяРегистра, МассивИзмерений)
	// Измерения для отбора
	ИзмеренияФильтра = Новый Массив;
	Для Каждого Измерение Из МассивИзмерений Цикл
		Если 	ВРег(Измерение) = ВРег("Период") Или 
				ВРег(Измерение) = ВРег("ДатаНачала") Или 
				ВРег(Измерение) = ВРег("ДатаОкончания") Тогда
			Продолжить;
		КонецЕсли;
		ИзмеренияФильтра.Добавить(Измерение);
	КонецЦикла;
	
	РегистрСведенийМетаданные = Метаданные.РегистрыСведений[ИмяРегистра];
	
	// Все измерения
	Измерения = Новый Массив;
	Для Каждого Измерение Из РегистрСведенийМетаданные.Измерения Цикл
		Измерения.Добавить(Измерение.Имя);
	КонецЦикла;
	
	ЕстьВозвратныеСобытия = Ложь;
	
	// Ресурсы
	Ресурсы = Новый Массив;
	ВозвратныеРесурсы = Новый Массив;
	Для Каждого Ресурс Из РегистрСведенийМетаданные.Ресурсы Цикл
		Если ВРег(Ресурс.Имя) = ВРег("ДействуетДо") Тогда
			ЕстьВозвратныеСобытия = Истина;
			Продолжить; // не включаем ресурс ДействуетДо в список получаемых ресурсов
		КонецЕсли;	
		Если ВРег(Прав(Ресурс.Имя, 11)) <> ВРег("ПоОкончании") Тогда
			Ресурсы.Добавить(Ресурс.Имя);
		Иначе	
			ВозвратныеРесурсы.Добавить(Лев(Ресурс.Имя, СтрДлина(Ресурс.Имя) - 11));
		КонецЕсли;	
	КонецЦикла;
	
	// Удалим из списка "простых" ресурсов те, которые являются "возвратными"
	Для Каждого Ресурс Из ВозвратныеРесурсы Цикл
		ИндексРесурса = Ресурсы.Найти(Ресурс);
		Если ИндексРесурса <> Неопределено Тогда
			Ресурсы.Удалить(ИндексРесурса);
		КонецЕсли;			
	КонецЦикла;
	
	// Реквизиты
	Реквизиты = Новый Массив;
	Для Каждого Реквизит Из РегистрСведенийМетаданные.Реквизиты Цикл
		Реквизиты.Добавить(Реквизит.Имя);
	КонецЦикла;
	
	Возврат Новый Структура("ИзмеренияФильтра,Измерения,ВозвратныеРесурсы,Ресурсы,Реквизиты",
		ИзмеренияФильтра,Измерения,ВозвратныеРесурсы,Ресурсы,Реквизиты);
	
КонецФункции


Процедура ПодготовитьТаблицуСрезаПоследних(Запрос, КоллекцииПолей, ИмяРегистра, ИмяТаблицыИзмерений, Отбор = Неопределено, ВсеЗаписи = Ложь)
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИзмеренияДаты.Период";
	Для Каждого Измерение Из КоллекцииПолей.ИзмеренияФильтра Цикл
		ТекстЗапроса = ТекстЗапроса + ",
		|	ИзмеренияДаты." + Измерение;
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ВТИзмеренияДаты
	|ИЗ
	|	" + ИмяТаблицыИзмерений + " КАК ИзмеренияДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмеренияДаты.Период КАК ЗаданныйПериод";
	Для Каждого Измерение Из КоллекцииПолей.Измерения Цикл
		Если КоллекцииПолей.ИзмеренияФильтра.Найти(Измерение) <> НеОпределено Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ИзмеренияДаты." + Измерение;
		Иначе
			ТекстЗапроса = ТекстЗапроса + ",
			|	РегистрСведений." + Измерение;
		КонецЕсли;
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ",
	|	МАКСИМУМ(РегистрСведений.Период) КАК Период
	|ПОМЕСТИТЬ ВТМаксимальныеПериоды
	|ИЗ
	|	ВТИзмеренияДаты КАК ИзмеренияДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистра + " КАК РегистрСведений
	|		ПО (РегистрСведений.Период <= ИзмеренияДаты.Период)";
	Для Каждого Измерение Из КоллекцииПолей.ИзмеренияФильтра Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|			И (РегистрСведений." + Измерение + " = ИзмеренияДаты." + Измерение + ")";
	КонецЦикла;
	
	Если Отбор <> Неопределено Тогда
		СчПараметров = 1;
		ТекстОтбор = "
		|	И (";
		Для Каждого СтруктураОтбора Из Отбор Цикл
			ТекстОтбор = ТекстОтбор + "
			|	РегистрСведений." + СтруктураОтбора.ЛевоеЗначение + СтруктураОтбора.ВидСравнения + "(&Параметр" + СчПараметров + ") И";
			СчПараметров = СчПараметров + 1;
		КонецЦикла;	
		ТекстОтбор = Лев(ТекстОтбор, СтрДлина(ТекстОтбор) - 1);
		ТекстОтбор = ТекстОтбор + ")";
		ТекстЗапроса = ТекстЗапроса + ТекстОтбор;
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмеренияДаты.Период";
	Для Каждого Измерение Из КоллекцииПолей.Измерения Цикл
		Если КоллекцииПолей.ИзмеренияФильтра.Найти(Измерение) <> НеОпределено Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ИзмеренияДаты." + Измерение;
		Иначе
			ТекстЗапроса = ТекстЗапроса + ",
			|	РегистрСведений." + Измерение;
		КонецЕсли;
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ЗаданныйПериод КАК Период";
	Для Каждого Измерение Из КоллекцииПолей.Измерения Цикл
		ТекстЗапроса = ТекстЗапроса + ",
		|	МаксимальныеПериоды." + Измерение;
	КонецЦикла;
	Для Каждого Ресурс Из КоллекцииПолей.ВозвратныеРесурсы Цикл
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА РегистрСведений.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ РегистрСведений.ДействуетДо >= МаксимальныеПериоды.ЗаданныйПериод
		|			ТОГДА РегистрСведений." + Ресурс + "
		|		ИНАЧЕ РегистрСведений." + Ресурс + "ПоОкончании
		|	КОНЕЦ КАК " + Ресурс;
	КонецЦикла;
	
	Для Каждого Ресурс Из КоллекцииПолей.Ресурсы Цикл
		ТекстЗапроса = ТекстЗапроса + ",
		|	РегистрСведений." + Ресурс + " КАК " + Ресурс;
	КонецЦикла;
	
	Для Каждого Реквизит Из КоллекцииПолей.Реквизиты Цикл
		ТекстЗапроса = ТекстЗапроса + ",
		|	РегистрСведений." + Реквизит;
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ВТ" + ИмяРегистра + "СрезПоследних
	|ИЗ
	|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистра + " КАК РегистрСведений
	|		ПО (РегистрСведений.Период = МаксимальныеПериоды.Период)";
	Для Каждого Измерение Из КоллекцииПолей.Измерения Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|			И (РегистрСведений." + Измерение + " = МаксимальныеПериоды." + Измерение + ")";
	КонецЦикла;
	Если НЕ ВсеЗаписи Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	(НЕ РегистрСведений.Период ЕСТЬ NULL)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ";
	|УНИЧТОЖИТЬ ВТИзмеренияДаты;
	|УНИЧТОЖИТЬ ВТМаксимальныеПериоды";
	
	Запрос.Текст = ТекстЗапроса;
	Если Отбор <> Неопределено Тогда
		СчПараметров = 1;
		Для Каждого СтруктураОтбора Из Отбор Цикл
			Запрос.УстановитьПараметр("Параметр" + СчПараметров, СтруктураОтбора.ПравоеЗначение);			
			СчПараметров = СчПараметров + 1;
		КонецЦикла;
	КонецЕсли;	
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает структуру с параметрами формирования таблицы "среза последних" для процедуры ТаблицаСрезаПоследнихИзВТ 
// Параметры:
//		ИмяВТИзмеренияДаты - имя временной таблицы - "фильтра"
//		ИзмеренияРегистра - строка с именами измерений регистра, разделенных символом ",",
//							по которым будет осуществлятся фильтрация
//
// Возвращаемое значение:
//		Структура с полями:
//			ИмяВТИзмеренияДаты - имя временной таблицы с параметрами среза.
//			Измерения - 		 массив с именами измерений, по которым будет получен "Срез последних"
//								 Может содержать колонки с именами, совпадающими с именами 
//								 измерений регистра сведений		
Функция ПараметрыСрезаПоследних(ИмяВТИзмеренияДаты, ИзмеренияРегистра)Экспорт
	МассивИзмерений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИзмеренияРегистра, ",");
	
	ОписаниеПараметров = Новый Структура;
	ОписаниеПараметров.Вставить("ИмяВТИзмеренияДаты", ИмяВТИзмеренияДаты);
	ОписаниеПараметров.Вставить("Измерения", МассивИзмерений);
	
	Возврат ОписаниеПараметров;
КонецФункции

Процедура СформироватьВТКодыВидовТарифаСтраховыхВзносов(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка КАК ВидТарифаСтраховыхВзносов,
	|	ВидыТарифовСтраховыхВзносов.КодФНС КАК КодФНС,
	|	ВидыТарифовСтраховыхВзносов.КодПФР2011 КАК КодПФР,
	|	ВидыТарифовСтраховыхВзносов.КодФСС2011 КАК КодФСС,
	|	2011 КАК ГодС,
	|	2011 КАК ГодПо
	|ПОМЕСТИТЬ ВТКодыВидовТарифаСтраховыхВзносов
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ВидыТарифовСтраховыхВзносов.КодФНС,
	|	ВидыТарифовСтраховыхВзносов.КодПФР2012,
	|	ВидыТарифовСтраховыхВзносов.КодФСС2012,
	|	2012,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов";

	Запрос.Выполнить();

КонецПроцедуры

// Формирует временные таблицы: 
//	ВТСведенияОДоходах, содержащую данные о доходах, зарегистрированные в учете по страховым взносам, и
//		дополненные сведениями о физлицах и о виде тарифа страховых взносов
// а также таблицы с промежуточными данными, которые могут быть использованы независимо
//	1. ВТРазмерыТарифныхСтавок, содержащую данные о ставках взносов
//  4. ВТИспользуемыеТарифы, содержащую данные о применяемых помесячно тарифах
//  5. ВТОписаниеТарифов, содержащую данные о необходимости применения особого тарифа для инвалидов для каждого тарифа
//  страховых взносов
//
// Параметры
//  НачалоПериода
//  ОкончаниеПериода
//  МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещены сформированные временные таблицы,
//		содержит вр. таблицу ВТФизЛицаОрганизаций (или другим именем) с полями
//			ФизическоеЛицо: 		должно быть непустым
//			ГоловнаяОрганизация:	должно быть непустым
//  ТолькоРазрешенные - булево, флажок, определяющий, надо ли оставлять в запросе только разрешенные при РЛС записи
//
Процедура СформироватьВТРасширенныхСведенийОДоходах(НачалоПериода, ОкончаниеПериода, Организация, МенеджерВременныхТаблиц, ЕстьОтборПоФизическимЛицам = Ложь, ИсключатьДоходыРегистратора = Ложь, Регистратор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ОсновнойТариф = РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ОбщийНалоговыйРежим");
	МалоеПредпринимательство = РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ДляСубъектовМалогоПредпринимательства");
	ОтраслиПострадавшихОтКоронавируснойИнфекции = РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ДляОтраслейПострадавшихОтКоронавируснойИнфекции");
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода",		НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецОтчетногоПериода",	ОкончаниеПериода);
	Запрос.УстановитьПараметр("КонецГода",	 КонецГода(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", ОсновнойТариф);
	Запрос.УстановитьПараметр("Патент", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ИндивидуальныйПредпринимательПрименяющийПатент")); 
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДоходыРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("ДляСубъектовМалогоПредпринимательства", МалоеПредпринимательство); 
	Запрос.УстановитьПараметр("ДляОтраслейПострадавшихОтКоронавируснойИнфекции", ОтраслиПострадавшихОтКоронавируснойИнфекции); 
	Запрос.УстановитьПараметр("НачалоПониженногоТарифаИзЗаЭпидемии", '20200401'); 
	Запрос.УстановитьПараметр("ОкончаниеПониженногоТарифаИзЗаЭпидемии", '20200630'); 
	
	Запрос.УстановитьПараметр("ПустаяДата",'00010101');
	
	МассивВидовДохода = Новый Массив;
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ПособияЗаСчетФСС);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ПособияЗаСчетФСС_НС);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.НеОблагаетсяЦеликом);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ОблагаетсяЦеликом);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.МатпомощьПриРожденииРебенка);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.Матпомощь);
	Запрос.УстановитьПараметр("ВидыДохода", МассивВидовДохода);
	
	// Формируем список месяцев, в разрезе которых собираем данные
	// конец месяца налогового периода
	КонецМесяца = НачалоДня(КонецМесяца(НачалоГода(НачалоПериода)));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериодыРасширенныхСведенийОДоходах";
	// прибавим остальные месяцы
	Пока КонецДня(КонецМесяца) < КонецМесяца(ОкончаниеПериода) Цикл
		КонецМесяца = НачалоДня(КонецМесяца(КонецДня(КонецМесяца) + 1));
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	ТекстЗапроса = "";
	Если Не ЕстьОтборПоФизическимЛицам Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтраховыеВзносыСведенияОДоходах.Сотрудник КАК ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.Организация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыДоходы КАК СтраховыеВзносыСведенияОДоходах
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
		|	И СтраховыеВзносыСведенияОДоходах.Организация = &Организация
		|;";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.Период КАК Период,
	|	СписокСотрудников.Организация,
	|	СписокСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокСотрудников.ФизическоеЛицо.Физлицо.ДатаРождения  КАК ДатаРожденияФизЛица
	|ПОМЕСТИТЬ ВТПериодыФизЛицОрганизаций
	|ИЗ
	|	ВТФизЛицаОрганизаций КАК СписокСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыРасширенныхСведенийОДоходах КАК Периоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.Сотрудник КАК ФизическоеЛицо,
	|	СведенияОДоходах.Организация,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СведенияОДоходах.ВидДохода,
	|	СведенияОДоходах.Сумма КАК Сумма,
	|	СведенияОДоходах.Скидка КАК Скидка
	|ПОМЕСТИТЬ ВТДоходыПоФизлицамМесяцам
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыДоходы КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
	|	И (СведенияОДоходах.Сотрудник, СведенияОДоходах.Организация) В
	|			(ВЫБРАТЬ
	|				СписокСотрудников.ФизическоеЛицо,
	|				СписокСотрудников.Организация
	|			ИЗ
	|				ВТФизЛицаОрганизаций КАК СписокСотрудников)
	|	И СведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СведенияОДоходах.Регистратор <> &ИсключаемыйРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Организация,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Сотрудник КАК ФизическоеЛицо,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Период КАК ПериодРегистрации,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРПоСуммарномуТарифу)
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРПоСуммарномуТарифу,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная)
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНакопительная,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСтраховая,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФФОМС)
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФССНесчастныеСлучаи,
	|	0 КАК ТФОМС
	|ПОМЕСТИТЬ ВТВзносыИсчисленные
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(
	|			&НачалоОтчетногоПериода,
	|			&КонецОтчетногоПериода,
	|			МЕСЯЦ,
	|			(Сотрудник, Организация) В
	|					(ВЫБРАТЬ
	|						Организации.ФизическоеЛицо,
	|						Организации.Организация
	|					ИЗ
	|						ВТФизЛицаОрганизаций КАК Организации)
	|				) КАК РасчетыСФондамиПоСтраховымВзносамОбороты
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Организация,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Сотрудник ,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Период";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТаблицаСрезаПоследнихИзВТ(Запрос.МенеджерВременныхТаблиц, "ТарифыСтраховыхВзносов", ПараметрыСрезаПоследних("ВТПериодыРасширенныхСведенийОДоходах",""), , Истина);
	ТаблицаСрезаПоследнихИзВТ(Запрос.МенеджерВременныхТаблиц, "ПрименяемыеТарифыСтраховыхВзносов", ПараметрыСрезаПоследних("ВТПериодыФизЛицОрганизаций","Организация"), , Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТарифыСтраховыхВзносов.ПФР,
	|	ТарифыСтраховыхВзносов.ПФРНакопительная,
	|	ТарифыСтраховыхВзносов.ФСС,
	|	ТарифыСтраховыхВзносов.ФФОМС,
	|	ТарифыСтраховыхВзносов.ТФОМС,
	|	ТарифыСтраховыхВзносов.ВидТарифа КАК ВидТарифа,
	|	ТарифыСтраховыхВзносов.ПФР + ТарифыСтраховыхВзносов.ФСС + ТарифыСтраховыхВзносов.ФФОМС + ТарифыСтраховыхВзносов.ТФОМС КАК СуммарныйТариф,
	|	НАЧАЛОПЕРИОДА(ТарифыСтраховыхВзносов.Период, ГОД) КАК Период,
	|	ГОД(ТарифыСтраховыхВзносов.Период) КАК РасчетныйПериод
	|ПОМЕСТИТЬ ВТРазмерыТарифныхСтавок
	|ИЗ
	|	ВТТарифыСтраховыхВзносовСрезПоследних КАК ТарифыСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидТарифа,
	|	РасчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПрименяемыеТарифыСтраховыхВзносов.Период, МЕСЯЦ) КАК Период,
	|	ПрименяемыеТарифыСтраховыхВзносов.Организация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПрименяемыеТарифыСтраховыхВзносов.ВидТарифа, &ОбщийНалоговыйРежим) = &Патент
	|			ТОГДА &ОбщийНалоговыйРежим
	|		КОГДА ЕСТЬNULL(ПрименяемыеТарифыСтраховыхВзносов.ВидТарифа, &ОбщийНалоговыйРежим) = &ДляОтраслейПострадавшихОтКоронавируснойИнфекции
	|			И (ПрименяемыеТарифыСтраховыхВзносов.Период < &НачалоПониженногоТарифаИзЗаЭпидемии 
	|			ИЛИ ПрименяемыеТарифыСтраховыхВзносов.Период > &ОкончаниеПониженногоТарифаИзЗаЭпидемии)
	|			ТОГДА &ОбщийНалоговыйРежим
	|		ИНАЧЕ ЕСТЬNULL(ПрименяемыеТарифыСтраховыхВзносов.ВидТарифа, &ОбщийНалоговыйРежим)
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТИспользуемыеТарифы
	|ИЗ
	|	ВТПрименяемыеТарифыСтраховыхВзносовСрезПоследних КАК ПрименяемыеТарифыСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Взносы.ПериодРегистрации КАК ПериодРегистрации,
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Взносы.Организация КАК Организация,
	|	ВидыТарифныхСтавокОрганизаций.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	Взносы.ПФРПоСуммарномуТарифу КАК ПФРПоСуммарномуТарифу,
	|	Взносы.ПФРСтраховая КАК ПФРСтраховая,
	|	Взносы.ПФРНакопительная КАК ПФРНакопительная,
	|	Взносы.ФСС КАК ФСС,
	|	Взносы.ФФОМС КАК ФФОМС,
	|	Взносы.ТФОМС КАК ТФОМС
	|ПОМЕСТИТЬ ВТДанныеУчетаВзносов
	|ИЗ
	|	ВТВзносыИсчисленные КАК Взносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ВидыТарифныхСтавокОрганизаций
	|		ПО Взносы.ПериодРегистрации = ВидыТарифныхСтавокОрганизаций.Период
	|			И Взносы.Организация = ВидыТарифныхСтавокОрганизаций.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУчетаВзносов.ПериодРегистрации,
	|	ДанныеУчетаВзносов.ФизическоеЛицо,
	|	ДанныеУчетаВзносов.Организация,
	|	ДанныеУчетаВзносов.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	ДанныеУчетаВзносов.ПФРПоСуммарномуТарифу КАК ПФРПоСуммарномуТарифу,
	|	ДанныеУчетаВзносов.ПФРСтраховая КАК ПФРСтраховая,
	|	ДанныеУчетаВзносов.ПФРНакопительная КАК ПФРНакопительная,
	|	ДанныеУчетаВзносов.ФФОМС КАК ФФОМС,
	|	ДанныеУчетаВзносов.ТФОМС КАК ТФОМС,
	|	ДанныеУчетаВзносов.ФСС КАК ФСС
	|ПОМЕСТИТЬ ВТРаспределенныеВзносыПФР
	|ИЗ
	|	ВТДанныеУчетаВзносов КАК ДанныеУчетаВзносов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыТарифныхСтавок КАК ОписаниеТарифов
	|		ПО ДанныеУчетаВзносов.ВидТарифаСтраховыхВзносов = ОписаниеТарифов.ВидТарифа
	|			И (ГОД(ДанныеУчетаВзносов.ПериодРегистрации) = ОписаниеТарифов.РасчетныйПериод)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, ГОД) КАК РасчетныйПериод,
	|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК Период,
	|	СписокФизЛиц.Организация,
	|	СписокФизЛиц.ФизическоеЛицо,
	|	ИспользуемыеТарифы.ВидТарифаСтраховыхВзносов,
	|	ВЫБОР
	|		КОГДА ГОД(СписокФизЛиц.ДатаРожденияФизЛица) < 1967 ИЛИ СписокФизЛиц.ДатаРожденияФизЛица = &ПустаяДата
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НачислятьНакопительнуюЧасть,
	|	СписокФизЛиц.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование,
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)) КАК ВидДохода,
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуПФР, ЛОЖЬ) КАК ВходитВБазуПФР,
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС, ЛОЖЬ) КАК ВходитВБазуФСС,
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФОМС, ЛОЖЬ) КАК ВходитВБазуФОМС,
	|	СУММА(ЕСТЬNULL(ДоходыПоФизлицам.Сумма, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(ДоходыПоФизлицам.Скидка, 0)) КАК Скидка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ДоходыПоФизлицам.ВидДохода В (&ВидыДохода)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой)
	|		КОНЕЦ, ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка)) КАК ТипДоговора,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ДоходыПоФизлицам.ВидДохода В (&ВидыДохода)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ИСТИНА) КАК ЭтоТрудовойДоговор,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуПФР, ЛОЖЬ)
	|				ТОГДА ДоходыПоФизлицам.Сумма - ДоходыПоФизлицам.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФР,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС, ЛОЖЬ)
	|				ТОГДА ДоходыПоФизлицам.Сумма - ДоходыПоФизлицам.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФСС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС, ЛОЖЬ)
	|				ТОГДА ДоходыПоФизлицам.Сумма - ДоходыПоФизлицам.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФСС_НС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФОМС, ЛОЖЬ)
	|				ТОГДА ДоходыПоФизлицам.Сумма - ДоходыПоФизлицам.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФОМС,
	|	0 КАК СуммаПревысившаяПределПФР,
	|	0 КАК СуммаПревысившаяПределФСС,
	|	0 КАК СуммаПревысившаяПределФОМС
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоФизлицамМесяцам КАК ДоходыПоФизлицам
	|		ПО СписокФизЛиц.Организация = ДоходыПоФизлицам.Организация
	|			И СписокФизЛиц.ФизическоеЛицо = ДоходыПоФизлицам.ФизическоеЛицо
	|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = ДоходыПоФизлицам.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользуемыеТарифы КАК ИспользуемыеТарифы
	|		ПО СписокФизЛиц.Организация = ИспользуемыеТарифы.Организация
	|			И (НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) = ИспользуемыеТарифы.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокФизЛиц.ФизическоеЛицо,
	|	СписокФизЛиц.ФизическоеЛицо.Наименование,
	|	СписокФизЛиц.Организация,
	|	ВЫБОР
	|		КОГДА ГОД(СписокФизЛиц.ДатаРожденияФизЛица) < 1967 ИЛИ СписокФизЛиц.ДатаРожденияФизЛица = &ПустаяДата
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ, 
	|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, ГОД),
	|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ),
	|	ДоходыПоФизлицам.ВидДохода,
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуПФР, ЛОЖЬ),
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФСС, ЛОЖЬ),
	|	ЕСТЬNULL(ДоходыПоФизлицам.ВидДохода.ВходитВБазуФОМС, ЛОЖЬ),
	|	ИспользуемыеТарифы.ВидТарифаСтраховыхВзносов";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходах.РасчетныйПериод КАК РасчетныйПериод,
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.Организация КАК Организация
	|ПОМЕСТИТЬ ВТФизЛицаКОбработке
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов = &ДляСубъектовМалогоПредпринимательства";
	Если Запрос.Выполнить().Выгрузить()[0].Количество > 0 Тогда
		// Формируем список лет для чтения МРОТ.
		ИзмеренияДаты = Новый ТаблицаЗначений();
		ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты()));
		НачалоГода = НачалоГода(НачалоПериода);
		// первый год
		ИзмеренияДаты.Добавить().Период = НачалоГода;
		// прибавим остальные годы
		Пока НачалоГода < НачалоГода(ОкончаниеПериода) Цикл
			НачалоГода = КонецГода(НачалоГода) + 1;
			ИзмеренияДаты.Добавить().Период = НачалоГода;
		КонецЦикла;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.РасчетныйПериод КАК РасчетныйПериод,
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.Организация КАК Организация,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МинимальнаяОплатаТрудаРФ.Значение КАК РазмерМРОТ,
		|	СУММА(СведенияОДоходах.БазаПФР) КАК БазаПФР,
		|	СУММА(СведенияОДоходах.БазаФОМС) КАК БазаФОМС,
		|	СУММА(СведенияОДоходах.БазаФСС) КАК БазаФСС
		|ПОМЕСТИТЬ ВТДанныеДляВыделенияМРОТ
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МРОТ КАК МинимальнаяОплатаТрудаРФ
		|		ПО СведенияОДоходах.РасчетныйПериод = МинимальнаяОплатаТрудаРФ.Период
		|ГДЕ
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов = &ДляСубъектовМалогоПредпринимательства
		|
		|СГРУППИРОВАТЬ ПО
		|	МинимальнаяОплатаТрудаРФ.Значение,
		|	СведенияОДоходах.РасчетныйПериод,
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.Организация,
		|	СведенияОДоходах.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.РасчетныйПериод КАК РасчетныйПериод,
		|	СведенияОДоходах.Организация КАК Организация,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
		|	СведенияОДоходах.ФизическоеЛицоНаименование КАК ФизическоеЛицоНаименование,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СведенияОДоходах.ВходитВБазуПФР КАК ВходитВБазуПФР,
		|	СведенияОДоходах.ВходитВБазуФСС КАК ВходитВБазуФСС,
		|	СведенияОДоходах.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
		|	СведенияОДоходах.ТипДоговора КАК ТипДоговора,
		|	СведенияОДоходах.Сумма КАК Сумма,
		|	СведенияОДоходах.Скидка КАК Скидка,
		|	СведенияОДоходах.БазаПФР КАК БазаПФР,
		|	СведенияОДоходах.БазаФОМС КАК БазаФОМС,
		|	СведенияОДоходах.БазаФСС КАК БазаФСС,
		|	СведенияОДоходах.БазаФСС_НС КАК БазаФСС_НС,
		|	СведенияОДоходах.ЭтоТрудовойДоговор КАК ЭтоТрудовойДоговор,
		|	ДанныеДляВыделенияМРОТ.РазмерМРОТ КАК РазмерМРОТ,
		|	ЕСТЬNULL(ДанныеДляВыделенияМРОТ.БазаПФР > ДанныеДляВыделенияМРОТ.РазмерМРОТ, ЛОЖЬ) КАК ТребуетсяВыделятьМРОТ_ПФР,
		|	ЕСТЬNULL(ДанныеДляВыделенияМРОТ.БазаФОМС > ДанныеДляВыделенияМРОТ.РазмерМРОТ, ЛОЖЬ) КАК ТребуетсяВыделятьМРОТ_ФОМС,
		|	ЕСТЬNULL(ДанныеДляВыделенияМРОТ.БазаФСС > ДанныеДляВыделенияМРОТ.РазмерМРОТ, ЛОЖЬ) КАК ТребуетсяВыделятьМРОТ_ФСС,
		|	ДанныеДляВыделенияМРОТ.БазаПФР КАК БазаЗаМесяцПФР,
		|	ДанныеДляВыделенияМРОТ.БазаФОМС КАК БазаЗаМесяцФОМС,
		|	ДанныеДляВыделенияМРОТ.БазаФСС КАК БазаЗаМесяцФСС,
		|	СведенияОДоходах.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФР,
		|	СведенияОДоходах.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПределФСС,
		|	СведенияОДоходах.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПределФОМС
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛицаКОбработке КАК ФизЛицаКОбработке
		|		ПО СведенияОДоходах.ФизическоеЛицо = ФизЛицаКОбработке.ФизическоеЛицо
		|			И СведенияОДоходах.РасчетныйПериод = ФизЛицаКОбработке.РасчетныйПериод
		|			И СведенияОДоходах.Организация = ФизЛицаКОбработке.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДляВыделенияМРОТ КАК ДанныеДляВыделенияМРОТ
		|		ПО СведенияОДоходах.ФизическоеЛицо = ДанныеДляВыделенияМРОТ.ФизическоеЛицо
		|			И СведенияОДоходах.Период = ДанныеДляВыделенияМРОТ.Период
		|			И СведенияОДоходах.Организация = ДанныеДляВыделенияМРОТ.Организация
		|ГДЕ
		|	ФизЛицаКОбработке.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	ФизическоеЛицо,
		|	Период";
		
		Результат = Запрос.Выполнить().Выгрузить();
		ВсегоСтрок = Результат.Количество();
		ГоловнаяОрганизация = Неопределено;
		Период = Неопределено;
		ФизическоеЛицо = Неопределено;
		СтрокиКУдалению = Новый Массив;
		ЗаменяемыйТариф = МалоеПредпринимательство;
		СтрокаПоиска = "ФизическоеЛицо,Период,Организация";
		Результат.Индексы.Добавить(СтрокаПоиска);
		СтруктураПоиска = Новый Структура(СтрокаПоиска); 
		СтрокиМесяца = Неопределено;
		
		Для Сч = 0 По ВсегоСтрок - 1 Цикл
			
			ТекущаяСтрока = Результат[Сч];
			
			Если ГоловнаяОрганизация <> ТекущаяСтрока.Организация 
				Или Период <> ТекущаяСтрока.Период 
				Или ФизическоеЛицо <> ТекущаяСтрока.ФизическоеЛицо Тогда
				
				Если СтрокиМесяца <> Неопределено Тогда
					ВыделитьБазуМРОТНаОсновнойТариф(СтрокиМесяца, Результат, ОсновнойТариф)
				КонецЕсли;
				
				СтрокиМесяца = Неопределено;
				ЗаменятьНаОсновнойТарифВсеЗаписи = Не ТекущаяСтрока.ТребуетсяВыделятьМРОТ_ПФР И Не ТекущаяСтрока.ТребуетсяВыделятьМРОТ_ФОМС И Не ТекущаяСтрока.ТребуетсяВыделятьМРОТ_ФСС;
				Если Не ЗаменятьНаОсновнойТарифВсеЗаписи Тогда
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущаяСтрока);
					СтрокиМесяца = Результат.НайтиСтроки(СтруктураПоиска);
				КонецЕсли;
				ГоловнаяОрганизация = ТекущаяСтрока.Организация; 
				Период = ТекущаяСтрока.Период; 
				ФизическоеЛицо = ТекущаяСтрока.ФизическоеЛицо;
					
			КонецЕсли;
			
			Если ЗаменятьНаОсновнойТарифВсеЗаписи Тогда
				Если ТекущаяСтрока.ВидТарифаСтраховыхВзносов = ЗаменяемыйТариф Тогда
					ТекущаяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			Если ТекущаяСтрока.БазаПФР = 0 И ТекущаяСтрока.БазаФОМС = 0 И ТекущаяСтрока.БазаФСС = 0 Тогда
				Если ТекущаяСтрока.ВидТарифаСтраховыхВзносов = ЗаменяемыйТариф Тогда
					ТекущаяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			СтрокиКУдалению.Добавить(ТекущаяСтрока);
			
		КонецЦикла;
		
		Если СтрокиМесяца <> Неопределено Тогда
			ВыделитьБазуМРОТНаОсновнойТариф(СтрокиМесяца, Результат, ОсновнойТариф)
		КонецЕсли;
		
		Для каждого СтрокаТаблцы Из СтрокиКУдалению Цикл
			Результат.Удалить(СтрокаТаблцы)
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ДанныеСВыделеннымМРОТ", Результат); Результат = Неопределено;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.РасчетныйПериод КАК РасчетныйПериод,
		|	СведенияОДоходах.Организация КАК Организация,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
		|	СведенияОДоходах.ФизическоеЛицоНаименование КАК ФизическоеЛицоНаименование,
		|	СведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СведенияОДоходах.ВходитВБазуПФР КАК ВходитВБазуПФР,
		|	СведенияОДоходах.ВходитВБазуФСС КАК ВходитВБазуФСС,
		|	СведенияОДоходах.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
		|	СведенияОДоходах.ТипДоговора КАК ТипДоговора,
		|	СведенияОДоходах.ЭтоТрудовойДоговор КАК ЭтоТрудовойДоговор,
		|	СведенияОДоходах.Сумма КАК Сумма,
		|	СведенияОДоходах.Скидка КАК Скидка,
		|	СведенияОДоходах.БазаПФР КАК БазаПФР,
		|	СведенияОДоходах.БазаФОМС КАК БазаФОМС,
		|	СведенияОДоходах.БазаФСС КАК БазаФСС,
		|	СведенияОДоходах.БазаФСС_НС КАК БазаФСС_НС,
		|	СведенияОДоходах.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФР,
		|	СведенияОДоходах.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПределФСС,
		|	СведенияОДоходах.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПределФОМС
		|ПОМЕСТИТЬ СведенияДоходахВременная
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСведенияОДоходах
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДанныеДляВыделенияМРОТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСВыделеннымМРОТ.Период КАК Период,
		|	ДанныеСВыделеннымМРОТ.РасчетныйПериод КАК РасчетныйПериод,
		|	ДанныеСВыделеннымМРОТ.Организация КАК Организация,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеСВыделеннымМРОТ.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицоНаименование КАК ФизическоеЛицоНаименование,
		|	ДанныеСВыделеннымМРОТ.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ДанныеСВыделеннымМРОТ.ВидДохода КАК ВидДохода,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуПФР КАК ВходитВБазуПФР,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФСС КАК ВходитВБазуФСС,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
		|	ДанныеСВыделеннымМРОТ.ТипДоговора КАК ТипДоговора,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеСВыделеннымМРОТ.Сумма КАК ЧИСЛО(20, 2)), 0) КАК Сумма,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеСВыделеннымМРОТ.Скидка КАК ЧИСЛО(20, 2)), 0) КАК Скидка,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеСВыделеннымМРОТ.БазаПФР КАК ЧИСЛО(20, 2)), 0) КАК БазаПФР,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеСВыделеннымМРОТ.БазаФОМС КАК ЧИСЛО(20, 2)), 0) КАК БазаФОМС,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеСВыделеннымМРОТ.БазаФСС КАК ЧИСЛО(20, 2)), 0) КАК БазаФСС,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеСВыделеннымМРОТ.БазаФСС_НС КАК ЧИСЛО(20, 2)), 0) КАК БазаФСС_НС,
		|	ДанныеСВыделеннымМРОТ.ЭтоТрудовойДоговор КАК ЭтоТрудовойДоговор,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФР,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПределФСС,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПределФОМС
		|ПОМЕСТИТЬ ВТДанныеСВыделеннымМРОТ
		|ИЗ
		|	&ДанныеСВыделеннымМРОТ КАК ДанныеСВыделеннымМРОТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСВыделеннымМРОТ.Период КАК Период,
		|	ДанныеСВыделеннымМРОТ.РасчетныйПериод КАК РасчетныйПериод,
		|	ДанныеСВыделеннымМРОТ.Организация КАК Организация,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеСВыделеннымМРОТ.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицоНаименование КАК ФизическоеЛицоНаименование,
		|	ДанныеСВыделеннымМРОТ.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ДанныеСВыделеннымМРОТ.ВидДохода КАК ВидДохода,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуПФР КАК ВходитВБазуПФР,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФСС КАК ВходитВБазуФСС,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
		|	ДанныеСВыделеннымМРОТ.ТипДоговора КАК ТипДоговора,
		|	СУММА(ДанныеСВыделеннымМРОТ.Сумма) КАК Сумма,
		|	СУММА(ДанныеСВыделеннымМРОТ.Скидка) КАК Скидка,
		|	СУММА(ДанныеСВыделеннымМРОТ.БазаПФР) КАК БазаПФР,
		|	СУММА(ДанныеСВыделеннымМРОТ.БазаФОМС) КАК БазаФОМС,
		|	СУММА(ДанныеСВыделеннымМРОТ.БазаФСС) КАК БазаФСС,
		|	СУММА(ДанныеСВыделеннымМРОТ.БазаФСС_НС) КАК БазаФСС_НС,
		|	ДанныеСВыделеннымМРОТ.ЭтоТрудовойДоговор КАК ЭтоТрудовойДоговор,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФР,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПределФСС,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПределФОМС
		|ПОМЕСТИТЬ ВТДанныеСВыделеннымМРОТСгруппированные
		|ИЗ
		|	ВТДанныеСВыделеннымМРОТ КАК ДанныеСВыделеннымМРОТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеСВыделеннымМРОТ.Период,
		|	ДанныеСВыделеннымМРОТ.РасчетныйПериод,
		|	ДанныеСВыделеннымМРОТ.Организация,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицо,
		|	ДанныеСВыделеннымМРОТ.НачислятьНакопительнуюЧасть,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицоНаименование,
		|	ДанныеСВыделеннымМРОТ.ВидТарифаСтраховыхВзносов,
		|	ДанныеСВыделеннымМРОТ.ВидДохода,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуПФР,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФСС,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФОМС,
		|	ДанныеСВыделеннымМРОТ.ТипДоговора,
		|	ДанныеСВыделеннымМРОТ.ЭтоТрудовойДоговор,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределПФР,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФСС,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФОМС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСВыделеннымМРОТ.Период КАК Период,
		|	ДанныеСВыделеннымМРОТ.РасчетныйПериод КАК РасчетныйПериод,
		|	ДанныеСВыделеннымМРОТ.Организация КАК Организация,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеСВыделеннымМРОТ.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
		|	ДанныеСВыделеннымМРОТ.ФизическоеЛицоНаименование КАК ФизическоеЛицоНаименование,
		|	ДанныеСВыделеннымМРОТ.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ДанныеСВыделеннымМРОТ.ВидДохода КАК ВидДохода,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуПФР КАК ВходитВБазуПФР,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФСС КАК ВходитВБазуФСС,
		|	ДанныеСВыделеннымМРОТ.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
		|	ДанныеСВыделеннымМРОТ.ТипДоговора КАК ТипДоговора,
		|	ДанныеСВыделеннымМРОТ.Сумма КАК Сумма,
		|	ДанныеСВыделеннымМРОТ.Скидка КАК Скидка,
		|	ДанныеСВыделеннымМРОТ.БазаПФР КАК БазаПФР,
		|	ДанныеСВыделеннымМРОТ.БазаФОМС КАК БазаФОМС,
		|	ДанныеСВыделеннымМРОТ.БазаФСС КАК БазаФСС,
		|	ДанныеСВыделеннымМРОТ.БазаФСС_НС КАК БазаФСС_НС,
		|	ДанныеСВыделеннымМРОТ.ЭтоТрудовойДоговор КАК ЭтоТрудовойДоговор,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФР,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПределФСС,
		|	ДанныеСВыделеннымМРОТ.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПределФОМС
		|ПОМЕСТИТЬ ВТСведенияОДоходах
		|ИЗ
		|	ВТДанныеСВыделеннымМРОТСгруппированные КАК ДанныеСВыделеннымМРОТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.РасчетныйПериод,
		|	СведенияОДоходах.Организация,
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
		|	СведенияОДоходах.ФизическоеЛицоНаименование,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.ВидДохода,
		|	СведенияОДоходах.ВходитВБазуПФР,
		|	СведенияОДоходах.ВходитВБазуФСС,
		|	СведенияОДоходах.ВходитВБазуФОМС,
		|	СведенияОДоходах.ТипДоговора,
		|	СведенияОДоходах.Сумма,
		|	СведенияОДоходах.Скидка,
		|	СведенияОДоходах.БазаПФР,
		|	СведенияОДоходах.БазаФОМС,
		|	СведенияОДоходах.БазаФСС,
		|	СведенияОДоходах.БазаФСС_НС,
		|	СведенияОДоходах.ЭтоТрудовойДоговор,
		|	СведенияОДоходах.СуммаПревысившаяПределПФР,
		|	СведенияОДоходах.СуммаПревысившаяПределФСС,
		|	СведенияОДоходах.СуммаПревысившаяПределФОМС
		|ИЗ
		|	СведенияДоходахВременная КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизЛицаКОбработке КАК ФизЛицаКОбработке
		|		ПО СведенияОДоходах.ФизическоеЛицо = ФизЛицаКОбработке.ФизическоеЛицо
		|			И СведенияОДоходах.РасчетныйПериод = ФизЛицаКОбработке.РасчетныйПериод
		|			И СведенияОДоходах.Организация = ФизЛицаКОбработке.Организация
		|ГДЕ
		|	ФизЛицаКОбработке.ФизическоеЛицо ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДанныеСВыделеннымМРОТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДанныеСВыделеннымМРОТСгруппированные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СведенияДоходахВременная";
		Запрос.Выполнить();
	КонецЕсли;
	
	СформироватьВТПревышениеПредельнойВеличиныДохода(НачалоПериода, ОкончаниеПериода, Запрос.МенеджерВременныхТаблиц);
	СформироватьВТКодыВидовТарифаСтраховыхВзносов(Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.ФизическоеЛицоНаименование,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидДохода,
	|	СведенияОДоходах.ВходитВБазуПФР,
	|	СведенияОДоходах.ВходитВБазуФСС,
	|	СведенияОДоходах.ВходитВБазуФОМС,
	|	СведенияОДоходах.ЭтоТрудовойДоговор,
	|	СведенияОДоходах.ТипДоговора,
	|	СведенияОДоходах.Сумма,
	|	СведенияОДоходах.Скидка,
	|	СведенияОДоходах.БазаПФР КАК БазаПФР,
	|	СведенияОДоходах.БазаФСС КАК БазаФСС,
	|	СведенияОДоходах.БазаФСС_НС КАК БазаФСС_НС,
	|	СведенияОДоходах.БазаФОМС КАК БазаФОМС,
	|	ЕСТЬNULL(ПревышениеДоходаПФР.СуммаПревысившаяПредел, 0) КАК СуммаПревысившаяПределПФР,
	|	ЕСТЬNULL(ПревышениеДоходаФСС.СуммаПревысившаяПредел, 0) КАК СуммаПревысившаяПределФСС,
	|	ЕСТЬNULL(ПревышениеДоходаФОМС.СуммаПревысившаяПредел, 0) КАК СуммаПревысившаяПределФОМС
	|ПОМЕСТИТЬ ВТВременнаяТаблица
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеПредельнойВеличиныДоходаПФР КАК ПревышениеДоходаПФР
	|		ПО СведенияОДоходах.Период = ПревышениеДоходаПФР.Период
	|			И СведенияОДоходах.Организация = ПревышениеДоходаПФР.Организация
	|			И СведенияОДоходах.ФизическоеЛицо = ПревышениеДоходаПФР.ФизическоеЛицо
	|			И СведенияОДоходах.ВидТарифаСтраховыхВзносов = ПревышениеДоходаПФР.ВидТарифаСтраховыхВзносов
	|			И СведенияОДоходах.ЭтоТрудовойДоговор = ПревышениеДоходаПФР.ЭтоТрудовойДоговор
	|			И СведенияОДоходах.ВидДохода = ПревышениеДоходаПФР.ВидДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеПредельнойВеличиныДоходаФОМС КАК ПревышениеДоходаФОМС
	|		ПО СведенияОДоходах.Период = ПревышениеДоходаФОМС.Период
	|			И СведенияОДоходах.Организация = ПревышениеДоходаФОМС.Организация
	|			И СведенияОДоходах.ФизическоеЛицо = ПревышениеДоходаФОМС.ФизическоеЛицо
	|			И СведенияОДоходах.ВидТарифаСтраховыхВзносов = ПревышениеДоходаФОМС.ВидТарифаСтраховыхВзносов
	|			И СведенияОДоходах.ЭтоТрудовойДоговор = ПревышениеДоходаФОМС.ЭтоТрудовойДоговор
	|			И СведенияОДоходах.ВидДохода = ПревышениеДоходаФОМС.ВидДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеПредельнойВеличиныДоходаФСС КАК ПревышениеДоходаФСС
	|		ПО СведенияОДоходах.Период = ПревышениеДоходаФСС.Период
	|			И СведенияОДоходах.Организация = ПревышениеДоходаФСС.Организация
	|			И СведенияОДоходах.ФизическоеЛицо = ПревышениеДоходаФСС.ФизическоеЛицо
	|			И СведенияОДоходах.ВидТарифаСтраховыхВзносов = ПревышениеДоходаФСС.ВидТарифаСтраховыхВзносов
	|			И СведенияОДоходах.ЭтоТрудовойДоговор = ПревышениеДоходаФСС.ЭтоТрудовойДоговор
	|			И СведенияОДоходах.ВидДохода = ПревышениеДоходаФСС.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОДоходах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПревышениеПредельнойВеличиныДоходаПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПревышениеПредельнойВеличиныДоходаФОМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПревышениеПредельнойВеличиныДоходаФСС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица.Период,
	|	ВременнаяТаблица.Организация,
	|	ВременнаяТаблица.ФизическоеЛицо,
	|	ВременнаяТаблица.НачислятьНакопительнуюЧасть,
	|	ВременнаяТаблица.ФизическоеЛицоНаименование,
	|	ВременнаяТаблица.ВидТарифаСтраховыхВзносов,
	|	ВременнаяТаблица.ВидДохода,
	|	ВременнаяТаблица.ВходитВБазуПФР,
	|	ВременнаяТаблица.ВходитВБазуФСС,
	|	ВременнаяТаблица.ВходитВБазуФОМС,
	|	ВременнаяТаблица.ЭтоТрудовойДоговор,
	|	ВременнаяТаблица.ТипДоговора,
	|	ВременнаяТаблица.Сумма,
	|	ВременнаяТаблица.Скидка,
	|	ВременнаяТаблица.БазаПФР КАК БазаПФР,
	|	ВременнаяТаблица.БазаФСС КАК БазаФСС,
	|	ВременнаяТаблица.БазаФСС_НС КАК БазаФСС_НС,
	|	ВременнаяТаблица.БазаФОМС КАК БазаФОМС,
	|	ВременнаяТаблица.СуммаПревысившаяПределПФР,
	|	ВременнаяТаблица.СуммаПревысившаяПределФСС,
	|	ВременнаяТаблица.СуммаПревысившаяПределФОМС
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	ВТВременнаяТаблица КАК ВременнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВременнаяТаблица
	|; ";
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, Организация, МенеджерВременныхТаблиц, ЕстьОтборПоФизическимЛицам = Ложь) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ОбщийНалоговыйРежим")); 
	Запрос.УстановитьПараметр("УпрощенныйНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "УпрощенныйНалоговыйРежим")); 
	Запрос.УстановитьПараметр("ЕНВД", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ЕНВД")); 
	
	СформироватьВТРасширенныхСведенийОДоходах(НачалоПериода, ОкончаниеПериода, Организация, Запрос.МенеджерВременныхТаблиц, ЕстьОтборПоФизическимЛицам);
	// получаем временные таблицы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.Организация КАК Организация,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.Период КАК ПериодРегистрации,
	|	СУММА(СведенияОДоходах.Скидка) КАК Скидка,
	|	СУММА(СведенияОДоходах.Сумма) КАК НачисленоВсего,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА НЕ СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(СведенияОДоходах.СуммаПревысившаяПределПФР) / 10
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ИсчисленоПФРССуммПревышения,
	|	СУММА(СведенияОДоходах.БазаПФР - СведенияОДоходах.СуммаПревысившаяПределПФР) КАК БазаПФР
	|ПОМЕСТИТЬ ВТБазаПФР
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ПериодРегистрации,
	|	Организация,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|ВЫБРАТЬ
	|	Взносы.Организация КАК Организация,
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Взносы.ВидТарифаСтраховыхВзносов,
	|	Взносы.ПериодРегистрации КАК Период,
	|	СУММА(Взносы.ПФРПоСуммарномуТарифу) - ВЫБОР
	|		КОГДА СУММА(Взносы.ПФРПоСуммарномуТарифу) = 0
	|			ТОГДА 0
	|		КОГДА СУММА(ЕСТЬNULL(БазаВзносов.БазаПФР, 0)) = 0
	|				И СУММА(ЕСТЬNULL(БазаВзносов.ИсчисленоПФРССуммПревышения, 0)) <> 0
	|			ТОГДА СУММА(Взносы.ПФРПоСуммарномуТарифу)
	|		ИНАЧЕ СУММА(ЕСТЬNULL(БазаВзносов.ИсчисленоПФРССуммПревышения, 0))
	|	КОНЕЦ КАК ПФРПоСуммарномуТарифу,
	|	СУММА(Взносы.ПФРСтраховая) - ВЫБОР
	|		КОГДА СУММА(Взносы.ПФРСтраховая) = 0
	|			ТОГДА 0
	|		КОГДА СУММА(ЕСТЬNULL(БазаВзносов.БазаПФР, 0)) = 0
	|				И СУММА(ЕСТЬNULL(БазаВзносов.ИсчисленоПФРССуммПревышения, 0)) <> 0
	|			ТОГДА СУММА(Взносы.ПФРСтраховая)
	|		ИНАЧЕ СУММА(ЕСТЬNULL(БазаВзносов.ИсчисленоПФРССуммПревышения, 0))
	|	КОНЕЦ КАК ПФРСтраховая,
	|	ВЫБОР
	|		КОГДА СУММА(Взносы.ПФРСтраховая) + СУММА(Взносы.ПФРПоСуммарномуТарифу) = 0
	|			ТОГДА 0
	|		КОГДА СУММА(ЕСТЬNULL(БазаВзносов.БазаПФР, 0)) = 0
	|				И СУММА(ЕСТЬNULL(БазаВзносов.ИсчисленоПФРССуммПревышения, 0)) <> 0
	|			ТОГДА СУММА(Взносы.ПФРСтраховая) + СУММА(Взносы.ПФРПоСуммарномуТарифу)
	|		ИНАЧЕ СУММА(ЕСТЬNULL(БазаВзносов.ИсчисленоПФРССуммПревышения, 0))
	|	КОНЕЦ КАК ПФРССуммПревышения,
	|	СУММА(Взносы.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(Взносы.ФФОМС) КАК ФФОМС,
	|	СУММА(Взносы.ТФОМС) КАК ТФОМС,
	|	СУММА(Взносы.ФСС) КАК ФСС
	|ПОМЕСТИТЬ ВТСведенияОбИсчисленныхВзносах
	|ИЗ
	|	ВТРаспределенныеВзносыПФР КАК Взносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПФР КАК БазаВзносов
	|		ПО Взносы.ФизическоеЛицо = БазаВзносов.ФизическоеЛицо
	|			И Взносы.Организация = БазаВзносов.Организация
	|			И Взносы.ВидТарифаСтраховыхВзносов = БазаВзносов.ВидТарифаСтраховыхВзносов
	|			И Взносы.ПериодРегистрации = БазаВзносов.ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	Взносы.Организация,
	|	Взносы.ФизическоеЛицо,
	|	Взносы.ВидТарифаСтраховыхВзносов,
	|	Взносы.ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБазаПФР
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРаспределенныеВзносыПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.БазаПФР КАК ЗаМесяц,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидДохода
	|ПОМЕСТИТЬ ВТБазаРаспределения
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбИсчисленныхВзносах КАК СведенияОВзносах
	|		ПО СведенияОДоходах.ФизическоеЛицо = СведенияОВзносах.ФизическоеЛицо
	|			И СведенияОДоходах.Период = СведенияОВзносах.Период
	|			И СведенияОДоходах.ВидТарифаСтраховыхВзносов = СведенияОВзносах.ВидТарифаСтраховыхВзносов
	|			И СведенияОДоходах.Организация = СведенияОВзносах.Организация
	|ГДЕ
	|	СведенияОВзносах.ФизическоеЛицо ЕСТЬ НЕ NULL;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(СведенияОДоходах.ЗаМесяц) КАК ВсегоБазы,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц,
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.Организация
	|ПОМЕСТИТЬ ВТМаксимальнаяБаза
	|ИЗ
	|	ВТБазаРаспределения КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбИсчисленныхВзносах.Организация,
	|	СведенияОбИсчисленныхВзносах.ФизическоеЛицо,
	|	СведенияОбИсчисленныхВзносах.ВидТарифаСтраховыхВзносов,
	|	СведенияОбИсчисленныхВзносах.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ПФРПоСуммарномуТарифу КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ПФРПоСуммарномуТарифу,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ПФРСтраховая КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ПФРСтраховая,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ПФРССуммПревышения КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ПФРССуммПревышения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ПФРНакопительная КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ПФРНакопительная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ФФОМС КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ФФОМС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ТФОМС КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ТФОМС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазаРаспределения.ЗаМесяц, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОбщаяБаза.ВсегоБазы, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(СведенияОбИсчисленныхВзносах.ФСС КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаРаспределения.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОбщаяБаза.ВсегоБазы КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ФСС,
	|	БазаРаспределения.ВидДохода
	|ПОМЕСТИТЬ ВТВзносыБезОкругления
	|ИЗ
	|	ВТСведенияОбИсчисленныхВзносах КАК СведенияОбИсчисленныхВзносах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМаксимальнаяБаза КАК ОбщаяБаза
	|		ПО СведенияОбИсчисленныхВзносах.Организация = ОбщаяБаза.Организация
	|			И СведенияОбИсчисленныхВзносах.ФизическоеЛицо = ОбщаяБаза.ФизическоеЛицо
	|			И СведенияОбИсчисленныхВзносах.ВидТарифаСтраховыхВзносов = ОбщаяБаза.ВидТарифаСтраховыхВзносов
	|			И СведенияОбИсчисленныхВзносах.Период = ОбщаяБаза.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаРаспределения КАК БазаРаспределения
	|		ПО СведенияОбИсчисленныхВзносах.Организация = БазаРаспределения.Организация
	|			И СведенияОбИсчисленныхВзносах.ФизическоеЛицо = БазаРаспределения.ФизическоеЛицо
	|			И СведенияОбИсчисленныхВзносах.ВидТарифаСтраховыхВзносов = БазаРаспределения.ВидТарифаСтраховыхВзносов
	|			И СведенияОбИсчисленныхВзносах.Период = БазаРаспределения.Период
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.ФизическоеЛицоНаименование,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидДохода,
	|	СведенияОДоходах.ВходитВБазуПФР,
	|	СведенияОДоходах.ВходитВБазуФСС,
	|	СведенияОДоходах.ВходитВБазуФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ СведенияОДоходах.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.Сумма
	|			ИНАЧЕ СведенияОДоходах.Скидка
	|		КОНЕЦ) КАК НеОблагаетсяПФР,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ СведенияОДоходах.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.Сумма
	|			ИНАЧЕ СведенияОДоходах.Скидка
	|		КОНЕЦ) КАК НеОблагаетсяФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ СведенияОДоходах.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.Сумма
	|			ИНАЧЕ СведенияОДоходах.Скидка
	|		КОНЕЦ) КАК НеОблагаетсяФСС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ СведенияОДоходах.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.Сумма
	|			ИНАЧЕ СведенияОДоходах.Скидка
	|		КОНЕЦ) КАК НеОблагаетсяФСС_НС,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|				ТОГДА 0
	|			ИНАЧЕ СведенияОДоходах.Сумма
	|		КОНЕЦ) КАК НачисленоВсего,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеОткрытия)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеЛитературныеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеНаучныеТруды)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеСкульптуры)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеГрафическиеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеИсполнениеПроизведений)
	|				ТОГДА СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РасходыПоАвторскимПФР,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеОткрытия)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеАудиовизуальныеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеДругиеМузыкальныеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеЛитературныеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеМузыкальноСценическиеПроизведение)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеНаучныеТруды)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеСкульптуры)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеГрафическиеПроизведения)
	|					ИЛИ СведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.АвторскиеИсполнениеПроизведений)
	|				ТОГДА СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РасходыПоАвторскимФОМС,
	|	СУММА(СведенияОДоходах.Сумма) КАК Сумма,
	|	СУММА(СведенияОДоходах.Скидка) КАК Скидка,
	|	СУММА(СведенияОДоходах.БазаПФР) КАК БазаПФР,
	|	СУММА(СведенияОДоходах.БазаФСС) КАК БазаФСС,
	|	СУММА(СведенияОДоходах.БазаФСС_НС) КАК БазаФСС_НС,
	|	СУММА(СведенияОДоходах.БазаФОМС) КАК БазаФОМС,
	|	СУММА(СведенияОДоходах.СуммаПревысившаяПределПФР) КАК СуммаПревысившаяПределПФР,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА НЕ СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СведенияОДоходах.СуммаПревысившаяПределПФР) / 10 
	|	КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ИсчисленоПФРССуммПревышения,
	|	СУММА(СведенияОДоходах.СуммаПревысившаяПределФСС) КАК СуммаПревысившаяПределФСС,
	|	СУММА(СведенияОДоходах.СуммаПревысившаяПределФОМС) КАК СуммаПревысившаяПределФОМС,
	|	СУММА(СведенияОДоходах.СуммаПоТрудовомуДоговору) КАК СуммаПоТрудовомуДоговору,
	|	СУММА(СведенияОДоходах.СкидкаПоТрудовомуДоговору) КАК СкидкаПоТрудовомуДоговору,
	|	СУММА(СведенияОДоходах.БазаПФРПоТрудовомуДоговору) КАК БазаПФРПоТрудовомуДоговору,
	|	СУММА(СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору) КАК СуммаПревысившаяПределПФРПоТрудовомуДоговору,
	|	ИСТИНА КАК ЗастрахованПФР,
	|	ИСТИНА КАК ЗастрахованФОМС,
	|	ИСТИНА КАК ЗастрахованФСС
	|ПОМЕСТИТЬ ВТРасширенныеСведенияОДоходахИВзносах
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.Период КАК Период,
	|		СведенияОДоходах.Организация КАК Организация,
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.НачислятьНакопительнуюЧасть КАК НачислятьНакопительнуюЧасть,
	|		СведенияОДоходах.ФизическоеЛицоНаименование КАК ФизическоеЛицоНаименование,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		СведенияОДоходах.ВидДохода КАК ВидДохода,
	|		СведенияОДоходах.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|		СведенияОДоходах.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|		СведенияОДоходах.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
	|		СведенияОДоходах.Сумма КАК Сумма,
	|		СведенияОДоходах.Скидка КАК Скидка,
	|		СведенияОДоходах.БазаПФР КАК БазаПФР,
	|		СведенияОДоходах.БазаФСС КАК БазаФСС,
	|		СведенияОДоходах.БазаФСС_НС КАК БазаФСС_НС,
	|		СведенияОДоходах.БазаФОМС КАК БазаФОМС,
	|		СведенияОДоходах.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФР,
	|		СведенияОДоходах.СуммаПревысившаяПределФСС КАК СуммаПревысившаяПределФСС,
	|		СведенияОДоходах.СуммаПревысившаяПределФОМС КАК СуммаПревысившаяПределФОМС,
	|		СведенияОДоходах.Сумма КАК СуммаПоТрудовомуДоговору,
	|		СведенияОДоходах.Скидка КАК СкидкаПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР КАК БазаПФРПоТрудовомуДоговору,
	|		СведенияОДоходах.СуммаПревысившаяПределПФР КАК СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|	ИЗ
	|		ВТСведенияОДоходах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.ЭтоТрудовойДоговор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.Период,
	|		СведенияОДоходах.Организация,
	|		СведенияОДоходах.ФизическоеЛицо,
	|		СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|		СведенияОДоходах.ФизическоеЛицоНаименование,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|		СведенияОДоходах.ВидДохода,
	|		СведенияОДоходах.ВходитВБазуПФР,
	|		СведенияОДоходах.ВходитВБазуФСС,
	|		СведенияОДоходах.ВходитВБазуФОМС,
	|		СведенияОДоходах.Сумма,
	|		СведенияОДоходах.Скидка,
	|		СведенияОДоходах.БазаПФР,
	|		СведенияОДоходах.БазаФСС,
	|		СведенияОДоходах.БазаФСС_НС,
	|		СведенияОДоходах.БазаФОМС,
	|		СведенияОДоходах.СуммаПревысившаяПределПФР,
	|		СведенияОДоходах.СуммаПревысившаяПределФСС,
	|		СведенияОДоходах.СуммаПревысившаяПределФОМС,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВТСведенияОДоходах КАК СведенияОДоходах
	|	ГДЕ
	|		НЕ СведенияОДоходах.ЭтоТрудовойДоговор) КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.ФизическоеЛицоНаименование,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидДохода,
	|	СведенияОДоходах.ВходитВБазуПФР,
	|	СведенияОДоходах.ВходитВБазуФСС,
	|	СведенияОДоходах.ВходитВБазуФОМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.ФизическоеЛицоНаименование,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидДохода,
	|	СведенияОДоходах.ВходитВБазуПФР,
	|	СведенияОДоходах.ВходитВБазуФСС,
	|	СведенияОДоходах.ВходитВБазуФОМС,
	|	СведенияОДоходах.НеОблагаетсяПФР,
	|	СведенияОДоходах.НеОблагаетсяФОМС,
	|	СведенияОДоходах.НеОблагаетсяФСС,
	|	СведенияОДоходах.НеОблагаетсяФСС_НС,
	|	СведенияОДоходах.НачисленоВсего,
	|	СведенияОДоходах.РасходыПоАвторскимПФР,
	|	СведенияОДоходах.РасходыПоАвторскимФОМС,
	|	СведенияОДоходах.Сумма,
	|	СведенияОДоходах.Скидка,
	|	СведенияОДоходах.БазаПФР,
	|	СведенияОДоходах.БазаФСС,
	|	СведенияОДоходах.БазаФСС_НС,
	|	СведенияОДоходах.БазаФОМС,
	|	СведенияОДоходах.СуммаПревысившаяПределПФР,
	|	СведенияОДоходах.ИсчисленоПФРССуммПревышения,
	|	СведенияОДоходах.СуммаПревысившаяПределФСС,
	|	СведенияОДоходах.СуммаПревысившаяПределФОМС,
	|	СведенияОДоходах.СуммаПоТрудовомуДоговору,
	|	СведенияОДоходах.СкидкаПоТрудовомуДоговору,
	|	СведенияОДоходах.БазаПФРПоТрудовомуДоговору,
	|	СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору,
	|	ЕСТЬNULL(РасширенныеСведенияОбИсчисленныхВзносах.ПФРПоСуммарномуТарифу, 0) КАК ПФРПоСуммарномуТарифу,
	|	ЕСТЬNULL(РасширенныеСведенияОбИсчисленныхВзносах.ПФРСтраховая, 0) КАК ПФРСтраховая,
	|	ЕСТЬNULL(РасширенныеСведенияОбИсчисленныхВзносах.ПФРНакопительная, 0) КАК ПФРНакопительная,
	|	ЕСТЬNULL(РасширенныеСведенияОбИсчисленныхВзносах.ФФОМС, 0) КАК ФФОМС,
	|	ЕСТЬNULL(РасширенныеСведенияОбИсчисленныхВзносах.ФСС, 0) КАК ФСС,
	|	СведенияОДоходах.ЗастрахованПФР,
	|	СведенияОДоходах.ЗастрахованФОМС,
	|	СведенияОДоходах.ЗастрахованФСС
	|ПОМЕСТИТЬ ВТВременнаяТаблица
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтВзносыБезОкругления КАК РасширенныеСведенияОбИсчисленныхВзносах
	|		ПО СведенияОДоходах.Период = РасширенныеСведенияОбИсчисленныхВзносах.Период
	|			И СведенияОДоходах.Организация = РасширенныеСведенияОбИсчисленныхВзносах.Организация
	|			И СведенияОДоходах.ФизическоеЛицо = РасширенныеСведенияОбИсчисленныхВзносах.ФизическоеЛицо
	|			И СведенияОДоходах.ВидТарифаСтраховыхВзносов = РасширенныеСведенияОбИсчисленныхВзносах.ВидТарифаСтраховыхВзносов
	|			И СведенияОДоходах.ВидДохода = РасширенныеСведенияОбИсчисленныхВзносах.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРасширенныеСведенияОДоходахИВзносах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтВзносыБезОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.НачислятьНакопительнуюЧасть,
	|	СведенияОДоходах.ФизическоеЛицоНаименование,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидДохода,
	|	СведенияОДоходах.ВходитВБазуПФР,
	|	СведенияОДоходах.ВходитВБазуФСС,
	|	СведенияОДоходах.ВходитВБазуФОМС,
	|	СведенияОДоходах.НеОблагаетсяПФР,
	|	СведенияОДоходах.НеОблагаетсяФОМС,
	|	СведенияОДоходах.НеОблагаетсяФСС,
	|	СведенияОДоходах.НеОблагаетсяФСС_НС,
	|	СведенияОДоходах.НачисленоВсего,
	|	СведенияОДоходах.РасходыПоАвторскимПФР,
	|	СведенияОДоходах.РасходыПоАвторскимФОМС,
	|	СведенияОДоходах.Сумма,
	|	СведенияОДоходах.Скидка,
	|	СведенияОДоходах.БазаПФР,
	|	СведенияОДоходах.БазаФСС,
	|	СведенияОДоходах.БазаФСС_НС,
	|	СведенияОДоходах.БазаФОМС,
	|	СведенияОДоходах.СуммаПревысившаяПределПФР,
	|	СведенияОДоходах.ИсчисленоПФРССуммПревышения,
	|	СведенияОДоходах.СуммаПревысившаяПределФСС,
	|	СведенияОДоходах.СуммаПревысившаяПределФОМС,
	|	СведенияОДоходах.СуммаПоТрудовомуДоговору,
	|	СведенияОДоходах.СкидкаПоТрудовомуДоговору,
	|	СведенияОДоходах.БазаПФРПоТрудовомуДоговору,
	|	СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору,
	|	СведенияОДоходах.ПФРПоСуммарномуТарифу,
	|	СведенияОДоходах.ПФРСтраховая,
	|	СведенияОДоходах.ПФРНакопительная,
	|	СведенияОДоходах.ФФОМС,
	|	СведенияОДоходах.ФСС,
	|	СведенияОДоходах.ЗастрахованПФР,
	|	СведенияОДоходах.ЗастрахованФОМС,
	|	СведенияОДоходах.ЗастрахованФСС
	|ПОМЕСТИТЬ ВТРасширенныеСведенияОДоходахИВзносах
	|ИЗ
	|	ВТВременнаяТаблица КАК СведенияОДоходах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВременнаяТаблица;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВходитВБазуПФР
	|					ИЛИ СведенияОДоходах.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	&КонецОтчетногоПериода КАК Период
	|ПОМЕСТИТЬ ВТФизЛицаСОблагаемойБазой
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.Организация = &Организация
	|	И НЕ СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизическоеЛицо
	|				ИЗ
	|					ВТФизлицаБезОблагаемойБазы КАК Организации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует ВТ "ВТСоответствиеТарифаИВидаЗЛКатегории" содержащую соответствие тарифов страховых взносов
// категориям застрахованных лиц
//
// Параметры
//  МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещена, сформированная таблица
//
Процедура СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(МенеджерВременныхТаблиц)Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка КАК ВидТарифаСтраховыхВзносов,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР) КАК КатегорияЗастрахованныхЛиц,
	|	1 КАК Порядок,
	|	2010 КАК ГодС,
	|	2100 КАК ГодПо
	|ПОМЕСТИТЬ ВТСоответствиеТарифаКатегории
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ОбщийНалоговыйРежим""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2011,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""УпрощенныйНалоговыйРежим""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2015,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""СельХозПроизводители""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2015,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""НародныеХудожественныеПромыслы""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2015,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ОрганизацияИнвалидов""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2020,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""РезидентТехникоВнедренческойЗоны""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2015,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""СМИ""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2020,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ХозОбществаБюджетныхВУЗов""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2020,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ITОрганизации""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2019,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""УпрощенныйНалоговыйРежимПроизводство""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2015,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ЕСХН""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ИЦС),
	|	6,
	|	2010,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""УчастникПроектаИнновационныйЦентрСколково""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.СХ),
	|	2,
	|	2010,
	|	2014
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""СельХозПроизводители""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ХМН),
	|	2,
	|	2011,
	|	2014
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""НародныеХудожественныеПромыслы""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ООИ),
	|	3,
	|	2011,
	|	2014
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ОрганизацияИнвалидов""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ТВЭЗ),
	|	3,
	|	2011,
	|	2019
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""РезидентТехникоВнедренческойЗоны""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.СМИ),
	|	3,
	|	2011,
	|	2014
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""СМИ""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ХО),
	|	3,
	|	2011,
	|	2019
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ХозОбществаБюджетныхВУЗов""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ОДИТ),
	|	3,
	|	2011,
	|	2019
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ITОрганизации""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПНЭД),
	|	3,
	|	2011,
	|	2018
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""УпрощенныйНалоговыйРежимПроизводство""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ЕСХН),
	|	4,
	|	2010,
	|	2014
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ЕСХН""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.АСБ),
	|	1,
	|	2012,
	|	2018
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""НекоммерческиеОрганизации""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.АСБ),
	|	1,
	|	2012,
	|	2018
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""БлаготворительныеОрганизации""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.АСБ),
	|	1,
	|	2012,
	|	2013
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ОрганизацииОказывающиеИнжиниринговыеУслуги""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.АСБ),
	|	3,
	|	2012,
	|	2018
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ДляФармацевтовАптек""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ЧЭС),
	|	3,
	|	2012,
	|	2027
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ДляЧленовЭкипажейМорскихСудовПодФлагомРФ""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.АСБ),
	|	3,
	|	2012,
	|	2013
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ИндивидуальныйПредпринимательПрименяющийПатент""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПНЭД),
	|	3,
	|	2014,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ИндивидуальныйПредпринимательПрименяющийПатент""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.КВ),
	|	6,
	|	2020,
	|	2020
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ДляОтраслейПострадавшихОтКоронавируснойИнфекции""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка,
	|	 ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.НР),
	|	1,
	|	2010,
	|	2100
	|ИЗ
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.ИдентификаторОбъекта = ""ЕНВД""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеТарифаКатегории.ВидТарифаСтраховыхВзносов,
	|	СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц,
	|	1 КАК Порядок,
	|	СоответствиеТарифаКатегории.ГодС,
	|	СоответствиеТарифаКатегории.ГодПо,
	|	1 КАК ДополнительныйПорядок
	|ПОМЕСТИТЬ ВТСоответствиеТарифаИВидаЗЛКатегории
	|ИЗ
	|	ВТСоответствиеТарифаКатегории КАК СоответствиеТарифаКатегории
	|ГДЕ (СоответствиеТарифаКатегории.ГодПо >= 2012)
	|";
	Запрос.Выполнить();
	
КонецПроцедуры	

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТДанныеОФактеНачисленияВзносов, которая содержит следующие поля
//		ФизическоеЛицо.
//		НачисленоНаОПС - булево, флажок, означающий, что за ФизическоеЛицо уплачивались взносы в ПФР на ОПС.
//		НачисленоПоДополнительнымТарифам - булево, флажок, означающий, что за ФизическоеЛицо уплачивались взносы в ПФР по
//		                                   доп.тарифам за вредников.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещена сформированная 
//								временная таблица;
//			содержит вр.таблицу ВТФизическиеЛица с полями:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - должно быть непустым.
//  	    * Период - дата - должно быть непустым.
//		Организация - СправочникСсылка.Организации - организация, включая обособленные подразделения с выделенным балансом.
//		НачалоПериода - дата -
//		ОкончаниеПериода - дата -
//
Процедура СформироватьВТДанныеОФактеНачисленияВзносовВПФР(МенеджерВременныхТаблиц, Организация, НачалоПериода, ОкончаниеПериода)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ОкончаниеПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Сотрудник КАК ФизическоеЛицо,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Период КАК МесяцОтчетногоПериода,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников В (ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРПоСуммарномуТарифу))
	|				ТОГДА РасчетыСФондамиПоСтраховымВзносамОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНаОПС,
	|	0 КАК ПФРПоДополнительномуТарифу
	|ПОМЕСТИТЬ ВТИсчисленоПоЗЛ
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			Сотрудник В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.ФизическоеЛицо
	|					ИЗ
	|						ВТФизическиеЛица КАК ФизическиеЛица)
	|				И Организация = &Организация) КАК РасчетыСФондамиПоСтраховымВзносамОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Сотрудник,
	|	РасчетыСФондамиПоСтраховымВзносамОбороты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходящиеНаПенсию.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(ИсчисленоПоЗЛ.ПФРНаОПС), 0) КАК ПФРНаОПС,
	|	ЕСТЬNULL(СУММА(ИсчисленоПоЗЛ.ПФРПоДополнительномуТарифу), 0) КАК ПФРПоДополнительномуТарифу
	|ПОМЕСТИТЬ ВТНачисленоПоДатуСоставления
	|ИЗ
	|	ВТФизическиеЛица КАК ВыходящиеНаПенсию
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленоПоЗЛ КАК ИсчисленоПоЗЛ
	|		ПО ВыходящиеНаПенсию.Период > ИсчисленоПоЗЛ.МесяцОтчетногоПериода
	|			И ВыходящиеНаПенсию.ФизическоеЛицо = ИсчисленоПоЗЛ.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходящиеНаПенсию.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА РасчетныеДанные.ПФРНаОПС > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачисленоНаОПС,
	|	ВЫБОР
	|		КОГДА РасчетныеДанные.ПФРПоДополнительномуТарифу > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачисленоПоДополнительнымТарифам
	|ПОМЕСТИТЬ ВТДанныеОФактеНачисленияВзносов
	|ИЗ
	|	ВТНачисленоПоДатуСоставления КАК РасчетныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленоПоДатуСоставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИсчисленоПоЗЛ";
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура СоздатьВТСведенияОЗаработке2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора) Экспорт
	ВариантыИсточниковДанныхСведенийОЗаработке = ПерсонифицированныйУчет.ВариантыИсточниковДанныхСведенийОЗаработке();	
	
	Если ПараметрыПолученияЗаработка.ИсточникДанныхСведенийОЗаработке = ВариантыИсточниковДанныхСведенийОЗаработке.ДанныеУчета Тогда
			
		СоздатьВТСведенияОЗаработкеИзДанныхУчета2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора);	
		
	ИначеЕсли ПараметрыПолученияЗаработка.ИсточникДанныхСведенийОЗаработке = ВариантыИсточниковДанныхСведенийОЗаработке.ДанныеУчетаИФиксированныеДанныеДокументов Тогда 
		
		СоздатьВТСведенияОЗаработкеИзДанныхУчетаИФиксДанныхДокументов2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора);	
		
	ИначеЕсли ПараметрыПолученияЗаработка.ИсточникДанныхСведенийОЗаработке = ВариантыИсточниковДанныхСведенийОЗаработке.ДанныеКорректируемыхДокументов Тогда		
		
		СоздатьВТСведенияОЗаработкеИзДаннымКорректируемыхДокументов2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора);
		
	Иначе
		СоздатьВТСведенияОЗаработкеДляОтменяющихСведений2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора)	
		
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьВТСведенияОЗаработкеДляОтменяющихСведений2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора) 
	ВариантыИсточниковДанныхСведенийОЗаработке = ПерсонифицированныйУчет.ВариантыИсточниковДанныхСведенийОЗаработке();
	
	Если ПараметрыПолученияЗаработка.ИсточникДанныхСведенийОЗаработке = ВариантыИсточниковДанныхСведенийОЗаработке.ДанныеКорректируемыхДокументовОтменяемые Тогда
		СоздатьВТСведенияОЗаработкеИзДаннымКорректируемыхДокументов2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, "Промежуточный");	
	ИначеЕсли ПараметрыПолученияЗаработка.ИсточникДанныхСведенийОЗаработке = ВариантыИсточниковДанныхСведенийОЗаработке.ДанныеУчетаОтменяемые Тогда 
		СоздатьВТСведенияОЗаработкеИзДанныхУчета2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, "Промежуточный");	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОЗаработке.ФизическоеЛицо,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.Месяц,
	|	0 КАК Заработок,
	|	0 КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	0 КАК ПоДоговорамГПХДоПредельнойВеличины,
	|	0 КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ЛОЖЬ КАК ФиксЗаработок
	|ПОМЕСТИТЬ ВТСведенияОЗаработке
	|ИЗ
	|	ВТСведенияОЗаработкеПромежуточный КАК СведенияОЗаработке
	|ГДЕ
	|	СведенияОЗаработке.Месяц = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФизическоеЛицо,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.КлассУсловийТруда КАК КлассУсловийТруда,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.Месяц,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФиксЗаработок КАК ФиксЗаработок
	|ПОМЕСТИТЬ ВТСведенияОЗаработкеПоКлассамУсловийТруда
	|ИЗ
	|	ВТСведенияОЗаработкеПоКлассамУсловийТрудаПромежуточный КАК СведенияОЗаработкеПоКлассамУсловийТруда
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОЗаработкеПромежуточный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОЗаработкеПоКлассамУсловийТрудаПромежуточный";
	
	Запрос.Выполнить();
	
КонецПроцедуры	


Процедура СоздатьВТСведенияОЗаработкеИзДанныхУчета2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, ПостфиксВТРезульт = "")
	
	ТаблицыЗаработка = Новый Структура("СведенияОЗаработке, СведенияОЗаработкеПоКлассамУсловийТруда");
	
	СоздатьТаблицыСведенийОЗаработке(Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, ПостфиксВТРезульт, ТаблицыЗаработка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СведенияОЗаработкеПоКлассамУсловийТруда", ТаблицыЗаработка.СведенияОЗаработкеПоКлассамУсловийТруда);
	Запрос.УстановитьПараметр("СведенияОЗаработке", ТаблицыЗаработка.СведенияОЗаработке);
	ТаблицыЗаработка = Неопределено;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПараметрыПолученияЗаработка.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ 
		И ПараметрыПолученияЗаработка.КорректируемыеДокументы.Количество() > 0 Тогда 
		
		СоздатьВТСведенияОЗаработкеИзДаннымКорректируемыхДокументов2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, "Корректируемый");
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	0 КАК Месяц,
		|	0 КАК Заработок,
		|	0 КАК ОблагаетсяВзносамиДоПредельнойВеличины,
		|	0 КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
		|	0 КАК ПоДоговорамГПХДоПредельнойВеличины,
		|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка) КАК КатегорияЗастрахованныхЛиц,
		|	ЛОЖЬ КАК ФиксЗаработок
		|ПОМЕСТИТЬ ВТСведенияОЗаработкеКорректируемый
		|ГДЕ
		|	ЛОЖЬ";
		
		Запрос.Выполнить();
	КонецЕсли;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОЗаработке.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОЗаработке.Месяц КАК Месяц,
	|	СведенияОЗаработке.Заработок КАК Заработок,
	|	СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины КАК ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.ФиксЗаработок КАК ФиксЗаработок
	|ПОМЕСТИТЬ ВТТаблицаСведенияОЗаработке
	|ИЗ
	|	&СведенияОЗаработке КАК СведенияОЗаработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОЗаработке.ФизическоеЛицо,
	|	СведенияОЗаработке.Месяц,
	|	СУММА(СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины) КАК ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	МАКСИМУМ(СведенияОЗаработке.ФиксЗаработок) КАК ФиксЗаработок
	|ПОМЕСТИТЬ #ВТСведенияОЗаработке
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОЗаработке.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОЗаработке.Месяц КАК Месяц,
	|		СведенияОЗаработке.Заработок КАК Заработок,
	|		СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|		СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины КАК ПоДоговорамГПХДоПредельнойВеличины,
	|		СведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		СведенияОЗаработке.ФиксЗаработок КАК ФиксЗаработок
	|	ИЗ
	|		ВТТаблицаСведенияОЗаработке КАК СведенияОЗаработке
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОЗаработкеКорректируемый.ФизическоеЛицо,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		СведенияОЗаработкеКорректируемый.КатегорияЗастрахованныхЛиц,
	|		ЛОЖЬ
	|	ИЗ
	|		ВТСведенияОЗаработкеКорректируемый КАК СведенияОЗаработкеКорректируемый
	|	ГДЕ
	|		СведенияОЗаработкеКорректируемый.Месяц <> 0) КАК СведенияОЗаработке
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОЗаработке.ФизическоеЛицо,
	|	СведенияОЗаработке.Месяц,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц";
	
	ТекстЗапросаВТСведенияОЗаработкеПоКлассамУсловийТруда = 
	"ВЫБРАТЬ
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФизическоеЛицо,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.Месяц,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.КлассУсловийТруда,
	|	ЛОЖЬ КАК ФиксЗаработок
	|ПОМЕСТИТЬ ВТСведенияОЗаработкеПоКлассамУсловийТруда
	|ИЗ
	|	&СведенияОЗаработкеПоКлассамУсловийТруда КАК СведенияОЗаработкеПоКлассамУсловийТруда";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСведенияОЗаработке", "ВТСведенияОЗаработке" + ПостфиксВТРезульт);
	ТекстЗапросаВТСведенияОЗаработкеПоКлассамУсловийТруда = СтрЗаменить(ТекстЗапросаВТСведенияОЗаработкеПоКлассамУсловийТруда, "ВТСведенияОЗаработкеПоКлассамУсловийТруда", "ВТСведенияОЗаработкеПоКлассамУсловийТруда" + ПостфиксВТРезульт);

	Запрос.Текст = Запрос.Текст + "
		|;" +  ТекстЗапросаВТСведенияОЗаработкеПоКлассамУсловийТруда;
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТСведенияОЗаработкеИзДанныхУчетаИФиксДанныхДокументов2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора)
	СоздатьВТСведенияОЗаработкеИзДанныхУчета2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, "ИзДанныхУчета");	
	
	СоздатьВТФиксированныеСведенияОЗаработкеИзДокументов2014(МенеджерВременныхТаблиц, ПараметрыПолученияЗаработка, ПараметрыОтбора);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОЗаработкеИзДанныхУчета.ФизическоеЛицо,
	|	СведенияОЗаработкеИзДанныхУчета.Месяц,
	|	СведенияОЗаработкеИзДанныхУчета.Заработок,
	|	СведенияОЗаработкеИзДанныхУчета.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОЗаработкеИзДанныхУчета.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СведенияОЗаработкеИзДанныхУчета.ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОЗаработкеИзДанныхУчета.КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработкеИзДанныхУчета.ФиксЗаработок
	|ПОМЕСТИТЬ ВТСведенияОЗаработке
	|ИЗ
	|	ВТСведенияОЗаработкеИзДанныхУчета КАК СведенияОЗаработкеИзДанныхУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФиксированныеСведенияОЗаработкеИзДокументов КАК ФиксированныеСведенияОЗаработкеИзДокументов
	|		ПО СведенияОЗаработкеИзДанныхУчета.ФизическоеЛицо = ФиксированныеСведенияОЗаработкеИзДокументов.ФизическоеЛицо
	|ГДЕ
	|	ФиксированныеСведенияОЗаработкеИзДокументов.ФизическоеЛицо ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФиксированныеСведенияОЗаработкеИзДокументов.ФизическоеЛицо,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.Месяц,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.Заработок,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.ПоДоговорамГПХДоПредельнойВеличины,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.КатегорияЗастрахованныхЛиц,
	|	ФиксированныеСведенияОЗаработкеИзДокументов.ФиксЗаработок
	|ИЗ
	|	ВТФиксированныеСведенияОЗаработкеИзДокументов КАК ФиксированныеСведенияОЗаработкеИзДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.ФизическоеЛицо,
	|	СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.Месяц,
	|	СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.КлассУсловийТруда,
	|	СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.ФиксЗаработок
	|ПОМЕСТИТЬ ВТСведенияОЗаработкеПоКлассамУсловийТруда
	|ИЗ
	|	ВТСведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета КАК СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов КАК ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов
	|		ПО СведенияОЗаработкеПоКлассамУсловийТрудаИзДанныхУчета.ФизическоеЛицо = ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.ФизическоеЛицо
	|ГДЕ
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.ФизическоеЛицо ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.ФизическоеЛицо,
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.Месяц,
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.КлассУсловийТруда,
	|	ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов.ФиксЗаработок
	|ИЗ
	|	ВТФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов КАК ФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов";
	
	Запрос.Выполнить();
КонецПроцедуры	

Процедура СоздатьВТСведенияОЗаработкеИзДаннымКорректируемыхДокументов2014(МенеджерВременныхТаблиц, Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, ПостфиксВТРезультат = "")
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокФизическихЛиц", ПараметрыОтбора.СписокФизическихЛиц);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("УчитываемыеДокументы", ПараметрыПолученияЗаработка.УчитываемыеДокументы);
	
	СоздатьВТКорректируемыеДокументыПоЗастрахованнымЛицам(МенеджерВременныхТаблиц, ПараметрыПолученияЗаработка.КорректируемыеДокументы, ПараметрыОтбора);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Заработок,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ПоДоговорамГПХДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок КАК ФиксЗаработок
	|ПОМЕСТИТЬ #ВТСведенияОЗаработкеОсновной
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКорректируемыеДокументыПоЗастрахованнымЛицам КАК КорректируемыеДокументыЗЛПоКатегориямТипамДоговоров
	|		ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = КорректируемыеДокументыЗЛПоКатегориямТипамДоговоров.Ссылка
	|			И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник = КорректируемыеДокументыЗЛПоКатегориямТипамДоговоров.ФизическоеЛицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|		ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Сотрудник
	|			И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка
	|			И (&УсловиеСотрудники)
	|			И (ВЫБОР
	|				КОГДА ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					ТОГДА ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ОтчетныйПериод
	|				ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.КорректируемыйПериод
	|			КОНЕЦ = &ОтчетныйПериод)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КлассУсловийТруда КАК КлассУсловийТруда,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок КАК ФиксЗаработок
	|ПОМЕСТИТЬ #ВТСведенияОЗаработкеПоКлассамУсловийТруда
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКорректируемыеДокументыПоЗастрахованнымЛицам КАК КорректируемыеДокументыЗЛПоКатегориямТипамДоговоров
	|		ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = КорректируемыеДокументыЗЛПоКатегориямТипамДоговоров.Ссылка
	|			И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник = КорректируемыеДокументыЗЛПоКатегориямТипамДоговоров.ФизическоеЛицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|		ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Сотрудник
	|			И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|			И (&УсловиеСотрудники)
	|			И (ВЫБОР
	|				КОГДА ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					ТОГДА ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.ОтчетныйПериод
	|				ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка.КорректируемыйПериод
	|			КОНЕЦ = &ОтчетныйПериод)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКорректируемыеДокументыПоЗастрахованнымЛицам";
	
		
	Если ПараметрыОтбора.ТипДоговора = Неопределено Тогда
		ТекстУсловиеСотрудники = "ИСТИНА";
	Иначе	
		ТекстУсловиеСотрудники = "ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник В (&СписокФизическихЛиц)";
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСотрудники", ТекстУсловиеСотрудники);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСведенияОЗаработкеОсновной", "ВТСведенияОЗаработке" + ПостфиксВТРезультат);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСведенияОЗаработкеПоКлассамУсловийТруда", "ВТСведенияОЗаработкеПоКлассамУсловийТруда" + ПостфиксВТРезультат);
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТФиксированныеСведенияОЗаработкеИзДокументов2014(МенеджерВременныхТаблиц, ПараметрыПолученияЗаработка, ПараметрыОтбора)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", ПараметрыОтбора.КатегорияЗастрахованныхЛиц);
	Запрос.УстановитьПараметр("ТипДоговора", ПараметрыОтбора.ТипДоговора);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", ПараметрыОтбора.СписокФизическихЛиц);
	Запрос.УстановитьПараметр("УчитываемыеДокументы", ПараметрыПолученияЗаработка.УчитываемыеДокументы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок КАК ФиксЗаработок,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТФиксированныеСведенияОЗаработкеИзДокументов
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|		ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Сотрудник
	|			И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка В (&УчитываемыеДокументы))
	|			И (ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В (&УчитываемыеДокументы))
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок)
	|			И (&УсловиеСотрудники)
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КлассУсловийТруда КАК КлассУсловийТруда,
	|	ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок КАК ФиксЗаработок,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ПОМЕСТИТЬ ВТФиксированныеСведенияОЗаработкеПоКлассамУсловийТрудаИзДокументов
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК ПачкаРазделов6РасчетаРСВ_1Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|		ПО ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Сотрудник
	|			И ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.Ссылка В (&УчитываемыеДокументы))
	|			И (ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В (&УчитываемыеДокументы))
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок)
	|			И (&УсловиеСотрудники)
	|			И (ПачкаРазделов6РасчетаРСВ_1Сотрудники.ФиксЗаработок)";	
	
		
	Если ПараметрыОтбора.ТипДоговора = Неопределено Тогда
		ТекстУсловиеСотрудники = "ИСТИНА";
	Иначе	
		ТекстУсловиеСотрудники = "ПачкаРазделов6РасчетаРСВ_1Сотрудники.Сотрудник В (&СписокФизическихЛиц)";
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеСотрудники", ТекстУсловиеСотрудники);
	
	Запрос.Выполнить();
КонецПроцедуры	

Процедура СоздатьТаблицыСведенийОЗаработке(Организация, ОтчетныйПериод, ПараметрыПолученияЗаработка, ПараметрыОтбора, ПостфиксВТРезульт, ТаблицыЗаработка)
	
	ГоловнаяОрганизация = Организация;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", СписокНестрахуемыхВидовДохода());
	Запрос.УстановитьПараметр("НачалоПериода", ОтчетныйПериод);
	ОкончаниеПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ОтчетныйПериод));
	
	// Рассчитываем данные для заполнения строк 400 и 700 - нарастающим итогом за год, с учетом исправлений.
	Если ПараметрыОтбора.СписокФизическихЛиц = Неопределено Тогда
		
		МенеджерВременныхТаблицПромежуточный = Новый МенеджерВременныхТаблиц;
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоГода(ОтчетныйПериод), ОкончаниеПериода, Организация, МенеджерВременныхТаблицПромежуточный, Истина);
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблицПромежуточный;
		
	Иначе

		МенеджерВременныхТаблицПромежуточный = Новый МенеджерВременныхТаблиц;
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблицПромежуточный;
		Запрос.УстановитьПараметр("ФизЛица", ПараметрыОтбора.СписокФизическихЛиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&ФизЛица)";
		
		Запрос.Выполнить();
		
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоГода(ОтчетныйПериод), ОкончаниеПериода, Организация, МенеджерВременныхТаблицПромежуточный, Истина);
		
	КонецЕсли;
			
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ВидЗастрахованногоЛица,
	|	СведенияОДоходах.Сумма,
	|	СведенияОДоходах.БазаПФР,
	|	СведенияОДоходах.СуммаПревысившаяПределПФР,
	|	СведенияОДоходах.БазаПФРПоТрудовомуДоговору,
	|	СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыПоТрудовомуДоговору,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыПоТрудовомуДоговору
	|ПОМЕСТИТЬ ВТДоходыСУчетомПерерасчетов
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|	И СведенияОДоходах.Период МЕЖДУ &НачалоГода И &ОкончаниеПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботы КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботы КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка) КАК КлассУсловийТруда
	|ПОМЕСТИТЬ ВТДоходыПоКлассамУсловийТрудаСУчетомПерерасчетов
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыОпасный,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыОпасный,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный1,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный1,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный2,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный2,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный3,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный3,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный4,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный4,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРасширенныеСведенияОДоходах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРазмерыТарифныхСтавок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеОбИнвалидности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИспользуемыеТарифы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОписаниеТарифов";
	Запрос.Выполнить();
	
	// Рассчитываем данные для заполнения строк 40х и 70х - за текущий квартал, для исходных форм - без учета исправлений.
	СформироватьВТРасширенныеСведенияОДоходахИВзносах(
		НачалоГода(ОтчетныйПериод), 
		ОкончаниеПериода, 
		Организация, 
		МенеджерВременныхТаблицПромежуточный, 
		Истина); 
		
	СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(МенеджерВременныхТаблицПромежуточный);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходахПоТарифам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахПоТарифам.Период КАК Период,
	|	СведенияОДоходахПоТарифам.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходахПоТарифам.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
	|	СведенияОДоходахПоТарифам.Месяц КАК Месяц,
	|	СведенияОДоходахПоТарифам.Заработок КАК Заработок,
	|	СведенияОДоходахПоТарифам.ОблагаетсяВзносамиДоПредельнойВеличины КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СведенияОДоходахПоТарифам.ПоДоговорамГПХДоПредельнойВеличины КАК ПоДоговорамГПХДоПредельнойВеличины,
	|	СведенияОДоходахПоТарифам.ОблагаетсяВзносамиСвышеПредельнойВеличины КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТДоходыПоТарифам
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		0 КАК Месяц,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		СведенияОДоходах.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
	|		СведенияОДоходах.Сумма КАК Заработок,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.СуммаПревысившаяПределПФР КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.БазаПФРПоТрудовомуДоговору - (СведенияОДоходах.СуммаПревысившаяПределПФР - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору) КАК ПоДоговорамГПХДоПредельнойВеличины,
	|		СведенияОДоходах.СуммаПревысившаяПределПФР КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|		СведенияОДоходах.БазаТяжелыеИПрочиеРаботыПоТрудовомуДоговору КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		СведенияОДоходах.БазаПодземныеИВредныеРаботыПоТрудовомуДоговору КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|	ИЗ
	|		ВТДоходыСУчетомПерерасчетов КАК СведенияОДоходах
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо,
	|		СведенияОДоходах.Период,
	|		МЕСЯЦ(СведенияОДоходах.Период),
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|		СведенияОДоходах.ВидЗастрахованногоЛица,
	|		СведенияОДоходах.Сумма,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.СуммаПревысившаяПределПФР,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.БазаПФРПоТрудовомуДоговору - (СведенияОДоходах.СуммаПревысившаяПределПФР - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору),
	|		СведенияОДоходах.СуммаПревысившаяПределПФР,
	|		СведенияОДоходах.БазаТяжелыеИПрочиеРаботыПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПодземныеИВредныеРаботыПоТрудовомуДоговору
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.ЗастрахованПФР
	|		И СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода) КАК СведенияОДоходахПоТарифам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Месяц КАК Месяц,
	|	СУММА(Доходы.Заработок) КАК Заработок,
	|	СУММА(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(Доходы.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(Доходы.ПоДоговорамГПХДоПредельнойВеличины) КАК ПоДоговорамГПХДоПредельнойВеличины,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	ЛОЖЬ КАК ФиксЗаработок
	|ИЗ
	|	ВТДоходыПоТарифам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И Доходы.ВидЗастрахованногоЛица = СоответствиеТарифаИВидаЗЛКатегории.ВидЗастрахованногоЛица
	|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.Месяц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Доходы.Заработок) <> 0
	|		ИЛИ СУММА(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины) <> 0
	|		ИЛИ СУММА(Доходы.ОблагаетсяВзносамиСвышеПредельнойВеличины) <> 0
	|		ИЛИ СУММА(Доходы.ПоДоговорамГПХДоПредельнойВеличины) <> 0)";
	
	ТаблицыЗаработка.СведенияОЗаработке = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботы КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботы КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка) КАК КлассУсловийТруда
	|ПОМЕСТИТЬ ВТСведенияОЗаработкеПоКлассамУсловийТруда
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыОпасный,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыОпасный,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный1,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный1,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный2,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный2,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный3,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный3,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.БазаПодземныеИВредныеРаботыВредный4,
	|	СведенияОДоходах.БазаТяжелыеИПрочиеРаботыВредный4,
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4)
	|ИЗ
	|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Организация = &Организация
	|	И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|	И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|	И СведенияОДоходах.ЗастрахованПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФизическоеЛицо,
	|	0 КАК Месяц,
	|	СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.КлассУсловийТруда
	|ИЗ
	|	ВТДоходыПоКлассамУсловийТрудаСУчетомПерерасчетов КАК СведенияОЗаработкеПоКлассамУсловийТруда
	|ГДЕ
	|	СведенияОЗаработкеПоКлассамУсловийТруда.Период МЕЖДУ &НачалоГода И &ОкончаниеПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФизическоеЛицо,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.КлассУсловийТруда
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0
	|		ИЛИ СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФизическоеЛицо,
	|	МЕСЯЦ(СведенияОЗаработкеПоКлассамУсловийТруда.Период),
	|	СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах),
	|	СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах),
	|	СведенияОЗаработкеПоКлассамУсловийТруда.КлассУсловийТруда
	|ИЗ
	|	ВТСведенияОЗаработкеПоКлассамУсловийТруда КАК СведенияОЗаработкеПоКлассамУсловийТруда
	|ГДЕ
	|	СведенияОЗаработкеПоКлассамУсловийТруда.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(СведенияОЗаработкеПоКлассамУсловийТруда.Период),
	|	СведенияОЗаработкеПоКлассамУсловийТруда.ФизическоеЛицо,
	|	СведенияОЗаработкеПоКлассамУсловийТруда.КлассУсловийТруда
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0
	|		ИЛИ СУММА(СведенияОЗаработкеПоКлассамУсловийТруда.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0)";
	
	ТаблицыЗаработка.СведенияОЗаработкеПоКлассамУсловийТруда = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры	


Процедура СоздатьВТКорректируемыеДокументыПоЗастрахованнымЛицам(МенеджерВременныхТаблиц, КорректируемыеДокументы, ПараметрыОтбора)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", ПараметрыОтбора.КатегорияЗастрахованныхЛиц);
	Запрос.УстановитьПараметр("ТипДоговора", ПараметрыОтбора.ТипДоговора);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", ПараметрыОтбора.СписокФизическихЛиц);
	Запрос.УстановитьПараметр("КорректируемыеДокументы", КорректируемыеДокументы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	|	СотрудникиДокумента.Ссылка.КатегорияЗастрахованныхЛиц  КАК КатегорияЗастрахованныхЛиц,
	|	ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка)  КАК ТипДоговора,
	|	СотрудникиДокумента.Ссылка.ОтчетныйПериод КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА СотрудникиДокумента.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|			ТОГДА СотрудникиДокумента.Ссылка.ОтчетныйПериод
	|		ИНАЧЕ СотрудникиДокумента.Ссылка.КорректируемыйПериод
	|	КОНЕЦ КАК ОтчетныйПериод,
	|	СотрудникиДокумента.Ссылка,
	|	СотрудникиДокумента.Ссылка.ТипСведенийСЗВ
	|ПОМЕСТИТЬ ВТФизическиеЛицаДокументов
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК СотрудникиДокумента
	|ГДЕ
	|	СотрудникиДокумента.Ссылка В(&КорректируемыеДокументы)
	|	И &УсловиеФизическоеЛицо
	|	И &УсловиеКатегорияЗастрахованныхЛиц
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СотрудникиДокумента.Сотрудник,
	|	СотрудникиДокумента.Ссылка.КатегорияЗастрахованныхЛиц,
	|	СотрудникиДокумента.Ссылка.ТипДоговора,
	|	СотрудникиДокумента.Ссылка.ОтчетныйПериод,
	|	ВЫБОР
	|		КОГДА СотрудникиДокумента.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|			ТОГДА СотрудникиДокумента.Ссылка.ОтчетныйПериод
	|		ИНАЧЕ СотрудникиДокумента.Ссылка.КорректируемыйПериод
	|	КОНЕЦ,
	|	СотрудникиДокумента.Ссылка,
	|	СотрудникиДокумента.Ссылка.ТипСведенийСЗВ
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК СотрудникиДокумента
	|ГДЕ
	|	СотрудникиДокумента.Ссылка В(&КорректируемыеДокументы)
	|	И &УсловиеФизическоеЛицо
	|	И &УсловиеКатегорияЗастрахованныхЛиц
	|	И &УсловиеТипДоговора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СотрудникиДокумента.Сотрудник,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка),
	|	СотрудникиДокумента.Ссылка.ОтчетныйПериод,
	|	ВЫБОР
	|		КОГДА СотрудникиДокумента.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Исходная)
	|			ТОГДА СотрудникиДокумента.Ссылка.ОтчетныйПериод
	|		ИНАЧЕ СотрудникиДокумента.Ссылка.КорректируемыйПериод
	|	КОНЕЦ,
	|	СотрудникиДокумента.Ссылка,
	|	СотрудникиДокумента.Ссылка.ТипСведенийСЗВ
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.Сотрудники КАК СотрудникиДокумента
	|ГДЕ
	|	СотрудникиДокумента.Ссылка В(&КорректируемыеДокументы)
	|	И &УсловиеФизическоеЛицо
	|	И &УсловиеКатегорияЗастрахованныхЛиц
	|	И &УсловиеТипДоговора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛицаДокументов.Сотрудник,
	|	ФизическиеЛицаДокументов.КатегорияЗастрахованныхЛиц,
	|	ФизическиеЛицаДокументов.ТипДоговора,
	|	МАКСИМУМ(ФизическиеЛицаДокументов.ПериодРегистрации) КАК ПериодРегистрации,
	|	ФизическиеЛицаДокументов.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТМаксимальныеПериодыРегистрации
	|ИЗ
	|	ВТФизическиеЛицаДокументов КАК ФизическиеЛицаДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизическиеЛицаДокументов.Сотрудник,
	|	ФизическиеЛицаДокументов.КатегорияЗастрахованныхЛиц,
	|	ФизическиеЛицаДокументов.ТипДоговора,
	|	ФизическиеЛицаДокументов.ОтчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛицаДокументов.Сотрудник КАК ФизическоеЛицо,
	|	ФизическиеЛицаДокументов.КатегорияЗастрахованныхЛиц,
	|	ФизическиеЛицаДокументов.ТипДоговора,
	|	ФизическиеЛицаДокументов.ОтчетныйПериод,
	|	МАКСИМУМ(ФизическиеЛицаДокументов.Ссылка) КАК Ссылка,
	|	МАКСИМУМ(ФизическиеЛицаДокументов.ТипСведенийСЗВ) КАК ТипСведенийСЗВ
	|ПОМЕСТИТЬ ВТКорректируемыеДокументыПоЗастрахованнымЛицам
	|ИЗ
	|	ВТМаксимальныеПериодыРегистрации КАК МаксимальныеПериодыРегистрации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизическиеЛицаДокументов КАК ФизическиеЛицаДокументов
	|		ПО МаксимальныеПериодыРегистрации.Сотрудник = ФизическиеЛицаДокументов.Сотрудник
	|			И МаксимальныеПериодыРегистрации.КатегорияЗастрахованныхЛиц = ФизическиеЛицаДокументов.КатегорияЗастрахованныхЛиц
	|			И МаксимальныеПериодыРегистрации.ТипДоговора = ФизическиеЛицаДокументов.ТипДоговора
	|			И МаксимальныеПериодыРегистрации.ПериодРегистрации = ФизическиеЛицаДокументов.ПериодРегистрации
	|			И МаксимальныеПериодыРегистрации.ОтчетныйПериод = ФизическиеЛицаДокументов.ОтчетныйПериод
	|ГДЕ
	|	ФизическиеЛицаДокументов.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.Отменяющая)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизическиеЛицаДокументов.Сотрудник,
	|	ФизическиеЛицаДокументов.КатегорияЗастрахованныхЛиц,
	|	ФизическиеЛицаДокументов.ТипДоговора,
	|	ФизическиеЛицаДокументов.ОтчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМаксимальныеПериодыРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаДокументов";
	
	Если ПараметрыОтбора.КатегорияЗастрахованныхЛиц = Неопределено Тогда
		ТекстУсловиеКатегория = "ИСТИНА";
	Иначе	
		ТекстУсловиеКатегория = "СотрудникиДокумента.Ссылка.КатегорияЗастрахованныхЛиц = &КатегорияЗастрахованныхЛиц";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКатегорияЗастрахованныхЛиц", ТекстУсловиеКатегория);
	
	Если ПараметрыОтбора.ТипДоговора = Неопределено Тогда
		ТекстУсловиеТипДоговора = "ИСТИНА";
	Иначе	
		ТекстУсловиеТипДоговора = "СотрудникиДокумента.Ссылка.ТипДоговора = &ТипДоговора";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеТипДоговора", ТекстУсловиеТипДоговора);
	
	Если ПараметрыОтбора.СписокФизическихЛиц = Неопределено Тогда
		ТекстУсловиеСотрудники = "ИСТИНА";
	Иначе	
		ТекстУсловиеСотрудники = "СотрудникиДокумента.Сотрудник В (&СписокФизическихЛиц)";
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФизическоеЛицо", ТекстУсловиеСотрудники);
	
	Запрос.Выполнить();

КонецПроцедуры	


///////////////////////////////////////////////////////////////////////////////////
//// Функции для заполнения СЗВ


Процедура ДокументыСЗВЗаполнитьДанныеСотрудника(ДокументСсылка, Дата, ТипСведенийСЗВ, ОтчетныйПериод, КорректируемыйПериод, Организация, КатегорияЗастрахованныхЛиц, Сотрудник, ИдентификаторТекущейСтрокиСотрудник, Сотрудники, ЗаписиОСтаже)Экспорт
	КорректирующиеСведения = ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
	МассивФизЛиц = Новый Массив;
	МассивФизЛиц.Добавить(Сотрудник);	
	ВыборкаДанныхСотрудников = ПолучитьДанныеПоСпискуФизЛицДляСЗВ(ДокументСсылка, Дата, ?(КорректирующиеСведения, КорректируемыйПериод, ОтчетныйПериод), Организация, КатегорияЗастрахованныхЛиц, МассивФизЛиц, КорректирующиеСведения).Выбрать();	
	Если ВыборкаДанныхСотрудников.Следующий() Тогда
		СтрокаСотрудник = Сотрудники.НайтиПоИдентификатору(ИдентификаторТекущейСтрокиСотрудник);
		ЗаполнитьЗначенияСвойств(СтрокаСотрудник, ВыборкаДанныхСотрудников);
		ПериодыСтажаПредставление = "";
		Если ЗначениеЗаполнено(ВыборкаДанныхСотрудников.ДатаНачалаПериода) Тогда	
			МассивСтрокЗаписиОСтаже = Новый Массив;
			Пока ВыборкаДанныхСотрудников.СледующийПоЗначениюПоля("ДатаНачалаПериода") Цикл
				НоваяСтрокаЗаписиОСтаже = ЗаписиОСтаже.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаЗаписиОСтаже, ВыборкаДанныхСотрудников);
				ПериодыСтажаПредставление = ПериодыСтажаПредставление + Формат(ВыборкаДанныхСотрудников.ДатаНачалаПериода, "ДФ=dd.MM.yy") + Символы.НПП + "-" + Символы.НПП + Формат(ВыборкаДанныхСотрудников.ДатаОкончанияПериода, "ДФ=dd.MM.yy") + Символы.ПС;
				МассивСтрокЗаписиОСтаже.Добавить(НоваяСтрокаЗаписиОСтаже);	
			КонецЦикла;
			Если НоваяСтрокаЗаписиОСтаже.Свойство("НомерОсновнойЗаписи") Тогда
				ПерсонифицированныйУчетКлиентСервер.ВыполнитьНумерациюЗаписейОСтаже(МассивСтрокЗаписиОСтаже);
			КонецЕсли;
		КонецЕсли;
		Если СтрокаСотрудник.Свойство("ПериодыСтажаСтрока") Тогда
			СтрокаСотрудник.ПериодыСтажаСтрока = ПериодыСтажаПредставление;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

  // Возвращает результат выполнения запроса, содержащий данные для заполнения документов СЗВ по
// переданному списку физ. лиц
// 
// Параметры:
//	Дата
//  ОтчетныйПериод 
//  Ссылка 
//  Организация
//  КатегорияФизЛиц
//  ИсточникДанных - менеджер временных таблиц, содержащий ВТ "ВТСписокФизлицДокумента", со списком физ. лиц по которым
//                   необходимо получить данные
//
// Возвращаемое значение
//  Результат выполнения запроса, содержащий данные, необходимые для заполнения документов
Функция ПолучитьДанныеПоСпискуФизЛицДляСЗВ(Ссылка, ДатаАктуальности, ОтчетныйПериод,  Организация, КатегорияСотрудников, МассивФизЛиц, КорректирующиеСведения = Ложь)Экспорт
	ОкончаниеОтчетногоПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
	Запрос = Новый Запрос;
			
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("Наименование");
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество"); 
    МассивНеобходимыхКадровыхДанных.Добавить("СтраховойНомерПФР");
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
		               
	СформироватьВТСДаннымиОВзносахИСтажеСотрудников2013(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, КорректирующиеСведения, Ложь, , МассивФизЛиц, КатегорияСотрудников);											

	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОВзносахИСтаже.ФизическоеЛицо КАК Сотрудник,
	|	ДанныеОВзносахИСтаже.Фамилия,
	|	ДанныеОВзносахИСтаже.Имя,
	|	ДанныеОВзносахИСтаже.Отчество,
	|	ДанныеОВзносахИСтаже.СтраховойНомерПФР,
	|	ДанныеОВзносахИСтаже.АдресДляИнформирования,
	|	ДанныеОВзносахИСтаже.АдресДляИнформированияПредставление,
	|	ДанныеОВзносахИСтаже.НачисленоНакопительная,
	|	ДанныеОВзносахИСтаже.НачисленоСтраховая,
	|	ДанныеОВзносахИСтаже.УплаченоСтраховая,
	|	ДанныеОВзносахИСтаже.УплаченоНакопительная,
	|	ДанныеОВзносахИСтаже.ДоНачисленоНакопительная,
	|	ДанныеОВзносахИСтаже.ДоНачисленоСтраховая,
	|	ДанныеОВзносахИСтаже.ДоУплаченоСтраховая,
	|	ДанныеОВзносахИСтаже.ДоУплаченоНакопительная,
	|	ДанныеОВзносахИСтаже.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеОВзносахИСтаже.ДатаОкончанияПериода КАК ДатаОкончанияПериода
	|ИЗ
	|	ВТДанныеОВзносахИСтаже КАК ДанныеОВзносахИСтаже
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеОВзносахИСтаже.Наименование,
	|	ДанныеОВзносахИСтаже.ДатаНачалаПериода";	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура СформироватьВТСДаннымиОВзносахИСтажеСотрудников2013(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, КорректирующиеСведения = Ложь, УчитыватьИсправления = Ложь, МассивПачекКомплекта = Неопределено, МассивФизЛиц = Неопределено, КатегорияСотрудников = Неопределено)											
	ОкончаниеОтчетногоПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	СформироватьВТСДаннымиОВзносахПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, КорректирующиеСведения, МассивПачекКомплекта, Ложь, МассивФизлиц, КатегорияСотрудников);
	
	СформироватьВТСданнымиСтажаПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, КорректирующиеСведения, МассивПачекКомплекта, МассивФизЛиц, КатегорияСотрудников);
	
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("Наименование");
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество"); 
	МассивНеобходимыхКадровыхДанных.Добавить("СтраховойНомерПФР"); 
	
	
	Если МассивФизЛиц = Неопределено Тогда
		Запрос.УстановитьПараметр("Период", ДатаАктуальности);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеОСтажеПоКатегориям.ФизическоеЛицо,
		|	&Период КАК Период
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТДанныеОСтажеПоКатегориям КАК ДанныеОСтажеПоКатегориям
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеОВзносахВПФР.ФизическоеЛицо,
		|	&Период
		|ИЗ
		|	ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР";
		
		Запрос.Выполнить();
		
		СформироватьТаблицуВТКадровыеДанныеФизическихЛицСПериодом(МенеджерВТ, "ВТСотрудники", Ложь, ОтчетныйПериод);
		
		
	Иначе
		СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(МенеджерВТ, МассивФизЛиц, Ложь, ДатаАктуальности);
	КонецЕсли;	
		
	СформироватьВТСИзменившимисяАдресамиИнформированияФизЛиц(ДатаАктуальности, Организация, "ВТКадровыеДанныеФизическихЛиц", МенеджерВТ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОСтажеПоКатегориям.ФизическоеЛицо,
	|	ДанныеОСтажеПоКатегориям.КатегорияЗастрахованныхЛиц,
	|	ДанныеОСтажеПоКатегориям.ТипДоговора КАК ТипДоговора
	|ПОМЕСТИТЬ ВТКатегорииСотрудников
	|ИЗ
	|	ВТДанныеОСтажеПоКатегориям КАК ДанныеОСтажеПоКатегориям
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеОВзносахВПФР.ФизическоеЛицо,
	|	ДанныеОВзносахВПФР.КатегорияЗастрахованныхЛиц,
	|	ДанныеОВзносахВПФР.ТипДоговора
	|ИЗ
	|	ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокСотрудников.КатегорияЗастрахованныхЛиц,
	|	КадровыеДанныеФизЛиц.Фамилия,
	|	КадровыеДанныеФизЛиц.Наименование,
	|	КадровыеДанныеФизЛиц.Имя,
	|	КадровыеДанныеФизЛиц.Отчество,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР,
	|	ИзменившиесяАдресаФизическихЛиц.АдресДляИнформирования,
	|	ИзменившиесяАдресаФизическихЛиц.АдресДляИнформированияПредставление,
	|	ДанныеОВзносахВПФР.НачисленоНакопительная,
	|	ДанныеОВзносахВПФР.НачисленоСтраховая,
	|	ДанныеОВзносахВПФР.УплаченоСтраховая,
	|	ДанныеОВзносахВПФР.УплаченоНакопительная,
	|	ДанныеОВзносахВПФР.ДоНачисленоНакопительная,
	|	ДанныеОВзносахВПФР.ДоНачисленоСтраховая,
	|	ДанныеОВзносахВПФР.ДоУплаченоСтраховая,
	|	ДанныеОВзносахВПФР.ДоУплаченоНакопительная,
	|	ДанныеОСтажеПоКатегориям.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеОСтажеПоКатегориям.ДатаОкончанияПериода,
	|	СписокСотрудников.ТипДоговора
	|ПОМЕСТИТЬ ВТДанныеОВзносахИСтаже
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКатегорииСотрудников КАК СписокСотрудников
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = СписокСотрудников.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСтажеПоКатегориям КАК ДанныеОСтажеПоКатегориям
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = ДанныеОСтажеПоКатегориям.ФизическоеЛицо
	|			И (СписокСотрудников.КатегорияЗастрахованныхЛиц = ДанныеОСтажеПоКатегориям.КатегорияЗастрахованныхЛиц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзменившиесяАдресаФизическихЛиц КАК ИзменившиесяАдресаФизическихЛиц
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = ИзменившиесяАдресаФизическихЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР
	|		ПО (СписокСотрудников.КатегорияЗастрахованныхЛиц = ДанныеОВзносахВПФР.КатегорияЗастрахованныхЛиц)
	|			И КадровыеДанныеФизЛиц.ФизическоеЛицо = ДанныеОВзносахВПФР.ФизическоеЛицо";
	
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВТСДаннымиОВзносахИСтажеСотрудников2014(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, КорректирующиеСведения = Ложь, УчитыватьИсправления = Ложь, МассивПачекКомплекта = Неопределено, МассивФизЛиц = Неопределено, КатегорияСотрудников = Неопределено) Экспорт
	ОкончаниеОтчетногоПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	СформироватьВТСДаннымиОВзносахПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, КорректирующиеСведения, МассивПачекКомплекта, Ложь, МассивФизлиц, КатегорияСотрудников);
	
	СформироватьВТСданнымиСтажаПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, КорректирующиеСведения, МассивПачекКомплекта, МассивФизЛиц, КатегорияСотрудников);
	
	МассивНеобходимыхКадровыхДанных = Новый Массив();
	МассивНеобходимыхКадровыхДанных.Добавить("Наименование");
	МассивНеобходимыхКадровыхДанных.Добавить("Фамилия");
	МассивНеобходимыхКадровыхДанных.Добавить("Имя");
	МассивНеобходимыхКадровыхДанных.Добавить("Отчество"); 
	МассивНеобходимыхКадровыхДанных.Добавить("СтраховойНомерПФР"); 
	
	
	Если МассивФизЛиц = Неопределено Тогда
		Запрос.УстановитьПараметр("Период", ДатаАктуальности);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеОСтажеПоКатегориям.ФизическоеЛицо,
		|	&Период КАК Период
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТДанныеОСтажеПоКатегориям КАК ДанныеОСтажеПоКатегориям
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеОВзносахВПФР.ФизическоеЛицо,
		|	&Период
		|ИЗ
		|	ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР";
		
		Запрос.Выполнить();
		
		СформироватьТаблицуВТКадровыеДанныеФизическихЛицСПериодом(МенеджерВТ, "ВТСотрудники", Ложь, ОтчетныйПериод);
		
		
	Иначе
		СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(МенеджерВТ, МассивФизЛиц, Ложь, ДатаАктуальности);
	КонецЕсли;	
		
	СформироватьВТСИзменившимисяАдресамиИнформированияФизЛиц(ДатаАктуальности, Организация, "ВТКадровыеДанныеФизическихЛиц", МенеджерВТ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОСтажеПоКатегориям.ФизическоеЛицо,
	|	ДанныеОСтажеПоКатегориям.КатегорияЗастрахованныхЛиц,
	|	ДанныеОСтажеПоКатегориям.ТипДоговора КАК ТипДоговора
	|ПОМЕСТИТЬ ВТКатегорииСотрудников
	|ИЗ
	|	ВТДанныеОСтажеПоКатегориям КАК ДанныеОСтажеПоКатегориям
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеОВзносахВПФР.ФизическоеЛицо,
	|	ДанныеОВзносахВПФР.КатегорияЗастрахованныхЛиц,
	|	ДанныеОВзносахВПФР.ТипДоговора
	|ИЗ
	|	ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадровыеДанныеФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокСотрудников.КатегорияЗастрахованныхЛиц,
	|	КадровыеДанныеФизЛиц.Фамилия,
	|	КадровыеДанныеФизЛиц.Наименование,
	|	КадровыеДанныеФизЛиц.Имя,
	|	КадровыеДанныеФизЛиц.Отчество,
	|	КадровыеДанныеФизЛиц.СтраховойНомерПФР,
	|	ИзменившиесяАдресаФизическихЛиц.АдресДляИнформирования,
	|	ИзменившиесяАдресаФизическихЛиц.АдресДляИнформированияПредставление,
	|	ДанныеОВзносахВПФР.НачисленоСтраховая,
	|	ДанныеОВзносахВПФР.ДоНачисленоСтраховая,
	|	ДанныеОСтажеПоКатегориям.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеОСтажеПоКатегориям.ДатаОкончанияПериода,
	|	СписокСотрудников.ТипДоговора
	|ПОМЕСТИТЬ ВТДанныеОВзносахИСтаже
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКатегорииСотрудников КАК СписокСотрудников
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = СписокСотрудников.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСтажеПоКатегориям КАК ДанныеОСтажеПоКатегориям
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = ДанныеОСтажеПоКатегориям.ФизическоеЛицо
	|			И (СписокСотрудников.КатегорияЗастрахованныхЛиц = ДанныеОСтажеПоКатегориям.КатегорияЗастрахованныхЛиц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзменившиесяАдресаФизическихЛиц КАК ИзменившиесяАдресаФизическихЛиц
	|		ПО КадровыеДанныеФизЛиц.ФизическоеЛицо = ИзменившиесяАдресаФизическихЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОВзносахВПФР КАК ДанныеОВзносахВПФР
	|		ПО (СписокСотрудников.КатегорияЗастрахованныхЛиц = ДанныеОВзносахВПФР.КатегорияЗастрахованныхЛиц)
	|			И КадровыеДанныеФизЛиц.ФизическоеЛицо = ДанныеОВзносахВПФР.ФизическоеЛицо";
	
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура СформироватьВТСДаннымиОВзносахПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, КорректирующиеСведения = Ложь, МассивПачекКомплекта = Неопределено, ПолучатьДанныеОНачисленияхИзДокументов = Ложь, МассивФизлиц = Неопределено, КатегорияСотрудников = Неопределено) Экспорт 
		
	УстановитьПривилегированныйРежим(Истина);
	
	
	Если ПолучатьДанныеОНачисленияхИзДокументов Тогда
		СформироватьВТНачисленныхВзносахИзДокументов(МенеджерВТ, МассивПачекКомплекта, ОтчетныйПериод, КорректирующиеСведения);		
		СформироватьВТОстаткиРасчетовСПФРПоСотрудникамИзДокументов(МенеджерВТ, Организация, ОтчетныйПериод, МассивПачекКомплекта);
	Иначе	
		СформироватьВТСДаннымиНачисленийДляРасчетаВзносов(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, МассивФизЛиц);
		СформироватьВТОстаткиРасчетовСПФР(МенеджерВТ, Организация, ОтчетныйПериод, МассивПачекКомплекта)
	КонецЕсли;	
	
	СформироватьВТСДаннымиИсправленийПоВзносам(МенеджерВТ, МассивПачекКомплекта, ОтчетныйПериод, КорректирующиеСведения);
	
	ДанныеОВзносах = ТаблицаСРаспределениемУплаченныхВзносов(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности);
	
	ЗапросРезультат = Новый Запрос;
	ЗапросРезультат.МенеджерВременныхТаблиц = МенеджерВТ;
	ЗапросРезультат.УстановитьПараметр("ДанныеОВзносах", ДанныеОВзносах);
	ЗапросРезультат.УстановитьПараметр("МассивФизлиц", МассивФизлиц);
	ЗапросРезультат.УстановитьПараметр("НеОтбиратьФизЛиц", МассивФизлиц = Неопределено);
	ЗапросРезультат.УстановитьПараметр("КатегорияЗастрахованныхЛиц", КатегорияСотрудников);
	ЗапросРезультат.УстановитьПараметр("НеОтбиратьПоКатегориям", КатегорияСотрудников = Неопределено);
	ЗапросРезультат.Текст = 
	"ВЫБРАТЬ
	|	РасчетСумм.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетСумм.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РасчетСумм.ТипДоговора КАК ТипДоговора,
	|	РасчетСумм.УплаченоНакопительная,
	|	РасчетСумм.УплаченоСтраховая,
	|	РасчетСумм.НачисленоСтраховая,
	|	РасчетСумм.НачисленоНакопительная,
	|	РасчетСумм.ФиксУплата,
	|	РасчетСумм.ФиксНачисления,
	|	0 КАК ДоначисленоСтраховая,
	|	0 КАК ДоначисленоНакопительная,
	|	0 КАК ДоуплаченоСтраховая,
	|	0 КАК ДоуплаченоНакопительная
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	&ДанныеОВзносах КАК РасчетСумм
	|ГДЕ
	|	(&НеОтбиратьФизЛиц
	|			ИЛИ РасчетСумм.ФизическоеЛицо В (&МассивФизлиц))
	|	И (&НеОтбиратьПоКатегориям
	|			ИЛИ (РасчетСумм.КатегорияЗастрахованныхЛиц = &КатегорияЗастрахованныхЛиц))";
	
	ИмяВТРезультат = ?(КорректирующиеСведения, "ВТСуммыВзносов", "ВТДанныеОВзносахВПФР");
	ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ВТРезультат", ИмяВТРезультат);
	
	ЗапросРезультат.Выполнить();
	
	Если КорректирующиеСведения Тогда
		СформироватьВТСКорректировкойДанныхОВзносахПФР(МенеджерВТ, Организация, ДатаАктуальности, ОтчетныйПериод, КатегорияСотрудников);				
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
Процедура СформироватьВТНачисленныхВзносахИзДокументов(МенеджерВТ, МассивДокументов, РасчетныйПериод, КорректирующиеСведения = Ложь)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(МенеджерВТ);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("РасчетныйПериод", РасчетныйПериод);
	Запрос.УстановитьПараметр("КорректирующиеСведения", КорректирующиеСведения);
	Запрос.УстановитьПараметр("ТарифМоряков", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ДляЧленовЭкипажейМорскихСудовПодФлагомРФ"));
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ДанныеОНачисленныхВзносах.ФизическоеЛицо,
	|	ДанныеОНачисленныхВзносах.КатегорияЗастрахованныхЛиц,
	|	ДанныеОНачисленныхВзносах.ТипДоговора,
	|	СУММА(ДанныеОНачисленныхВзносах.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(ДанныеОНачисленныхВзносах.ПФРНакопительная) КАК ПФРНакопительная
	|ПОМЕСТИТЬ ВТДанныеОНачисленныхВзносахИзДокументов
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеестрСЗВ_6_2Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|		РеестрСЗВ_6_2Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая КАК ПФРСтраховая,
	|		РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная КАК ПФРНакопительная,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка) КАК ТипДоговора
	|	ИЗ
	|		Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|	ГДЕ
	|		РеестрСЗВ_6_2Сотрудники.Ссылка В(&МассивДокументов)
	|		И ВЫБОР
	|				КОГДА &КорректирующиеСведения
	|					ТОГДА РеестрСЗВ_6_2Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗв.Корректирующая)
	|							И РеестрСЗВ_6_2Сотрудники.Ссылка.КорректируемыйПериод = &РасчетныйПериод
	|				ИНАЧЕ РеестрСЗВ_6_2Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗв.ИСХОДНАЯ)
	|						И РеестрСЗВ_6_2Сотрудники.Ссылка.ОтчетныйПериод = &РасчетныйПериод
	|			КОНЕЦ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеОВзносахДокумента.Сотрудник,
	|		ДанныеОВзносахДокумента.Ссылка.КатегорияЗастрахованныхЛиц,
	|		ДанныеОВзносахДокумента.НачисленоСтраховая,
	|		ДанныеОВзносахДокумента.НачисленоНакопительная,
	|		ДанныеОВзносахДокумента.Ссылка.ТипДоговора
	|	ИЗ
	|		Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ДанныеОВзносахДокумента
	|	ГДЕ
	|		ДанныеОВзносахДокумента.Ссылка В(&СписокДокументов)
	|		И ДанныеОВзносахДокумента.Ссылка.ОтчетныйПериод = &РасчетныйПериод) КАК ДанныеОНачисленныхВзносах
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНачисленныхВзносах.ФизическоеЛицо,
	|	ДанныеОНачисленныхВзносах.КатегорияЗастрахованныхЛиц,
	|	ДанныеОНачисленныхВзносах.ТипДоговора
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНачисленныхВзносахИзДокументов.ФизическоеЛицо,
	|	ДанныеОНачисленныхВзносахИзДокументов.КатегорияЗастрахованныхЛиц,
	|	ДанныеОНачисленныхВзносахИзДокументов.ТипДоговора,
	|	СУММА(ДанныеОНачисленныхВзносахИзДокументов.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(ДанныеОНачисленныхВзносахИзДокументов.ПФРНакопительная) КАК ПФРНакопительная
	|ПОМЕСТИТЬ ВТНачисленоЗаОтчетныйПериодФормирования
	|ИЗ
	|	ВТДанныеОНачисленныхВзносахИзДокументов КАК ДанныеОНачисленныхВзносахИзДокументов
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНачисленныхВзносахИзДокументов.ФизическоеЛицо,
	|	ДанныеОНачисленныхВзносахИзДокументов.КатегорияЗастрахованныхЛиц,
	|	ДанныеОНачисленныхВзносахИзДокументов.ТипДоговора
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ДанныеОНачисленныхВзносахИзДокументов.ПФРСтраховая) <> 0
	|		ИЛИ СУММА(ДанныеОНачисленныхВзносахИзДокументов.ПФРНакопительная) <> 0)
	|;
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВТОстаткиРасчетовСПФРПоСотрудникамИзДокументов(МенеджерВТ, Организация, ОтчетныйПериод, МассивДокументов = Неопределено)
	СформироватьВТСДаннымиКорректирующихПачек(МенеджерВТ, ОтчетныйПериод, МассивДокументов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КонецПрошлогоПериода", ОкончаниеОтчетногоПериодаПерсУчета(ПредшествующийОтчетныйПериодПерсУчета(ОтчетныйПериод)));
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОстаткиПоРасчетамПрошлыхПериодов.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Страховая) КАК Страховая,
	|	СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Накопительная) КАК Накопительная
	|ПОМЕСТИТЬ ВТОстаткиПоРасчетамПрошлыхПериодов
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтраховыеВзносыПереданныеВПФРОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СтраховыеВзносыПереданныеВПФРОстатки.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		СтраховыеВзносыПереданныеВПФРОстатки.СтраховаяОстаток КАК Страховая,
	|		СтраховыеВзносыПереданныеВПФРОстатки.НакопительнаяОстаток КАК Накопительная
	|	ИЗ
	|		РегистрНакопления.СтраховыеВзносыПереданныеВПФР.Остатки(
	|				&КонецПрошлогоПериода,
	|				Организация = &Организация
	|					И (ФизическоеЛицо, КатегорияЗастрахованныхЛиц) В
	|						(ВЫБРАТЬ
	|							НачисленоЗаОтчетныйПериодФормирования.ФизическоеЛицо,
	|							НачисленоЗаОтчетныйПериодФормирования.КатегорияЗастрахованныхЛиц
	|						ИЗ
	|							ВТНачисленоЗаОтчетныйПериодФормирования КАК НачисленоЗаОтчетныйПериодФормирования)) КАК СтраховыеВзносыПереданныеВПФРОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКорректирующихПачек.ФизическоеЛицо,
	|		ДанныеКорректирующихПачек.КатегорияЗастрахованныхЛиц,
	|		ДанныеКорректирующихПачек.КорректировкаСтраховая,
	|		ДанныеКорректирующихПачек.КорректировкаНакопительная
	|	ИЗ
	|		ВТДанныеКорректирующихПачек КАК ДанныеКорректирующихПачек
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленоЗаОтчетныйПериодФормирования КАК НачисленоЗаОтчетныйПериодФормирования
	|			ПО ДанныеКорректирующихПачек.ФизическоеЛицо = НачисленоЗаОтчетныйПериодФормирования.ФизическоеЛицо
	|				И ДанныеКорректирующихПачек.КатегорияЗастрахованныхЛиц = НачисленоЗаОтчетныйПериодФормирования.КатегорияЗастрахованныхЛиц) КАК ОстаткиПоРасчетамПрошлыхПериодов
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо,
	|	ОстаткиПоРасчетамПрошлыхПериодов.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо) КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизЛицаСПереплатой
	|ИЗ
	|	ВТОстаткиПоРасчетамПрошлыхПериодов КАК ОстаткиПоРасчетамПрошлыхПериодов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Страховая) > 0
	|		ИЛИ СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Накопительная) > 0)";	
	
	Запрос.Выполнить();
		
КонецПроцедуры

Процедура СформироватьВТСДаннымиНачисленийДляРасчетаВзносов(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности, МассивФизЛиц = Неопределено)Экспорт
	Запрос = Новый Запрос;
	
	ОкончаниеПериода = ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод);
	
	СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(МенеджерВТ);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ОбщийНалоговыйРежим")); 
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", СписокНестрахуемыхВидовДохода());
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОкончаниеОтчетногоПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОбъединятьНакопительнуюИСтраховуюЧасть", ОтчетныйПериод >= ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасширенныеСведенияОДоходахИВзносах.ФизическоеЛицо,
	|	ВЫБОР КОГДА &ОбъединятьНакопительнуюИСтраховуюЧасть
	|		ТОГДА СУММА(РасширенныеСведенияОДоходахИВзносах.ПФРПоСуммарномуТарифу)
	|		ИНАЧЕ СУММА(РасширенныеСведенияОДоходахИВзносах.ПФРСтраховая)
	|	КОНЕЦ КАК ПФРСтраховая,
	|	СУММА(РасширенныеСведенияОДоходахИВзносах.ПФРНакопительная) КАК ПФРНакопительная,
	|	ЕСТЬNULL(СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка)) КАК КатегорияЗастрахованныхЛиц,
	|	ВЫБОР
	|		КОГДА &ОтчетныйГод > 2012
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка)
	|	КОНЕЦ КАК ТипДоговора
	|ПОМЕСТИТЬ ВТНачисленоЗаОтчетныйПериодФормирования
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК РасширенныеСведенияОДоходахИВзносах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО РасширенныеСведенияОДоходахИВзносах.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (&ОтчетныйГод МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|ГДЕ
	|	РасширенныеСведенияОДоходахИВзносах.Период МЕЖДУ &ОтчетныйПериод И &ОкончаниеОтчетногоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	РасширенныеСведенияОДоходахИВзносах.ФизическоеЛицо,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц
	|
	|ИМЕЮЩИЕ
	|	(СУММА(РасширенныеСведенияОДоходахИВзносах.ПФРСтраховая) <> 0
	|		ИЛИ СУММА(РасширенныеСведенияОДоходахИВзносах.ПФРНакопительная) <> 0
	|		ИЛИ СУММА(РасширенныеСведенияОДоходахИВзносах.ИсчисленоПФРССуммПревышения) <> 0
	|		ИЛИ СУММА(РасширенныеСведенияОДоходахИВзносах.ПФРПоСуммарномуТарифу) <> 0)";	
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВТОстаткиРасчетовСПФР(МенеджерВТ, Организация, ОтчетныйПериод, МассивДокументов = Неопределено)
	СформироватьВТСДаннымиКорректирующихПачек(МенеджерВТ, ОтчетныйПериод, МассивДокументов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КонецПрошлогоПериода", ОкончаниеОтчетногоПериодаПерсУчета(ПредшествующийОтчетныйПериодПерсУчета(ОтчетныйПериод)));
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОстаткиПоРасчетамПрошлыхПериодов.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Страховая) КАК Страховая,
	|	СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Накопительная) КАК Накопительная
	|ПОМЕСТИТЬ ВТОстаткиПоРасчетамПрошлыхПериодов
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтраховыеВзносыПереданныеВПФРОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СтраховыеВзносыПереданныеВПФРОстатки.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		СтраховыеВзносыПереданныеВПФРОстатки.СтраховаяОстаток КАК Страховая,
	|		СтраховыеВзносыПереданныеВПФРОстатки.НакопительнаяОстаток КАК Накопительная
	|	ИЗ
	|		РегистрНакопления.СтраховыеВзносыПереданныеВПФР.Остатки(&КонецПрошлогоПериода, Организация = &Организация) КАК СтраховыеВзносыПереданныеВПФРОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКорректирующихПачек.ФизическоеЛицо,
	|		ДанныеКорректирующихПачек.КатегорияЗастрахованныхЛиц,
	|		ДанныеКорректирующихПачек.КорректировкаСтраховая,
	|		ДанныеКорректирующихПачек.КорректировкаНакопительная
	|	ИЗ
	|		ВТДанныеКорректирующихПачек КАК ДанныеКорректирующихПачек) КАК ОстаткиПоРасчетамПрошлыхПериодов
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо,
	|	ОстаткиПоРасчетамПрошлыхПериодов.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо) КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизЛицаСПереплатой
	|ИЗ
	|	ВТОстаткиПоРасчетамПрошлыхПериодов КАК ОстаткиПоРасчетамПрошлыхПериодов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Страховая) > 0
	|		ИЛИ СУММА(ОстаткиПоРасчетамПрошлыхПериодов.Накопительная) > 0)";
	
	Запрос.Выполнить();

КонецПроцедуры	

Процедура СформироватьВТСДаннымиКорректирующихПачек(МенеджерВТ, ОтчетныйПериод, МассивДокументов = Неопределено)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая - РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая КАК КорректировкаСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная - РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная КАК КорректировкаНакопительная
	|ПОМЕСТИТЬ ВТДанныеКорректирующихПачек
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&МассивДокументов)
	|	И РеестрСЗВ_6_2Сотрудники.Ссылка.КорректируемыйПериод < &ОтчетныйПериод
	|	И РеестрСЗВ_6_2Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|	И НЕ РеестрСЗВ_6_2Сотрудники.Ссылка.Проведен";		
	
	Запрос.Выполнить();
КонецПроцедуры

Функция СписокНестрахуемыхВидовДохода()Экспорт
	
	МассивВидовДохода = Новый Массив;
	
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
	МассивВидовДохода.Добавить(Справочники.ВидыДоходовПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоГражданскоПравовомуДоговору);
	
	Возврат МассивВидовДохода;
	
КонецФункции

Процедура СформироватьВТСДаннымиИсправленийПоВзносам(МенеджерВременныхТаблиц, МассивДокументов, ОтчетныйПериод, КорректирующиеСведения = Ложь)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументовСИсправлениями", МассивДокументов);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("КорректирующиеСведения", КорректирующиеСведения);
	Запрос.УстановитьПараметр("ТарифМоряков", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ДляЧленовЭкипажейМорскихСудовПодФлагомРФ"));

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоСтраховая,
	|	РеестрСЗВ_6_2Сотрудники.НачисленоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.УплаченоНакопительная,
	|	РеестрСЗВ_6_2Сотрудники.ФиксНачисления,
	|	РеестрСЗВ_6_2Сотрудники.ФиксУплата,
	|	ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяССылка) КАК ТипДоговора
	|ПОМЕСТИТЬ ВТИсправленияВдокументах
	|ИЗ
	|	Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|ГДЕ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка В(&МассивДокументовСИсправлениями)
	|	И ВЫБОР
	|			КОГДА &КорректирующиеСведения
	|				ТОГДА РеестрСЗВ_6_2Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗв.Корректирующая)
	|						И РеестрСЗВ_6_2Сотрудники.Ссылка.КорректируемыйПериод = &ОтчетныйПериод
	|			ИНАЧЕ РеестрСЗВ_6_2Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗв.ИСХОДНАЯ)
	|					И РеестрСЗВ_6_2Сотрудники.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
	|		КОНЕЦ
	|	И (РеестрСЗВ_6_2Сотрудники.ФиксНачисления
	|			ИЛИ РеестрСЗВ_6_2Сотрудники.ФиксУплата)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Сотрудник,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ФиксНачисления,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.ФиксУплата,
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипДоговора
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.Сотрудники КАК ПачкаДокументовСЗВ_6_4Сотрудники
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка В(&МассивДокументовСИсправлениями)
	|	И ВЫБОР
	|			КОГДА &КорректирующиеСведения
	|				ТОГДА ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗв.Корректирующая)
	|						И ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.КорректируемыйПериод = &ОтчетныйПериод
	|			ИНАЧЕ ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					И ПачкаДокументовСЗВ_6_4Сотрудники.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
	|		КОНЕЦ
	|	И (ПачкаДокументовСЗВ_6_4Сотрудники.ФиксНачисления
	|			ИЛИ ПачкаДокументовСЗВ_6_4Сотрудники.ФиксУплата)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФиксируемыеИсправления.ФизическоеЛицо,
	|	ФиксируемыеИсправления.КатегорияЗастрахованныхЛиц,
	|	ФиксируемыеИсправления.ТипДоговора,
	|	ФиксируемыеИсправления.УплаченоСтраховая,
	|	ФиксируемыеИсправления.УплаченоНакопительная,
	|	ФиксируемыеИсправления.ФиксНачисления,
	|	ФиксируемыеИсправления.ФиксУплата,
	|	ФиксируемыеИсправления.НачисленоСтраховая,
	|	ФиксируемыеИсправления.НачисленоНакопительная
	|ПОМЕСТИТЬ ВТИсправленияПоВзносам
	|ИЗ
	|	ВТИсправленияВДокументах КАК ФиксируемыеИсправления
	|;";
	
	Запрос.Выполнить();

КонецПроцедуры

Функция ТаблицаСРаспределениемУплаченныхВзносов(МенеджерВТ, Организация, ОтчетныйПериод, ДатаАктуальности)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериод));
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("КонецПериодаУплаты", Мин(КонецДня(ДатаАктуальности), ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод)));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо,
	|	ОстаткиПоРасчетамПрошлыхПериодов.КатегорияЗастрахованныхЛиц,
	|	ОстаткиПоРасчетамПрошлыхПериодов.Страховая КАК Страховая,
	|	ОстаткиПоРасчетамПрошлыхПериодов.Накопительная КАК Накопительная
	|ПОМЕСТИТЬ ВТНедоуплаченоЗаПрошлыеПериоды
	|ИЗ
	|	ВТОстаткиПоРасчетамПрошлыхПериодов КАК ОстаткиПоРасчетамПрошлыхПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизЛицаСПереплатой КАК ФизЛицаСПереплатой
	|		ПО ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо = ФизЛицаСПереплатой.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|		ПО ОстаткиПоРасчетамПрошлыхПериодов.ФизическоеЛицо = ИсправленияПоВзносам.ФизическоеЛицо
	|			И ОстаткиПоРасчетамПрошлыхПериодов.КатегорияЗастрахованныхЛиц = ИсправленияПоВзносам.КатегорияЗастрахованныхЛиц
	|			И (ИсправленияПоВзносам.ФиксУплата)
	|ГДЕ
	|	ФизЛицаСПереплатой.ФизическоеЛицо ЕСТЬ NULL 
	|	И ИсправленияПоВзносам.ФизическоеЛицо ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|				ТОГДА РасчетыПоСтраховымВзносамОбороты.СуммаРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСтраховаяРасход,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоСтраховымВзносамОбороты.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная)
	|				ТОГДА РасчетыПоСтраховымВзносамОбороты.СуммаРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНакопительнаяРасход,
	|	""Уплата"" КАК ВидСтроки
	|ПОМЕСТИТЬ ВТВсегоУплачено
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(
	|			&ОтчетныйПериод,
	|			&КонецПериодаУплаты,
	|			,
	|			(ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|				ИЛИ ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная))
	|				И Организация = &Организация) КАК РасчетыПоСтраховымВзносамОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоСтраховымВзносамОстатки.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|					И РасчетыПоСтраховымВзносамОстатки.СуммаОстаток < 0
	|				ТОГДА -РасчетыПоСтраховымВзносамОстатки.СуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоСтраховымВзносамОстатки.ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная)
	|					И РасчетыПоСтраховымВзносамОстатки.СуммаОстаток < 0
	|				ТОГДА -РасчетыПоСтраховымВзносамОстатки.СуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	""Переплата""
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(
	|			&ОтчетныйПериод,
	|			(ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|				ИЛИ ВидОбязательногоСтрахованияСотрудников = ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная))
	|				И Организация = &Организация) КАК РасчетыПоСтраховымВзносамОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(-ИсправленияПоВзносам.УплаченоСтраховая),
	|	СУММА(-ИсправленияПоВзносам.УплаченоНакопительная),
	|	""Уплата""
	|ИЗ
	|	ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|ГДЕ
	|	ИсправленияПоВзносам.ФиксУплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияСУчетомИсправлений.ФизическоеЛицо,
	|	НачисленияСУчетомИсправлений.КатегорияЗастрахованныхЛиц,
	|	НачисленияСУчетомИсправлений.ТипДоговора,
	|	СУММА(НачисленияСУчетомИсправлений.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(НачисленияСУчетомИсправлений.ПФРСтраховая) КАК ПФРСтраховая
	|ПОМЕСТИТЬ ВТНачисленоСУчетомИсправлений
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленоЗаОтчетныйПериодФормирования.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачисленоЗаОтчетныйПериодФормирования.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		НачисленоЗаОтчетныйПериодФормирования.ТипДоговора КАК ТипДоговора,
	|		НачисленоЗаОтчетныйПериодФормирования.ПФРНакопительная КАК ПФРНакопительная,
	|		НачисленоЗаОтчетныйПериодФормирования.ПФРСтраховая КАК ПФРСтраховая
	|	ИЗ
	|		ВТНачисленоЗаОтчетныйПериодФормирования КАК НачисленоЗаОтчетныйПериодФормирования
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИсправленияПоВзносам КАК ИсправленияПоСотрудникам
	|			ПО НачисленоЗаОтчетныйПериодФормирования.ФизическоеЛицо = ИсправленияПоСотрудникам.ФизическоеЛицо
	|				И НачисленоЗаОтчетныйПериодФормирования.КатегорияЗастрахованныхЛиц = ИсправленияПоСотрудникам.КатегорияЗастрахованныхЛиц
	|				И НачисленоЗаОтчетныйПериодФормирования.ТипДоговора = ИсправленияПоСотрудникам.ТипДоговора
	|				И (ИсправленияПоСотрудникам.ФиксНачисления)
	|	ГДЕ
	|		ИсправленияПоСотрудникам.ФизическоеЛицо ЕСТЬ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленияПоСотрудникам.ФизическоеЛицо,
	|		ИсправленияПоСотрудникам.КатегорияЗастрахованныхЛиц,
	|		ИсправленияПоСотрудникам.ТипДоговора,
	|		ИсправленияПоСотрудникам.НачисленоНакопительная,
	|		ИсправленияПоСотрудникам.НачисленоСтраховая
	|	ИЗ
	|		ВТИсправленияПоВзносам КАК ИсправленияПоСотрудникам
	|	ГДЕ
	|		ИсправленияПоСотрудникам.ФиксНачисления) КАК НачисленияСУчетомИсправлений
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияСУчетомИсправлений.ФизическоеЛицо,
	|	НачисленияСУчетомИсправлений.КатегорияЗастрахованныхЛиц,
	|	НачисленияСУчетомИсправлений.ТипДоговора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленоСУчетомИсправлений.ФизическоеЛицо,
	|	МАКСИМУМ(НачисленоСУчетомИсправлений.КатегорияЗастрахованныхЛиц) КАК КатегорияЗастрахованныхЛиц,
	|	МАКСИМУМ(НачисленоСУчетомИсправлений.ТипДоговора) КАК ТипДоговора,
	|	КОЛИЧЕСТВО(НачисленоСУчетомИсправлений.КатегорияЗастрахованныхЛиц) КАК КоличествоКатегорий
	|ПОМЕСТИТЬ ВТТекущиеКатегорииСотрудников
	|ИЗ
	|	ВТНачисленоСУчетомИсправлений КАК НачисленоСУчетомИсправлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|		ПО НачисленоСУчетомИсправлений.КатегорияЗастрахованныхЛиц = ИсправленияПоВзносам.КатегорияЗастрахованныхЛиц
	|			И НачисленоСУчетомИсправлений.ТипДоговора = ИсправленияПоВзносам.ТипДоговора
	|			И НачисленоСУчетомИсправлений.ФизическоеЛицо = ИсправленияПоВзносам.ФизическоеЛицо
	|			И (ИсправленияПоВзносам.ФиксУплата)
	|ГДЕ
	|	ИсправленияПоВзносам.ФизическоеЛицо ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленоСУчетомИсправлений.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеКатегорииСотрудников.ФизическоеЛицо,
	|	ТекущиеКатегорииСотрудников.КатегорияЗастрахованныхЛиц,
	|	МАКСИМУМ(НачисленоСУчетомИсправлений.ТипДоговора) КАК ТипДоговора
	|ПОМЕСТИТЬ ВТТекущиеКатегорииТипыДоговоров
	|ИЗ
	|	ВТТекущиеКатегорииСотрудников КАК ТекущиеКатегорииСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленоСУчетомИсправлений КАК НачисленоСУчетомИсправлений
	|		ПО ТекущиеКатегорииСотрудников.ФизическоеЛицо = НачисленоСУчетомИсправлений.ФизическоеЛицо
	|			И ТекущиеКатегорииСотрудников.КатегорияЗастрахованныхЛиц = НачисленоСУчетомИсправлений.КатегорияЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеКатегорииСотрудников.ФизическоеЛицо,
	|	ТекущиеКатегорииСотрудников.КатегорияЗастрахованныхЛиц
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	-СУММА(НачисленоЗаОтчетныйПериодФормирования.ПФРНакопительная) КАК ПФРНакопительная,
	|	-СУММА(НачисленоЗаОтчетныйПериодФормирования.ПФРСтраховая) КАК ПФРСтраховая
	|ПОМЕСТИТЬ ВТКорректировкиВсегоНачислено
	|ИЗ
	|	ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленоЗаОтчетныйПериодФормирования КАК НачисленоЗаОтчетныйПериодФормирования
	|		ПО ИсправленияПоВзносам.ФизическоеЛицо = НачисленоЗаОтчетныйПериодФормирования.ФизическоеЛицо
	|			И ИсправленияПоВзносам.КатегорияЗастрахованныхЛиц = НачисленоЗаОтчетныйПериодФормирования.КатегорияЗастрахованныхЛиц
	|			И (ИсправленияПоВзносам.ФиксУплата)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВсегоНачисленоВзносов.ПФРСтраховаяПриход) КАК ПФРСтраховаяПриход,
	|	СУММА(ВсегоНачисленоВзносов.ПФРНакопительнаяПриход) КАК ПФРНакопительнаяПриход
	|ПОМЕСТИТЬ ВТВсегоНачислено
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыПоСтраховымВзносамОбороты.ПФРСтраховая КАК ПФРСтраховаяПриход,
	|		РасчетыПоСтраховымВзносамОбороты.ПФРНакопительная КАК ПФРНакопительнаяПриход
	|	ИЗ
	|		ВТНачисленоСУчетомИсправлений КАК РасчетыПоСтраховымВзносамОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкиВсегоНачислено.ПФРСтраховая,
	|		КорректировкиВсегоНачислено.ПФРНакопительная
	|	ИЗ
	|		ВТКорректировкиВсегоНачислено КАК КорректировкиВсегоНачислено) КАК ВсегоНачисленоВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) КАК Накопительная,
	|	ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) КАК Страховая,
	|	ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяПриход, 0) КАК ПФРСтраховаяПриход,
	|	ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяПриход, 0) КАК ПФРНакопительнаяПриход,
	|	ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0) КАК ПФРСтраховаяРасход,
	|	ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0) КАК ПФРНакопительнаяРасход,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяПриход, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) > ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0) - ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) > ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяПриход, 0)
	|			ТОГДА 100000
	|		ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0) - ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0)) * 100000 / (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяПриход, 0) КАК ЧИСЛО(25, 6))) КАК ЧИСЛО(20, 6))
	|	КОНЕЦ КАК КоэффициентТекущегоПериодаСтраховая,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяПриход, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) > ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0) - ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) > ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяПриход, 0)
	|			ТОГДА 100000
	|		ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0) - ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0)) * 100000 / (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяПриход, 0) КАК ЧИСЛО(25, 6))) КАК ЧИСЛО(20, 6))
	|	КОНЕЦ КАК КоэффициентТекущегоПериодаНакопительная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) < ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0)
	|			ТОГДА 100000
	|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0) * 100000 / (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) КАК ЧИСЛО(25, 6))) КАК ЧИСЛО(20, 6))
	|	КОНЕЦ КАК КоэффициентПрошлыхПериодовСтраховая,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) < ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0)
	|			ТОГДА 100000
	|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0) * 100000 / (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) КАК ЧИСЛО(25, 6))) КАК ЧИСЛО(20, 6))
	|	КОНЕЦ КАК КоэффициентПрошлыхПериодовНакопительная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) + ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяПриход, 0) > ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0)
	|			ТОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяРасход, 0)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыСтраховая, 0) + ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРСтраховаяПриход, 0)
	|	КОНЕЦ КАК УчтеноУплатыСтраховая,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) + ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяПриход, 0) > ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0)
	|			ТОГДА ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяРасход, 0)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.НедоуплаченоЗаПрошлыеПериодыНакопительная, 0) + ЕСТЬNULL(ДанныеДляРассчетаКоэффициентов.ПФРНакопительнаяПриход, 0)
	|	КОНЕЦ КАК УчтеноУплатыНакопительная
	|ПОМЕСТИТЬ ВТКоэффициентыУплаты
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ДанныеДляРассчетаКоэффициентовНесгруппированные.ПФРСтраховаяПриход) КАК ПФРСтраховаяПриход,
	|		СУММА(ДанныеДляРассчетаКоэффициентовНесгруппированные.ПФРНакопительнаяПриход) КАК ПФРНакопительнаяПриход,
	|		СУММА(ДанныеДляРассчетаКоэффициентовНесгруппированные.ПФРСтраховаяРасход) КАК ПФРСтраховаяРасход,
	|		СУММА(ДанныеДляРассчетаКоэффициентовНесгруппированные.ПФРНакопительнаяРасход) КАК ПФРНакопительнаяРасход,
	|		СУММА(ДанныеДляРассчетаКоэффициентовНесгруппированные.НедоуплаченоЗаПрошлыеПериодыНакопительная) КАК НедоуплаченоЗаПрошлыеПериодыНакопительная,
	|		СУММА(ДанныеДляРассчетаКоэффициентовНесгруппированные.НедоуплаченоЗаПрошлыеПериодыСтраховая) КАК НедоуплаченоЗаПрошлыеПериодыСтраховая
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВсегоНачислено.ПФРСтраховаяПриход КАК ПФРСтраховаяПриход,
	|			ВсегоНачислено.ПФРНакопительнаяПриход КАК ПФРНакопительнаяПриход,
	|			NULL КАК ПФРСтраховаяРасход,
	|			NULL КАК ПФРНакопительнаяРасход,
	|			NULL КАК НедоуплаченоЗаПрошлыеПериодыНакопительная,
	|			NULL КАК НедоуплаченоЗаПрошлыеПериодыСтраховая
	|		ИЗ
	|			ВТВсегоНачислено КАК ВсегоНачислено
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			0,
	|			0,
	|			ВсегоУплачено.ПФРСтраховаяРасход,
	|			ВсегоУплачено.ПФРНакопительнаяРасход,
	|			0,
	|			0
	|		ИЗ
	|			ВТВсегоУплачено КАК ВсегоУплачено
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			0,
	|			0,
	|			0,
	|			0,
	|			НедоуплаченоЗаПрошлыеПериоды.Накопительная,
	|			НедоуплаченоЗаПрошлыеПериоды.Страховая
	|		ИЗ
	|			ВТНедоуплаченоЗаПрошлыеПериоды КАК НедоуплаченоЗаПрошлыеПериоды) КАК ДанныеДляРассчетаКоэффициентовНесгруппированные) КАК ДанныеДляРассчетаКоэффициентов
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	ЕСТЬNULL(СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка)) КАК КатегорияЗастрахованныхЛиц,
	|	ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка) КАК ТипДоговора
	|ПОМЕСТИТЬ ВТКатегорииЗастрахованныхЛиц
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО СведенияОДоходах.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (ГОД(СведенияОДоходах.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &ОтчетныйПериод И &КонецПериодаУплаты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КатегорииЗастрахованныхЛиц.КатегорияЗастрахованныхЛиц) КАК КатегорияЗастрахованныхЛиц,
	|	КатегорииЗастрахованныхЛиц.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТКатегорииУплатыПрошлыхПериодов
	|ИЗ
	|	ВТКатегорииЗастрахованныхЛиц КАК КатегорииЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	КатегорииЗастрахованныхЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КатегорииУплатыПрошлыхПериодов.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА КатегорииУплатыПрошлыхПериодов.КатегорияЗастрахованныхЛиц В (ЗНАЧЕНИЕ(перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка), ЗНАЧЕНИЕ(перечисление.КатегорииЗастрахованныхЛицДляПФР.ЧЭС))
	|			ТОГДА ЗНАЧЕНИЕ(перечисление.КатегорииЗастрахованныхЛицДляПФР.НР)
	|		ИНАЧЕ ЕСТЬNULL(КатегорииУплатыПрошлыхПериодов.КатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(перечисление.КатегорииЗастрахованныхЛицДляПФР.НР))
	|	КОНЕЦ КАК КатегорияЗастрахованныхЛиц,
	|	КатегорииЗастрахованныхЛиц.ТипДоговора
	|ПОМЕСТИТЬ ВТКатегорииТипыДоговораУплатыПрошлыхПериодов
	|ИЗ
	|	ВТКатегорииУплатыПрошлыхПериодов КАК КатегорииУплатыПрошлыхПериодов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКатегорииЗастрахованныхЛиц КАК КатегорииЗастрахованныхЛиц
	|		ПО КатегорииУплатыПрошлыхПериодов.КатегорияЗастрахованныхЛиц = КатегорииЗастрахованныхЛиц.КатегорияЗастрахованныхЛиц
	|			И КатегорииУплатыПрошлыхПериодов.ФизическоеЛицо = КатегорииЗастрахованныхЛиц.ФизическоеЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТекущиеКатегорииТипыДоговоров.ФизическоеЛицо,
	|	ТекущиеКатегорииТипыДоговоров.КатегорияЗастрахованныхЛиц,
	|	ТекущиеКатегорииТипыДоговоров.ТипДоговора
	|ИЗ
	|	ВТНедоуплаченоЗаПрошлыеПериоды КАК НедоуплаченоЗаПрошлыеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТекущиеКатегорииТипыДоговоров КАК ТекущиеКатегорииТипыДоговоров
	|		ПО НедоуплаченоЗаПрошлыеПериоды.ФизическоеЛицо = ТекущиеКатегорииТипыДоговоров.ФизическоеЛицо
	|ГДЕ
	|	(НедоуплаченоЗаПрошлыеПериоды.Накопительная <> 0
	|			ИЛИ НедоуплаченоЗаПрошлыеПериоды.Страховая <> 0);
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСумм.ФизическоеЛицо,
	|	РасчетСумм.КатегорияЗастрахованныхЛиц,
	|	СУММА(РасчетСумм.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	СУММА(РасчетСумм.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(РасчетСумм.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(РасчетСумм.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	РасчетСумм.ФиксУплата,
	|	РасчетСумм.ФиксНачисления,
	|	РасчетСумм.ТипДоговора
	|ПОМЕСТИТЬ ВТРасчетСумм
	|ИЗ
	|	(ВЫБРАТЬ
	|		НедоуплаченоЗаПрошлыеПериоды.ФизическоеЛицо КАК ФизическоеЛицо,
	|		КатегорииТипыДоговораУплатыПрошлыхПериодов.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		КатегорииТипыДоговораУплатыПрошлыхПериодов.ТипДоговора КАК ТипДоговора,
	|		НедоуплаченоЗаПрошлыеПериоды.Накопительная * КоэффициентыУплаты.КоэффициентПрошлыхПериодовНакопительная / 100000 КАК УплаченоНакопительная,
	|		НедоуплаченоЗаПрошлыеПериоды.Страховая * КоэффициентыУплаты.КоэффициентПрошлыхПериодовСтраховая / 100000 КАК УплаченоСтраховая,
	|		0 КАК НачисленоСтраховая,
	|		0 КАК НачисленоНакопительная,
	|		ЛОЖЬ КАК ФиксУплата,
	|		ЛОЖЬ КАК ФиксНачисления
	|	ИЗ
	|		ВТНедоуплаченоЗаПрошлыеПериоды КАК НедоуплаченоЗаПрошлыеПериоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыУплаты КАК КоэффициентыУплаты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКатегорииТипыДоговораУплатыПрошлыхПериодов КАК КатегорииТипыДоговораУплатыПрошлыхПериодов
	|			ПО НедоуплаченоЗаПрошлыеПериоды.ФизическоеЛицо = КатегорииТипыДоговораУплатыПрошлыхПериодов.ФизическоеЛицо
	|	ГДЕ
	|		(НедоуплаченоЗаПрошлыеПериоды.Накопительная <> 0
	|				ИЛИ НедоуплаченоЗаПрошлыеПериоды.Страховая <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленоПоЗЛ.ФизическоеЛицо,
	|		НачисленоПоЗЛ.КатегорияЗастрахованныхЛиц,
	|		НачисленоПоЗЛ.ТипДоговора,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ИсправленияПоВзносам.ФиксУплата, ЛОЖЬ)
	|				ТОГДА 0
	|			ИНАЧЕ НачисленоПоЗЛ.ПФРНакопительная * КоэффициентыУплаты.КоэффициентТекущегоПериодаНакопительная / 100000
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ИсправленияПоВзносам.ФиксУплата, ЛОЖЬ)
	|				ТОГДА 0
	|			ИНАЧЕ НачисленоПоЗЛ.ПФРСтраховая * КоэффициентыУплаты.КоэффициентТекущегоПериодаСтраховая / 100000
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ИсправленияПоВзносам.ФиксНачисления, ЛОЖЬ)
	|				ТОГДА 0
	|			ИНАЧЕ НачисленоПоЗЛ.ПФРСтраховая
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ИсправленияПоВзносам.ФиксНачисления, ЛОЖЬ)
	|				ТОГДА 0
	|			ИНАЧЕ НачисленоПоЗЛ.ПФРНакопительная
	|		КОНЕЦ,
	|		ЕСТЬNULL(ИсправленияПоВзносам.ФиксУплата, ЛОЖЬ),
	|		ЕСТЬNULL(ИсправленияПоВзносам.ФиксНачисления, ЛОЖЬ)
	|	ИЗ
	|		ВТНачисленоСУчетомИсправлений КАК НачисленоПоЗЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыУплаты КАК КоэффициентыУплаты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|			ПО НачисленоПоЗЛ.ФизическоеЛицо = ИсправленияПоВзносам.ФизическоеЛицо
	|	ГДЕ
	|		(НачисленоПоЗЛ.ПФРНакопительная <> 0
	|				ИЛИ НачисленоПоЗЛ.ПФРСтраховая <> 0
	|				ИЛИ ЕСТЬNULL(ИсправленияПоВзносам.ФиксНачисления, ЛОЖЬ)
	|				ИЛИ ЕСТЬNULL(ИсправленияПоВзносам.ФиксУплата, ЛОЖЬ))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленияПоВзносам.ФизическоеЛицо,
	|		ИсправленияПоВзносам.КатегорияЗастрахованныхЛиц,
	|		ИсправленияПоВзносам.ТипДоговора,
	|		ВЫБОР
	|			КОГДА ИсправленияПоВзносам.ФиксУплата
	|				ТОГДА ИсправленияПоВзносам.УплаченоНакопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИсправленияПоВзносам.ФиксУплата
	|				ТОГДА ИсправленияПоВзносам.УплаченоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИсправленияПоВзносам.ФиксНачисления
	|				ТОГДА ИсправленияПоВзносам.НачисленоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИсправленияПоВзносам.ФиксНачисления
	|				ТОГДА ИсправленияПоВзносам.НачисленоНакопительная
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ИсправленияПоВзносам.ФиксУплата,
	|		ИсправленияПоВзносам.ФиксНачисления
	|	ИЗ
	|		ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|	) КАК РасчетСумм
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСумм.ФизическоеЛицо,
	|	РасчетСумм.КатегорияЗастрахованныхЛиц,
	|	РасчетСумм.ФиксУплата,
	|	РасчетСумм.ФиксНачисления,
	|	РасчетСумм.ТипДоговора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВсегоУплачено.Страховая) КАК Страховая,
	|	СУММА(ВсегоУплачено.Накопительная) КАК Накопительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		Уплачено.ПФРСтраховаяРасход КАК Страховая,
	|		Уплачено.ПФРНакопительнаяРасход КАК Накопительная
	|	ИЗ
	|		ВТКоэффициентыУплаты КАК Уплачено
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИсправленияПоВзносам.УплаченоСтраховая,
	|		ИсправленияПоВзносам.УплаченоНакопительная
	|	ИЗ
	|		ВТИсправленияПоВзносам КАК ИсправленияПоВзносам
	|	ГДЕ
	|		ИсправленияПоВзносам.ФиксУплата) КАК ВсегоУплачено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(РасчетныеДанные.УплаченоСтраховая КАК ЧИСЛО(15, 2))), 0) КАК Страховая,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(РасчетныеДанные.УплаченоНакопительная КАК ЧИСЛО(15, 2))), 0) КАК Накопительная
	|ИЗ
	|	ВТРасчетСумм КАК РасчетныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетныеДанные.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	РасчетныеДанные.ТипДоговора,
	|	СУММА(РасчетныеДанные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	СУММА(РасчетныеДанные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(РасчетныеДанные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(РасчетныеДанные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	МАКСИМУМ(РасчетныеДанные.ФиксУплата) КАК ФиксУплата,
	|	МАКСИМУМ(РасчетныеДанные.ФиксНачисления) КАК ФиксНачисления
	|ИЗ
	|	ВТРасчетСумм КАК РасчетныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетныеДанные.ФизическоеЛицо,
	|	РасчетныеДанные.КатегорияЗастрахованныхЛиц,
	|	РасчетныеДанные.ТипДоговора
	|
	|ИМЕЮЩИЕ
	|	(СУММА(РасчетныеДанные.УплаченоНакопительная) <> 0
	|		ИЛИ СУММА(РасчетныеДанные.УплаченоСтраховая) <> 0
	|		ИЛИ СУММА(РасчетныеДанные.НачисленоСтраховая) <> 0
	|		ИЛИ СУММА(РасчетныеДанные.НачисленоНакопительная) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	КатегорияЗастрахованныхЛиц";
	
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	РезультатЗапроса = Результаты[ВсегоЗапросов - 1].Выгрузить();
	Распределено = Результаты[ВсегоЗапросов - 2].Выбрать();
	Распределено.Следующий();
	Зарегистрировано = Результаты[ВсегоЗапросов - 3].Выбрать();
	Зарегистрировано.Следующий();
	
	Если Зарегистрировано.Страховая <> Распределено.Страховая Или Зарегистрировано.Накопительная <> Распределено.Накопительная Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетныеДанные.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
		|	РасчетныеДанные.ТипДоговора КАК ТипДоговора,
		|	СУММА(РасчетныеДанные.УплаченоНакопительная) КАК УплаченоНакопительная,
		|	СУММА(ВЫРАЗИТЬ(РасчетныеДанные.УплаченоНакопительная КАК ЧИСЛО(15, 2))) КАК Итог
		|ИЗ
		|	ВТРасчетСумм КАК РасчетныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетныеДанные.ФизическоеЛицо,
		|	РасчетныеДанные.КатегорияЗастрахованныхЛиц,
		|	РасчетныеДанные.ТипДоговора
		|
		|ИМЕЮЩИЕ
		|	(СУММА(РасчетныеДанные.УплаченоНакопительная) <> 0
		|		ИЛИ СУММА(РасчетныеДанные.НачисленоНакопительная) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетныеДанные.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
		|	РасчетныеДанные.ТипДоговора КАК ТипДоговора,
		|	СУММА(РасчетныеДанные.УплаченоСтраховая) КАК УплаченоСтраховая,
		|	СУММА(ВЫРАЗИТЬ(РасчетныеДанные.УплаченоСтраховая КАК ЧИСЛО(15, 2))) КАК Итог
		|ИЗ
		|	ВТРасчетСумм КАК РасчетныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетныеДанные.ФизическоеЛицо,
		|	РасчетныеДанные.КатегорияЗастрахованныхЛиц,
		|	РасчетныеДанные.ТипДоговора
		|
		|ИМЕЮЩИЕ
		|	(СУММА(РасчетныеДанные.УплаченоСтраховая) <> 0
		|		ИЛИ СУММА(РасчетныеДанные.НачисленоСтраховая) <> 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо";
		
		Результаты = Запрос.ВыполнитьПакет();
		ВсегоЗапросов = Результаты.Количество();
		СтруктураПоиска = Новый Структура("ФизическоеЛицо,КатегорияЗастрахованныхЛиц"); 
		Если Зарегистрировано.Страховая <> Распределено.Страховая Тогда
			Расхождение = Зарегистрировано.Страховая - Распределено.Страховая;
			ВременнаяТаблица = Результаты[ВсегоЗапросов - 1].Выгрузить();
			ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"УплаченоСтраховая", ВременнаяТаблица.Итог("Итог") + Расхождение, 2, "ФизическоеЛицо,КатегорияЗастрахованныхЛиц");
			Для каждого СтрокаТЧ Из ВременнаяТаблица Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);
				РезультатЗапроса.НайтиСтроки(СтруктураПоиска)[0].УплаченоСтраховая = СтрокаТЧ.УплаченоСтраховая;
			КонецЦикла;
		КонецЕсли;
		Если Зарегистрировано.Накопительная <> Распределено.Накопительная Тогда
			Расхождение = Зарегистрировано.Накопительная - Распределено.Накопительная;
			ВременнаяТаблица = Результаты[ВсегоЗапросов - 2].Выгрузить();
			ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"УплаченоНакопительная", ВременнаяТаблица.Итог("Итог") + Расхождение, 2, "ФизическоеЛицо,КатегорияЗастрахованныхЛиц");
			Для каждого СтрокаТЧ Из ВременнаяТаблица Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);
				РезультатЗапроса.НайтиСтроки(СтруктураПоиска)[0].УплаченоНакопительная = СтрокаТЧ.УплаченоНакопительная;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат РезультатЗапроса;
		
КонецФункции

Процедура ОкруглитьСлагаемыеПоСумме(Данные, ИмяКолонки, Сумма, Точность = 0, ИмяКлюча = "ФизическоеЛицо") Экспорт 
	
	ВременнаяТаблица = Данные.Скопировать(, ИмяКлюча + "," + ИмяКолонки);
	ВременнаяТаблица.Колонки.Добавить(ИмяКолонки + "Окр");
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ[ИмяКолонки + "Окр"] = Окр(СтрокаТЗ[ИмяКолонки],Точность)
	КонецЦикла;
	Данные.ЗагрузитьКолонку(ВременнаяТаблица.ВыгрузитьКолонку(ИмяКолонки + "Окр"),ИмяКолонки);
	
	СуммаСлагаемых = ВременнаяТаблица.Итог(ИмяКолонки + "Окр");
	Если СуммаСлагаемых <> Сумма Тогда
		Шаг = Pow(10, -Точность);
		РасхождениеСуммы = Сумма - СуммаСлагаемых;
		Приращение = ?(РасхождениеСуммы > 0, Шаг, -Шаг);
		ВсегоПриращений = Мин(РасхождениеСуммы / Приращение, ВременнаяТаблица.Количество());
		ВременнаяТаблица.Колонки.Добавить(ИмяКолонки + "Расхождение");
		ВременнаяТаблица.Колонки.Добавить(ИмяКолонки + "Изменение");
		Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
			СтрокаТЗ[ИмяКолонки + "Расхождение"] = ?(СтрокаТЗ[ИмяКолонки + "Окр"] < СтрокаТЗ[ИмяКолонки], СтрокаТЗ[ИмяКолонки] - СтрокаТЗ[ИмяКолонки + "Окр"], СтрокаТЗ[ИмяКолонки + "Окр"] - СтрокаТЗ[ИмяКолонки]);
			СтрокаТЗ[ИмяКолонки + "Изменение"] = ?(СтрокаТЗ[ИмяКолонки + "Окр"] < СтрокаТЗ[ИмяКолонки], - Шаг, Шаг);
		КонецЦикла;
		ВременнаяТаблица.Сортировать(ИмяКолонки + "Изменение" + ?(Приращение > 0,""," Убыв") + ", " + ИмяКолонки + "Расхождение Убыв");
		СтруктураПоиска = Новый Структура(ИмяКлюча); 
		Для Сч = 1 По ВсегоПриращений Цикл
			Если ВременнаяТаблица[Сч-1][ИмяКолонки + "Изменение"] <> Приращение Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВременнаяТаблица[Сч-1]);
				Данные.НайтиСтроки(СтруктураПоиска)[0][ИмяКолонки] = ВременнаяТаблица[Сч-1][ИмяКолонки + "Окр"] + Приращение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьВТСКорректировкойДанныхОВзносахПФР(МенеджерВТ, Организация, Дата, КорректируемыйПериод, КатегорияЗастрахованныхЛиц) Экспорт 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", КорректируемыйПериод);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеОтчетногоПериодаПерсУчета(КорректируемыйПериод));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраховыеВзносыПереданныеВПФРОбороты.ФизическоеЛицо,
	|	СтраховыеВзносыПереданныеВПФРОбороты.КатегорияЗастрахованныхЛиц,
	|	СтраховыеВзносыПереданныеВПФРОбороты.СтраховаяПриход КАК НачисленоСтраховая,
	|	СтраховыеВзносыПереданныеВПФРОбороты.НакопительнаяПриход КАК НачисленоНакопительная,
	|	СтраховыеВзносыПереданныеВПФРОбороты.СтраховаяРасход КАК УплаченоСтраховая,
	|	СтраховыеВзносыПереданныеВПФРОбороты.НакопительнаяРасход КАК УплаченоНакопительная
	|ПОМЕСТИТЬ ВТВзносыЗаКорректируемыйПериод
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыПереданныеВПФР.Обороты(
	|			&ОтчетныйПериод,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И (ФизическоеЛицо, КатегорияЗастрахованныхЛиц) В
	|					(ВЫБРАТЬ
	|						СуммыВзносов.ФизическоеЛицо,
	|						СуммыВзносов.КатегорияЗастрахованныхЛиц
	|					ИЗ
	|						ВТСуммыВзносов КАК СуммыВзносов)) КАК СтраховыеВзносыПереданныеВПФРОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыВзносов.ФизическоеЛицо,
	|	СуммыВзносов.КатегорияЗастрахованныхЛиц,
	|	СуммыВзносов.НачисленоНакопительная,
	|	СуммыВзносов.НачисленоСтраховая,
	|	СуммыВзносов.УплаченоНакопительная,
	|	СуммыВзносов.УплаченоСтраховая,
	|	СуммыВзносов.НачисленоСтраховая - ЕСТЬNULL(ВзносыЗаКорректируемыйПериод.НачисленоСтраховая, 0) КАК ДоНачисленоСтраховая,
	|	СуммыВзносов.НачисленоНакопительная - ЕСТЬNULL(ВзносыЗаКорректируемыйПериод.НачисленоНакопительная, 0) КАК ДоНачисленоНакопительная,
	|	СуммыВзносов.УплаченоСтраховая - ЕСТЬNULL(ВзносыЗаКорректируемыйПериод.УплаченоСтраховая, 0) КАК ДоУплаченоСтраховая,
	|	СуммыВзносов.УплаченоНакопительная  -ЕСТЬNULL(ВзносыЗаКорректируемыйПериод.УплаченоНакопительная, 0) КАК ДоУплаченоНакопительная,
	|	СуммыВзносов.ФиксНачисления,
	|	СуммыВзносов.ФиксУплата
	|ПОМЕСТИТЬ ВТДанныеОВзносахВПФР
	|ИЗ
	|	ВТСуммыВзносов КАК СуммыВзносов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВзносыЗаКорректируемыйПериод КАК ВзносыЗаКорректируемыйПериод
	|		ПО СуммыВзносов.ФизическоеЛицо = ВзносыЗаКорректируемыйПериод.ФизическоеЛицо
	|			И СуммыВзносов.КатегорияЗастрахованныхЛиц = ВзносыЗаКорректируемыйПериод.КатегорияЗастрахованныхЛиц";
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура СформироватьВТСданнымиСтажаПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, КорректирующиеСведения = Ложь, МассивДокументов = Неопределено, МассивФизЛиц = Неопределено, КатегорияСотрудников = Неопределено)Экспорт 
	
	МенеджерВТПромежуточный = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТПромежуточный;
	
	ОкончаниеОтчетногоПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
	Если МассивФизЛиц <> Неопределено Тогда
		
		ТаблицаОтбора = Новый ТаблицаЗначений;
		ТаблицаОтбора.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
		
		Для Каждого ФизЛицо Из МассивФизЛиц Цикл
			СтрокаТаблицы = ТаблицаОтбора.Добавить();
			СтрокаТаблицы.ФизическоеЛицо = ФизЛицо;
		КонецЦикла;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОтбора.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизическиеЛицаРаботавшиеВОрганизации
		|ИЗ
		|	&ТаблицаОтбора КАК ТаблицаОтбора";
		
		Запрос.УстановитьПараметр("ТаблицаОтбора", ТаблицаОтбора);
		
		Запрос.Выполнить();
		
	Иначе
		СформироватьТаблицуВТФизическиеЛицаРаботавшиеВОрганизации(МенеджерВТПромежуточный, Организация, ОтчетныйПериод, ОкончаниеОтчетногоПериода);
	КонецЕсли;
	
	ПодготовитьВТТаблицаСтажа(МенеджерВТПромежуточный, Организация, ОтчетныйПериод, ОкончаниеОтчетногоПериода, "ВТФизическиеЛицаРаботавшиеВОрганизации", МассивФизЛиц);
	СформироватьВТСИсправленимяПоСтажу(МенеджерВТПромежуточный, ОтчетныйПериод, КорректирующиеСведения, МассивДокументов, МассивФизЛиц);
	
	ТаблицаСтажа = ТаблицаСтажаПоКатегориям(МенеджерВТПромежуточный, Организация, ОтчетныйПериод, "ВТТаблицаСтажа", КатегорияСотрудников);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ТаблицаСтажа", ТаблицаСтажа);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСтажа.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаСтажа.КатегорияЗастрахованныхЛиц,
	|	ТаблицаСтажа.ТипДоговора,
	|	ТаблицаСтажа.ДатаНачалаПериода,
	|	ТаблицаСтажа.ДатаОкончанияПериода,
	|	ТаблицаСтажа.ОсобыеУсловияТруда,
	|	ТаблицаСтажа.КодПозицииСписка,
	|	ТаблицаСтажа.ОснованиеИсчисляемогоСтажа,
	|	ТаблицаСтажа.ПервыйПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ВторойПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ТретийПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ОснованиеВыслугиЛет,
	|	ТаблицаСтажа.ПервыйПараметрВыслугиЛет,
	|	ТаблицаСтажа.ВторойПараметрВыслугиЛет,
	|	ТаблицаСтажа.ТретийПараметрВыслугиЛет,
	|	ТаблицаСтажа.ТерриториальныеУсловия,
	|	ТаблицаСтажа.ПараметрТерриториальныхУсловий,
	|	ТаблицаСтажа.ФиксСтаж,
	|	ТаблицаСтажа.СложныйСтаж
	|ПОМЕСТИТЬ ВТДанныеСтажа
	|ИЗ
	|	&ТаблицаСтажа КАК ТаблицаСтажа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ТаблицаСтажа.КатегорияЗастрахованныхЛиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтажа.ФизическоеЛицо,
	|	МИНИМУМ(ТаблицаСтажа.СложныйСтаж) КАК СложныйСтаж,
	|	ЛОЖЬ  КАК ЛьготыПоУсловиямТруда,
	|	ЛОЖЬ КАК ЛьготыПоВыслуге,
	|	ТаблицаСтажа.ТерриториальныеУсловия
	|ПОМЕСТИТЬ ВТВидСтажаСотрудников
	|ИЗ
	|	ВТДанныеСтажа КАК ТаблицаСтажа
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСтажа.ФизическоеЛицо,
	|	ТаблицаСтажа.ТерриториальныеУсловия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтажа.ФизическоеЛицо,
	|	ТаблицаСтажа.КатегорияЗастрахованныхЛиц,
	|	ТаблицаСтажа.ТипДоговора,
	|	ТаблицаСтажа.ДатаНачалаПериода,
	|	ТаблицаСтажа.ДатаОкончанияПериода,
	|	ТаблицаСтажа.ОсобыеУсловияТруда,
	|	ТаблицаСтажа.КодПозицииСписка,
	|	ТаблицаСтажа.ОснованиеИсчисляемогоСтажа,
	|	ТаблицаСтажа.ПервыйПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ВторойПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ТретийПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ОснованиеВыслугиЛет,
	|	ТаблицаСтажа.ПервыйПараметрВыслугиЛет,
	|	ТаблицаСтажа.ВторойПараметрВыслугиЛет,
	|	ТаблицаСтажа.ТретийПараметрВыслугиЛет,
	|	ТаблицаСтажа.ТерриториальныеУсловия,
	|	ТаблицаСтажа.ПараметрТерриториальныхУсловий,
	|	ТаблицаСтажа.ФиксСтаж,
	|	ЕСТЬNULL(ВидСтажаСотрудников.СложныйСтаж, ЛОЖЬ) КАК СложныйСтаж,
	|	ВидСтажаСотрудников.ЛьготыПоУсловиямТруда,
	|	ВидСтажаСотрудников.ЛьготыПоВыслуге,
	|	ВидСтажаСотрудников.ТерриториальныеУсловия КАК МинимальныеТерриториальныеУсловия
	|ПОМЕСТИТЬ ВТДанныеОСтажеПоКатегориям
	|ИЗ
	|	ВТДанныеСтажа КАК ТаблицаСтажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВидСтажаСотрудников КАК ВидСтажаСотрудников
	|		ПО ТаблицаСтажа.ФизическоеЛицо = ВидСтажаСотрудников.ФизическоеЛицо";
				   
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуВТФизическиеЛицаРаботавшиеВОрганизации(МенеджерВременныхТаблиц, Организация, НачалоПериода, ОкончаниеПериода) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
	Запрос.УстановитьПараметр("НачалоПериода", ?(НачалоПериода = '00010101000000', ОкончаниеПериода, НачалоПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыРаботыСотрудниковДатаПриема.Сотрудник КАК ФизическоеЛицо,
	|	&ОкончаниеПериода КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаРаботавшиеВОрганизации
	|ИЗ
	|	Документ.ПриемНаРаботу.Сотрудники КАК ПериодыРаботыСотрудниковДатаПриема
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Сотрудники КАК ПериодыРаботыСотрудниковДатаУвольнения
	|		ПО ПериодыРаботыСотрудниковДатаПриема.Сотрудник = ПериодыРаботыСотрудниковДатаУвольнения.Сотрудник
	|			И (ПериодыРаботыСотрудниковДатаУвольнения.СтруктурнаяЕдиница = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|ГДЕ
	|	ПериодыРаботыСотрудниковДатаПриема.Ссылка.Организация = &Организация
	|	И ПериодыРаботыСотрудниковДатаПриема.Ссылка.Проведен
	|	И ПериодыРаботыСотрудниковДатаПриема.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И ПериодыРаботыСотрудниковДатаПриема.Период <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ПериодыРаботыСотрудниковДатаПриема.Период <= &ОкончаниеПериода
	|	И (ПериодыРаботыСотрудниковДатаУвольнения.Период ЕСТЬ NULL 
	|			ИЛИ ПериодыРаботыСотрудниковДатаУвольнения.Период >= &НачалоПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПодготовитьВТТаблицаСтажа(МенеджерВТ, Организация, НачалоПериода, ОкончаниеПериода, ИмяВременнойТаблицы, МассивФизЛиц = Неопределено)Экспорт
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТипДоговора", ?(Год(НачалоПериода) >= 2013, Перечисления.ТипДоговораСЗВ63.Трудовой, Перечисления.ТипДоговораСЗВ63.ПустаяСсылка()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыРаботыСотрудниковДатаПриема.Сотрудник КАК ФизическоеЛицо,
	|	МАКСИМУМ(ПериодыРаботыСотрудниковДатаПриема.Период) КАК ДатаПриема,
	|	МАКСИМУМ(ЕСТЬNULL(ПериодыРаботыСотрудниковДатаУвольнения.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаУвольнения
	|ПОМЕСТИТЬ ВТПериодыРаботыСотрудников
	|ИЗ
	|	РегистрСведений.Сотрудники КАК ПериодыРаботыСотрудниковДатаПриема
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Сотрудники КАК ПериодыРаботыСотрудниковДатаУвольнения
	|		ПО (ПериодыРаботыСотрудниковДатаУвольнения.Организация = &Организация)
	|			И ПериодыРаботыСотрудниковДатаПриема.Сотрудник = ПериодыРаботыСотрудниковДатаУвольнения.Сотрудник
	|			И (ПериодыРаботыСотрудниковДатаУвольнения.СтруктурнаяЕдиница = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|			И (ПериодыРаботыСотрудниковДатаУвольнения.Регистратор ССЫЛКА Документ.Увольнение)
	|ГДЕ
	|	ПериодыРаботыСотрудниковДатаПриема.Организация = &Организация
	|	И ПериодыРаботыСотрудниковДатаПриема.Регистратор ССЫЛКА Документ.ПриемНаРаботу
	|	И ПериодыРаботыСотрудниковДатаПриема.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И ПериодыРаботыСотрудниковДатаПриема.Период <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ПериодыРаботыСотрудниковДатаПриема.Период <= &ОкончаниеПериода
	|	И (ПериодыРаботыСотрудниковДатаУвольнения.Период ЕСТЬ NULL
	|			ИЛИ ПериодыРаботыСотрудниковДатаУвольнения.Период >= &НачалоПериода)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыРаботыСотрудниковДатаПриема.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктуальныеСотрудники.ФизическоеЛицо КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Сотрудники.ДатаПриема >= &НачалоПериода
	|			ТОГДА Сотрудники.ДатаПриема
	|		ИНАЧЕ &НачалоПериода
	|	КОНЕЦ КАК ДатаНачалаПериода,
	|	ВЫБОР
	|		КОГДА Сотрудники.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИЛИ Сотрудники.ДатаУвольнения >= &ОкончаниеПериода
	|			ТОГДА &ОкончаниеПериода
	|		ИНАЧЕ Сотрудники.ДатаУвольнения
	|	КОНЕЦ КАК ДатаОкончанияПериода,
	|	&ТипДоговора КАК ТипДоговора,
	|	"""" КАК ОсобыеУсловияТруда,
	|	"""" КАК КодПозицииСписка,
	|	"""" КАК ОснованиеИсчисляемогоСтажа,
	|	0 КАК ПервыйПараметрИсчисляемогоСтажа,
	|	0 КАК ВторойПараметрИсчисляемогоСтажа,
	|	"""" КАК ТретийПараметрИсчисляемогоСтажа,
	|	"""" КАК ОснованиеВыслугиЛет,
	|	0 КАК ПервыйПараметрВыслугиЛет,
	|	0 КАК ВторойПараметрВыслугиЛет,
	|	0 КАК ТретийПараметрВыслугиЛет,
	|	"""" КАК ТерриториальныеУсловия,
	|	0 КАК ПараметрТерриториальныхУсловий
	|ИЗ
	|	ИсточникДанныхОтбора КАК АктуальныеСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодыРаботыСотрудников КАК Сотрудники
	|		ПО АктуальныеСотрудники.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаНачалаПериода УБЫВ,
	|	ДатаОкончанияПериода УБЫВ";
	
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанныхОтбора", ИмяВременнойТаблицы);
	
	ТаблицаСтажа = Запрос.Выполнить().Выгрузить();
	
	ПериодыСформированы = Ложь;
	
	
	Н = ТаблицаСтажа.Количество() - 1;
	Пока Н > 0 Цикл
		
		ТекущаяЗапись = ТаблицаСтажа[Н];
		ПредшествующаяЗапись = ТаблицаСтажа[Н-1];
		
		Если ТекущаяЗапись.Сотрудник = ПредшествующаяЗапись.Сотрудник И 
			 ((ТекущаяЗапись.ДатаНачалаПериода >= ПредшествующаяЗапись.ДатаНачалаПериода И ТекущаяЗапись.ДатаНачалаПериода <= ПредшествующаяЗапись.ДатаОкончанияПериода)
			 Или (ПредшествующаяЗапись.ДатаНачалаПериода >= ТекущаяЗапись.ДатаНачалаПериода И ПредшествующаяЗапись.ДатаНачалаПериода <= ТекущаяЗапись.ДатаОкончанияПериода))
			 Тогда
			
			 ТекущаяЗапись.ДатаНачалаПериода = Мин(ТекущаяЗапись.ДатаНачалаПериода, ПредшествующаяЗапись.ДатаНачалаПериода);
			 ТекущаяЗапись.ДатаОкончанияПериода = Макс(ТекущаяЗапись.ДатаОкончанияПериода, ПредшествующаяЗапись.ДатаОкончанияПериода);
			
			ТаблицаСтажа.Удалить(ПредшествующаяЗапись);
		КонецЕсли;
		Н = Н - 1;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПериодыРаботыСорт", ТаблицаСтажа);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныйСтаж.Сотрудник,
	|	ИсходныйСтаж.ТипДоговора,
	|	ИсходныйСтаж.ДатаНачалаПериода,
	|	ИсходныйСтаж.ДатаОкончанияПериода,
	|	ИсходныйСтаж.ОсобыеУсловияТруда,
	|	ИсходныйСтаж.КодПозицииСписка,
	|	ИсходныйСтаж.ТретийПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ОснованиеВыслугиЛет,
	|	ИсходныйСтаж.ТерриториальныеУсловия,
	|	ИсходныйСтаж.ПараметрТерриториальныхУсловий,
	|	ИсходныйСтаж.ТретийПараметрВыслугиЛет,
	|	ИсходныйСтаж.ОснованиеИсчисляемогоСтажа,
	|	ИсходныйСтаж.ПервыйПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ВторойПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ПервыйПараметрВыслугиЛет,
	|	ИсходныйСтаж.ВторойПараметрВыслугиЛет
	|ПОМЕСТИТЬ ВТИсходныйСтаж
	|ИЗ
	|	&ПериодыРаботыСорт КАК ИсходныйСтаж";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТаблицаСтажаПоКатегориям(МенеджерВТ, Организация, ОтчетныйПериод, ИмяВременнойТаблицы, КатегорияСотрудников = Неопределено, ТипДоговора = Неопределено)
	УстановитьПривилегированныйРежим(Истина);
	
	ОкончаниеПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ОтчетныйПериод",				ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОкончаниеОтчетногоПериода",	ОкончаниеПериода);
	Запрос.УстановитьПараметр("ВсеКатегории", КатегорияСотрудников = Неопределено);
	Запрос.УстановитьПараметр("Категория", КатегорияСотрудников);
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", СписокНестрахуемыхВидовДохода());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);
	
	КонецМесяца = КонецМесяца(ОтчетныйПериод);
	
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = Месяц(ОтчетныйПериод) По Месяц(ОкончаниеПериода) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСтажа.Сотрудник КАК ФизическоеЛицо,
	|	&Организация КАК Организация 
	|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	|ИЗ
	|	#ДанныеОСтаже КАК ТаблицаСтажа ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДанныеОСтаже", ИмяВременнойТаблицы);
	Запрос.Выполнить();

	СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);
	
	СформироватьВТРасширенныеСведенияОДоходахИВзносах(ОтчетныйПериод, ОкончаниеПериода, Организация, МенеджерВТ, Истина);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСтажа.Сотрудник КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ТаблицаСтажа.ДатаНачалаПериода < НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|			ТОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|		ИНАЧЕ ТаблицаСтажа.ДатаНачалаПериода
	|	КОНЕЦ КАК ДатаНачалаПериода,
	|	ВЫБОР
	|		КОГДА ТаблицаСтажа.ДатаОкончанияПериода < Периоды.Период
	|			ТОГДА ТаблицаСтажа.ДатаОкончанияПериода
	|		ИНАЧЕ Периоды.Период
	|	КОНЕЦ КАК ДатаОкончанияПериода,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК МесяцОтчетногоПериода,
	|	ТаблицаСтажа.ОсобыеУсловияТруда,
	|	ТаблицаСтажа.КодПозицииСписка,
	|	ТаблицаСтажа.ОснованиеИсчисляемогоСтажа,
	|	ТаблицаСтажа.ПервыйПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ВторойПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ТретийПараметрИсчисляемогоСтажа,
	|	ТаблицаСтажа.ОснованиеВыслугиЛет,
	|	ТаблицаСтажа.ПервыйПараметрВыслугиЛет,
	|	ТаблицаСтажа.ВторойПараметрВыслугиЛет,
	|	ТаблицаСтажа.ТретийПараметрВыслугиЛет,
	|	ТаблицаСтажа.ТерриториальныеУсловия,
	|	ТаблицаСтажа.ПараметрТерриториальныхУсловий,
	|	ТаблицаСтажа.ФиксСтаж,
	|	ТаблицаСтажа.ТипДоговора,
	|	Периоды.Период
	|ПОМЕСТИТЬ ВТСтажПоМесяцам
	|ИЗ
	|	#ДанныеОСтаже КАК ТаблицаСтажа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
	|		ПО (Периоды.Период МЕЖДУ НАЧАЛОПЕРИОДА(ТаблицаСтажа.ДатаНачалаПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(ТаблицаСтажа.ДатаОкончанияПериода, МЕСЯЦ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	МесяцОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|				ТОГДА СведенияОДоходах.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОбъектНестрахуемых,
	|	СУММА(СведенияОДоходах.Сумма) КАК ВесьОбъект,
	|	СведенияОДоходах.Период КАК МесяцОтчетногоПериода,
	|	СведенияОДоходах.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСоставДоходов
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &ОтчетныйПериод И &ОкончаниеОтчетногоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	ЕСТЬNULL(СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка)) КАК КатегорияЗастрахованныхЛиц,
	|	ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ПустаяСсылка) КАК ТипДоговора
	|ПОМЕСТИТЬ ВТКатегорииЗастрахованныхЛиц
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО СведенияОДоходах.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (ГОД(СведенияОДоходах.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &ОтчетныйПериод И &ОкончаниеОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтажПоМесяцам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтажПоМесяцам.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	СтажПоМесяцам.ДатаОкончанияПериода,
	|	СтажПоМесяцам.МесяцОтчетногоПериода,
	|	СтажПоМесяцам.ОсобыеУсловияТруда,
	|	СтажПоМесяцам.КодПозицииСписка,
	|	СтажПоМесяцам.ОснованиеИсчисляемогоСтажа,
	|	СтажПоМесяцам.ПервыйПараметрИсчисляемогоСтажа,
	|	СтажПоМесяцам.ВторойПараметрИсчисляемогоСтажа,
	|	СтажПоМесяцам.ТретийПараметрИсчисляемогоСтажа,
	|	СтажПоМесяцам.ОснованиеВыслугиЛет,
	|	СтажПоМесяцам.ПервыйПараметрВыслугиЛет,
	|	СтажПоМесяцам.ВторойПараметрВыслугиЛет,
	|	СтажПоМесяцам.ТретийПараметрВыслугиЛет,
	|	СтажПоМесяцам.ТерриториальныеУсловия,
	|	СтажПоМесяцам.ПараметрТерриториальныхУсловий,
	|	СтажПоМесяцам.ФиксСтаж,
	|	СтажПоМесяцам.Период,
	|	СтажПоМесяцам.ТипДоговора,
	|	КатегорииЗастрахованныхЛиц.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц
	|ИЗ
	|	ВТСтажПоМесяцам КАК СтажПоМесяцам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКатегорииЗастрахованныхЛиц КАК КатегорииЗастрахованныхЛиц
	|		ПО СтажПоМесяцам.ФизическоеЛицо = КатегорииЗастрахованныхЛиц.ФизическоеЛицо
	|			И СтажПоМесяцам.МесяцОтчетногоПериода = КатегорииЗастрахованныхЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоставДоходов КАК СоставДоходов
	|		ПО СтажПоМесяцам.ФизическоеЛицо = СоставДоходов.ФизическоеЛицо
	|			И СтажПоМесяцам.МесяцОтчетногоПериода = СоставДоходов.МесяцОтчетногоПериода
	|ГДЕ
	|	(ЕСТЬNULL(СоставДоходов.ВесьОбъект, 0) = 0
	|			ИЛИ ЕСТЬNULL(СоставДоходов.ВесьОбъект, 0) <> ЕСТЬNULL(СоставДоходов.ОбъектНестрахуемых, 0))
	|	И (&ВсеКатегории
	|			ИЛИ КатегорииЗастрахованныхЛиц.КатегорияЗастрахованныхЛиц = &Категория)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	КатегорияЗастрахованныхЛиц,
	|	ДатаНачалаПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСоответствиеТарифаИВидаЗЛКатегории";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДанныеОСтаже", ИмяВременнойТаблицы);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	КоличествоРезультатов = Результаты.Количество();
	
	ТаблицаСтажа = Результаты[КоличествоРезультатов - 2].Выгрузить();
	
	ТаблицаСтажа.Колонки.Добавить("СложныйСтаж", Новый ОписаниеТипов("Булево"));
	
	Н = ТаблицаСтажа.Количество() - 1;
	Пока Н > 0 Цикл
		
		ТекущаяЗапись = ТаблицаСтажа[Н];
		ПредшествующаяЗапись = ТаблицаСтажа[Н-1];
		
		Если ТекущаяЗапись.ФизическоеЛицо = ПредшествующаяЗапись.ФизическоеЛицо // если совпадает физлицо
			И ТекущаяЗапись.КатегорияЗастрахованныхЛиц = ПредшествующаяЗапись.КатегорияЗастрахованныхЛиц
			И (ТекущаяЗапись.ДатаНачалаПериода = КонецДня(ПредшествующаяЗапись.ДатаОкончанияПериода)+1 
			ИЛИ КонецДня(ТекущаяЗапись.ДатаНачалаПериода) = КонецДня(ПредшествующаяЗапись.ДатаОкончанияПериода)) // если записи непрерывны (идут друг за другом по времени)
			// и совпадают параметры стажа
			И ТекущаяЗапись.ОсобыеУсловияТруда = ПредшествующаяЗапись.ОсобыеУсловияТруда
			И ТекущаяЗапись.КодПозицииСписка = ПредшествующаяЗапись.КодПозицииСписка
			И ТекущаяЗапись.ОснованиеИсчисляемогоСтажа = ПредшествующаяЗапись.ОснованиеИсчисляемогоСтажа
			И ТекущаяЗапись.ПервыйПараметрИсчисляемогоСтажа = ПредшествующаяЗапись.ПервыйПараметрИсчисляемогоСтажа
            И ТекущаяЗапись.ВторойПараметрИсчисляемогоСтажа = ПредшествующаяЗапись.ВторойПараметрИсчисляемогоСтажа
            И ТекущаяЗапись.ТретийПараметрИсчисляемогоСтажа = ПредшествующаяЗапись.ТретийПараметрИсчисляемогоСтажа
			И ТекущаяЗапись.ОснованиеВыслугиЛет = ПредшествующаяЗапись.ОснованиеВыслугиЛет
			И ТекущаяЗапись.ПервыйПараметрВыслугиЛет = ПредшествующаяЗапись.ПервыйПараметрВыслугиЛет
            И ТекущаяЗапись.ВторойПараметрВыслугиЛет = ПредшествующаяЗапись.ВторойПараметрВыслугиЛет
            И ТекущаяЗапись.ТретийПараметрВыслугиЛет = ПредшествующаяЗапись.ТретийПараметрВыслугиЛет
			И ТекущаяЗапись.ТерриториальныеУсловия = ПредшествующаяЗапись.ТерриториальныеУсловия
			И ТекущаяЗапись.ПараметрТерриториальныхУсловий = ПредшествующаяЗапись.ПараметрТерриториальныхУсловий
		
			Тогда
			// объединим записи в одну
			ПредшествующаяЗапись.ДатаОкончанияПериода = ТекущаяЗапись.ДатаОкончанияПериода;
			Если ТекущаяЗапись.ФиксСтаж Тогда
				ПредшествующаяЗапись.ФиксСтаж = Истина;
			КонецЕсли;	
			ТаблицаСтажа.Удалить(ТекущаяЗапись);
			ОбрабатываемаяСтрока = ПредшествующаяЗапись;
		Иначе
			ОбрабатываемаяСтрока = ТекущаяЗапись;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОбрабатываемаяСтрока.ОсобыеУсловияТруда) 
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.КодПозицииСписка)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ОснованиеИсчисляемогоСтажа)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ПервыйПараметрИсчисляемогоСтажа)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ВторойПараметрИсчисляемогоСтажа)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ТретийПараметрИсчисляемогоСтажа)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ОснованиеВыслугиЛет)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ПервыйПараметрВыслугиЛет)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ВторойПараметрВыслугиЛет)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ТретийПараметрВыслугиЛет)
            Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ТерриториальныеУсловия)
			Или ЗначениеЗаполнено(ОбрабатываемаяСтрока.ПараметрТерриториальныхУсловий) Тогда

			ОбрабатываемаяСтрока.СложныйСтаж = Истина;
		КонецЕсли;	

		Н = Н - 1;
	КонецЦикла;
	
	Возврат ТаблицаСтажа;
	
КонецФункции

Процедура СформироватьВТСИсправленимяПоСтажу(МенеджерВТ, ОтчетныйПериод, КорректирующиеСведения = Ложь, МассивДокументов = Неопределено, МассивФизЛиц = Неопределено)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсходныйСтаж.Сотрудник,
	|	ИсходныйСтаж.ДатаНачалаПериода,
	|	ИсходныйСтаж.ДатаОкончанияПериода,
	|	ИсходныйСтаж.ОсобыеУсловияТруда,
	|	ИсходныйСтаж.КодПозицииСписка,
	|	ИсходныйСтаж.ТретийПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ОснованиеВыслугиЛет,
	|	ИсходныйСтаж.ТерриториальныеУсловия,
	|	ИсходныйСтаж.ПараметрТерриториальныхУсловий,
	|	ИсходныйСтаж.ТретийПараметрВыслугиЛет,
	|	ИсходныйСтаж.ОснованиеИсчисляемогоСтажа,
	|	ИсходныйСтаж.ПервыйПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ВторойПараметрИсчисляемогоСтажа,
	|	ИсходныйСтаж.ПервыйПараметрВыслугиЛет,
	|	ИсходныйСтаж.ВторойПараметрВыслугиЛет,
	|	ИсходныйСтаж.ТипДоговора,
	|	ЛОЖЬ КАК ФиксСтаж
	|ПОМЕСТИТЬ ВТТаблицаСтажа
	|ИЗ
	|	ВТИсходныйСтаж КАК ИсходныйСтаж";
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, СписокФизическихЛиц, АдреснаяИнформация, ДатаПолученияДанных) Экспорт
	
	// Проверим Передана ли нам дата на которую необходимо получать периодические данные
	Если ДатаПолученияДанных = '00010101000000' Тогда
		ДатаПолученияДанных = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// Проверим, если в качестве параметра СписокФизическихЛиц, передана ссылка, создадим массив
	Если ТипЗнч(СписокФизическихЛиц) = Тип("СправочникСсылка.Сотрудники") Тогда
		МассивФизическихЛиц = Новый Массив;
		МассивФизическихЛиц.Добавить(СписокФизическихЛиц);
	Иначе
		МассивФизическихЛиц = СписокФизическихЛиц;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	Запрос.УстановитьПараметр("ДатаПолученияДанных", ДатаПолученияДанных);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ДатаПолученияДанных КАК Период,
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокФизическихЛиц
	|ИЗ
	|	Справочник.Сотрудники КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)";
	
	Запрос.Выполнить();
	
	СформироватьТаблицуВТКадровыеДанныеФизическихЛицСПериодом(МенеджерВременныхТаблиц, "ВТСписокФизическихЛиц", АдреснаяИнформация, ДатаПолученияДанных);
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВТСписокФизическихЛиц";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуВТКадровыеДанныеФизическихЛицСПериодом(МенеджерВременныхТаблиц, ИмяВременнойТаблицыОтборовФизическихЛиц, АдреснаяИнформация = Ложь, ДатаПолученияДанных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаПолученияДанных",ДатаПолученияДанных);;
	
	Если АдреснаяИнформация Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДанныеФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеФизическихЛиц.Период КАК Период,
		|	ЕСТЬNULL(АдресДляИнформированияФизическиеЛица.АдресДляИнформированияПредставление, """") КАК АдресДляИнформированияПредставление,
		|	ЕСТЬNULL(АдресДляИнформированияФизическиеЛица.АдресДляИнформирования, """") КАК АдресДляИнформирования,
		|	ЕСТЬNULL(АдресДляИнформированияФизическиеЛица.АдресДляИнформированияТип, ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)) КАК АдресДляИнформированияТип
		|ПОМЕСТИТЬ ВТКадровыеДанныеФизическихЛиц
		|ИЗ
		|	#Таблица КАК ДанныеФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВЫРАЗИТЬ(ФизическиеЛицаКонтактнаяИнформация.Представление КАК СТРОКА(1000)) КАК АдресДляИнформированияПредставление,
		|			ВЫРАЗИТЬ(ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей КАК СТРОКА(1000)) КАК АдресДляИнформирования,
		|			ФизическиеЛицаКонтактнаяИнформация.Тип КАК АдресДляИнформированияТип,
		|			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК ФизическоеЛицо
		|		ИЗ
		|			Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ГДЕ
		|			ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресФизЛицаПоПрописке)) КАК АдресДляИнформированияФизическиеЛица
		|		ПО ДанныеФизическихЛиц.ФизическоеЛицо.ФизЛицо = АдресДляИнформированияФизическиеЛица.ФизическоеЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо
		|;";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Таблица",ИмяВременнойТаблицыОтборовФизическихЛиц);
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДанныеФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеФизическихЛиц.Период КАК Период,
		|	ЕСТЬNULL(ФизическиеЛица.Наименование, """") КАК Наименование,
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия, """") КАК Фамилия,
		|	ЕСТЬNULL(ФИОФизЛиц.Имя, """") КАК Имя,
		|	ЕСТЬNULL(ФИОФизЛиц.Отчество, """") КАК Отчество,
		|	ЕСТЬNULL(ФизическиеЛица.ИНН, """") КАК ИНН,
		|	ЕСТЬNULL(ФизическиеЛица.СтраховойНомерПФР, """") КАК СтраховойНомерПФР,
		|	ЕСТЬNULL(ФизическиеЛица.Пол, """") КАК Пол,
		|	ЕСТЬNULL(ФизическиеЛица.ДатаРождения, """") КАК ДатаРождения,
		|	ЕСТЬNULL(ФизическиеЛица.Гражданство, """") КАК Страна,
		|	ЕСТЬNULL(ДокументыФизическихЛиц.ВидДокумента, """") КАК ДокументВид,
		|	ЕСТЬNULL(ДокументыФизическихЛиц.Серия, """") КАК ДокументСерия,
		|	ЕСТЬNULL(ДокументыФизическихЛиц.Номер, """") КАК ДокументНомер
		|ПОМЕСТИТЬ ВТКадровыеДанныеФизическихЛиц
		|ИЗ
		|	#Таблица КАК ДанныеФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ДанныеФизическихЛиц.ФизическоеЛицо.Физлицо = ФизическиеЛица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаПолученияДанных) КАК ФИОФизЛиц
		|		ПО  ФизическиеЛица.Ссылка = ФИОФизЛиц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
		|		ПО ДокументыФизическихЛиц.Физлицо = ФИОФизЛиц.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизическоеЛицо
		|;";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Таблица", ИмяВременнойТаблицыОтборовФизическихЛиц);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует ВТ "ВТСписокСотрудников" содержащую список физ. лиц, работавших в организации
// и по которым в отчетном периоде не передавались документы СЗВ
//
// Параметры
//  ДатаАктуальности
//  Организация 
//  ИмяВременнойТаблицы - имя ВТ, содержащей список физ. лиц, по которым необходимо получить изменившиеся адреса
//  МенеджерВременныхТаблиц - менеджер временных таблиц,  содержащей список физ. лиц, по которым необходимо получить
//                            изменившиеся адреса и в который будет помещена ВТ "ВТИзменившиесяАдресаФизическихЛиц"
//  Ссылка - необязательный
//
Процедура СформироватьВТСИзменившимисяАдресамиИнформированияФизЛиц(ДатаАктуальности, Организация, Знач ИмяВременнойТаблицы, МенеджерВременныхТаблиц, Ссылка = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	Если ВРег(ИмяВременнойТаблицы) = "ВТКАДРОВЫЕДАННЫЕФИЗИЧЕСКИХЛИЦ" Тогда
	
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ВТ.* ПОМЕСТИТЬ ВТКадровыеДанныеФизическихЛицПромежуточная ИЗ ВТКадровыеДанныеФизическихЛиц КАК ВТ; Уничтожить ВТКадровыеДанныеФизическихЛиц";
		ИмяВременнойТаблицы = "ВТКадровыеДанныеФизическихЛицПромежуточная";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	 
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ВТ.ФизическоеЛицо ИЗ " + ИмяВременнойТаблицы + " КАК ВТ";
	СписокФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, СписокФизическихЛиц, Истина, ДатаАктуальности);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2Сотрудники.Ссылка.Дата,
	|	РеестрСЗВ_6_2Сотрудники.Сотрудник КАК ФизическоеЛицо,
	|	РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования
	|ПОМЕСТИТЬ ВТПереданныеВПФРДокументы
	|ИЗ
	|	ИсточникДанныхОтбора КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСЗВ_6_2.Сотрудники КАК РеестрСЗВ_6_2Сотрудники
	|		ПО СписокФизЛиц.ФизическоеЛицо = РеестрСЗВ_6_2Сотрудники.Сотрудник
	|			И (РеестрСЗВ_6_2Сотрудники.Ссылка.Организация = &Организация)
	|			И (РеестрСЗВ_6_2Сотрудники.АдресДляИнформирования <> """")
	|			И (РеестрСЗВ_6_2Сотрудники.Ссылка <> &Ссылка)
	|			И (РеестрСЗВ_6_2Сотрудники.Ссылка.Проведен)
	|			И (РеестрСЗВ_6_2Сотрудники.Ссылка.ДокументПринятВПФР)
	|			И (РеестрСЗВ_6_2Сотрудники.Ссылка.Дата <= &ДатаАктуальности)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПереданныеВПФРДокументы.АдресДляИнформирования КАК АдресДляИнформирования
	|ПОМЕСТИТЬ ВТПереданныеВПФРАдреса
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПереданныеВПФРДокументы.Дата) КАК Дата,
	|		ПереданныеВПФРДокументы.ФизическоеЛицо КАК ФизическоеЛицо
	|	ИЗ
	|		ВТПереданныеВПФРДокументы КАК ПереданныеВПФРДокументы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПереданныеВПФРДокументы.ФизическоеЛицо) КАК ДатыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереданныеВПФРДокументы КАК ПереданныеВПФРДокументы
	|		ПО ДатыДокументов.Дата = ПереданныеВПФРДокументы.Дата
	|			И ДатыДокументов.ФизическоеЛицо = ПереданныеВПФРДокументы.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ПереданныеВПФРАдреса.АдресДляИнформирования ЕСТЬ NULL 
	|			ТОГДА ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформирования КАК СТРОКА(240))
	|		КОГДА (ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформирования КАК СТРОКА(240))) <> ПереданныеВПФРАдреса.АдресДляИнформирования
	|			ТОГДА ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформирования КАК СТРОКА(240))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДляИнформирования,
	|	ВЫБОР
	|		КОГДА ПереданныеВПФРАдреса.АдресДляИнформирования ЕСТЬ NULL 
	|			ТОГДА ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформированияПредставление КАК СТРОКА(240))
	|		КОГДА (ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформирования КАК СТРОКА(240))) <> ПереданныеВПФРАдреса.АдресДляИнформирования
	|			ТОГДА ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформированияПредставление КАК СТРОКА(240))
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДляИнформированияПредставление
	|ПОМЕСТИТЬ ВТИзменившиесяАдресаФизическихЛиц
	|ИЗ
	|	ИсточникДанныхОтбора КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК АдресаДляИнформирования
	|		ПО Сотрудники.ФизическоеЛицо = АдресаДляИнформирования.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПереданныеВПФРАдреса КАК ПереданныеВПФРАдреса
	|		ПО Сотрудники.ФизическоеЛицо = ПереданныеВПФРАдреса.ФизическоеЛицо
	|ГДЕ
	|	(ПереданныеВПФРАдреса.АдресДляИнформирования ЕСТЬ NULL 
	|			ИЛИ (ВЫРАЗИТЬ(АдресаДляИнформирования.АдресДляИнформирования КАК СТРОКА(240))) <> ПереданныеВПФРАдреса.АдресДляИнформирования)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|; Уничтожить ВТКадровыеДанныеФизическихЛиц";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанныхОтбора", ИмяВременнойТаблицы);
	
	
	Если ВРег(ИмяВременнойТаблицы) = "ВТКАДРОВЫЕДАННЫЕФИЗИЧЕСКИХЛИЦПРОМЕЖУТОЧНАЯ" Тогда
	
		Запрос.Текст = Запрос.Текст + "; ВЫБРАТЬ РАЗЛИЧНЫЕ ВТ.* ПОМЕСТИТЬ ВТКадровыеДанныеФизическихЛиц ИЗ ВТКадровыеДанныеФизическихЛицПромежуточная КАК ВТ; Уничтожить ВТКадровыеДанныеФизическихЛицПромежуточная";
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ВыделитьБазуМРОТНаОсновнойТариф(СтрокиМесяца, Результат, ОсновнойТариф)
	СтрокРаспределения = СтрокиМесяца.Количество();
	Для СчетчикРаспределения = 0 По СтрокРаспределения - 1 Цикл
		ИндексСтрокиРаспределения = СтрокРаспределения - 1 - СчетчикРаспределения;
		СтрокаРаспределения = СтрокиМесяца[ИндексСтрокиРаспределения];
		Если СтрокаРаспределения.БазаПФР = 0 И СтрокаРаспределения.БазаФОМС = 0 И СтрокаРаспределения.БазаФСС = 0 Тогда
			СтрокиМесяца.Удалить(ИндексСтрокиРаспределения)
		КонецЕсли;
	КонецЦикла;
	Если СтрокиМесяца.Количество() > 0 Тогда
		
		Прочее = "Сумма, Скидка";
		БазыОПС = "БазаПФР";
		
		МРОТ = СтрокиМесяца[0].РазмерМРОТ;
		ТребуетсяВыделятьМРОТ_ПФР = СтрокиМесяца[0].ТребуетсяВыделятьМРОТ_ПФР;
		ТребуетсяВыделятьМРОТ_ФОМС = СтрокиМесяца[0].ТребуетсяВыделятьМРОТ_ФОМС;
		ТребуетсяВыделятьМРОТ_ФСС = СтрокиМесяца[0].ТребуетсяВыделятьМРОТ_ФСС;
		
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиМесяца, "БазаПФР");
		РезультатыПФР = РаспределитьПропорциональноКоэффициентам(МРОТ, Коэффициенты);
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиМесяца, "БазаФОМС");
		РезультатыОМС = РаспределитьПропорциональноКоэффициентам(МРОТ, Коэффициенты);
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиМесяца, "БазаФСС");
		РезультатыФСС = РаспределитьПропорциональноКоэффициентам(МРОТ, Коэффициенты);
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиМесяца, "Сумма");
		РезультатыСумма = РаспределитьПропорциональноКоэффициентам(МРОТ, Коэффициенты);

		Для каждого ТекущаяСтрокаМесяца Из СтрокиМесяца Цикл
			ЗаполнитьЗначенияСвойств(Результат.Добавить(), ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФОМС, БазаФСС");
			Если РезультатыСумма = Неопределено Тогда
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , БазыОПС + ", БазаФОМС, БазаФСС, БазаФСС_НС");
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
			КонецЕсли;
			Если Не ТребуетсяВыделятьМРОТ_ПФР Или РезультатыПФР = Неопределено Тогда
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", БазаФОМС, БазаФСС, БазаФСС_НС");
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
			КонецЕсли;
			Если Не ТребуетсяВыделятьМРОТ_ФОМС Или РезультатыОМС = Неопределено Тогда
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФСС, БазаФСС_НС");
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
			КонецЕсли;
			Если Не ТребуетсяВыделятьМРОТ_ФСС Или РезультатыФСС = Неопределено Тогда
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФОМС, БазаФСС_НС");
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
			КонецЕсли;
		КонецЦикла;
		
		Если РезультатыСумма <> Неопределено Тогда
			Для Индекс = 0 По СтрокиМесяца.ВГраница() Цикл
				ТекущаяСтрокаМесяца = СтрокиМесяца[Индекс];
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , БазыОПС + ", БазаФОМС, БазаФСС, БазаФСС_НС");
				НоваяСтрока.Сумма = РезультатыСумма[Индекс];
				ИспользованоСкидки = ?(ТекущаяСтрокаМесяца.Сумма = 0, 0, МРОТ / ТекущаяСтрокаМесяца.Сумма * ТекущаяСтрокаМесяца.Скидка);
				Если ТекущаяСтрокаМесяца.Скидка <> 0 Тогда
					НоваяСтрока.Скидка = ИспользованоСкидки;
				КонецЕсли;
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , БазыОПС + ", БазаФОМС, БазаФСС, БазаФСС_НС");
				НоваяСтрока.Сумма = ТекущаяСтрокаМесяца.Сумма - РезультатыСумма[Индекс];
				Если ТекущаяСтрокаМесяца.Скидка <> 0 Тогда
					НоваяСтрока.Скидка = ТекущаяСтрокаМесяца.Скидка - ИспользованоСкидки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ТребуетсяВыделятьМРОТ_ПФР И РезультатыПФР <> Неопределено Тогда
			Для Индекс = 0 По СтрокиМесяца.ВГраница() Цикл
				ТекущаяСтрокаМесяца = СтрокиМесяца[Индекс];
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", БазаФОМС, БазаФСС, БазаФСС_НС");
				НоваяСтрока.БазаПФР = РезультатыПФР[Индекс];
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", БазаФОМС, БазаФСС, БазаФСС_НС");
				НоваяСтрока.БазаПФР = ТекущаяСтрокаМесяца.БазаПФР - РезультатыПФР[Индекс];
			КонецЦикла;
		КонецЕсли;
		Если ТребуетсяВыделятьМРОТ_ФОМС И РезультатыОМС <> Неопределено Тогда
			Для Индекс = 0 По СтрокиМесяца.ВГраница() Цикл
				ТекущаяСтрокаМесяца = СтрокиМесяца[Индекс];
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФСС, БазаФСС_НС");
				НоваяСтрока.БазаФОМС = РезультатыОМС[Индекс];
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФСС, БазаФСС_НС");
				НоваяСтрока.БазаФОМС = ТекущаяСтрокаМесяца.БазаФОМС - РезультатыОМС[Индекс];
			КонецЦикла;
		КонецЕсли;
		Если ТребуетсяВыделятьМРОТ_ФСС И РезультатыФСС <> Неопределено Тогда
			Для Индекс = 0 По СтрокиМесяца.ВГраница() Цикл
				ТекущаяСтрокаМесяца = СтрокиМесяца[Индекс];
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФОМС, БазаФСС_НС");
				НоваяСтрока.БазаФСС = РезультатыФСС[Индекс];
				НоваяСтрока.ВидТарифаСтраховыхВзносов = ОсновнойТариф;
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрокаМесяца, , Прочее + ", " + БазыОПС + ", БазаФОМС, БазаФСС_НС");
				НоваяСтрока.БазаФСС = ТекущаяСтрокаМесяца.БазаФСС - РезультатыФСС[Индекс];
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

// Выполняет пропорциональное распределение суммы в соответствии
// с заданными коэффициентами распределения.
//
// Параметры:
//  РаспределяемаяСумма - Число - сумма, которую надо распределить;
//  Коэффициенты - Массив - коэффициенты распределения;
//  Точность - Число - точность округления при распределении. Необязателен.
//
// Возвращаемое значение:
//  Массив - массив размерностью равный массиву коэффициентов, содержит
//           суммы в соответствии с весом коэффициента (из массива коэффициентов).
//           В случае если распределить не удалось (сумма = 0, кол-во коэффициентов = 0,
//           или суммарный вес коэффициентов = 0), тогда возвращается значение Неопределено.
//
Функция РаспределитьПропорциональноКоэффициентам(Знач РаспределяемаяСумма, Коэффициенты, Знач Точность = 2) Экспорт
	
	Если Коэффициенты.Количество() = 0 Или Не ЗначениеЗаполнено(РаспределяемаяСумма) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИндексМаксимальногоКоэффициента = 0;
	МаксимальныйКоэффициент = 0;
	РаспределеннаяСумма = 0;
	СуммаКоэффициентов  = 0;
	
	Для Индекс = 0 По Коэффициенты.Количество() - 1 Цикл
		Коэффициент = Коэффициенты[Индекс];
		
		АбсолютноеЗначениеКоэффициента = ?(Коэффициент > 0, Коэффициент, -Коэффициент);
		Если МаксимальныйКоэффициент < АбсолютноеЗначениеКоэффициента Тогда
			МаксимальныйКоэффициент = АбсолютноеЗначениеКоэффициента;
			ИндексМаксимальногоКоэффициента = Индекс;
		КонецЕсли;
		
		СуммаКоэффициентов = СуммаКоэффициентов + Коэффициент;
	КонецЦикла;
	
	Если СуммаКоэффициентов = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Массив(Коэффициенты.Количество());
	
	Для Индекс = 0 По Коэффициенты.Количество() - 1 Цикл
		Результат[Индекс] = Окр(РаспределяемаяСумма * Коэффициенты[Индекс] / СуммаКоэффициентов, Точность, 1);
		РаспределеннаяСумма = РаспределеннаяСумма + Результат[Индекс];
	КонецЦикла;
	
	// Погрешности округления отнесем на коэффициент с максимальным весом.
	Если Не РаспределеннаяСумма = РаспределяемаяСумма Тогда
		Результат[ИндексМаксимальногоКоэффициента] = Результат[ИндексМаксимальногоКоэффициента] + РаспределяемаяСумма - РаспределеннаяСумма;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьЗастрахованныхСотрудников(Организация, НачалоПериода, ОкончаниеПериода) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыСведенияОДоходах.Сотрудник
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыДоходы КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &НачалоОтчетногоПериода И &КонецОтчетногоПериода
	|	И СтраховыеВзносыСведенияОДоходах.Организация = &Организация
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоОтчетногоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", ОкончаниеПериода);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЕстьСотрудникиЗаПериод(Организация, ДатаНачала, ДатаОкончания)
	
	ТаблицаСотрудников = ПолучитьЗастрахованныхСотрудников(Организация, ДатаНачала, КонецДня(ДатаОкончания));
	Возврат (ТаблицаСотрудников.Количество()>0);
	
КонецФункции

Функция ОпределитьНаличиеСотрудниковПоСобытиюКалендаря(Организация, СобытиеКалендаря) Экспорт
	
	НачалоОкончаниеСобытия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СобытиеКалендаря,"ДатаНачалаДокументов, ДатаОкончанияДокументов");
	Возврат ЕстьСотрудникиЗаПериод(Организация, НачалоОкончаниеСобытия.ДатаНачалаДокументов, НачалоОкончаниеСобытия.ДатаОкончанияДокументов);
	
КонецФункции


// Функция возвращает список значений, содержащий категории ЗЛ
// организации за период
Функция КатегорииЗастрахованныхЛицОрганизации(Организация, ОтчетныйПериод) Экспорт
    УстановитьПривилегированныйРежим(Истина);
	
	СписокКатегорийЗастрахованныхЛиц = Новый СписокЗначений;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОтчетныйПериод",	ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОкончаниеОтчетногоПериода", ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	
	СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрименяемыеТарифыСтраховыхВзносов.ВидТарифа КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТТарифыОрганизации
	|ИЗ
	|	РегистрСведений.ПрименяемыеТарифыСтраховыхВзносов КАК ПрименяемыеТарифыСтраховыхВзносов
	|ГДЕ
	|	ПрименяемыеТарифыСтраховыхВзносов.Период МЕЖДУ &ОтчетныйПериод И &ОкончаниеОтчетногоПериода
	|	И ПрименяемыеТарифыСтраховыхВзносов.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа
	|ИЗ
	|	РегистрСведений.ПрименяемыеТарифыСтраховыхВзносов.СрезПоследних(&ОтчетныйПериод, Организация = &Организация) КАК ПрименяемыеТарифыСтраховыхВзносовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц, ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицДляПФР.ПустаяСсылка)) КАК КатегорияЗастрахованныхЛиц,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц) КАК Представление,
	|	СоответствиеТарифаИВидаЗЛКатегории.Порядок КАК Порядок,
	|	СоответствиеТарифаИВидаЗЛКатегории.ДополнительныйПорядок
	|ИЗ
	|	ВТТарифыОрганизации КАК ТарифыОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО ТарифыОрганизации.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (ГОД(&ОтчетныйПериод) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	СоответствиеТарифаИВидаЗЛКатегории.ДополнительныйПорядок";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    СписокКатегорийЗастрахованныхЛиц.Добавить(Выборка.КатегорияЗастрахованныхЛиц,Выборка.Представление);
	КонецЦикла;
	Если СписокКатегорийЗастрахованныхЛиц.Количество() = 0 Тогда
		СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.НР, "НАЕМ/РАБОТНИК");
		Если Год(ОтчетныйПериод) >= 2012 Тогда
			СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВЖНР, "ВР. ПРОЖИВАЮЩИЙ/НАЕМ/РАБОТНИК");
			СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВПНР, "ВР. ПРЕБЫВАЮЩИЙ/НАЕМ/РАБОТНИК");
		КонецЕсли;
		Если Год(ОтчетныйПериод) = 2010 Тогда
			СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ОЗОИ, "ОСОБАЯ/ЗОНА/ОРГАНИЗАЦИИ ИНВАЛИДОВ");
		ИначеЕсли Год(ОтчетныйПериод) < 2015 Тогда
			СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ООИ);
			Если Год(ОтчетныйПериод) >= 2012 Тогда
				СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВЖОИ);
				СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВПОИ);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если Год(ОтчетныйПериод) = 2010 Тогда
			Если СписокКатегорийЗастрахованныхЛиц.НайтиПоЗначению(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ОЗОИ) = Неопределено Тогда 	
				СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ОЗОИ, "ОСОБАЯ/ЗОНА/ОРГАНИЗАЦИИ ИНВАЛИДОВ");
			КонецЕсли;
		ИначеЕсли Год(ОтчетныйПериод) < 2015 Тогда
			Если СписокКатегорийЗастрахованныхЛиц.НайтиПоЗначению(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ООИ) = Неопределено Тогда 	
				СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ООИ);
			КонецЕсли;
			Если Год(ОтчетныйПериод) >= 2012 Тогда
				Если СписокКатегорийЗастрахованныхЛиц.НайтиПоЗначению(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВЖОИ) = Неопределено Тогда 	
					СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВЖОИ);
				КонецЕсли;
				Если СписокКатегорийЗастрахованныхЛиц.НайтиПоЗначению(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВПОИ) = Неопределено Тогда 	
					СписокКатегорийЗастрахованныхЛиц.Добавить(Перечисления.КатегорииЗастрахованныхЛицДляПФР.ВПОИ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокКатегорийЗастрахованныхЛиц;
	
КонецФункции

Процедура СоздатьВТФИООтветственныхЛиц(МенеджерВременныхТаблиц, ТолькоРазрешенные, ИменаПолейОтветственныхЛиц, ИмяВременнойТаблицыДанныхДокумента)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	ЭтоПервоеПолеОтветственного = Истина;
	Для Каждого ИмяПоляОтветственногоЛица Из ИменаПолейОтветственныхЛиц Цикл
		
		Если Не ЭтоПервоеПолеОтветственного Тогда 
			Запрос.Текст = Запрос.Текст + "
										  |ОБЪЕДИНИТЬ
										  |";
		КонецЕсли;										  
		
		Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ " + ?(ТолькоРазрешенные, "РАЗРЕШЕННЫЕ", "") + " РАЗЛИЧНЫЕ
		                              |	ДанныеДокумента.ИмяПоляОтветственногоЛица КАК ФизическоеЛицо,
		                              |	ДанныеДокумента.Дата КАК Период,
									  |	ДанныеДокумента.Ссылка" + ?(ЭтоПервоеПолеОтветственного, "
									  |ПОМЕСТИТЬ ВТСотрудники", "") + "
		                              |ИЗ
		                              |	ДанныеДокумента КАК ДанныеДокумента";	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяПоляОтветственногоЛица", ИмяПоляОтветственногоЛица);
		
		ЭтоПервоеПолеОтветственного = Ложь;	
		
	КонецЦикла;		
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеДокумента", ИмяВременнойТаблицыДанныхДокумента);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ВТСотрудники.ФизическоеЛицо, ВТСотрудники.Период ИЗ ВТСотрудники КАК ВТСотрудники";
	СписокФизическихЛицСПериодом = Запрос.Выполнить().Выгрузить();
	Периоды = СписокФизическихЛицСПериодом.Скопировать(, "Период");
	Периоды.Свернуть("Период");
	
	СформироватьТаблицуВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, СписокФизическихЛицСПериодом.ВыгрузитьКолонку("ФизическоеЛицо"), Ложь, ?(Периоды.Количество() = 0 ,ТекущаяДатаСеанса(),Периоды[0].Период));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.ФизическоеЛицо,
	|	ДанныеДокументов.Период КАК Дата,
	|	ДанныеДокументов.Ссылка,
	|	ВТКадровыеДанныеФизЛиц.Фамилия,
	|	ВТКадровыеДанныеФизЛиц.Имя,
	|	ВТКадровыеДанныеФизЛиц.Отчество,
	|	ВТКадровыеДанныеФизЛиц.Пол,
	|	ВТКадровыеДанныеФизЛиц.Фамилия +"" ""+ВТКадровыеДанныеФизЛиц.Имя+"" ""+ВТКадровыеДанныеФизЛиц.Отчество КАК ФИО
	|ПОМЕСТИТЬ ВТФИООтветственныхЛиц
	|ИЗ
	|	ВТСотрудники КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ВТКадровыеДанныеФизЛиц
	|		ПО ДанныеДокументов.ФизическоеЛицо = ВТКадровыеДанныеФизЛиц.ФизическоеЛицо
	|			И ДанныеДокументов.Период = ВТКадровыеДанныеФизЛиц.Период";
				   
	Если НЕ ТолькоРазрешенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТДанныеОПравахНаСтрахование, которая содержит следующие поля
//		ФизическоеЛицо
//		ГоловнаяОрганизация.
//      Период - дата, начало месяца.
//		ЗастрахованПФР - булево, флажок, означающий, что за ФизическоеЛицо уплачиваются взносы в ПФР.
//		ЗастрахованФСС - булево, флажок, означающий, что за ФизическоеЛицо уплачиваются взносы в ФСС.
//		ЗастрахованФССкакИностранец - булево, флажок, означающий, что за ФизическоеЛицо-иностранца уплачиваются взносы в ФСС.
//		ЗастрахованФОМС - булево, флажок, означающий, что за ФизическоеЛицо уплачиваются взносы в ФОМС.
//		ВидЗастрахованногоЛица - ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования, для иностранцев, имеющих
//		                         долгосрочные договоры используется дополнительное значение
//		                         ВременноПребывающиеИностранцыСДолгосрочнымиДоговорами.
//
// Параметры:
//  МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещены сформированные временные таблицы,
//		содержит вр. таблицу ВТПериодыФизЛицОрганизаций (или другим именем) с полями
//			Период: 				должно быть непустым
//			ФизическоеЛицо: 		должно быть непустым
//			ГоловнаяОрганизация:	должно быть непустым.
//  ИмяТаблицыФизическихЛиц - строка - имя исходной временной таблицы.
//  ТолькоРазрешенные - булево - флажок, определяющий, надо ли оставлять в запросе только разрешенные при РЛС записи;
//                               для регл.отчетности - всегда ложь.
//  ДатаАктуальности - дата - 
//  ДляПервичнойОтчетностиПФР - булево - флажок, определяющий порядок чтения данных из регистров сведений, если Истина,
//                                       не учитываются строки регистров содержащие опоздавшие до следующего отчетного
//                                       периода данные.
//
Процедура СформироватьВТДанныеОПравахНаСтрахование(МенеджерВременныхТаблиц, ИмяТаблицыФизическихЛиц = "ВТПериодыФизЛицОрганизаций", ТолькоРазрешенные = Ложь, ДатаАктуальности = Неопределено, ДляПервичнойОтчетностиПФР = Ложь) Экспорт 

	Если Не ЗначениеЗаполнено(ДатаАктуальности) Тогда
		ДатаАктуальности = КонецМесяца(ТекущаяДатаСеанса())
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ИмяВТПериодыФизическиеЛица = УникальноеИмяТекстаЗапроса("ВТПериодыФизическиеЛица");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ПериодыФизЛицОрганизаций.Период, МЕСЯЦ) КАК Период,
	|	ПериодыФизЛицОрганизаций.Организация КАК ГоловнаяОрганизация,
	|	ПериодыФизЛицОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТПериодыФизическиеЛица
	|ИЗ
	|	ВТПериодыФизЛицОрганизаций КАК ПериодыФизЛицОрганизаций";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПериодыФизическиеЛица", ИмяВТПериодыФизическиеЛица);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПериодыФизЛицОрганизаций", ИмяТаблицыФизическихЛиц);
	
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СписокФизЛиц.Период, МЕСЯЦ) КАК Период,
	|	СписокФизЛиц.Организация КАК ГоловнаяОрганизация,
	|	СписокФизЛиц.ФизическоеЛицо,
	|	ИСТИНА КАК ЗастрахованПФР,
	|	ИСТИНА КАК ЗастрахованФОМС,
	|	ЛОЖЬ КАК ЗастрахованФССкакИностранец,
	|	ИСТИНА КАК ЗастрахованФСС
	|ПОМЕСТИТЬ ВТДанныеОПравахНаСтрахование
	|ИЗ
	|	ВТПериодыФизЛицОрганизаций КАК СписокФизЛиц";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаСтрахованияВременноПребывающих",	ДатаСтрахованияВременноПребывающих());
	Запрос.УстановитьПараметр("ДатаСтрахованияВсехВременноПребывающих",	ДатаСтрахованияВсехВременноПребывающих() - 1);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ВТПериодыФизЛицОрганизаций", ИмяТаблицыФизическихЛиц);
	Запрос.Выполнить();

КонецПроцедуры

// Добавляет в коллекцию описание отбора.
//
// Параметры:
//		КоллекцияОтборов 	- Массив
//		ЛевоеЗначение		- Строка
//		ВидСравнения		- Строка, допустимы условия, применяемые в текстах запросов.
//		ПравоеЗначение		- Любое значение, допустимое в условиях текстов запросов.
//		ОтносительныйПуть	- Булево, если истина, то в параметре ЛевоеЗначение должно содержаться
//								имя измерения, ресурса, реквизита регистра и перед именем через точку будет
//								подставляться имя таблицы из которой осуществляется выборка.
//
Процедура ДобавитьВКоллекциюОтбор(КоллекцияОтборов, ЛевоеЗначение, ВидСравнения, ПравоеЗначение, ОтносительныйПуть = Истина) Экспорт
	
	Если КоллекцияОтборов = Неопределено Тогда
		КоллекцияОтборов = Новый Массив;
	КонецЕсли;
	
	ОписаниеОтбора = Новый Структура;
	ОписаниеОтбора.Вставить("ЛевоеЗначение", ЛевоеЗначение);
	ОписаниеОтбора.Вставить("ВидСравнения", ВидСравнения);
	ОписаниеОтбора.Вставить("ПравоеЗначение", ПравоеЗначение);
	ОписаниеОтбора.Вставить("ОтносительныйПуть", ОтносительныйПуть);
	
	КоллекцияОтборов.Добавить(ОписаниеОтбора);
	
КонецПроцедуры

// Возвращает дату вступления в силу Федерального закона от 28 июня 2014 года № 188-ФЗ.
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаСтрахованияВсехВременноПребывающих() Экспорт

	Возврат '20150101'

КонецФункции

// Возвращает дату вступления в силу Федерального закона от 3 декабря 2011 года № 379-ФЗ.
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаСтрахованияВременноПребывающих() Экспорт

	Возврат '20120101'

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Формирование файла индивидуальных сведений ПФР XML формат 7.0 
	
// Процедура устанавливает заголовочные параметры файла выгрузки XML формата 07.00
//
Процедура ЗаполнитьИмяИЗаголовокФайла(УзелПФР, ДеревоФормата, ИмяФайла) Экспорт	
	// добавляем реквизит ИмяФайла
	НаборЗаписейИмяФайла = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ИмяФайла");
	НаборЗаписейИмяФайла.ИмяФайла.Значение = ИмяФайла;
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелПФР, НаборЗаписейИмяФайла);
	
	// Добавляем Реквизит заголовок файла
	НаборЗаписейЗаголовокФайла = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ЗаголовокФайла");
	НаборЗаписейПрограммаПодготовкиДанных = НаборЗаписейЗаголовокФайла.ПрограммаПодготовкиДанных.Значение;
	
	НаборЗаписейПрограммаПодготовкиДанных.Версия = ВРег(РегламентированнаяОтчетность.ВерсияПрограммы());
	НаборЗаписейПрограммаПодготовкиДанных.НазваниеПрограммы = ВРег(РегламентированнаяОтчетность.НазваниеПрограммы());
	
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "ЗаголовокФайла", ""), НаборЗаписейЗаголовокФайла); 
	
КонецПроцедуры 


// Функция устанавливает значения реквизитов XML узла ВходящаяОпись
//
Функция ЗаполнитьНаборЗаписейВходящаяОписьСЗВ6(УзелПФР, ДеревоФормата, ТипДокумента, ВыборкаПоШапкеДокумента, КоличествоДокументов, НомерДокументаВПачке, МакетВходящейОписи = "ВХОДЯЩАЯ_ОПИСЬ", НаборЗаписейВходящаяОпись = Неопределено, ТегВходящейОписи = "ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ") Экспорт
	
	НаборЗаписейВходящаяОпись = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, МакетВходящейОписи);
	
	НаборЗаписейВходящаяОпись.НомерВПачке.Значение = НомерДокументаВПачке;
	// Составитель пачки
	НаборЗаписейСоставительПачки = НаборЗаписейВходящаяОпись.СоставительПачки.Значение; 
	ЗаполнитьСоставительПачки(НаборЗаписейСоставительПачки, ВыборкаПоШапкеДокумента); 
	// Устанавливаем значение Номер пачки
	НаборЗаписейВходящаяОпись.НомерПачки.Значение.Основной = ВыборкаПоШапкеДокумента.НомерПачки;  
	// Блок СоставДокументов
	НаборЗаписейСоставДокументов = НаборЗаписейВходящаяОпись.СоставДокументов.Значение;
	НаборЗаписейСоставДокументов.Количество.Значение = 1;
	НаборЗаписейНаличиеДокументов = НаборЗаписейСоставДокументов.НаличиеДокументов.Значение;
	НаборЗаписейНаличиеДокументов.ТипДокумента = ТипДокумента;
	НаборЗаписейНаличиеДокументов.Количество = КоличествоДокументов;
	
	НаборЗаписейВходящаяОпись.ДатаСоставления.Значение = ВыборкаПоШапкеДокумента.Дата;
	
	Если ТипДокумента = "СВЕДЕНИЯ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ" Тогда
		
		НаборЗаписейВходящаяОпись.ТипСведений.Значение = Строка(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ);
		НаборЗаписейВходящаяОпись.КодКатегории.Значение = ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		
		НаборЗаписейОтчетныйПериод = НаборЗаписейВходящаяОпись.ОтчетныйПериод.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
		
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			НаборЗаписейВходящаяОпись.КорректируемыйОтчетныйПериод.НеВыводитьВФайл = Истина;
		Иначе
			НаборЗаписейОтчетныйПериод = НаборЗаписейВходящаяОпись.КорректируемыйОтчетныйПериод.Значение;
			ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.КорректируемыйПериод));
		КонецЕсли;
		
		ВписатьВзносыВНаборДанных(НаборЗаписейВходящаяОпись, ВыборкаПоШапкеДокумента.НачисленоСтраховая, ВыборкаПоШапкеДокумента.УплаченоСтраховая, ВыборкаПоШапкеДокумента.НачисленоНакопительная, ВыборкаПоШапкеДокумента.УплаченоНакопительная);
		
	ИначеЕсли ТипДокумента = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_И_ВОЗНАГРАЖДЕНИЙ" Тогда
		НаборЗаписейВходящаяОпись.ТипСведений.Значение = Строка(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ);
		НаборЗаписейВходящаяОпись.КодКатегории.Значение = ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
		НаборЗаписейВходящаяОпись.ТипДоговора.Значение = ВыборкаПоШапкеДокумента.ТипДоговора;
		НаборЗаписейВходящаяОпись.ОтчетныйГод.Значение = ВыборкаПоШапкеДокумента.ОтчетныйПериод;
		НаборЗаписейСуммаВыплатИвознаграждений = НаборЗаписейВходящаяОпись.СуммаВыплатИвознаграждений.Значение;
		НаборЗаписейСуммаВыплатИвознаграждений.ТипСтроки = "ИТОГО ПО ПАЧКЕ";
		НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатВсего = ВыборкаПоШапкеДокумента.Заработок;
		НаборЗаписейСуммаВыплатИвознаграждений.СуммаВыплатНачисленыСтраховыеВзносы = ВыборкаПоШапкеДокумента.ОблагаетсяВзносами;
	КонецЕсли;
	
	УзелПачкаВходящихДокументов = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "ПачкаВходящихДокументов", "", );
	
	Возврат УзелПачкаВходящихДокументов;

	
КонецФункции // ЗаполнитьНаборЗаписейВходящаяОпись2010()

// Процедура заполняет реквизиты файла - сведения об организации
//
Процедура ЗаполнитьСоставительПачки(НаборЗаписейСоставительПачки, ВыборкаПоШапкеДокумента) Экспорт	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		НаборЗаписейСоставительПачки.КодЕГРИП.Значение = СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияОГРН);
		НаборЗаписейСоставительПачки.Удалить("КодЕГРЮЛ");
	Иначе
		НаборЗаписейСоставительПачки.Удалить("КодЕГРИП");
		НаборЗаписейСоставительПачки.КодЕГРЮЛ.Значение = СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияОГРН);
	КонецЕсли;
	
	НаборЗаписейСоставительПачки.Форма.Значение = ВРег(Лев(ВыборкаПоШапкеДокумента.ОрганизацияКодПоОКПО, 40));
	ЗаменитьБуквуЁ(НаборЗаписейСоставительПачки.Форма.Значение, "Организационно-правовая форма по ОКОПФ");
	
	НомерПФР = СтрЗаменить(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР, " ", "");
	Если СтрДлина(НомерПФР) <> 14 Тогда
		НомерПФР = Лев(НомерПФР, 8) + "0" + Сред(НомерПФР, 9)
	КонецЕсли;
	НаборЗаписейСоставительПачки.РегистрационныйНомер.Значение = НомерПФР;
	НаборЗаписейСоставительПачки.Удалить("ДатаВыдачиЛицензии");
	НаборЗаписейСоставительПачки.Удалить("НомерЛицензии");
	
	НаборЗаписейНалоговыйНомер = НаборЗаписейСоставительПачки.НалоговыйНомер.Значение;
	НаборЗаписейНалоговыйНомер.ИНН = ВыборкаПоШапкеДокумента.ОрганизацияИНН;
	Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		
		НаборЗаписейНалоговыйНомер.Удалить("КПП");
		ТаблицаПолей = НаборЗаписейСоставительПачки.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	Иначе
		НаборЗаписейНалоговыйНомер.КПП = ВыборкаПоШапкеДокумента.ОрганизацияКПП;
	КонецЕсли;
	
	НаборЗаписейСоставительПачки.НаименованиеОрганизации.Значение = СокрЛП(ВРЕГ(Лев(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеПолное,НаборЗаписейСоставительПачки.НаименованиеОрганизации.Размер)));
	ЗаменитьБуквуЁ(НаборЗаписейСоставительПачки.НаименованиеОрганизации.Значение, "Наименование организации");
	
	НаборЗаписейСоставительПачки.НаименованиеКраткое.Значение = СокрЛП(ВРег(Лев(ВыборкаПоШапкеДокумента.ОрганизацияНаименование, НаборЗаписейСоставительПачки.НаименованиеКраткое.Размер)));
	ЗаменитьБуквуЁ(НаборЗаписейСоставительПачки.НаименованиеКраткое.Значение, "Краткое наименование организации");
	
	НаборЗаписейСоставительПачки.Удалить("Подразделение");
		
КонецПроцедуры 

Функция ОписаниеОтчетногоПериодаДляФайла(ОтчетныйПериод) Экспорт
	
	Если ОтчетныйПериод >= '20140101' Тогда 
		Возврат ОписаниеОтчетногоПериодаДляФайла2014(ОтчетныйПериод);
	Иначе
		Возврат ОписаниеОтчетногоПериодаДляФайла2013(ОтчетныйПериод);
	КонецЕсли;	
	
КонецФункции

Функция ОписаниеОтчетногоПериодаДляФайла2013(ОтчетныйПериод) Экспорт
	
	Если Месяц(ОтчетныйПериод) = 1 Тогда
		СтруктураОписания = Новый Структура("Квартал,Год",1,Год(ОтчетныйПериод));
	ИначеЕсли Месяц(ОтчетныйПериод) = 4 Тогда
		СтруктураОписания = Новый Структура("Квартал,Год",2,Год(ОтчетныйПериод));
	ИначеЕсли Месяц(ОтчетныйПериод) = 7 Тогда
		СтруктураОписания = Новый Структура("Квартал,Год",3,Год(ОтчетныйПериод));
	ИначеЕсли Месяц(ОтчетныйПериод) = 10 Тогда
		СтруктураОписания = Новый Структура("Квартал,Год",4,Год(ОтчетныйПериод));
	Иначе	
		СтруктураОписания = Новый Структура("Квартал,Год");		
	КонецЕсли;
	
	Возврат СтруктураОписания
	
КонецФункции

Функция ОписаниеОтчетногоПериодаДляФайла2014(ОтчетныйПериод) Экспорт
	
	СтруктураОписания = Новый Структура("Квартал,Год", Месяц(КонецКвартала(ОтчетныйПериод)) % 12, Год(ОтчетныйПериод));
	
	Возврат СтруктураОписания
	
КонецФункции 

Процедура ВписатьВзносыВНаборДанных(НаборДанных, НачисленоСтраховая, УплаченоСтраховая, НачисленоНакопительная, УплаченоНакопительная) Экспорт 
	
	Если НачисленоСтраховая > 0 Или УплаченоСтраховая > 0 Тогда
		СуммаВзносов = НаборДанных.СуммаВзносовНаСтраховую.Значение;
		Если НачисленоСтраховая > 0 Тогда
			СуммаВзносов.Начислено = НачисленоСтраховая;
		КонецЕсли;
		Если УплаченоСтраховая > 0 Тогда
			СуммаВзносов.Уплачено = УплаченоСтраховая;
		КонецЕсли;
	Иначе  
		НаборДанных.СуммаВзносовНаСтраховую.НеВыводитьВФайл = Истина;
	КонецЕсли;
	
	Если НачисленоНакопительная > 0 Или УплаченоНакопительная> 0 Тогда
		СуммаВзносов = НаборДанных.СуммаВзносовНаНакопительную.Значение;
		Если НачисленоНакопительная > 0 Тогда
			СуммаВзносов.Начислено = НачисленоНакопительная;
		КонецЕсли;
		Если УплаченоНакопительная > 0 Тогда
			СуммаВзносов.Уплачено = УплаченоНакопительная;
		КонецЕсли;
	Иначе
		НаборДанных.СуммаВзносовНаНакопительную.НеВыводитьВФайл = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Функция преобразует дерево значений в котором представлен XML файл, в текст
//
Функция ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки, АтрибутыПачкиВходящихДокументов = Неопределено) Экспорт	
	// Преобразуем дерево в строковое описание XML	
	ПотокВыгрузкиXML = СправкиПоНДФЛ.СоздатьПотокXML();
	
	СправкиПоНДФЛ.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML);
	
	// получаем содержимое файла в виде строки
	
	ТекстФайла = СтрЗаменить(ПотокВыгрузкиXML.Закрыть(),"<ПачкаВходящихДокументов>",
	"<ПачкаВходящихДокументов " + ?(АтрибутыПачкиВходящихДокументов = Неопределено, "Окружение=""В составе файла"" Стадия=""До обработки""", АтрибутыПачкиВходящихДокументов) + ">");
	
	Возврат ТекстФайла;
	
КонецФункции

// Формирует структуру полей адреса из списка значений или строки строке
//
// Параметры:
// 	СписокПолей	- СписокЗначений, содержит значение поля адреса и его представление
//				  Строка, содержит имена полей и их значения, перечисленные через запятую
//
// Возвращаемое значение:
//		Структура - ключи - имена полей, значения поля
//
Функция СтруктураПолейАдресаИзСпискаПолейКонтактнойИнформации(Знач СписокПолей, ПредставлениеАдреса) Экспорт
	
	СтруктураПолейАдреса = Новый Структура;
	СтруктураПолейАдреса.Вставить("Представление", ПредставлениеАдреса);
	СтруктураПолейАдреса.Вставить("Страна", "");
	СтруктураПолейАдреса.Вставить("НаименованиеСтраны", "");
	СтруктураПолейАдреса.Вставить("КодСтраны","");
	СтруктураПолейАдреса.Вставить("Индекс","");
	СтруктураПолейАдреса.Вставить("Регион","");
	СтруктураПолейАдреса.Вставить("Район","");
	СтруктураПолейАдреса.Вставить("Город","");
	СтруктураПолейАдреса.Вставить("НаселенныйПункт","");
	СтруктураПолейАдреса.Вставить("Улица","");
	СтруктураПолейАдреса.Вставить("Дом","");
	СтруктураПолейАдреса.Вставить("Корпус","");
	СтруктураПолейАдреса.Вставить("Квартира","");
	СтруктураПолейАдреса.Вставить("ТипДома","");
	СтруктураПолейАдреса.Вставить("ТипКорпуса","");
	СтруктураПолейАдреса.Вставить("ТипКвартиры","");
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоСтрокаXML(СписокПолей) Тогда
		СписокПолей = РаботаСАдресами.СведенияОбАдресе(СписокПолей).ЗначенияПолей;
		СтруктураПолейАдреса.Страна = СписокПолей.Страна;
		СтруктураПолейАдреса.НаименованиеСтраны = СписокПолей.Страна;
		СтруктураПолейАдреса.Индекс = СписокПолей.Индекс;
		СтруктураПолейАдреса.Регион = СписокПолей.Регион;
		СтруктураПолейАдреса.Район  = СписокПолей.Район;
		СтруктураПолейАдреса.Город  = СписокПолей.Город;
		СтруктураПолейАдреса.НаселенныйПункт  = СписокПолей.НаселенныйПункт;
		СтруктураПолейАдреса.Дом  = СписокПолей.Здание.Номер;
		СтруктураПолейАдреса.Корпус  = ?(СписокПолей.Корпуса.Количество() > 0, СписокПолей.Корпуса[0].Номер, "");
		СтруктураПолейАдреса.Квартира  = ?(СписокПолей.Помещения.Количество() > 0, СписокПолей.Помещения[0].Номер, "");
		СтруктураПолейАдреса.ТипДома  = СписокПолей.Здание.ТипЗдания;
		СтруктураПолейАдреса.ТипКорпуса  = ?(СписокПолей.Корпуса.Количество() > 0, СписокПолей.Корпуса[0].ТипКорпуса, "");
		СтруктураПолейАдреса.ТипКвартиры  = ?(СписокПолей.Помещения.Количество() > 0, СписокПолей.Помещения[0].ТипПомещения, "");
		
	Иначе
		Если ТипЗнч(СписокПолей) = Тип("Строка") Тогда
			СписокПолей = ПреобразоватьСтрокуВСписокПолей(СписокПолей);
		КонецЕсли;
		
		Для Каждого ЭлСписокПолей Из СписокПолей Цикл
			СтруктураПолейАдреса.Вставить(ЭлСписокПолей.Представление, ЭлСписокПолей.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если СтруктураПолейАдреса.Страна = "РОССИЯ" Тогда
		СтруктураПолейАдреса.Страна = "";
		СтруктураПолейАдреса.КодСтраны = "";
	КонецЕсли;
	
	СтруктураПолейАдреса.Регион = ВРЕГ(СтруктураПолейАдреса.Регион);
	
	 
	СтруктураПолейАдреса.Свойство("Страна", СтруктураПолейАдреса.НаименованиеСтраны);
	
	Возврат СтруктураПолейАдреса;
	
КонецФункции

// Обработчик перед записью документов персонифицированного учета
//
//
Процедура ДокументыПерсУчетаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанныхДокумента = Новый Структура;
	СтруктураДанныхДокумента.Вставить("Номер", Источник.Номер);
	СтруктураДанныхДокумента.Вставить("ОрганизацияРегистрационныйНомерПФР",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Организация, "РегистрационныйНомерПФР"));
	
	Если Не Источник.ПометкаУдаления Тогда
		ПроставитьНомерПачки(Источник);
	КонецЕсли;			
	СтруктураДанныхДокумента.Вставить("НомерПачки", Источник.НомерПачки);

	
	РеквизитОтчетныйПериод  = Источник.Метаданные().Реквизиты.Найти("ОтчетныйПериод"); 
	
	Если РеквизитОтчетныйПериод <> Неопределено И ТипЗнч(Источник.ОтчетныйПериод) = Тип("Дата") Тогда
		ГодДокумента = Год(Источник.ОтчетныйПериод);
	Иначе 	
    	ГодДокумента = Год(Источник.Дата);	
	КонецЕсли;
	
	Источник.ИмяФайлаДляПФР =  ПолучитьИмяФайлаПФ(Источник.Ссылка, ГодДокумента, СтруктураДанныхДокумента);	
	
	СтруктураОбъекта = Новый Структура("ОтчетныйПериод");
	ЗаполнитьЗначенияСвойств(СтруктураОбъекта, Источник);
	
	Если СтруктураОбъекта.ОтчетныйПериод <> Неопределено И (Не ЗначениеЗаполнено(СтруктураОбъекта.ОтчетныйПериод)) И (Не Источник.ПометкаУдаления) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено значение поля отчетный период'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Источник, , , Отказ);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПроставитьНомерПачки(ДокументОбъект) Экспорт
	Если ДокументОбъект.Метаданные().Реквизиты.Найти("ОтчетныйПериод") <> Неопределено Тогда 	
		ОтчетныйПериод = ?(ТипЗнч(ДокументОбъект.ОтчетныйПериод) = Тип("Дата"), ДокументОбъект.ОтчетныйПериод, Дата(ДокументОбъект.ОтчетныйПериод, 1, 1));
	Иначе
		ОтчетныйПериод = НачалоГода(ДокументОбъект.Дата);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДокументОбъект.Организация) И ЗначениеЗаполнено(ОтчетныйПериод) Тогда
		ГодДокумента = Год(ОтчетныйПериод);	
		Если ДокументОбъект.НомерПачки = 0 Тогда
			ДокументОбъект.НомерПачки = ПолучитьСледующийНомерПачки(ДокументОбъект.Организация, ОтчетныйПериод);
			РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(ДокументОбъект.Организация, ГодДокумента, ДокументОбъект.НомерПачки);
		Иначе 
			ПоследнийНомерПачки = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(ДокументОбъект.Организация, ГодДокумента);
			Если ДокументОбъект.НомерПачки > ПоследнийНомерПачки Тогда
				РегламентированнаяОтчетность.УстановитьНомерПачкиВыгруженныхФайловПФР(ДокументОбъект.Организация, ГодДокумента, ДокументОбъект.НомерПачки);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры


// Формирует имя выходного файла сведений в ПФ РФ
Функция ПолучитьИмяФайлаПФ(Документ, ГодПредставленияСведений, Знач ВыборкаПоШапкеДокумента = Неопределено) Экспорт	
		
	НомерПачки = СокрЛП(ВыборкаПоШапкеДокумента.НомерПачки);
	
	РегНомерПФР = ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР;
	СтрНомПачки = Прав("100000"+НомерПачки,5);
	
	РегНомерПФР = СтрЗаменить(РегНомерПФР, " ", "");
	Если СтрДлина(РегНомерПФР) <> 14 Тогда
		РегНомерПФР = Лев(РегНомерПФР, 8) + "0" + Сред(РегНомерПФР, 9)
	КонецЕсли;
	
	// имя файла без подразделений.
	ИмяФайла = "PFR-700-Y-"+Формат(ГодПредставленияСведений, "ЧГ=0")+"-ORG-"+ РегНомерПФР+   
	"-DCK-"+СтрНомПачки+"-DPT-000000-DCK-00000.XML";
		
	Возврат ИмяФайла;
	
КонецФункции

Функция ПолучитьСледующийНомерПачки(Организация, ОтчетныйПериод)Экспорт 
	СчВыгруженныхФайлов = РегламентированнаяОтчетность.ПолучитьНомерПачкиВыгруженныхФайловПФР(Организация, Год(ОтчетныйПериод));
	Возврат СчВыгруженныхФайлов + 1;
КонецФункции

// Формирует файл, который можно будет сохранить
//
Функция СохранитьФайлВыгрузкиСЗВ62(Документ) Экспорт
	
	ИмяСформированногоФайла = "";
	ТекстФайла = Документы.РеестрСЗВ_6_2.СформироватьФайлСЗВ(Документ, ИмяСформированногоФайла);
	
	Возврат СправкиПоНДФЛ.ПолучитьФайлПОИмениИТексту( ИмяСформированногоФайла + ".xml", ТекстФайла);
	
КонецФункции

// Формирует файл, который можно будет сохранить
//
Функция СохранитьФайлВыгрузкиАДВ62(Документ) Экспорт
	
	ИмяСформированногоФайла = "";
	ТекстФайла = Документы.ОписьПачекСЗВ_6.СформироватьФайлАДВ(Документ, ИмяСформированногоФайла);
	
	Возврат СправкиПоНДФЛ.ПолучитьФайлПОИмениИТексту( ИмяСформированногоФайла + ".xml", ТекстФайла);
	
КонецФункции

// Формирует файл СЗВ63, который можно будет сохранить
//
Функция СохранитьФайлВыгрузкиСЗВ63(Документ) Экспорт
	
	ИмяСформированногоФайла = "";
	ТекстФайла = Документы.ПачкаДокументовСЗВ_6_3.СформироватьФайлСЗВ63(Документ, ИмяСформированногоФайла);
	
	Возврат СправкиПоНДФЛ.ПолучитьФайлПОИмениИТексту( ИмяСформированногоФайла + ".xml", ТекстФайла);
	
КонецФункции


// Формирует файл раздела 6 формы РСВ1, который можно будет сохранить
//
Функция СохранитьФайлВыгрузкиРаздела6РСВ1(Документ) Экспорт
	
	ИмяСформированногоФайла = "";
	ТекстФайла = Документы.ПачкаРазделов6РасчетаРСВ_1.СформироватьФайлРасчета6(Документ, ИмяСформированногоФайла);
	
	Возврат СправкиПоНДФЛ.ПолучитьФайлПОИмениИТексту( ИмяСформированногоФайла + ".xml", ТекстФайла);
	
КонецФункции


// Формирует файл, который можно будет сохранить
//
Функция СохранитьФайлВыгрузкиСЗВ64(Документ) Экспорт
	
	ИмяСформированногоФайла = "";
	ТекстФайла = Документы.ПачкаДокументовСЗВ_6_4.СформироватьФайлСЗВ(Документ, ИмяСформированногоФайла);
	
	Возврат СправкиПоНДФЛ.ПолучитьФайлПОИмениИТексту( ИмяСформированногоФайла + ".xml", ТекстФайла);
	
КонецФункции

// Формирует файл, который можно будет сохранить
//
Функция СохранитьФайлВыгрузкиСЗВМ(Документ) Экспорт
	
	ИмяСформированногоФайла = "";
	ТекстФайла = Документы.СведенияОЗастрахованныхЛицахСЗВ_М.СформироватьВыходнойФайл(Документ, ИмяСформированногоФайла);
	
	Возврат СправкиПоНДФЛ.ПолучитьФайлПОИмениИТексту( ИмяСформированногоФайла , ТекстФайла, КодировкаТекста.UTF8);
	
КонецФункции

//////////////////////////////////////////////////////////////////////
//// Вспомогательные процедуры и функции

Функция ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод) Экспорт 
	Если ОтчетныйПериод >= '20170101' Тогда
		Возврат КонецГода(ОтчетныйПериод);
	ИначеЕсли ОтчетныйПериод >= '20110101' Тогда
		Возврат КонецКвартала(ОтчетныйПериод);
	ИначеЕсли  Месяц(ОтчетныйПериод) <= 6 Тогда
		Возврат Дата(Год(ОтчетныйПериод), 6, 30, 23, 59, 59); 
	Иначе
		Возврат КонецГода(ОтчетныйПериод);
	КонецЕсли;	
КонецФункции

Функция ПредшествующийОтчетныйПериодПерсУчета(Дата) Экспорт 
	
	Если Дата <= '20110101' Тогда 
		Возврат ДобавитьМесяц(НачалоКвартала(Дата), -6);	
	Иначе		
		Возврат ДобавитьМесяц(НачалоКвартала(Дата), -3);
	КонецЕсли;	
	
КонецФункции

 // Преобразует строку в формат, требуемый правилами подготовки документов в ПФ РФ 
//
Функция СтрокаВОтчет(Знач Строка)Экспорт 
	ЗаменитьБуквуЁ(Строка, "");
	
	Возврат СокрЛП(ВРег(Строка));
		
КонецФункции

Процедура ЗаменитьБуквуЁ(РедактируемаяСтрока, НазваниеРеквизита = "") Экспорт
	Если Найти(ВРег(РедактируемаяСтрока), "Ё") > 0 Тогда
		РедактируемаяСтрока = СтрЗаменить(РедактируемаяСтрока, "Ё", "Е");
		РедактируемаяСтрока = СтрЗаменить(РедактируемаяСтрока, "ё", "е");	
	КонецЕсли;
КонецПроцедуры

// Предназначена для получения имени элемента перечисления по значению.
//
// Параметры:
//	Элемент перечисления.
//
// Возвращаемое значение:
//	Строка - имя элемента перечисления в метаданных.
//
Функция ПолучитьИмяЭлементаПеречисленияПоЗначению(ЗначениеПеречисления) Экспорт
	
	ИмяЭлемента = Строка(ЗначениеПеречисления);
	Для каждого ЭлементПеречисления Из Метаданные.Перечисления[ЗначениеПеречисления.Метаданные().Имя].ЗначенияПеречисления Цикл
		Если ЭлементПеречисления.Синоним = Строка(ЗначениеПеречисления) Тогда
			ИмяЭлемента = ЭлементПеречисления.Имя;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИмяЭлемента;
	
КонецФункции

// Преобразует дату в формат, требуемый правилами подготовки документов в ПФ РФ 
// Преобразует дату в формат, необходимый для печатных форм сведений в ПФР: "ДД" месяц ГГГГ
Функция ДатаВОтчет(Знач Дата) Экспорт
	Если (ТипЗнч(Дата) = Тип("Дата"))И(Дата <> Дата('00010101')) Тогда
		Стр = Формат(Дата,"ДФ='дд ММММ гггг'") + " года";
		Возврат """"+Лев(Стр,2)+""""+Сред(Стр,3);
	КонецЕсли;	 
	Возврат "";
КонецФункции

/// Процедура заполняет адрес, представленный в структуре для записи в XML файл 
// входными данными является строка адреса
//  СписокСтран - Список стран и их кодов
// СписокСокращений1-5 - сокращения для определенного реквизита адреса
// ФорматИностранныйАдрес, ФорматНеструктурированныйАдрес - форматы данных для не Российских адресов.
// ВыходноеЗначение: НаборЗаписейАдрес
Процедура ЗаполнитьАдрес(НаборЗаписейАдрес, СтрокаАдрес, СписокСтран, ФорматНеструктурированныйАдрес, ФорматИностранныйАдрес, ЗаментяБуквуЕ = Ложь) Экспорт
	АдресСписком = СтруктураПолейАдресаИзСпискаПолейКонтактнойИнформации(ВРег(СтрокаАдрес), "");
	ЗаПределамиРФ = Ложь;
	АдресСписком.Свойство("ЗаПределамиРФ", ЗаПределамиРФ);
	// ЗаПределамиРФ может быть не определено, поэтому сравниваем на значение
	Если ЗаПределамиРФ = Истина Тогда
		Если АдресСписком.Страна = "РОССИЯ" Тогда
			// Неструктурированный адрес
			НаборЗаписейАдрес = ОбщегоНазначения.СкопироватьРекурсивно(ФорматНеструктурированныйАдрес);
			НаборЗаписейАдрес.НеструктурированныйАдрес.Значение.Адрес = ВРег(СокрЛП(СтрокаАдрес));
			Если ЗаментяБуквуЕ Тогда
				ЗаменитьБуквуЁ(НаборЗаписейАдрес.НеструктурированныйАдрес.Значение.Адрес, "Адрес");
			КонецЕсли;	
			НаборЗаписейАдрес.ТипАдреса.Значение = "НЕСТРУКТУРИРОВАННЫЙ";
			НаборЗаписейАдрес.Удалить("Индекс");
			ТекстПредупреждения = НСтр("ru = 'сохранен как неструктурированный адрес.'");
		Иначе
			// Иностранный адрес
			
			НазваниеСтраны = СокрЛП(АдресСписком.Страна);
			КодСтраны = СписокСтран.Получить(НазваниеСтраны);
			Если КодСтраны = Неопределено Тогда
				// не удалось получить страну, запишем как неструктурированный адрес
				НаборЗаписейАдрес = ОбщегоНазначения.СкопироватьРекурсивно(ФорматНеструктурированныйАдрес);
				НаборЗаписейАдрес.НеструктурированныйАдрес.Значение.Адрес = ВРег(СокрЛП(СтрокаАдрес));
				Если ЗаментяБуквуЕ Тогда
					ЗаменитьБуквуЁ(НаборЗаписейАдрес.НеструктурированныйАдрес.Значение.Адрес, "Адрес");
				КонецЕсли;	
				НаборЗаписейАдрес.ТипАдреса.Значение = "НЕСТРУКТУРИРОВАННЫЙ";
				НаборЗаписейАдрес.Удалить("Индекс");
				ТекстПредупреждения = " сохранен как неструктурированный адрес."
			Иначе
				НаборЗаписейАдрес = ОбщегоНазначения.СкопироватьРекурсивно(ФорматИностранныйАдрес);
				НаборЗаписейАдрес.ИностранныйАдрес.Значение.КодСтраны = КодСтраны;
				НаборЗаписейАдрес.ИностранныйАдрес.Значение.НазваниеСтраны = НазваниеСтраны;
				НаборЗаписейАдрес.ИностранныйАдрес.Значение.Адрес = ВРег(СокрЛП(СтрокаАдрес));
				НаборЗаписейАдрес.ТипАдреса.Значение = "ИНОСТРАННЫЙ";
				НаборЗаписейАдрес.Удалить("Индекс");
				ТекстПредупреждения = НСтр("ru = ' сохранен как иностранный адрес.'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		// Российский адрес
		НаборЗаписейАдрес.Индекс.Значение = АдресСписком.Индекс;
		НаборЗаписейАдрес.ТипАдреса.Значение = "РОССИЙСКИЙ";
		
		НаборЗаписейРоссийскийАдрес = НаборЗаписейАдрес.РоссийскийАдрес.Значение;
		НаборЗаписейРоссийскийАдрес.СостояниеАдреса.Значение = "ПРАВИЛЬНЫЙ";
		
		НаборЗаписейРоссийскийАдрес.Регион.Значение.ГеографическоеНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(АдресСписком.Регион, НаборЗаписейРоссийскийАдрес.Регион.Значение.Сокращение);
		Если ЗаментяБуквуЕ Тогда
			ЗаменитьБуквуЁ(НаборЗаписейРоссийскийАдрес.Регион.Значение.ГеографическоеНазвание, "Регион");
		КонецЕсли;	
		
		НаборЗаписейРоссийскийАдрес.Район.Значение.ГеографическоеНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(АдресСписком.Район, НаборЗаписейРоссийскийАдрес.Район.Значение.Сокращение);
		Если ЗаментяБуквуЕ Тогда
			ЗаменитьБуквуЁ(НаборЗаписейРоссийскийАдрес.Район.Значение.ГеографическоеНазвание, "Район");
		КонецЕсли;
		
		НаборЗаписейРоссийскийАдрес.Город.Значение.ГеографическоеНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(АдресСписком.Город, НаборЗаписейРоссийскийАдрес.Город.Значение.Сокращение);		
		Если ЗаментяБуквуЕ Тогда	
			ЗаменитьБуквуЁ(НаборЗаписейРоссийскийАдрес.Город.Значение.ГеографическоеНазвание, "Город");
		КонецЕсли;
		
		НаборЗаписейРоссийскийАдрес.НаселенныйПункт.Значение.ГеографическоеНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(АдресСписком.НаселенныйПункт, НаборЗаписейРоссийскийАдрес.НаселенныйПункт.Значение.Сокращение);
		Если ЗаментяБуквуЕ Тогда
			ЗаменитьБуквуЁ(НаборЗаписейРоссийскийАдрес.Город.Значение.ГеографическоеНазвание, "Населенный пункт");
		КонецЕсли;	
		НаборЗаписейРоссийскийАдрес.Улица.Значение.ГеографическоеНазвание = РегламентированнаяОтчетность.ПолучитьИмяИАдресноеСокращение(АдресСписком.Улица, НаборЗаписейРоссийскийАдрес.Улица.Значение.Сокращение);
		Если ЗаментяБуквуЕ Тогда
			ЗаменитьБуквуЁ(НаборЗаписейРоссийскийАдрес.Улица.Значение.ГеографическоеНазвание, "Улица");
		КонецЕсли;	
		
		Если Не ПустаяСтрока(АдресСписком.Дом) Тогда
			НаборЗаписейРоссийскийАдрес.Дом.Значение.Номер = АдресСписком.Дом;
			НаборЗаписейРоссийскийАдрес.Дом.Значение.Сокращение = "Д";
		КонецЕсли;
		
		Если Не ПустаяСтрока(АдресСписком.Корпус) Тогда
			НаборЗаписейРоссийскийАдрес.Корпус.Значение.Номер = АдресСписком.Корпус;
			НаборЗаписейРоссийскийАдрес.Корпус.Значение.Сокращение = "КОРП";
		КонецЕсли;
		
		Если Не ПустаяСтрока(АдресСписком.Квартира) Тогда
			НаборЗаписейРоссийскийАдрес.Квартира.Значение.Номер = АдресСписком.Квартира;
			НаборЗаписейРоссийскийАдрес.Квартира.Значение.Сокращение = "КВ";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

Функция ПредставлениеОтчетногоПериода(Период, Кратко = Ложь) Экспорт
	Если Период >= '20110101' Тогда	
		Если Кратко Тогда
			Возврат Формат(Период, "ДФ='к ""кв."" ггг ""г.""'")
		Иначе	
			Возврат ПредставлениеПериода(Период, ОкончаниеОтчетногоПериодаПерсУчета(Период), "ФП = Истина");
		КонецЕсли;
	ИначеЕсли Месяц(Период) <= 6  Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '1 полугодие %1 г.'"), Формат(Период, "ДФ=ггг"));
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '2 полугодие %1 г.'"), Формат(Период, "ДФ=ггг"));
	КонецЕсли;
		
КонецФункции	

Функция ДатаПередачиФССВыплатыПособий(Организация) Экспорт

	Возврат '30000101'	

КонецФункции


Функция СформироватьПачкиДокументовСЗВ(ДанныеОписи, КорректируемыйПериод = '00010101', УчитыватьИсправления = Ложь, ЗамещатьСуществующиеПачки = Ложь, МассивПачекКомплекта = Неопределено, МассивФизЛиц = Неопределено, ОтчетныйПериод) Экспорт 
	
	Если ОтчетныйПериод  >= '20140101' Тогда
		Возврат СформироватьПачкиДокументовСЗВ2014(ДанныеОписи, КорректируемыйПериод, УчитыватьИсправления, ЗамещатьСуществующиеПачки, МассивПачекКомплекта, МассивФизЛиц);
	Иначе
		Возврат СформироватьПачкиДокументовСЗВ2013(ДанныеОписи, КорректируемыйПериод, УчитыватьИсправления, ЗамещатьСуществующиеПачки, МассивПачекКомплекта, МассивФизЛиц);
	КонецЕсли;
	
КонецФункции

Функция СформироватьПачкиДокументовСЗВ2013(ДанныеОписи, КорректируемыйПериод = '00010101', УчитыватьИсправления = Ложь, ЗамещатьСуществующиеПачки = Ложь, МассивПачекКомплекта = Неопределено, МассивФизЛиц = Неопределено)Экспорт 
	
	НомерПачки = ПолучитьСледующийНомерПачки(ДанныеОписи.Организация, ДанныеОписи.ОтчетныйПериод);	
	
	Если ЗначениеЗаполнено(КорректируемыйПериод) Тогда
		ПериодРасчета = КорректируемыйПериод;
		КорректирующиеСведения = Истина;
	Иначе
		ПериодРасчета = ДанныеОписи.ОтчетныйПериод;
		КорректирующиеСведения = Ложь;
	КонецЕсли;
	
	ТаблицаДокументов = Новый ТаблицаЗначений;
	ТаблицаДокументов.Колонки.Добавить("ПачкаДокументов");
	ТаблицаДокументов.Колонки.Добавить("НомерПачки");
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ДанныеОписи.ОтчетныйПериод);
	Запрос.УстановитьПараметр("КорректируемыйПериод", КорректируемыйПериод);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	МассивПачекСЗВ6_1 = Новый Массив;
	МассивПачекСЗВ6_2 = Новый Массив;
	МассивПачекСЗВ6_4 = Новый Массив;
	
	Если ЗамещатьСуществующиеПачки Тогда
		ЗаполнитьМассивыПачекПоТипам(МассивПачекСЗВ6_1, МассивПачекСЗВ6_2, МассивПачекСЗВ6_4, МассивПачекКомплекта, ДанныеОписи.ОтчетныйПериод, КорректируемыйПериод);		
	КонецЕсли;	
	Запрос.УстановитьПараметр("МассивСЗВ6_1", МассивПачекСЗВ6_1);
	Запрос.УстановитьПараметр("МассивСЗВ6_2", МассивПачекСЗВ6_2);
	Запрос.УстановитьПараметр("МассивСЗВ6_4", МассивПачекСЗВ6_4);
	
	Если МассивПачекКомплекта <> Неопределено И Не УчитыватьИсправления Тогда
		МассивПачекКомплекта.Очистить();
	КонецЕсли;	
	
	ОкончаниеПериода = ОкончаниеОтчетногоПериодаПерсучета(ПериодРасчета);
	Если МассивФизЛиц <> Неопределено Тогда 
		ТаблицаФизЛиц = Новый ТаблицаЗначений;
		ТаблицаФизЛиц.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
		
		Для Каждого ФизЛицо Из МассивФизЛиц Цикл 
			СтрокаТаблицы = ТаблицаФизЛиц.Добавить();
			СтрокаТаблицы.ФизическоеЛицо = ФизЛицо;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ТаблицаФизическихЛиц", ТаблицаФизЛиц);
		Запрос.УстановитьПараметр("Организация", ДанныеОписи.Организация);
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаФизическихЛиц.ФизическоеЛицо,
		|	&Организация КАК Организация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	&ТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц";
		
		Запрос.Выполнить();
		
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(ПериодРасчета, ОкончаниеПериода, ДанныеОписи.Организация, МенеджерВТ, Истина);
	Иначе	
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(ПериодРасчета, ОкончаниеПериода, ДанныеОписи.Организация, МенеджерВТ);
	КонецЕсли;
	
	СформироватьВТСДаннымиОВзносахИСтажеСотрудников2013(МенеджерВТ, ДанныеОписи.Организация, ПериодРасчета, ДанныеОписи.Дата, КорректирующиеСведения, УчитыватьИсправления, МассивПачекКомплекта, МассивФизЛиц);									
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОВзносахИСтаже.ФизическоеЛицо КАК Сотрудник,
	|	ДанныеОВзносахИСтаже.Фамилия,
	|	ДанныеОВзносахИСтаже.Имя,
	|	ДанныеОВзносахИСтаже.Отчество,
	|	ДанныеОВзносахИСтаже.СтраховойНомерПФР,
	|	ДанныеОВзносахИСтаже.АдресДляИнформирования,
	|	ДанныеОВзносахИСтаже.АдресДляИнформированияПредставление,
	|	ДанныеОВзносахИСтаже.НачисленоНакопительная,
	|	ДанныеОВзносахИСтаже.НачисленоСтраховая,
	|	ДанныеОВзносахИСтаже.УплаченоСтраховая,
	|	ДанныеОВзносахИСтаже.УплаченоНакопительная,
	|	ДанныеОВзносахИСтаже.ДоНачисленоНакопительная,
	|	ДанныеОВзносахИСтаже.ДоНачисленоСтраховая,
	|	ДанныеОВзносахИСтаже.ДоУплаченоСтраховая,
	|	ДанныеОВзносахИСтаже.УплаченоНакопительная КАК УплаченоНакопительная1,
	|	ДанныеОВзносахИСтаже.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеОВзносахИСтаже.ДатаОкончанияПериода,
	|	ДанныеОВзносахИСтаже.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ДанныеОВзносахИСтаже.ТипДоговора КАК ТипДоговора
	|ИЗ
	|	ВТДанныеОВзносахИСтаже КАК ДанныеОВзносахИСтаже
	|
	|УПОРЯДОЧИТЬ ПО
	|	КатегорияЗастрахованныхЛиц,
	|	ТипДоговора,
	|	ДанныеОВзносахИСтаже.Наименование,
	|	Сотрудник,
	|	ДатаНачалаПериода";
	
	
	ВыборкаСотрудников = Запрос.Выполнить().Выбрать();
	СложныйСтаж = Ложь;
	
	СведенияОДоходах = Неопределено;
	Если Год(ПериодРасчета) >= 2013 Тогда 
		СведенияОДоходах = ДоходыЗаПериод2013(ДанныеОписи.Организация, ПериодРасчета, , , МассивФизлиц);
	КонецЕсли;
	
	Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл 
		СчСотрудников = 0;
		
		ДокументСЗВ = ПолучитьПачкуСЗВ(СложныйСтаж, ПериодРасчета, МассивПачекСЗВ6_1, МассивПачекСЗВ6_2, МассивПачекСЗВ6_4);
		ЗаполнитьСвойстваДокумента(ДокументСЗВ, ДанныеОписи, НомерПачки, ВыборкаСотрудников.КатегорияЗастрахованныхЛиц, ВыборкаСотрудников.ТипДоговора, КорректирующиеСведения, КорректируемыйПериод);
		НомерПачки = НомерПачки + 1;
		
		Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("Сотрудник") Цикл				
			
			ПериодыСтажаПредставление = "";
			Если СчСотрудников = 200 Тогда
				Если КорректирующиеСведения Тогда
					ДокументСЗВ.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
					ДокументСЗВ.КорректируемыйПериод = КорректируемыйПериод;
				КонецЕсли;	
				
				ДокументСЗВ.Записать(РежимЗаписиДокумента.Запись);
				
				ДокументСЗВ = ПолучитьПачкуСЗВ(СложныйСтаж, ПериодРасчета, МассивПачекСЗВ6_1, МассивПачекСЗВ6_2, МассивПачекСЗВ6_4);
				
				ЗаполнитьСвойстваДокумента(ДокументСЗВ, ДанныеОписи, НомерПачки, ВыборкаСотрудников.КатегорияЗастрахованныхЛиц, ВыборкаСотрудников.ТипДоговора, КорректирующиеСведения, КорректируемыйПериод);
				
				НомерПачки = НомерПачки + 1;	
				СчСотрудников = 0;
			КонецЕсли;
			
			СтрокаСотрудник = ДокументСЗВ.Сотрудники.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаСотрудник, ВыборкаСотрудников);
			
			ТипДокументСЗВ64 = ТипЗнч(ДокументСЗВ) = Тип("ДокументОбъект.ПачкаДокументовСЗВ_6_4");
			
			Если ТипДокументСЗВ64 Тогда
				ЗаполнитьСведенияОДоходахСЗВ64ПоСотруднику(
					ДокументСЗВ, 
					СведенияОДоходах, 
					ВыборкаСотрудников.Сотрудник, 
					ВыборкаСотрудников.КатегорияЗастрахованныхЛиц, 
					ВыборкаСотрудников.ТипДоговора);
			КонецЕсли;
			
			СчСотрудников = СчСотрудников + 1;
			
			Если ЗначениеЗаполнено(ВыборкаСотрудников.ДатаНачалаПериода) Тогда
				НомерОсновнойЗаписи = 0;
				Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("ДатаНачалаПериода") Цикл
					НомерОсновнойЗаписи = НомерОсновнойЗаписи + 1;
					СтрокаСтаж = ДокументСЗВ.ЗаписиОСтаже.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСтаж, ВыборкаСотрудников);
					Если ТипДокументСЗВ64 Тогда
						СтрокаСтаж.НомерОсновнойЗаписи = НомерОсновнойЗаписи;
					КонецЕсли;
					
					ПериодыСтажаПредставление = ПериодыСтажаПредставление + Формат(ВыборкаСотрудников.ДатаНачалаПериода, "ДФ=dd.MM.yy") + Символы.НПП + "-" + Символы.НПП + Формат(ВыборкаСотрудников.ДатаОкончанияПериода, "ДФ=dd.MM.yy") + Символы.ПС;
				КонецЦикла;
			КонецЕсли;	
			Если ТипЗнч(ДокументСЗВ) = Тип("ДокументОбъект.РеестрСЗВ_6_2") Тогда
				СтрокаСотрудник.ПериодыСтажаСтрока = ПериодыСтажаПредставление;
			КонецЕсли;	
		КонецЦикла;	
		
		Если КорректирующиеСведения Тогда
			ДокументСЗВ.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
			ДокументСЗВ.КорректируемыйПериод = КорректируемыйПериод;
		КонецЕсли;	
		ДокументСЗВ.Записать(РежимЗаписиДокумента.Проведение);
		
		
		СтрокаДокументов = ТаблицаДокументов.Добавить();
		СтрокаДокументов.ПачкаДокументов = ДокументСЗВ.Ссылка;	
	КонецЦикла;	
	
	Для Каждого ПустаяПачка Из МассивПачекСЗВ6_1 Цикл
		ДокументОбъект = ПустаяПачка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
	КонецЦикла;
	
	Для Каждого ПустаяПачка Из МассивПачекСЗВ6_2 Цикл
		ДокументОбъект = ПустаяПачка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
	КонецЦикла;
		
	Для Каждого ПустаяПачка Из МассивПачекСЗВ6_4 Цикл
		ДокументОбъект = ПустаяПачка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
	КонецЦикла;
	
	Возврат ТаблицаДокументов;
	
КонецФункции

Функция СформироватьПачкиДокументовСЗВ2014(ДанныеОписи, КорректируемыйПериод = '00010101', УчитыватьИсправления = Ложь, ЗамещатьСуществующиеПачки = Ложь, МассивПачекКомплекта = Неопределено, МассивФизЛиц = Неопределено)Экспорт 
										
	НомерПачки = ПолучитьСледующийНомерПачки(ДанныеОписи.Организация, ДанныеОписи.ОтчетныйПериод);	
	
	Если ЗначениеЗаполнено(КорректируемыйПериод) Тогда
		ПериодРасчета = КорректируемыйПериод;
		КорректирующиеСведения = Истина;
	Иначе
		ПериодРасчета = ДанныеОписи.ОтчетныйПериод;
		КорректирующиеСведения = Ложь;
	КонецЕсли;
	
	ТаблицаДокументов = Новый ТаблицаЗначений;
	ТаблицаДокументов.Колонки.Добавить("ПачкаДокументов");
	ТаблицаДокументов.Колонки.Добавить("НомерПачки");
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ДанныеОписи.ОтчетныйПериод);
	Запрос.УстановитьПараметр("КорректируемыйПериод", КорректируемыйПериод);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Если МассивПачекКомплекта <> Неопределено И Не УчитыватьИсправления Тогда
		МассивПачекКомплекта.Очистить();
	КонецЕсли;	
	ПачкиРазделов6 = Новый Массив;
	
	Если ЗначениеЗаполнено(ДанныеОписи.Ссылка) Тогда
		ПачкиРазделов6.Добавить(ДанныеОписи);
	КонецЕсли;
	
	ОкончаниеПериода = ОкончаниеОтчетногоПериодаПерсучета(ПериодРасчета);
	Если МассивФизЛиц <> Неопределено Тогда 
		ТаблицаФизЛиц = Новый ТаблицаЗначений;
		ТаблицаФизЛиц.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
		
		Для Каждого ФизЛицо Из МассивФизЛиц Цикл 
			СтрокаТаблицы = ТаблицаФизЛиц.Добавить();
			СтрокаТаблицы.ФизическоеЛицо = ФизЛицо;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ТаблицаФизическихЛиц", ТаблицаФизЛиц);
		Запрос.УстановитьПараметр("Организация", ДанныеОписи.Организация);
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаФизическихЛиц.ФизическоеЛицо,
		|	&Организация КАК Организация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	&ТаблицаФизическихЛиц КАК ТаблицаФизическихЛиц";
		
		Запрос.Выполнить();
		
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(ПериодРасчета, ОкончаниеПериода, ДанныеОписи.Организация, МенеджерВТ, Истина);
	Иначе	
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(ПериодРасчета, ОкончаниеПериода, ДанныеОписи.Организация, МенеджерВТ);
	КонецЕсли;
	
	СформироватьВТСДаннымиОВзносахИСтажеСотрудников2014(МенеджерВТ, ДанныеОписи.Организация, ПериодРасчета, ДанныеОписи.Дата, КорректирующиеСведения, УчитыватьИсправления, МассивПачекКомплекта, МассивФизЛиц);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОВзносахИСтаже.ФизическоеЛицо КАК Сотрудник,
	|	ДанныеОВзносахИСтаже.Фамилия,
	|	ДанныеОВзносахИСтаже.Имя,
	|	ДанныеОВзносахИСтаже.Отчество,
	|	ДанныеОВзносахИСтаже.СтраховойНомерПФР,
	|	ДанныеОВзносахИСтаже.АдресДляИнформирования,
	|	ДанныеОВзносахИСтаже.АдресДляИнформированияПредставление,
	|	ДанныеОВзносахИСтаже.НачисленоСтраховая,
	|	ДанныеОВзносахИСтаже.ДоНачисленоСтраховая,
	|	ДанныеОВзносахИСтаже.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ДанныеОВзносахИСтаже.ДатаОкончанияПериода,
	|	ДанныеОВзносахИСтаже.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ДанныеОВзносахИСтаже.ТипДоговора КАК ТипДоговора
	|ИЗ
	|	ВТДанныеОВзносахИСтаже КАК ДанныеОВзносахИСтаже
	|
	|УПОРЯДОЧИТЬ ПО
	|	КатегорияЗастрахованныхЛиц,
	|	ТипДоговора,
	|	ДанныеОВзносахИСтаже.Наименование,
	|	Сотрудник,
	|	ДатаНачалаПериода";
	
	
	ВыборкаСотрудников = Запрос.Выполнить().Выбрать();
	СложныйСтаж = Ложь;
	
	СведенияОДоходах = ДоходыЗаПериод2014(МенеджерВТ, ДанныеОписи.Организация, ПериодРасчета, , , МассивФизлиц);
	
	Организация = ДанныеОписи.Организация;
	ОтчетныйПериод = ДанныеОписи.ОтчетныйПериод;
	РегНомерПФРВКоррПериод = "";
	Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл 
		СчСотрудников = 0;
		
		ПачкаРазделов6 = ПолучитьПачкуРазделов6(СложныйСтаж, ПериодРасчета, ПачкиРазделов6);
		ЗаполнитьСвойстваДокумента(ПачкаРазделов6, ДанныеОписи, НомерПачки, ВыборкаСотрудников.КатегорияЗастрахованныхЛиц, ВыборкаСотрудников.ТипДоговора, КорректирующиеСведения, КорректируемыйПериод);
		НомерПачки = НомерПачки + 1;
		
		Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("Сотрудник") Цикл				
			
			ПериодыСтажаПредставление = "";
			Если СчСотрудников = 200 Тогда
				
				ПачкаРазделов6.Записать(РежимЗаписиДокумента.Запись);
				
				ПачкаРазделов6 = ПолучитьПачкуРазделов6(СложныйСтаж, ПериодРасчета, ПачкиРазделов6);
				ЗаполнитьСвойстваДокумента(ПачкаРазделов6, ДанныеОписи, НомерПачки, ВыборкаСотрудников.КатегорияЗастрахованныхЛиц, ВыборкаСотрудников.ТипДоговора, КорректирующиеСведения, КорректируемыйПериод);
				
				НомерПачки = НомерПачки + 1;
				СчСотрудников = 0;
			КонецЕсли;
			
			СтрокаСотрудник = ПачкаРазделов6.Сотрудники.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаСотрудник, ВыборкаСотрудников);
			
			
			ЗаполнитьСведенияОДоходахСЗВ64ПоСотруднику(
				ПачкаРазделов6, 
				СведенияОДоходах, 
				ВыборкаСотрудников.Сотрудник, 
				ВыборкаСотрудников.КатегорияЗастрахованныхЛиц, 
				ВыборкаСотрудников.ТипДоговора);
			
			СчСотрудников = СчСотрудников + 1;
			
			Если ЗначениеЗаполнено(ВыборкаСотрудников.ДатаНачалаПериода) Тогда
				НомерОсновнойЗаписи = 0;
				Пока ВыборкаСотрудников.СледующийПоЗначениюПоля("ДатаНачалаПериода") Цикл
					НомерОсновнойЗаписи = НомерОсновнойЗаписи + 1;
					СтрокаСтаж = ПачкаРазделов6.ЗаписиОСтаже.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСтаж, ВыборкаСотрудников);
					СтрокаСтаж.НомерОсновнойЗаписи = НомерОсновнойЗаписи;
					
					ПериодыСтажаПредставление = ПериодыСтажаПредставление + Формат(ВыборкаСотрудников.ДатаНачалаПериода, "ДФ=dd.MM.yy") + Символы.НПП + "-" + Символы.НПП + Формат(ВыборкаСотрудников.ДатаОкончанияПериода, "ДФ=dd.MM.yy") + Символы.ПС;
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
		
		ПачкаРазделов6.Записать(РежимЗаписиДокумента.Проведение);
		
		СтрокаДокументов = ТаблицаДокументов.Добавить();
		СтрокаДокументов.ПачкаДокументов = ПачкаРазделов6.Ссылка;	
	КонецЦикла;	
	
	Для Каждого ПустаяПачка Из ПачкиРазделов6 Цикл
		ДокументОбъект = ПустаяПачка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
	КонецЦикла;
	
	Возврат ТаблицаДокументов;
	
КонецФункции


Процедура ЗаполнитьМассивыПачекПоТипам(МассивСЗВ6_1, МассивСЗВ6_2, МассивСЗВ6_4, МассивПачекКомплекта, ОтчетныйПериод, КорректируемыйПериод) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("КорректируемыйПериод", КорректируемыйПериод);
	Запрос.УстановитьПараметр("МассивПачек", МассивПачекКомплекта);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСЗВ_6_2.Ссылка
	|ИЗ
	|	Документ.РеестрСЗВ_6_2 КАК РеестрСЗВ_6_2
	|ГДЕ
	|	РеестрСЗВ_6_2.ОтчетныйПериод = &ОтчетныйПериод
	|	И РеестрСЗВ_6_2.КорректируемыйПериод = &КорректируемыйПериод
	|	И РеестрСЗВ_6_2.Ссылка В(&МассивПачек)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод = &ОтчетныйПериод
	|	И ПачкаДокументовСЗВ_6_4.КорректируемыйПериод = &КорректируемыйПериод
	|	И ПачкаДокументовСЗВ_6_4.Ссылка В(&МассивПачек)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.РеестрСЗВ_6_2") Тогда
			МассивСЗВ6_2.Добавить(Выборка.Ссылка);
		ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
			МассивСЗВ6_4.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОДоходахСЗВ64ПоСотруднику(ПачкаСЗВ, СведенияОДоходах, Сотрудник, КатегорияЗастрахованныхЛиц, ТипДоговора) Экспорт
	Если СведенияОДоходах <> Неопределено Тогда
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ФизическоеЛицо", Сотрудник);
		СтруктураПоиска.Вставить("КатегорияЗастрахованныхЛиц", КатегорияЗастрахованныхЛиц);
		СтруктураПоиска.Вставить("ТипДоговора", ТипДоговора);
		
		ДобавляемыеСтроки = СведенияОДоходах.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого ДобавляемаяСтрока Из ДобавляемыеСтроки Цикл
			НоваяСтрока = ПачкаСЗВ.СведенияОЗаработке.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДобавляемаяСтрока);
			НоваяСтрока.Сотрудник = Сотрудник;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры	

///// отчетность в ПФ РФ с 2014 года

Функция ПолучитьПачкуСЗВ(СложныйСтаж, ПериодРасчета, МассивПачекСЗВ6_1, МассивПачекСЗВ6_2, МассивПачекСЗВ6_4)	
	Если Год(ПериодРасчета) >= 2013 Тогда 
		Если МассивПачекСЗВ6_4.Количество() > 0 Тогда 
			ПачкаОбъект = МассивПачекСЗВ6_4[0].ПолучитьОбъект();
			ПачкаОбъект.Сотрудники.Очистить();
			ПачкаОбъект.ЗаписиОСтаже.Очистить();
			ПачкаОбъект.СведенияОЗаработке.Очистить();
			МассивПачекСЗВ6_4.Удалить(0);
		Иначе 
			ПачкаОбъект = Документы.ПачкаДокументовСЗВ_6_4.СоздатьДокумент();
		КонецЕсли;
		ПачкаОбъект.ФайлСформирован = Истина;
		Возврат ПачкаОбъект; 	
	ИначеЕсли СложныйСтаж Тогда
		Если МассивПачекСЗВ6_1.Количество() > 0 Тогда 
			ПачкаОбъект = МассивПачекСЗВ6_1[0].ПолучитьОбъект();
			ПачкаОбъект.Сотрудники.Очистить();
			ПачкаОбъект.ЗаписиОСтаже.Очистить();
			МассивПачекСЗВ6_1.Удалить(0);
		Иначе
			
		КонецЕсли;
		ПачкаОбъект.ФайлСформирован = Истина;
		Возврат ПачкаОбъект;
	Иначе
		Если МассивПачекСЗВ6_2.Количество() > 0 Тогда 
			ПачкаОбъект = МассивПачекСЗВ6_2[0].ПолучитьОбъект();
			ПачкаОбъект.Сотрудники.Очистить();
			ПачкаОбъект.ЗаписиОСтаже.Очистить();
			МассивПачекСЗВ6_2.Удалить(0);
		Иначе 
			ПачкаОбъект = Документы.РеестрСЗВ_6_2.СоздатьДокумент();
		КонецЕсли;
		ПачкаОбъект.ФайлСформирован = Истина;
		Возврат ПачкаОбъект;
	КонецЕсли;
КонецФункции

Функция ПолучитьПачкуРазделов6(СложныйСтаж, ПериодРасчета, ПачкаРазделов6)
	
		Если ПачкаРазделов6.Количество() > 0 Тогда 
			ПачкаОбъект = ПачкаРазделов6[0].ПолучитьОбъект();
			ПачкаОбъект.Сотрудники.Очистить();
			ПачкаОбъект.ЗаписиОСтаже.Очистить();
			ПачкаОбъект.СведенияОЗаработке.Очистить();
			ПачкаОбъект.ФизическиеЛица.Очистить();
			ПачкаРазделов6.Удалить(0);
		Иначе 
			ПачкаОбъект = Документы.ПачкаРазделов6РасчетаРСВ_1.СоздатьДокумент();
		КонецЕсли;
		ПачкаОбъект.ФайлСформирован = Истина;
		Возврат ПачкаОбъект; 
		
КонецФункции


Процедура ЗаполнитьСвойстваДокумента(ДокументСЗВ, ДанныеОписи, НомерПачки, КатегорияЗастрахованныхЛиц, ТипДоговора, КорректирующиеСведения = Ложь, КорректируемыйПериод = '00010101')
	
	ДокументСЗВ.ОтчетныйПериод = ДанныеОписи.ОтчетныйПериод;
	ДокументСЗВ.Дата = ДанныеОписи.Дата;
	ДокументСЗВ.Организация =  ДанныеОписи.Организация;
	ДокументСЗВ.ТипСведенийСЗВ = ?(КорректирующиеСведения, Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	ПроставитьНомерПачки(ДокументСЗВ);
	ДокументСЗВ.Руководитель =  ДанныеОписи.Руководитель;
	ДокументСЗВ.ДолжностьРуководителя =  ДанныеОписи.ДолжностьРуководителя;
	ДокументСЗВ.Ответственный =  ДанныеОписи.Ответственный;
	ДокументСЗВ.УстановитьНовыйНомер();
	
	Если ТипЗнч(ДокументСЗВ) <> Тип("ДокументОбъект.ПачкаРазделов6РасчетаРСВ_1") Тогда
		ДокументСЗВ.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	КонецЕсли;
	
	Если ТипЗнч(ДокументСЗВ) = Тип("ДокументОбъект.ПачкаДокументовСЗВ_6_4") Тогда
		ДокументСЗВ.ТипДоговора = ТипДоговора;
	КонецЕсли;	
	
КонецПроцедуры

Функция ДоходыЗаПериод2013(Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц = Неопределено, ТипДоговора = Неопределено, МассивФизлиц = Неопределено) Экспорт
	ГоловнаяОрганизация = Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", КатегорияЗастрахованныхЛиц);
	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", СписокНестрахуемыхВидовДохода());
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ОбщийНалоговыйРежим")); 
	Запрос.УстановитьПараметр("УпрощенныйНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "УпрощенныйНалоговыйРежим"));
	Запрос.УстановитьПараметр("ЕНВД", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ЕНВД")); 
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("НачалоПериода", ОтчетныйПериод);
	ОкончаниеПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	Если МассивФизлиц = Неопределено Тогда
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(ОтчетныйПериод, ОкончаниеПериода, Организация, Запрос.МенеджерВременныхТаблиц);
	Иначе
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ФизЛица", МассивФизлиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	&Организация КАК Организация,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&ФизЛица)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		
		СформироватьВТРасширенныеСведенияОДоходахИВзносах(ОтчетныйПериод, ОкончаниеПериода, Организация, Запрос.МенеджерВременныхТаблиц, Истина); // только для ПФР
	КонецЕсли;
	
	СформироватьВТСоответствиеТарифаИВидаЗЛКатегории(Запрос.МенеджерВременныхТаблиц);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора,
	|	СУММА(СведенияОДоходах.Заработок) КАК Заработок,
	|	СУММА(СведенияОДоходах.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	СУММА(СведенияОДоходах.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(СведенияОДоходах.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТДоходыПоТарифамДоговорам
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		МЕСЯЦ(СведенияОДоходах.Период) КАК Месяц,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой) КАК ТипДоговора,
	|		СведенияОДоходах.СуммаПоТрудовомуДоговору КАК Заработок,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору КАК ОблагаетсяВзносами,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо,
	|		СведенияОДоходах.Период,
	|		МЕСЯЦ(СведенияОДоходах.Период),
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой),
	|		СведенияОДоходах.Сумма - СведенияОДоходах.СуммаПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.БазаПФРПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.БазаПФРПоТрудовомуДоговору - (СведенияОДоходах.СуммаПревысившаяПределПФР - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору),
	|		ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода) КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОДоходах.Заработок) <> 0
	|		ИЛИ СУММА(СведенияОДоходах.ОблагаетсяВзносами) <> 0
	|		ИЛИ СУММА(СведенияОДоходах.ОблагаетсяВзносамиДоПредельнойВеличины) <> 0
	|		ИЛИ СУММА(СведенияОДоходах.ОблагаетсяВзносамиСвышеПредельнойВеличины) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Месяц КАК Месяц,
	|	СУММА(Доходы.Заработок) КАК Заработок,
	|	СУММА(Доходы.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	СУММА(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(Доходы.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	0 КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	0 КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора
	|ИЗ
	|	ВТДоходыПоТарифамДоговорам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|ГДЕ
	|	&УсловиеКатегория
	|	И &УсловиеТипДоговора
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.Месяц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора";	
	
	Если КатегорияЗастрахованныхЛиц = Неопределено Тогда
		ТекстУсловиеКатегория = "ИСТИНА";
	Иначе	
		ТекстУсловиеКатегория = "СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц = &КатегорияЗастрахованныхЛиц";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКатегория", ТекстУсловиеКатегория);
	
	Если ТипДоговора = Неопределено Тогда
		ТекстУсловиеТипДоговора = "ИСТИНА";
	Иначе	
		ТекстУсловиеТипДоговора = "Доходы.ТипДоговора = &ТипДоговора";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеТипДоговора", ТекстУсловиеТипДоговора);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

Функция ДоходыЗаПериод2014(МенеджерВТ, Организация, ОтчетныйПериод, КатегорияЗастрахованныхЛиц = Неопределено, ТипДоговора = Неопределено, МассивФизлиц = Неопределено) Экспорт
	ГоловнаяОрганизация = Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КатегорияЗастрахованныхЛиц", КатегорияЗастрахованныхЛиц);
	Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);
	Запрос.УстановитьПараметр("СписокНестрахуемыхДоходов", СписокНестрахуемыхВидовДохода());
	Запрос.УстановитьПараметр("ОбщийНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ОбщийНалоговыйРежим")); 
	Запрос.УстановитьПараметр("УпрощенныйНалоговыйРежим", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "УпрощенныйНалоговыйРежим"));
	Запрос.УстановитьПараметр("ЕНВД", РегламентированнаяОтчетностьПереопределяемый.СсылкаНаОбъектПоИдентификатору("Справочник.ВидыТарифовСтраховыхВзносов", "ЕНВД")); 
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("НачалоПериода", ОтчетныйПериод);
	ОкончаниеПериода = ОкончаниеОтчетногоПериодаПерсУчета(ОтчетныйПериод);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ОтчетныйПериод));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора,
	|	СУММА(СведенияОДоходах.Заработок) КАК Заработок,
	|	СУММА(СведенияОДоходах.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	СУММА(СведенияОДоходах.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(СведенияОДоходах.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|ПОМЕСТИТЬ ВТДоходыПоТарифамДоговорам
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		0 КАК Месяц,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой) КАК ТипДоговора,
	|		СведенияОДоходах.СуммаПоТрудовомуДоговору КАК Заработок,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору КАК ОблагаетсяВзносами,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.Период МЕЖДУ &НачалоГода И &ОкончаниеПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		МЕСЯЦ(СведенияОДоходах.Период) КАК Месяц,
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой) КАК ТипДоговора,
	|		СведенияОДоходах.СуммаПоТрудовомуДоговору КАК Заработок,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору КАК ОблагаетсяВзносами,
	|		СведенияОДоходах.БазаПФРПоТрудовомуДоговору - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОблагаетсяВзносамиСвышеПредельнойВеличины
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОДоходах.ФизическоеЛицо,
	|		СведенияОДоходах.Период,
	|		МЕСЯЦ(СведенияОДоходах.Период),
	|		СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|		ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой),
	|		СведенияОДоходах.Сумма - СведенияОДоходах.СуммаПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.БазаПФРПоТрудовомуДоговору,
	|		СведенияОДоходах.БазаПФР - СведенияОДоходах.БазаПФРПоТрудовомуДоговору - (СведенияОДоходах.СуммаПревысившаяПределПФР - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору),
	|		ВЫБОР
	|			КОГДА СведенияОДоходах.ВидТарифаСтраховыхВзносов В (&ОбщийНалоговыйРежим, &УпрощенныйНалоговыйРежим, &ЕНВД)
	|				ТОГДА СведенияОДоходах.СуммаПревысившаяПределПФР - СведенияОДоходах.СуммаПревысившаяПределПФРПоТрудовомуДоговору
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|	ГДЕ
	|		СведенияОДоходах.Организация = &Организация
	|		И СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		И НЕ СведенияОДоходах.ВидДохода В (&СписокНестрахуемыхДоходов)
	|		И СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода) КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.Месяц,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СведенияОДоходах.ТипДоговора
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОДоходах.Заработок) <> 0
	|		ИЛИ СУММА(СведенияОДоходах.ОблагаетсяВзносами) <> 0
	|		ИЛИ СУММА(СведенияОДоходах.ОблагаетсяВзносамиДоПредельнойВеличины) <> 0
	|		ИЛИ СУММА(СведенияОДоходах.ОблагаетсяВзносамиСвышеПредельнойВеличины) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Месяц КАК Месяц,
	|	СУММА(Доходы.Заработок) КАК Заработок,
	|	СУММА(Доходы.ОблагаетсяВзносами) КАК ОблагаетсяВзносами,
	|	СУММА(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(Доходы.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	0 КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	0 КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора
	|ИЗ
	|	ВТДоходыПоТарифамДоговорам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаИВидаЗЛКатегории КАК СоответствиеТарифаИВидаЗЛКатегории
	|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаИВидаЗЛКатегории.ВидТарифаСтраховыхВзносов
	|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаИВидаЗЛКатегории.ГодС И СоответствиеТарифаИВидаЗЛКатегории.ГодПо)
	|ГДЕ
	|	&УсловиеКатегория
	|	И &УсловиеТипДоговора
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.Месяц,
	|	СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц,
	|	Доходы.ТипДоговора";	
	
	Если КатегорияЗастрахованныхЛиц = Неопределено Тогда
		ТекстУсловиеКатегория = "ИСТИНА";
	Иначе	
		ТекстУсловиеКатегория = "СоответствиеТарифаИВидаЗЛКатегории.КатегорияЗастрахованныхЛиц = &КатегорияЗастрахованныхЛиц";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКатегория", ТекстУсловиеКатегория);
	
	Если ТипДоговора = Неопределено Тогда
		ТекстУсловиеТипДоговора = "ИСТИНА";
	Иначе	
		ТекстУсловиеТипДоговора = "Доходы.ТипДоговора = &ТипДоговора";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеТипДоговора", ТекстУсловиеТипДоговора);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает дату вступления в силу Федерального закона "О внесении изменений в отдельные законодательные акты
// Российской Федерации по вопросам обязательного пенсионного страхования в части права выбора застрахованными лицами
// варианта пенсионного обеспечения"
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   дата
//
Функция ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Экспорт 

	Возврат '20140101'

КонецФункции 

Процедура ВписатьЗаписиОСтажеВНаборДанных2014(УзелПачкаВходящихДокументов, ФорматСтажевыйПериод, ВыборкаПоСотрудникам) Экспорт	
	
	ФорматЛьготныйСтаж = ФорматСтажевыйПериод.ЛьготныйСтаж.Значение;
	ФорматСтажевыйПериод.КоличествоЛьготныхСоставляющих.НеВыводитьВФайл = Истина;
	ФорматСтажевыйПериод.ЛьготныйСтаж.НеВыводитьВФайл = Истина;
	ПараметрыСтажаСПравомНаДосрочнуюПенсию = ПерсонифицированныйУчет.ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию();
			
	Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.НомерОсновнойЗаписи) Тогда
		
		Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерОсновнойЗаписи")	Цикл	
			
			ФорматСтажевыйПериод.ЛьготныйСтаж.НеВыводитьВФайл = Истина;
			ФорматСтажевыйПериод.КоличествоЛьготныхСоставляющих.НеВыводитьВФайл = Истина;

			УзелСтажевыйПериод = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "СтажевыйПериод","");
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСтажевыйПериод, ФорматСтажевыйПериод);
			
			УзелСтажевыйПериод.Строки.Найти("НомерСтроки").Значение = Строка(ВыборкаПоСотрудникам.НомерОсновнойЗаписи);
			УзелСтажевыйПериод.Строки.Найти("ДатаНачалаПериода").Значение = Формат(ВыборкаПоСотрудникам.ДатаНачалаПериода,"ДЛФ=D");
			УзелСтажевыйПериод.Строки.Найти("ДатаКонцаПериода").Значение = Формат(ВыборкаПоСотрудникам.ДатаОкончанияПериода,"ДЛФ=D");
			
			ВыводитьЛьготныйСтаж = Ложь;
			
			НаборЗаписейЛьготныйСтаж = ФорматЛьготныйСтаж;
			НаборЗаписейОсобенностиУчета = НаборЗаписейЛьготныйСтаж.ОсобенностиУчета.Значение;
			
			//ДекретДети
			Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа) Тогда
				НаборЗаписейОсобенностиУчета.ДекретДети.Значение = ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажаКод;
				ВыводитьЛьготныйСтаж = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа)
				И ПараметрыСтажаСПравомНаДосрочнуюПенсию.Найти(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа) = Неопределено Тогда 
				
				НаборЗаписейОсобенностиУчета.ВыслугаЛет.НеВыводитьВФайл = Истина;
				НаборЗаписейОсобенностиУчета.ИсчисляемыйСтаж.НеВыводитьВФайл = Истина;
				НаборЗаписейОсобенностиУчета.ОсобыеУсловияТруда.НеВыводитьВФайл = Истина;
				НаборЗаписейОсобенностиУчета.ТерриториальныеУсловия.НеВыводитьВФайл = Истина;
			Иначе
				
				// Территориальные условия
				НаборЗаписейТерриториальныеУсловия = НаборЗаписейОсобенностиУчета.ТерриториальныеУсловия.Значение;
				НаборЗаписейТерриториальныеУсловия.ОснованиеТУ = СокрЛП(ВыборкаПоСотрудникам.ТерриториальныеУсловияКод);
				НаборЗаписейТерриториальныеУсловия.Коэффициент = ВыборкаПоСотрудникам.ТерриториальныеУсловияСтавка;
				ОписаниеПолей = НаборЗаписейОсобенностиУчета.ТерриториальныеУсловия.Поля;
				СтрокаКУдалению = ОписаниеПолей.Найти("Коэффициент","ИмяПоля");
				СтрокаКУдалению.НеВыводитьВФайл = Истина;
				
				ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейТерриториальныеУсловия.ОснованиеТУ);
				
				// Особые условия труда
				НаборЗаписейОсобыеУсловияТруда = НаборЗаписейОсобенностиУчета.ОсобыеУсловияТруда.Значение;
				НаборЗаписейОсобыеУсловияТруда.ОснованиеОУТ = СокрЛП(ВыборкаПоСотрудникам.ОсобыеУсловияТрудаКод);
				НаборЗаписейОсобыеУсловияТруда.ПозицияСписка = ВРег(СокрЛП(ВыборкаПоСотрудникам.КодПозицииСпискаКод));
				ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейОсобыеУсловияТруда.ОснованиеОУТ);
				
				// Исчисляемый стаж
				НаборЗаписейИсчисляемыйСтаж = НаборЗаписейОсобенностиУчета.ИсчисляемыйСтаж.Значение;
				НаборЗаписейИсчисляемыйСтаж.ОснованиеИС.Значение = ВыборкаПоСотрудникам.ОснованиеИсчисляемогоСтажаКод;
				
				
				НаборЗаписейИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;

				ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейИсчисляемыйСтаж.ОснованиеИС.Значение);
				
				// Выслуга лет
				НаборЗаписейВыслугаЛет = НаборЗаписейОсобенностиУчета.ВыслугаЛет.Значение;
				НаборЗаписейВыслугаЛет.ОснованиеВЛ.Значение = ВРег(СокрЛП(ВыборкаПоСотрудникам.ОснованиеВыслугиЛетКод));
				НаборЗаписейВыслугаЛет.ДоляСтавки.Значение = ВыборкаПоСотрудникам.ТретийПараметрВыслугиЛет;
				
				НаборЗаписейВыслугаЛет.ВыработкаКалендарная.НеВыводитьВФайл = Истина;
				НаборЗаписейВыработкаВЧасах = НаборЗаписейВыслугаЛет.ВыработкаВЧасах.Значение;
				НаборЗаписейВыработкаВЧасах.Часы = ВыборкаПоСотрудникам.ПервыйПараметрВыслугиЛет;
				НаборЗаписейВыработкаВЧасах.Минуты = ВыборкаПоСотрудникам.ВторойПараметрВыслугиЛет;
				
				ВыводитьЛьготныйСтаж = ВыводитьЛьготныйСтаж Или ЗначениеЗаполнено(НаборЗаписейВыслугаЛет.ОснованиеВЛ.Значение);
				
			КонецЕсли;
			
			Если ВыводитьЛьготныйСтаж Тогда
				ЧислоДополнительныхЗаписейОСтаже = 1;
				СтрокаКоличествоЛьготныхСоставляющих = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСтажевыйПериод, "КоличествоЛьготныхСоставляющих", 1);
				НаборЗаписейЛьготныйСтаж.НомерСтроки.Значение = ЧислоДополнительныхЗаписейОСтаже;
				УзелЛьготныйСтаж = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСтажевыйПериод, "ЛьготныйСтаж","");
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелЛьготныйСтаж, НаборЗаписейЛьготныйСтаж);
			Иначе
				ЧислоДополнительныхЗаписейОСтаже = 0;
			КонецЕсли;
			
			Пока ВыборкаПоСотрудникам.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи")	Цикл
				
				// В дополнительной записи с номером 0 находится информация об основной записи
				Если ВыборкаПоСотрудникам.НомерДополнительнойЗаписи = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				
				НаборЗаписейЛьготныйСтаж = ФорматЛьготныйСтаж;		
				НаборЗаписейДопОсобенностиУчета = НаборЗаписейЛьготныйСтаж.ОсобенностиУчета.Значение;
				
				ЧислоДополнительныхЗаписейОСтаже = ЧислоДополнительныхЗаписейОСтаже + 1;
				НаборЗаписейЛьготныйСтаж.НомерСтроки.Значение = ЧислоДополнительныхЗаписейОСтаже;
				
				// Территориальные условия
				НаборЗаписейДопТерриториальныеУсловия = НаборЗаписейДопОсобенностиУчета.ТерриториальныеУсловия.Значение;
				НаборЗаписейДопТерриториальныеУсловия.ОснованиеТУ = СокрЛП(ВыборкаПоСотрудникам.ТерриториальныеУсловияКод);
				НаборЗаписейДопТерриториальныеУсловия.Коэффициент = ВыборкаПоСотрудникам.ТерриториальныеУсловияСтавка;
				
				ОписаниеПолей = НаборЗаписейДопОсобенностиУчета.ТерриториальныеУсловия.Поля;
				СтрокаКУдалению = ОписаниеПолей.Найти("Коэффициент","ИмяПоля");
				СтрокаКУдалению.НеВыводитьВФайл = Истина;
				
				// Особые условия труда
				НаборЗаписейДопОсобыеУсловияТруда = НаборЗаписейДопОсобенностиУчета.ОсобыеУсловияТруда.Значение;
				НаборЗаписейДопОсобыеУсловияТруда.ОснованиеОУТ = ВыборкаПоСотрудникам.ОсобыеУсловияТрудаКод;
				НаборЗаписейДопОсобыеУсловияТруда.ПозицияСписка = ВыборкаПоСотрудникам.КодПозицииСпискаКод;
				
				// Исчисляемый стаж
				НаборЗаписейДопИсчисляемыйСтаж = НаборЗаписейДопОсобенностиУчета.ИсчисляемыйСтаж.Значение;
				НаборЗаписейДопИсчисляемыйСтаж.ОснованиеИС.Значение = ВРег(СокрЛП(ВыборкаПоСотрудникам.ОснованиеИсчисляемогоСтажаКод));
				
				НаборЗаписейДопИсчисляемыйСтаж.ВыработкаВЧасах.НеВыводитьВФайл = Истина;
				
				
				// Выслуга лет
				НаборЗаписейДопВыслугаЛет = НаборЗаписейДопОсобенностиУчета.ВыслугаЛет.Значение;
				НаборЗаписейДопВыслугаЛет.ОснованиеВЛ.Значение = ВРег(СокрЛП(ВыборкаПоСотрудникам.ОснованиеВыслугиЛетКод));
				НаборЗаписейДопВыслугаЛет.ДоляСтавки.Значение = ВыборкаПоСотрудникам.ТретийПараметрВыслугиЛет;
				
				НаборЗаписейДопВыслугаЛет.ВыработкаКалендарная.НеВыводитьВФайл = Истина;
				НаборЗаписейДопВыработкаВЧасах = НаборЗаписейДопВыслугаЛет.ВыработкаВЧасах.Значение;
				НаборЗаписейДопВыработкаВЧасах.Часы = ВыборкаПоСотрудникам.ПервыйПараметрВыслугиЛет;
				НаборЗаписейДопВыработкаВЧасах.Минуты = ВыборкаПоСотрудникам.ВторойПараметрВыслугиЛет;
				
				//ДекретДети
				Если ЗначениеЗаполнено(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажа) Тогда
					НаборЗаписейДопОсобенностиУчета.ДекретДети.Значение = Строка(ВыборкаПоСотрудникам.ТретийПараметрИсчисляемогоСтажаКод);
				КонецЕсли;
				
				УзелЛьготныйСтаж = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСтажевыйПериод, "ЛьготныйСтаж","");
				СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелЛьготныйСтаж, НаборЗаписейЛьготныйСтаж);
				
			КонецЦикла;// Выборка по дополнительным записям о стаже
			
			Если ЧислоДополнительныхЗаписейОСтаже > 1 Тогда
				СтрокаКоличествоЛьготныхСоставляющих.Значение = ЧислоДополнительныхЗаписейОСтаже;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


// Создает структуру наборов записей, имитирующую коллекцию движений регистратора.
// Может применяться для временного использования методов, формирующих движения, 
// когда регистратор пока не записан.
//
// Параметры:
//	МетаданныеРегистратора
//
// Возвращаемое значение - структура, где ключ имя набора, 
//		значение - набор записей с отбором по временной ссылке.
//
Функция НаборыЗаписейРегистратора(МетаданныеРегистратора, ВременнаяСсылка = Неопределено, ПропуститьПроверкуЗапретаИзменения = Истина, ЭтоВременныйНаборЗаписей = Истина) Экспорт
	
	НаборыЗаписей = Новый Структура;
	
	Если ВременнаяСсылка = Неопределено Тогда
		ВременнаяСсылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеРегистратора.ПолноеИмя()).ПолучитьСсылку();
	КонецЕсли;
	
	Для Каждого МетаданныеНабора Из МетаданныеРегистратора.Движения Цикл
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеНабора.ПолноеИмя());
		НаборЗаписей = Менеджер.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВременнаяСсылка);
		НаборЗаписей.Записывать = Истина;
		Если ПропуститьПроверкуЗапретаИзменения Тогда
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
		КонецЕсли;
		Если ЭтоВременныйНаборЗаписей Тогда
			НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоВременныйНаборЗаписей");
			НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
			НаборЗаписей.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		КонецЕсли;
		НаборыЗаписей.Вставить(МетаданныеНабора.Имя, НаборЗаписей);
	КонецЦикла;
	
	Возврат НаборыЗаписей;
	
КонецФункции

// Формирует временную таблицу ВТКадровыеДанныеСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//
// Параметры:
//		ОписательВременныхТаблиц - структура, сформированная 
//				методом ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников.
//		ТолькоРазрешенные - Булево
//		КадровыеДанные - см. описание к функции КадровыеДанныеСотрудников.
//		ПоляОтбораПериодическихДанных -  см. описание к функции КадровыеДанныеСотрудников.
//
Процедура СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, ТолькоРазрешенные, КадровыеДанные, ПоляОтбораПериодическихДанных = Неопределено, ФормироватьСПериодичностьДень = Истина) Экспорт
	
	ОписательВременнойТаблицыОтборов = ОписаниеВременнойТаблицыОтборовСотрудников(
		ОписательВременныхТаблиц.ИмяВременнойТаблицыОтборовСотрудников,
		ОписательВременныхТаблиц.ПоляОтбораСотрудников.Сотрудник,
		ОписательВременныхТаблиц.ПоляОтбораСотрудников.Период);
	
	ИсточникиДанных = Новый Соответствие;
	
	Запрос = ЗапросВТКадровыеДанныеСотрудников(
		ТолькоРазрешенные,
		ОписательВременнойТаблицыОтборов,
		КадровыеДанные,
		ПоляОтбораПериодическихДанных,
		ФормироватьСПериодичностьДень,
		ИсточникиДанных,
		ОписательВременныхТаблиц.ИмяВТКадровыеДанныеСотрудников);
	
	Запрос.МенеджерВременныхТаблиц = ОписательВременныхТаблиц.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает структуру, описывающую временную таблицу отборов физических лиц.
//
// Параметры:
//				ИмяВременнойТаблицыОтборовСотрудников - Строка, имя временной таблицы
//								в менеджере запросов.
//				ИмяПоляСотрудник - Строка, указывает имя поля временной таблицы,
//								содержащего ссылку на сотрудника.
//				ИмяПоляПериод - Строка, указывает имя поля временной таблицу, содержащее
//								период, на который предполагается получить кадровые данные.
//
Функция ОписаниеВременнойТаблицыОтборовСотрудников(ИмяВременнойТаблицыОтборовСотрудников, ИмяПоляСотрудник = "Сотрудник", ИмяПоляПериод = "Период") Экспорт
	
	ОписательВременнойТаблицыОтборов = Новый Структура;
	ОписательВременнойТаблицыОтборов.Вставить("ИмяВременнойТаблицыОтборовСотрудников", ИмяВременнойТаблицыОтборовСотрудников);
	ОписательВременнойТаблицыОтборов.Вставить("ИмяПоляСотрудник", ИмяПоляСотрудник);
	ОписательВременнойТаблицыОтборов.Вставить("ИмяПоляПериод", ИмяПоляПериод);
	ОписательВременнойТаблицыОтборов.Вставить("ИмяВременнойТаблицыОтборовРазличныхСотрудников", "");
	ОписательВременнойТаблицыОтборов.Вставить("ПолучатьСведенияНаПериодНачалаУчета", Ложь);
	ОписательВременнойТаблицыОтборов.Вставить("ИменаСозданныхВременныхТаблиц", Новый Структура);
	
	ДополнитьСтруктуруПараметровИменамиТаблицСКадровойИсториейСотрудников(ОписательВременнойТаблицыОтборов);
	
	Возврат ОписательВременнойТаблицыОтборов;
	
КонецФункции

Функция ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц() Экспорт
	
	ПараметрыПолученияСотрудниковОрганизаций = Новый Структура("Организация,Подразделение");
	
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("КадровыеДанные", "");
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("ОтбиратьПоГоловнойОрганизации", Ложь);
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("НачалоПериода", '00010101');
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("ОкончаниеПериода", '00010101');
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("Отборы");
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("ИсключаемыйРегистратор");
	ПараметрыПолученияСотрудниковОрганизаций.Вставить("СписокФизическихЛиц");
	
	ДополнитьСтруктуруПараметровИменамиТаблицСКадровойИсториейСотрудников(ПараметрыПолученияСотрудниковОрганизаций);
	
	Возврат ПараметрыПолученияСотрудниковОрганизаций;
	
КонецФункции


Процедура ДополнитьСтруктуруПараметровИменамиТаблицСКадровойИсториейСотрудников(СтруктураПараметров) Экспорт
	
	ИменаТаблицСКадровойИсториейСотрудников = Новый Структура;
	ИменаТаблицСКадровойИсториейСотрудников.Вставить("ИмяВТКадроваяИсторияСотрудниковТаблицаРегистра", "");
	ИменаТаблицСКадровойИсториейСотрудников.Вставить("ИмяВТКадроваяИсторияСотрудниковСрезПоследних", "");
	
	СтруктураПараметров.Вставить("ИменаТаблицСКадровойИсториейСотрудников", ИменаТаблицСКадровойИсториейСотрудников);
	
КонецПроцедуры

Функция ЗапросВТКадровыеДанныеСотрудников(ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, КадровыеДанные, ПоляОтбораПериодическихДанных, ФормироватьСПериодичностьДень, ИсточникиДанных, ИмяВТКадровыеДанныеСотрудников) Экспорт
	
	Запрос = Новый Запрос;
	Если ИмяВТКадровыеДанныеСотрудников = "ВТСотрудникиСДаннымиОПриеме" Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОтборов.Период,
		|	ТаблицаОтборов.Сотрудник,
		|	ТаблицаОтборов.Сотрудник.Физлицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема,
		|	ПриемНаРаботу.Ссылка КАК ПриказОПриеме
		|ПОМЕСТИТЬ ВТТаблица
		|ИЗ
		|	ВТСотрудникиДляПечатиТрудовыхДоговоров КАК ТаблицаОтборов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = ТаблицаОтборов.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу.Сотрудники КАК ПриемНаРаботу
		|		ПО (ПриемНаРаботу.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник)
		|			И (ТекущиеКадровыеДанныеСотрудников.ДатаПриема = ПриемНаРаботу.Период)";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОтборов.Период,
		|	ТаблицаОтборов.Сотрудник,
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	ТекущиеКадровыеДанныеСотрудников.Организация,
		|	ТекущиеКадровыеДанныеСотрудников.СтруктурнаяЕдиница КАК Подразделение,
		|	ТекущиеКадровыеДанныеСотрудников.ТекущаяДолжность КАК Должность,
		|	NULL КАК ВидЗанятости,
		|	NULL КАК КлассУсловийТруда,
		|	ТекущиеКадровыеДанныеСотрудников.ТекущаяТарифнаяСтавка КАК ТарифнаяСтавка,
		|	ТекущиеКадровыеДанныеСотрудников.Организация КАК ГоловнаяОрганизация,
		|	0 КАК ПроцентСевернойНадбавки,
		|	ВЫБОР
		|		КОГДА ФИОФизЛиц.Фамилия ЕСТЬ NULL
		|			ТОГДА ТаблицаОтборов.Сотрудник.Наименование
		|		ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
		|	КОНЕЦ КАК ФИОПолные,
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия,"""") КАК Фамилия,
		|	ЕСТЬNULL(ФИОФизЛиц.Имя,"""") КАК Имя,
		|	ЕСТЬNULL(ФИОФизЛиц.Отчество,"""") КАК Отчество,
		|	ДокументыФизическихЛиц.Представление КАК ДокументПредставление,
		|	ФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ЕСТЬNULL(ФизическиеЛица.Гражданство, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) КАК Страна,
		|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема,
		|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУвольнения,
		|	АдресФизЛица.Представление КАК АдресМестаПроживанияПредставление
		|ПОМЕСТИТЬ ВТТаблица
		|ИЗ
		|	ВТСотрудникиДляПечатиТрудовыхДоговоров КАК ТаблицаОтборов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО (ФизическиеЛица.Ссылка = ТаблицаОтборов.Сотрудник.Физлицо)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = ТаблицаОтборов.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛиц
		|		ПО (ФИОФизЛиц.ФизЛицо = ФизическиеЛица.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
		|		ПО (ДокументыФизическихЛиц.Физлицо = ФизическиеЛица.Ссылка)
		|			И (ДокументыФизическихЛиц.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК АдресФизЛица
		|		ПО (АдресФизЛица.Ссылка = ФизическиеЛица.Ссылка)
		|			И (АдресФизЛица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПроживанияФизЛица))";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст ,"ВТТаблица", ИмяВТКадровыеДанныеСотрудников);
	
	Возврат Запрос;
КонецФункции

Функция НовоеПустоеДеревоДляРСВ() Экспорт
	
	ПустоеДерево = Новый ДеревоЗначений;
	ПустоеДерево.Колонки.Добавить("Данные", Новый ОписаниеТипов("Структура"));
	ПустоеДерево.Колонки.Добавить("ДанныеМногострочныхЧастей", Новый ОписаниеТипов("Структура"));
	
	Возврат ПустоеДерево
	
КонецФункции

Функция НормативныйДокументОснованияУвольнения(ОснованиеУвольнения) Экспорт
	
	Возврат НСтр("ru='Трудовой кодекс Российской Федерации'");
	
КонецФункции

// Возвращает фрагмент текста запроса, отделяющего один запрос от другого.
//
Функция РазделительЗапросов() Экспорт
	
	Возврат "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
КонецФункции

// Возвращает уникальное имя на основе переданного имени.
//
// Параметры:
//		ИмяТекстаЗапроса - Строка
//
// Возвращаемое значение:
//		Строка
//
Функция УникальноеИмяТекстаЗапроса(Знач ИмяТекстаЗапроса) Экспорт
	
	Возврат ИмяТекстаЗапроса + "_" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "x");
	
КонецФункции

// Возвращает данные присоединенного к объекту файла.
//
// Параметры:	
//		СсылкаНаОбъект - ссылка на объект - владелец файла.
//		УникальныйИдентификатор - необязательный. Уникальный идентификатор формы, передается в том случае,
//				   если данные файла нужно поместить во временное хранилище формы.
//  ПолучатьСсылкуНаДвоичныеДанные - Булево - начальное значение Истина,
//                 если передать Ложь, то ссылка на двоичные данные не будет получена,
//                 что существенно ускорит выполнение для больших двоичных данных.
//
//	Возвращаемое значение:
//		см. ПрисоединенныеФайлы.ПолучитьДанныеФайла	
//		
Функция ПолучитьДанныеФайла(СсылкаНаОбъект, УникальныйИдентификатор = Неопределено, ПолучатьСсылкуНаДвоичныеДанные = Истина) Экспорт
	ИмяОбъекта = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СсылкаНаОбъект.Метаданные().ПолноеИмя(), ".")[1];
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ИсточникДанных КАК ПрисоединенныеФайлы
	|ГДЕ
	|	ПрисоединенныеФайлы.ВладелецФайла = &Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсточникДанных", "Справочник." + ИмяОбъекта + "ПрисоединенныеФайлы"); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		СсылкаНаФайл = Выборка.Ссылка;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ИдентификаторФормы = УникальныйИдентификатор;
	ДополнительныеПараметры.ПолучатьСсылкуНаДвоичныеДанные = ПолучатьСсылкуНаДвоичныеДанные;
	
	Возврат РаботаСФайлами.ДанныеФайла(СсылкаНаФайл, ДополнительныеПараметры);
	
КонецФункции

Функция ПараметрыИсчисляемогоСтажаПредусматривающиеПравоНаДосрочнуюПенсию() Экспорт

	МассивПараметров = Новый Массив;
	
	Возврат МассивПараметров;
КонецФункции 

// Возвращает список значений. Преобразует строку полей в список значений.
//
// Параметры:
//    СтрокаПолей - Строка - строка полей.
//
// Возвращаемое значение:
//    СписокЗначений - список значений полей.
//
Функция ПреобразоватьСтрокуВСписокПолей(СтрокаПолей)
	
	// XML сериализацию преобразовывать не надо.
	Если УправлениеКонтактнойИнформациейКлиентСервер.ЭтоКонтактнаяИнформацияВXML(СтрокаПолей) Тогда
		Возврат СтрокаПолей;
	КонецЕсли;
	
	Результат = Новый СписокЗначений;
	
	СтруктураЗначенийПолей = СтруктураЗначенийПолей(СтрокаПолей);
	Для каждого ЗначениеПоля Из СтруктураЗначенийПолей Цикл
		Результат.Добавить(ЗначениеПоля.Значение, ЗначениеПоля.Ключ);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

//  Преобразует строку полей вида ключ = значение в структуру.
//
//  Параметры:
//      СтрокаПолей             - Строка - строка полей с данными в виде ключ = значение.
//      ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - для определения состава незаполненных
//                                                                            полей.
//
//  Возвращаемое значение:
//      Структура - значения полей.
//
Функция СтруктураЗначенийПолей(СтрокаПолей, ВидКонтактнойИнформации = Неопределено)
	
	Если ВидКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
		Результат = СтруктураПолейАдреса();
	ИначеЕсли ВидКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
		Результат = СтруктураПолейТелефона();
	Иначе
		Результат = Новый Структура;
	КонецЕсли;
	
	ПоследнийЭлемент = Неопределено;
	
	Для Итерация = 1 По СтрЧислоСтрок(СтрокаПолей) Цикл
		ПолученнаяСтрока = СтрПолучитьСтроку(СтрокаПолей, Итерация);
		Если СтрНачинаетсяС(ПолученнаяСтрока, Символы.Таб) Тогда
			Если Результат.Количество() > 0 Тогда
				Результат.Вставить(ПоследнийЭлемент, Результат[ПоследнийЭлемент] + Символы.ПС + Сред(ПолученнаяСтрока, 2));
			КонецЕсли;
		Иначе
			ПозицияСимвола = СтрНайти(ПолученнаяСтрока, "=");
			Если ПозицияСимвола <> 0 Тогда
				НазваниеПоля = Лев(ПолученнаяСтрока, ПозицияСимвола - 1);
				ЗначениеПоля = Сред(ПолученнаяСтрока, ПозицияСимвола + 1);
				Если НазваниеПоля = "Регион" Или НазваниеПоля = "Район" Или НазваниеПоля = "Город" 
					Или НазваниеПоля = "НаселенныйПункт" Или НазваниеПоля = "Улица" Тогда
					Если СтрНайти(СтрокаПолей, НазваниеПоля + "Сокращение") = 0 Тогда
						Результат.Вставить(НазваниеПоля + "Сокращение", АдресноеСокращение(ЗначениеПоля));
					КонецЕсли;
				КонецЕсли;
				Результат.Вставить(НазваниеПоля, ЗначениеПоля);
				ПоследнийЭлемент = НазваниеПоля;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

// Возвращает пустую структура адреса.
//
// Возвращаемое значение:
//    Структура - адрес, ключи - имена полей, значения поля.
//
Функция СтруктураПолейАдреса()
	
	СтруктураАдреса = Новый Структура;
	СтруктураАдреса.Вставить("Представление", "");
	СтруктураАдреса.Вставить("Страна", "");
	СтруктураАдреса.Вставить("НаименованиеСтраны", "");
	СтруктураАдреса.Вставить("КодСтраны","");
	
	Возврат СтруктураАдреса;
	
КонецФункции

// Возвращает пустую структура телефона.
//
// Возвращаемое значение:
//    Структура - ключи - имена полей, значения поля.
//
Функция СтруктураПолейТелефона()
	
	СтруктураТелефона = Новый Структура;
	СтруктураТелефона.Вставить("Представление", "");
	СтруктураТелефона.Вставить("КодСтраны", "");
	СтруктураТелефона.Вставить("КодГорода", "");
	СтруктураТелефона.Вставить("НомерТелефона", "");
	СтруктураТелефона.Вставить("Добавочный", "");
	СтруктураТелефона.Вставить("Комментарий", "");
	
	Возврат СтруктураТелефона;
	
КонецФункции

Функция АдресноеСокращение(Знач ГеографическоеНазвание)
	
	Сокращение = "";
	МассивСлов = СтрРазделить(ГеографическоеНазвание, " ", Ложь);
	Если МассивСлов.Количество() > 1 Тогда
		Сокращение = МассивСлов[МассивСлов.Количество() - 1];
	КонецЕсли;
	
	Возврат Сокращение;
	
КонецФункции

Процедура ПредставленияОснованийУвольненияОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) Экспорт
	
	Если ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Данные.Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Представления.Использовать,
		|	Представления.Наименование
		|ИЗ
		|	РегистрСведений.ПредставленияОснованийУвольнения КАК Представления
		|ГДЕ
		|	Представления.Объект = &Ссылка";
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Использовать Тогда
				Представление = Выборка.Наименование;
				СтандартнаяОбработка = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

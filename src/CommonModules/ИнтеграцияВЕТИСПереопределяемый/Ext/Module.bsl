#Область СлужебныйПрограммныйИнтерфейс

// Заполняет реквизит 'ЕдиницаИзмерения' справочника 'ЕдиницыИзмеренияВЕТИС' по ОКЕИ.
//
// Параметры:
//  СправочникОбъект - СправочникОбъект.ЕдиницыИзмеренияВЕТИС - Единица измерения ВЕТИС.
Процедура ЗаполнитьЕдиницуИзмеренияПоКлассификаторам(СправочникОбъект) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьЕдиницуИзмеренияПоКлассификаторам(СправочникОбъект);
	
КонецПроцедуры

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа в форме,
// а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Вызывается при проведении документа. Выполняется в транзакции записи.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проводимый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения.
Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Возникает перед выполнением записи документа. Вызывается после начала транзакции записи, но до начала записи документа.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - записываемый документ,
//  Отказ - Булево - признак отказа от записи,
//  РежимЗаписи - РежимЗаписиДокумента - текущий режим записи документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения документа.
//
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Создает временную таблицу "ДокументыИнформационнойБазы", для дальнейшего использования в методе
// ЗаполнениеДокументовВЕТИС.ДокументОснованиеПоДаннымСвязанныхДокументов.
// Содержит колонки:
// * ТипДокумента - ПеречислениеСсылка.ТипыДокументовВЕТИС - тип документа ВЕТИС, служит для определения типа связи со связанными документами;
// * ПоказательУпорядочивания - ПроизвольныйТип - при определении документа основания, служит для определения приоритета найденных документов;
// * Документ - ДокументСсылка - документ, который будет определяться как документ-основание;
// * Дата - Дата - дата входящего документа, по которой будут сопоставляться данные документов ИБ и данные связанных документов;
// * Номер - Строка - номер входящего документа, по которому будут сопоставляться данные документов ИБ и данные связанных документов;
//Параметры:
//  ВременныеТаблицы - МенеджерВременныхТаблиц - менеджер временных таблиц запроса, в который будет добавлена создаваемая временная таблица.
Процедура ЗаполнитьВременнуюТаблицуСвязанныхДокументовИнформационнойБазы(ВременныеТаблицы) Экспорт

	ИнтеграцияВЕТИСУНФ.ЗаполнитьВременнуюТаблицуСвязанныхДокументовИнформационнойБазы(ВременныеТаблицы)
	
КонецПроцедуры

#КонецОбласти

#Область ОрганизацииИКонтрагенты

// Определяет заданы ли настройки подключения к сервису интернет поддержки пользователей.
//
Процедура НастройкиПодключенияКСервисуИППЗаданы(НастройкиЗаданы) Экспорт
	
	ИнтеграцияВЕТИСУНФ.НастройкиПодключенияКСервисуИППЗаданы(НастройкиЗаданы);
	
КонецПроцедуры

// Заполняет параметры поиска хозяйствующего субъекта по элементу справочника конфигурации
//
// Параметры:
//  ДанныеКонтрагента - (См. ИнтеграцияВЕТИС.ДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта)
//  Контрагент        - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на контрагента информационной базы
Процедура ЗаполнитьДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта(ДанныеКонтрагента, Контрагент) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта(ДанныеКонтрагента, Контрагент);
	
КонецПроцедуры

#КонецОбласти

#Область ФизическиеЛица

// Заполняет значения реквизитов из справочника физических лиц используемые для создания пользователя ВетИС
//
// Параметры:
//  ДанныеФизЛица  - (См. ИнтеграцияВЕТИС.ДанныеФизическогоЛица)
//  ФизическоеЛицо - ОпределяемыйТип.ФизическоеЛицо - ссылка на физическое лицо информационной базы
Процедура ЗаполнитьДанныеФизическогоЛица(ДанныеФизЛица, ФизическоеЛицо) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьДанныеФизическогоЛица(ДанныеФизЛица, ФизическоеЛицо);
	
КонецПроцедуры

#КонецОбласти

// Процедура вызывается при изменении статуса обработки документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - ссылка на документ,
//  ПредыдущийСтатус - ПеречислениеСсылка - предыдущий статус обработки,
//  НовыйСтатус - ПеречислениеСсылка - новый статус обработки.
Процедура ПриИзмененииСтатусаДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус, ПараметрыОбновленияСтатуса = Неопределено) Экспорт
	
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо определить значения по умолчанию, которые будут подставляться в
// реквизиты не сопоставленных элементов справочника.
//
// Параметры:
//  СобственнаяОрганизация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - значение по умолчанию для собственной организации,
//  СторонняяОрганизация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - значение по умолчанию для сторонней организации.
//
Процедура ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(СобственнаяОрганизация,
		                                              СобственныйТорговыйОбъект,
		                                              СобственныйПроизводственныйОбъект,
		                                              СторонняяОрганизация,
		                                              СтороннийТорговыйОбъект) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(СобственнаяОрганизация,
																   СобственныйТорговыйОбъект,
																   СобственныйПроизводственныйОбъект,
																   СторонняяОрганизация,
																   СтороннийТорговыйОбъект);
	
КонецПроцедуры

// В процедуре необходимо реализовать запись сопоставления хозяйствующих субъектов и предприятий с прикладными
//   справочниками конфигурации
//
// Параметры:
//  ДокументОснование - ДокументСсылка, ДокументОбъект - прикладной документ конфигурации,
//  ДокументОбъект    - ДокументСсылка, ДокументОбъект - связанный с ним документ библиотеки.
//
Процедура ЗаполнитьСоответствиеШапкиОбъектов(ДокументОснование, ДокументОбъект) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьСоответствиеШапкиОбъектов(ДокументОснование, ДокументОбъект);
	
КонецПроцедуры


// Заполняет структуру данных транспортной накладной для входящей или исходящей транспортной операции по документу-основанию:
//  * Номер - Строка, Неопределено - номер транспортной накладной. Неопределено, если транспортная накладная не найдена.
//  * Дата - Дата, Неопределено - дата транспортной накладной. Неопределено, если транспортная накладная не найдена.
//
// Параметры:
//  ДанныеТТН         - Структура      - Заполняемые поля.
//  ДокументОснование - ДокументСсылка - Ссылка на документ-основание транспортной операции.
Процедура ЗаполнитьДанныеТТНДляТранспортнойОперацииПоОснованию(ДанныеТТН, ДокументОснование) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьДанныеТТНДляТранспортнойОперацииПоОснованию(ДанныеТТН, ДокументОснование);
	
КонецПроцедуры

#Область ТабличнаяЧастьТовары

// Устанавливает параметры выбора номенклатуры.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма, в которой нужно установить параметры выбора.
//  ИмяПоляВвода - Строка - Имя поля ввода номенклатуры.
//
Процедура УстановитьПараметрыВыбораНоменклатуры(Форма, ИмяПоляВвода = "ТоварыНоменклатура") Экспорт
	
	ИнтеграцияВЕТИСУНФ.УстановитьПараметрыВыбораНоменклатуры(Форма, ИмяПоляВвода);
	
КонецПроцедуры

// Заполняет количество номенклатуры по количеству ВЕТИС.
//
// Параметры:
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции	- Строка табличной части объекта.
//  Суффикс - Строка - Окончание наименования колонки, содержащей количество по данным ВЕТИС.
Процедура ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИС(ТекущаяСтрока, Суффикс = "") Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИС(ТекущаяСтрока, Суффикс = "");
	
КонецПроцедуры

// Заполняет количество номенклатуры по количеству ВЕТИС.
//
// Параметры:
//  ТабличнаяЧасть   - ДокументТабличнаяЧасть - табличная часть документа.
//  Суффикс          - Строка                 - суффикс полей "Количество" табличной части
//
Процедура ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИСВТаблице(ТабличнаяЧасть, Суффикс = "") Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИСВТаблице(ТабличнаяЧасть, Суффикс = "");
	
КонецПроцедуры

// Заполняет статус указания серий и проверяет серию в строке табличной части объекта.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Документ, для которого необходимо заполнить статус указания серии.
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - Строка табличной части объекта.
//
Процедура ПроверитьСериюРассчитатьСтатус(ДокументОбъект, ТекущаяСтрока) Экспорт
	
	ИнтеграцияВЕТИСУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ДокументОбъект, ТекущаяСтрока);
	
КонецПроцедуры

// Заполняет идентификатор партии по данным серии в строке табличной части объекта.
//
// Параметры:
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - Строка табличной части объекта.
//  Серия - СправочникСсылка - Ссылка на справочник серий, в которой определен реквизит ИдентификаторПартииВЕТИС
Процедура ЗаполнитьИдентификаторПартии(ТекущаяСтрока, Серия) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьИдентификаторПартии(ТекущаяСтрока, Серия);
	
КонецПроцедуры

// Устанавливает служебный признак необходимости заполнения идентификатора партии в строке табличной части объекта.
//
// Параметры:
//  ТабличнаяЧастьТовары - ДанныеФормыКоллекция - Товарная табличная часть объекта.
Процедура ЗаполнитьИспользованиеИдентификаторовПартий(ТабличнаяЧастьТовары) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьИспользованиеИдентификаторовПартий(ТабличнаяЧастьТовары);
	
КонецПроцедуры

#КонецОбласти

#Область Номенклатура

Процедура ПриОпределенииЗапросаМаркируемойПродукции(Шаблон, ТаблицаИсточник, ИмяПоляНоменклатура, ТаблицаПриемник) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

// Возвращает текст запроса для движений по регистру накопления СерииНоменклатуры.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Процедура ЗаполнитьТекстЗапросаДвижениеСерийТоваров(ТекстЗапроса, МетаданныеДокумента) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ 0 ";
	
КонецПроцедуры

// Заполняет, при необходимости создает серии в документе ВетИС или его выделенных строках
//
// Параметры:
//  Контекст  - (см. ИнтеграцияВЕТИС.СгенерироватьСерии)
//  Результат - (см. ИнтеграцияВЕТИС.СтруктураРезультатЗаполненияСерий)
Процедура ЗаполнитьСгенерироватьСерии(Контекст, Результат) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ЗаполнитьСгенерироватьСерии(Контекст, Результат);
	
КонецПроцедуры

// Заполняет, при необходимости создает серии в документе ВетИС или его выделенных строках
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - объект для заполнения
//  Товары - ДанныеФормыКоллекция, ТаблицаЗначений - ТЧ документа
//  ВыделенныеСтроки - Массив - выделенные строки документа
//  ПараметрыУказанияСерий - см. ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерий
//  ТоварыУточнение - Неопределено, ДанныеФормыКоллекция - Дополнительная ТЧ, содержащая расшифровку строк товаров
//  РезультатЗаполненияСерий - см. ИнтеграцияВетис.СтруктураРезультатЗаполненияСерий.
//
Процедура ПриГенерацииСерий(Объект, Товары, ВыделенныеСтроки, ПараметрыУказанияСерий, ТоварыУточнение, РезультатЗаполненияСерий) Экспорт

	ИнтеграцияВЕТИСУНФ.ПриГенерацииСерий(Объект, Товары, ВыделенныеСтроки, ПараметрыУказанияСерий, ТоварыУточнение, РезультатЗаполненияСерий);

КонецПроцедуры

#КонецОбласти

#Область ДокументОснованиеПроизводственнойОперации

// Возникает при изменении документа-основания производственной операции ВетИС в форме документа.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - редактируемый документ "производственная операция ВетИС"
Процедура ПриИзмененииДокументаОснованияПроизводственнойОперации(Объект) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Процедура заполняет признак использования комиссии при закупках или производства из давальческого сырья.
//
// Параметры:
//  Используется - Булево - Признак использования комиссии при закупках или производства из давальческого сырья.
//
Процедура ИспользуетсяКомиссияПриЗакупкахИлиПереработкаДавальческогоСырья(Используется) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ИспользуетсяКомиссияПриЗакупкахИлиПереработкаДавальческогоСырья(Используется);
	
КонецПроцедуры

// Процедура заполняет признак использования производства на стороне.
//
// Параметры:
//  Используется - Булево - Признак использования производства на стороне.
//
Процедура ИспользуетсяПереработкаНаСтороне(Используется) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ИспользуетсяПереработкаНаСтороне(Используется);
	
КонецПроцедуры

// Процедура заполняет использование идентификатора партии в сериях в разрезе номенклатуры.
//
// Параметры:
//  Требуется    - Булево                       - Признак использования идентификатора партии в сериях номенклатуры.
//  Номенклатура - ОпределяемыйТип.Номенклатура - элемент номенклатуры.
//
Процедура ТребуетсяУказаниеИдентификатораПартииНоменклатуры(Требуется, Номенклатура) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ТребуетсяУказаниеИдентификатораПартииНоменклатуры(Требуется, Номенклатура);
	
КонецПроцедуры

// Процедура определяет использование транспортных средств
//
// Параметры:
//  Указывается - Булево - Признак использования транспортных средств.
//
Процедура УказываетсяТранспортноеСредство(Указывается) Экспорт
	
	ИнтеграцияВЕТИСУНФ.УказываетсяТранспортноеСредство(Указывается);
	
КонецПроцедуры

// Заполняет данные реквизитов пункта маршрута ВетИС получаемые из транспортного средства
//
// Параметры:
//  Реквизиты - Структура - возможные реквизиты пункта маршрута ВетИС с данными транспортного средства
//  ТранспортноеСредство - ОпределяемыйТип.ТранспортныеСредстваВЕТИС - транспортное средство
//
Процедура ПриОпределенииРеквизитовТранспортногоСредства(Реквизиты, ТранспортноеСредство) Экспорт
	
	ИнтеграцияВЕТИСУНФ.ПриОпределенииРеквизитовТранспортногоСредства(Реквизиты, ТранспортноеСредство);
	
КонецПроцедуры

// Используется для тестирования проблемы рассинхронизации данных между информационной базой и ФГИС Меркурий
// при получении ошибки 408 (Таймаут)
//
// Пример кода:
// РезультатОтправкиЗапроса = Новый Структура;
// РезультатОтправкиЗапроса.Вставить("ТекстСообщенияXMLОтправлен",  Ложь);
// РезультатОтправкиЗапроса.Вставить("ТекстСообщенияXMLПолучен",    Ложь);
// РезультатОтправкиЗапроса.Вставить("КодСостояния",                408);
// РезультатОтправкиЗапроса.Вставить("ТекстОшибки",                 НСтр("ru = 'Эмуляция ошибки HTTP 408: Таймаут'"));
// РезультатОтправкиЗапроса.Вставить("ТекстВходящегоСообщенияSOAP", "");
//
// Параметры:
//  ТекстСообщенияXML - Строка - Сообщение XML.
//  Операция - ПеречислениеСсылка - Операция.
//  ПараметрыЗапроса - Структура - Параметры запроса.
//  ПараметрыОбмена - Структура - Параметры обмена.
//  РезультатОтправкиЗапроса - Структура - Возвращаемое значение.
Процедура ПередОтправкойЗапроса(ТекстСообщенияXML, Операция, ПараметрыЗапроса, ПараметрыОбмена, РезультатОтправкиЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Используется для тестирования проблемы рассинхронизации данных между информационной базой и ФГИС Меркурий
// при получении ошибок APLM и т.п.
//
// Пример кода:
// Если Операция = Перечисления.ВидыОперацийВЕТИС.ОтветНаЗапросИзмененныхЗаписейСкладскогоЖурнала
//	Или Операция = Перечисления.ВидыОперацийВЕТИС.ОтветНаЗапросИзмененныхВСД Тогда
//		Если СтрНайти(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияSOAP, "COMPLETED") > 0
//			Или СтрНайти(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияSOAP, "REJECTED") > 0 Тогда
//		Тестирование_ПолучитьAPLM0012(РезультатОтправкиЗапроса, ПараметрыЗапроса, Операция, ПараметрыОбмена);
//		КонецЕсли;
//	КонецЕсли;
// 
// Параметры:
//  ТекстСообщенияXML - Строка - Сообщение XML.
//  Операция - ПеречислениеСсылка - Операция.
//  ПараметрыЗапроса - Структура - Параметры запроса.
//  ПараметрыОбмена - Структура - Параметры обмена.
//  РезультатОтправкиЗапроса - Структура - Возвращаемое значение.
Процедура ПослеОтправкиЗапроса(ТекстСообщенияXML, Операция, ПараметрыЗапроса, ПараметрыОбмена, РезультатОтправкиЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти


#Область ПрограммныйИнтерфейс

// Заполняет табличную часть текущими остатками товаров у комиссионера
//
Функция ТаблицаОстатковТоваровУКомиссионера(Объект, ДополнительныеПараметры = Неопределено, ИмяТабличнойЧасти = "Запасы", КлючСвязи = Неопределено, ОчищатьТабЧасть = Истина) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	Запрос.УстановитьПараметр("ВалютаРасчетов", Объект.Договор.ВалютаРасчетов);
	Запрос.УстановитьПараметр("ВалютаДокумента", Объект.ВалютаДокумента);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Не ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаОбработки = ТекущаяДатаСеанса();
	Иначе
		ДатаОбработки = Объект.Дата;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаОбработки", ДатаОбработки);
	
	КомпенсироватьДвижения = Объект.Проведен;
	
	Если Не КомпенсироватьДвижения Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗапасыПереданныеОстатки.Номенклатура КАК Номенклатура,
		|	ВЫРАЗИТЬ(ЗапасыПереданныеОстатки.Номенклатура.Наименование КАК СТРОКА(50)) КАК НоменклатураНаименование,
		|	ЗапасыПереданныеОстатки.Характеристика КАК Характеристика,
		|	ЗапасыПереданныеОстатки.Партия КАК Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ
		|	КОНЕЦ КАК ЗаказПокупателя,
		|	СУММА(ЗапасыПереданныеОстатки.КоличествоОстаток) КАК Количество,
		|	СУММА(ЗапасыПереданныеОстатки.КоличествоОстаток) КАК Остаток,
		|	ЗапасыПереданныеОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ВЫБОР
		|			КОГДА &ВалютаДокумента = &ВалютаРасчетов
		|				ТОГДА ЗапасыПереданныеОстатки.СуммаРасчетовОстаток
		|			ИНАЧЕ ЕСТЬNULL(ЗапасыПереданныеОстатки.СуммаРасчетовОстаток * КурсВалютыРасчетов.Курс * КурсВалютыДокумента.Кратность / (КурсВалютыДокумента.Курс * КурсВалютыРасчетов.Кратность), 0)
		|		КОНЕЦ) КАК СуммаРасчетов,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки ЕСТЬ NULL
		|			ТОГДА ДАТАВРЕМЯ(2099, 12, 31, 23, 59, 59)
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ЗапасыПереданныеОстатки.Заказ.Дата
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки
		|	КОНЕЦ КАК Дата
		|ИЗ
		|	РегистрНакопления.ЗапасыПереданные.Остатки(
		|			&ДатаОбработки,
		|			Организация = &Организация
		|				И Контрагент = &Контрагент
		|				И Договор = &Договор
		|				И ТипПриемаПередачи = ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаКомиссионеру)) КАК ЗапасыПереданныеОстатки,
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОбработки, Валюта = &ВалютаРасчетов) КАК КурсВалютыРасчетов,
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОбработки, Валюта = &ВалютаДокумента) КАК КурсВалютыДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапасыПереданныеОстатки.Номенклатура,
		|	ЗапасыПереданныеОстатки.Характеристика,
		|	ЗапасыПереданныеОстатки.Партия,
		|	ВЫРАЗИТЬ(ЗапасыПереданныеОстатки.Номенклатура.Наименование КАК СТРОКА(50)),
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки ЕСТЬ NULL
		|			ТОГДА ДАТАВРЕМЯ(2099, 12, 31, 23, 59, 59)
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ЗапасыПереданныеОстатки.Заказ.Дата
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки
		|	КОНЕЦ,
		|	ЗапасыПереданныеОстатки.Номенклатура.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	НоменклатураНаименование";
		
	Иначе
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
			Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
			ВидДвижения = ВидДвиженияНакопления.Расход
		Иначе
			ВидДвижения = ВидДвиженияНакопления.Приход;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ВидДвижения", ВидДвижения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапасыПереданныеОстатки.Номенклатура КАК Номенклатура,
		|	ЗапасыПереданныеОстатки.Характеристика КАК Характеристика,
		|	ЗапасыПереданныеОстатки.Партия КАК Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ
		|	КОНЕЦ КАК ЗаказПокупателя,
		|	СУММА(ЗапасыПереданныеОстатки.КоличествоОстаток) КАК Количество,
		|	СУММА(ЗапасыПереданныеОстатки.КоличествоОстаток) КАК Остаток,
		|	ЗапасыПереданныеОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ВЫБОР
		|			КОГДА &ВалютаДокумента = &ВалютаРасчетов
		|				ТОГДА ЗапасыПереданныеОстатки.СуммаРасчетовОстаток
		|			ИНАЧЕ ЕСТЬNULL(ЗапасыПереданныеОстатки.СуммаРасчетовОстаток * КурсВалютыРасчетов.Курс * КурсВалютыДокумента.Кратность / (КурсВалютыДокумента.Курс * КурсВалютыРасчетов.Кратность), 0)
		|		КОНЕЦ) КАК СуммаРасчетов,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки ЕСТЬ NULL
		|			ТОГДА ДАТАВРЕМЯ(2099, 12, 31, 23, 59, 59)
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ЗапасыПереданныеОстатки.Заказ.Дата
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки
		|	КОНЕЦ КАК Дата
		|ПОМЕСТИТЬ Итог
		|ИЗ
		|	РегистрНакопления.ЗапасыПереданные.Остатки(
		|			,
		|			Организация = &Организация
		|				И Контрагент = &Контрагент
		|				И Договор = &Договор
		|				И ТипПриемаПередачи = ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаКомиссионеру)) КАК ЗапасыПереданныеОстатки,
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОбработки, Валюта = &ВалютаРасчетов) КАК КурсВалютыРасчетов,
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОбработки, Валюта = &ВалютаДокумента) КАК КурсВалютыДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапасыПереданныеОстатки.Номенклатура,
		|	ЗапасыПереданныеОстатки.Характеристика,
		|	ЗапасыПереданныеОстатки.Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки ЕСТЬ NULL
		|			ТОГДА ДАТАВРЕМЯ(2099, 12, 31, 23, 59, 59)
		|		КОГДА ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ЗапасыПереданныеОстатки.Заказ.Дата
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ.ДатаОтгрузки
		|	КОНЕЦ,
		|	ЗапасыПереданныеОстатки.Номенклатура.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданныеОстатки.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|		ИНАЧЕ ЗапасыПереданныеОстатки.Заказ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапасыПереданные.Номенклатура,
		|	ЗапасыПереданные.Характеристика,
		|	ЗапасыПереданные.Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданные.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|		ИНАЧЕ ЗапасыПереданные.Заказ
		|	КОНЕЦ,
		|	СУММА(ВЫБОР
		|			КОГДА ЗапасыПереданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					И ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ПриходнаяНакладная)
		|				ТОГДА ЗапасыПереданные.Количество * -1
		|			ИНАЧЕ ЗапасыПереданные.Количество
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ЗапасыПереданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					И ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ПриходнаяНакладная)
		|				ТОГДА ЗапасыПереданные.Количество * -1
		|			ИНАЧЕ ЗапасыПереданные.Количество
		|		КОНЕЦ),
		|	ЗапасыПереданные.Номенклатура.ЕдиницаИзмерения,
		|	СУММА(ВЫБОР
		|			КОГДА ЗапасыПереданные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					И НЕ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ОтчетКомиссионера)
		|				ТОГДА ВЫБОР
		|						КОГДА &ВалютаДокумента = &ВалютаРасчетов
		|							ТОГДА ЗапасыПереданные.СуммаРасчетов * -1
		|						ИНАЧЕ ЕСТЬNULL(ЗапасыПереданные.СуммаРасчетов * -1 * КурсВалютыРасчетов.Курс * КурсВалютыДокумента.Кратность / (КурсВалютыДокумента.Курс * КурсВалютыРасчетов.Кратность), 0)
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА &ВалютаДокумента = &ВалютаРасчетов
		|						ТОГДА ЗапасыПереданные.СуммаРасчетов
		|					ИНАЧЕ ЕСТЬNULL(ЗапасыПереданные.СуммаРасчетов * КурсВалютыРасчетов.Курс * КурсВалютыДокумента.Кратность / (КурсВалютыДокумента.Курс * КурсВалютыРасчетов.Кратность), 0)
		|				КОНЕЦ
		|		КОНЕЦ),
		|	ВЫБОР
		|		КОГДА ЗапасыПереданные.Заказ.ДатаОтгрузки ЕСТЬ NULL
		|			ТОГДА ДАТАВРЕМЯ(2099, 12, 31, 23, 59, 59)
		|		КОГДА ЗапасыПереданные.Заказ.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ЗапасыПереданные.Заказ.Дата
		|		ИНАЧЕ ЗапасыПереданные.Заказ.ДатаОтгрузки
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ЗапасыПереданные КАК ЗапасыПереданные,
		|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта = &ВалютаДокумента) КАК КурсВалютыДокумента,
		|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта = &ВалютаРасчетов) КАК КурсВалютыРасчетов
		|ГДЕ
		|	ЗапасыПереданные.Регистратор = &Ссылка
		|	И ЗапасыПереданные.ТипПриемаПередачи = ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаКомиссионеру)
		|	И ЗапасыПереданные.ВидДвижения = &ВидДвижения
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапасыПереданные.Характеристика,
		|	ЗапасыПереданные.Номенклатура,
		|	ЗапасыПереданные.Партия,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданные.Заказ.ДатаОтгрузки ЕСТЬ NULL
		|			ТОГДА ДАТАВРЕМЯ(2099, 12, 31, 23, 59, 59)
		|		КОГДА ЗапасыПереданные.Заказ.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ЗапасыПереданные.Заказ.Дата
		|		ИНАЧЕ ЗапасыПереданные.Заказ.ДатаОтгрузки
		|	КОНЕЦ,
		|	ЗапасыПереданные.Номенклатура.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ЗапасыПереданные.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|		ИНАЧЕ ЗапасыПереданные.Заказ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Итог.Номенклатура КАК Номенклатура,
		|	Итог.Характеристика КАК Характеристика,
		|	Итог.Партия КАК Партия,
		|	Итог.ЗаказПокупателя КАК ЗаказПокупателя,
		|	СУММА(Итог.Количество) КАК Количество,
		|	СУММА(Итог.Остаток) КАК Остаток,
		|	Итог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(Итог.СуммаРасчетов) КАК СуммаРасчетов,
		|	Итог.Дата КАК Дата
		|ИЗ
		|	Итог КАК Итог
		|
		|СГРУППИРОВАТЬ ПО
		|	Итог.Номенклатура,
		|	Итог.Партия,
		|	Итог.ЗаказПокупателя,
		|	Итог.ЕдиницаИзмерения,
		|	Итог.Характеристика,
		|	Итог.Дата"
		
	КонецЕсли;
	
	ЕстьРеквизитЗаказ = ОбщегоНазначения.ЕстьРеквизитОбъекта("Заказ", Объект.Ссылка.Метаданные());
	
	НеУчитыватьЗаказыПриПередачеНаКомиссию = Ложь;
	
	Если (ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПриходнаяНакладная")
		И Объект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтКомиссионера)
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПереоценкаТоваровНаКомиссии") 
		Или ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
		НеУчитыватьЗаказыПриПередачеНаКомиссию = Объект.Договор.НеУчитыватьЗаказыПриПередачеНаКомиссию;
	КонецЕсли;
	
	Если ЕстьРеквизитЗаказ И ЗначениеЗаполнено(Объект.Заказ) И Не НеУчитыватьЗаказыПриПередачеНаКомиссию Тогда
		Запрос.УстановитьПараметр("Заказ", Объект.Заказ);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Договор = &Договор", "И Договор = &Договор И Заказ = &Заказ");
	КонецЕсли;
	
	ВыгрузитьВХранилище = Ложь;
	
	Если НЕ ДополнительныеПараметры = Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		
		Если ДополнительныеПараметры.Свойство("Заказ") И Не НеУчитыватьЗаказыПриПередачеНаКомиссию Тогда
			Запрос.УстановитьПараметр("Заказ", ДополнительныеПараметры.Заказ);
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Договор = &Договор", "И Договор = &Договор И Заказ = &Заказ");
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("Номенклатура") Тогда
			
			Запрос.УстановитьПараметр("Номенклатура", ДополнительныеПараметры.Номенклатура);
			
			Если ДополнительныеПараметры.Свойство("Характеристика") Тогда
				Запрос.УстановитьПараметр("Характеристика", ДополнительныеПараметры.Характеристика);
			КонецЕсли;
			Если ДополнительныеПараметры.Свойство("Партия") Тогда
				Запрос.УстановитьПараметр("Партия", ДополнительныеПараметры.Партия);
			КонецЕсли;
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"И ТипПриемаПередачи = ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаКомиссионеру),","И ТипПриемаПередачи = ЗНАЧЕНИЕ(Перечисление.ТипыПриемаПередачиТоваров.ПередачаКомиссионеру)
			|				И Характеристика = &Характеристика
			|				И Партия = &Партия) КАК ЗапасыПереданныеОстатки,");
		Иначе
			Если ОчищатьТабЧасть Тогда
				ОчиститьТабличнуюЧасть(Объект, ИмяТабличнойЧасти, КлючСвязи);
			КонецЕсли;
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("ВыгрузитьВХранилище") Тогда
			ВыгрузитьВХранилище = ДополнительныеПараметры.ВыгрузитьВХранилище;
		КонецЕсли;
		
	Иначе
		Если ОчищатьТабЧасть Тогда
			ОчиститьТабличнуюЧасть(Объект, ИмяТабличнойЧасти, КлючСвязи);
		КонецЕсли;
	КонецЕсли;
	
	Если ВыгрузитьВХранилище Тогда
		Возврат ПоместитьВоВременноеХранилище(Запрос.Выполнить().Выгрузить(), Новый УникальныйИдентификатор);
	Иначе
		Возврат Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
КонецФункции

// Заполняет количество номенклатуры в табличной части остатками у комиссионера
//
Процедура РаспределитьНоменклатуруПоЗаказам(Форма, ДополнительныеПараметры = Неопределено, ИмяТабличнойЧасти = "Запасы", КлючСвязи = Неопределено) Экспорт
	
	Объект = Форма.Объект;
	
	ЭтоОтчетКомиссионера = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера"), Истина, Ложь);
	ЭтоПереоценка = ?(ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПереоценкаТоваровНаКомиссии"), Истина, Ложь);
	
	ТабличнаяЧастьОбъекта = Объект[ИмяТабличнойЧасти];
	
	Если ЭтоОтчетКомиссионера Тогда
		ПараметрыОтбора = Новый Структура("КлючСвязи", КлючСвязи);
		ТабличнаяЧасть = Объект[ИмяТабличнойЧасти].Выгрузить(ПараметрыОтбора);
	Иначе
		ТабличнаяЧасть = Объект[ИмяТабличнойЧасти].Выгрузить();
	КонецЕсли;
	
	ТаблицаОстатков = ТаблицаОстатковТоваровУКомиссионера(Объект, ДополнительныеПараметры, ИмяТабличнойЧасти, КлючСвязи);
	
	ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика, Партия");
	
	СтрокиКУдалению = Новый Массив;
	
	ИмяКолонкиЗаказ = "Заказ";
	Если ЭтоОтчетКомиссионера Тогда
		ИмяКолонкиЗаказ = "ЗаказПокупателя";
	КонецЕсли;
	
	ОчиститьКолонкуЗаказ(ТабличнаяЧасть, ИмяКолонкиЗаказ);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда Продолжить КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда Продолжить КонецЕсли;
		
		ПараметрыОтбора.Номенклатура = СтрокаТабличнойЧасти.Номенклатура;
		ПараметрыОтбора.Характеристика = СтрокаТабличнойЧасти.Характеристика;
		ПараметрыОтбора.Партия = СтрокаТабличнойЧасти.Партия;
		
		НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(ПараметрыОтбора);
		
		Если Не НайденныеСтроки.Количество() Тогда
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			Продолжить
		КонецЕсли;
		
		КоличествоДляРаспределения = СтрокаТабличнойЧасти.Количество;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если НайденнаяСтрока.Количество = 0 Тогда Продолжить КонецЕсли;
			
			НоваяСтрока = ТабличнаяЧастьОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			
			Если КоличествоДляРаспределения >= НайденнаяСтрока.Количество Тогда
				
				НоваяСтрока.Количество = НайденнаяСтрока.Количество;
				НоваяСтрока[ИмяКолонкиЗаказ] = НайденнаяСтрока.ЗаказПокупателя;
				
				Если ЭтоОтчетКомиссионера Тогда
					НоваяСтрока.ЦенаПередачи = Окр(НайденнаяСтрока.СуммаРасчетов/НайденнаяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НоваяСтрока.СуммаПередачи = Окр(НоваяСтрока.ЦенаПередачи*НоваяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов - НоваяСтрока.СуммаПередачи;
				ИначеЕсли ЭтоПереоценка Тогда
					НоваяСтрока.ЦенаСтарая = Окр(НайденнаяСтрока.СуммаРасчетов/НайденнаяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НоваяСтрока.СуммаСтарая = Окр(НоваяСтрока.ЦенаСтарая*НоваяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов - НоваяСтрока.СуммаСтарая;
				Иначе
					НоваяСтрока.Цена = Окр(НайденнаяСтрока.СуммаРасчетов/НайденнаяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НоваяСтрока.Сумма = Окр(НоваяСтрока.Цена*НоваяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов - НоваяСтрока.Сумма;
				КонецЕсли;
				
				КоличествоДляРаспределения = КоличествоДляРаспределения - НоваяСтрока.Количество;
				НайденнаяСтрока.Количество = 0;
				НайденнаяСтрока.СуммаРасчетов = 0;
				
			Иначе
				НоваяСтрока[ИмяКолонкиЗаказ] = НайденнаяСтрока.ЗаказПокупателя;
				НоваяСтрока.Количество = КоличествоДляРаспределения;
				
				Если ЭтоОтчетКомиссионера Тогда
					НоваяСтрока.ЦенаПередачи = Окр(НайденнаяСтрока.СуммаРасчетов/НайденнаяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НоваяСтрока.СуммаПередачи = Окр(НоваяСтрока.ЦенаПередачи*НоваяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов - НоваяСтрока.СуммаПередачи;
				ИначеЕсли ЭтоПереоценка Тогда
					НоваяСтрока.ЦенаСтарая = Окр(НайденнаяСтрока.СуммаРасчетов/НайденнаяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НоваяСтрока.СуммаСтарая = Окр(НоваяСтрока.ЦенаСтарая*НоваяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов - НоваяСтрока.СуммаСтарая;
				Иначе
					НоваяСтрока.Цена = Окр(НайденнаяСтрока.СуммаРасчетов/НайденнаяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НоваяСтрока.Сумма = Окр(НоваяСтрока.Цена*НоваяСтрока.Количество, 2, РежимОкругления.Окр15как20);
					НайденнаяСтрока.СуммаРасчетов = НайденнаяСтрока.СуммаРасчетов - НоваяСтрока.Сумма;
				КонецЕсли;
				
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - НоваяСтрока.Количество;
				КоличествоДляРаспределения = 0;
			КонецЕсли;
			
			Если ЭтоОтчетКомиссионера Тогда
				РассчитатьСуммуВСтрокеТабличнойЧастиЗапасыОтчетКомиссионера(Объект, Неопределено, НоваяСтрока, Истина);
				РассчитатьКомиссионноеВознаграждениеЗапасыОтчетКомиссионера(Объект, НоваяСтрока);
				НоваяСтрока.КлючСвязи = КлючСвязи;
			КонецЕсли;
			
			Если НайденнаяСтрока.Количество = 0 Тогда
				СтрокиКУдалению.Добавить(НайденнаяСтрока);
			КонецЕсли;
			
			Если КоличествоДляРаспределения = 0 Тогда Прервать КонецЕсли;
				
		КонецЦикла;
		
		ЭтоСтрокаРодитель = Ложь;
			
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			ТаблицаОстатков.Удалить(СтрокаКУдалению);
		КонецЦикла;
		СтрокиКУдалению.Очистить();
			
		КонецЦикла;
		
КонецПроцедуры

// Рассчитывает суммы в строке Табличной части "Запасы" документа "Отчет комиссионера"
//
Процедура РассчитатьСуммуВСтрокеТабличнойЧастиЗапасыОтчетКомиссионера(Объект, ИспользоватьСерииНоменклатурыОстатки, СтрокаТабличнойЧасти, РассчитыватьСуммуПередачи = Ложь) Экспорт
	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
	Если РассчитыватьСуммуПередачи Тогда
		СтрокаТабличнойЧасти.СуммаПередачи = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.ЦенаПередачи;
	КонецЕсли;
	
	РассчитатьСуммуНДС(Объект, СтрокаТабличнойЧасти);
	
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	СтрокаТабличнойЧасти.СуммаНДСПередачи = ?(Объект.СуммаВключаетНДС,
	СтрокаТабличнойЧасти.СуммаПередачи - (СтрокаТабличнойЧасти.СуммаПередачи) / ((СтавкаНДС + 100) / 100),
	СтрокаТабличнойЧасти.СуммаПередачи * СтавкаНДС / 100);
	
	Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.СуммаНДС) Тогда
		СтрокаТабличнойЧасти.СуммаНДС = ?(Объект.СуммаВключаетНДС,
		СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
		СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	КонецЕсли;
		
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(Объект.СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
	
	Если ИспользоватьСерииНоменклатурыОстатки = Неопределено Тогда
		ИспользоватьСерииНоменклатурыОстатки = СерииНоменклатурыУНФ.ИспользоватьСерииНоменклатурыОстатки();
	КонецЕсли;
	
	// Серии номенклатуры
	Если ИспользоватьСерииНоменклатурыОстатки<>Неопределено Тогда
		СерииНоменклатурыУНФКлиентСервер.ОбновитьСерииНоменклатурыКоличество(Объект, СтрокаТабличнойЧасти,,"КлючСвязиСерииНоменклатуры");
	КонецЕсли;

КонецПроцедуры

// Рассчитывает сумму комиссионного вознаграждения в строке Табличной части "Запасы" документа "Отчет комиссионера"
//
Процедура РассчитатьКомиссионноеВознаграждениеЗапасыОтчетКомиссионера(Объект, СтрокаТабличнойЧасти) Экспорт
	
	Если Объект.СпособРасчетаКомиссионногоВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается Тогда
	
	ИначеЕсли Объект.СпособРасчетаКомиссионногоВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи Тогда
		СтрокаТабличнойЧасти.СуммаВознаграждения = Объект.ПроцентКомиссионногоВознаграждения * СтрокаТабличнойЧасти.Сумма / 100;
	ИначеЕсли Объект.СпособРасчетаКомиссионногоВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммПродажиИПоступления Тогда
		СтрокаТабличнойЧасти.СуммаВознаграждения = Объект.ПроцентКомиссионногоВознаграждения * (СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаПередачи) / 100;
	Иначе
		СтрокаТабличнойЧасти.СуммаВознаграждения = 0;
	КонецЕсли;
	
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(Объект.СтавкаНДСВознаграждения);
	
	СтрокаТабличнойЧасти.СуммаНДСВознаграждения = ?(Объект.СуммаВключаетНДС,
													СтрокаТабличнойЧасти.СуммаВознаграждения - (СтрокаТабличнойЧасти.СуммаВознаграждения) / ((СтавкаНДС + 100) / 100),
													СтрокаТабличнойЧасти.СуммаВознаграждения * СтавкаНДС / 100);
													
КонецПроцедуры

// Проверяет соответствие договора параметрам документа
//
Функция ДоговорСоответствуетДокументу(Объект) Экспорт
	
	ТекстСообщения = "";
	
	Если Не Объект.Договор.Организация = Объект.Организация Тогда
		ТекстСообщения = НСтр("ru = 'Организация договора не соответствует организации документа '");
	КонецЕсли;
	
	Если Не Объект.Договор.ВидДоговора = Перечисления.ВидыДоговоров.СКомиссионером Тогда
		
		ТекстСообщения = ?(Не ЗначениеЗаполнено(ТекстСообщения), ТекстСообщения, ТекстСообщения +"
		|");
		
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Реквизиты договора не соответствуют условиям документа:
 		| - Не совпадает вид договора. Для выбора доступны договоры следующих видов:""С комиссионером""'");
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьТабличнуюЧасть(Объект, ИмяТабличнойЧасти, КлючСвязи = Неопределено)
	
	Если КлючСвязи = Неопределено Тогда
		Объект[ИмяТабличнойЧасти].Очистить();
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("КлючСвязи", КлючСвязи);
	
	НайденныеСтроки = Объект[ИмяТабличнойЧасти].НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Объект[ИмяТабличнойЧасти].Удалить(НайденнаяСтрока.НомерСтроки -1);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьКолонкуЗаказ(ТабличнаяЧасть, ИмяКолонкиЗаказ)
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СтрокаТабличнойЧасти[ИмяКолонкиЗаказ] = Неопределено
	КонецЦикла;
КонецПроцедуры

Процедура РассчитатьСуммуНДС(Объект, СтрокаТабличнойЧасти)
	
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	
	Если Объект.СуммаВключаетНДС Тогда
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100);
	Иначе
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



#Область ПрограммныйИнтерфейс

// Расчет дат начала и окончания периода планирования с заданной периодичностью
//
// Параметры:
//  Периодичность  	- ПеречислениеСсылка.Периодичность - Периодичность с которой нужно рассчитать даты
//  НачалоПериода  	- Дата - Дата начала периода
//  ОкончаниеПериода  	- Дата - Дата окончания периода
//
Процедура УстановитьНачалоОкончаниеПериодаПланирования(Знач Периодичность, НачалоПериода, ОкончаниеПериода) Экспорт 
	
	Если Не ЗначениеЗаполнено(Периодичность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
		НачалоПериода = ТекущаяДата();
	КонецЕсли;
	
	НачалоПериода = РассчитатьДатуНачалаБлижайшегоПериода(НачалоПериода, Периодичность);
	
	Если ЗначениеЗаполнено(ОкончаниеПериода)
		И Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День")
		И ОкончаниеПериода > НачалоПериода Тогда
		// Перерасчет даты окончания не нужен
	ИначеЕсли ЗначениеЗаполнено(ОкончаниеПериода) И ОкончаниеПериода > НачалоПериода Тогда
		
		НачалоПоследнегоПериода = РассчитатьДатуНачалаБлижайшегоПериода(ОкончаниеПериода, Периодичность);
		ОкончаниеПериода = РассчитатьДатуОкончанияПериода(НачалоПоследнегоПериода, Периодичность, 0);
		
	Иначе
		
		ОкончаниеПериода = РассчитатьДатуОкончанияПериода(НачалоПериода, Периодичность, 1);
		
	КонецЕсли;
	
КонецПроцедуры

// Рассчитывает дату начала периода по указанной дате и периодичности
//
// Параметры:
//   Дата          	   - дата, к которой будет рассчитана дата начала периода
//   Периодичность       - значение перечисления "Периодичность"
//
// Возвращаемое значение:
//   Дата - Дата начала периода
//
Функция РассчитатьДатуНачалаПериода(Знач Дата, Знач Периодичность) Экспорт
	
	ОдинДень = 86400;
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		
		ДатаНачала = НачалоДня(Дата);
		
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		
		ДатаНачала = НачалоНедели(Дата);
				
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда
		
		ДеньМесяца   = День(Дата);
		НачалоМесяца = НачалоМесяца(Дата);
		
		Если ДеньМесяца = 1 Или ДеньМесяца = 11 Или ДеньМесяца = 21 Тогда
			ДатаНачала = Дата;
		ИначеЕсли ДеньМесяца <= 10 Тогда // Первая декада
			ДатаНачала = НачалоМесяца
		ИначеЕсли ДеньМесяца <= 20 Тогда // Вторая декада
			ДатаНачала = НачалоМесяца + ОдинДень * 10;
		Иначе // Третья декада
			ДатаНачала = НачалоМесяца + ОдинДень * 20;
		КонецЕсли;
		
	ИначеЕсли (Периодичность= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда
		
		ДатаНачала = НачалоМесяца(Дата);
		
	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда
		
		ДатаНачала = НачалоКвартала(Дата);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда
		
		НачалоГода      = НачалоГода(Дата);
		НачалоПолугодия = ДобавитьМесяц(НачалоГода,6);
		
		Если Дата >= НачалоПолугодия Тогда
			ДатаНачала = НачалоПолугодия;
		Иначе
			ДатаНачала = НачалоГода;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда
		
		ДатаНачала = НачалоГода(Дата);
		
	КонецЕсли;
	
	Возврат ДатаНачала;
	
КонецФункции

// Рассчитывает дату окончания периода.
//
// Параметры:
//   ДатаНачала - Дата - дата начала, от которой будет рассчитана дата окончания периода.
//   Периодичность - ПеречислениеСсылка.Периодичность - значение перечисления "Периодичность".
//   КоличествоПериодов - Число - количество повторов периода.
//
// Возвращаемое значение:
//   Дата - дата окончания периода.
Функция РассчитатьДатуОкончанияПериода(ДатаНачала, Периодичность, КоличествоПериодов) Экспорт

	ОдинДень = 86400;

	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда

		ДатаОкончания = ДатаНачала + ОдинДень * КоличествоПериодов;

	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда

		ДатаОкончания = ДатаНачала + ОдинДень * 7 * КоличествоПериодов;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда

		ДеньМесяца = День(ДатаНачала);
		НачМесяца = НачалоМесяца(ДатаНачала);
		Если ДеньМесяца <= 10 Тогда
			НомерДекады = 1;
		ИначеЕсли ДеньМесяца <= 20 Тогда
			НомерДекады = 2;
		Иначе
			НомерДекады = 3;
		КонецЕсли;

		НомерДекады = НомерДекады + КоличествоПериодов;

		Если НомерДекады > 0 Тогда
			Месяцев = Цел((НомерДекады - 1) / 3);
		Иначе
			Месяцев = -1 - Цел((-НомерДекады) / 3);
		КонецЕсли;

		НомерДекады = НомерДекады - 3 * Месяцев;
		Дт = ДобавитьМесяц(НачМесяца, Месяцев) + (НомерДекады - 1) * 10 * ОдинДень;

		Если КоличествоПериодов > 0 Тогда
			ДатаОкончания = Дт;

		Иначе
			ДеньМесяца = День(Дт);

			Если ДеньМесяца <= 10 Тогда
				ДатаОкончания = КонецДня(НачалоМесяца(Дт) + ОдинДень * 9);
			ИначеЕсли ДеньМесяца <= 20 Тогда
				ДатаОкончания = КонецДня(НачалоМесяца(Дт) + ОдинДень * 19);
			Иначе
				ДатаОкончания = КонецМесяца(Дт);
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда

		ДатаОкончания = ДобавитьМесяц(ДатаНачала, КоличествоПериодов);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда

		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 3 * КоличествоПериодов);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда

		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 6 * КоличествоПериодов);

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда

		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 12 * КоличествоПериодов);

	КонецЕсли;

	Возврат КонецДня(ДатаОкончания - ОдинДень);

КонецФункции

// Формирует заголовок для интервала дат с заданной периодичностью (День, неделя, декада, месяц и т.д.)
//
// Параметры:
//  Периодичность 	- ПеречислениеСсылка.Периодичность - Периодичность для которой нужно сформировать заголовок
//  ДатаНачала 		- Дата - Дата начала периода
//  ДатаОкончания 	- Дата - Дата окончания периода
//  ОтображатьНомерПериода  - Булево - Флаг отображения заголовка по номеру периода в пределах года
//
// Возвращаемое значение:
//  Строка - Текстовое представление заголовка периода
//
Функция СформироватьЗаголовокПериода(Знач ДатаНачала, Знач ДатаОкончания, Знач Периодичность, Знач ОтображатьНомерПериода = Ложь) Экспорт
	
	Заголовок = "";
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = Формат(ДеньГода(ДатаНачала), "ЧДЦ=0; ЧГ=0") + " " + НСтр("ru='день'");
		Иначе
			Заголовок = Формат(ДатаНачала, "ДЛФ=D");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = НСтр("ru='%НомерНедели% неделя'");
			Если Год(ДатаНачала) <> Год(ДатаОкончания) Тогда
				НомерНедели = Формат(НеделяГода(ДатаНачала), "ЧДЦ=0; ЧГ=0") + "/" +  Формат(НеделяГода(ДатаОкончания), "ЧДЦ=0; ЧГ=0");
			Иначе
				НомерНедели = Формат(НеделяГода(ДатаНачала), "ЧДЦ=0; ЧГ=0");
			КонецЕсли; 
			Заголовок = СтрЗаменить(Заголовок, "%НомерНедели%", НомерНедели);
		Иначе
			ТекстДатаНачала = Формат(НачалоДня(ДатаНачала)+1, "ДФ=dd.MM"); 
			ТекстДатаОкончания = Формат(ДатаОкончания, "ДФ=dd.MM");
			Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 - %2'"), ТекстДатаНачала, ТекстДатаОкончания);
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
		ТекстДатаНачала = Формат(НачалоДня(ДатаНачала)+1, "ДФ=dd.MM"); 
		ТекстДатаОкончания = Формат(ДатаОкончания, "ДФ=dd.MM");
		Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 - %2'"), ТекстДатаНачала, ТекстДатаОкончания);
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = Формат(Месяц(НачалоДня(ДатаНачала)+1), "ЧДЦ=0; ЧГ=0") + " " + НСтр("ru='месяц'");
		Иначе
			Заголовок = Формат(НачалоДня(ДатаНачала)+1, "ДФ='MMMM yyyy'");
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = Формат(ДатаНачала, "ДФ='q'") + " " + НСтр("ru='квартал'");
		Иначе
			ТекстДатаНачала = Формат(ДатаНачала, "ДФ='q'");
			ТекстДатаОкончания = Формат(ДатаНачала, "ДФ=yyyy"); 
			Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 кв. %2'"), ТекстДатаНачала, ТекстДатаОкончания);
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
		Если ОтображатьНомерПериода Тогда
			Заголовок = ?(ДатаНачала=НачалоГода(ДатаНачала),"1", "2");
		Иначе
			ТекстДатаНачала = ?(ДатаНачала=НачалоГода(ДатаНачала),"1", "2");
			ТекстДатаОкончания = Формат(ДатаНачала, "ДФ=yyyy"); 
			Заголовок   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 полугодие %2'"), ТекстДатаНачала, ТекстДатаОкончания);
		КонецЕсли;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Заголовок = Формат(ДатаНачала, "ДФ='yyyy ""г.""'");
	Иначе 
		Заголовок = Строка(ДатаНачала);
	КонецЕсли;
	
	Возврат Заголовок;
	
КонецФункции

Функция ОписаниеТипаПланированияПоИзмерению(ИзмерениеПланирования) Экспорт
	
	Возврат СоответствиеОбъектовПланированияТипам()[ИзмерениеПланирования];
	
КонецФункции

Функция СоответствиеОбъектовПланированияТипам() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.КатегорияНоменклатуры"),
		Новый ОписаниеТипов("СправочникСсылка.КатегорииНоменклатуры")
	);
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.ГруппаНоменклатуры"),
		Новый ОписаниеТипов("СправочникСсылка.Номенклатура")
	);
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.Номенклатура"),
		Новый ОписаниеТипов("СправочникСсылка.Номенклатура")
	);
	Соответствие.Вставить(
		ПредопределенноеЗначение("Перечисление.ИзмеренияПланирования.Менеджер"),
		Новый ОписаниеТипов("СправочникСсылка.Сотрудники")
	);
	
	Возврат Соответствие;
	
КонецФункции

// Рассчитывает ближайшую к указанной дату начала периода.
//
// Параметры:
//  ДатаНачала - Дата - дата, к которой будет рассчитана ближайшая дата начала периода.
//  Периодичность - ПеречислениеСсылка.Периодичность - значение перечисления "Периодичность".
//
// Возвращаемое значение:
//  Дата - дата начала ближайшего периода.
Функция РассчитатьДатуНачалаБлижайшегоПериода(ДатаНачала, Периодичность) Экспорт

	ОдинДень = 86400;

	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда

		БлижайшаяДата = ДатаНачала;

	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда

		Если ДатаНачала = НачалоНедели(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецНедели(ДатаНачала) + ОдинДень;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада")) Тогда

		ДеньМесяца   = День(ДатаНачала);
		НачалоМесяца = НачалоМесяца(ДатаНачала);

		Если ДеньМесяца = 1 Или ДеньМесяца = 11 Или ДеньМесяца = 21 Тогда
			БлижайшаяДата = ДатаНачала;
		ИначеЕсли ДеньМесяца <= 10 Тогда // Первая декада
			БлижайшаяДата = НачалоМесяца + ОдинДень * 10;
		ИначеЕсли ДеньМесяца <= 20 Тогда // Вторая декада
			БлижайшаяДата = НачалоМесяца + ОдинДень * 20;
		Иначе // Третья декада
			БлижайшаяДата = КонецМесяца(НачалоМесяца) + ОдинДень;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц")) Тогда

		Если ДатаНачала = НачалоМесяца(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецМесяца(ДатаНачала) + ОдинДень;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")) Тогда

		Если ДатаНачала = НачалоКвартала(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецКвартала(ДатаНачала) + ОдинДень;
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие")) Тогда

		НачалоГода      = НачалоГода(ДатаНачала);
		НачалоПолугодия = ДобавитьМесяц(НачалоГода, 6);

		Если ДатаНачала = НачалоПолугодия Или ДатаНачала = НачалоГода Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = ?(ДатаНачала > НачалоПолугодия, КонецГода(ДатаНачала) + ОдинДень, НачалоПолугодия);
		КонецЕсли;

	ИначеЕсли (Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")) Тогда

		Если ДатаНачала = НачалоГода(ДатаНачала) Тогда
			БлижайшаяДата = ДатаНачала;
		Иначе
			БлижайшаяДата = КонецГода(ДатаНачала) + ОдинДень;
		КонецЕсли;

	КонецЕсли;

	Возврат БлижайшаяДата;

КонецФункции // РассчитатьДатуНачалаБлижайшегоПериода()

#КонецОбласти
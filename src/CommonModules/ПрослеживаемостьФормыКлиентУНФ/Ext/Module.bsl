
#Область ПрограммныйИнтерфейс

// Процедура - Открыть форму подбора РНПТ
//
// Параметры:
//  Форма			 - 	УправляемаяФорма - Форма документа 
//  ИмяТаблицы		 - 	Строка - Имя табличной части запасов
//  ЭтоПоступление	 - 	Булево - Признак открытия подбора в режиме поступления
//  ЭтоВозврат		 - 	Булево - Признак открытия подбора в режиме возврата
//
Процедура ОткрытьФормуПодбораРНПТ(
	Форма,
	ИмяТаблицы = "Запасы",
	ЭтоПоступление = Истина,
	ЭтоВозврат = Ложь,
	ПоставщикРезидентТаможенногоСоюза = Ложь) Экспорт
	
	Объект         = Форма.Объект;
	ДокументСсылка = Объект.Ссылка;
	Элементы       = Форма.Элементы;
	ТекущиеДанные  = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	ЕстьРасхождения = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходнаяНакладная") И Объект.ЕстьРасхождения;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация", Объект.Организация);
	СтруктураПараметров.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
	СтруктураПараметров.Вставить("Характеристика", ТекущиеДанные.Характеристика);
	СтруктураПараметров.Вставить("Партия", ТекущиеДанные.Партия);
	СтруктураПараметров.Вставить("Период", Объект.Дата);
	СтруктураПараметров.Вставить("ИмяТаблицы", ИмяТаблицы);
	СтруктураПараметров.Вставить("ВыборПоОстаткам", НЕ ЭтоПоступление);
	СтруктураПараметров.Вставить("ОткрыватьДляПросмотра", Форма.ТолькоПросмотр);
	
	// Комиссия
	ОтражатьОстаткиУКомиссионера = Ложь;
	Если (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтКомиссионера"))
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании")
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах") Тогда
			
			ПараметрыПоиска = Новый Структура("КлючСвязи", ТекущиеДанные.КлючСвязи);
			НайденныеСтроки = Объект.Покупатели.НайтиСтроки(ПараметрыПоиска);
			
			Если Не НайденныеСтроки.Количество() Тогда
				Возврат;
			КонецЕсли;
			
			ОтчетКомиссионераОПродажах = НайденныеСтроки[0].ОтчетКомиссионера;
			
			Если Не ЗначениеЗаполнено(ОтчетКомиссионераОПродажах) Тогда
				Возврат;
			КонецЕсли;
			
			СтруктураПараметров.Вставить("ОтчетКомиссионераОПродажах", ОтчетКомиссионераОПродажах);
		КонецЕсли;
		
		ОтражатьОстаткиУКомиссионера = Истина;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ОтражатьОстаткиУКомиссионера", ОтражатьОстаткиУКомиссионера);
	
	Если ОтражатьОстаткиУКомиссионера Тогда
		СтруктураПараметров.Вставить("ТекущийДокумент", ДокументСсылка);
		СтруктураПараметров.Вставить("Комиссионер", Объект.Контрагент);
	КонецЕсли;
	// Конец комиссия
	
	ЕстьОшибкиЗаполнения = Ложь;
	
	Если ТекущиеДанные.ПрослеживаемыйТовар И Не ПоставщикРезидентТаможенногоСоюза Тогда
		
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Организация"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
			ТекстСообщения, Объект.Ссылка, "Организация", "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Номенклатура'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки - 1,"ЧГ=") + "].Номенклатура";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Количество) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Количество'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки - 1,"ЧГ=") + "].Количество";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ЕстьРасхождения И Не ЗначениеЗаполнено(ТекущиеДанные.КоличествоСправочно) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Количество справочно'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки - 1,"ЧГ=") + "].КоличествоСправочно";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.СтранаПроисхождения) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Страна происхождения'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки - 1,"ЧГ=") + "].СтранаПроисхождения";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ЕстьОшибкиЗаполнения Тогда
			Возврат;
		КонецЕсли;
		
		Если ЕстьРасхождения Тогда
			КоличествоРНПТ = Мин(ТекущиеДанные.Количество, ТекущиеДанные.КоличествоСправочно);
		ИначеЕсли ТекущиеДанные.Количество < 0 Тогда
			КоличествоРНПТ = -ТекущиеДанные.Количество;
		Иначе
			КоличествоРНПТ = ТекущиеДанные.Количество;
		КонецЕсли;
		
		СтруктураПараметров.Вставить("Количество",          КоличествоРНПТ);
		СтруктураПараметров.Вставить("ЕдиницаИзмерения",    ТекущиеДанные.ЕдиницаИзмерения);
		СтруктураПараметров.Вставить("СтранаПроисхождения", ТекущиеДанные.СтранаПроисхождения);
				
		АдресТаблицыРНПТВХранилище = ПрослеживаемостьФормыВызовСервераУНФ.ПоместитьРНПТВХранилище(
			Объект, ТекущиеДанные.ИдентификаторСтроки, Форма.УникальныйИдентификатор);
		
		СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
		СтруктураПараметров.Вставить("ЭтоПоступление", ЭтоПоступление);
		СтруктураПараметров.Вставить("ЭтоВозврат", ЭтоВозврат);
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			СтруктураПараметров.Вставить("Документ", Объект.Ссылка);
		КонецЕсли;
		Если ЭтоВозврат
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "ДокументОснование")
			И ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
			СтруктураПараметров.Вставить("ДокументОснование", Объект.ДокументОснование);
		КонецЕсли;
		Если ЭтоВозврат
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "Контрагент")
			И ЗначениеЗаполнено(Объект.Контрагент) Тогда
			СтруктураПараметров.Вставить("Контрагент", Объект.Контрагент);
		КонецЕсли; 
		
		ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТ", 
			СтруктураПараметров, Форма);
	Иначе
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.СтранаПроисхождения) Тогда 
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Страна происхождения'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки - 1,"ЧГ=") + "].СтранаПроисхождения";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ЕстьОшибкиЗаполнения Тогда
			Возврат;
		КонецЕсли;
		
		Если ЭтоПоступление Тогда
			СтруктураПараметров.Вставить("Номенклатура", Неопределено);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.НомераГТД.ФормаВыбора", СтруктураПараметров, Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Открыть форму просмотра РНПТИсходного документа
//
// Параметры:
//  Форма			 		 - 	УправляемаяФорма - Форма документа 
//  ИмяТаблицы				 - 	Строка - Имя табличной части запасов
//  ИсправлениеКорректировки - 	Булево - Режим исправления корректирующего документа 
//
Процедура ОткрытьФормуПросмотраРНПТИсходногоДокумента(Форма, ИмяТаблицы = "Запасы", ИсправлениеКорректировки = Ложь) Экспорт
	
	Объект        = Форма.Объект;
	Элементы      = Форма.Элементы;
	ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.КорректировкаРеализации")
		И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсправлениеКорректировки Тогда
		ИсходныйДокумент = ПрослеживаемостьФормыВызовСервераУНФ.ИсходныйДокументРекурсивно(Объект.Ссылка);
	Иначе
		ИсходныйДокумент = Объект.ДокументОснование;
	КонецЕсли; 
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации")
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.РасходнаяНакладная") 
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Возврат;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПоступления")
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ПриходнаяНакладная") 
		И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсправлениеКорректировки Тогда
		ИмяПоля = "РНПТДоКорректировки";
	Иначе
		ИмяПоля = "РНПТДоИсправления";
	КонецЕсли; 
	
	Если ТекущиеДанные.ПрослеживаемыйТовар Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные[ИмяПоля]) Тогда
			АдресТаблицыРНПТВХранилище = ПрослеживаемостьФормыВызовСервераУНФ.ПоместитьРНПТВХранилище(
				ИсходныйДокумент, ТекущиеДанные.ИдентификаторСтроки, Форма.УникальныйИдентификатор);
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Номенклатура",    ТекущиеДанные.Номенклатура);
			СтруктураПараметров.Вставить("ИмяТаблицы",      ИмяТаблицы);	
			СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
			СтруктураПараметров.Вставить("ОткрыватьДляПросмотра", Истина);
			
			ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТ",СтруктураПараметров, Форма);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.НомерГТДДоИзменения) Тогда
		ПоказатьЗначение(, ТекущиеДанные.НомерГТДДоИзменения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуПодбораСопроводительногоДокумента(Форма, ТекущиеДанные) Экспорт
	
	Объект = Форма.Объект;
	
	ПараметрыФормы = Новый Структура("Организация, Контрагент", Объект.Организация, ТекущиеДанные.Контрагент);
	
	ОткрытьФорму(ПрослеживаемостьФормыКлиентПереопределяемый.ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении(),
		ПараметрыФормы, Форма);
	
КонецПроцедуры

Функция ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении() Экспорт
	
	Возврат "Документ.РасходнаяНакладная.Форма.ФормаВыбора";
	
КонецФункции

#КонецОбласти
#Область ПрограммныйИнтерфейс

// Обработчик команды "Изменить состояние оригинала"
// 
// Параметры:
// 	Команда - КомандаФормы - команда, по которой вызывается изменение состояния оригинала. Цифровой индекс команды 
//							 используется для определения элемента СписокВыбораСостоянийОригинала.
// 	Форма - ФормаКлиентскогоПриложения - форма документа.
Процедура ИзменитьСостояниеОригинала(Команда, Форма) Экспорт

	Если ТребуетсяПредварительноПровестиДокумент(Форма) Тогда
		ПоказатьПредупреждение( , НСтр("ru = 'Для выполнения команды необходимо предварительно провести документ.'"));
		Возврат;
	КонецЕсли;

	ИндексКомандыСтрока = СтрЗаменить(Команда.Имя,
		УчетОригиналовПервичныхДокументовУНФКлиентСервер.ПрефиксКомандыИзменитьСостояниеОригинала(), "");

	ИндексКоманды = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ИндексКомандыСтрока);

	ПараметрыОповещения = Новый Структура("Ссылка", Форма.Объект.Ссылка);

	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьМенюВыбораСостоянияЗавершение",
		УчетОригиналовПервичныхДокументовКлиент, ПараметрыОповещения);

	ВыполнитьОбработкуОповещения(ОписаниеОповещения, Форма.СписокВыбораСостоянийОригинала[ИндексКоманды]);

КонецПроцедуры

// Обработчик оповещения событий подсистемы "Учет оригиналов первичных документов" для формы документа.
//
//	Параметры:
//	ИмяСобытия - Строка - имя произошедшего события.
//	Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ОбработчикОповещенияФормаДокумента(ИмяСобытия, Форма) Экспорт

	Если ИмяСобытия = "ИзменениеСостоянияОригиналаПервичногоДокумента" Тогда
		НастроитьГруппуСостояниеОригинала(Форма);
	ИначеЕсли ИмяСобытия = "ДобавлениеУдалениеСостоянияОригиналаПервичногоДокумента" Тогда
		Форма.ОбновитьОтображениеДанных();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТребуетсяПредварительноПровестиДокумент(Форма)

	Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		Возврат Истина;
	КонецЕсли;

	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Форма.Объект.Ссылка);

	НепроведенныеДокументы = ОбщегоНазначенияВызовСервера.ПроверитьПроведенностьДокументов(МассивСсылок);

	Возврат ЗначениеЗаполнено(НепроведенныеДокументы);

КонецФункции

Процедура НастроитьГруппуСостояниеОригинала(Форма)

	Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		Форма.Элементы.ГруппаСостояниеОригинала.Заголовок = "";
		Форма.Элементы.ГруппаСостояниеОригинала.Картинка = БиблиотекаКартинок.СостояниеОригиналаПервичногоДокументаОригиналНеПолучен;
		Возврат;
	КонецЕсли;

	ТекущееСостояниеОригинала = УчетОригиналовПервичныхДокументовВызовСервера.СведенияОСостоянииОригиналаПоСсылке(
		Форма.Объект.Ссылка);

	Если ТипЗнч(ТекущееСостояниеОригинала) = Тип("Структура")
		И ТекущееСостояниеОригинала.Свойство("СостояниеОригиналаПервичногоДокумента") Тогда
		ПредставлениеСостояния = УчетОригиналовПервичныхДокументовУНФКлиентСервер.ПредставлениеСостояния(
			ТекущееСостояниеОригинала.СостояниеОригиналаПервичногоДокумента);
		Форма.Элементы.ГруппаСостояниеОригинала.Заголовок = ПредставлениеСостояния;
		Форма.Элементы.ГруппаСостояниеОригинала.Картинка = УчетОригиналовПервичныхДокументовУНФКлиентСервер.КартинкаСостояния(
			ТекущееСостояниеОригинала.СостояниеОригиналаПервичногоДокумента,
			БиблиотекаКартинок.СостояниеОригиналаПервичногоДокументаОригиналНеПолучен);
	Иначе
		Форма.Элементы.ГруппаСостояниеОригинала.Заголовок = "";
		Форма.Элементы.ГруппаСостояниеОригинала.Картинка = БиблиотекаКартинок.СостояниеОригиналаПервичногоДокументаОригиналНеПолучен;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Оплата сервиса УНФ" (сервер).
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ПолучитьПрисоединенныйТабличныйДокумент(Ссылка, ИмяФайлаБезРасширения) Экспорт
	
	РасширениеТабличногоДокумента = "mxl";
	
	МассивПрисоединенныхФайлов = Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(Ссылка, МассивПрисоединенныхФайлов);
	
	Для каждого ПрисоединенныйФайл Из МассивПрисоединенныхФайлов Цикл
		
		Если ПрисоединенныйФайл.Расширение = РасширениеТабличногоДокумента
			И ПрисоединенныйФайл.Наименование =  ИмяФайлаБезРасширения Тогда
			
			ДанныеТабличногоДокумента = РаботаСФайлами.ДвоичныеДанныеФайла(ПрисоединенныйФайл);
			ИмяФайла = ПолучитьИмяВременногоФайла(РасширениеТабличногоДокумента);
			ДанныеТабличногоДокумента.Записать(ИмяФайла);
			ТабличныйДокумент = Новый ТабличныйДокумент;
			ТабличныйДокумент.Прочитать(ИмяФайла);
			
			ТабличныйДокумент.ТолькоПросмотр      = Истина;
			ТабличныйДокумент.АвтоМасштаб         = Истина;
			ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
			ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
			ТабличныйДокумент.ОтображатьСетку     = Ложь;
			
			Возврат ТабличныйДокумент;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый ТабличныйДокумент;
	
КонецФункции

Функция ЗаполнитьБанковскийСчетИСоздатьПлатежноеПоручение(СчетПоставщика, БанковскийСчет) Экспорт
	
	НачатьТранзакцию();
		
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.СчетНаОплатуПоставщика");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", СчетПоставщика);
		Блокировка.Заблокировать();
		
		ОбъектСчетПоставщика = СчетПоставщика.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(СчетПоставщика);
		
		ОбъектСчетПоставщика.БанковскийСчет = БанковскийСчет;
		ОбъектСчетПоставщика.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		// Если не удалось обработать какой-либо документ, пропускаем и обрабатываем позднее.
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось записать счет на оплату: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СчетПоставщика);
		ОписаниеОшибки = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации("", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
	КонецПопытки;
	
	Результат = Документы.ПлатежноеПоручение.НайтиПоРеквизиту("ДокументОснование", СчетПоставщика);
	
	Если Результат.Пустая() Тогда
		
		РеквизитыСчетаПоставщика = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетПоставщика,
			"НомерВходящегоДокумента,ДатаВходящегоДокумента");
		
		НомерИДатаСчета = СтрШаблон(НСтр("ru = '%1 от %2'"), РеквизитыСчетаПоставщика.НомерВходящегоДокумента, Формат(
			РеквизитыСчетаПоставщика.ДатаВходящегоДокумента, "ДЛФ=D;"));
		
		НовоеПлатежноеПоручение = Документы.ПлатежноеПоручение.СоздатьДокумент();
		НовоеПлатежноеПоручение.Заполнить(СчетПоставщика);
		Если Не ЗначениеЗаполнено(НовоеПлатежноеПоручение.Дата) Тогда
			НовоеПлатежноеПоручение.Дата = ТекущаяДатаСеанса();
		КонецЕсли;
		
		НовоеПлатежноеПоручение.НазначениеПлатежа = СтрЗаменить(НовоеПлатежноеПоручение.НазначениеПлатежа,
			НомерИДатаСчета,
			НомерИДатаСчета + НСтр("ru = ' за право использования программного продукта.'"));
		
		Если ЗначениеЗаполнено(НовоеПлатежноеПоручение.Контрагент) И ЗначениеЗаполнено(НовоеПлатежноеПоручение.СчетКонтрагента) Тогда
			СтруктураДанные = Новый Структура(
				"ТекстКорреспондента, НаименованиеПолное, ТекстБанкДляРасчетов",
				НовоеПлатежноеПоручение.СчетКонтрагента.ТекстКорреспондента, НовоеПлатежноеПоручение.Контрагент.НаименованиеПолное, ПолучитьТекстБанкДляРасчетов(НовоеПлатежноеПоручение.СчетКонтрагента));
			НовоеПлатежноеПоручение.ТекстПолучателя = ТекстПолучателя(СтруктураДанные);
		КонецЕсли;

		Если ЗначениеЗаполнено(НовоеПлатежноеПоручение.Организация) И ЗначениеЗаполнено(НовоеПлатежноеПоручение.БанковскийСчет) Тогда
				СтруктураДанные = Новый Структура(
				"НаименованиеПлательщикаПриПеречисленииНалогов, ТекстКорреспондента, НаименованиеПолное, ТекстБанкДляРасчетов",
				НовоеПлатежноеПоручение.Организация.НаименованиеПлательщикаПриПеречисленииНалогов, НовоеПлатежноеПоручение.БанковскийСчет.ТекстКорреспондента,
				НовоеПлатежноеПоручение.Организация.НаименованиеПолное, ПолучитьТекстБанкДляРасчетов(НовоеПлатежноеПоручение.БанковскийСчет));
			НовоеПлатежноеПоручение.ТекстПлательщика = ТекстПлательщика(СтруктураДанные);
		КонецЕсли;
		
		НовоеПлатежноеПоручение.ДополнительныеСвойства.Вставить("НеПроверятьОграничения");
		НовоеПлатежноеПоручение.Записать(РежимЗаписиДокумента.Запись);
		
		Результат = НовоеПлатежноеПоручение.Ссылка;
		
	КонецЕсли;
	
	
	// Актуализация даты платежного поручения
	Если Результат.Дата <> ТекущаяДатаСеанса() Тогда
		ПлатежноеПоручение = Результат.ПолучитьОбъект();
		ПлатежноеПоручение.Дата = ТекущаяДатаСеанса();
		ПлатежноеПоручение.ДополнительныеСвойства.Вставить("НеПроверятьОграничения");
		ПлатежноеПоручение.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Функция возвращает текст получателя.
//
Функция ТекстПолучателя(СтруктураДанные)
	
	ТекстПолучателя ="";
	Если ПустаяСтрока(СтруктураДанные.ТекстКорреспондента) Тогда
		
		ТекстПолучателя = СтруктураДанные.НаименованиеПолное;
		Если ЗначениеЗаполнено(СтруктураДанные.ТекстБанкДляРасчетов) Тогда
			ТекстПолучателя = ТекстПолучателя + СтруктураДанные.ТекстБанкДляРасчетов;
		КонецЕсли;
		
	Иначе
		
		ТекстПолучателя = СтруктураДанные.ТекстКорреспондента;
		
	КонецЕсли;
	
	Возврат ТекстПолучателя;
	
КонецФункции // ЗаполнитьТекстПолучателя()

// Функция возвращает текст плательщика.
//
Функция ТекстПлательщика(СтруктураДанные)
	
	ТекстПлательщика = "";
	Если ПустаяСтрока(СтруктураДанные.ТекстКорреспондента) Тогда
		
		ТекстПлательщика = СтруктураДанные.НаименованиеПолное;
		Если ЗначениеЗаполнено(СтруктураДанные.ТекстБанкДляРасчетов) Тогда
			ТекстПлательщика = ТекстПлательщика + СтруктураДанные.ТекстБанкДляРасчетов;
		КонецЕсли;
		
	Иначе
		
		ТекстПлательщика = СтруктураДанные.ТекстКорреспондента;
		
	КонецЕсли;
	
	Возврат ТекстПлательщика;
	
КонецФункции // ЗаполнитьТекстПлательщика()

Функция ПолучитьТекстБанкДляРасчетов(БанковскийСчет)
	
	Если ЗначениеЗаполнено(БанковскийСчет.БанкРасчетов) Тогда
		ТекстБанкДляРасчетов =
			" р/с "
			+ БанковскийСчет.НомерСчета
			+ " в "
			+ БанковскийСчет.Банк
			+ " "
			+ БанковскийСчет.Банк.Город
	Иначе
		ТекстБанкДляРасчетов = "";
	КонецЕсли;
	
	Возврат ТекстБанкДляРасчетов;
	
КонецФункции // ЗаполнитьТекстБанкДляРасчетов()


#КонецОбласти


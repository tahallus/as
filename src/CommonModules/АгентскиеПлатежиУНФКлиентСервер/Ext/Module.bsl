
#Область ПрограммныйИнтерфейс

// Возвращает строку табличной части с услугой агента, привязанную к текущей строке.
//
// Параметры:
//  Запасы - Табличная часть, ДанныеФормыКоллекция - табличная часть "Запасы",
//  ТекущаяСтрока - Строка табличной части, ДанныеФормыЭлементКоллекции - текущая строка табличной части "Товары".
// 
// Возвращаемое значение:
//  Строка табличной части, ДанныеФормыЭлементКоллекции, Неопределено - строка с услугой агента.
//
Функция СтрокаУслугаАгента(Запасы, ТекущаяСтрока) Экспорт
	
	СтрокаУслугаАгента = Неопределено;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.КлючСвязи) Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("КлючСвязиУслугаАгента", ТекущаяСтрока.КлючСвязи);
		
		НайденныеСтроки = Запасы.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаУслугаАгента = НайденныеСтроки[0];
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтрокаУслугаАгента;
	
КонецФункции

// Удаляет строки с агентскими услугами в ТЧ "Запасы".
//
// Параметры:
//  Товары - Табличная часть, ДанныеФормыКоллекция - табличная часть "Товары",
//  ТекущаяСтрока - Строка табличной части, ДанныеФормыЭлементКоллекции - текущая строка табличной части "Товары".
//
Процедура УдалитьСтрокиАгентскогоВознаграждения(Запасы, ТекущаяСтрока = Неопределено) Экспорт
	
	СтрокиКУдалению = Новый Массив;
	Если ТекущаяСтрока = Неопределено Тогда
		Для Каждого СтрокаТовары Из Запасы Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.КлючСвязиУслугаАгента) Тогда
				СтрокиКУдалению.Добавить(СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
	Иначе
		СтрокаУслугаАгента = СтрокаУслугаАгента(Запасы, ТекущаяСтрока);
		Если НЕ СтрокаУслугаАгента = Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаУслугаАгента);
		КонецЕсли;
	КонецЕсли;
	
	// Удалим строки с услугой агента.
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		Запасы.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает данные агентского договора.
//
// Параметры:
//  ТекущаяСтрока - СтрокаТЧ, Структура, ДанныеФормыЭлементКоллекции - объект, из которого следует получить данные агентского договора.
//
// Возвращаемое значение:
//  Структура - структура данных договора.
//
Функция ДанныеАгентскогоДоговора(ТекущаяСтрока) Экспорт
	
	ДанныеСтроки = Новый Структура("ДанныеАгентскогоДоговора");
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрока);
	
	Возврат ДанныеСтроки.ДанныеАгентскогоДоговора;
	
КонецФункции

Процедура ВыделитьАгентскоеВознаграждениеВТаблице(Объект, ТекущаяСтрока) Экспорт
	
	СтрокиКУдалению = Новый Массив;
	Если ТекущаяСтрока = Неопределено Тогда
		Для Каждого СтрокаТовары Из Объект.Запасы Цикл
			ВыделитьАгентскоеВознаграждениеВСтроке(Объект, СтрокаТовары, СтрокиКУдалению);
		КонецЦикла;
	Иначе
		ВыделитьАгентскоеВознаграждениеВСтроке(Объект, ТекущаяСтрока, СтрокиКУдалению);
	КонецЕсли;
	
	// Удалим строки с услугой агента, не привязанные к строке с основной номенклатурой.
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		Объект.Запасы.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьВидимостьДоступностьЭлементовАгентскогоВознаграждения(Форма, Объект) Экспорт
	
	ВидимостьАВ = ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(Форма.Элементы, "ЗапасыЦенаСАгентскимВознаграждением", "Видимость");
	
	Если ВидимостьАВ = Ложь Тогда
		// По умолчанию видимость элементов агентского вознаграждения отключена.
		// После включения в течение сеанса работы с объектом не меняем.
		// Также учитываем "Неопределено".
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ЗапасыЦенаСАгентскимВознаграждением", "Видимость", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ЗапасыДоговорКонтрагента", "Видимость", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ИтогПоАгентскимПлатежам", "Видимость", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьРасчетныеПоляАгентскогоВознаграждения(Объект, ТекущаяСтрока = Неопределено, Форма = Неопределено) Экспорт
	
	ИтогоПоАгентскимПлатежам = 0;
	Если ТекущаяСтрока = Неопределено Тогда
		Для Каждого СтрокаТовары Из Объект.Запасы Цикл
			ЗаполнитьРасчетныеПоляАгентскогоВознагражденияСтроки(Объект, СтрокаТовары);
			Если ЗначениеЗаполнено(СтрокаТовары.ДоговорПлатежногоАгента) Тогда
				ИтогоПоАгентскимПлатежам = ИтогоПоАгентскимПлатежам + СтрокаТовары.Сумма;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ЗаполнитьРасчетныеПоляАгентскогоВознагражденияСтроки(Объект, ТекущаяСтрока);
	КонецЕсли;
	
	Если Форма <> Неопределено И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ИтогПоАгентскимПлатежам") Тогда
		ТекстСообщенияАгентскиеПлатежи = НСтр("ru='В том числе %СуммаАгентскихПлатежей% %Валюта% по договорам платежных агентов'");
		ТекстСообщенияАгентскиеПлатежи = СтрЗаменить(ТекстСообщенияАгентскиеПлатежи, "%СуммаАгентскихПлатежей%", ИтогоПоАгентскимПлатежам);
		ТекстСообщенияАгентскиеПлатежи = СтрЗаменить(ТекстСообщенияАгентскиеПлатежи, "%Валюта%", Объект.ВалютаДокумента);
		Форма.ИтогПоАгентскимПлатежам = ТекстСообщенияАгентскиеПлатежи;
	КонецЕсли;
	
КонецПроцедуры


Функция РассчитатьПоказателиАгентскогоПлатежа(ДанныеАгентскогоДоговора, Платеж, ПлатежСАгентскимВознаграждением, АгентскоеВознаграждение = Неопределено) Экспорт
	
	ПроцентВознаграждения = ДанныеАгентскогоДоговора.ПроцентВознаграждения / 100;
	
	Если ЗначениеЗаполнено(Платеж) Тогда
		// Агентское вознаграждение не включено в сумму.
		Если ДанныеАгентскогоДоговора.ВознаграждениеВключеноВСтоимость Тогда
			ПлатежСАгентскимВознаграждением = Окр(Платеж / (1 - ПроцентВознаграждения), 2);
		Иначе
			ПлатежСАгентскимВознаграждением = Платеж + Окр(Платеж * ПроцентВознаграждения, 2);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ПлатежСАгентскимВознаграждением) Тогда
		// Агентское вознаграждение уже включено в сумму.
		Если ДанныеАгентскогоДоговора.ВознаграждениеВключеноВСтоимость Тогда
			Платеж = ПлатежСАгентскимВознаграждением - Окр(ПлатежСАгентскимВознаграждением * ПроцентВознаграждения, 2);
		Иначе
			Платеж = Окр(ПлатежСАгентскимВознаграждением / (1 + ПроцентВознаграждения), 2);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ АгентскоеВознаграждение = Неопределено Тогда
		АгентскоеВознаграждение = ПлатежСАгентскимВознаграждением - Платеж;
	КонецЕсли;
	
КонецФункции

Функция ЗаполнитьКлючСвязи(ТабличнаяЧасть, СтрокаТабличнойЧасти, ИмяРеквизитаСвязи, ВремКлючСвязи = 0) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяРеквизитаСвязи]) Тогда
		Если ВремКлючСвязи = 0 Тогда
			Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
				Если ВремКлючСвязи < СтрокаТЧ[ИмяРеквизитаСвязи] Тогда
					ВремКлючСвязи = СтрокаТЧ[ИмяРеквизитаСвязи];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		СтрокаТабличнойЧасти[ИмяРеквизитаСвязи] = ВремКлючСвязи + 1;
	КонецЕсли;
	
	Возврат СтрокаТабличнойЧасти[ИмяРеквизитаСвязи];
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыделитьАгентскоеВознаграждениеВСтроке(Объект, ТекущаяСтрока, СтрокиКУдалению)
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.КлючСвязиУслугаАгента) Тогда
		// Строка является услугой агента, выделение не требуется.
		Возврат;
	КонецЕсли;
	
	ДанныеАгентскогоДоговора = ДанныеАгентскогоДоговора(ТекущаяСтрока);
	
	// Найдем связанную строку с услугой агента.
	СтрокаУслугаАгента = СтрокаУслугаАгента(Объект.Запасы, ТекущаяСтрока);
	
	Если НЕ ЗначениеЗаполнено(ДанныеАгентскогоДоговора) Тогда
		// Удалим строку с агентским вознаграждением.
		Если НЕ СтрокаУслугаАгента = Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаУслугаАгента);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.КлючСвязи) Тогда
		ЗаполнитьКлючСвязи(Объект.Запасы, ТекущаяСтрока, "КлючСвязи");
	КонецЕсли;
	
	// Добавим строку при необходимости.
	Если СтрокаУслугаАгента = Неопределено Тогда
		//СтрокаУслугаАгента = Объект.Товары.Добавить();
		Индекс = Объект.Запасы.Индекс(ТекущаяСтрока);
		СтрокаУслугаАгента = Объект.Запасы.Вставить(Индекс + 1);
		СтрокаУслугаАгента.КлючСвязиУслугаАгента = ТекущаяСтрока.КлючСвязи;
		СтрокаУслугаАгента.Количество = 1;
		
		ЗаполнитьКлючСвязи(Объект.Запасы, СтрокаУслугаАгента, "КлючСвязи");
	КонецЕсли;
	
	
	// Рассчитаем показатели агентского вознаграждения.
	АгентскоеВознаграждение         = 0;
	Платеж                          = ТекущаяСтрока.Сумма;
	ПлатежСАгентскимВознаграждением = 0;
	
	РассчитатьПоказателиАгентскогоПлатежа(ДанныеАгентскогоДоговора, Платеж, ПлатежСАгентскимВознаграждением, АгентскоеВознаграждение);
	
	ДанныеНоменклатуры = НоменклатураВДокументахВызовСервера.ДанныеНоменклатуры(ДанныеАгентскогоДоговора.УслугаАгента);
	
	СтрокаУслугаАгента.Номенклатура = ДанныеАгентскогоДоговора.УслугаАгента;
	СтрокаУслугаАгента.Сумма = АгентскоеВознаграждение;
	СтрокаУслугаАгента.Цена  = АгентскоеВознаграждение;
	СтрокаУслугаАгента.УслугаАгента = Истина;
	СтрокаУслугаАгента.ЕдиницаИзмерения = ДанныеНоменклатуры.ЕдиницаИзмерения;
	СтрокаУслугаАгента.СтавкаНДС = ДанныеНоменклатуры.СтавкаНДС;
	
КонецПроцедуры

Процедура ЗаполнитьРасчетныеПоляАгентскогоВознагражденияСтроки(Объект, ТекущаяСтрока, СтрокаУслугаАгента = Неопределено)
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.КлючСвязиУслугаАгента) Тогда
		// Самостоятельно строку с услугой агента не обрабатываем.
		Возврат;
	КонецЕсли;
	
	Цена                          = ТекущаяСтрока.Цена;
	ЦенаСАгентскимВознаграждением = 0;
	
	ДанныеАгентскогоДоговора = ДанныеАгентскогоДоговора(ТекущаяСтрока);
	Если ЗначениеЗаполнено(ДанныеАгентскогоДоговора) Тогда
		// Строка с основной номенклатурой.
		Если СтрокаУслугаАгента = Неопределено Тогда
			СтрокаУслугаАгента = СтрокаУслугаАгента(Объект.Запасы, ТекущаяСтрока);
		КонецЕсли;
		Если СтрокаУслугаАгента = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		РассчитатьПоказателиАгентскогоПлатежа(ДанныеАгентскогоДоговора, Цена, ЦенаСАгентскимВознаграждением);
	
		СтрокаУслугаАгента.УслугаАгента = Истина;
	КонецЕсли;
	
	ТекущаяСтрока.ЦенаСАгентскимВознаграждением = ЦенаСАгентскимВознаграждением;
	
КонецПроцедуры

#КонецОбласти
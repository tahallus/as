
#Область ПрограммныйИнтерфейс

// Проверяет, что установлена текущая строка, в противном случае выводит предупреждение.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, для которой вызывается проверка.
//  ИмяТабличнойЧасти	 - Строка - имя таблицы формы.
// 
// Возвращаемое значение:
//  ДанныеФормыСтруктура - данные текущей строки таблицы формы.
//
Функция ТекущаяСтрока(Форма, ИмяТабличнойЧасти = "Товары") Экспорт
	
	ТекущаяСтрока = Форма.Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Необходимо выбрать строку, для которой необходимо получить вес.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Возврат ТекущаяСтрока;
	
КонецФункции

// В процедуре нужно реализовать алгоритм преобразования данных из подсистемы подключаемого оборудования.
//
// Параметры:
//  Параметр - Массив - входящие данные.
//
// Возвращаемое значение:
//  Массив из Структура - см. ПреобразоватьДанныеСоСканераВСтруктуру
Функция ПреобразоватьДанныеСоСканераВМассив(Параметр) Экспорт
	
	ОбработатьСобытие();
	
	Данные = Новый Массив;
	Данные.Добавить(ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
	
	Возврат Данные;
	
КонецФункции

// В процедуре нужно реализовать алгоритм преобразования данных из подсистемы подключаемого оборудования.
//
// Параметры:
//  Параметр - Массив - входящие данные.
//
// Возвращаемое значение:
//  Структура - описание:
//   * Штрихкод - Строка - раскодированное значение
//   * Количество - Число - количество позиций
Функция ПреобразоватьДанныеСоСканераВСтруктуру(Параметр) Экспорт
	
	ОбработатьСобытие();
	
	Результат = Новый Структура;
	Результат.Вставить("Штрихкод", "");
	Результат.Вставить("Количество", 1);
	
	Если Не ЗначениеЗаполнено(Параметр) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) <> Тип("Массив") Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Параметр.Количество() = 1 Тогда
		Результат.Штрихкод = Параметр[0];
		Возврат Результат;
	КонецЕсли;
	
	Если Параметр[1] = Неопределено Тогда
		Результат.Штрихкод = Параметр[0]; // Достаем штрихкод из основных данных
	Иначе
		Результат.Штрихкод = Параметр[1][1]; // Достаем штрихкод из дополнительных данных
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Оборудование подключено
//
// Параметры:
//  ИдентификаторУстройства	 - СправочникСсылка.ПодключаемоеОборудование - .
// 
// Возвращаемое значение:
//  Булево - .
//
Функция ОборудованиеПодключено(ИдентификаторУстройства) Экспорт
	
	ПодключенноеУстройство = МенеджерОборудованияКлиент.ПолучитьПодключенноеУстройство(
		глПодключаемоеОборудование.ПараметрыПодключенияПО, ИдентификаторУстройства);

	Если ПодключенноеУстройство = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

// Есть необработанное событие
// 
// Возвращаемое значение:
//  Булево - .
//
Функция ЕстьНеобработанноеСобытие() Экспорт
	
	Возврат (глПодключаемоеОборудованиеСобытиеОбработано = Ложь);
	
КонецФункции

// Устанавливает глобальный признак того, что событие обработано.
//
Процедура ОбработатьСобытие() Экспорт
	
	глПодключаемоеОборудованиеСобытиеОбработано = Истина;
	
КонецПроцедуры

#КонецОбласти
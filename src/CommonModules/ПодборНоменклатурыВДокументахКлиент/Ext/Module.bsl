#Область ПрограммныйИнтерфейс

// Округляет число по заданному порядку.
//
// Параметры:
//  Число        - Число, которое необходимо округлить
//  ПорядокОкругления - Перечисления.ПорядкиОкругления - порядок округления
//  ОкруглятьВБольшуюСторону - Булево - округления в большую сторону.
//
// Возвращаемое значение:
//  Число        - результат округления.
//
Функция ОкруглитьЦену(Число, ПравилоОкругления, ОкруглятьВБольшуюСторону) Экспорт
	
	Перем Результат; // Возвращаемый результат.
	
	// Преобразуем порядок округления числа.
	// Если передали пустое значение порядка, то округлим до копеек. 
	Если НЕ ЗначениеЗаполнено(ПравилоОкругления) Тогда
		ПорядокОкругления = ПредопределенноеЗначение("Перечисление.ПорядкиОкругления.Окр0_01"); 
	Иначе
		ПорядокОкругления = ПравилоОкругления;
	КонецЕсли;
	Порядок = Число(Строка(ПорядокОкругления));
	
	// вычислим количество интервалов, входящих в число
	КоличествоИнтервал = Число / Порядок;
	
	// вычислим целое количество интервалов.
	КоличествоЦелыхИнтервалов = Цел(КоличествоИнтервал);
	
	Если КоличествоИнтервал = КоличествоЦелыхИнтервалов Тогда
		
		// Числа поделились нацело. Округлять не нужно.
		Результат	= Число;
	Иначе
		Если ОкруглятьВБольшуюСторону Тогда
			
			// При порядке округления "0.05" 0.371 должно округлиться до 0.4
			Результат = Порядок * (КоличествоЦелыхИнтервалов + 1);
		Иначе
			
			// При порядке округления "0.05" 0.371 должно округлиться до 0.35,
			// а 0.376 до 0.4
			Результат = Порядок * Окр(КоличествоИнтервал, 0, РежимОкругления.Окр15как20);
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ОкруглитьЦену()

// Процедура обработки результатов закрытия подбора
//
Процедура ПриЗакрытииПодбора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
		
		Если НЕ ПустаяСтрока(РезультатЗакрытия.АдресКорзиныВХранилище) Тогда
			
			Оповестить("ПодборПроизведен", РезультатЗакрытия.АдресКорзиныВХранилище, РезультатЗакрытия.УникальныйИдентификаторФормыВладельца);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытииПодбора()

// Открывает новую форму подбора номенклатуры
//
// Параметры:
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма из которой открывается подбор
//  ИмяТабличнойЧасти - Строка - имя табличной части для которой открывается подбор.
//
Процедура ОткрытьФормуПодбораНоменклатуры(ФормаВладелец, ИмяТабличнойЧасти = "Запасы", ПараметрыПодбора = Неопределено, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	Если ПараметрыПодбора = Неопределено Тогда
		ПараметрыПодбора = Новый Структура;
		ЗаполнитьЗначенияПараметровПодбораНоменклатуры(ФормаВладелец, ИмяТабличнойЧасти, "Справочники.Номенклатура.ФормаСписка", ПараметрыПодбора);
	Иначе
		ЗаполнитьЗначенияПараметровНачальнаяНастройка(ФормаВладелец, ИмяТабличнойЧасти, ПараметрыПодбора)
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("ЭтоПодбор", Истина);
	ПараметрыПодбора.Вставить("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
	ПараметрыПодбора.Вставить("ИмяФормыВладельца", ФормаВладелец.ИмяФормы);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец, "Объект")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец.Объект, "Ссылка") Тогда
		ПараметрыПодбора.Вставить("ТипВладельца", ТипЗнч(ФормаВладелец.Объект.Ссылка));
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец, "НастройкиФормыВыбораНоменклатуры") Тогда
			
			ПараметрыОтбора = Новый Структура("ИмяТабличнойЧасти, ИмяНастройки", ИмяТабличнойЧасти, "ТипСтруктурнойЕдиницы");
			
			НайденныеСтроки = ФормаВладелец.НастройкиФормыВыбораНоменклатуры.НайтиСтроки(ПараметрыОтбора);
			
			МассивПараметров = Новый Массив;
			
			Если НайденныеСтроки.Количество() Тогда
				
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ТипСтруктурнойЕдиницы", НайденныеСтроки[0].ЗначениеНастройки));
				
			КонецЕсли;
			
			СтруктураНастроек = Новый Структура;
			СтруктураНастроек.Вставить("ТипСтруктурнойЕдиницы", МассивПараметров);
			
			ПараметрыПодбора.Вставить("НастройкиФормы", СтруктураНастроек);
		КонецЕсли;
		
	Иначе
		ПараметрыПодбора.Вставить("ТипВладельца", Неопределено);
	КонецЕсли;
	
	Если ПараметрыПодбора.Свойство("РежимВыбора") Тогда
		 ПараметрыПодбора.РежимВыбора = Ложь;
	КонецЕсли;
	
	Если Не ПараметрыПодбора.Свойство("УникальныйИдентификаторФормыВладельца") Тогда
		ПараметрыПодбора.Вставить("УникальныйИдентификаторФормыВладельца", ФормаВладелец.УникальныйИдентификатор);
	КонецЕсли;
	
	Если ОповещениеПриЗавершении = Неопределено Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПриЗакрытииПодбора", ПодборНоменклатурыВДокументахКлиент.ЭтотОбъект);
	КонецЕсли;
		
	ОткрытьФорму("Справочник.Номенклатура.ФормаСписка", ПараметрыПодбора, ФормаВладелец, Истина, , , ОповещениеПриЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Пересчет сумм в валюту при изменении цены
//
// Параметры:
// СтрокаТабличнойЧасти - Строка табличной части для пересчета
// ПредыдущаяВалюта - Валюта из которой происходит пересчет
// ВалютаПересчета - Валюта в которую происходит пересчет
// НаДату - Дата пересчета
// СуммаВключаетНДС - Сумма включает НДС
// СтруктураОкругления - Параметры округления цены
//
Процедура ПересчитатьСтрокуТабличнойЧастиВВалюту(СтрокаТабличнойЧасти, ПредыдущаяВалюта, ВалютаПересчета, НаДату, СуммаВключаетНДС, СтруктураОкругления) Экспорт
	
	СтруктураКурсы = ЦенообразованиеСервер.ПолучитьКурсыВалют(ПредыдущаяВалюта, ВалютаПересчета, НаДату);
	
	Если СтрокаТабличнойЧасти.Свойство("Цена") Тогда
		
		СтрокаТабличнойЧасти.Цена = ВалютыУНФКлиентСервер.Пересчитать(СтрокаТабличнойЧасти.Цена, 
		СтруктураКурсы.КурсНач, 
		СтруктураКурсы.Курс, 
		СтруктураКурсы.КратностьНач, 
		СтруктураКурсы.Кратность);
		
		СтрокаТабличнойЧасти.Цена = ОкруглитьЦену(СтрокаТабличнойЧасти.Цена, СтруктураОкругления.ПорядокОкругления, СтруктураОкругления.ОкруглятьВБольшуюСторону);
		
		ПараметрыРасчета = Новый Структура;
		ПараметрыРасчета.Вставить("СуммаВключаетНДС",СуммаВключаетНДС);
		ТабличныеЧастиУНФКлиент.РассчитатьСуммыВСтрокеТЧ(СтрокаТабличнойЧасти, ПараметрыРасчета);
		
	КонецЕсли;

КонецПроцедуры

// Возвращает конвертированную в валюту цену
//
// Параметры:
// Цена - Первоначальное значение цены
// ПредыдущаяВалюта - Валюта из которой происходит пересчет
// ВалютаПересчета - Валюта в которую происходит пересчет
// НаДату - Дата пересчета
// СуммаВключаетНДС - Сумма включает НДС
// СтруктураОкругления - Параметры округления цены
//
// Возвращаемое значение:
//  Число - Конвертированное значение цены.
//
Функция ЦенаВВалюту(Цена, ПредыдущаяВалюта, ВалютаПересчета, НаДату, СуммаВключаетНДС, СтруктураОкругления) Экспорт
	
	СтруктураКурсы = ЦенообразованиеСервер.ПолучитьКурсыВалют(ПредыдущаяВалюта, ВалютаПересчета, НаДату);

	ЦенаВВалюте = ВалютыУНФКлиентСервер.Пересчитать(Цена, 
	СтруктураКурсы.КурсНач, 
	СтруктураКурсы.Курс, 
	СтруктураКурсы.КратностьНач, 
	СтруктураКурсы.Кратность);
	
	ЦенаВВалюте = ОкруглитьЦену(ЦенаВВалюте, СтруктураОкругления.ПорядокОкругления, СтруктураОкругления.ОкруглятьВБольшуюСторону);
	Возврат ЦенаВВалюте;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВидОперацииДокумента(ФормаВладелец, ПараметрыПодбора)
	Перем ВидОперации;
	
	Если ФормаВладелец.Объект.Свойство("ВидОперации", ВидОперации) Тогда
		
		ПараметрыПодбора.Вставить("ВидОперации", ВидОперации);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыВидимостиНаборовКомплектов(ФормаВладелец, ПолноеИмяФормыПодбора, ПараметрыПодбора)
	
	ПоказыватьНаборыКомплекты = Ложь;
	
	Если Найти(ПолноеИмяФормыПодбора, "Справочники.Номенклатура.ФормаСписка") > 0 Тогда
		
		ПоказыватьНаборыКомплекты = Истина;
		
		Если ПараметрыПодбора.Свойство("ВидОперации") Тогда
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец.Объект, "Ссылка") 
				И ТипЗнч(ФормаВладелец.Объект.Ссылка) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
				ПоказыватьНаборыКомплекты = ПараметрыПодбора.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя");
			ИначеЕсли СтрНайти(ФормаВладелец.ИмяФормы, "РасходнаяНакладная") > 0 Тогда
				ПоказыватьНаборыКомплекты = ПараметрыПодбора.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю");
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если Найти(ПолноеИмяФормыПодбора, "Обработка.ПодборПоступление.Форма.КорзинаЦенаОстатокРезервХарактеристика") > 0 Тогда
			
			ПоказыватьНаборыКомплекты = (ПараметрыПодбора.Свойство("ВидОперации")
			И ПараметрыПодбора.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя"));
			
		ИначеЕсли Найти(ПолноеИмяФормыПодбора, "Обработка.ПодборРеализация.Форма.КорзинаЦенаОстатокРезервХарактеристика") > 0 Тогда
			
			ПоказыватьНаборыКомплекты = Истина;
			
			Если СтрНайти(ФормаВладелец.ИмяФормы, "РасходнаяНакладная") > 0 Тогда
				
				ПоказыватьНаборыКомплекты = (ПараметрыПодбора.Свойство("ВидОперации")
				И ПараметрыПодбора.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю"));
				
			ИначеЕсли СтрНайти(ФормаВладелец.ИмяФормы, "СчетФактура") > 0 Тогда
				
				ПоказыватьНаборыКомплекты = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("ПоказыватьНаборыКомплекты", ПоказыватьНаборыКомплекты);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрВалютаДокумента(ФормаВладелец, ПараметрыПодбора)
	
	Если ФормаВладелец.Объект.Свойство("ВалютаДокумента") Тогда
		
		ПараметрыПодбора.Вставить("ВалютаДокумента", ФормаВладелец.Объект.ВалютаДокумента);
		
	Иначе
		
		ПараметрыПодбора.Вставить("ВалютаДокумента", Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыНалогообложенияДокумента(ФормаВладелец, ПараметрыПодбора)
	
	Если ФормаВладелец.ИмяФормы = "Документ.СчетФактура.Форма.ФормаДокумента" 
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаДокумента" Тогда
		
		ПараметрыПодбора.Вставить("НалогообложениеНДС", ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС"));
		ПараметрыПодбора.Вставить("СуммаВключаетНДС", Ложь);
		
	ИначеЕсли ФормаВладелец.ИмяФормы = "Документ.ПеремещениеЗапасов.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ЗаказНаПеремещение.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ПересортицаЗапасов.Форма.ФормаДокумента" 
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ПереоценкаТоваровНаКомиссии.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ОтчетКомиссионераОСписании.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.СписаниеЗапасов.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ЗаказНаПроизводство.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ИнвентаризацияЗапасов.Форма.ФормаДокумента" 
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ОприходованиеЗапасов.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ПеремещениеПоЯчейкам.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ПланПродаж.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ПриходныйОрдер.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.РаспределениеЗатрат.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.РасходныйОрдер.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.РезервированиеЗапасов.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.СборкаЗапасов.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.КомплектацияЗапасов.Форма.ФормаДокумента" Тогда
		// Для этих форм не требуется заполнение реквизита
		
	Иначе
		
		ПараметрыПодбора.Вставить("НалогообложениеНДС", ФормаВладелец.ЭтотОбъект.Объект.НалогообложениеНДС);
		ПараметрыПодбора.Вставить("СуммаВключаетНДС", ФормаВладелец.ЭтотОбъект.Объект.СуммаВключаетНДС);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТипыНоменклатуры(ФормаВладелец, ИмяТабличнойЧасти, ПараметрыПодбора)
	
	ТипНоменклатуры = Новый СписокЗначений;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда"  Тогда
		Если ИмяТабличнойЧасти = "Работы" Тогда
			ИмяТабличнойЧасти = "ЗНРаботы"
		ИначеЕсли ИмяТабличнойЧасти = "МатериалыЗаказчика" Тогда
			ИмяТабличнойЧасти = "ЗНМатериалыЗаказчика";
		КонецЕсли;
	КонецЕсли;
	
	ИмяПоляНоменклатура = "Номенклатура";
	
	Если ИмяТабличнойЧасти = "ТаблицаПланирования" Тогда
		ИмяПоляНоменклатура = "ОбъектПланирования";
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ОтчетПереработчика.Форма.ФормаДокумента"  Тогда
		Если ИмяТабличнойЧасти = "Расходы" Тогда
		ИмяПоляНоменклатура = "Расход";
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из ФормаВладелец.Элементы[ИмяТабличнойЧасти + ИмяПоляНоменклатура].ПараметрыВыбора Цикл
		
		Если ЭлементМассива.Имя = "Отбор.ТипНоменклатуры" Тогда
			
			Если ТипЗнч(ЭлементМассива.Значение) = Тип("ФиксированныйМассив") Тогда
				
				Для каждого ЭлементФиксМассива Из ЭлементМассива.Значение Цикл
					
					ТипНоменклатуры.Добавить(ЭлементФиксМассива);
					
				КонецЦикла; 
				
			Иначе
				
				ТипНоменклатуры.Добавить(ЭлементМассива.Значение);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыПодбора.Вставить("ТипНоменклатуры", ТипНоменклатуры);
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПараметры(ФормаВладелец, ПараметрыПодбора)
	
	Если ФормаВладелец.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента" 
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента_РМК" Тогда
		
		ПараметрыПодбора.Вставить("ЭтоЧекККМ", Истина);
		
	ИначеЕсли (ФормаВладелец.ИмяФормы = "Документ.ПриходнаяНакладная.Форма.ФормаДокумента"
		И ФормаВладелец.Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя"))
		ИЛИ (ФормаВладелец.ИмяФормы = "Документ.РасходнаяНакладная.Форма.ФормаДокумента"
		И ФормаВладелец.Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику")) Тогда
		
		ПараметрыПодбора.Вставить("ЭтоВозврат", Истина);
		
	ИначеЕсли (ФормаВладелец.ИмяФормы = "Документ.ПересортицаЗапасов.Форма.ФормаДокумента") Тогда
		
		ПараметрыПодбора.Вставить("ПоказыватьНаборыКомплекты", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПараметровНачальнаяНастройка(ФормаВладелец, ИмяТабличнойЧасти, ПараметрыПодбора)
	
	Если СтрНайти(ФормаВладелец.ИмяФормы, "ПеремещениеЗапасов") > 0
		ИЛИ СтрНайти(ФормаВладелец.ИмяФормы, "ЗаказНаПеремещение") > 0 Тогда
		
		Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
			ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
		Иначе
			ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда"  Тогда
		Если Не ИмяТабличнойЧасти = "Запасы" Тогда
			
			Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
				ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
			Иначе
				ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ОтчетПереработчика.Форма.ФормаДокумента"  Тогда
		Если ИмяТабличнойЧасти = "Расходы" Тогда
			
			Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
				ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
			Иначе
				ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.КорректировкаПоступления.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.ПересортицаЗапасов.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.СчетНаОплатуПоставщика.Форма.ФормаДокумента" 
		Или ФормаВладелец.ИмяФормы = "Документ.ДополнительныеРасходы.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.СчетНаОплату.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ИнвентаризацияЗапасов.Форма.ФормаДокумента" 
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ОприходованиеЗапасов.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ОтчетКомиссионера.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ОтчетКомиссионер аОСписании.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ОтчетКомитенту.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.ПереоценкаТоваровНаКомиссии.Форма.ФормаДокумента"
		ИЛИ ФормаВладелец.ИмяФормы = "Документ.АктВыполненныхРабот.Форма.ФормаДокумента" Тогда
		
		Если Не ПараметрыПодбора.Свойство("НеПоказыватьИнформациюПоСкладуИРезервам") Тогда
			ПараметрыПодбора.Вставить("НеПоказыватьИнформациюПоСкладуИРезервам", Истина);
		Иначе
			ПараметрыПодбора.НеПоказыватьИнформациюПоСкладуИРезервам = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.АвансовыйОтчет.Форма.ФормаДокумента" Тогда
		Если ИмяТабличнойЧасти = "Расходы" Тогда
			Если Не ПараметрыПодбора.Свойство("НеПоказыватьИнформациюПоСкладуИРезервам") Тогда
				ПараметрыПодбора.Вставить("НеПоказыватьИнформациюПоСкладуИРезервам", Истина);
			Иначе
				ПараметрыПодбора.НеПоказыватьИнформациюПоСкладуИРезервам = Истина;
			КонецЕсли;
		Иначе
			Если Не ПараметрыПодбора.Свойство("ПоказыватьКолонкуРезерв") Тогда
				ПараметрыПодбора.Вставить("ПоказыватьКолонкуРезерв", Ложь);
			Иначе
				ПараметрыПодбора.ПоказыватьКолонкуРезерв = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ЗаказНаПроизводство.Форма.ФормаДокумента" Тогда
		
		Если Не ИмяТабличнойЧасти = "Запасы" Тогда
			Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
				ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
			Иначе
				ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПараметрыПодбора.Свойство("ПоказыватьКолонкуРезерв") Тогда
			ПараметрыПодбора.Вставить("ПоказыватьКолонкуРезерв", ИмяТабличнойЧасти = "Запасы");
		Иначе
			ПараметрыПодбора.ПоказыватьКолонкуРезерв = ИмяТабличнойЧасти = "Запасы";
		КонецЕсли;
	КонецЕсли;
	
	ЭтоМаркировка = ПараметрыПодбора.Свойство("ЭтоМаркировка");
	
	Если (ФормаВладелец.ИмяФормы = "Документ.ПеремещениеПоЯчейкам.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.ПланПродаж.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.ПриходныйОрдер.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.РасходныйОрдер.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.РезервированиеЗапасов.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.СборкаЗапасов.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.ШаблоныКалькуляций.Форма.ФормаДокумента"
		Или ФормаВладелец.ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаКалькуляции")
		Или ФормаВладелец.ИмяФормы = "Документ.КомплектацияЗапасов.Форма.ФормаДокумента" Или ЭтоМаркировка Тогда
		
		Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
			ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
		Иначе
			ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
		КонецЕсли;
		
		Если Не ПараметрыПодбора.Свойство("ПоказыватьКолонкуРезерв") Тогда
			ПараметрыПодбора.Вставить("ПоказыватьКолонкуРезерв", Ложь);
		Иначе
			ПараметрыПодбора.ПоказыватьКолонкуРезерв = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.СчетНаОплату.Форма.ФормаДокумента" Тогда
		Если Не ПараметрыПодбора.Свойство("ПоказыватьКолонкуРезерв") Тогда
			ПараметрыПодбора.Вставить("ПоказыватьКолонкуРезерв", Ложь);
		Иначе
			ПараметрыПодбора.ПоказыватьКолонкуРезерв = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ОтчетОПереработке.Форма.ФормаДокумента" Тогда
		Если ИмяТабличнойЧасти = "Отходы" Тогда
			Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
				ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
			Иначе
				ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
			КонецЕсли;
		Иначе
			Если Не ПараметрыПодбора.Свойство("НеПоказыватьИнформациюПоСкладуИРезервам") Тогда
				ПараметрыПодбора.Вставить("НеПоказыватьИнформациюПоСкладуИРезервам", Истина);
			Иначе
				ПараметрыПодбора.НеПоказыватьИнформациюПоСкладуИРезервам = Истина;
			КонецЕсли;
		КонецЕсли;
		
			Если Не ПараметрыПодбора.Свойство("ПоказыватьКолонкуРезерв") Тогда
				ПараметрыПодбора.Вставить("ПоказыватьКолонкуРезерв", ИмяТабличнойЧасти = "Продукция");
			Иначе
				ПараметрыПодбора.ПоказыватьКолонкуРезерв = ИмяТабличнойЧасти = "Продукция";
			КонецЕсли;
		
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.РаспределениеЗатрат.Форма.ФормаДокумента" Тогда
		Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
			ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
		Иначе
			ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
		КонецЕсли;
		
		Если Не ПараметрыПодбора.Свойство("ПоказыватьКолонкуРезерв") Тогда
			ПараметрыПодбора.Вставить("ПоказыватьКолонкуРезерв", ИмяТабличнойЧасти = "Запасы");
		Иначе
			ПараметрыПодбора.ПоказыватьКолонкуРезерв = ИмяТабличнойЧасти = "Запасы";
		КонецЕсли;
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ОтчетПереработчика.Форма.ФормаДокумента" Тогда
		Если ИмяТабличнойЧасти = "Продукция" Или ИмяТабличнойЧасти = "Отходы" Тогда
			Если Не ПараметрыПодбора.Свойство("ТолькоНоменклатураИКоличество") Тогда
				ПараметрыПодбора.Вставить("ТолькоНоменклатураИКоличество", Истина);
			Иначе
				ПараметрыПодбора.ТолькоНоменклатураИКоличество = Истина;
			КонецЕсли;
		ИначеЕсли ИмяТабличнойЧасти = "Запасы" Тогда
			Если Не ПараметрыПодбора.Свойство("НеПоказыватьИнформациюПоСкладуИРезервам") Тогда
				ПараметрыПодбора.Вставить("НеПоказыватьИнформациюПоСкладуИРезервам", Истина);
			Иначе
				ПараметрыПодбора.НеПоказыватьИнформациюПоСкладуИРезервам = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДисконтнуюКартуНоменклатуры(ФормаВладелец, ПараметрыПодбора)
	
	ДисконтнаяКартаВидна = Ложь;
	ТекОбъект = ФормаВладелец.Объект;
	Если ТекОбъект.Свойство("ДисконтнаяКарта") Тогда
		
		ДисконтнаяКартаВидна = Истина;
		Если ТипЗнч(ТекОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			Если ТекОбъект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку") Тогда
				ДисконтнаяКартаВидна = Ложь;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ТекОбъект) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			Если ТекОбъект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю") Тогда
				ДисконтнаяКартаВидна = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если ДисконтнаяКартаВидна = Истина Тогда
			ПараметрыПодбора.Вставить("ДисконтнаяКарта", ТекОбъект.ДисконтнаяКарта);
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец.Объект, "ПроцентСкидкиПоДисконтнойКарте") Тогда
				ПараметрыПодбора.Вставить("ПроцентСкидкиПоДисконтнойКарте", ТекОбъект.ПроцентСкидкиПоДисконтнойКарте);
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("ДисконтнаяКартаВидна", ДисконтнаяКартаВидна);
	
КонецПроцедуры

Процедура ЗаполнитьВидыЦенНоменклатуры(ФормаВладелец, ПолноеИмяФормыПодбора, ПараметрыПодбора)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец.Объект, "ВидЦенКонтрагента") Тогда
	// Вид цен для поступления
		
		Если ФормаВладелец.ИмяФормы = "Документ.СчетФактураПолученный.Форма.ФормаДокумента" Тогда
		// Определение видов цен для вход. документов без явного реквизита ВидыЦенКонтрагента
			
			ВидЦенКонтрагента = ПодборНоменклатурыВДокументахВызовСервера.ВидЦенСчетФактуры(ФормаВладелец.ЭтотОбъект.Объект.Контрагент, ФормаВладелец.ЭтотОбъект.Объект.Договор, Истина);
			ПараметрыПодбора.Вставить("ВидЦен", ВидЦенКонтрагента);
			
		Иначе
			
			ПараметрыПодбора.Вставить("ВидЦен", ФормаВладелец.ЭтотОбъект.Объект.ВидЦенКонтрагента);
			
		КонецЕсли;
		
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец.Объект, "ВидЦен") Тогда
	// Вид цен для реализации
		
		Если ФормаВладелец.ИмяФормы = "Документ.СчетФактура.Форма.ФормаДокумента" Тогда
			
			ВидЦен = ПодборНоменклатурыВДокументахВызовСервера.ВидЦенСчетФактуры(ФормаВладелец.ЭтотОбъект.Объект.Контрагент, ФормаВладелец.ЭтотОбъект.Объект.Договор, Ложь);
			ПараметрыПодбора.Вставить("ВидЦен", ВидЦен);
			
		Иначе
			
			ПараметрыПодбора.Вставить("ВидЦен", ФормаВладелец.ЭтотОбъект.Объект.ВидЦен);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВидСкидкиНаценкиНоменклатуры(ФормаВладелец, ПараметрыПодбора)
	
	СкидкиНаценкиВидны = Ложь;
	
	Если ФормаВладелец.ЭтотОбъект.Объект.Свойство("ВидСкидкиНаценки") Тогда
		
		ПараметрыПодбора.Вставить("ВидСкидкиНаценки", ФормаВладелец.ЭтотОбъект.Объект.ВидСкидкиНаценки);
		СкидкиНаценкиВидны = Истина;
		
	КонецЕсли;
	
	Если ФормаВладелец.ИмяФормы = "Документ.ПриходнаяНакладная.Форма.ФормаДокумента" Тогда
		ПараметрыПодбора.Вставить("ПроцентРучнойСкидки", ФормаВладелец.СкидкаПроцент);
		Если ФормаВладелец.СкидкаПроцент<>0 Тогда
			СкидкиНаценкиВидны = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("СкидкиНаценкиВидны", СкидкиНаценкиВидны);
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПараметровПодбораНоменклатуры(ФормаВладелец, ИмяТабличнойЧасти, ПолноеИмяФормыПодбора, ПараметрыПодбора)
	
	ПараметрыПодбора.Вставить("Организация", ФормаВладелец.ЭтотОбъект.Объект.Организация);
	ПараметрыПодбора.Вставить("Дата", ФормаВладелец.ЭтотОбъект.Объект.Дата);
	ПараметрыПодбора.Вставить("ПериодЦен", ФормаВладелец.ЭтотОбъект.Объект.Дата);
	ПараметрыПодбора.Вставить("УникальныйИдентификаторФормыВладельца", ФормаВладелец.УникальныйИдентификатор);
	
	ЗаполнитьЗначенияПараметровНачальнаяНастройка(ФормаВладелец, ИмяТабличнойЧасти, ПараметрыПодбора);
	ЗаполнитьВидОперацииДокумента(ФормаВладелец, ПараметрыПодбора);
	ЗаполнитьПараметрыВидимостиНаборовКомплектов(ФормаВладелец, ПолноеИмяФормыПодбора, ПараметрыПодбора);
	ЗаполнитьПараметрВалютаДокумента(ФормаВладелец, ПараметрыПодбора);
	ЗаполнитьПараметрСтруктурнаяЕдиница(ФормаВладелец, ПараметрыПодбора);
	ЗаполнитьПараметрыНалогообложенияДокумента(ФормаВладелец, ПараметрыПодбора);
	ЗаполнитьТипыНоменклатуры(ФормаВладелец, ИмяТабличнойЧасти, ПараметрыПодбора);
	ЗаполнитьВидыЦенНоменклатуры(ФормаВладелец, ПолноеИмяФормыПодбора, ПараметрыПодбора);
	ЗаполнитьВидСкидкиНаценкиНоменклатуры(ФормаВладелец, ПараметрыПодбора);
	ЗаполнитьДополнительныеПараметры(ФормаВладелец, ПараметрыПодбора);
	ЗаполнитьДисконтнуюКартуНоменклатуры(ФормаВладелец, ПараметрыПодбора);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрСтруктурнаяЕдиница(ФормаВладелец, ПараметрыПодбора)
	Перем СтруктурнаяЕдиница;
	
	Если СтрНайти(ФормаВладелец.ИмяФормы, "ЗаказПокупателя") > 0 
		ИЛИ СтрНайти(ФормаВладелец.ИмяФормы, "ЗаказПоставщику") > 0 Тогда
		
		ФормаВладелец.ЭтотОбъект.Объект.Свойство("СтруктурнаяЕдиницаРезерв", СтруктурнаяЕдиница);
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
	ИначеЕсли ФормаВладелец.ИмяФормы = "Документ.ПеремещениеЗапасов.Форма.ФормаДокумента" Тогда
		
		ФормаВладелец.ЭтотОбъект.Объект.Свойство("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиницаОтправитель", СтруктурнаяЕдиница);
		
		ФормаВладелец.ЭтотОбъект.Объект.Свойство("СтруктурнаяЕдиницаПолучатель", СтруктурнаяЕдиница);
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиницаПолучатель", СтруктурнаяЕдиница);
		
	ИначеЕсли ФормаВладелец.ИмяФормы = "Документ.ЗаказНаПеремещение.Форма.ФормаДокумента" Тогда
		
		ФормаВладелец.ЭтотОбъект.Объект.Свойство("СтруктурнаяЕдиницаРезерв", СтруктурнаяЕдиница);
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиницаОтправитель", СтруктурнаяЕдиница);
		
		ФормаВладелец.ЭтотОбъект.Объект.Свойство("СтруктурнаяЕдиницаПолучатель", СтруктурнаяЕдиница);
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиницаПолучатель", СтруктурнаяЕдиница);
		
	Иначе
		
		ФормаВладелец.ЭтотОбъект.Объект.Свойство("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		ПараметрыПодбора.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаВладелец, "СписокДоступныхСкладов") Тогда
			Если ФормаВладелец.СписокДоступныхСкладов.Количество() Тогда
				ПараметрыПодбора.Вставить("СписокСкладов", ФормаВладелец.СписокДоступныхСкладов);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктурнаяЕдиницаВТабличнойЧасти = Ложь;
	Если СтрНайти(ФормаВладелец.ИмяФормы, "ПриходнаяНакладная") > 0 
		ИЛИ СтрНайти(ФормаВладелец.ИмяФормы, "РасходнаяНакладная") > 0 
		ИЛИ СтрНайти(ФормаВладелец.ИмяФормы, "ЗаказПокупателя") > 0
		ИЛИ СтрНайти(ФормаВладелец.ИмяФормы, "ЧекККМ") > 0 Тогда
		
		СтруктурнаяЕдиницаВТабличнойЧасти = (ФормаВладелец.СкладВШапке <> Истина);
		
	КонецЕсли;
	ПараметрыПодбора.Вставить("СтруктурнаяЕдиницаВТабличнойЧасти", СтруктурнаяЕдиницаВТабличнойЧасти);
	
КонецПроцедуры


// Конец Получение данных из форм-владельцев

#КонецОбласти

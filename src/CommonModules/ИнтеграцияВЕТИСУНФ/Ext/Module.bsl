#Область ИнтеграцияВЕТИСПереопределяемый

// Заполняет реквизит 'ЕдиницаИзмерения' справочника 'ЕдиницыИзмеренияВЕТИС' по ОКЕИ.
//
// Параметры:
//	СправочникОбъект - СправочникОбъект.ЕдиницыИзмеренияВЕТИС - Единица измерения ВЕТИС.
//
Процедура ЗаполнитьЕдиницуИзмеренияПоКлассификаторам(СправочникОбъект) Экспорт
	
	Если СправочникОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеКлассификатораВЕТИС = ИнтеграцияВЕТИСПовтИсп.ДанныеКлассификатораЕдиницИзмеренияВЕТИС();
	СтрокаКлассификатораВЕТИС = ДанныеКлассификатораВЕТИС.Найти(СправочникОбъект.Идентификатор, "ЕдиницаИзмеренияGUID");
	
	Если ЗначениеЗаполнено(СтрокаКлассификатораВЕТИС)
		И ЗначениеЗаполнено(СтрокаКлассификатораВЕТИС.КодОКЕИ) Тогда
		
		КодОКЕИ = СтрокаКлассификатораВЕТИС.КодОКЕИ;
		ЕдиницаИзмерения = ЕдиницаИзмеренияОКЕИ(КодОКЕИ);
		
		Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
			СправочникОбъект.ЕдиницаИзмерения = ЕдиницаИзмерения;
		Иначе
			СправочникОбъект.ЕдиницаИзмерения = СоздатьЕдиницуИзмеренияПоКлассификаторуОКЕИ(КодОКЕИ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();

	// в процедурах обработки заполнения ожидается ссылка
	// поэтому извлекаем ссылку, если в ДанныеЗаполнения получили структуру
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Основание") Тогда
		ДанныеЗаполнения = ДанныеЗаполнения.Основание;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИнвентаризацияПродукцииВЕТИС") Тогда
		ОбработкаЗаполненияИнвентаризацииПродукцииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		ОбработкаЗаполненияДокументаВходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
		ОбработкаЗаполненияПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа
// в форме, а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		Если ДокументОбъект.ГрузополучательПредприятие = ДокументОбъект.ГрузоотправительПредприятие Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДатаТТН");
			МассивНепроверяемыхРеквизитов.Добавить("НомерТТН");
			МассивНепроверяемыхРеквизитов.Добавить("ТипТТН");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
		ПроверитьЗаполнениеИдентификатораПартии(ДокументОбъект, Отказ, МассивНепроверяемыхРеквизитов);
		
		ПараметрыПроверки = ПолучитьПараметрыПроверкиРеквизита(ДокументОбъект, "ИспользоватьХарактеристики", "Характеристика", "Сырье");
		ПроверитьЗаполнениеРеквизита(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
		ПараметрыПроверки = ПолучитьПараметрыПроверкиРеквизита(ДокументОбъект, "ИспользоватьПартии", "Серия", "Сырье");
		ПроверитьЗаполнениеРеквизита(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		ИнтеграцияВЕТИС.ПроверитьЗаполнениеТипаПроисхождения(ДокументОбъект, Отказ, МассивНепроверяемыхРеквизитов);
		ИнтеграцияВЕТИС.ПроверитьЗаполнениеКоличества(ДокументОбъект, Отказ, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	ПараметрыПроверки = ПолучитьПараметрыПроверкиРеквизита(ДокументОбъект, "ИспользоватьХарактеристики", "Характеристика");
	Если ПараметрыПроверки <> Неопределено Тогда
		ПроверитьЗаполнениеРеквизита(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
		ПараметрыПроверки = ПолучитьПараметрыПроверкиРеквизита(ДокументОбъект, "ИспользоватьПартии", "Серия");
		ПроверитьЗаполнениеРеквизита(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
	КонецЕсли;
	
КонецПроцедуры

// Создает временную таблицу "ДокументыИнформационнойБазы", для дальнейшего использования в методе
//	ЗаполнениеДокументовВЕТИС.ДокументОснованиеПоДаннымСвязанныхДокументов.
//	Содержит колонки:
//		* ТипДокумента - ПеречислениеСсылка.ТипыДокументовВЕТИС - тип документа ВЕТИС, служит для определения типа связи со связанными документами;
//		* ПоказательУпорядочивания - ПроизвольныйТип - при определении документа основания, служит для определения приоритета найденных документов;
//		* Документ - ДокументСсылка - документ, который будет определяться как документ-основание;
//		* Дата - Дата - дата входящего документа, по которой будут сопоставляться данные документов ИБ и данные связанных документов;
//		* Номер - Строка - номер входящего документа, по которому будут сопоставляться данные документов ИБ и данные связанных документов;
//	Параметры:
//		ВременныеТаблицы - МенеджерВременныхТаблиц - менеджер временных таблиц запроса, в который будет добавлена создаваемая временная таблица.
//
Процедура ЗаполнитьВременнуюТаблицуСвязанныхДокументовИнформационнойБазы(ВременныеТаблицы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДокументовВЕТИС.ПустаяСсылка) КАК ТипДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ПоказательУпорядочивания,
	|	НЕОПРЕДЕЛЕНО КАК Документ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Дата,
	|	"""" КАК Номер
	|ПОМЕСТИТЬ ДокументыИнформационнойБазы
	|ГДЕ
	|	ЛОЖЬ";
	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

// Определяет заданы ли настройки подключения к сервису интернет поддержки пользователей.
//
Процедура НастройкиПодключенияКСервисуИППЗаданы(НастройкиЗаданы) Экспорт
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		
		НастройкиЗаданы = Истина;
		
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		ДанныеАвторизации = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
		УстановитьПривилегированныйРежим(Ложь);
		
		НастройкиЗаданы = (ДанныеАвторизации <> Неопределено); 
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет параметры поиска хозяйствующего субъекта по элементу справочника конфигурации
//
// Параметры:
// 	ДанныеКонтрагента - (см. ИнтеграцияВЕТИС.ДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта) - параметры поиска
// 	Контрагент        - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на контрагента информационной базы
//
Процедура ЗаполнитьДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта(ДанныеКонтрагента, Контрагент) Экспорт
	
	ДанныеКонтрагента.Вставить("ИНН", "");
	ДанныеКонтрагента.Вставить("КПП", "");
	ДанныеКонтрагента.Вставить("ОГРН", "");
	ДанныеКонтрагента.Вставить("Наименование", "");
	ДанныеКонтрагента.Вставить("НаименованиеПолное", "");
	ДанныеКонтрагента.Вставить("Тип", Перечисления.ТипыХозяйствующихСубъектовВЕТИС.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	"""" КАК ОГРН,
	|	Контрагенты.Наименование КАК Наименование,
	|	"""" КАК НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ЮридическоеЛицо)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо)
	|		КОГДА Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ИндивидуальныйПредприниматель)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ИндивидуальныйПредприниматель)
	|		КОГДА Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ФизическоеЛицо)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ФизическоеЛицо)
	|	КОНЕЦ КАК Тип
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеКонтрагента, Выборка);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет значения реквизитов из справочника физических лиц используемые для создания пользователя ВетИС
//
// Параметры:
// 	ДанныеФизЛица  - (см. ИнтеграцияВЕТИС.ДанныеФизическогоЛица) - структура реквизитов для заполнения
// 	ФизическоеЛицо - ОпределяемыйТип.ФизическоеЛицо - ссылка на физическое лицо информационной базы
//
Процедура ЗаполнитьДанныеФизическогоЛица(ДанныеФизЛица, ФизическоеЛицо) Экспорт
	
	ДанныеФизЛица.Вставить("Фамилия");
	ДанныеФизЛица.Вставить("Имя");
	ДанныеФизЛица.Вставить("Отчество");
	ДанныеФизЛица.Вставить("ДатаРождения");
	ДанныеФизЛица.Вставить("ДокументВид");
	ДанныеФизЛица.Вставить("ДокументТип");
	ДанныеФизЛица.Вставить("ДокументСерия");
	ДанныеФизЛица.Вставить("ДокументНомер");
	ДанныеФизЛица.Вставить("ГражданствоСтрана");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА ФИОФизическихЛицСрезПоследних.Фамилия ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ФИОФизическихЛицСрезПоследних.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА ФИОФизическихЛицСрезПоследних.Имя ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ФИОФизическихЛицСрезПоследних.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА ФИОФизическихЛицСрезПоследних.Отчество ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ФИОФизическихЛицСрезПоследних.Отчество
	|	КОНЕЦ КАК Отчество,
	|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ДокументВид,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК ДокументСерия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК ДокументНомер,
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия) КАК ГражданствоСтрана
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	|		ПО (ФИОФизическихЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|		ПО (ДокументыФизическихЛицСрезПоследних.Физлицо = ФизическиеЛица.Ссылка)
	|			И (ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &ФизическоеЛицо";
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеФизЛица, Выборка);
		
		Если Не ЗначениеЗаполнено(ДанныеФизЛица.Фамилия)
			И Не ЗначениеЗаполнено(ДанныеФизЛица.Имя)
			И Не ЗначениеЗаполнено(ДанныеФизЛица.Отчество) Тогда
			ФИО = ФизическоеЛицо.Наименование;
			ДанныеФизЛица.Фамилия	= ЗарплатаУНФВызовСервера.ВыделитьСлово(ФИО);
			ДанныеФизЛица.Имя		= ЗарплатаУНФВызовСервера.ВыделитьСлово(ФИО);
			ДанныеФизЛица.Отчество	= ЗарплатаУНФВызовСервера.ВыделитьСлово(ФИО);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// В процедуре необходимо определить значения по умолчанию, которые будут подставляться в
// реквизиты не сопоставленных элементов справочника.
//
// Параметры:
//  СобственнаяОрганизация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - значение по умолчанию для собственной организации,
//  СторонняяОрганизация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - значение по умолчанию для сторонней организации.
//
Процедура ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(СобственнаяОрганизация,
		                                              СобственныйТорговыйОбъект,
		                                              СобственныйПроизводственныйОбъект,
		                                              СторонняяОрганизация,
		                                              СтороннийТорговыйОбъект) Экспорт
	
	СобственнаяОрганизация				= УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		Пользователи.ТекущийПользователь(),
		"ОсновнаяОрганизация");
		
	СобственныйТорговыйОбъект			= УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		Пользователи.ТекущийПользователь(),
		"ОсновнойСклад");
		
	СобственныйПроизводственныйОбъект	= УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		Пользователи.ТекущийПользователь(),
		"ОсновноеПодразделение");
		
	СторонняяОрганизация				= Справочники.Контрагенты.ПустаяСсылка();
	СтороннийТорговыйОбъект				= Справочники.Контрагенты.ПустаяСсылка();
	
КонецПроцедуры

// Заполняет структуру данных транспортной накладной для входящей или исходящей транспортной операции по документу-основанию:
//  * Номер - Строка, Неопределено - номер транспортной накладной. Неопределено, если транспортная накладная не найдена.
//  * Дата - Дата, Неопределено - дата транспортной накладной. Неопределено, если транспортная накладная не найдена.
//
// Параметры:
//   ДанныеТТН         - Структура      - Заполняемые поля.
//   ДокументОснование - ДокументСсылка - Ссылка на документ-основание транспортной операции.
//
Процедура ЗаполнитьДанныеТТНДляТранспортнойОперацииПоОснованию(ДанныеТТН, ДокументОснование) Экспорт
	
	Если ДокументОснование.Метаданные().Имя = "ЗаказПокупателя" Тогда
		РеквизитДата = "Финиш";
	Иначе
		РеквизитДата = "Дата";
	КонецЕсли;
	
	СтруктураРеквизитов = Новый ФиксированнаяСтруктура("Номер, " + РеквизитДата, "Номер, Дата");
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, СтруктураРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ДанныеТТН, РеквизитыДокумента);
	
КонецПроцедуры

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов.
//
Процедура ДобавитьКомандуАнализРасхожденийПриПоступленииПродукцииВЕТИС(КомандыОтчетов) Экспорт
	
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.АнализРасхожденийПриПоступленииПродукцииВЕТИС) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер = Метаданные.Отчеты.АнализРасхожденийПриПоступленииПродукцииВЕТИС.ПолноеИмя();
		КомандаОтчет.Представление = НСтр("ru = 'Расхождения при поступлении продукции ВЕТИС'");
		КомандаОтчет.МножественныйВыбор = Истина;
		КомандаОтчет.Важность = "Обычное";
		КомандаОтчет.ДополнительныеПараметры.Вставить("ИмяКоманды", "АнализРасхожденийПриПоступленииПродукцииВЕТИС");
		
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента";
		КомандаОтчет.Важность = "Обычное";
		КомандаОтчет.Порядок = 1;
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает параметры выбора номенклатуры.
//
// Параметры:
//	Форма			- УправляемаяФорма	- Форма, в которой нужно установить параметры выбора.
//	ИмяПоляВвода	- Строка			- Имя поля ввода номенклатуры.
//
Процедура УстановитьПараметрыВыбораНоменклатуры(Форма, ИмяПоляВвода = "ТоварыНоменклатура") Экспорт
	
	ПараметрыВыбора = ОбщегоНазначения.СкопироватьРекурсивно(Форма.Элементы[ИмяПоляВвода].ПараметрыВыбора, Ложь);
	
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Запас));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПодконтрольнаяПродукцияВЕТИС", Истина));
	
	Форма.Элементы[ИмяПоляВвода].ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

// Заполняет количество номенклатуры по количеству ВЕТИС.
//
// Параметры:
//	ТекущаяСтрока	- ДанныеФормыЭлементКоллекции	- Строка табличной части объекта.
//	Суффикс			- Строка						- Окончание наименования колонки, содержащей количество по данным ВЕТИС.
//
Процедура ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИС(ТекущаяСтрока, Суффикс = "") Экспорт
	
	ПересчитатьКоличествоЕдиницПоВЕТИС = Новый Структура("ЕдиницаИзмеренияВЕТИС, Суффикс");
	ЗаполнитьЗначенияСвойств(ПересчитатьКоличествоЕдиницПоВЕТИС, ТекущаяСтрока);
	ПересчитатьКоличествоЕдиницПоВЕТИС.Суффикс = Суффикс;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницПоВЕТИС", ПересчитатьКоличествоЕдиницПоВЕТИС);
	ВыполнитьОперацииПриИзмененииРеквизитовФормы(, ТекущаяСтрока, Неопределено, СтруктураДействий);
	
КонецПроцедуры

// Заполняет количество номенклатуры по количеству ВЕТИС.
//
// Параметры:
//  ТабличнаяЧасть   - ДокументТабличнаяЧасть - табличная часть документа.
//  Суффикс          - Строка                 - суффикс полей "Количество" табличной части
//
Процедура ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИСВТаблице(ТабличнаяЧасть, Суффикс = "") Экспорт
	
	Для Каждого ТекущаяСтрока Из ТабличнаяЧасть Цикл
		
		ПересчитатьКоличествоЕдиницПоВЕТИС = Новый Структура("ЕдиницаИзмеренияВЕТИС, Суффикс");
		ЗаполнитьЗначенияСвойств(ПересчитатьКоличествоЕдиницПоВЕТИС, ТекущаяСтрока);
		ПересчитатьКоличествоЕдиницПоВЕТИС.Суффикс = Суффикс;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницПоВЕТИС", ПересчитатьКоличествоЕдиницПоВЕТИС);
		ВыполнитьОперацииПриИзмененииРеквизитовФормы(, ТекущаяСтрока, Неопределено, СтруктураДействий);
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет идентификатор партии по данным серии в строке табличной части объекта.
//
// Параметры:
//	ТекущаяСтрока - ДанныеФормыЭлементКоллекции - Строка табличной части объекта.
//	Серия - СправочникСсылка - Ссылка на справочник серий, в которой определен реквизит ИдентификаторПартииВЕТИС
//
Процедура ЗаполнитьИдентификаторПартии(ТекущаяСтрока, Серия) Экспорт
	
	// ++( 00-00012169
	ТекущаяСтрока.ИдентификаторПартии = Серия.ИдентификаторПартииВЕТИС;
	// )++ 00-00012169
	// --( 00-00012169
	//Если ЗначениеЗаполнено(ТекущаяСтрока.Серия) Тогда
	//	ТекущаяСтрока.ИдентификаторПартии = ТекущаяСтрока.Серия.ИдентификаторПартииВЕТИС;
	//КонецЕсли;
	// )-- 00-00012169
	
КонецПроцедуры

// Устанавливает служебный признак необходимости заполнения идентификатора партии в строке табличной части объекта.
//
// Параметры:
// - ТабличнаяЧастьТовары - ДанныеФормыКоллекция - Товарная табличная часть объекта.
//
Процедура ЗаполнитьИспользованиеИдентификаторовПартий(ТабличнаяЧастьТовары) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧастьТовары.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧастьТовары.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧастьТовары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТабличнаяЧастьТовары КАК ТабличнаяЧастьТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ СправочникНоменклатура.ИспользоватьИдентификаторПартииВЕТИСПартии
	|	КОНЕЦ КАК ИспользоватьИдентификаторПартии
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО СправочникНоменклатура.Ссылка = ТаблицаТовары.Номенклатура");
	Запрос.УстановитьПараметр("ТабличнаяЧастьТовары", ТабличнаяЧастьТовары.Выгрузить(, "НомерСтроки, Номенклатура, СтатусУказанияСерий"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Для Каждого СтрокаТовары Из ТабличнаяЧастьТовары Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(СтрокаТовары.НомерСтроки, "НомерСтроки") Тогда
			СтрокаТовары.ИспользоватьИдентификаторПартии = Выборка.ИспользоватьИдентификаторПартии;
		Иначе
			СтрокаТовары.ИспользоватьИдентификаторПартии = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет, при необходимости создает серии в документе ВетИС или его выделенных строках
//
// Параметры:
// 	Контекст  - (см. ИнтеграцияВЕТИС.СгенерироватьСерии) - структура входящих данных для заполнения/генерации серий
// 	Результат - (см. ИнтеграцияВЕТИС.СтруктураРезультатЗаполненияСерий) - результат заполнения серий
//
Процедура ЗаполнитьСгенерироватьСерии(Контекст, Результат) Экспорт
	
	СтруктураДействий = Новый Структура();
	ПроверитьСериюРассчитатьСтатус = Новый Структура("ПараметрыУказанияСерий", Контекст.ПараметрыУказанияСерий);
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПроверитьСериюРассчитатьСтатус);
	
	// Инициализация результирующей структуры.
	Результат = Новый Структура("ЗаполнениеЗавершено, СписокОшибок", Ложь, Неопределено);
	
	Запрос = Новый Запрос;
	
	ТабличнаяЧастьУточнения = Контекст.ТоварыУточнение;
	Если ТабличнаяЧастьУточнения = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ЛОЖЬ КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	"""" КАК ИдентификаторПартии,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	0 КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Серия
		|ПОМЕСТИТЬ ВтУточнения";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТаблицаТовары.ЕстьУточнения КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыУточнение.НомерСтроки КАК НомерСтроки,
		|	ТоварыУточнение.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТоварыУточнение.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТоварыУточнение.Номенклатура КАК Номенклатура,
		|	ТоварыУточнение.Характеристика КАК Характеристика,
		|	ТоварыУточнение.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТоварыУточнение.Серия КАК Серия
		|ПОМЕСТИТЬ ВтУточнения
		|ИЗ
		|	&ТоварыУточнение КАК ТоварыУточнение";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = 	ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтрокиТовары,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0) КАК НомерСтрокиУточнения,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ КАК ИдентификаторПартии,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ВтТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПроизводства,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ГоденДо,
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL КАК ОшибкаНетУточнения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель) КАК КоличествоПроизводителей,
	|	ВтТовары.ЕстьУточнения КАК ЕстьУточнения,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьХарактеристики, ЛОЖЬ) КАК НастройкаВидаИспользоватьХарактеристики,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьДатуПроизводстваПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьДатуПроизводстваСерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьСрокГодностиПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьСрокГодностиСерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьИдентификаторПартииВЕТИСПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьПроизводителяВЕТИСПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьПроизводителяВЕТИССерии,
	|	ЕСТЬNULL(СпрНоменклатура.АвтоматическиГенерироватьПартии, ЛОЖЬ) КАК НастройкаВидаАвтоматическиГенерироватьСерии,
	|	СпрНоменклатура.Ссылка КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТОбъединеннаяТаблицаТоваров
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУточнения КАК ВтУточнения
	|		ПО ВтТовары.ИдентификаторСтроки = ВтУточнения.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписиСкладскогоЖурналаВЕТИС
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ВЫБОР
	|				КОГДА ВтТовары.ЕстьУточнения
	|					ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|				ИНАЧЕ ВтТовары.Номенклатура
	|			КОНЕЦ = СпрНоменклатура.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ,
	|	ВтТовары.ЕстьУточнения,
	|	ВтТовары.НомерСтроки,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0),
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL,
	|	ВтТовары.ЗаписьСкладскогоЖурнала,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьХарактеристики, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьДатуПроизводстваПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьСрокГодностиПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьИдентификаторПартииВЕТИСПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьПроизводителяВЕТИСПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.АвтоматическиГенерироватьПартии, ЛОЖЬ),
	|	СпрНоменклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	""ОшибкаНетУточнения"" КАК ТипОшибки,
	|	ЛОЖЬ КАК ЭтоНомерСтрокиУточнений
	|ПОМЕСТИТЬ ВТСтрокиСОшибками
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетНоменклатуры"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНеНужноГенерировать"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетХарактеристики"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьХарактеристики
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетЗаписиСкладскогоЖурнала"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии)
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетДатыПроизводства"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетГоденДо"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ГоденДо = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетИдентификатораПартии"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии = """"
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетПроизводителя"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей = 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаМногоПроизводителей"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей > 1
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения КАК ЕстьУточнения,
	|	"""" КАК Номер,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|			ТОГДА ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ПроизводительВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИдентификаторПартииВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ГоденДо
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПроизводства,
	|	ВТОбъединеннаяТаблицаТоваров.ВладелецСерий КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТРеквизитыСерий
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|			И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии)
	|ГДЕ
	|	НЕ (ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары, ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения) В
	|				(ВЫБРАТЬ
	|					ВТСтрокиСОшибками.НомерСтрокиТовары,
	|					ВТСтрокиСОшибками.НомерСтрокиУточнения
	|				ИЗ
	|					ВТСтрокиСОшибками)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Серия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРеквизитыСерий.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТРеквизитыСерий.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТРеквизитыСерий.ЕстьУточнения КАК ЕстьУточнения,
	|	ВТРеквизитыСерий.Номер КАК Номер,
	|	ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВТРеквизитыСерий.ПроизводительВЕТИС КАК ПроизводительВЕТИС,
	|	ВТРеквизитыСерий.ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
	|	ВТРеквизитыСерий.ГоденДо КАК ГоденДо,
	|	ВТРеквизитыСерий.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТРеквизитыСерий.ВладелецСерий КАК Владелец,
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)) КАК Серия
	|ИЗ
	|	ВТРеквизитыСерий КАК ВТРеквизитыСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВТРеквизитыСерий.Номер = СерииНоменклатуры.Номер
	|			И ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС = СерииНоменклатуры.ЗаписьСкладскогоЖурналаВЕТИС
	|			И ВТРеквизитыСерий.ПроизводительВЕТИС = СерииНоменклатуры.ПроизводительВЕТИС
	|			И ВТРеквизитыСерий.ИдентификаторПартииВЕТИС = СерииНоменклатуры.ИдентификаторПартииВЕТИС
	|			И ВТРеквизитыСерий.ВладелецСерий = СерииНоменклатуры.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСтрокиСОшибками.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТСтрокиСОшибками.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТСтрокиСОшибками.ТипОшибки КАК ТипОшибки,
	|	ВТСтрокиСОшибками.ЭтоНомерСтрокиУточнений КАК ЭтоНомерСтрокиУточнений
	|ИЗ
	|	ВТСтрокиСОшибками КАК ВТСтрокиСОшибками
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиТовары,
	|	НомерСтрокиУточнения";
	
	Запрос.Текст = ТекстЗапроса;
	Если ТипЗнч(Контекст.Товары) = Тип("ДанныеФормыКоллекция") Тогда
		Запрос.УстановитьПараметр("ТаблицаТовары", Контекст.Товары.Выгрузить(Контекст.МассивСтрок));
	ИначеЕсли ТипЗнч(Контекст.Товары) = Тип("ТаблицаЗначений") Тогда
		Запрос.УстановитьПараметр("ТаблицаТовары", Контекст.Товары.Скопировать(Контекст.МассивСтрок));
	Иначе
		ВызватьИсключение НСтр("ru = 'Неправильный тип параметра Контекст.Товары метода ИнтеграцияВЕТИСУНФ.ЗаполнитьСгенерироватьСерии'");
	КонецЕсли;
	
	Если ТабличнаяЧастьУточнения <> Неопределено Тогда
		Запрос.УстановитьПараметр("ТоварыУточнение", ТабличнаяЧастьУточнения.Выгрузить());
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОшибок         = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить();
	ТаблицаУстановкиСерий = РезультатыЗапроса[РезультатыЗапроса.ВГраница()-1].Выгрузить();
	
	Результат.ЗаполнениеЗавершено = ТаблицаОшибок.Количество() = 0 И ТаблицаУстановкиСерий.Количество() > 0;
	
	Для Каждого СтрТабл Из ТаблицаОшибок Цикл
		
		Если СтрТабл.ТипОшибки = "ОшибкаНетУточнения" Тогда
			ПолеОшибки = "Объект.Товары.НомерСтроки";
			
			ТекстСообщения = НСтр("ru = 'По строке %НомерСтроки% указано, что должны быть уточнения, но строки уточнения не введены.'");
			
		Иначе
			
			Если СтрТабл.ТипОшибки = "ОшибкаНетНоменклатуры" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана номенклатура.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана номенклатура.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНеНужноГенерировать" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетХарактеристики" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характеристик.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Характеристика";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характеристик.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетЗаписиСкладскогоЖурнала" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'Для строки %НомерСтроки% не загружена запись складского журнала ВЕТИС. Выполните обмен с ВЕТИС.'");

			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетДатыПроизводства" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана запись складского журнала ВЕТИС, в которой не заполнена дата начала производства. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетГоденДо" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой не заполнена дата начала периода срока годности. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетПроизводителя" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой не заполнен производитель. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаМногоПроизводителей" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой указано более одного производителя. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетИдентификатораПартии" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указан идентификатор партии ВЕТИС.'");
				Иначе
					ПолеОшибки = "Объект.Товары.ИдентификаторПартии";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указан идентификатор партии ВЕТИС.'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрТабл.НомерСтрокиТовары);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения, Неопределено, СтрТабл.НомерСтрокиТовары - 1);
	КонецЦикла;
	
	СозданныеСерии = Новый ТаблицаЗначений;
	СозданныеСерии.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
	
	СозданныеСерии.Колонки.Добавить("Владелец", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СозданныеСерии.Колонки.Добавить("ЗаписьСкладскогоЖурналаВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ЗаписиСкладскогоЖурналаВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ПроизводительВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ПредприятияВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ИдентификаторПартииВЕТИС", Новый ОписаниеТипов("Строка"));
	СозданныеСерии.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
	СозданныеСерии.Колонки.Добавить("ДатаПроизводства", Новый ОписаниеТипов("Дата"));
	
	ПоляПоиска = "ЗаписьСкладскогоЖурналаВЕТИС,ПроизводительВЕТИС,ИдентификаторПартииВЕТИС,ГоденДо,ДатаПроизводства";
	
	СозданныеСерии.Индексы.Добавить(ПоляПоиска);
	
	СтруктураОтбора = Новый Структура(ПоляПоиска);
	
	Для Каждого СтрТабл Из ТаблицаУстановкиСерий Цикл
		
		Если ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			Серия = СтрТабл.Серия;
		Иначе
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрТабл);
			НайденныеСтроки = СозданныеСерии.НайтиСтроки(СтруктураОтбора);
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				Серия = НайденныеСтроки[0].Серия;
			Иначе
				
				Серия = СоздатьСерию(СтрТабл, Результат);
				
				Если Не ЗначениеЗаполнено(Серия) Тогда
					Результат.ЗаполнениеЗавершено = Ложь;
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СозданныеСерии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
				НоваяСтрока.Серия = Серия;
				
			КонецЕсли;
			
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура();
		
		Если СтрТабл.ЕстьУточнения Тогда
			СтруктураПоиска.Вставить("НомерСтроки", СтрТабл.НомерСтрокиУточнения);
			НайденныеСтроки = ТабличнаяЧастьУточнения.НайтиСтроки(СтруктураПоиска);
		Иначе
			СтруктураПоиска.Вставить("НомерСтроки", СтрТабл.НомерСтрокиТовары);
			НайденныеСтроки = Контекст.Товары.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Результат.ЗаполнениеЗавершено = Ложь;
		Иначе
			СтрокаТЧ = НайденныеСтроки[0];
			СтрокаТЧ.Серия = Серия;
			ВыполнитьОперацииПриИзмененииРеквизитовФормы(, СтрокаТЧ, Неопределено, СтруктураДействий);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет, при необходимости создает серии в документе ВетИС или его выделенных строках
//
// Параметры:
// 	Объект - ДанныеФормыСтруктура - объект для заполнения
// 	Товары - ДанныеФормыКоллекция, ТаблицаЗначений - ТЧ документа
// 	ВыделенныеСтроки - Массив - выделенные строки документа
// 	ПараметрыУказанияСерий - (См. ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерий)
// 	ТоварыУточнение - Неопределено, ДанныеФормыКоллекция - Дополнительная ТЧ, содержащая расшифровку строк товаров
// 	РезультатЗаполненияСерий - (См. ИнтеграцияВЕТИС.СтруктураРезультатЗаполненияСерий)
//
Процедура ПриГенерацииСерий(Объект, Товары, ВыделенныеСтроки, ПараметрыУказанияСерий, ТоварыУточнение, РезультатЗаполненияСерий) Экспорт

	МассивСтрок = Новый Массив;
	
	Если ТипЗнч(Товары) = Тип("ДанныеФормыКоллекция") Тогда
		Для Каждого Строка Из ВыделенныеСтроки Цикл
			МассивСтрок.Добавить(Товары.НайтиПоИдентификатору(Строка));
		КонецЦикла;
	ИначеЕсли ТипЗнч(Товары) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Строка Из ВыделенныеСтроки Цикл
			МассивСтрок.Добавить(Товары[Строка]);
		КонецЦикла;
	Иначе
		ВызватьИсключение НСтр("ru = 'Неправильный тип параметра Товары метода СгенерироватьСерии'");
	КонецЕсли;
	
	КонтекстЗаполненияСерий = Новый Структура;
	КонтекстЗаполненияСерий.Вставить("Объект",                 Объект);
	КонтекстЗаполненияСерий.Вставить("Товары",                 Товары);
	КонтекстЗаполненияСерий.Вставить("МассивСтрок",            МассивСтрок);
	КонтекстЗаполненияСерий.Вставить("ПараметрыУказанияСерий", ПараметрыУказанияСерий);
	КонтекстЗаполненияСерий.Вставить("ТоварыУточнение",        ТоварыУточнение);
	
	ЗаполнитьСгенерироватьСерии(КонтекстЗаполненияСерий, РезультатЗаполненияСерий);

КонецПроцедуры

// Процедура заполняет признак использования комиссии при закупках или производства из давальческого сырья.
//
// Параметры:
//   Используется - Булево - Признак использования комиссии при закупках или производства из давальческого сырья.
//
Процедура ИспользуетсяКомиссияПриЗакупкахИлиПереработкаДавальческогоСырья(Используется) Экспорт
	
	Используется = ПолучитьФункциональнуюОпцию("ПередачаТоваровНаКомиссию");
	
	Используется = Используется ИЛИ ПолучитьФункциональнуюОпцию("ПереработкаДавальческогоСырья");
	
КонецПроцедуры

// Процедура заполняет признак использования производства на стороне.
//
// Параметры:
//   Используется - Булево - Признак использования производства на стороне.
//
Процедура ИспользуетсяПереработкаНаСтороне(Используется) Экспорт
	
	Используется = ПолучитьФункциональнуюОпцию("ПередачаСырьяВПереработку");
	
КонецПроцедуры

// Процедура заполняет использование идентификатора партии в сериях в разрезе номенклатуры.
//
// Параметры:
//   Требуется    - Булево                       - Признак использования идентификатора партии в сериях номенклатуры.
//   Номенклатура - ОпределяемыйТип.Номенклатура - элемент номенклатуры.
//
Процедура ТребуетсяУказаниеИдентификатораПартииНоменклатуры(Требуется, Номенклатура) Экспорт
	
	ИспользоватьИдентификаторПартии = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ИспользоватьИдентификаторПартииВЕТИСПартии");
	
	Если ИспользоватьИдентификаторПартии = Неопределено Тогда
		Требуется = Ложь;
	ИначеЕсли ИспользоватьИдентификаторПартии = NULL Тогда
		Требуется = Ложь;
	Иначе
		Требуется = ИспользоватьИдентификаторПартии;
	КонецЕсли;
	
КонецПроцедуры

// Процедура определяет использование транспортных средств
//
// Параметры:
//   Указывается - Булево - Признак использования транспортных средств.
//
Процедура УказываетсяТранспортноеСредство(Указывается) Экспорт
	
	Указывается = Истина;
	
КонецПроцедуры

// Заполняет данные реквизитов пункта маршрута ВетИС получаемые из транспортного средства
//
// Параметры:
//   Реквизиты - Структура - возможные реквизиты пункта маршрута ВетИС с данными транспортного средства
//   ТранспортноеСредство - ОпределяемыйТип.ТранспортныеСредстваВЕТИС - транспортное средство
//
Процедура ПриОпределенииРеквизитовТранспортногоСредства(Реквизиты, ТранспортноеСредство) Экспорт
	
	Реквизиты = Новый Структура("НомерТранспортногоСредства, НомерАвтомобильногоПрицепа", "", "");
	
	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТранспортноеСредство, "Код");
		Реквизиты.НомерТранспортногоСредства = ЗначенияРеквизитов.Код;
		
	КонецЕсли;
	
КонецПроцедуры

// В процедуре необходимо реализовать запись сопоставления хозяйствующих субъектов и предприятий с прикладными
//   справочниками конфигурации
//
// Параметры:
//  ДокументОснование - ДокументСсылка, ДокументОбъект - прикладной документ конфигурации,
//  ДокументОбъект    - ДокументСсылка, ДокументОбъект - связанный с ним документ библиотеки.
//
Процедура ЗаполнитьСоответствиеШапкиОбъектов(ДокументОснование, ДокументОбъект) Экспорт
	
	ТипДокументаВЕТИС = ТипЗнч(ДокументОбъект);
	Если ТипДокументаВЕТИС = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС")
		Или ТипДокументаВЕТИС = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
			ЗаполнитьСоответствиеШапкиДляВходящейТранспортнойОперацииВЕТИС(ДокументОснование, ДокументОбъект);
	ИначеЕсли ТипДокументаВЕТИС = Тип("ДокументСсылка.ИсходящаяТранспортнаяОперацияВЕТИС")
		Или ТипДокументаВЕТИС = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
			ЗаполнитьСоответствиеШапкиДляИсходящейТранспортнойОперацииВЕТИС(ДокументОснование, ДокументОбъект);
	ИначеЕсли ТипДокументаВЕТИС = Тип("ДокументСсылка.ПроизводственнаяОперацияВЕТИС")
		Или ТипДокументаВЕТИС = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
			ЗаполнитьСоответствиеШапкиДляПроизводственнойОперацииВЕТИС(ДокументОснование, ДокументОбъект);
	ИначеЕсли ТипДокументаВЕТИС = Тип("ДокументСсылка.ИнвентаризацияПродукцииВЕТИС")
		Или ТипДокументаВЕТИС = Тип("ДокументОбъект.ИнвентаризацияПродукцииВЕТИС") Тогда
			ЗаполнитьСоответствиеШапкиДляИнвентаризацииПродукцииВЕТИС(ДокументОснование, ДокументОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеШапкиДляВходящейТранспортнойОперацииВЕТИС(ДокументОснование, ДокументОбъект)
	
	ЗаписьДокументаВЕТИС = ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС");
	РеквизитыВЕТИС = Реквизиты(ДокументОбъект,
		"ГрузоотправительПредприятие,ГрузоотправительХозяйствующийСубъект,ГрузополучательПредприятие,ГрузополучательХозяйствующийСубъект",
		ЗаписьДокументаВЕТИС);
	ТипОснования = ТипЗнч(ДокументОснование);
	
	Если ТипОснования = Тип("ДокументСсылка.ПеремещениеЗапасов")
		Или ТипОснования = Тип("ДокументОбъект.ПеремещениеЗапасов") Тогда
		
		РеквизитыШапки = Реквизиты(ДокументОснование,
			"СтруктурнаяЕдиница,Организация,СтруктурнаяЕдиницаПолучатель",
			Не ЗаписьДокументаВЕТИС);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузоотправительХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузоотправительПредприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиница,
			Истина);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузополучательХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузополучательПредприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиницаПолучатель,
			Истина);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПриходнаяНакладная")
		Или ТипОснования = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
		
		РеквизитыШапки = Реквизиты(ДокументОснование,
			"Контрагент,СтруктурнаяЕдиница,Организация",
			Не ЗаписьДокументаВЕТИС);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузоотправительХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузоотправительПредприятие,
			РеквизитыШапки.Контрагент,
			Справочники.Контрагенты.ПустаяСсылка(),
			Ложь);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузополучательХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузополучательПредприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиница,
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеШапкиДляИсходящейТранспортнойОперацииВЕТИС(ДокументОснование, ДокументОбъект)
	
	ЗаписьДокументаВЕТИС = ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС");
	РеквизитыВЕТИС = Реквизиты(ДокументОбъект,
		"ГрузоотправительПредприятие,ГрузоотправительХозяйствующийСубъект,ГрузополучательПредприятие,ГрузополучательХозяйствующийСубъект",
		ЗаписьДокументаВЕТИС);
	ТипОснования = ТипЗнч(ДокументОснование);
	
	Если ТипОснования = Тип("ДокументСсылка.ПеремещениеЗапасов")
		Или ТипОснования = Тип("ДокументОбъект.ПеремещениеЗапасов") Тогда
		
		РеквизитыШапки = Реквизиты(ДокументОснование,
			"СтруктурнаяЕдиница,Организация,СтруктурнаяЕдиницаПолучатель",
			Не ЗаписьДокументаВЕТИС);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузоотправительХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузоотправительПредприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиница,
			Истина);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузополучательХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузополучательПредприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиницаПолучатель,
			Истина);
				
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.РасходнаяНакладная")
		Или ТипОснования = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
		
		РеквизитыШапки = Реквизиты(ДокументОснование,
			"Контрагент,СтруктурнаяЕдиница,Организация",
			Не ЗаписьДокументаВЕТИС);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузополучательХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузополучательПредприятие,
			РеквизитыШапки.Контрагент,
			Справочники.Контрагенты.ПустаяСсылка(),
			Ложь);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ГрузоотправительХозяйствующийСубъект,
			РеквизитыВЕТИС.ГрузоотправительПредприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиница,
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеШапкиДляПроизводственнойОперацииВЕТИС(ДокументОснование, ДокументОбъект)
	
	ЗаписьДокументаВЕТИС = ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС");
	РеквизитыВЕТИС = Реквизиты(ДокументОбъект,
		"ХозяйствующийСубъект,Предприятие",
		ЗаписьДокументаВЕТИС);
	ТипОснования = ТипЗнч(ДокументОснование);
	
	Если ТипОснования = Тип("ДокументСсылка.СборкаЗапасов")
		Или ТипОснования = Тип("ДокументОбъект.СборкаЗапасов") Тогда
		
		РеквизитыШапки = Реквизиты(ДокументОснование,
			"Организация,СтруктурнаяЕдиница",
			Не ЗаписьДокументаВЕТИС);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ХозяйствующийСубъект,
			РеквизитыВЕТИС.Предприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиница,
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеШапкиДляИнвентаризацииПродукцииВЕТИС(ДокументОснование, ДокументОбъект)
	
	ЗаписьДокументаВЕТИС = ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИнвентаризацияПродукцииВЕТИС");
	РеквизитыВЕТИС = Реквизиты(ДокументОбъект,
		"ХозяйствующийСубъект,Предприятие",
		ЗаписьДокументаВЕТИС);
	ТипОснования = ТипЗнч(ДокументОснование);
	
	Если ТипОснования = Тип("ДокументСсылка.СписаниеЗапасов")
		Или ТипОснования = Тип("ДокументОбъект.ОприходованиеЗапасов")
		Или ТипОснования = Тип("ДокументСсылка.ИнвентаризацияЗапасов") Тогда
		
		РеквизитыШапки = Реквизиты(ДокументОснование,
			"Организация,СтруктурнаяЕдиница",
			Не ЗаписьДокументаВЕТИС);
		Справочники.ХозяйствующиеСубъектыВЕТИС.СопоставитьСПрикладнымиРеквизитами(
			РеквизитыВЕТИС.ХозяйствующийСубъект,
			РеквизитыВЕТИС.Предприятие,
			РеквизитыШапки.Организация,
			РеквизитыШапки.СтруктурнаяЕдиница,
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РасчетСтатусовОформленияВЕТИСПереопределяемый

// Позволяет переопределить имена реквизитов документа-основания для документа ВЕТИС.
//
// Параметры:
//	МетаданныеДокументаОснования - ОбъектМетаданных:Документ - метаданные документа из ОпределяемыйТип.Основание<Имя документа ВЕТИС>
//	МетаданныеДокументаВЕТИС 	 - ОбъектМетаданных:Документ - метаданные документа из ОпределяемыйТип.ДокументыВЕТИСПоддерживающиеСтатусыОформления
//	Реквизиты 					 - Структура - имена реквизитов
//		Ключ 	 - служебное имя реквизита в ВЕТИС
//		Значение - имя реквизита документа-основания, которое при необходимости надо переопределить
//			Подробнее см. описание РасчетСтатусовОформленияВЕТИС.СтруктураРеквизитовДляРасчетаСтатусаОформленияДокументовВЕТИС	
//
Процедура ПриОпределенииИменРеквизитовДокументаДляРасчетаСтатусаОформленияДокументаВЕТИС(
			Знач МетаданныеДокументаОснования, Знач МетаданныеДокументаВЕТИС, Реквизиты) Экспорт
	
	// Зададим имена реквизитов по умолчанию.
	Реквизиты.Контрагент						= "Организация";
	Реквизиты.ТорговыйИлиПроизводственныйОбъект	= "СтруктурнаяЕдиница";
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
		Реквизиты.Ответственный = "Ответственный";
	Иначе
		Реквизиты.Ответственный = "Автор";
	КонецЕсли;
		
	// Уточним имена реквизитов для конкретных документов.
	Если МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеЗапасов Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СтруктурнаяЕдиница";
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СтруктурнаяЕдиницаПолучатель";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ЗаказПокупателя Тогда
		
		Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СтруктурнаяЕдиницаПродажи";
		
	КонецЕсли;
	
КонецПроцедуры

// Позволяет переопределить текст запроса выборки данных из документов-основания для расчета статуса оформления.
//
// Параметры:
//	МетаданныеДокументаОснования - ОбъектМетаданных:Документ - метаданные документа из ОпределяемыйТип.Основание<Имя документа ВЕТИС>
//	МетаданныеДокументаВЕТИС 	 - ОбъектМетаданных:Документ - метаданные документа из ОпределяемыйТип.ДокументыВЕТИСПоддерживающиеСтатусыОформления
//	ТекстЗапроса 				 - Строка - текст запроса выборки данных, который надо переопределить
//		Требования к тексту запроса:
//		- результат запроса обязательно должен содержать следующие поля:
//			- Ссылка 			- ОпределяемыйТип.Основание<Имя документа ВЕТИС> - ссылка на документ-основание
//			- ЭтоДвижениеПриход - Булево - вид движения ТМЦ (Истина - приход, Ложь - расход)
//			- Номенклатура 		- ОпределяемыйТип.Номенклатура - номенклатура
//			- Характеристика 	- ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика номенклатуры
//			- Серия 			- ОпределяемыйТип.СерияНоменклатуры - серия номенклатуры
//			- Количество 		- Число - количество номенклатуры в ее основной единице измерения
//		- в результат запроса нужно включать только подконтрольную номенклатуру ВЕТИС
//		- для отбора документов-основания в запросе нужно использовать отбор "В (&МассивДокументов)"
//		- выбранные данные необходимо поместить во временную таблицу,
//			см. РасчетСтатусовОформленияВЕТИС.ИмяВременнойТаблицыДляВыборкиДанныхДокумента
//		Если данные из документа выбирать не требуется, то данному параметру надо присвоить значение "" (пустая строка).
//	ДополнительныеПараметрыЗапроса - Структура - дополнительные параметры запроса,
//	 	требуемые для выполнения запроса конкретного документа; при необходимости можно дополнить данную структуру
//		- Ключ 	   - имя параметры
//		- Значение - значение параметра
//
Процедура ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформленияДокументаВЕТИС(
			Знач МетаданныеДокументаОснования, Знач МетаданныеДокументаВЕТИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеЗапасов Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.ОприходованиеЗапасов.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.ОприходованиеЗапасов.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ИСТИНА КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка 
			|		И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеЗапасов Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			// не формируем - будет получен через обмен
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.ПеремещениеЗапасов.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка 
			|		И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаЗапасов Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.НоменклатураОприходование КАК НоменклатураОприходование,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.ПересортицаЗапасов.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.ПересортицаЗапасов.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СерииОприходование.Ссылка КАК Ссылка,
			|	СерииОприходование.Количество КАК Количество,
			|	СерииОприходование.Серия КАК Серия,
			|	СерииОприходование.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_СерииОприходование
			|ИЗ
			|	Документ.ПересортицаЗапасов.СерииНоменклатурыОприходование КАК СерииОприходование
			|ГДЕ
			|	СерииОприходование.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка 
			|		И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка,
			|	ИСТИНА,
			|	ВТ_Запасы.НоменклатураОприходование,
			|	ВТ_Запасы.ХарактеристикаОприходование,
			|	ВЫБОР
			|		КОГДА ВТ_СерииОприходование.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_СерииОприходование.Серия
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ВТ_СерииОприходование.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_СерииОприходование.Количество
			|	КОНЕЦ
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СерииОприходование КАК ВТ_СерииОприходование
			|		ПО ВТ_Запасы.Ссылка = ВТ_СерииОприходование.Ссылка 
			|		И ВТ_Запасы.КлючСвязи = ВТ_СерииОприходование.КлючСвязи";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РасходнаяНакладная Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.РасходнаяНакладная.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И НЕ Запасы.Ссылка.СпособПродажиГИСМ = ""роз""
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.РасходнаяНакладная.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка
			|			И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи";
			
		КонецЕсли;
		
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОПереработке Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.ОтчетОПереработке.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.ОтчетОПереработке.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка
			|			И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи";
			
		КонецЕсли;

	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ЗаказПокупателя Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.ЗаказПокупателя.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|	И Запасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.ЗаказПокупателя.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка
			|			И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи";
			
		КонецЕсли;
			
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеЗапасов Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.СписаниеЗапасов.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.СписаниеЗапасов.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка
			|			И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаЗапасов Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ПроизводственнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Запасы.Ссылка КАК Ссылка,
			|	Запасы.Номенклатура КАК Номенклатура,
			|	Запасы.Характеристика КАК Характеристика,
			|	Запасы.Количество КАК Количество,
			|	Запасы.КлючСвязи КАК КлючСвязи,
			|	ВЫБОР
			|		КОГДА Запасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
			|			ТОГДА ИСТИНА
			|		КОГДА Запасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
			|			ТОГДА ЛОЖЬ
			|	КОНЕЦ КАК ЭтоДвижениеПриход
			|ПОМЕСТИТЬ ВТ_Запасы
			|ИЗ
			|	Документ.СборкаЗапасов.Запасы КАК Запасы
			|ГДЕ
			|	Запасы.Ссылка В(&МассивДокументов)
			|	И Запасы.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продукция.Ссылка КАК Ссылка,
			|	Продукция.Номенклатура КАК Номенклатура,
			|	Продукция.Характеристика КАК Характеристика,
			|	Продукция.Количество КАК Количество,
			|	Продукция.КлючСвязи КАК КлючСвязи,
			|	ВЫБОР
			|		КОГДА Продукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
			|			ТОГДА ЛОЖЬ
			|		КОГДА Продукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
			|			ТОГДА ИСТИНА
			|	КОНЕЦ КАК ЭтоДвижениеПриход
			|ПОМЕСТИТЬ ВТ_Продукция
			|ИЗ
			|	Документ.СборкаЗапасов.Продукция КАК Продукция
			|ГДЕ
			|	Продукция.Ссылка В(&МассивДокументов)
			|	И Продукция.Номенклатура.ПодконтрольнаяПродукцияВЕТИС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Серии.Ссылка КАК Ссылка,
			|	Серии.Количество КАК Количество,
			|	Серии.Серия КАК Серия,
			|	Серии.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_Серии
			|ИЗ
			|	Документ.СборкаЗапасов.СерииНоменклатуры КАК Серии
			|ГДЕ
			|	Серии.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СерииПродукция.Ссылка КАК Ссылка,
			|	СерииПродукция.Количество КАК Количество,
			|	СерииПродукция.Серия КАК Серия,
			|	СерииПродукция.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ ВТ_СерииПродукция
			|ИЗ
			|	Документ.СборкаЗапасов.СерииНоменклатурыПродукция КАК СерииПродукция
			|ГДЕ
			|	СерииПродукция.Ссылка В(&МассивДокументов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Запасы.Ссылка КАК Ссылка,
			|	ВТ_Запасы.ЭтоДвижениеПриход КАК ЭтоДвижениеПриход,
			|	ВТ_Запасы.Номенклатура КАК Номенклатура,
			|	ВТ_Запасы.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_Серии.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Запасы.Количество
			|		ИНАЧЕ ВТ_Серии.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ %ВТ%
			|ИЗ
			|	ВТ_Запасы КАК ВТ_Запасы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
			|		ПО ВТ_Запасы.Ссылка = ВТ_Серии.Ссылка
			|			И ВТ_Запасы.КлючСвязи = ВТ_Серии.КлючСвязи
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_Продукция.Ссылка КАК Ссылка,
			|	ВТ_Продукция.ЭтоДвижениеПриход КАК ЭтоДвижениеПриход,
			|	ВТ_Продукция.Номенклатура КАК Номенклатура,
			|	ВТ_Продукция.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ВТ_СерииПродукция.Серия ЕСТЬ NULL
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ВТ_СерииПродукция.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА ВТ_СерииПродукция.Серия ЕСТЬ NULL
			|			ТОГДА ВТ_Продукция.Количество
			|		ИНАЧЕ ВТ_СерииПродукция.Количество
			|	КОНЕЦ КАК Количество
			|ИЗ
			|	ВТ_Продукция КАК ВТ_Продукция
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СерииПродукция КАК ВТ_СерииПродукция
			|		ПО ВТ_Продукция.Ссылка = ВТ_СерииПродукция.Ссылка
			|			И ВТ_Продукция.КлючСвязи = ВТ_СерииПродукция.КлючСвязи";
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяВременнойТаблицы = РасчетСтатусовОформленияИС.ИмяВременнойТаблицыДляВыборкиДанныхДокумента();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВТ%", ИмяВременнойТаблицы);
	
КонецПроцедуры

#КонецОбласти

#Область СобытияФормВЕТИСПереопределяемый

// Выполняет действия при изменении номенклатуры в таблице Товары.
//
// Параметры:
//	Форма					- УправляемаяФорма				- Форма, в которой произошло событие.
//	ТекущаяСтрока			- ДанныеФормыЭлементКоллекции 	- Строка таблицы товаров.
//	КэшированныеЗначения	- Структура						- Сохраненные значения параметров, используемых при обработке строки таблицы.
//	ПараметрыЗаполнения		- Структура						- См. функцию ИнтеграцияВЕТИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти.
//	ПараметрыУказанияСерий	- Структура						- Состав полей определен в функции 
//																НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Процедура ПриИзмененииНоменклатуры(Форма,
								ТекущаяСтрока,
								КэшированныеЗначения,
								ПараметрыЗаполнения,
								ПараметрыУказанияСерий = Неопределено) Экспорт
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", ТекущаяСтрока.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", ТекущаяСтрока.Характеристика);
	
	// Характеристики
	СтруктураДанные.Вставить("ИспользоватьХарактеристики", Ложь);
	СтруктураДанные.Вставить("ПроверятьЗаполнениеХарактеристики", Ложь);
	
	Если ЗначениеЗаполнено(СтруктураДанные.Номенклатура) И СтруктураДанные.Номенклатура.ИспользоватьХарактеристики
		Тогда
		ЗначенияПоУмолчанию = НоменклатураВДокументахСервер.ЗначенияНоменклатурыПоУмолчанию(СтруктураДанные.Номенклатура);
		
		Если Не ЗначенияПоУмолчанию = Неопределено
			Тогда
			ХарактеристикаПоУмолчанию = ЗначенияПоУмолчанию;
		КонецЕсли;
		
		СтруктураДанные.Характеристика = ?(ЗначениеЗаполнено(СтруктураДанные.Характеристика), СтруктураДанные.Характеристика, ХарактеристикаПоУмолчанию);
		
		СтруктураДанные.Вставить("ИспользоватьХарактеристики", Истина);
		СтруктураДанные.Вставить("ПроверятьЗаполнениеХарактеристики", СтруктураДанные.Номенклатура.ПроверятьЗаполнениеХарактеристики);
	КонецЕсли; 
	// Конец Характеристики
	
	// ++( 00-00012169
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Серия") Тогда
		ИмяФормы = Форма.ИмяФормы;
		ИнтеграцияИСМПУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ТекущаяСтрока, ИмяФормы);
	КонецЕсли;
	// )++ 00-00012169
	// --( 00-00012169
	//Партии
	//СтруктураДанные.Вставить("ИспользоватьПартии", Ложь);
	//СтруктураДанные.Вставить("ПроверятьЗаполнениеПартий", Ложь);
	//СтруктураДанные.Вставить("Партия", Неопределено);
	//
	//Если ЗначениеЗаполнено(СтруктураДанные.Номенклатура) И СтруктураДанные.Номенклатура.ИспользоватьПартии
	//	Тогда
	//	
	//	Если ТекущаяСтрока.Свойство("СтатусУказанияСерий") Тогда
	//		ТекущаяСтрока.СтатусУказанияСерий = 1;
	//	КонецЕсли;
	//	
	//	ЗначенияПартииПоУмолчанию = НоменклатураВДокументахСервер.ЗначенияПартийНоменклатурыПоУмолчанию(СтруктураДанные.Номенклатура);
	//	
	//	ПартияПоУмолчанию = Справочники.ПартииНоменклатуры.ПустаяСсылка();
	//	
	//	Если Не ЗначенияПартииПоУмолчанию = Неопределено
	//		Тогда
	//		ПартияПоУмолчанию = ЗначенияПартииПоУмолчанию;
	//	КонецЕсли;
	//	
	//	СтруктураДанные.Партия = ?(ЗначениеЗаполнено(СтруктураДанные.Партия), СтруктураДанные.Партия, ПартияПоУмолчанию);
	//	
	//	СтруктураДанные.ПроверятьЗаполнениеПартий = СтруктураДанные.Номенклатура.ПроверятьЗаполнениеПартий;
	//	СтруктураДанные.ИспользоватьПартии = Истина;
	//
	//КонецЕсли;
	//// Конец Партии
	// )-- 00-00012169
	
	Если СтруктураДанные.ИспользоватьХарактеристики
		Тогда
		ТекущаяСтрока.Характеристика = СтруктураДанные.Характеристика;
	КонецЕсли;
	
	// --( 00-00012169
	//Если СтруктураДанные.ИспользоватьПартии
	//	Тогда
	//	ТекущаяСтрока.Серия = СтруктураДанные.Партия;
	//КонецЕсли;
	// )-- 00-00012169
	
КонецПроцедуры

// Заполняет табличную часть Товары подобранными товарами.
//
// Параметры:
//  Форма - УправляемаяФорма - форма, в которой производится подбор,
//  ВыбранноеЗначение - Произвольный - данные, содержащие подобранную пользователем номенклатуру,
//  ПараметрыЗаполнения - Структура - см. функцию СобытияФормВЕТИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти.
//	ПараметрыУказанияСерий	- Структура						- Состав полей определен в функции 
//																НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Процедура ОбработкаРезультатаПодбораНоменклатуры(Форма,
												ВыбранноеЗначение,
												ПараметрыЗаполнения,
												ПараметрыУказанияСерий = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения.Свойство("ИмяТабличнойЧасти") Тогда
		ИмяТЧ = ПараметрыЗаполнения.ИмяТабличнойЧасти;
	Иначе
		ИмяТЧ = "Товары";
	КонецЕсли;
	
	Если ВыбранноеЗначение.Свойство("АдресТоваровВХранилище") Тогда
		АдресТоваровВХранилище = ВыбранноеЗначение.АдресТоваровВХранилище
	Иначе
		АдресТоваровВХранилище = ВыбранноеЗначение.АдресКорзиныВХранилище
	КонецЕсли;
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	
	ТекущаяСтрока = Неопределено;
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Форма.Объект[ИмяТЧ].Добавить();
		
		СписокСвойств = "Номенклатура, Характеристика";
		Если ТекущаяСтрока.Свойство("КоличествоУпаковок") Тогда
			СписокСвойств = СписокСвойств + ", КоличествоУпаковок";
		КонецЕсли;
		Если ТекущаяСтрока.Свойство("Количество") Тогда
			СписокСвойств = СписокСвойств + ", Количество";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, СписокСвойств);
		
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Форма.Элементы[ИмяТЧ].ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВариантыОтчетов

// Содержит настройки размещения вариантов отчетов в панели отчетов.
// Описание параметров см. в ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРасхожденийПриПоступленииПродукцииВЕТИС);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru = 'Выявление и анализ расхождений между входящей транспортной операцией ВетИС и поступлением товаров.';
									|en = 'Detection and analysis of discrepancies between incoming VetIS transport operation and goods receipt.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'ВетИС';
																|en = 'VetIS'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОсновнойКонтекст");
	ОписаниеВарианта.Описание = НСтр("ru = 'Выявление и анализ расхождений между входящей транспортной операцией ВетИС и поступлением товаров.';
									|en = 'Detection and analysis of discrepancies between incoming VetIS transport operation and goods receipt.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'ВетИС';
																|en = 'VetIS'");
	ОписаниеВарианта.Включен = Ложь;
	
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРасхожденийПриИнвентаризацииПродукцииВЕТИС);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru = 'Выявление и анализ расхождений между инвентаризацией продукции ВетИС и складскими операциями.';
									|en = 'Identification and analysis of discrepancies between VetIS manufactured product stocktaking and warehouse operations.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'ВетИС';
																|en = 'VetIS'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОсновнойКонтекст");
	ОписаниеВарианта.Описание = НСтр("ru = 'Выявление и анализ расхождений между инвентаризацией продукции ВетИС и складскими операциями.';
									|en = 'Identification and analysis of discrepancies between VetIS manufactured product stocktaking and warehouse operations.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'ВетИС';
																|en = 'VetIS'");
	ОписаниеВарианта.Включен = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеДокументов

Процедура ОбработкаЗаполненияИнвентаризацииПродукцииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеЗапасов")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииСписанияЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РаспределениеЗатрат")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииРаспределенияЗатрат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеЗапасов")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииОприходованияЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаЗапасов")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПересортицыЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииСписанияЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК ДокументОснование,
	|	Документ.Номер КАК НомерАктаНесоответствия,
	|	Документ.Дата КАК ДатаАктаНесоответствия,
	|	НЕ Документ.Проведен КАК ЕстьОшибкиПроведен,
	|	Документ.Автор КАК Ответственный,
	|	Документ.Организация КАК Организация,
	|	Документ.СтруктурнаяЕдиница КАК ТорговыйОбъект
	|ИЗ
	|	Документ.СписаниеЗапасов КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	// ++( 00-00012169
	ТекстТоварыДокумента = 
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	//|	Товары.Партия КАК Серия,
	//|	-СУММА(Товары.Количество) КАК Количество,
	|	Товары.Количество КАК Количество,
	|	Товары.КлючСвязи КАК КлючСвязи
	//|ПОМЕСТИТЬ ТоварыСерии
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.СписаниеЗапасов.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	//|СГРУППИРОВАТЬ ПО
	//|	Товары.Номенклатура,
	//|	Товары.Характеристика,
	//|	Товары.КлючСвязи
	//|	Товары.Партия
	|;
	|
	|ВЫБРАТЬ
	|	Серии.Серия КАК Серия,
	|	Серии.Количество КАК Количество,
	|	Серии.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ВТ_Серии
	|ИЗ
	|	Документ.СписаниеЗапасов.СерииНоменклатуры КАК Серии
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|;
	|
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВТ_Серии.Серия
	|	КОНЕЦ КАК Серия,
	|	ВЫБОР
	|		КОГДА ВТ_Серии.Серия ЕСТЬ NULL
	|			ТОГДА ВТ_Товары.Количество
	|		ИНАЧЕ ВТ_Серии.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВТ_ТоварыСерииДоГруппировки
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
	|		ПО ВТ_Товары.КлючСвязи = ВТ_Серии.КлючСвязи
	|;
	|
	|ВЫБРАТЬ
	|	ВТ_ТоварыСерииДоГруппировки.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыСерииДоГруппировки.Характеристика КАК Характеристика,
	|	ВТ_ТоварыСерииДоГруппировки.Серия КАК Серия,
	|	-СУММА(ВТ_ТоварыСерииДоГруппировки.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	ВТ_ТоварыСерииДоГруппировки КАК ВТ_ТоварыСерииДоГруппировки
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТоварыСерииДоГруппировки.Номенклатура,
	|	ВТ_ТоварыСерииДоГруппировки.Характеристика,
	|	ВТ_ТоварыСерииДоГруппировки.Серия
	|;";
	// )++ 00-00012169
	// --( 00-00012169
	//ТекстТоварыДокумента = 
	//"
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Товары.Номенклатура КАК Номенклатура,
	//|	Товары.Характеристика КАК Характеристика,
	//|	Товары.Партия КАК Серия,
	//|	-СУММА(Товары.Количество) КАК Количество,
	//|ПОМЕСТИТЬ ТоварыСерии
	//|ИЗ
	//|	Документ.СписаниеЗапасов.Запасы КАК Товары
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	//|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	//|ГДЕ
	//|	Товары.Ссылка = &ДокументОснование
	//|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Товары.Номенклатура,
	//|	Товары.Характеристика,
	//|	Товары.Партия
	//|";
	// )-- 00-00012169
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииРаспределенияЗатрат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК ДокументОснование,
	|	Документ.Номер КАК НомерАктаНесоответствия,
	|	Документ.Дата КАК ДатаАктаНесоответствия,
	|	НЕ Документ.Проведен КАК ЕстьОшибкиПроведен,
	|	Документ.Автор КАК Ответственный,
	|	Документ.Организация КАК Организация,
	|	Документ.СтруктурнаяЕдиница КАК ТорговыйОбъект
	|ИЗ
	|	Документ.РаспределениеЗатрат КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = 
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Партия КАК Серия,
	|	-СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.РаспределениеЗатрат.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Партия
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииОприходованияЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК ДокументОснование,
	|	Документ.Номер КАК НомерАктаНесоответствия,
	|	Документ.Дата КАК ДатаАктаНесоответствия,
	|	НЕ Документ.Проведен КАК ЕстьОшибкиПроведен,
	|	Документ.Автор КАК Ответственный,
	|	Документ.Организация КАК Организация,
	|	Документ.СтруктурнаяЕдиница КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ОприходованиеЗапасов КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента =
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Партия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ОприходованиеЗапасов.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Партия
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПересортицыЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК ДокументОснование,
	|	Документ.Номер КАК НомерАктаНесоответствия,
	|	Документ.Дата КАК ДатаАктаНесоответствия,
	|	НЕ Документ.Проведен КАК ЕстьОшибкиПроведен,
	|	Документ.Автор КАК Ответственный,
	|	Документ.Организация КАК Организация,
	|	Документ.СтруктурнаяЕдиница КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента =
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Партия КАК Серия,
	|	-СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Партия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.ПартияОприходование,
	|	СУММА(Товары.Количество)
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.ПартияОприходование
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 0);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииРасходнойНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПеремещенияЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииЗаказаПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОПереработке") Тогда
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииОтчетаОПереработке(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииРасходнойНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Основание.Ссылка КАК ДокументОснование,
	|	Основание.Номер КАК НомерТТН,
	|	Основание.Дата КАК ДатаТТН,
	|	НЕ Основание.Проведен КАК ЕстьОшибкиПроведен,
	|	Основание.Ответственный КАК Ответственный,
	|	Основание.Контрагент КАК Грузополучатель,
	|	Основание.Организация КАК Грузоотправитель,
	|	Основание.СтруктурнаяЕдиница КАК Склад
	|ИЗ
	|	Документ.РасходнаяНакладная КАК Основание
	|ГДЕ
	|	Основание.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
		
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		ДокументОбъект.НомерТТН = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(РеквизитыДокумента.ДатаТТН, РеквизитыДокумента.НомерТТН, "");
		
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыДокумента.Грузоотправитель, РеквизитыДокумента.Склад);
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		
		Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаНаКомиссию Тогда
			// Для комиссии выполняется операция без перехода права собственности, по тому же хоз. субъекту
			ДокументОбъект.ГрузополучательХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		Иначе
			ДокументОбъект.ГрузополучательХозяйствующийСубъект  = ИнтеграцияВЕТИСУНФВызовСервера.ХозяйствующийСубъектПоОрганизации(РеквизитыДокумента.Грузополучатель);
		КонецЕсли; 
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО (СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовВЕТИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Партия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура КАК Номенклатура,
	|	ТоварыСерии.Характеристика КАК Характеристика,
	|	ТоварыСерии.Серия КАК Серия,
	|	ТоварыСерии.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО (СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО (СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СопоставленныеПозиции.Продукция КАК Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.НеПодвергнутаВСЭ) КАК ЭкспертизаРезультат,
	|	""Местность благополучна по заразным болезням животных"" КАК БлагополучиеМестности,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СопоставленныеПозиции.Продукция.ФасовкаЕдиницаИзмерения КАК ЕдиницаИзмеренияВЕТИС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО (СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения,
	|	СопоставленныеПозиции.Продукция.ФасовкаЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличествоВЕТИС);
	
	МассивСтрок = Новый Массив;
	Для каждого СтрокаТоваров Из ДокументОбъект.Товары Цикл
		МассивСтрок.Добавить(СтрокаТоваров);
	КонецЦикла;
	
	Документы.ИсходящаяТранспортнаяОперацияВЕТИС.ЗаполнитьЗаписиСкладскогоЖурнала(ДокументОбъект, МассивСтрок);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииЗаказаПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Основание.Ссылка КАК ДокументОснование,
	|	Основание.Номер КАК НомерТТН,
	|	Основание.Дата КАК ДатаТТН,
	|	НЕ Основание.Проведен КАК ЕстьОшибкиПроведен,
	|	Основание.Ответственный КАК Ответственный,
	|	Основание.Контрагент КАК Грузополучатель,
	|	Основание.Организация КАК Грузоотправитель,
	|	Основание.СтруктурнаяЕдиницаПродажи КАК Склад,
	|	Основание.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд) КАК ЭтоЗаказНаряд,
	|	Основание.ВариантЗавершения = ЗНАЧЕНИЕ(Перечисление.ВариантыЗавершенияЗаказа.Отменен) КАК Отменен,
	|	ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(Основание.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения КАК ЭтоСостояниеВыполненияЗаказНаряда
	|ИЗ
	|	Документ.ЗаказПокупателя КАК Основание
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|		ПО Основание.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|			И Основание.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
	|ГДЕ
	|	Основание.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
			
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Если Не РеквизитыДокумента.ЭтоЗаказНаряд Тогда
			
			ТекстОшибки = НСтр("ru='Ввод на основании заказа покупателя запрещен.'");
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Если РеквизитыДокумента.Отменен Тогда
			
			ТекстОшибки = НСтр("ru='Документ %Документ% отменен. Ввод на основании отмененного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Если Не РеквизитыДокумента.ЭтоСостояниеВыполненияЗаказНаряда Тогда
			
			ТекстОшибки = НСтр("ru='Ввод возможен только на основании выполненного заказ-наряда.'");
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыДокумента.Грузоотправитель, РеквизитыДокумента.Склад);
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		Грузополучатель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.Склад);
		ДокументОбъект.ГрузополучательХозяйствующийСубъект  = Грузополучатель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузополучательПредприятие           = Грузополучатель.Предприятие;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Партия                                      КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленныеПозиции.Продукция            КАК Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.НеПодвергнутаВСЭ) КАК ЭкспертизаРезультат,
	|	""Местность благополучна по заразным болезням животных"" КАК БлагополучиеМестности,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество)       КАК Количество,
	|	СопоставленныеПозиции.Продукция.ФасовкаЕдиницаИзмерения КАК ЕдиницаИзмеренияВЕТИС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличествоВЕТИС);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПеремещенияЗапасов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеЗапасов.Ссылка КАК ДокументОснование,
	|	ПеремещениеЗапасов.Номер КАК НомерТТН,
	|	ПеремещениеЗапасов.Дата КАК ДатаТТН,
	|	НЕ ПеремещениеЗапасов.Проведен КАК ЕстьОшибкиПроведен,
	|	ПеремещениеЗапасов.Организация КАК Организация,
	|	ПеремещениеЗапасов.Организация КАК ОрганизацияПолучатель,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиница КАК СкладОтправитель,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КАК СкладПолучатель,
	|	ПеремещениеЗапасов.Автор КАК Ответственный
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
			
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыДокумента.Организация, РеквизитыДокумента.СкладОтправитель);
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		Грузополучатель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыДокумента.ОрганизацияПолучатель, РеквизитыДокумента.СкладПолучатель);
		ДокументОбъект.ГрузополучательХозяйствующийСубъект  = Грузополучатель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузополучательПредприятие           = Грузополучатель.Предприятие;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО (СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовВЕТИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Партия КАК Серия,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО (СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО (СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СопоставленныеПозиции.Продукция КАК Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.НеПодвергнутаВСЭ) КАК ЭкспертизаРезультат,
	|	""Местность благополучна по заразным болезням животных"" КАК БлагополучиеМестности,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СопоставленныеПозиции.Продукция.ФасовкаЕдиницаИзмерения КАК ЕдиницаИзмеренияВЕТИС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО (СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличествоВЕТИС);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииОтчетаОПереработке(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Основание.Ссылка КАК ДокументОснование,
	|	Основание.Номер КАК НомерТТН,
	|	Основание.Дата КАК ДатаТТН,
	|	НЕ Основание.Проведен КАК ЕстьОшибкиПроведен,
	|	Основание.Ответственный КАК Ответственный,
	|	Основание.Контрагент КАК Грузополучатель,
	|	Основание.Организация КАК Грузоотправитель,
	|	Основание.СтруктурнаяЕдиница КАК Склад
	|ИЗ
	|	Документ.ОтчетОПереработке КАК Основание
	|ГДЕ
	|	Основание.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
		
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.НомерТТН = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(РеквизитыДокумента.ДатаТТН, РеквизитыДокумента.НомерТТН, ""); 
		
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(РеквизитыДокумента.Грузоотправитель, РеквизитыДокумента.Склад);
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		
		ДокументОбъект.ГрузополучательХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО (СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовВЕТИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Партия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ОтчетОПереработке.Продукция КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура КАК Номенклатура,
	|	ТоварыСерии.Характеристика КАК Характеристика,
	|	ТоварыСерии.Серия КАК Серия,
	|	ТоварыСерии.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО (СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО (СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СопоставленныеПозиции.Продукция КАК Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.НеПодвергнутаВСЭ) КАК ЭкспертизаРезультат,
	|	""Местность благополучна по заразным болезням животных"" КАК БлагополучиеМестности,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоВЕТИС,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СопоставленныеПозиции.Продукция.ФасовкаЕдиницаИзмерения КАК ЕдиницаИзмеренияВЕТИС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО (СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения,
	|	СопоставленныеПозиции.Продукция.ФасовкаЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличествоВЕТИС);
	
	МассивСтрок = Новый Массив;
	Для каждого СтрокаТоваров Из ДокументОбъект.Товары Цикл
		МассивСтрок.Добавить(СтрокаТоваров);
	КонецЦикла;
	
	Документы.ИсходящаяТранспортнаяОперацияВЕТИС.ЗаполнитьЗаписиСкладскогоЖурнала(ДокументОбъект, МассивСтрок);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаВходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Возврат;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПрикладногоДокумента = СтруктураЗапросаДанныеДокументаСборкаЗапасов();
	
	Если Не ЗначениеЗаполнено(ДанныеПрикладногоДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ДанныеПрикладногоДокумента.Реквизиты);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
		
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "Подразделение") Тогда
		
			СоответствиеСубъектов = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоОрганизацииИПодразделению(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Подразделение);
		
			ЗаполнитьЗначенияСвойств(ДокументОбъект, СоответствиеСубъектов);
			
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "Склад") Тогда
			
			СоответствиеСубъектов = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, СоответствиеСубъектов);
			
			ДокументОбъект.ТорговыйОбъект = РеквизитыДокумента.Склад;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	СписокЗапросов = Новый СписокЗначений();
	
	СписокЗапросов.Добавить(ДанныеПрикладногоДокумента.Товары);
	СписокЗапросов.Добавить(ДанныеПрикладногоДокумента.Сырье);
	
	СтруктураЗапроса = Документы.ПроизводственнаяОперацияВЕТИС.СтруктураЗапросаДанныеОформленныхДокументов();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленныеДокументы);
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленныеТовары);
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленноеСырье);
	
	СтруктураЗапроса = СтруктураЗапросаДанныеЗаполненияПроизводственнойОперации();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.ТоварыКОформлению);
	СписокЗапросов.Добавить(СтруктураЗапроса.СырьеКОформлению);
	СписокЗапросов.Добавить(СтруктураЗапроса.СопоставленныеПозиции);
	
	СписокЗапросов.Добавить(СтруктураЗапроса.Товары, "Товары");
	СписокЗапросов.Добавить(СтруктураЗапроса.Сырье, "Сырье");
	СписокЗапросов.Добавить(СтруктураЗапроса.ТехнологическийПроцесс, "ТехнологическийПроцесс");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ПроизводственнаяОперацияВЕТИС.КонечныеСтатусы());
	
	Запрос.УстановитьПараметр("ДатаОперацииНачалоПериода", РеквизитыДокумента.ДатаОперацииНачалоПериода);
	Запрос.УстановитьПараметр("ДатаОперацииКонецПериода",  РеквизитыДокумента.ДатаОперацииКонецПериода);
	
	Запрос.УстановитьПараметр("ПустаяСерия", Метаданные.ОпределяемыеТипы.СерияНоменклатурыВЕТИС.Тип.ПривестиЗначение());
	
	РезультатЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Сырье.Очистить();
	
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	ДокументОбъект.ШтрихкодыУпаковок.Очистить();
	
	ДокументОбъект.ТехнологическийПроцесс.Очистить();
	
	Если Не РезультатЗапроса["Товары"].Пустой() Тогда
		ЗаполнитьТабличнуюЧастьДокумента(
			ДокументОбъект["Товары"],
			РезультатЗапроса["Товары"],
			ДанныеЗаполнения,
			Новый Структура,
			Истина);
	КонецЕсли;
	
	Если Не РезультатЗапроса["Сырье"].Пустой() Тогда
		ЗаполнитьТабличнуюЧастьДокумента(
			ДокументОбъект["Сырье"],
			РезультатЗапроса["Сырье"],
			ДанныеЗаполнения,
			Новый Структура,
			Истина);
	КонецЕсли;
	
	ДокументОбъект.ТехнологическийПроцесс.Загрузить(РезультатЗапроса["ТехнологическийПроцесс"].Выгрузить());
	
КонецПроцедуры

#КонецОбласти

Функция Реквизиты(СсылкаИлиОбъект, ИменаРеквизитов, ЭтоОбъект)
	
	Если ЭтоОбъект Тогда
		Результат = Новый Структура(ИменаРеквизитов);
		ЗаполнитьЗначенияСвойств(Результат, СсылкаИлиОбъект);
	Иначе
		Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаИлиОбъект, ИменаРеквизитов);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТаблицуРекурсивно(ТаблицаЗначений, СтрокиДерева, ИскомыйУровень, ТекущийУровень)
	
	Для Каждого Строка Из СтрокиДерева Цикл
		
		Если ТипЗнч(СтрокиДерева) = Тип("КоллекцияСтрокДереваЗначений") Тогда
			Подстроки = Строка.Строки;
		ИначеЕсли ТипЗнч(СтрокиДерева) = Тип("ДанныеФормыКоллекцияЭлементовДерева") Тогда
			Подстроки = Строка.ПолучитьЭлементы();
		КонецЕсли;
		
		Если ИскомыйУровень = ТекущийУровень 
			Или (ИскомыйУровень = Неопределено И Подстроки.Количество() = 0) Тогда
			НовСтрока = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
		Иначе
			ЗаполнитьТаблицуРекурсивно(ТаблицаЗначений, Подстроки, ИскомыйУровень, ТекущийУровень + 1);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает таблицу значений с данными дерева значений
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений, ДанныеФормыДерево - дерево с данными
//  Уровень		 - Число - уровень дерева, на котором расположены искомые данные (нумерация с 0). Если не передано, то 
//						   будут возвращенные данные со всех последних уровней веток.
//
// Возвращаемое значение:
//  ТаблицаЗначений - содержит данные дерева.
//
Функция ДанныеДерева(ДеревоДанных, Уровень = Неопределено)
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	Для Каждого Колонка Из ДеревоДанных.Колонки Цикл
		ТаблицаВозврата.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	
	Если ТипЗнч(ДеревоДанных) = Тип("ДеревоЗначений") Тогда
		СтрокиДерева = ДеревоДанных.Строки;
	ИначеЕсли ТипЗнч(ДеревоДанных) = Тип("ДанныеФормыДерево") Тогда
		СтрокиДерева = ДеревоДанных.ПолучитьЭлементы();
	Иначе
		ВызватьИсключение НСтр("ru = 'Передан некорректный тип аргумента'");
	КонецЕсли;
	
	ЗаполнитьТаблицуРекурсивно(ТаблицаВозврата, СтрокиДерева, Уровень, 0);
	
	Возврат ТаблицаВозврата;

КонецФункции

Функция ЕдиницаИзмеренияОКЕИ(КодОКЕИ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕдиницыИзмерения.Ссылка КАК Ссылка,
	|	ЕдиницыИзмерения.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторЕдиницИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Код = &КодОКЕИ";
	Запрос.УстановитьПараметр("КодОКЕИ", КодОКЕИ);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЕдиницаИзмерения = Выборка.Ссылка;
	Иначе
		ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

// Создает единицу измерения по ОКЕИ.
//
// Параметры:
//	КодОКЕИ - ОпределяемыйТип.СтрокаВЕТИС - Код ОКЕИ.
//
// Возвращаемое значение:
//	СправочникСсылка.ЕдиницаИзмерения, Неопределено - Единица измерения по ОКЕИ.
//
Функция СоздатьЕдиницуИзмеренияПоКлассификаторуОКЕИ(КодОКЕИ)
	
	ДеревоДанныхКлассификатора = Справочники.КлассификаторЕдиницИзмерения.ПолучитьДанныеКлассификатора();
	
	ДанныеКлассификатора = ДанныеДерева(ДеревоДанныхКлассификатора, 2);
	СтрокаКлассификатора = ДанныеКлассификатора.Найти(КодОКЕИ, "КодЧисловой");
	
	ЕдиницаИзмерения = Неопределено;
	
	НачатьТранзакцию();
	
	Попытка
		
		Если ЗначениеЗаполнено(СтрокаКлассификатора.УсловноеОбозначениеНациональное) Тогда
			Наименование = СтрокаКлассификатора.УсловноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.УсловноеОбозначениеМеждународное) Тогда
			Наименование = СтрокаКлассификатора.УсловноеОбозначениеМеждународное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеНациональное) Тогда
			Наименование = СтрокаКлассификатора.КодовоеБуквенноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное) Тогда
			Наименование = СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное;
		Иначе
			Наименование = СтрокаКлассификатора.Наименование;
		КонецЕсли;
		
		СправочникОбъект = Справочники.КлассификаторЕдиницИзмерения.СоздатьЭлемент();
		
		СправочникОбъект.Код                     = СокрЛП(СтрокаКлассификатора.КодЧисловой);
		СправочникОбъект.Наименование            = СтрЗаменить(Наименование, Символы.ПС, "/");
		СправочникОбъект.НаименованиеПолное      = СтрЗаменить(СтрокаКлассификатора.Наименование, Символы.ПС, "/");
		СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное,
																Символы.ПС,
																"/");
		
		Если ЗначениеЗаполнено(СтрокаКлассификатора.ТипИзмеряемойВеличины) Тогда
			ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин[СтрокаКлассификатора.ТипИзмеряемойВеличины];
			
			СправочникОбъект.ТипИзмеряемойВеличины = ТипИзмеряемойВеличины;
		КонецЕсли;
		
		СправочникОбъект.Записать();
		
		ЕдиницаИзмерения = СправочникОбъект.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
		ИмяСобытия = НСтр("ru = 'Создание единицы измерения по классификатору.'", КодОсновногоЯзыка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

Процедура ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
			
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.ДокументОснование);
		
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		РеквизитыВЕТИС = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Организация, РеквизитыДокумента.ТорговыйОбъект);
		ЗаполнитьЗначенияСвойств(ДокументОбъект,РеквизитыВЕТИС);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак)
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияИнвентаризацииПродукцииИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИнвентаризацияПродукцииВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличестваВЕТИС = Новый Структура;
	КолонкиКоличестваВЕТИС.Вставить("КоличествоИзменение","КоличествоИзменениеВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваВЕТИС);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияИнвентаризацииПродукцииИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+
	ТекстТоварыДокумента
	+
	"
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура                    КАК Номенклатура,
	|	ТоварыСерии.Характеристика                  КАК Характеристика,
	|	ТоварыСерии.Серия                           КАК Серия,
	|	ТоварыСерии.Количество                      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура              КАК Номенклатура,
	|	ОформленныеТовары.Характеристика            КАК Характеристика,
	|	ОформленныеТовары.Серия                     КАК Серия,
	|	-ОформленныеТовары.КоличествоИзменение      КАК Количество
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                                        КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения                       КАК Упаковка,
	|	ТоварыКОформлению.Характеристика                                      КАК Характеристика,
	|	ТоварыКОформлению.Серия                                               КАК Серия,
	|	СопоставленныеПозиции.Продукция                                        КАК Продукция,
	|	СУММА(ТоварыКОформлению.Количество)                                   КАК КоличествоИзменение,
	|	СУММА(ТоварыКОформлению.Количество)                                   КАК КоличествоИзменениеВЕТИС,
	|	ВЫБОР
	|		КОГДА СУММА(ТоварыКОформлению.Количество) > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Добавление)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Изменение)
	|	КОНЕЦ                               КАК Операция
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция
	|ИМЕЮЩИЕ ДопустимыйЗнак
	|";
	Если ДопустимыйЗнак = -1 Тогда
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)<0");
	ИначеЕсли ДопустимыйЗнак = 1 Тогда
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)>0");
	Иначе
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)<>0");
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

Функция ПолучитьПараметрыПроверкиРеквизита(ДокументОбъект, ИмяФО, ИмяРеквизита, ИмяТЧ = "")
	
	Если ИмяТЧ = "" Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "Товары") Тогда
			ИмяТЧ = "Товары";
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "ТоварыУточнение") Тогда
			ИмяТЧ = "ТоварыУточнение";
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПроверки = Новый Структура("ИмяТЧ, ВыводитьНомераСтрок, ИмяФО, ИмяРеквизита", ИмяТЧ, Истина, ИмяФО, ИмяРеквизита);
	
	Если ИмяРеквизита = "Характеристика" Тогда
		ПараметрыПроверки.Вставить("ПустоеЗначение", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	ИначеЕсли ИмяРеквизита = "Серия" Тогда
		ПараметрыПроверки.Вставить("ПустоеЗначение", Справочники.ПартииНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Возврат ПараметрыПроверки;
	
КонецФункции

// Процедура проверки заполнения колонок "Характеристика" в объектах.
//
// Параметры:
//	Объект - ДокументОбъект (СправочникОбъект и т.п.) - объект, для которого требуется проверить заполнение 
//		колонки "Характеристика" в табличной части;
//	МассивНепроверяемыхРеквизитов -Массив - реквизиты, которые не нужно проверять платформенной проверкой;
//	Отказ - Булево, Истина - признак отказа продолжения операции;
//	ПараметрыПроверки - Структура - см. НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик.
//
Процедура ПроверитьЗаполнениеРеквизита(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки)
	
	ИмяТЧ = ПараметрыПроверки.ИмяТЧ;
	ИмяРеквизита = ПараметрыПроверки.ИмяРеквизита;
	ВыводитьНомераСтрок = ПараметрыПроверки.ВыводитьНомераСтрок;
	ПустоеЗначение = ПараметрыПроверки.ПустоеЗначение;
	
	МассивНепроверяемыхРеквизитов.Добавить(ИмяТЧ+"."+ИмяРеквизита);
	
	Если Не ПолучитьФункциональнуюОпцию(ПараметрыПроверки.ИмяФО) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ СтрокиСОшибками
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Характеристика = &ПустоеЗначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиСОшибками.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(СтрокиСОшибками.Номенклатура КАК Справочник.Номенклатура).ПроверятьЗаполнениеХарактеристики
	|				И СтрокиСОшибками.Характеристика = &ПустоеЗначение
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненаХарактеристика
	|ИЗ
	|	СтрокиСОшибками КАК СтрокиСОшибками
	|ГДЕ
	|	ВЫРАЗИТЬ(СтрокиСОшибками.Номенклатура КАК Справочник.Номенклатура).ПроверятьЗаполнениеХарактеристики
	|	И СтрокиСОшибками.Характеристика = &ПустоеЗначение";
	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Характеристика", "."+ИмяРеквизита);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КАК Характеристика", "КАК "+ИмяРеквизита);
	
	Если ИмяРеквизита = "Серия" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПроверятьЗаполнениеХарактеристики", "ПроверятьЗаполнениеПартий");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",
		Объект[ИмяТЧ].Выгрузить(, "НомерСтроки,Номенклатура,Серия,"+ИмяРеквизита))
	;
	Запрос.УстановитьПараметр("ПустоеЗначение", ПустоеЗначение);
	
	Если ВыводитьНомераСтрок Тогда
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%Характеристика%"" в строке %НомерСтроки% списка ""%ТаблицаТовары%"".'");
	Иначе
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%Характеристика%"" в списке ""%ТаблицаТовары%"".'");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	ПредставлениеТЧ = ?(Не ПараметрыПроверки.Свойство("ПредставлениеТЧ") ИЛИ Не ЗначениеЗаполнено(ПараметрыПроверки.ПредставлениеТЧ),
		МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним,
		ПараметрыПроверки.ПредставлениеТЧ);
	ПредставлениеРеквизитаХарактеристика = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Реквизиты[ИмяРеквизита].Синоним;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НеЗаполненаХарактеристика Тогда
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Характеристика%", ПредставлениеРеквизитаХарактеристика);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, ИмяРеквизита);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеИдентификатораПартии(ДокументОбъект, Отказ, МассивНепроверяемыхРеквизитов)
	
	ШаблонСообщения = НСтр("ru='Не заполнено поле ""Идентификатор партии"" в строке %1 списка ""Продукция"".'");
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		Если СтрокаТЧ.Номенклатура.ИспользоватьИдентификаторПартииВЕТИСПартии
			И НЕ ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторПартии) Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаТЧ.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары",
				СтрокаТЧ.НомерСтроки,
				"ИдентификаторПартии");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				ДокументОбъект.Ссылка,
				Поле,
				"Объект",
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ИдентификаторПартии");
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьДокумента(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, СоответствиеКолонокКоличествоВЕТИС, БезСопоставления = Истина)
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Продукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЕстьИдентификаторСтроки = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока, "ИдентификаторСтроки");
			Если ЕстьИдентификаторСтроки Тогда
				НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КонецЕсли;
			
			// ++( 00-00012169
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока, "Серия") Тогда
				ИмяФормы = Неопределено;
				ИнтеграцияИСМПУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(НоваяСтрока, ИмяФормы);	
			КонецЕсли;
			// )++ 00-00012169
			
		Иначе
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Выборка, "Номенклатура") Тогда
				
				ТабличнаяЧасть.Очистить();
				
				ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ВЕТИС.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", Выборка.Номенклатура);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СтруктураЗапросаДанныеЗаполненияПроизводственнойОперации()
	
	СтруктураЗапроса = Новый Структура();
	
	// Товары к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства КАК ДатаПроизводства,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыКРаспределению
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ТабличнаяЧасть.Серия КАК Серия,
	|		ТабличнаяЧасть.ДатаПроизводства КАК ДатаПроизводства,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Товары КАК ТабличнаяЧасть
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.ДатаПроизводства,
	|		-ТабличнаяЧасть.Количество
	|	ИЗ
	|		ОформленныеТовары КАК ТабличнаяЧасть) КАК ТабличнаяЧасть
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.Количество) > 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыБазаРаспределения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ТабличнаяЧасть.Серия КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Товары КАК ТабличнаяЧасть
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		-ТабличнаяЧасть.Количество
	|	ИЗ
	|		ОформленныеТовары КАК ТабличнаяЧасть) КАК ТабличнаяЧасть
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.Количество) > 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКРаспределению.Номенклатура КАК Номенклатура,
	|	ТоварыКРаспределению.Характеристика КАК Характеристика,
	|	ТоварыКРаспределению.Серия КАК Серия,
	|	ТоварыКРаспределению.ДатаПроизводства КАК ДатаПроизводства,
	|	СУММА(ТоварыКРаспределениюДополнение.Количество) - МИНИМУМ(ТоварыКРаспределению.Количество) КАК ЛеваяГраница,
	|	СУММА(ТоварыКРаспределениюДополнение.Количество) КАК ПраваяГраница
	|ПОМЕСТИТЬ ТоварыКРаспределениюПоДатам
	|ИЗ
	|	ТоварыКРаспределению КАК ТоварыКРаспределению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКРаспределению КАК ТоварыКРаспределениюДополнение
	|		ПО ТоварыКРаспределению.Номенклатура = ТоварыКРаспределениюДополнение.Номенклатура
	|			И ТоварыКРаспределению.Характеристика = ТоварыКРаспределениюДополнение.Характеристика
	|			И ТоварыКРаспределению.Серия = ТоварыКРаспределениюДополнение.Серия
	|			И ТоварыКРаспределению.ДатаПроизводства <= ТоварыКРаспределениюДополнение.ДатаПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКРаспределению.Номенклатура,
	|	ТоварыКРаспределению.Характеристика,
	|	ТоварыКРаспределению.Серия,
	|	ТоварыКРаспределению.ДатаПроизводства
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКРаспределениюПоДатам.Номенклатура КАК Номенклатура,
	|	ТоварыКРаспределениюПоДатам.Характеристика КАК Характеристика,
	|	ТоварыКРаспределениюПоДатам.Серия КАК Серия,
	|	ТоварыКРаспределениюПоДатам.ДатаПроизводства КАК ДатаПроизводства,
	|	ВЫБОР
	|		КОГДА ТоварыКРаспределению.Количество < ТоварыКРаспределениюПоДатам.ПраваяГраница
	|			ТОГДА ТоварыКРаспределению.Количество
	|		ИНАЧЕ ТоварыКРаспределениюПоДатам.ПраваяГраница
	|	КОНЕЦ - ТоварыКРаспределениюПоДатам.ЛеваяГраница КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыКРаспределениюПоДатам КАК ТоварыКРаспределениюПоДатам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыБазаРаспределения КАК ТоварыКРаспределению
	|		ПО ТоварыКРаспределениюПоДатам.Номенклатура = ТоварыКРаспределению.Номенклатура
	|			И ТоварыКРаспределениюПоДатам.Характеристика = ТоварыКРаспределению.Характеристика
	|			И ТоварыКРаспределениюПоДатам.Серия = ТоварыКРаспределению.Серия
	|			И ТоварыКРаспределениюПоДатам.ЛеваяГраница < ТоварыКРаспределению.Количество";
	СтруктураЗапроса.Вставить("ТоварыКОформлению", ТекстЗапроса);
	
	// Сырье к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура          КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика        КАК Характеристика,
	|	ТоварыКОформлению.Серия                 КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)     КАК Количество
	|ПОМЕСТИТЬ СырьеКОформлению
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	ТабличнаяЧасть.Количество     КАК Количество
	|ИЗ
	|	Сырье КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	-ТабличнаяЧасть.Количество    КАК Количество
	|ИЗ
	|	ОформленноеСырье КАК ТабличнаяЧасть
	|
	|) КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	СтруктураЗапроса.Вставить("СырьеКОформлению", ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапросаСоответствиеНоменклатурыВЕТИС("СопоставленныеПозиции", "ТоварыКОформлению, СырьеКОформлению");
	СтруктураЗапроса.Вставить("СопоставленныеПозиции", ТекстЗапроса);
	
	// Товары
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СопоставленныеПозиции.Продукция         КАК Продукция,
	|
	|	ТоварыКОформлению.Номенклатура         КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика       КАК Характеристика,
	|	ТоварыКОформлению.Серия                КАК Серия,
	|
	|	ТоварыКОформлению.Количество    КАК Количество,
	|	ТоварыКОформлению.Количество    КАК КоличествоВЕТИС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ) КАК ДатаПроизводстваТочностьЗаполнения,
	|	ТоварыКОформлению.ДатаПроизводства                             КАК ДатаПроизводстваНачалоПериода,
	|	ДАТАВРЕМЯ(1,1,1)                                               КАК ДатаПроизводстваКонецПериода,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ) КАК СрокГодностиТочностьЗаполнения,
	|	ISNULL(ТоварыКОформлению.Серия.ГоденДо, ДАТАВРЕМЯ(1,1,1))      КАК СрокГодностиНачалоПериода,
	|	ДАТАВРЕМЯ(1,1,1)                                               КАК СрокГодностиКонецПериода,
	|
	|	ЛОЖЬ КАК СкоропортящаясяПродукция,
	|	ЛОЖЬ КАК НизкокачественнаяПродукция,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.ИзготовленаИзСырьяПрошедшегоВСЭ) КАК ЭкспертизаРезультат
	|
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура   = ТоварыКОформлению.Номенклатура
	|		 И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|		 И СопоставленныеПозиции.Серия          = ТоварыКОформлению.Серия
	|";
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	// Сырье
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СопоставленныеПозиции.Продукция         КАК Продукция,
	|
	|	СырьеКОформлению.Номенклатура         КАК Номенклатура,
	|	СырьеКОформлению.Характеристика       КАК Характеристика,
	|	СырьеКОформлению.Серия                КАК Серия,
	|
	|	СырьеКОформлению.Количество КАК Количество,
	|	СырьеКОформлению.Количество КАК КоличествоВЕТИС
	|
	|ИЗ
	|	СырьеКОформлению КАК СырьеКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура   = СырьеКОформлению.Номенклатура
	|		 И СопоставленныеПозиции.Характеристика = СырьеКОформлению.Характеристика
	|		 И СопоставленныеПозиции.Серия          = СырьеКОформлению.Серия
	|";
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	// Технологический процесс
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаОперацииНачалоПериода КАК ДатаОперацииНачалоПериода,
	|	&ДатаОперацииКонецПериода  КАК ДатаОперацииКонецПериода,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхОперацийВЕТИС.Производство) КАК ТипОперации
	|";
	СтруктураЗапроса.Вставить("ТехнологическийПроцесс", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Функция СтруктураЗапросаДанныеДокументаСборкаЗапасов()
	
	СтруктураЗапроса = Новый Структура();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	Таблица.Организация КАК Организация,
	|	Таблица.СтруктурнаяЕдиница КАК Склад,
	|	НАЧАЛОПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииНачалоПериода,
	|	КОНЕЦПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииКонецПериода,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	"""" КАК ИдентификаторПроизводственнойТранзакции,
	|	ЛОЖЬ КАК ЗавершениеПроизводственнойТранзакции
	|ИЗ
	|	Документ.СборкаЗапасов КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование";
	СтруктураЗапроса.Вставить("Реквизиты", ТекстЗапроса);
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовСерииНоменклатурыПродукция.Серия ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СборкаЗапасовСерииНоменклатурыПродукция.Серия
	|	КОНЕЦ КАК Серия,
	|	НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ) КАК ДатаПроизводства,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовСерииНоменклатурыПродукция.Серия ЕСТЬ NULL
	|			ТОГДА ТабличнаяЧасть.Количество
	|		ИНАЧЕ СборкаЗапасовСерииНоменклатурыПродукция.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатурыПродукция КАК СборкаЗапасовСерииНоменклатурыПродукция
	|		ПО ТабличнаяЧасть.КлючСвязи = СборкаЗапасовСерииНоменклатурыПродукция.КлючСвязи
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И &Отбор1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовСерииНоменклатуры.Серия ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СборкаЗапасовСерииНоменклатуры.Серия
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА СборкаЗапасовСерииНоменклатуры.Серия ЕСТЬ NULL
	|			ТОГДА ТабличнаяЧасть.Количество
	|		ИНАЧЕ СборкаЗапасовСерииНоменклатуры.Количество
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.СерииНоменклатуры КАК СборкаЗапасовСерииНоменклатуры
	|		ПО ТабличнаяЧасть.КлючСвязи = СборкаЗапасовСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И &Отбор2";
	
	ТекстЗапроса = ШаблонЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица", "Товары");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор1", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор2", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка))");
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	ТекстЗапроса = ШаблонЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица", "Сырье");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор1", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор2", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка))");
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Функция ТекстЗапросаСоответствиеНоменклатурыВЕТИС(ИмяВременнойТаблицы = "СопоставленныеПозиции", ИменаТЧТовары = "ТоварыКОформлению")
	
	МассивТЧТовары = СтрРазделить(ИменаТЧТовары, ",", Ложь);
	ТекстЗапроса = "";
	
	Если МассивТЧТовары.Количество() > 1 Тогда
		
		ИмяВременнойТаблицыДляСопоставленияНоменклатуры = "ВтОбъединениеТЧДляСопоставления";
		
		ШаблонЗапросаТовары =
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия          КАК Серия
		|%1
		|ИЗ
		|	%2 КАК ТаблицаТовары
		|";
		ШаблонОбъединениеЗапросов = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		Для НомерТаблицы = 0 По МассивТЧТовары.Количество() - 1 Цикл
			
			ТекущаяТЧТовары = МассивТЧТовары[НомерТаблицы];
			
			Если НомерТаблицы > 0 Тогда
				ТекстЗапроса = ТекстЗапроса + ШаблонОбъединениеЗапросов;
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса
				+ СтрШаблон(
					ШаблонЗапросаТовары,
					?(НомерТаблицы = 0,
						"ПОМЕСТИТЬ " + ИмяВременнойТаблицыДляСопоставленияНоменклатуры,
						""),
					ТекущаяТЧТовары);
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Иначе
		ИмяВременнойТаблицыДляСопоставленияНоменклатуры = МассивТЧТовары[0];
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция
	|ПОМЕСТИТЬ %1
	|ИЗ
	|	%2 КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяВременнойТаблицы, ИмяВременнойТаблицыДляСопоставленияНоменклатуры);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ВыполнитьОперацииПриИзмененииРеквизитовФормы(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения)
	
	Перем ПараметрыПересчетаКоличестваВЕТИС, ТекстОшибки;
	НужноОкруглять = Ложь;
	
	// ОбязательныеДействия
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Номенклатура") Тогда
		СтруктураРеквизитов = ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьСтруктуруСлужебныхРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураРеквизитов);
	КонецЕсли;
	// Конец ОбязательныеДействия
	
	Если ТипЗнч(ПараметрыЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЗаполнитьПродукциюВЕТИС") И ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ЗаполнитьПродукциюВЕТИС");
		ИнтеграцияВЕТИСУНФВызовСервера.ЗаполнитьПродукциюВЕТИС(СтруктураСтроки, ПараметрыЗаполнения);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличестваВЕТИС)
		И ((ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Булево") И ПараметрыПересчетаКоличестваВЕТИС)
		ИЛИ ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Структура")) Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		// В ТЧ документов ВетИС реквизит с количеством ВетИС может называться по разному.
		Попытка
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		Исключение
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоИзменениеВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		КонецПопытки;
		
		Если Количество <> Неопределено Тогда
			Попытка
				ТекущаяСтрока.Количество = Количество;
			Исключение
				ТекущаяСтрока.КоличествоИзменение = Количество;
			КонецПопытки;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецЕсли; 
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИС") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИС Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли; 
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.Количество,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПроверитьСериюРассчитатьСтатус")
		И ((ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Булево") И ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус)
		ИЛИ ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Структура")) Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ПроверитьСериюРассчитатьСтатус");
		ИнтеграцияВЕТИСУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ПараметрыЗаполнения, СтруктураСтроки);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
	
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.КоличествоВЕТИС,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ИзменениеНоменклатуры") И ПараметрыЗаполнения.ИзменениеНоменклатуры Тогда
		
		Если ТекущаяСтрока.Свойство("Характеристика") Тогда
			ТекущаяСтрока.Характеристика = Неопределено;
		КонецЕсли;
		
		ИнтеграцияВЕТИСУНФКлиентСервер.УстановитьВидимостьКомандыГенерацииСерии(Форма);
		
	КонецЕсли;
	
	Если Форма <> Неопределено Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьСерию(Реквизиты, Результат)
	
	СерияСсылка = Справочники.ПартииНоменклатуры.ПустаяСсылка();
	
	Попытка
		
		НоваяСерия = Справочники.ПартииНоменклатуры.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоваяСерия, Реквизиты);
		НоваяСерия.Статус = Перечисления.СтатусыПартий.СобственныеЗапасы;
		НоваяСерия.Наименование = Справочники.ПартииНоменклатуры.ПредставлениеПартии(НоваяСерия);
		НоваяСерия.Записать();
		
		СерияСсылка = НоваяСерия.Ссылка;
		
	Исключение
		ПолеОшибки = "Объект.Товары.Серия";
		ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать партию по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения,
			Неопределено);
		
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ПартииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
	КонецПопытки;
		
	Возврат СерияСсылка;
	
КонецФункции

#КонецОбласти

#Область УНФ

Функция ЕстьПодконтрольнаяПродукцияВЕТИС(Товары) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетПодконтрольныхТоваровВЕТИС") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Номенклатура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС";
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Функция ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Контрагент,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент КАК Грузополучатель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент КАК Организация,
	|	ПредприятияОтправителя.ТорговыйОбъект КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект КАК ТорговыйОбъектОтправителя,
	|	ПредприятияПолучателя.ТорговыйОбъект КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект КАК СтруктурнаяЕдиница,
	|	ПредприятияПолучателя.ТорговыйОбъект КАК СтруктурнаяЕдиницаПолучатель,
	|	ПредприятияОтправителя.ПроизводственныйОбъект КАК ГрузоотправительПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект КАК ГрузополучательПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект КАК ПроизводственныйОбъектПолучателя,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент КАК Перевозчик,
	|	ВходящаяТранспортнаяОперацияВЕТИС.СерияТТН КАК СерияТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ДатаТТН КАК ДатаТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.НомерТТН КАК НомерТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТипТТН КАК ТипТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Комментарий КАК Комментарий,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Дата КАК Дата,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Серия КАК Партия,
	|		Количество КАК Количество,
	|		ЕдиницаИзмеренияВЕТИС.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмеренияВЕТИСБазоваяЕдиницаИзмерения,
	|		ЕдиницаИзмеренияВЕТИС.Коэффициент КАК ЕдиницаИзмеренияВЕТИСКоэффициент,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		ЛОЖЬ КАК БылоУточнение
	|	) КАК Товары,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТоварыУточнение.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Серия КАК Партия,
	|		Количество КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки
	|	) КАК ТоварыУточнение
	|ИЗ
	|	Документ.ВходящаяТранспортнаяОперацияВЕТИС КАК ВходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ВходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Контрагент,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК СтруктурнаяЕдиница,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК Партнер,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК СтруктурнаяЕдиницаПолучатель,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК ГрузоотправительПодразделение,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                       КАК ГрузополучательПодразделение,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Партия,
	|		Количество                                    КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения                 КАК ЕдиницаИзмерения
	|	) КАК Товары
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ИсходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Предприятия.ТорговыйОбъект                                   КАК ТорговыйОбъект,
	|	Предприятия.ТорговыйОбъект                                   КАК СтруктурнаяЕдиница,
	|	Предприятия.ПроизводственныйОбъект                           КАК Подразделение,
	|	ИнвентаризацияПродукцииВЕТИС.Комментарий                     КАК Комментарий,
	|	ИнвентаризацияПродукцииВЕТИС.Дата                            КАК Дата,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК ХозяйствующийСубъект,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИнвентаризацияПродукцииВЕТИС.Товары.(
	|		Номенклатура                  КАК Номенклатура,
	|		Характеристика                КАК Характеристика,
	|		Серия                         КАК Партия,
	|		КоличествоИзменение           КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|	) КАК Товары
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ИнвентаризацияПродукцииВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК Предприятия
	|		ПО ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект = Предприятия.Ссылка
	|			И ИнвентаризацияПродукцииВЕТИС.Предприятие = Предприятия.Предприятие
	|ГДЕ
	|	ИнвентаризацияПродукцииВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ДанныеПрикладныхДокументовИзПроизводственнойОперацииВЕТИС(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка) КАК ВидОперации,
	|	ПроизводственнаяОперацияВЕТИС.ХозяйствующийСубъект.Контрагент КАК Организация,
	|	Предприятия.ТорговыйОбъект КАК СтруктурнаяЕдиница,
	|	Предприятия.ПроизводственныйОбъект КАК Подразделение,
	|	ПроизводственнаяОперацияВЕТИС.Комментарий КАК Комментарий,
	|	ПроизводственнаяОперацияВЕТИС.Дата КАК Дата,
	|	ПроизводственнаяОперацияВЕТИС.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Серия КАК Партия,
	|		Количество КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки
	|	) КАК Товары,
	|	ПроизводственнаяОперацияВЕТИС.Сырье.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Серия КАК Партия,
	|		Количество КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки
	|	) КАК Сырье
	|ИЗ
	|	Документ.ПроизводственнаяОперацияВЕТИС КАК ПроизводственнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК Предприятия
	|		ПО ПроизводственнаяОперацияВЕТИС.ХозяйствующийСубъект = Предприятия.Ссылка
	|			И ПроизводственнаяОперацияВЕТИС.Предприятие = Предприятия.Предприятие
	|ГДЕ
	|	ПроизводственнаяОперацияВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти
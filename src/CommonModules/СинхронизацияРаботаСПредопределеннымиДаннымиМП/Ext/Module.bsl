#Область Загрузка

Функция НайтиПредопределенныеДанные(ОбъектXDTOВыгрузки, ОбъектМетаданных, Тип) Экспорт
	
	Если ЗначениеЗаполнено(ОбъектXDTOВыгрузки.PredefinedDataName) Тогда
		
		СсылкаВБазе = Справочники[ОбъектМетаданных.Имя][ОбъектXDTOВыгрузки.PredefinedDataName];
		
		Если СсылкаВБазе <> Неопределено Тогда
			СохранитьИдентификаторы(ОбъектXDTOВыгрузки, СсылкаВБазе);
			ЗаменитьСсылкуВОбъектеXDTO(ОбъектXDTOВыгрузки, СсылкаВБазе);
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция ЗаменитьСсылкуВОбъектеXDTO(ОбъектXDTOВыгрузки, СсылкаВБазе)
	
	ОбъектXDTOВыгрузки.Ref = СсылкаВБазе;
	
КонецФункции

Процедура СохранитьИдентификаторы(ОбъектXDTOВыгрузки, СсылкаВБазе)
	
	Если ПланыОбмена.СинхронизацияМП.ЭтотУзел().Код <> "001" Тогда
		
		СтруктураЗаписи = Новый Структура("ИдентификаторНаЦентральномУзле, ИдентификаторНаКлиентскомУзле, Ссылка", ОбъектXDTOВыгрузки.Ref.УникальныйИдентификатор(), СсылкаВБазе.УникальныйИдентификатор(), СсылкаВБазе);
		РегистрыСведений.ИдентификаторыСинхронизуемыхОбъектовМП.ДобавитьЗапись(СтруктураЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

Функция НачатьЗаписьПредопределенныхДанных(ОбъектXDTOКонфигурации, СтруктураПредопределенныхДанных, ОбъектМетаданных, СтруктураСНовымиДанными) Экспорт
	
	Если Метаданные.Документы.Содержит(ОбъектМетаданных) ИЛИ Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
		
		ЗаписьПредопределенныхДанныхУДокументаИлиСправочникаВТЧ(ОбъектXDTOКонфигурации, СтруктураПредопределенныхДанных, СтруктураСНовымиДанными);
		ЗаписьПредопределенныхДанныхУДокументаИлиСправочникаВРеквизитах(ОбъектXDTOКонфигурации, СтруктураПредопределенныхДанных, СтруктураСНовымиДанными);
		
	ИначеЕсли Метаданные.Константы.Содержит(ОбъектМетаданных) Тогда
		
		ЗаписьПредопределенныхДанныхУКонстанты(ОбъектXDTOКонфигурации, СтруктураПредопределенныхДанных);
		
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ОбъектМетаданных) ИЛИ Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных) Тогда
		
		ЗаписьПредопределенныхДанныхУРегистраСведенийИлиРегистраНакопления(ОбъектXDTOКонфигурации, СтруктураПредопределенныхДанных, СтруктураСНовымиДанными);
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаписьПредопределенныхДанныхУРегистраСведенийИлиРегистраНакопления(Знач ОбъектXDTOКонфигурации, Знач СтруктураПредопределенныхДанных, Знач СтруктураСНовымиДанными)
	
	Перем НужныйРеквизит, ОбъектМетаданныхРеквизита, Элемент;
	
	Для каждого Элемент Из СтруктураПредопределенныхДанных Цикл
		
		Если СтруктураСНовымиДанными <> Неопределено Тогда
			Если СтруктураСНовымиДанными.МассивСНовымиИзмерениями.Найти(Элемент.Ключ) <> Неопределено ИЛИ СтруктураСНовымиДанными.МассивСНовымиРесурсамиИРеквизитами.Найти(Элемент.Ключ) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ОбъектМетаданныхРеквизита = Метаданные.НайтиПоТипу(ТипЗнч(ОбъектXDTOКонфигурации[Элемент.Ключ]));
		НужныйРеквизит = Справочники[ОбъектМетаданныхРеквизита.Имя][Элемент.Значение];
		ОбъектXDTOКонфигурации[Элемент.Ключ] = НужныйРеквизит;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписьПредопределенныхДанныхУКонстанты(Знач ОбъектXDTOКонфигурации, Знач СтруктураПредопределенныхДанных)
	
	Перем НужныйРеквизит, ОбъектМетаданныхРеквизита, Элемент;
	
	Для каждого Элемент Из СтруктураПредопределенныхДанных Цикл
		ОбъектМетаданныхРеквизита = Метаданные.НайтиПоТипу(ТипЗнч(ОбъектXDTOКонфигурации.Value));
		НужныйРеквизит = Справочники[ОбъектМетаданныхРеквизита.Имя][Элемент.Значение];
		ОбъектXDTOКонфигурации.Value = НужныйРеквизит;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписьПредопределенныхДанныхУДокументаИлиСправочникаВРеквизитах(Знач ОбъектXDTOКонфигурации, Знач СтруктураПредопределенныхДанных, Знач СтруктураСНовымиДанными)
	
	Перем НужныйРеквизит, ОбъектМетаданныхРеквизита, Реквизит;
	
	Если СтруктураПредопределенныхДанных.СтруктураПредопределенныхРеквизитов.Количество() > 0 Тогда
		Для каждого Реквизит Из СтруктураПредопределенныхДанных.СтруктураПредопределенныхРеквизитов Цикл
			Если СтруктураСНовымиДанными <> Неопределено Тогда
				Если СтруктураСНовымиДанными.МассивСНовымиРеквизитами.Найти(Реквизит.Ключ) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			ОбъектМетаданныхРеквизита = Метаданные.НайтиПоТипу(ТипЗнч(ОбъектXDTOКонфигурации[Реквизит.Ключ]));
			НужныйРеквизит = Справочники[ОбъектМетаданныхРеквизита.Имя][Реквизит.Значение];
			ОбъектXDTOКонфигурации[Реквизит.Ключ] = НужныйРеквизит;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписьПредопределенныхДанныхУДокументаИлиСправочникаВТЧ(Знач ОбъектXDTOКонфигурации, Знач СтруктураПредопределенныхДанных, Знач СтруктураСНовымиДанными)
	
	Перем ЗаписьСПредопределеннымиРеквизитами, МассивНаименованийТЧ, НаименованиеТЧ, НаименованиеТЧИзМассива, НомерСтроки, НомерСтрокиИзМассива, НужныйРеквизит, ОбъектМетаданныхРеквизита, Строка, Элемент;
	
	Если СтруктураПредопределенныхДанных.МассивПредопределенныхРеквизитовВТЧ.Количество() > 0 Тогда
		МассивНаименованийТЧ = Новый Массив;
		Для каждого Элемент Из СтруктураПредопределенныхДанных.МассивПредопределенныхРеквизитовВТЧ Цикл
			Если ТипЗнч(Элемент) = Тип("Строка") Тогда
				МассивНаименованийТЧ.Добавить(Элемент);
			КонецЕсли;
		КонецЦикла;
		
		НомерСтроки = 0;
		Для каждого НаименованиеТЧ Из МассивНаименованийТЧ Цикл
			Если СтруктураСНовымиДанными <> Неопределено Тогда
				Если СтруктураСНовымиДанными.СтруктураМассивов.МассивСНаименованиямиНовыхТЧ.Найти(НаименованиеТЧ) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Для каждого Строка Из ОбъектXDTOКонфигурации[НаименованиеТЧ] Цикл
				НомерСтроки = НомерСтроки + 1;
				Для каждого Элемент Из СтруктураПредопределенныхДанных.МассивПредопределенныхРеквизитовВТЧ Цикл
					
					Если ТипЗнч(Элемент) = Тип("Строка") Тогда
						НаименованиеТЧИзМассива = Элемент;
						Продолжить;
					КонецЕсли;
					
					Если ТипЗнч(Элемент) = Тип("Число") Тогда
						НомерСтрокиИзМассива = Элемент;
						Продолжить;
					КонецЕсли;
					
					Если НаименованиеТЧИзМассива = НаименованиеТЧ И НомерСтрокиИзМассива = НомерСтроки Тогда
						
						Для каждого ЗаписьСПредопределеннымиРеквизитами Из Элемент Цикл
							Если СтруктураСНовымиДанными <> Неопределено Тогда
								Если СтруктураСНовымиДанными.СтруктураМассивов.МассивСНовымиРеквизитамиТЧ.Найти(ЗаписьСПредопределеннымиРеквизитами.Ключ) <> Неопределено Тогда
									Продолжить;
								КонецЕсли;
							КонецЕсли;
							
							ОбъектМетаданныхРеквизита = Метаданные.НайтиПоТипу(ТипЗнч(Строка[ЗаписьСПредопределеннымиРеквизитами.Ключ]));
							НужныйРеквизит = Справочники[ОбъектМетаданныхРеквизита.Имя][ЗаписьСПредопределеннымиРеквизитами.Значение];
							Строка[ЗаписьСПредопределеннымиРеквизитами.Ключ] = НужныйРеквизит;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Выгрузка

Функция ПроверкаОбъектаНаПредопределенныеДанные(ТекОбъектОбмена) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(ТекОбъектОбмена));
	
	Если ТипЗнч(ТекОбъектОбмена) = Тип("УдалениеОбъекта") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураПредопределенныхДанных = Новый Структура;
	
	Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
		
		Реквизиты = Метаданные.Справочники[ОбъектМетаданных.Имя].Реквизиты;
		СтруктураПредопределенныхРеквизитов = ПоискПредопределенныхРеквизитов(ТекОбъектОбмена, Реквизиты);
		
		ТабличныеЧасти = Метаданные.Справочники[ОбъектМетаданных.Имя].ТабличныеЧасти;
		МассивПредопределенныхРеквизитовВТЧ = ПоискПредопределенныхРеквизитовВТЧ(ТекОбъектОбмена, ТабличныеЧасти);
		
		СтруктураПредопределенныхДанных.Вставить("СтруктураПредопределенныхРеквизитов", СтруктураПредопределенныхРеквизитов);
		СтруктураПредопределенныхДанных.Вставить("МассивПредопределенныхРеквизитовВТЧ", МассивПредопределенныхРеквизитовВТЧ);
		
	ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда 
		
		Реквизиты = Метаданные.Документы[ОбъектМетаданных.Имя].Реквизиты;
		СтруктураПредопределенныхРеквизитов = ПоискПредопределенныхРеквизитов(ТекОбъектОбмена, Реквизиты);
		
		ТабличныеЧасти = Метаданные.Документы[ОбъектМетаданных.Имя].ТабличныеЧасти;
		МассивПредопределенныхРеквизитовВТЧ = ПоискПредопределенныхРеквизитовВТЧ(ТекОбъектОбмена, ТабличныеЧасти);
		
		СтруктураПредопределенныхДанных.Вставить("СтруктураПредопределенныхРеквизитов", СтруктураПредопределенныхРеквизитов);
		СтруктураПредопределенныхДанных.Вставить("МассивПредопределенныхРеквизитовВТЧ", МассивПредопределенныхРеквизитовВТЧ);
		
	ИначеЕсли Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных) Тогда
		
		Измерения = Метаданные.РегистрыСведений[ОбъектМетаданных.Имя].Измерения;
		Ресурсы = Метаданные.РегистрыСведений[ОбъектМетаданных.Имя].Ресурсы;
		Реквизиты = Метаданные.РегистрыСведений[ОбъектМетаданных.Имя].Реквизиты;
		
		ТаблицаЗначений = ТекОбъектОбмена.Выгрузить();
		
		СтруктураПредопределенныхДанных = ПоискПредопределенныхИзмеренийРесурсовРеквизитов(Измерения, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений);
		СтруктураПредопределенныхДанных = ПоискПредопределенныхИзмеренийРесурсовРеквизитов(Ресурсы, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений);
		СтруктураПредопределенныхДанных = ПоискПредопределенныхИзмеренийРесурсовРеквизитов(Реквизиты, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений);
		
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ОбъектМетаданных) Тогда
		
		Измерения = Метаданные.РегистрыНакопления[ОбъектМетаданных.Имя].Измерения;
		Ресурсы = Метаданные.РегистрыНакопления[ОбъектМетаданных.Имя].Ресурсы;
		Реквизиты = Метаданные.РегистрыНакопления[ОбъектМетаданных.Имя].Реквизиты;
		
		ТаблицаЗначений = ТекОбъектОбмена.Выгрузить();
		
		СтруктураПредопределенныхДанных = ПоискПредопределенныхИзмеренийРесурсовРеквизитов(Измерения, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений);
		СтруктураПредопределенныхДанных = ПоискПредопределенныхИзмеренийРесурсовРеквизитов(Ресурсы, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений);
		СтруктураПредопределенныхДанных = ПоискПредопределенныхИзмеренийРесурсовРеквизитов(Реквизиты, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений);
		
	ИначеЕсли Метаданные.Константы.Содержит(ОбъектМетаданных) Тогда
		
		ОбъектМетаданныхЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ТекОбъектОбмена.Значение));
		
		Если ОбъектМетаданныхЗначения <> Неопределено Тогда
			Если Метаданные.Справочники.Содержит(ОбъектМетаданныхЗначения) Тогда 
				Если ТекОбъектОбмена.Значение.Предопределенный = Истина Тогда
					СтруктураПредопределенныхДанных.Вставить(ОбъектМетаданныхЗначения.Имя, ТекОбъектОбмена.Значение.ИмяПредопределенныхДанных);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураПредопределенныхДанных
	
КонецФункции

Функция ПоискПредопределенныхРеквизитов(ТекОбъектОбмена, Реквизиты)
	
	СтруктураПредопределенныхРеквизитов = Новый Структура;
	Для каждого Реквизит Из Реквизиты Цикл
		
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(ТекОбъектОбмена[Реквизит.Имя]));
		
		Если ОбъектМетаданных <> Неопределено Тогда
			Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
				Если ТекОбъектОбмена[Реквизит.Имя].Предопределенный = Истина Тогда
					СтруктураПредопределенныхРеквизитов.Вставить(Реквизит.Имя, ТекОбъектОбмена[Реквизит.Имя].ИмяПредопределенныхДанных);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПредопределенныхРеквизитов
	
КонецФункции

Функция ПоискПредопределенныхИзмеренийРесурсовРеквизитов(ИзмеренияРесурсыРеквизиты, СтруктураПредопределенныхДанных, ТекОбъектОбмена, ТаблицаЗначений)
	
	Для каждого ИзмерениеРесурсРеквизит Из ИзмеренияРесурсыРеквизиты Цикл
		Колонка = ТаблицаЗначений.ВыгрузитьКолонку(ИзмерениеРесурсРеквизит.Имя);
		Если Колонка.Количество() > 0 Тогда
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Колонка[0]));
			Если ОбъектМетаданных <> Неопределено Тогда
				Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
					ОбъектСправочника = Колонка.Получить(0);
					Если ОбъектСправочника.Предопределенный = Истина Тогда
						ЗначениеПредопределенногоЭлемента = ОбъектСправочника.ИмяПредопределенныхДанных;
						СтруктураПредопределенныхДанных.Вставить(ИзмерениеРесурсРеквизит.Имя, ЗначениеПредопределенногоЭлемента);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПредопределенныхДанных
	
КонецФункции

Функция ПоискПредопределенныхРеквизитовВТЧ(ТекОбъектОбмена, ТабличныеЧасти)
	
	НаличиеПредопределенныхДанных = Ложь;
	МассивПредопределенныхРеквизитовТЧ = Новый Массив;
	Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		МассивПредопределенныхРеквизитовТЧ.Добавить(ТабличнаяЧасть.Имя);
		Для каждого Строка Из ТекОбъектОбмена[ТабличнаяЧасть.Имя] Цикл
			МассивПредопределенныхРеквизитовТЧ.Добавить(Строка.НомерСтроки);
			Для каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
				ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Строка[Реквизит.Имя]));
				Если ОбъектМетаданных <> Неопределено Тогда
					Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда 
						Если Строка[Реквизит.Имя].Предопределенный = Истина Тогда
							СтруктураПредопределенныхРеквизитовТЧ = Новый Структура(Реквизит.Имя, Строка[Реквизит.Имя].ИмяПредопределенныхДанных);
							МассивПредопределенныхРеквизитовТЧ.Добавить(СтруктураПредопределенныхРеквизитовТЧ);
							НаличиеПредопределенныхДанных = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если НаличиеПредопределенныхДанных = Ложь Тогда
		МассивПредопределенныхРеквизитовТЧ.Очистить();
	КонецЕсли;
	
	Возврат МассивПредопределенныхРеквизитовТЧ
	
КонецФункции

#КонецОбласти



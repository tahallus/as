////////////////////////////////////////////////////////////////////////////////
// Подсистема "Клиент ЭДО".
// ОбщийМодуль.СопоставлениеНоменклатурыКонтрагентовКЭДОКлиент.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПереопределяемыеПроцедурыИФункции

#Область СопоставлениеНоменклатуры

// См. СопоставлениеНоменклатурыКонтрагентовКлиентПереопределяемый.ОткрытьФормуНоменклатуры.
Процедура ОткрытьФормуНоменклатуры(Знач Параметры, Знач Владелец, Знач Уникальность, Знач ОповещениеОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",
		Параметры, Владелец, Уникальность,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры.
Процедура ОткрытьФормуВыбораНоменклатуры(Знач Параметры, Знач Владелец, Знач Уникальность) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", 
		Параметры, Владелец, Уникальность,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// См. СопоставлениеНоменклатурыКонтрагентовКлиентПереопределяемый.ПриСозданииНоменклатурыПоДаннымКонтрагента.
Процедура ПриСозданииНоменклатурыПоДаннымКонтрагента(Знач НаборНоменклатурыКонтрагентов, Знач ОповещениеОЗавершении, СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Обработка = Новый ОписаниеОповещения("ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента", ЭтотОбъект);
	
	Параметры = Новый Структура;
	Параметры.Вставить("НаборНоменклатурыКонтрагентов", НаборНоменклатурыКонтрагентов);
	Параметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Обработка = Новый ОписаниеОповещения("ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента", ЭтотОбъект);
	
	ПроцессВыполнения = НовыйПроцессВыполнения(Параметры, Обработка);
	
	ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента(ПроцессВыполнения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ИнтеграцияПодсистемы

// Открывает форму списка номенклатуры контрагента с отбором по владельцу, номенклатуре, характеристике, упаковке.
//
// Параметры:
//  ВладелецФормы                        - ФормаКлиентскогоПриложения  - владелец формы.
//  Контрагент                           - СправочникСсылка.Партнеры   - владелец номенклатуры контрагента
//  ТекущаяСтрока                        - ДанныеФормыЭлементКоллекции - текущая строка таблицы Товары.
//  ПредставлениеНоменклатурыКонтрагента - Строка                      - имя поля, которое необходимо отображать при открытие формы.
//  ОповещениеОЗакрытие                  - ОписаниеОповещения          - оповещения, которое необходимо выполнить после закрытия формы.
//
Процедура ОткрытьФормуВыбораНоменклатурыКонтрагента(ВладелецФормы, Контрагент, ТекущаяСтрока, 
	ПредставлениеНоменклатурыКонтрагента, ОповещениеОЗакрытие) Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ВладелецНоменклатуры", Контрагент);
	ПараметрыОтбора.Вставить("Номенклатура"        , ТекущаяСтрока.Номенклатура);
	ПараметрыОтбора.Вставить("Характеристика"      , ТекущаяСтрока.Характеристика);
	ПараметрыОтбора.Вставить("Упаковка"            , ТекущаяСтрока.ЕдиницаИзмерения);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗаголовокФормы", ПредставлениеНоменклатурыКонтрагента);
	СтруктураПараметров.Вставить("РежимВыбора"   , Истина);
	СтруктураПараметров.Вставить("Отбор"         , ПараметрыОтбора);
	СтруктураПараметров.Вставить("ТекущаяСтрока" , ТекущаяСтрока.НоменклатураКонтрагента);
	
	СопоставлениеНоменклатурыКонтрагентовКлиент.ОткрытьФормуВыбораНоменклатурыКонтрагентов(СтруктураПараметров, ВладелецФормы, ОповещениеОЗакрытие);
	
КонецПроцедуры

// Заполняет значения реквизитов строки товаров по выбранной номенклатуре контрагентов
//
// Параметры:
//  СтрокаТовара        - ДанныеФормыЭлементКоллекции - строка табличной части Товары
//  ИзмененныеРеквизиты - Массив                      - исходящий параметр, измененные реквизиты строки
//
Процедура ПриИзмененииНоменклатурыКонтрагента(СтрокаТовара, ИзмененныеРеквизиты = Неопределено) Экспорт
	
	Если ИзмененныеРеквизиты = Неопределено Тогда
		ИзмененныеРеквизиты = Новый Массив;
	КонецЕсли;
	
	Если СтрокаТовара.НоменклатураКонтрагента.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеНоменклатурыКонтрагента = СопоставлениеНоменклатурыКонтрагентовКЭДОВызовСервера.ДанныеНоменклатурыКонтрагента(
		СтрокаТовара.НоменклатураКонтрагента);
	
	Если ДанныеНоменклатурыКонтрагента.Номенклатура.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтрокаТовара.Номенклатура = ДанныеНоменклатурыКонтрагента.Номенклатура Тогда
		СтрокаТовара.Номенклатура = ДанныеНоменклатурыКонтрагента.Номенклатура;
		ИзмененныеРеквизиты.Добавить("Номенклатура");
	КонецЕсли;
	
	Если Не СтрокаТовара.Характеристика = ДанныеНоменклатурыКонтрагента.Характеристика Тогда
		СтрокаТовара.Характеристика = ДанныеНоменклатурыКонтрагента.Характеристика;
		ИзмененныеРеквизиты.Добавить("Характеристика");
	КонецЕсли;
	
	Если Не СтрокаТовара.ЕдиницаИзмерения = ДанныеНоменклатурыКонтрагента.Упаковка Тогда
		СтрокаТовара.ЕдиницаИзмерения = ДанныеНоменклатурыКонтрагента.Упаковка;
		ИзмененныеРеквизиты.Добавить("ЕдиницаИзмерения");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет номенклатуру контрагента в строке товара по данным строки
//
// Параметры:
//  Контрагент   - СправочникСсылка.Контрагенты - контрагент документа
//  СтрокаТовара - ДанныеФормыЭлементКоллекции  - строка табличной части Товары
//
Процедура ПодобратьНоменклатуруКонтрагента(Контрагент, СтрокаТовара) Экспорт
	
	НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагентаИнформационнойБазы();
	НоменклатураИБ.Номенклатура            = СтрокаТовара.Номенклатура;
	НоменклатураИБ.Характеристика          = СтрокаТовара.Характеристика;
	НоменклатураИБ.Упаковка                = СтрокаТовара.ЕдиницаИзмерения;
	НоменклатураИБ.НоменклатураКонтрагента = СтрокаТовара.НоменклатураКонтрагента;
	
	СтрокаТовара.НоменклатураКонтрагента = 
		СопоставлениеНоменклатурыКонтрагентовКЭДОВызовСервера.НоменклатураКонтрагентаПоНоменклатуреВСтрокеТаблицы(Контрагент, НоменклатураИБ);
	
КонецПроцедуры

// Формирует список выбора номенклатуры контрагента с отбором по номенклатуре, характеристике, упаковке.
//
// Параметры:
//  Контрагент    - СправочникСсылка.Контрагенты - владелец номенклатуры поставщика
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции  - текущая строка таблицы Товары
//  СписокВыбора  - СписокЗначений               - список выбора номенклатуры контрагента.
//
Процедура ЗаполнитьСписокВыбораНоменклатурыКонтрагента(Контрагент, ТекущаяСтрока, СписокВыбора) Экспорт
	
	СписокВыбора.Очистить();
	Если ТекущаяСтрока = Неопределено Или Не ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		Или Не ЗначениеЗаполнено(Контрагент) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	МассивЗначений = СопоставлениеНоменклатурыКонтрагентовКлиент.СформироватьСписокВыбораНоменклатурыКонтрагента(
		Контрагент,
		ТекущаяСтрока.Номенклатура,
		ТекущаяСтрока.Характеристика,
		ТекущаяСтрока.ЕдиницаИзмерения);
	
	СписокВыбора.ЗагрузитьЗначения(МассивЗначений);
		
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйПроцессВыполнения(Знач Параметры, Знач ОсновнойОбработчик)
	
	ПроцессВыполнения = Новый Структура;
	ПроцессВыполнения.Вставить("Параметры", Параметры);
	ПроцессВыполнения.Вставить("ОсновнойОбработчик", ОсновнойОбработчик);
	ПроцессВыполнения.Вставить("Выполнено", Новый Структура);
	ПроцессВыполнения.Вставить("ТекущийЭтап", Неопределено);
	
	Возврат ПроцессВыполнения;
	
КонецФункции

// См. ПриСозданииНоменклатурыПоДаннымКонтрагента.
Процедура ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента(Знач ПроцессВыполнения, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	ТекущийЭтап = "ПолучитьСведенияОНабореНоменклатурыКонтрагентов";
	СведенияОНаборе = Неопределено;
	Если Не ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, СведенияОНаборе) Тогда
		СведенияОНаборе = СведенияОНабореНоменклатурыКонтрагентов(ПроцессВыполнения.Параметры.НаборНоменклатурыКонтрагентов);
		Если СведенияОНаборе.Количество <= 1 Тогда
			ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
			Возврат;
		КонецЕсли;
		ПроцессВыполнения.Выполнено.Вставить(ТекущийЭтап, СведенияОНаборе);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОНаборе.Различия) Тогда
		
		ТекущийЭтап = "ПоказатьВопросОСозданииНоменклатурыСРазличиями";
		ОтветНаВопрос = Неопределено;
		Если ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, ОтветНаВопрос) Тогда
			Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
				ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
				Возврат;
			КонецЕсли;
		Иначе
			ПроцессВыполнения.Вставить("ТекущийЭтап", ТекущийЭтап);
			ПоказатьВопросОСозданииНоменклатурыСРазличиями(СведенияОНаборе.Различия, ПроцессВыполнения);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийЭтап = "ВыбратьЗначенияДляСозданияНоменклатуры";
	ВыбранныеЗначения = Неопределено;
	Если ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, ВыбранныеЗначения) Тогда
		Если ВыбранныеЗначения = Неопределено Тогда
			ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
			Возврат;
		КонецЕсли;
	Иначе
		ПроцессВыполнения.Вставить("ТекущийЭтап", ТекущийЭтап);
		НачатьВыборЗначенийДляСозданияНоменклатуры(СведенияОНаборе.Значения, ПроцессВыполнения);
		Возврат;
	КонецЕсли;
	
	СозданнаяНоменклатура = ОбменСКонтрагентамиКЭДОВызовСервера.СоздатьНоменклатуруПоДаннымКонтрагента(
		ПроцессВыполнения.Параметры.НаборНоменклатурыКонтрагентов, ВыбранныеЗначения);
		
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, СозданнаяНоменклатура);
	
КонецПроцедуры

// См. ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента.
Процедура ПоказатьВопросОСозданииНоменклатурыСРазличиями(Знач Различия, ПроцессВыполнения)
	
	СписокПолей = СтрСоединить(Различия,", ");
	СписокПолей = СтрЗаменить(СписокПолей, "СтавкаНДС", НСтр("ru = 'Ставка НДС'"));
	СписокПолей = СтрЗаменить(СписокПолей, "ЕдиницаИзмерения", НСтр("ru = 'Единица измерения'"));
	СписокПолей = СтрЗаменить(СписокПолей, "ЕдиницаИзмеренияКод", НСтр("ru = 'Код единицы измерения'"));
	
	ОбработкаОтвета = Новый ОписаниеОповещения("ОбработатьВопросОСозданииНоменклатурыСРазличиями", ЭтотОбъект, ПроцессВыполнения);
	ТекстВопроса = СтрШаблон(НСтр("ru = 'Для выбранной номенклатуры различаются поля: %1. Продолжить создание?'"), СписокПолей);
	ПоказатьВопрос(ОбработкаОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

// См. ПоказатьВопросОСозданииНоменклатурыСРазличиями.
Процедура ОбработатьВопросОСозданииНоменклатурыСРазличиями(Знач Ответ, ПроцессВыполнения) Экспорт
	
	ПроцессВыполнения.Выполнено.Вставить(ПроцессВыполнения.ТекущийЭтап, Ответ);
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.ОсновнойОбработчик, ПроцессВыполнения);
	
КонецПроцедуры

// См. ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента.
Процедура НачатьВыборЗначенийДляСозданияНоменклатуры(Знач Значения, ПроцессВыполнения)
	
	ПараметрыФормы = Новый Структура("ЗначенияНоменклатурыКонтрагента", Значения);
	
	ОбработкаВыбораЗначений = Новый ОписаниеОповещения("ЗакончитьВыборЗначенийДляСозданияНоменклатуры", ЭтотОбъект, ПроцессВыполнения);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЗначенийРеквизитовЭДО",
		ПараметрыФормы,,,,, ОбработкаВыбораЗначений, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКЭДОКлиент.ПриСозданииНоменклатурыПоДаннымКонтрагента.
Процедура ЗакончитьВыборЗначенийДляСозданияНоменклатуры(Знач ВыбранныеЗначения, ПроцессВыполнения) Экспорт
	
	ПроцессВыполнения.Выполнено.Вставить(ПроцессВыполнения.ТекущийЭтап, ВыбранныеЗначения);
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.ОсновнойОбработчик, ПроцессВыполнения);
	
КонецПроцедуры

Функция СведенияОНабореНоменклатурыКонтрагентов(Знач НаборНоменклатурыКонтрагентов)
	
	НаборСвойств = СтрРазделить("СтавкаНДС,ЕдиницаИзмерения", ",");
	Значения = Новый Структура;
	Различия = Новый Массив;
	
	Для каждого НоменклатураКонтрагента Из НаборНоменклатурыКонтрагентов Цикл
		Для каждого ТекущееСвойство Из НаборСвойств Цикл
			Если Различия.Найти(ТекущееСвойство) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ТекущееЗначение = НоменклатураКонтрагента[ТекущееСвойство];
			Если Не ЗначениеЗаполнено(ТекущееЗначение) Тогда
				Продолжить;
			КонецЕсли;
			Если Не Значения.Свойство(ТекущееСвойство) Тогда
				Значения.Вставить(ТекущееСвойство, ТекущееЗначение);
			КонецЕсли;
			Если ТекущееЗначение <> Значения[ТекущееСвойство] Тогда
				Различия.Добавить(ТекущееСвойство);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Сведения = Новый Структура;
	Сведения.Вставить("Количество", НаборНоменклатурыКонтрагентов.Количество());
	Сведения.Вставить("Значения", Значения);
	Сведения.Вставить("Различия", Различия);
	
	Возврат Сведения;
	
КонецФункции

#КонецОбласти

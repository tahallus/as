#Область ПрограммныйИнтерфейс

// Устанавливает условное оформление.
// 
// Параметры:
// 	ВыбранныйЭлемент - ЛюбаяСсылка - элемент, который следует выделить в переданном списке,
// 	Список - ДинамическийСписок - список, в котором следует выделить переданный элемент,
// 	ИмяНастройки - Строка - строковый идентификатор пользовательской настройки.
Процедура ВыделитьЖирнымОсновнойЭлемент(ВыбранныйЭлемент, Список, ИмяНастройки = "ОсновнойЭлемент") Экспорт

	СписокУдаляемыхЭлементов = Новый СписокЗначений;
	Для Каждого ЭлементУсловногоОформления Из Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = ИмяНастройки Тогда
			СписокУдаляемыхЭлементов.Добавить(ЭлементУсловногоОформления);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из СписокУдаляемыхЭлементов Цикл
		Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Удалить(Элемент.Значение);
	КонецЦикла;

	Если Не ЗначениеЗаполнено(ВыбранныйЭлемент) Тогда
		Возврат;
	КонецЕсли;

	ЭлементУсловногоОформления = Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();

	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));

	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ВыбранныйЭлемент;

	ШрифтВыделения = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина);

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтВыделения);
	ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = ИмяНастройки;
	ЭлементУсловногоОформления.Представление = НСтр("ru = 'Выделение основного элемента'");

КонецПроцедуры

// Устанавливает условное оформление колонки "Дата" в динамических списках
// Параметры:
// 	ПараметрСписок - ДинамическийСписок - динамический список, колонке "Дата" которого устанавливается формат "ДФ=Ч:мм"
Процедура ОтображатьТолькоВремяДляТекущейДаты(ПараметрСписок) Экспорт

	УдалитьРанееДобавленныеЭлементыОформления(ПараметрСписок);

	ЭлементОформления = ПараметрСписок.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Представление = ПредставлениеСегодняТолькоВремя();
	ЭлементОформления.ИдентификаторПользовательскойНастройки = ИдентификаторНастройкиТолькоВремяПоляДата();

	ЭлементОформления.Использование = Истина;

	ГруппаЭлементовОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбора.Использование = Истина;

	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Дата");
	ЭлементОтбора.ПравоеЗначение	= Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоЭтогоДня);

	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Дата");
	ЭлементОтбора.ПравоеЗначение	= Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоСледующегоДня);

	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ДФ=Ч:мм");

	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Дата");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьРанееДобавленныеЭлементыОформления(ПараметрСписок)

	УдаляемыеЭлементыОформления = Новый Массив;

	Для Каждого ЭлементУсловногоОформления Из ПараметрСписок.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки
			= ИдентификаторНастройкиТолькоВремяПоляДата() Или ЭлементУсловногоОформления.Представление
			= ПредставлениеСегодняТолькоВремя() Тогда
			УдаляемыеЭлементыОформления.Добавить(ЭлементУсловногоОформления);
		КонецЕсли;
	КонецЦикла;

	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементыОформления Цикл
		ПараметрСписок.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;

КонецПроцедуры

Функция ИдентификаторНастройкиТолькоВремяПоляДата()
	Возврат "ПредустановленныйТолькоВремяПоляДата";
КонецФункции

Функция ПредставлениеСегодняТолькоВремя()
	Возврат НСтр("ru = 'Формат поля Дата (сегодня - только время)'");
КонецФункции

#КонецОбласти
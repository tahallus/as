#Область ПрограммныйИнтерфейс

// Сообщает об ошибках проведения по регистру Запасы на складах.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыНаСкладах(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Не хватает запасов %ТипСтруктурнойЕдиницы% %СтруктурнаяЕдиницаПредставление%'");
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
		|недостаточно %Количество% %ЕдиницаИзмерения%'");
		
	ВыводитьВЗаголовокРасшифровку = Истина;
	УчетПоНесколькимСкладам = Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить();
	УчетПоНесколькимПодразделениям = Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			Если (Не УчетПоНесколькимСкладам И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад)
			Или (Не УчетПоНесколькимПодразделениям И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение) Тогда
				ПредставлениеСтруктурнойЕдиницы = "";
			Иначе
				ПредставлениеСтруктурнойЕдиницы = Справочники.СтруктурныеЕдиницы.Представление(
					ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление, ВыборкаЗаписей.ЯчейкаПредставление);
			КонецЕсли;
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%СтруктурнаяЕдиницаПредставление%",
				ПредставлениеСтруктурнойЕдиницы);
			ТекстЗаголовкаСообщения = СтрЗаменить(ТекстЗаголовкаСообщения, "%ТипСтруктурнойЕдиницы%",
				Перечисления.ТипыСтруктурныхЕдиниц.Представление(ВыборкаЗаписей.ТипСтруктурнойЕдиницы));
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыНаСкладах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыНаСкладах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%",
			СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
			
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы на складах для списка структурных единиц.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыНаСкладахСписком(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает запасов'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|%ТипСтруктурнойЕдиницы% %СтруктурнаяЕдиницаПредставление%
		|остаток %КоличествоОстаток% %ЕдиницаИзмерения%, недостаточно %Количество% %ЕдиницаИзмерения%'");
		
	УчетПоНесколькимСкладам = Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить();
	УчетПоНесколькимПодразделениям = Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если (НЕ УчетПоНесколькимСкладам И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад)
			ИЛИ (НЕ УчетПоНесколькимПодразделениям И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение)Тогда
			ПредставлениеСтруктурнойЕдиницы = "";
		Иначе
			ПредставлениеСтруктурнойЕдиницы = Справочники.СтруктурныеЕдиницы.Представление(
				ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление, ВыборкаЗаписей.ЯчейкаПредставление);
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипСтруктурнойЕдиницы%",
			Перечисления.ТипыСтруктурныхЕдиниц.Представление(ВыборкаЗаписей.ТипСтруктурнойЕдиницы));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СтруктурнаяЕдиницаПредставление%", ПредставлениеСтруктурнойЕдиницы);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыНаСкладах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыНаСкладах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%",
			СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
//  ОстаткиРезервов - ТаблицаЗначений - таблица остатков резервов интеркампани.
Процедура Запасы(ДокОбъект, ВыборкаЗаписей, Отказ, ОстаткиРезервов = Неопределено) Экспорт
	
	Если ТипЗнч(ДокОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
		И НЕ Константы.КонтролироватьОстаткиПриПробитииЧековККМ.Получить() Тогда
		ЗаголовокОшибки = НСтр("ru = 'Внимание:'");
	Иначе
		ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	КонецЕсли;
	
	// Интеркампани
	Если ОстаткиРезервов <> Неопределено Тогда
		ОстаткиРезервов.Индексы.Добавить("Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия");
	КонецЕсли;
	// Конец Интеркампани
	
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Не хватает остатка по учету запасов и затрат %ТипСтруктурнойЕдиницы% %СтруктурнаяЕдиницаПредставление%'");
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
		|недостаточно %КоличествоИРезерв% %ЕдиницаИзмерения%'");
	
	ВыводитьВЗаголовокРасшифровку = Истина;
	УчетПоНесколькимСкладам = Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить();
	УчетПоНесколькимПодразделениям = Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		// Интеркампани
		Если ОстаткиРезервов <> Неопределено И ОстаткиРезервов.Количество() > 0 Тогда
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Организация", ВыборкаЗаписей.ОрганизацияПредставление); 
			СтруктураОтбора.Вставить("СтруктурнаяЕдиница", ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление); 
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаЗаписей.НоменклатураПредставление); 
			СтруктураОтбора.Вставить("Характеристика", ВыборкаЗаписей.ХарактеристикаПредставление); 
			СтруктураОтбора.Вставить("Партия", ВыборкаЗаписей.ПартияПредставление); 
			СтрокиОстатков = ОстаткиРезервов.НайтиСтроки(СтруктураОтбора);
			Если СтрокиОстатков.Количество() > 0 И СтрокиОстатков[0].КоличествоОстаток > 0 
				И СтрокиОстатков[0].КоличествоОстаток >= -ВыборкаЗаписей.КоличествоОстатокЗапасы Тогда
				// Отрицательный остаток обеспечен резервом товаров организаций (интеркампани)
				СтрокиОстатков[0].КоличествоОстаток = СтрокиОстатков[0].КоличествоОстаток 
					+ ВыборкаЗаписей.КоличествоОстатокЗапасы;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		// Конец Интеркампани
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			Если (НЕ УчетПоНесколькимСкладам И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад)
				ИЛИ (НЕ УчетПоНесколькимПодразделениям И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение)Тогда
				ПредставлениеСтруктурнойЕдиницы = "";
			Иначе
				ПредставлениеСтруктурнойЕдиницы = СокрЛП(ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление);
			КонецЕсли;
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%СтруктурнаяЕдиницаПредставление%",
				ПредставлениеСтруктурнойЕдиницы);
			ТекстЗаголовкаСообщения = СтрЗаменить(ТекстЗаголовкаСообщения, "%ТипСтруктурнойЕдиницы%",
				Перечисления.ТипыСтруктурныхЕдиниц.Представление(ВыборкаЗаписей.ТипСтруктурнойЕдиницы));
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		Если ПустаяСтрока(ВыборкаЗаписей.ЗаказПокупателяПредставление) Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоИРезерв%", -ВыборкаЗаписей.КоличествоОстатокЗапасы);
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", "резерва " + ВыборкаЗаписей.ОстатокЗапасы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоИРезерв%", "резерва " + -ВыборкаЗаписей.КоличествоОстатокЗапасы);
		КонецЕсли;
		
		// Заказы покупателей в Рознице
		Если ЗначениеЗаполнено(ВыборкаЗаписей.ЗаказПокупателяПредставление) Тогда
			ТекстСообщения = ТекстСообщения + ". " + ВыборкаЗаписей.ЗаказПокупателяПредставление;
		КонецЕсли;
		// Конец Заказы покупателей в Рознице
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы для списка структурных единиц.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
//  ОстаткиРезервов - ТаблицаЗначений - таблица остатков резервов интеркампани.
Процедура ЗапасыСписком(ДокОбъект, ВыборкаЗаписей, Отказ, ОстаткиРезервов = Неопределено) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает остатка по учету запасов и затрат'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	// Интеркампани
	Если ОстаткиРезервов <> Неопределено Тогда
		ОстаткиРезервов.Индексы.Добавить("Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия");
	КонецЕсли;
	// Конец Интеркампани
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|%ТипСтруктурнойЕдиницы% %СтруктурнаяЕдиницаПредставление%,
		|остаток %КоличествоОстаток% %ЕдиницаИзмерения%, недостаточно %КоличествоИРезерв% %ЕдиницаИзмерения%'");
		
	УчетПоНесколькимСкладам = Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить();
	УчетПоНесколькимПодразделениям = Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		// Интеркампани
		Если ОстаткиРезервов <> Неопределено И ОстаткиРезервов.Количество() > 0 Тогда
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Организация", ВыборкаЗаписей.ОрганизацияПредставление); 
			СтруктураОтбора.Вставить("СтруктурнаяЕдиница", ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление); 
			СтруктураОтбора.Вставить("Номенклатура", ВыборкаЗаписей.НоменклатураПредставление); 
			СтруктураОтбора.Вставить("Характеристика", ВыборкаЗаписей.ХарактеристикаПредставление); 
			СтруктураОтбора.Вставить("Партия", ВыборкаЗаписей.ПартияПредставление); 
			СтрокиОстатков = ОстаткиРезервов.НайтиСтроки(СтруктураОтбора);
			Если СтрокиОстатков.Количество() > 0 И СтрокиОстатков[0].КоличествоОстаток > 0 
				И СтрокиОстатков[0].КоличествоОстаток >= -ВыборкаЗаписей.КоличествоОстатокЗапасы Тогда
				// Отрицательный остаток обеспечен резервом товаров организаций (интеркампани)
				СтрокиОстатков[0].КоличествоОстаток = СтрокиОстатков[0].КоличествоОстаток 
					+ ВыборкаЗаписей.КоличествоОстатокЗапасы;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		// Конец Интеркампани
		
		Если (НЕ УчетПоНесколькимСкладам И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад)
			ИЛИ (НЕ УчетПоНесколькимПодразделениям И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение)Тогда
			ПредставлениеСтруктурнойЕдиницы = "";
		Иначе
			ПредставлениеСтруктурнойЕдиницы = СокрЛП(ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление);
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СтруктурнаяЕдиницаПредставление%", ПредставлениеСтруктурнойЕдиницы);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипСтруктурнойЕдиницы%",
			Перечисления.ТипыСтруктурныхЕдиниц.Представление(ВыборкаЗаписей.ТипСтруктурнойЕдиницы));
		
		Если ПустаяСтрока(ВыборкаЗаписей.ЗаказПокупателяПредставление) Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоИРезерв%", -ВыборкаЗаписей.КоличествоОстатокЗапасы);
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", "резерва " + ВыборкаЗаписей.ОстатокЗапасы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоИРезерв%", "резерва " + -ВыборкаЗаписей.КоличествоОстатокЗапасы);
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы переданные.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыПереданные(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ВидОперации", ДокОбъект.Метаданные())
		И ДокОбъект.ВидОперации = Перечисления.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах Тогда
		ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
			"ru = 'Не хватает запасов по которым отчитался контрагент %КонтрагентПредставление%'");
	Иначе
		ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
			"ru = 'Не хватает запасов, переданных стороннему контрагенту %КонтрагентПредставление%'");
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,'");
	
	ВыводитьВЗаголовокРасшифровку = Истина;
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%КонтрагентПредставление%", СокрЛП(
				ВыборкаЗаписей.КонтрагентПредставление));
			
			Если ЗначениеЗаполнено(ВыборкаЗаписей.ЗаказПредставление) Тогда
				ТекстЗаголовкаСообщения = СтрШаблон(
					НСтр("ru = '%1
						 |по: %2'"), ТекстЗаголовкаСообщения, СокрЛП(ВыборкаЗаписей.ЗаказПредставление));
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		Если ВыборкаЗаписей.КоличествоОстатокЗапасыПереданные <> 0 Тогда
			
			ТекстСообщенияКоличество = НСтр("ru = 'остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
				|недостаточно %Количество% %ЕдиницаИзмерения%'");
			
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыПереданные);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыПереданные);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияКоличество;
			
		КонецЕсли;
		
		Если ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПереданные <> 0 Тогда
			
			ТекстСообщенияСумма = НСтр("ru = 'Сумма расчетов:
				|остаток %СуммаОстаток% %Валюта%,
				|недостаточно %Сумма% %Валюта%'");
			
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%СуммаОстаток%", ВыборкаЗаписей.СуммаРасчетовЗапасыПереданные);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Сумма%", -ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПереданные);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Валюта%", ВалютаУчета);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияСумма;
			
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы переданные в разрезе ГТД.
// 
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыПереданныеВРазрезеГТД(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает запасов переданных в разрезе ГТД'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
		|недостаточно %Количество% %ЕдиницаИзмерения%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " / """ + СокрЛП(ВыборкаЗаписей.НомерГТДПредставление) + """";
		ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " / """ + СокрЛП(ВыборкаЗаписей.СтранаПроисхожденияПредставление) + """";
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыВРазрезеГТД);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыВРазрезеГТД);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы переданные
// для списка сторонних контрагентов.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыПереданныеСписком(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает запасов, переданных стороннему контрагенту'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|контрагент %КонтрагентПредставление%'");
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрагентПредставление%", СокрЛП(ВыборкаЗаписей.КонтрагентПредставление));
		
		Если ВыборкаЗаписей.КоличествоОстатокЗапасыПереданные <> 0 Тогда
			
			ТекстСообщенияКоличество = НСтр("ru = 'остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
				|недостаточно %Количество% %ЕдиницаИзмерения%'");
			
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыПереданные);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыПереданные);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияКоличество;
			
		КонецЕсли;
		
		Если ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПереданные <> 0 Тогда
			
			ТекстСообщенияСумма = НСтр("ru = 'Сумма расчетов:
				|остаток %СуммаОстаток% %Валюта%,
				|недостаточно %Сумма% %Валюта%'");
			
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%СуммаОстаток%", ВыборкаЗаписей.СуммаРасчетовЗапасыПереданные);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Сумма%", -ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПереданные);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Валюта%", ВалютаУчета);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияСумма;
			
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы принятые.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыПринятые(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Не хватает запасов или услуг, поступивших от стороннего контрагента %КонтрагентПредставление%'");
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,'");
	
	ВыводитьВЗаголовокРасшифровку = Истина;
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%КонтрагентПредставление%",
				СокрЛП(ВыборкаЗаписей.КонтрагентПредставление));
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		Если ВыборкаЗаписей.КоличествоОстатокЗапасыПринятые <> 0 Тогда
			
			ТекстСообщенияКоличество = НСтр("ru = 'остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
				|недостаточно %Количество% %ЕдиницаИзмерения%'");
			
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыПринятые);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыПринятые);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияКоличество;
			
		КонецЕсли;
		
		Если ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПринятые <> 0 Тогда
			
			ТекстСообщенияСумма = НСтр("ru = 'Сумма расчетов:
				|остаток %СуммаОстаток% %Валюта%,
				|недостаточно %Сумма% %Валюта%'");
			
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%СуммаОстаток%", ВыборкаЗаписей.СуммаРасчетовЗапасыПринятые);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Сумма%", -ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПринятые);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Валюта%", ВалютаУчета);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияСумма;
			
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы принятые в разрезе ГТД.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыПринятыеВРазрезеГТД(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Не хватает запасов по номерам ГТД, поступивших на реализацию.'");
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,'");
	
	ВыводитьВЗаголовокРасшифровку = Истина;
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			ТекстЗаголовкаСообщения = ШаблонЗаголовкаСообщения;
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		Если ВыборкаЗаписей.КоличествоОстатокЗапасыПринятые <> 0 Тогда
			
			ТекстСообщенияКоличество = НСтр("ru = 'остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
				|недостаточно %Количество% %ЕдиницаИзмерения%'");
			
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыПринятые);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыПринятые);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияКоличество;
			
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы принятые списком.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыПринятыеСписком(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Не хватает запасов, поступивших от стороннего контрагента'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|контрагент %КонтрагентПредставление%'");
		
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрагентПредставление%", СокрЛП(ВыборкаЗаписей.КонтрагентПредставление));
		
		Если ВыборкаЗаписей.КоличествоОстатокЗапасыПринятые <> 0 Тогда
			
			ТекстСообщенияКоличество = НСтр("ru = 'остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
				|недостаточно %Количество% %ЕдиницаИзмерения%'");
			
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыПринятые);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыПринятые);
			ТекстСообщенияКоличество = СтрЗаменить(ТекстСообщенияКоличество, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияКоличество;
			
		КонецЕсли;
		
		Если ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПринятые <> 0 Тогда
			
			ТекстСообщенияСумма = НСтр("ru = 'Сумма расчетов:
				|остаток %СуммаОстаток% %Валюта%,
				|недостаточно %Сумма% %Валюта%'");
			
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%СуммаОстаток%", ВыборкаЗаписей.СуммаРасчетовЗапасыПринятые);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Сумма%", -ВыборкаЗаписей.СуммаРасчетовОстатокЗапасыПринятые);
			ТекстСообщенияСумма = СтрЗаменить(ТекстСообщенияСумма, "%Валюта%", ВалютаУчета);
			
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстСообщенияСумма;
			
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Запасы в разрезе ГТД.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыВРазрезеГТД(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает запасов в разрезе ГТД'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток %КоличествоОстаток% %ЕдиницаИзмерения%,
		|недостаточно %Количество% %ЕдиницаИзмерения%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " / """ + СокрЛП(ВыборкаЗаписей.НомерГТДПредставление) + """";
		ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " / """ + СокрЛП(ВыборкаЗаписей.СтранаПроисхожденияПредставление) + """";
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыВРазрезеГТД);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыВРазрезеГТД);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Заказы покупателей.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗаказыПокупателей(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Оформлено больше, чем указано в заказе покупателя'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток по заказу %КоличествоОстаток% %ЕдиницаИзмерения%,
		|превышает на %Количество% %ЕдиницаИзмерения% 
		|%ЗаказПокупателя%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗаказыПокупателей);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗаказыПокупателей);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗаказПокупателя%", СокрЛП(ВыборкаЗаписей.ЗаказПредставление));
		Если Не ПустаяСтрока(ВыборкаЗаписей.СкладПредставление) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1, %2'"), ТекстСообщения, СокрЛП(ВыборкаЗаписей.СкладПредставление));
		КонецЕсли; 
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Заказы поставщикам.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Пояснение - Строка - пояснение к сообщению об ошибке, 
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗаказыПоставщикам(ДокОбъект, ВыборкаЗаписей, Пояснение, Отказ) Экспорт
	
	ТекстыОшибки = Новый Массив;
	ТекстыОшибки.Добавить(НСтр("ru = 'Ошибка: оформлено больше, чем указано в заказе поставщику.'"));
	Если ЗначениеЗаполнено(Пояснение) Тогда
		ТекстыОшибки.Добавить(Пояснение);
	КонецЕсли;
	ТекстОшибки = СтрСоединить(ТекстыОшибки, Символы.ПС);
	ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток по заказу %КоличествоОстаток% %ЕдиницаИзмерения%,
		|превышает на %Количество% %ЕдиницаИзмерения%
		|%ЗаказПоставщику%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗаказыПоставщикам);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗаказыПоставщикам);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗаказПоставщику%", СокрЛП(ВыборкаЗаписей.ЗаказПоставщикуПредставление));
		Если Не ПустаяСтрока(ВыборкаЗаписей.СкладПредставление) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1, %2'"), ТекстСообщения, СокрЛП(ВыборкаЗаписей.СкладПредставление));
		КонецЕсли; 
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Заказы на производство.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗаказыНаПроизводство(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Оформлено больше, чем указано в заказе на производство'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток по заказу %КоличествоОстаток% %ЕдиницаИзмерения%,
		|превышает на %Количество% %ЕдиницаИзмерения%
		|%ЗаказНаПроизводство%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗаказыНаПроизводство);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗаказыНаПроизводство);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗаказНаПроизводство%", СокрЛП(ВыборкаЗаписей.ЗаказНаПроизводствоПредставление));
		Если Не ПустаяСтрока(ВыборкаЗаписей.СкладПредставление) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1, %2'"), ТекстСообщения, СокрЛП(ВыборкаЗаписей.СкладПредставление));
		КонецЕсли; 
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Заказы на перемещение.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗаказыНаПеремещение(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Оформлено больше, чем указано в заказе на перемещение'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|остаток по заказу %КоличествоОстаток% %ЕдиницаИзмерения%,
		|превышает на %Количество% %ЕдиницаИзмерения%
		|%ТипДвижения% %Склад%
		|%ЗаказНаПеремещение%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗаказыНаПеремещение);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗаказыНаПеремещение);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗаказНаПеремещение%", СокрЛП(ВыборкаЗаписей.ЗаказНаПеремещениеПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", СокрЛП(ВыборкаЗаписей.СкладПредставление));
		Если ВыборкаЗаписей.ТипДвижения = Перечисления.ТипыДвиженийЗапасов.Отгрузка Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'Отгрузка со склада'"));
		ИначеЕсли ВыборкаЗаписей.ТипДвижения = Перечисления.ТипыДвиженийЗапасов.Поступление Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'Поступление на склад'"));
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'Направление не указано'"));
		КонецЕсли; 
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Потребность в запасах.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ПотребностьВЗапасах(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Оформлено больше, чем есть потребность в запасах'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|потребность %КоличествоОстаток% %ЕдиницаИзмерения%,
		|превышает на %Количество% %ЕдиницаИзмерения%
		|%Заказ%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокПотребностьВЗапасах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокПотребностьВЗапасах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		Заказы = Новый Массив;
		Если НЕ ПустаяСтрока(ВыборкаЗаписей.ЗаказПокупателяПредставление) Тогда
			Заказы.Добавить(СокрЛП(ВыборкаЗаписей.ЗаказПокупателяПредставление));
		КонецЕсли; 
		Если НЕ ПустаяСтрока(ВыборкаЗаписей.ЗаказНаПроизводствоПредставление) Тогда
			Заказы.Добавить(СокрЛП(ВыборкаЗаписей.ЗаказНаПроизводствоПредставление));
		КонецЕсли; 
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заказ%", СтрСоединить(Заказы, Символы.ПС));
		Если Не ПустаяСтрока(ВыборкаЗаписей.СкладПредставление) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1, %2'"), ТекстСообщения, СокрЛП(ВыборкаЗаписей.СкладПредставление));
		КонецЕсли; 
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Размещение заказов.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура РазмещениеЗаказов(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Оформлено больше, чем размещено запасов в заказах'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|размещено %КоличествоОстаток% %ЕдиницаИзмерения%
		|в %ИсточникОбеспечения%,
		|превышает на %Количество% %ЕдиницаИзмерения%
		|по %ЗаказПокупателя%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокРазмещениеЗаказов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокРазмещениеЗаказов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СокрЛП(ВыборкаЗаписей.ЕдиницаИзмеренияПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗаказПокупателя%", СокрЛП(ВыборкаЗаписей.ЗаказПокупателяПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИсточникОбеспечения%", СокрЛП(ВыборкаЗаписей.ИсточникОбеспеченияПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Денежные средства.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ДенежныеСредства(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает денежных средств'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = '%СчетКасса%: %ПредставлениеСчетаКассы%,
		|остаток %СуммаОстаток% %Валюта%,
		|недостаточно %Сумма% %Валюта%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеСчетаКассы = ПредставлениеБанковскогоСчетаКассы(ВыборкаЗаписей.БанковскийСчетКассаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеСчетаКассы%", ПредставлениеСчетаКассы);
		
		Если ВыборкаЗаписей.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СчетКасса%", "Счет");
			
		Иначе
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СчетКасса%", "Касса");
			
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаток%", ВыборкаЗаписей.ОстатокДенежныхСредств);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", -ВыборкаЗаписей.СуммаВалОстаток);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Денежные средства с учетом резервов.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ДенежныеСредстваСУчетомРезервов(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ПроведениеСверхРезерваРазрешено = Пользователи.РолиДоступны("ПроведениеДенежныхДокументовСверхРезерва");
	
	Если ПроведениеСверхРезерваРазрешено Тогда
		ЗаголовокОшибки = НСтр("ru = 'Внимание:'");
		ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Превышен остаток денег с учетом резервов'");
		ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект);
	Иначе
		ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
		ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает свободных денежных средств'");
		ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = '%СчетКасса%: %ПредставлениеСчетаКассы%,
		|в резерве %ВРезерве% %Валюта%,
		|недостаточно свободного остатка %СвободныйОстаток% %Валюта%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеСчетаКассы = ПредставлениеБанковскогоСчетаКассы(ВыборкаЗаписей.БанковскийСчетКассаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеСчетаКассы%", ПредставлениеСчетаКассы);
		
		Если ВыборкаЗаписей.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СчетКасса%", "Счет");
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СчетКасса%", "Касса");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВРезерве%", ВыборкаЗаписей.ВРезерве);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СвободныйОстаток%", ВыборкаЗаписей.ВРезерве - ВыборкаЗаписей.ОстатокДенежныхСредств);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		Если ПроведениеСверхРезерваРазрешено Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект);
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Денежные средства в резерве.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ДенежныеСредстваВРезерве(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'По документу %Документ% имеется израсходованный резерв денег'");
	ТекстЗаголовкаСообщения = СтрЗаменить(ТекстЗаголовкаСообщения, "%Документ%", ДокОбъект);
	
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = '%СчетКасса%: %ПредставлениеСчетаКассы%,
		|отрицательный остаток резерва: %ВРезерве% %Валюта%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеСчетаКассы = ПредставлениеБанковскогоСчетаКассы(ВыборкаЗаписей.БанковскийСчетКассаПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеСчетаКассы%", ПредставлениеСчетаКассы);
		
		Если ВыборкаЗаписей.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СчетКасса%", "Счет");
			
		Иначе
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СчетКасса%", "Касса");
			
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВРезерве%", ВыборкаЗаписей.ВРезерве);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", СокрЛП(ВыборкаЗаписей.Валюта));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Денежные средства в кассах ККМ.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ДенежныеСредстваВКассахККМ(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает денежных средств в кассе ККМ'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'Касса ККМ: %ПредставлениеКассыККМ%,
						   |остаток %СуммаОстаток% %Валюта%,
						   |недостаточно %Сумма% %Валюта%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеКассыККМ = ПредставлениеБанковскогоСчетаКассы(ВыборкаЗаписей.КассаККМПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеКассыККМ%", ПредставлениеКассыККМ);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаток%", ВыборкаЗаписей.ОстатокДенежныхСредств);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", -ВыборкаЗаписей.СуммаВалОстаток);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Расчеты с подотчетниками.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура РасчетыСПодотчетниками(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Расчеты с подотчетным лицом станут отрицательными'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = '%ПредставлениеПодотчетногоЛица%,
		|Остаток выданных подотчетному лицу денежных средств: %ОстатокУПодотчетногоЛица% %ВалютаПредставление%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеПодотчетногоЛица = ПредставлениеПодотчетногоЛица(ВыборкаЗаписей.СотрудникПредставление,
			ВыборкаЗаписей.ВалютаПредставление, ВыборкаЗаписей.ДокументПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеПодотчетногоЛица%", ПредставлениеПодотчетногоЛица);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОстатокУПодотчетногоЛица%", ВыборкаЗаписей.ОстатокУПодотчетногоЛица);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Расчеты с поставщиками.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура РасчетыСПоставщиками(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Нет возможности зафиксировать расчеты с поставщиками'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыборкаЗаписей.ДвиженияДенежныхДокументов Тогда
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Долг Тогда
				ТекстСообщения = НСтр(
					"ru = '%ПредставлениеКонтрагента% - остаток задолженности перед поставщиком по документу расчетов меньше оплаченной суммы.
					|Разнесенная сумма платежа: %СуммаВалПриЗаписи% %ВалютаПредставление%.
					|Остаток задолженности перед поставщиком: %СуммаОстаткаЗадолженности% %ВалютаПредставление%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалПриЗаписи%", ВыборкаЗаписей.СуммаВалПриЗаписи);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаткаЗадолженности%", ВыборкаЗаписей.СуммаОстаткаЗадолженности);
			КонецЕсли;
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Аванс Тогда
				Если ВыборкаЗаписей.СуммаНепогашенныхАвансов = 0 Тогда
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - выданные по документу авансы поставщику уже полностью зачтены в товарных документах.'");
				Иначе
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - выданные по документу авансы поставщику уже частично зачтены в товарных документах.
						|Остаток незачтенных авансов: %СуммаНепогашенныхАвансов% %ВалютаПредставление%.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаНепогашенныхАвансов%", ВыборкаЗаписей.СуммаНепогашенныхАвансов);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Долг Тогда
				Если ВыборкаЗаписей.СуммаНепогашеннойЗадолженности = 0 Тогда
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - задолженность перед поставщиком по документу уже полностью оплачена.'");
				Иначе
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - задолженность перед поставщиком по документу уже частично оплачена.
						|Остаток непогашенной суммы задолженности: %СуммаНепогашеннойЗадолженности% %ВалютаПредставление%.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаНепогашеннойЗадолженности%",
						ВыборкаЗаписей.СуммаНепогашеннойЗадолженности);
				КонецЕсли;
			КонецЕсли;
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Аванс Тогда
				ТекстСообщения = НСтр(
					"ru = '%ПредставлениеКонтрагента% - зачитываемая сумма авансов не может быть больше остатка выданных авансов поставщику.
					|Зачитываемая сумма: %СуммаВалПриЗаписи% %ВалютаПредставление%
					|Остаток выданных авансов: %СуммаВыданныхАвансов% %ВалютаПредставление%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалПриЗаписи%", ВыборкаЗаписей.СуммаВалПриЗаписи);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВыданныхАвансов%", ВыборкаЗаписей.СуммаВыданныхАвансов);
			КонецЕсли;
			
		КонецЕсли;
		
		ПредставлениеКонтрагента = Справочники.Контрагенты.Представление(ВыборкаЗаписей.КонтрагентПредставление,
			ВыборкаЗаписей.ДоговорПредставление, ВыборкаЗаписей.ДокументПредставление,
			ВыборкаЗаписей.ЗаказПредставление, ВыборкаЗаписей.ТипРасчетовПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеКонтрагента%", ПредставлениеКонтрагента);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Расчеты с покупателями.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура РасчетыСПокупателями(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Нет возможности зафиксировать расчеты с покупателями'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыборкаЗаписей.ДвиженияДенежныхДокументов Тогда
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Долг Тогда
				ТекстСообщения = НСтр(
					"ru = '%ПредставлениеКонтрагента% - остаток задолженность покупателя по документу расчетов меньше разнесенной суммы платежа.
					|Разнесенная сумма платежа: %СуммаВалПриЗаписи% %ВалютаПредставление%.
					|Остаток задолженности покупателя: %СуммаОстаткаЗадолженности% %ВалютаПредставление%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалПриЗаписи%", ВыборкаЗаписей.СуммаВалПриЗаписи);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаткаЗадолженности%", ВыборкаЗаписей.СуммаОстаткаЗадолженности);
			КонецЕсли;
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Аванс Тогда
				Если ВыборкаЗаписей.СуммаНепогашенныхАвансов = 0 Тогда
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - полученные по документу авансы от покупателя уже полностью зачтены в товарных документах.'");
				Иначе
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - полученные по документу авансы от покупателя уже частично зачтены в товарных документах.
						|Остаток незачтенных авансов: %СуммаНепогашенныхАвансов% %ВалютаПредставление%.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаНепогашенныхАвансов%", ВыборкаЗаписей.СуммаНепогашенныхАвансов);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Долг Тогда
				Если ВыборкаЗаписей.СуммаНепогашеннойЗадолженности = 0 Тогда
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - задолженность покупателя по документу уже полностью оплачена.'");
				Иначе
					ТекстСообщения = НСтр(
						"ru = '%ПредставлениеКонтрагента% - задолженность покупателя по документу уже частично оплачена.
						|Остаток непогашенной суммы задолженности: %СуммаНепогашеннойЗадолженности% %ВалютаПредставление%.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаНепогашеннойЗадолженности%",
						ВыборкаЗаписей.СуммаНепогашеннойЗадолженности);
				КонецЕсли;
			КонецЕсли;
			
			Если ВыборкаЗаписей.ТипРасчетов = Перечисления.ТипыРасчетов.Аванс Тогда
				ТекстСообщения = НСтр(
					"ru = '%ПредставлениеКонтрагента% - зачитываемая сумма авансов не может быть больше остатка полученных авансов от покупателя.
					|Зачитываемая сумма: %СуммаВалПриЗаписи% %ВалютаПредставление%
					|Остаток полученных авансов: %СуммаПолученныхАвансов% %ВалютаПредставление%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалПриЗаписи%", ВыборкаЗаписей.СуммаВалПриЗаписи);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаПолученныхАвансов%", ВыборкаЗаписей.СуммаПолученныхАвансов);
			КонецЕсли;
			
		КонецЕсли;
		
		ПредставлениеКонтрагента = Справочники.Контрагенты.Представление(ВыборкаЗаписей.КонтрагентПредставление,
			ВыборкаЗаписей.ДоговорПредставление, ВыборкаЗаписей.ДокументПредставление,
			ВыборкаЗаписей.ЗаказПредставление, ВыборкаЗаписей.ТипРасчетовПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеКонтрагента%", ПредставлениеКонтрагента);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Внеоборотные активы.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ВнеоборотныеАктивы(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Возможно имущество уже списано или передано'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	ШаблонСообщения = НСтр("ru = 'Имущество: %НоменклатураХарактеристикаПартия%,
		|остаточная стоимость имущества: %Стоимость%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", СокрЛП(
			ВыборкаЗаписей.ВнеоборотныйАктивПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Стоимость%", ВыборкаЗаписей.ОстаточнаяСтоимость);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Суммовой учет в рознице.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура СуммовойУчетВРознице(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Задолженность розничной точки %СтруктурнаяЕдиницаПредставление% уже погашена'");
	
	ШаблонСообщения = НСтр("ru = 'Остаток задолженности (суммовой учет): %ОстатокВРознице% %ВалютаПредставление%'");
	
	ВыводитьВЗаголовокРасшифровку = Истина;
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%СтруктурнаяЕдиницаПредставление%", СокрЛП(
				ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление));
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ОстатокВРознице%", ВыборкаЗаписей.ОстатокВРознице); 
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление)); 
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает о попытке оприходовать номенклатуру с нулевой стоимостью.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ЗапасыОприходование(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Попытка оприходовать номенклатуру с нулевой стоимостью.'");
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%'");
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = ШаблонЗаголовкаСообщения + Символы.ПС + СтрЗаменить(ШаблонСообщения,
			"%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Подарочные сертификаты.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ПодарочныеСертификаты(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает остатка по подарочным сертификатам'");
	
	ШаблонСообщения = НСтр("ru = 'Вид сертификата: %ПодарочныйСертификат%,
		|номер сертификата %НомерСертификата%'");
		
	ВыводитьВЗаголовокРасшифровку = Истина;
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			ТекстЗаголовкаСообщения = ШаблонЗаголовкаСообщения;
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПодарочныйСертификат%", ВыборкаЗаписей.ПодарочныйСертификат);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСертификата%", ВыборкаЗаписей.НомерСертификата);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Бонусные баллы.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура БонусныеБаллы(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает остатка по бонусным баллам'");
	
	ШаблонСообщения = НСтр("ru = 'Бонусная карта: %БонуснаяКарта%'");
		
	ВыводитьВЗаголовокРасшифровку = Истина;
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			ТекстЗаголовкаСообщения = ШаблонЗаголовкаСообщения;
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%БонуснаяКарта%", ВыборкаЗаписей.БонуснаяКарта);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Денежные средства к поступлению.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура ДенежныеСредстваКПоступлению(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр("ru = 'Не хватает денежных средств к поступлению'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
	
	ШаблонСообщения = НСтр("ru = 'По документу %ДокументПередачиПредставление%,
						   |передано %СуммаОстаток% %Валюта%,
						   |недостаточно %Сумма% %Валюта%'");
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ДокументПередачиПредставление%", ВыборкаЗаписей.ДокументПередачиПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаток%", ВыборкаЗаписей.ОстатокДенежныхСредств);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", -ВыборкаЗаписей.СуммаВалОстаток);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура сообщает об ошибках проведения по регистру Расчеты по эквайрингу.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура РасчетыПоЭквайрингу(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ПараметрыЭквайринга = ЭквайринговыеОперацииСервер.ПолучитьПараметрыЭквайрингаДляДокумента(ДокОбъект);
	
	Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
		ПоказатьСообщениеОбОшибки = Истина;
		ПоказатьИнформационноеСообщение = Истина;
	Иначе
		ЗаголовокОшибки = НСтр("ru = 'Информация:'");
		Если ТипЗнч(ДокОбъект) = Тип("ДокументОбъект.ОперацияПоПлатежнымКартам") Тогда
			ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
				"ru = 'Обнаружен отрицательный остаток в расчетах по платежным картам'");
		Иначе
			ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
				"ru = 'Есть остаток в расчетах по платежным картам'");
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект);
		
		ПоказатьСообщениеОбОшибки = Ложь;
		ПоказатьИнформационноеСообщение = Ложь;
	КонецЕсли;
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыборкаЗаписей.СуммаВалОстаток < 0 Или ВыборкаЗаписей.КомиссияВалОстаток < 0 Тогда
			Если ПоказатьСообщениеОбОшибки Тогда
				ПоказатьСообщениеОбОшибки = Ложь;
				
				ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
				ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
					"ru = 'Нет возможности зафиксировать расчеты по платежным картам'");
				ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			КонецЕсли;
			
			ТекстСообщения = НСтр(
				"ru = '%ПредставлениеОперацииОплаты%
				|Разнесенная сумма платежа: %СуммаВалПриЗаписи% %ВалютаПредставление% (комиссия %КомиссияВалПриЗаписи%).
				|Остаток суммы операции оплаты: %СуммаОстаткаЗадолженности% %ВалютаПредставление% (комиссия %СуммаОстаткаКомиссии%).'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалПриЗаписи%", ВыборкаЗаписей.СуммаВалПриЗаписи);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаткаЗадолженности%", ВыборкаЗаписей.СуммаОстаткаЗадолженности);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КомиссияВалПриЗаписи%", ВыборкаЗаписей.КомиссияВалПриЗаписи);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаткаКомиссии%", ВыборкаЗаписей.СуммаОстаткаКомиссии);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
			
			Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
				ПредставлениеОперацииОплаты = СтрШаблон(
					НСтр("ru = '%1. %2 %3 - остаток суммы по операции оплаты меньше разнесенной суммы платежа.'"),
					ВыборкаЗаписей.ДокументПредставление, ВыборкаЗаписей.ВидПлатежнойКартыПредставление,
					ВыборкаЗаписей.НомерПлатежнойКартыПредставление);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеОперацииОплаты%", ПредставлениеОперацииОплаты);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеОперацииОплаты%",
					НСтр("ru = 'Остаток суммы по операции оплаты меньше разнесенной суммы платежа.'"));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект);
			КонецЕсли;
			
		ИначеЕсли ВыборкаЗаписей.СуммаВалОстаток > 0 Или ВыборкаЗаписей.КомиссияВалОстаток > 0 Тогда
			Если ПоказатьИнформационноеСообщение Тогда
				ПоказатьИнформационноеСообщение = Ложь;
				
				ЗаголовокОшибки = НСтр("ru = 'Информация:'");
				Если ТипЗнч(ДокОбъект) = Тип("ДокументОбъект.ОперацияПоПлатежнымКартам") Тогда
					ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
						"ru = 'Обнаружен отрицательный остаток в расчетах по платежным картам'");
				Иначе
					ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
						"ru = 'Есть остаток в расчетах по платежным картам'");
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект);
			КонецЕсли;
			
			ТекстСообщения = НСтр(
				"ru = '%ПредставлениеОперацииОплаты%
				|После проведения остаток долга банка составил: %СуммаВалОстаток% %ВалютаПредставление%.
				|Остаток суммы операции оплаты: %КомиссияВалОстаток% %ВалютаПредставление%.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалОстаток%", ВыборкаЗаписей.СуммаВалОстаток);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КомиссияВалОстаток%", ВыборкаЗаписей.КомиссияВалОстаток);
			
			Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
				ПредставлениеОперацииОплаты = СтрШаблон(
					НСтр("ru = 'Информация. %1. %2 %3 - остаток взаиморасчетов после проведения отличен от 0.'"),
					ВыборкаЗаписей.ДокументПредставление, ВыборкаЗаписей.ВидПлатежнойКартыПредставление,
					ВыборкаЗаписей.НомерПлатежнойКартыПредставление);
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеОперацииОплаты%",
					НСтр("ru = 'Информация. Остаток взаиморасчетов после проведения отличен от 0.'"));
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", СокрЛП(ВыборкаЗаписей.ВалютаПредставление));
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура сообщает об ошибках проведения по регистру Контроль операций эквайринга.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура КонтрольОперацийЭквайринга(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	ТекстЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Нет возможности зафиксировать расчеты по платежным картам'");
	ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
		
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ТекстСообщения = НСтр(
			"ru = '%ВидПлатежнойКартыПредставление% %НомерПлатежнойКартыПредставление% (%ДатаПлатежаПредставление%) - остаток суммы по карте меньше разнесенной суммы платежа.
			|Разнесенная сумма платежа: %СуммаВалПриЗаписи% %ВалютаПредставление%.
			|Остаток суммы по карте: %СуммаОстаткаЗадолженности% %ВалютаПредставление%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаВалПриЗаписи%", -ВыборкаЗаписей.СуммаВалПриЗаписи);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОстаткаЗадолженности%",
			ВыборкаЗаписей.СуммаОстаткаЗадолженности);

		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидПлатежнойКартыПредставление%",
			ВыборкаЗаписей.ВидПлатежнойКартыПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерПлатежнойКартыПредставление%",
			ВыборкаЗаписей.НомерПлатежнойКартыПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДатаПлатежаПредставление%",
			ВыборкаЗаписей.ДатаПлатежаПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВалютаПредставление%", ВыборкаЗаписей.ВалютаПредставление);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Серии номенклатуры.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - проводимый документ,
//  ВыборкаЗаписей - ВыборкаИзРезультатаЗапроса - выборка из результата запроса контроля остатков,
//  Отказ - Булево - признак наличия ошибок.
Процедура СерииНоменклатуры(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	Если ТипЗнч(ДокОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
		И Не Константы.КонтролироватьОстаткиПриПробитииЧековККМ.Получить() Тогда
		ЗаголовокОшибки = НСтр("ru = 'Внимание:'");
	Иначе
		ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
	КонецЕсли;
	
	ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
		"ru = 'Не хватает серий %ТипСтруктурнойЕдиницы% %СтруктурнаяЕдиницаПредставление%'");
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
		|серия %Серия%
		|остаток %КоличествоОстаток%, недостаточно %Количество%'");

		
	ВыводитьВЗаголовокРасшифровку = Истина;
	УчетПоНесколькимСкладам = Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить();
	УчетПоНесколькимПодразделениям = Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			Если (НЕ УчетПоНесколькимСкладам И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад)
				ИЛИ (НЕ УчетПоНесколькимПодразделениям И ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение)Тогда
				ПредставлениеСтруктурнойЕдиницы = "";
			Иначе
				Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ЯчейкаПредставление",ВыборкаЗаписей) Тогда
					ПредставлениеСтруктурнойЕдиницы = Справочники.СтруктурныеЕдиницы.Представление(
						ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление, ВыборкаЗаписей.ЯчейкаПредставление);
				Иначе
					ПредставлениеСтруктурнойЕдиницы = Справочники.СтруктурныеЕдиницы.Представление(
						ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление);
				КонецЕсли; 
				
			КонецЕсли;
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%СтруктурнаяЕдиницаПредставление%",
				ПредставлениеСтруктурнойЕдиницы);
			ТекстЗаголовкаСообщения = СтрЗаменить(ТекстЗаголовкаСообщения, "%ТипСтруктурнойЕдиницы%",
				Перечисления.ТипыСтруктурныхЕдиниц.Представление(ВыборкаЗаписей.ТипСтруктурнойЕдиницы));
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Серия%", ВыборкаЗаписей.СерияПредставление);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОстаток%", ВыборкаЗаписей.ОстатокЗапасыНаСкладах);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", -ВыборкаЗаписей.КоличествоОстатокЗапасыНаСкладах);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Сообщает об ошибках проведения по регистру Серии номенклатуры к расходу.
//
// Параметры:
//  ДокОбъект		 - ДокументОбъект - проверяемый документ,
//  ВыборкаЗаписей	 - ВыборкаИзРезультатаЗапроса - выборка с полями:
//                      * ТипСтруктурнойЕдиницы - ПеречислениеСсылка.ТипыСтруктурныхЕдиниц,
//                      * СтруктурнаяЕдиницаПредставление - Строка,
//                      * ЯчейкаПредставление - Строка,
//                      * ХарактеристикаПредставление - Строка,
//                      * ПартияПредставление - Строка,
//                      * СерияПредставление - Строка.
//  Отказ			 - Булево - признак наличия ошибок.
Процедура СерииНоменклатурыКРасходу(ДокОбъект, ВыборкаЗаписей, Отказ) Экспорт
	
	ШаблонЗаголовкаСообщения = НСтр("ru = 'Ошибка:
	|Не хватает серий к расходу %ТипСтруктурнойЕдиницы% %СтруктурнаяЕдиницаПредставление%'");
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%,
	|серия %Серия%'");
	
	ВыводитьВЗаголовокРасшифровку = Истина;
	УчетПоНесколькимСкладам = Константы.ФункциональнаяОпцияУчетПоНесколькимСкладам.Получить();
	УчетПоНесколькимПодразделениям = Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ЭтоСклад = ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад;
		ЭтоПодразделение = ВыборкаЗаписей.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение;
		ОтсутствуетПредставлениеСтруктурнойЕдиницы = (НЕ УчетПоНесколькимСкладам И ЭтоСклад)
			ИЛИ (Не УчетПоНесколькимПодразделениям И ЭтоПодразделение);
		
		Если ВыводитьВЗаголовокРасшифровку Тогда
			Если ОтсутствуетПредставлениеСтруктурнойЕдиницы Тогда
				ПредставлениеСтруктурнойЕдиницы = "";
			Иначе
				Если НоменклатураВДокументахКлиентСервер.ЕстьРеквизитОбъекта("ЯчейкаПредставление", ВыборкаЗаписей) Тогда
					ПредставлениеСтруктурнойЕдиницы = Справочники.СтруктурныеЕдиницы.Представление(
						ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление, ВыборкаЗаписей.ЯчейкаПредставление);
				Иначе
					ПредставлениеСтруктурнойЕдиницы = Справочники.СтруктурныеЕдиницы.Представление(
						ВыборкаЗаписей.СтруктурнаяЕдиницаПредставление);
				КонецЕсли; 
				
			КонецЕсли;
			ТекстЗаголовкаСообщения = СтрЗаменить(ШаблонЗаголовкаСообщения, "%СтруктурнаяЕдиницаПредставление%",
				ПредставлениеСтруктурнойЕдиницы);
			ТекстЗаголовкаСообщения = СтрЗаменить(ТекстЗаголовкаСообщения, "%ТипСтруктурнойЕдиницы%",
				Перечисления.ТипыСтруктурныхЕдиниц.Представление(ВыборкаЗаписей.ТипСтруктурнойЕдиницы));
			ОбщегоНазначения.СообщитьПользователю(ТекстЗаголовкаСообщения, ДокОбъект, , , Отказ);
			ВыводитьВЗаголовокРасшифровку = Ложь;
		КонецЕсли;
		
		ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(ВыборкаЗаписей.НоменклатураПредставление,
			ВыборкаЗаписей.ХарактеристикаПредставление, ВыборкаЗаписей.ПартияПредставление);
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Серия%", ВыборкаЗаписей.СерияПредставление);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокОбъект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует строку представления банковского счета или кассы.
// 
// Параметры:
// 	БанковскийСчетКассаПредставление - Строка - представление банковского счета или кассы,
// 	ТипДенежныхСредствПредставление - Строка - представление типа денежных средств,
// 	ВалютаПредставление - Строка - представление валюты.
// Возвращаемое значение:
// 	Строка - представление банковского счета или кассы.
Функция ПредставлениеБанковскогоСчетаКассы(БанковскийСчетКассаПредставление, ТипДенежныхСредствПредставление = "",
	ВалютаПредставление = "")
	
	КомпонентыПредставления = Новый Массив;
	КомпонентыПредставления.Добавить(СокрЛП(БанковскийСчетКассаПредставление));
	
	Если ЗначениеЗаполнено(ТипДенежныхСредствПредставление) Тогда
		КомпонентыПредставления.Добавить(СокрЛП(ТипДенежныхСредствПредставление));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВалютаПредставление) Тогда
		КомпонентыПредставления.Добавить(СокрЛП(ВалютаПредставление));
	КонецЕсли;
	
	Возврат СтрСоединить(КомпонентыПредставления, ", ");
	
КонецФункции

// Возвращает представление подотчетного лица.
// 
// Параметры:
// 	ПодотчетноеЛицоПредставление - Строка - представление подотчетного лица,
// 	ВалютаПредставление - Строка - представление валюты,
// 	ДокументПредставление - Строка - представление документа,
// Возвращаемое значение:
// 	Строка - представление подотчетного лица.
Функция ПредставлениеПодотчетногоЛица(ПодотчетноеЛицоПредставление, ВалютаПредставление = "", ДокументПредставление = "")
	
	КомпонентыПредставления = Новый Массив;
	КомпонентыПредставления.Добавить(СокрЛП(ПодотчетноеЛицоПредставление));
	
	Если ЗначениеЗаполнено(ВалютаПредставление) Тогда
		КомпонентыПредставления.Добавить(СокрЛП(ВалютаПредставление));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументПредставление) Тогда
		КомпонентыПредставления.Добавить(СокрЛП(ДокументПредставление));
	КонецЕсли;
	
	Возврат СтрСоединить(КомпонентыПредставления, ", ");
	
КонецФункции

#КонецОбласти

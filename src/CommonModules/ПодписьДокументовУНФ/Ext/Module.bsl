
#Region ServiceAPI

Функция ФизическоеЛицоИзПодписи(Подпись) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Подпись) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат Подпись.ФизическоеЛицо;
	
КонецФункции

Процедура ДобавитьУсловноеОформлениеСписка(ЭтаФорма, СтруктураПараметров) Экспорт
	
	ИмяПоляПроверки = СтруктураПараметров.ИмяПоляПроверки;
	ИмяПоляОформления = СтруктураПараметров.ИмяПоляОформления;
	
	//(1)
	ЭлементУсловногоОформления = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУсловногоОформления.Поля, ИмяПоляОформления);
	
КонецПроцедуры

#Область ПодписантыИРасшифровки

Процедура ЗаполнитьФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки) Экспорт
	
	Для каждого ЭлементСоответствия Из ПодписиИФаксимиле Цикл
		
		ПлашкаПодписи = ПечатьДокументовУНФ.ПолучитьПлашкуПодписиБезопасно(ОбластьМакета, ЭлементСоответствия.Ключ, ,
			Ошибки);
		Если ПлашкаПодписи = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеОбъекта[ЭлементСоответствия.Значение]) Тогда
			
			ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(ДанныеОбъекта[ЭлементСоответствия.Значение]);
			Если ЗначениеЗаполнено(ДвоичныеДанные) Тогда
				
				ПлашкаПодписи.Картинка = Новый Картинка(ДвоичныеДанные);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеНовых

Функция ДокументыСПравиламиЗаполнения() Экспорт
	
	// Пример:
	// Метаданные.Документы.ИнвентаризацияЗапасов.Имя
	//		или
	// "ИнвентаризацияЗапасов"
	
	ДокументыСПравилами = Новый Массив;
	ДокументыСПравилами.Добавить("ИнвентаризацияЗапасов");
	ДокументыСПравилами.Добавить("ПриходныйОрдер");
	ДокументыСПравилами.Добавить("СверкаВзаиморасчетов");
	ДокументыСПравилами.Добавить("ЧекККМ");
	
	Возврат ДокументыСПравилами;
	
КонецФункции

Процедура ОбработкаЗаполненияПодписей(ОбъектЗаполнения, Организация = Неопределено, СтруктурнаяЕдиница = Неопределено, Касса = Неопределено) Экспорт
	
	МетаданныеОбъекта = ОбъектЗаполнения.Метаданные();
	
	СоответствиеИменРеквизитовПодписей = Справочники.Подписи.ПереченьРеквизитовПодписейВОбъекте(МетаданныеОбъекта.Имя);
	Если СоответствиеИменРеквизитовПодписей = Неопределено Тогда
		
		ЗаполнитьПодписиПоСтандартномуАлгоритму(ОбъектЗаполнения, МетаданныеОбъекта, Организация, СтруктурнаяЕдиница, Касса);
		
	Иначе
		
		ЗаполнитьПодписиПоИндивидуальнымПравилам(СоответствиеИменРеквизитовПодписей, ОбъектЗаполнения, МетаданныеОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодписиПоСтандартномуАлгоритму(ОбъектЗаполнения, МетаданныеОбъекта, Организация, СтруктурнаяЕдиница, Касса)
	
	ЗначениеРеквизитов = Новый Структура("ПодписьРуководителя, ПодписьГлавногоБухгалтера, ПодписьКладовщика, ПодписьМОЛ, ПодписьКассира");
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		ЗначениеРеквизитов.ПодписьРуководителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ПодписьРуководителя", Истина);
		ЗначениеРеквизитов.ПодписьГлавногоБухгалтера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ПодписьГлавногоБухгалтера", Истина);
		
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеОбъекта) Тогда
		
		ЗначениеРеквизитов.ПодписьРуководителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЗаполнения.Организация, "ПодписьРуководителя", Истина);
		ЗначениеРеквизитов.ПодписьГлавногоБухгалтера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЗаполнения.Организация, "ПодписьГлавногоБухгалтера", Истина);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		
		ЗначениеРеквизитов.ПодписьКладовщика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ПодписьМОЛ", Истина);
		ЗначениеРеквизитов.ПодписьМОЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ПодписьМОЛ", Истина);
		
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("СтруктурнаяЕдиница", МетаданныеОбъекта) Тогда
		
		ЗначениеРеквизитов.ПодписьКладовщика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЗаполнения.СтруктурнаяЕдиница, "ПодписьМОЛ", Истина);
		ЗначениеРеквизитов.ПодписьМОЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЗаполнения.СтруктурнаяЕдиница, "ПодписьМОЛ", Истина);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Касса) Тогда
		
		ЗначениеРеквизитов.ПодписьКассира = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Касса, "ПодписьКассира", Истина);
		
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("Касса", МетаданныеОбъекта) И ЗначениеЗаполнено(ОбъектЗаполнения.Касса) Тогда
		
		ЗначениеРеквизитов.ПодписьКассира = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЗаполнения.Касса, "ПодписьКассира", Истина);
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбъектЗаполнения, ЗначениеРеквизитов);
	
КонецПроцедуры

Процедура ЗаполнитьПодписиПоИндивидуальнымПравилам(СоответствиеИменРеквизитовПодписей, ОбъектЗаполнения, МетаданныеОбъекта)
	
	ЗначениеРеквизитов = Новый Структура;
	
	Для каждого ЭлементСоответствия Из СоответствиеИменРеквизитовПодписей Цикл
		
		ЗначениеРеквизитов.Вставить(ЭлементСоответствия.Ключ, Неопределено);
		
		Если ЭлементСоответствия.Ключ = "Комиссия" Тогда
			
			ЗаполнитьКомиссию(ЗначениеРеквизитов[ЭлементСоответствия.Ключ], МетаданныеОбъекта.Имя, ОбъектЗаполнения.Организация);
			Продолжить;
			
		КонецЕсли;
		
		ЗначениеРеквизитов[ЭлементСоответствия.Ключ] = Вычислить("ОбъектЗаполнения." + ЭлементСоответствия.Значение);
		
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ОбъектЗаполнения, ЗначениеРеквизитов);
	
КонецПроцедуры

Процедура ЗаполнитьКомиссию(Комиссия, ИмяОбъектаЗаполнения, Организация)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтраслевойДокумент", ИмяОбъектаЗаполнения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ Справочник.Комиссии.Ссылка КАК Комиссия
	|ГДЕ НЕ КомиссияРасформирована И Организация = &Организация И ОтраслевойДокумент = &ОтраслевойДокумент
	|УПОРЯДОЧИТЬ ПО ДатаПодписаниеПриказа УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Комиссия = Выборка.Комиссия;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#EndRegion
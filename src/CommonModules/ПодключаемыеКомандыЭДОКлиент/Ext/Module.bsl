#Область ПрограммныйИнтерфейс

// Выполнение подключаемой команды ЭДО.
//
// Параметры:
//  Команда - КомандаФормы - вызывающая команда.
//  Форма - ФормаКлиентскогоПриложения - вызывающая форма.
//  Источник - РеквизитФормы -реквизит формы.
//
Процедура ВыполнитьПодключаемуюКомандуЭДО(Знач Команда, Знач Форма, Знач Источник) Экспорт
	
	ОписаниеКоманды = Команда;
	Если ТипЗнч(Команда) = Тип("КомандаФормы") Тогда
		
		АдресКомандВоВременномХранилище = Форма.Команды.Найти("АдресКомандЭДОВоВременномХранилище").Действие;
		ОписаниеКоманды = ПодключаемыйКомандыЭДОСлужебныйВызовСервера.ОписаниеКомандыЭДО(Команда.Имя, 
																							АдресКомандВоВременномХранилище);
																							
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОписаниеКоманды", ОписаниеКоманды);
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("Источник", Источник);
	
	Если ТипЗнч(Источник) = Тип("ДанныеФормыСтруктура")
		И (Источник.Ссылка.Пустая() Или Форма.Модифицированность) Тогда
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Данные еще не записаны.
				|Выполнение действия ""%1"" возможно только после записи данных.
				|Данные будут записаны.'"),
			ОписаниеКоманды.Представление);
			
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПодключаемуюКомандуЭДОПодтверждениеЗаписи",
			ПодключаемыеКомандыЭДОСлужебныйКлиент, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ПодключаемыеКомандыЭДОСлужебныйКлиент.ВыполнитьПодключаемуюКомандуЭДОПодтверждениеЗаписи(
		Неопределено, ДополнительныеПараметры);
	
КонецПроцедуры

// Обновляет список команд в зависимости от текущего контекста.
//
// Параметры:
//   Форма - УправляемаяФорма - форма, для которой требуется обновление команд.
//   Источник - ДанныеФормыСтруктура, ТаблицаФормы - контекст для проверки условий (Форма.Объект или Форма.Элементы.Список).
//
Процедура ОбновитьКоманды(Форма, Источник) Экспорт

	Структура = Новый Структура("ПараметрыУправленияВидимостьюЭДО", Null);
	ЗаполнитьЗначенияСвойств(Структура, Форма);
	ПараметрыКлиента = Структура.ПараметрыУправленияВидимостьюЭДО;
	Если ТипЗнч(ПараметрыКлиента) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ТаблицаФормы") Тогда
		ДоступностьКоманд = (Источник.ТекущаяСтрока <> Неопределено);
	Иначе
		ДоступностьКоманд = Истина;
	КонецЕсли;
	
	Если Не ДоступностьКоманд Или Не ПараметрыКлиента.ЕстьУсловияВидимости Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныеОбъекты = Новый Массив;
	
	Если ТипЗнч(Источник) = Тип("ТаблицаФормы") Тогда
		ВыделенныеСтроки = Источник.ВыделенныеСтроки;
		Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
			Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				Продолжить;
			КонецЕсли;
			ТекущаяСтрока = Источник.ДанныеСтроки(ВыделеннаяСтрока);
			Если ТекущаяСтрока <> Неопределено Тогда
				ВыбранныеОбъекты.Добавить(ТекущаяСтрока);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ВыбранныеОбъекты.Добавить(Источник);
	КонецЕсли;
	
	ОбъектыДляПроверкиАлгоритмом = Новый Массив;
	Для Каждого Объект Из ВыбранныеОбъекты Цикл
		Если ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") Тогда
			СсылкаНаИсточник = Объект.Ссылка;
		Иначе
			СсылкаНаИсточник = Объект;
		КонецЕсли;
		ОбъектыДляПроверкиАлгоритмом.Добавить(СсылкаНаИсточник);
	КонецЦикла;
	
	// В эту переменную будем записывать значения, вычисленные по алгоритмам проверки, чтобы минимизировать
	// клиент-серверные вызовы.
	КэшЗначенийАлгоритмовПроверки = Новый Соответствие;
	
	Для Каждого Команда Из ПараметрыКлиента.КомандыСУсловиямиВидимости Цикл
		КомандаЭлемент = Форма.Элементы[Команда.ИмяВФорме];
		Видимость = Истина;
		
		Для Каждого Объект Из ВыбранныеОбъекты Цикл
			
			ЗначениеСтроки = Неопределено;
			Если Объект.Свойство(Команда.ИмяРеквизитаУсловия, ЗначениеСтроки) Тогда
				Видимость = Команда.ЗначениеУсловия = ЗначениеСтроки;
				
				Если Не Видимость Тогда
					Прервать;
				КонецЕсли;
				
			ИначеЕсли ЗначениеЗаполнено(Команда.ИмяАлгоритмаПроверкиУсловия) Тогда
				// Если задан алгоритм проверки, выполняем его, кэшируя результат в разрезе имени реквизита проверки.
				ЗначениеСтроки = КэшЗначенийАлгоритмовПроверки[Команда.ИмяАлгоритмаПроверкиУсловия];
				
				Если ЗначениеСтроки = Неопределено Тогда
					ЗначениеСтроки = ПодключаемыйКомандыЭДОСлужебныйВызовСервера.ПроверитьУсловиеПоАлгоритму(ОбъектыДляПроверкиАлгоритмом,
						Команда.ИмяАлгоритмаПроверкиУсловия);
					КэшЗначенийАлгоритмовПроверки.Вставить(Команда.ИмяАлгоритмаПроверкиУсловия, ЗначениеСтроки);
				КонецЕсли;
					
				Видимость = Команда.ЗначениеУсловия = ЗначениеСтроки;
				
				Если Не Видимость Тогда
					Прервать;
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Источник) = Тип("ТаблицаФормы") Тогда
				// В динамическом списке нет поля для проверки условий видимости
				Возврат;
			Иначе 
				// Для формы объекта в этом случае показываем все команды.
			КонецЕсли;
		КонецЦикла;
			
		КомандаЭлемент.Видимость = Видимость;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

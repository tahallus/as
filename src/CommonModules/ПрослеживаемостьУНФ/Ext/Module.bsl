
#Область ПрограммныйИнтерфейс

// Возвращает признак применения Федерального Закона //!!++ указать номер закона
// который вводит понятие прослеживаемости для определенных групп товаров
// Параметры
// Дата - тип дата, в данном параметре передается
//        дата на которую необходимо определить признак применения ФЗ
// Возвращаемое значение:
//  Булево - признак применения
//           Истина - ФЗ применяется
//           Ложь   - ФЗ не применяется
Функция ВедетсяУчетПрослеживаемыхТоваров(Дата = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Дата) Тогда
		НаДату = Дата;
	Иначе
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	ВестиУчетПрослеживаемыхТоваров = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеКонстанты("ВестиУчетПрослеживаемыхТоваров");
	ВестиУчетГТД = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеКонстанты("ФункциональнаяОпцияУчетГТД");
	Если НЕ (ВестиУчетПрослеживаемыхТоваров И ВестиУчетГТД) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//НачалоПримененияФЗ = '20210101';
	//
	//Если НаДату < НачалоПримененияФЗ Тогда
	//	Возврат Ложь;
	//Иначе
		Возврат Истина;
	//КонецЕсли;
	
КонецФункции

// Функция определяет нужно ли автоматически подбирать РНПТ в документе, который уменьшает количество товара.
//
// Параметры:
//  ТабличнаяЧасть  - ДокументТабличнаяЧасть - табличная часть с прослеживаемыми товарами.
//  Дата                     - Дата - дата документа.
//  ЭтоПрослеживаемяОперация - Булево - Если в документе несколько операций, то сюда нужно передать признак, что операция прослеживаемая.
//
// Возвращаемое значение:
//   Булево   - Истина, если требуется подбирать РНПТ.
//
Функция ТребуетсяПодобратьРНПТ(пТабличнаяЧасть, Знач пДата, Знач пЭтоПрослеживаемяОперация) Экспорт
	
	ТребуетсяПодобратьРНПТ = Ложь;
	
	Если пЭтоПрослеживаемяОперация Тогда
		ВестиУчетПрослеживаемыхТоваров = ПрослеживаемостьУНФ.ВедетсяУчетПрослеживаемыхТоваров(пДата);
		
		ПрослеживаемыйТовар = пТабличнаяЧасть.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
		ЕстьПрослеживаемыйТовар = ПрослеживаемыйТовар.Количество() <> 0;
		
		ТребуетсяПодобратьРНПТ = (ВестиУчетПрослеживаемыхТоваров И ЕстьПрослеживаемыйТовар);
	КонецЕсли;
	
	Возврат ТребуетсяПодобратьРНПТ;
	
КонецФункции // ТребуетсяПодобратьРНПТ()


// Возвращает признак входит ли документ в переходный период по прослеживаемости
// То есть в период, когда можно подавать уведомления об остатках и корректировать поданные данные
// Параметры
// Дата - Дата - в данном параметре передается
//        дата на которую необходимо определить относится ли документ к переходному периоду
// Возвращаемое значение:
//  Булево - признак применения
//           Истина - Переходный период, можно корректировать остатки
//           Ложь   - Не переходный период 
Функция ПереходныйПериодПоПрослеживаемости(Дата) Экспорт
	
	Если Дата >= '20210701' И Дата < '20220701' Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Процедура обновляет признак прослеживаемости товара в табличной части документа.
//
// Параметры:
//    ТабличнаяЧасть		 - ТабличнаяЧасть - табличная часть документа.
//		В таблице обязательно наличие колонок "Номенклатура" и "ПрослеживаемыйТовар".
//    ДатаДокумента 		 - Дата - текущая дата документа.
//    ПрослеживаемаяОперация - Булево - признак прослеживаемости операции документа.
//
Процедура ОбновитьПризнакПрослеживаемости(ТабличнаяЧасть, ДатаДокумента, ПрослеживаемаяОперация = Истина) Экспорт
	
	Если НЕ ПрослеживаемостьУНФ.ВедетсяУчетПрослеживаемыхТоваров(ДатаДокумента) ИЛИ НЕ ПрослеживаемаяОперация Тогда
		Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
			СтрокаТаблицы.ПрослеживаемыйТовар = Ложь;
		КонецЦикла;
	Иначе
		
		// Получим реквизиты используемой номенклатуры в таблице.
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть.Выгрузить(), "Номенклатура", Истина);
		
		ОбщегоНазначенияУНФКлиентСервер.УдалитьНеЗаполненныеЭлементыМассива(МассивНоменклатуры);
		
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
		МассивНоменклатуры,
		"ПрослеживаемыйТовар");
		
		Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицы, "ЕстьВДокументеРеализации") 
				И СтрокаТаблицы.ЕстьВДокументеРеализации
				ИЛИ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицы, "ЕстьВДокументеПоступления") 
				И СтрокаТаблицы.ЕстьВДокументеПоступления Тогда
				// Не обновляем признак прослеживаемости для строк исходного документа. 
				Продолжить;
			КонецЕсли;
			
			РеквизитыТекущейНоменклатуры = РеквизитыНоменклатуры[СтрокаТаблицы.Номенклатура];
			Если РеквизитыТекущейНоменклатуры <> Неопределено Тогда
				СтрокаТаблицы.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры;
				Если СтрокаТаблицы.ПрослеживаемыйТовар Тогда
					// Дополнительно очистим номер ГТД для прослеживаемого товара.
					СтрокаТаблицы.НомерГТД = Неопределено;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Проверяет заполнение прослеживаемости запасов
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - Проверяемый документ
//  ДанныеПроверки	 - Структура		 - Структура дополнительных данных проверки. Обязательные своства:
//		ИмяТЧ		 - Строка			 - 
//  Отказ			 - Булево			 - 
//
Процедура ПроверитьЗаполнениеДанныхПрослеживаемости(ДокументОбъект, ДанныеПроверки, Отказ) Экспорт
	
	ВестиУчетПрослеживаемыхТоваров = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеКонстанты("ВестиУчетПрослеживаемыхТоваров");
	ВестиУчетГТД = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеКонстанты("ФункциональнаяОпцияУчетГТД");
	Если Не ВестиУчетГТД Или Не ВестиУчетПрослеживаемыхТоваров Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ДокументОбъект[ДанныеПроверки.ИмяТЧ] Цикл
		
		КоличествоЗапасов = СтрокаТаблицы.Количество;
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") И КоличествоЗапасов < 0 Тогда
			КоличествоЗапасов = - КоличествоЗапасов;
		КонецЕсли; 
		
		Если ТипЗнч(СтрокаТаблицы.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
			КоэффициентЕдиницыИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ЕдиницаИзмерения, "Коэффициент");
			КоличествоЗапасов = КоличествоЗапасов * КоэффициентЕдиницыИзмерения;
		КонецЕсли;
		
		Если СтрокаТаблицы.ПрослеживаемыйТовар Тогда
			
			СтруктураОтбора = Новый Структура("ИдентификаторСтроки", СтрокаТаблицы.ИдентификаторСтроки);
			СтрокиСведенияПрослеживаемости = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
			КоличествоРНПТ = 0;
			Для каждого СтрокаПрослеживаемость Из СтрокиСведенияПрослеживаемости Цикл
				КоличествоРНПТ = КоличествоРНПТ + СтрокаПрослеживаемость.Количество;
			КонецЦикла; 
			Если КоличествоЗапасов <> КоличествоРНПТ Тогда
				Префикс = "%1[%2].";
				Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					Префикс, ДанныеПроверки.ИмяТЧ, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));
				ТекстСообщенияРасшифровка = НСтр("ru = 'Количество РНПТ не совпадает с количеством товара в строке.'");
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка" ,"Корректность", НСтр("ru = 'РНПТ'"),
					СтрокаТаблицы.НомерСтроки, ДанныеПроверки.ИмяСписка, ТекстСообщенияРасшифровка);
				Поле = Префикс + "РНПТ";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
			
		КонецЕсли
		
	КонецЦикла;
	
КонецПроцедуры

#Область ОперацииСПрослеживаемымиТоварами

Процедура СформироватьДвиженияПоступлениеТоваров(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрослеживаемыеТовары", Новый ТаблицаЗначений);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОперацииСПрослеживаемымиТоварами", Новый ТаблицаЗначений);
	
	ВестиУчетПрослеживаемыхТоваров = СтруктураДополнительныеСвойства.УчетнаяПолитика.ВестиУчетПрослеживаемыхТоваров;
	Если Не ВестиУчетПрослеживаемыхТоваров Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ДляПроведения.Вставить("ПриводитьНомерКНомеруНаПечать", Истина);
	
	СформироватьДвиженияПрослеживаемыхТоваров(ДокументСсылка, СтруктураДополнительныеСвойства);
	
	ПодготовитьВременнуюТаблицуШапкаПрослеживаемость(ДокументСсылка, СтруктураДополнительныеСвойства);
	ПодготовитьВременнуюТаблицуЗапасыПрослеживаемость(ДокументСсылка, СтруктураДополнительныеСвойства);
	
	РеквизитыШапкиТаблицаЗначений = ПодготовитьРеквизитыШапки(ДокументСсылка, СтруктураДополнительныеСвойства);
	Реквизиты = РеквизитыШапкиТаблицаЗначений[0];
	ТекстЗапроса = ТекстЗапросаОперацииСПрослеживаемымиТоварамиПоступлениеТоваров(ДокументСсылка);
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ДокументСсылка, Реквизиты, СтруктураДополнительныеСвойства, ТекстЗапроса);
	
КонецПроцедуры

Процедура СформироватьДвиженияРеализацияТоваров(ДокументСсылка, СтруктураДополнительныеСвойства, ИмяВременнойТаблицыЗапасы = "ВременнаяТаблицаЗапасы") Экспорт
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрослеживаемыеТовары", Новый ТаблицаЗначений);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОперацииСПрослеживаемымиТоварами", Новый ТаблицаЗначений);
	
	ВестиУчетПрослеживаемыхТоваров = СтруктураДополнительныеСвойства.УчетнаяПолитика.ВестиУчетПрослеживаемыхТоваров;
	Если Не ВестиУчетПрослеживаемыхТоваров Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ДляПроведения.Вставить("ПриводитьНомерКНомеруНаПечать", Истина);
	
	СформироватьДвиженияПрослеживаемыхТоваров(ДокументСсылка, СтруктураДополнительныеСвойства, ИмяВременнойТаблицыЗапасы);
	СформироватьДвиженияДляОтчетаОперацииСПрослеживаемымиТоварами(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры

Процедура СформироватьДвиженияДляОтчетаОперацииСПрослеживаемымиТоварами(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	ПодготовитьВременнуюТаблицуШапкаПрослеживаемость(ДокументСсылка, СтруктураДополнительныеСвойства);
	ПодготовитьВременнуюТаблицуЗапасыПрослеживаемость(ДокументСсылка, СтруктураДополнительныеСвойства);
	
	РеквизитыШапкиТаблицаЗначений = ПодготовитьРеквизитыШапки(ДокументСсылка, СтруктураДополнительныеСвойства);
	Реквизиты = РеквизитыШапкиТаблицаЗначений[0];
	
	Если Реквизиты.Владелец().Колонки.Найти("Контрагент") <> Неопределено И Реквизиты.Контрагент <> Неопределено Тогда
		СтранаРегистрацииКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент, "СтранаРегистрации");
		Если ГосударствоЧленТаможенногоСоюза(СтранаРегистрацииКонтрагента) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаОперацииСПрослеживаемымиТоварамиРеализацияТоваров(ДокументСсылка);
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ДокументСсылка, Реквизиты, СтруктураДополнительныеСвойства, ТекстЗапроса);
	
КонецПроцедуры

Процедура ПодготовитьВременнуюТаблицуШапкаПрослеживаемость(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ТекстЗапроса = "";
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ТекстЗапроса = ТекстВТ_Реквизиты()
		+ ОбщегоНазначенияУНФКлиентСервер.ТекстРазделителяЗапросовПакета()
		+
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.ДокументОснование КАК ДокументОснование,
		|	ВременнаяТаблицаШапка.ВидОперации КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Период КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ВременнаяТаблицаШапка.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
		|	ВременнаяТаблицаШапка.Ссылка.Договор.ВидДоговора КАК ВидДоговора,
		|	ЕСТЬNULL(ВТ_Реквизиты.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка,
		|	ВТ_Реквизиты КАК ВТ_Реквизиты";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОприходованиеЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.Ссылка.ДокументОснование КАК ДокументОснование,
		|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Дата КАК ДатаВходящегоДокумента,
		|	ВременнаяТаблицаШапка.Ссылка.Номер КАК НомерВходящегоДокумента,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
		|	НЕОПРЕДЕЛЕНО КАК ВидДоговора
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РасходнаяНакладная")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
		ТекстЗапроса = ТекстВТ_Реквизиты()
		+ ОбщегоНазначенияУНФКлиентСервер.ТекстРазделителяЗапросовПакета()
		+
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.ВидОперации КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаШапка.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
		|	ВременнаяТаблицаШапка.Ссылка.Договор.ВидДоговора КАК ВидДоговора,
		|	ЕСТЬNULL(ВТ_Реквизиты.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка,
		|	ВТ_Реквизиты КАК ВТ_Реквизиты";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Ссылка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
		|	НЕОПРЕДЕЛЕНО КАК ВидДоговора
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ТекстЗапроса = ТекстВТ_Реквизиты()
		+ ОбщегоНазначенияУНФКлиентСервер.ТекстРазделителяЗапросовПакета()
		+
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Период КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
		|	НЕОПРЕДЕЛЕНО КАК ВидДоговора,
		|	ЕСТЬNULL(ВТ_Реквизиты.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка,
		|	ВТ_Реквизиты КАК ВТ_Реквизиты";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.Ссылка.ВидОперации КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Ссылка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
		|	НЕОПРЕДЕЛЕНО КАК ВидДоговора,
		|	ВременнаяТаблицаШапка.Ссылка.КодОперацииПрослеживаемости КАК КодОперацииПрослеживаемости
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РаспределениеЗатрат") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Ссылка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
		|	НЕОПРЕДЕЛЕНО КАК ВидДоговора,
		|	ВременнаяТаблицаШапка.Ссылка.КодОперацииПрослеживаемости КАК КодОперацииПрослеживаемости
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СборкаЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаШапка.Ссылка КАК Ссылка,
		|	ВременнаяТаблицаШапка.Ссылка.ВидОперации КАК ВидОперации,
		|	ВременнаяТаблицаШапка.Дата КАК Период,
		|	ВременнаяТаблицаШапка.Дата КАК Дата,
		|	ВременнаяТаблицаШапка.Ссылка.Номер КАК Номер,
		|	ВременнаяТаблицаШапка.Ссылка.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
		|	НЕОПРЕДЕЛЕНО КАК ВидДоговора,
		|	ВременнаяТаблицаШапка.Ссылка.СтруктурнаяЕдиницаЗапасов КАК СтруктурнаяЕдиницаЗапасов
		|ПОМЕСТИТЬ ВТ_ШапкаПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса
	+ ОбщегоНазначенияУНФКлиентСервер.ТекстРазделителяЗапросовПакета()
	+ ТекстЗапросаВременнаяТаблицаШапкаОтчетОбОперациях();
	
	Запрос.УстановитьПараметр("ДатаДокумента", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
КонецПроцедуры

Функция ТекстВТ_Реквизиты()
	
	Возврат "ВЫБРАТЬ
	|	МАКСИМУМ(ВложеннаяТаблицаРеквизиты.ЕстьНДС) КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьНДС
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|	ГДЕ
	|		ВременнаяТаблицаЗапасы.СтавкаНДС.ВидСтавкиНДС <> ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)) КАК ВложеннаяТаблицаРеквизиты";
	
КонецФункции

Процедура ПодготовитьВременнуюТаблицуЗапасыПрослеживаемость(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ТекстЗапроса = "";
	
	// Поступления
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаЗапасы.Сумма - ВременнаяТаблицаЗапасы.СуммаНДСЗакупкиПродажи КАК СуммаБезНДС,
		|	ВременнаяТаблицаЗапасы.СтавкаНДС.ВидСтавкиНДС КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОприходованиеЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаЗапасы.Сумма КАК СуммаБезНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС) КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	// Реализация
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаЗапасы.Сумма - ВременнаяТаблицаЗапасы.СуммаНДСЗакупкиПродажи КАК СуммаБезНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС) КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаЗапасы.Себестоимость - ВременнаяТаблицаЗапасы.СуммаНДСРег КАК СуммаБезНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС) КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасы.КлючСвязи КАК КлючСвязи,
		|	ВременнаяТаблицаЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаЗапасы.Сумма - ВременнаяТаблицаЗапасы.СуммаНДСЗакупкиПродажи КАК СуммаБезНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС) КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасы.Количество,
		|	ВременнаяТаблицаЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеЗапасов")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПеремещениеЗапасов")
		Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РаспределениеЗатрат") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
		|	0 КАК СуммаБезНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС) КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СборкаЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВременнаяТаблицаЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	0 КАК СуммаБезНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС) КАК ВидСтавкиНДС,
		|	ВременнаяТаблицаЗапасыПрослеживаемость.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВременнаяТаблицаЗапасыПрослеживаемость.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ВТ_ЗапасыПрослеживаемость
		|ИЗ
		|	ВременнаяТаблицаЗапасыПрослеживаемость КАК ВременнаяТаблицаЗапасыПрослеживаемость";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса
	+ "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ТекстЗапроса = ТекстЗапроса
		+
		"ВЫБРАТЬ
		|	""Продажа"" КАК ВидСтроки,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС
		|ПОМЕСТИТЬ ВТ_СуммыБезНДС
		|ИЗ
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|ГДЕ
		|	ВТ_ЗапасыПрослеживаемость.ПрослеживаемыйТовар
		|	И ВТ_ЗапасыПрослеживаемость.Количество >= 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Возврат"",
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	СУММА(-ВТ_ЗапасыПрослеживаемость.СуммаБезНДС)
		|ИЗ
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|ГДЕ
		|	ВТ_ЗапасыПрослеживаемость.ПрослеживаемыйТовар
		|	И ВТ_ЗапасыПрослеживаемость.Количество < 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура";
	Иначе
		ТекстЗапроса = ТекстЗапроса
		+
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС
		|ПОМЕСТИТЬ ВТ_СуммыБезНДС
		|ИЗ
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|ГДЕ
		|	ВТ_ЗапасыПрослеживаемость.ПрослеживаемыйТовар
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура";
	КонецЕсли;
	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.ВыполнитьПакет();
	
КонецПроцедуры

Функция ПодготовитьРеквизитыШапки(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ_ШапкаПрослеживаемость.Ссылка КАК Регистратор,
	|	ВТ_ШапкаПрослеживаемость.ВидДоговора КАК ВидДоговора,
	|	ВТ_ШапкаПрослеживаемость.Организация КАК Организация,
	|	ВТ_ШапкаПрослеживаемость.Период КАК Период,
	|	ВТ_ШапкаПрослеживаемость.СтранаРегистрации КАК СтранаРегистрации,
	|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
	|ИЗ
	|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ПодготовитьТаблицуРНПТИзВременнойТаблицы(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Процедура СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ДокументСсылка, Реквизиты, СтруктураДополнительныеСвойства, ТекстЗапроса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапроса;
	ТаблицаОперации = Запрос.Выполнить().Выгрузить();
	
	Если Не ЗначениеЗаполнено(ТаблицаОперации) Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОперацииСПрослеживаемымиТоварами", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	ТаблицаОперацииСПрослеживаемымиТоварами = ПодготовитьПустуюТаблицуДляДвиженийОперацииСПрослеживаемымиТоварами();
	Параметры = ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации);
	
	Для Каждого СтрокаТаблицы Из Параметры.Операции Цикл
		Запись = ТаблицаОперацииСПрослеживаемымиТоварами.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		
		НомерДокументаЗаполнен = Не ПустаяСтрока(Запись.НомерДокумента);
		Если СтруктураДополнительныеСвойства.ДляПроведения.ПриводитьНомерКНомеруНаПечать
			И НомерДокументаЗаполнен Тогда
			Запись.НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(
				Запись.ДатаДокумента,
				Запись.НомерДокумента,
				"");
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОперацииСПрослеживаемымиТоварами", ТаблицаОперацииСПрослеживаемымиТоварами);
	
КонецПроцедуры

Функция ТекстЗапросаОперацииСПрослеживаемымиТоварамиПоступлениеТоваров(ДокументСсылка)
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОприходованиеЗапасов") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.НомерВходящегоДокумента, """") КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратРанееУтраченногоТовара) КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент
		|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеПрослеживаемости
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки,
		|	ВременнаяТаблицаШапкаОтчетОбОперациях КАК ВременнаяТаблицаШапкаОтчетОбОперациях
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)),
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.НомерВходящегоДокумента, """"),
		|	ВТ_ШапкаПрослеживаемость.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура КАК Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации КАК ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента КАК ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента КАК НомерДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации КАК КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации КАК ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент КАК Контрагент,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)) КАК СуммаБезНДС
		|ИЗ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости КАК ВТ_ПодготовленныеДанныеПрослеживаемости
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
		|		ПО ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура = ВТ_СуммыБезНДС.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.НомерВходящегоДокумента, """") КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная) КАК ТипДокументаВПрослеживаемости,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ КАК ОтражениеВОтчетности,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Приобретение)
		|	КОНЕЦ КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеПрослеживаемости
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки,
		|	ВременнаяТаблицаШапкаОтчетОбОперациях КАК ВременнаяТаблицаШапкаОтчетОбОперациях
		|ГДЕ
		|	(ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|				И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|				И НЕ ВременнаяТаблицаШапкаОтчетОбОперациях.ЭтоИмпорт
		|				И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ПоступлениеОтПоставщика)
		|			ИЛИ ТИПЗНАЧЕНИЯ(ВТ_ШапкаПрослеживаемость.Ссылка) = ТИП(Документ.ОприходованиеЗапасов))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Приобретение)
		|	КОНЕЦ,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)),
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.НомерВходящегоДокумента, """"),
		|	ВТ_ШапкаПрослеживаемость.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки),
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество),
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости),
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)),
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.НомерВходящегоДокумента, """"),
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТИПЗНАЧЕНИЯ(ВТ_ШапкаПрослеживаемость.ДокументОснование) = ТИП(Документ.ЧекККМ)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратОтРозничногоПокупателя)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУменьшениеВыданный)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки,
		|	ВременнаяТаблицаШапкаОтчетОбОперациях КАК ВременнаяТаблицаШапкаОтчетОбОперациях
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И НЕ ВременнаяТаблицаШапкаОтчетОбОперациях.ЭтоИмпорт
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.ДатаВходящегоДокумента, ДАТАВРЕМЯ(1, 1, 1)),
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ЕСТЬNULL(ВТ_ШапкаПрослеживаемость.НомерВходящегоДокумента, """"),
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаШапкаОтчетОбОперациях.ПлательщикНДС
		|				И ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТИПЗНАЧЕНИЯ(ВТ_ШапкаПрослеживаемость.ДокументОснование) = ТИП(Документ.ЧекККМ)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратОтРозничногоПокупателя)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУменьшениеВыданный)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВТ_ШапкаПрослеживаемость.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура КАК Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации КАК ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента КАК ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента КАК НомерДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации КАК КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации КАК ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент КАК Контрагент,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)) КАК СуммаБезНДС
		|ИЗ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости КАК ВТ_ПодготовленныеДанныеПрослеживаемости
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
		|		ПО ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура = ВТ_СуммыБезНДС.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОперацииСПрослеживаемымиТоварамиРеализацияТоваров(ДокументСсылка)
	
	ТекстЗапроса = "";
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СборкаЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПередачаВПроизводство) КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
		|	И ВТ_ШапкаПрослеживаемость.СтруктурнаяЕдиницаЗапасов.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РаспределениеЗатрат") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ВТ_ШапкаПрослеживаемость.КодОперацииПрослеживаемости КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ШапкаПрослеживаемость.КодОперацииПрослеживаемости";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ВТ_ШапкаПрослеживаемость.КодОперацииПрослеживаемости КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВТ_ШапкаПрослеживаемость.КодОперацииПрослеживаемости,
		|	ВТ_ШапкаПрослеживаемость.Ссылка";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеЗапасов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.НедостачаВыявленнаяВХодеИнвентаризации) КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Контрагент";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	""Продажа"" КАК ВидСтроки,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ОтчетОРозничныхПродажах) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.РеализацияРозничная) КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеПрослеживаемости
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ВТ_ЗапасыПрослеживаемость.Количество >= 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Возврат"",
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество),
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости),
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ОтчетОРозничныхПродажах),
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях),
		|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратОтРозничногоПокупателя),
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ВТ_ЗапасыПрослеживаемость.Количество < 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВТ_ШапкаПрослеживаемость.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ВидСтроки КАК Комментарий,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура КАК Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации КАК ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента КАК ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента КАК НомерДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации КАК КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации КАК ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент КАК Контрагент,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)) КАК СуммаБезНДС
		|ИЗ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости КАК ВТ_ПодготовленныеДанныеПрослеживаемости
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
		|		ПО ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура = ВТ_СуммыБезНДС.Номенклатура
		|			И ВТ_ПодготовленныеДанныеПрослеживаемости.ВидСтроки = ВТ_СуммыБезНДС.ВидСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ВидСтроки,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	СУММА(ВТ_ЗапасыПрослеживаемость.СуммаБезНДС) КАК СуммаБезНДС,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ОтчетКомиссионераОПродажах)
		|	КОНЕЦ КАК ТипДокументаВПрослеживаемости,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ КАК ОтражениеВОтчетности,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ИНН = """"
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.РеализацияРозничная)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПолучениеКомитентомСведенийОРеализацииТовараКомиссионером)
		|			КОНЕЦ
		|	КОНЕЦ КАК КодОперации,
		|	ВЫБОР
		|		КОГДА ОтчетКомиссионераОПродажахПокупатели.СчетФактура = ЗНАЧЕНИЕ(Документ.СчетФактура.ПустаяСсылка)
		|			ТОГДА ВТ_ШапкаПрослеживаемость.Ссылка
		|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.СчетФактура
		|	КОНЕЦ КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
		|		ПО ВТ_ЗапасыПрослеживаемость.КлючСвязи = ОтчетКомиссионераОПродажахПокупатели.КлючСвязи
		|			И (ОтчетКомиссионераОПродажахПокупатели.Ссылка = &ДокументСсылка)
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ОтчетКомиссионераОПродажахПокупатели.СчетФактура = ЗНАЧЕНИЕ(Документ.СчетФактура.ПустаяСсылка)
		|			ТОГДА ВТ_ШапкаПрослеживаемость.Ссылка
		|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.СчетФактура
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ОтчетКомиссионераОПродажах)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ИНН = """"
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.РеализацияРозничная)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПолучениеКомитентомСведенийОРеализацииТовараКомиссионером)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	МИНИМУМ(ВременнаяТаблицаСведенияПрослеживаемости.НомерСтроки),
		|	СУММА(-ВременнаяТаблицаСведенияПрослеживаемости.Количество),
		|	СУММА(-ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости),
		|	СУММА(-ВТ_ЗапасыПрослеживаемость.СуммаБезНДС),
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ОтчетКомиссионераОПродажах)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ИНН = """"
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратОтРозничногоПокупателя)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПолучениеКомитентомСведенийОВозвратеТовараКомиссионеру)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ОтчетКомиссионераОПродажахПокупатели.СчетФактура = ЗНАЧЕНИЕ(Документ.СчетФактура.ПустаяСсылка)
		|			ТОГДА ВТ_ШапкаПрослеживаемость.Ссылка
		|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.СчетФактура
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
		|		ПО ВТ_ЗапасыПрослеживаемость.КлючСвязи = ОтчетКомиссионераОПродажахПокупатели.КлючСвязи
		|			И (ОтчетКомиссионераОПродажахПокупатели.Ссылка = &ДокументСсылка)
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ОтчетКомиссионераОПродажахПокупатели.СчетФактура = ЗНАЧЕНИЕ(Документ.СчетФактура.ПустаяСсылка)
		|			ТОГДА ВТ_ШапкаПрослеживаемость.Ссылка
		|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.СчетФактура
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.ОтчетКомиссионераОПродажах)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель.ИНН = """"
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратОтРозничногоПокупателя)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПолучениеКомитентомСведенийОВозвратеТовараКомиссионеру)
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Контрагент";
	Иначе // РН
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ВТ_ШапкаПрослеживаемость.Дата КАК ДатаДокумента,
		|	ВТ_ШапкаПрослеживаемость.Номер КАК НомерДокумента,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
		|	КОНЕЦ КАК ТипДокументаВПрослеживаемости,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ КАК ОтражениеВОтчетности,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
		|	КОНЕЦ КАК КодОперации,
		|	ВТ_ШапкаПрослеживаемость.Ссылка КАК ДокументОперации,
		|	ВТ_ШапкаПрослеживаемость.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеПрослеживаемости
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки,
		|	ВременнаяТаблицаШапкаОтчетОбОперациях КАК ВременнаяТаблицаШапкаОтчетОбОперациях
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И НЕ ВременнаяТаблицаШапкаОтчетОбОперациях.ЭтоИмпорт
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.Количество),
		|	СУММА(ВременнаяТаблицаСведенияПрослеживаемости.КоличествоПрослеживаемости),
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУменьшениеПолученный)
		|	КОНЕЦ,
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Контрагент
		|ИЗ
		|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость,
		|	ВТ_ЗапасыПрослеживаемость КАК ВТ_ЗапасыПрослеживаемость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСведенияПрослеживаемости КАК ВременнаяТаблицаСведенияПрослеживаемости
		|		ПО ВТ_ЗапасыПрослеживаемость.ИдентификаторСтроки = ВременнаяТаблицаСведенияПрослеживаемости.ИдентификаторСтроки,
		|	ВременнаяТаблицаШапкаОтчетОбОперациях КАК ВременнаяТаблицаШапкаОтчетОбОперациях
		|ГДЕ
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> НЕОПРЕДЕЛЕНО
		|	И ВременнаяТаблицаСведенияПрослеживаемости.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И НЕ ВременнаяТаблицаШапкаОтчетОбОперациях.ЭтоИмпорт
		|	И ВТ_ШапкаПрослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗапасыПрослеживаемость.Номенклатура,
		|	ВременнаяТаблицаСведенияПрослеживаемости.РНПТ,
		|	ВТ_ШапкаПрослеживаемость.Номер,
		|	ВТ_ШапкаПрослеживаемость.Ссылка,
		|	ВТ_ШапкаПрослеживаемость.Контрагент,
		|	ВТ_ШапкаПрослеживаемость.Дата,
		|	НАЧАЛОПЕРИОДА(ВТ_ШапкаПрослеживаемость.Дата, КВАРТАЛ),
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ШапкаПрослеживаемость.ЕстьНДС
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУменьшениеПолученный)
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура КАК Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.Количество) КАК Количество,
		|	СУММА(ВТ_ПодготовленныеДанныеПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации КАК ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента КАК ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента КАК НомерДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации КАК КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации КАК ДокументОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент КАК Контрагент,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)) КАК СуммаБезНДС
		|ИЗ
		|	ВТ_ПодготовленныеДанныеПрослеживаемости КАК ВТ_ПодготовленныеДанныеПрослеживаемости
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
		|		ПО ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура = ВТ_СуммыБезНДС.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.РНПТ,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДатаДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ПериодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.НомерДокумента,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Номенклатура,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ТипДокументаВПрослеживаемости,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ОтражениеВОтчетности,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.КодОперации,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.Контрагент,
		|	ВТ_ПодготовленныеДанныеПрослеживаемости.ДокументОперации";
	КонецЕСли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаШапкаОтчетОбОперациях()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_ШапкаПрослеживаемость.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|				ИЛИ ВТ_ШапкаПрослеживаемость.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоИмпорт,
	|	ВЫБОР
	|		КОГДА СистемыНалогообложенияОрганизацийСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПлательщикНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаШапкаОтчетОбОперациях
	|ИЗ
	|	ВТ_ШапкаПрослеживаемость КАК ВТ_ШапкаПрослеживаемость
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&ДатаДокумента, ) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|		ПО ВТ_ШапкаПрослеживаемость.Организация = СистемыНалогообложенияОрганизацийСрезПоследних.Организация";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьПустуюТаблицуДляДвиженийОперацииСПрослеживаемымиТоварами()
	
	ПустаяТаблицаДвижений = Новый ТаблицаЗначений;
	
	Для Каждого Реквизит Из Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварами.Реквизиты Цикл
		ПустаяТаблицаДвижений.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	
	Для Каждого Измерение Из Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварами.Измерения Цикл
		ПустаяТаблицаДвижений.Колонки.Добавить(Измерение.Имя, Измерение.Тип);
	КонецЦикла;
	
	Для Каждого Ресурс Из Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварами.Ресурсы Цикл
		ПустаяТаблицаДвижений.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип);
	КонецЦикла;
	
	Период = Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварами.СтандартныеРеквизиты.Период;
	ПустаяТаблицаДвижений.Колонки.Добавить(Период.Имя, Период.Тип);
	
	НомерСтроки = Метаданные.РегистрыСведений.ОперацииСПрослеживаемымиТоварами.СтандартныеРеквизиты.НомерСтроки;
	ПустаяТаблицаДвижений.Колонки.Добавить(НомерСтроки.Имя, НомерСтроки.Тип);
	
	Возврат ПустаяТаблицаДвижений;
	
КонецФункции

Функция ПолучитьПустуюТаблицуДвижений(ИмяРегистра, ДокументСсылка) Экспорт
	
	ПустаяТаблицаДвижений = Новый ТаблицаЗначений;
	
	Для Каждого Реквизит Из Метаданные.РегистрыНакопления[ИмяРегистра].Реквизиты Цикл
		ПустаяТаблицаДвижений.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	
	Для Каждого Измерение Из Метаданные.РегистрыНакопления[ИмяРегистра].Измерения Цикл
		ПустаяТаблицаДвижений.Колонки.Добавить(Измерение.Имя, Измерение.Тип);
	КонецЦикла;
	
	Для Каждого Ресурс Из Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы Цикл
		ПустаяТаблицаДвижений.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип);
	КонецЦикла;
	
	Если Метаданные.РегистрыНакопления[ИмяРегистра].ВидРегистра
		= Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
		ВидДвижения = Метаданные.РегистрыНакопления[ИмяРегистра].СтандартныеРеквизиты.ВидДвижения;
		ПустаяТаблицаДвижений.Колонки.Добавить(ВидДвижения.Имя, ВидДвижения.Тип);
	КонецЕсли;
	
	Период = Метаданные.РегистрыНакопления[ИмяРегистра].СтандартныеРеквизиты.Период;
	ПустаяТаблицаДвижений.Колонки.Добавить(Период.Имя, Период.Тип);
	
	НомерСтроки = Метаданные.РегистрыНакопления[ИмяРегистра].СтандартныеРеквизиты.НомерСтроки;
	ПустаяТаблицаДвижений.Колонки.Добавить(НомерСтроки.Имя, НомерСтроки.Тип);
	
	// Для получения реквизитов шапки будем хранить в таблице ссылку на документ движения.
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ТипЗнч(ДокументСсылка));
	ПустаяТаблицаДвижений.Колонки.Добавить("СсылкаНаДокумент", Новый ОписаниеТипов(МассивТипов));
	
	Возврат ПустаяТаблицаДвижений;
	
КонецФункции

Функция ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы операций с прослеживаемыми товарами:
	СписокОбязательныхКолонок = ""
	+ "ОтражениеВОтчетности,"          // <ПеречислениеСсылка.ПорядокОтраженияВОтчетностиПоПрослеживаемости> - отчетная форма операции
	+ "ПериодОперации,"                // <Дата> - начало квартала в котором отражается операция
	+ "РНПТ,"                          // <СправочникСсылка.НомераГТД>
	+ "ДокументОперации,"              // <ДокументСсылка>
	+ "Контрагент,"                    // <СправочникСсылка.Контрагенты>
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура>
	+ "Количество,"                    // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"    // <Число,26,11> - количество в единицах прослеживаемости
	+ "СуммаБезНДС,"                   // <Число,15,2>
	+ "ТипДокументаВПрослеживаемости," // <СправочникСсылка.ТипыДокументов>
	+ "НомерДокумента,"                // <Строка, 11>
	+ "ДатаДокумента,"                 // <Дата>
	+ "КодОперации";                   // <СправочникСсылка.КодыОперацийПрослеживаемости>
	
	ПодготовленнаяТаблица = ПолучитьТаблицуПараметровПроведения(
		ТаблицаОперации, СписокОбязательныхКолонок);
		
	ПоляОтбораУникальныхЗаписей = "ОтражениеВОтчетности,ДокументОперации,Контрагент,Номенклатура,СуммаБезНДС";
	ТаблицаОперацийСНесколькимиРНПТ = ПодготовленнаяТаблица.Скопировать(, ПоляОтбораУникальныхЗаписей);
	ТаблицаОперацийСНесколькимиРНПТ.Колонки.Добавить("КоличествоУникальных", Новый ОписаниеТипов("Число"));
	ТаблицаОперацийСНесколькимиРНПТ.ЗаполнитьЗначения(1, "КоличествоУникальных");
	ТаблицаОперацийСНесколькимиРНПТ.Свернуть(ПоляОтбораУникальныхЗаписей, "КоличествоУникальных");
	Отбор = Новый Структура("КоличествоУникальных", 1);
	СтрокиКУдалению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Отбор);
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаОперацийСНесколькимиРНПТ.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	// Для товаров с несколькими РНПТ необходимо распределить сумму операции пропорционально количеству различных РНПТ.
	Если ТаблицаОперацийСНесколькимиРНПТ.Количество() > 0 Тогда
		
		// Отсортируем таблицу для последующего одинакого распределения суммы по количеству РНПТ.
		ПодготовленнаяТаблица.Сортировать("Номенклатура Возр, РНПТ Возр");
		ПодготовленнаяТаблица.Индексы.Добавить(ПоляОтбораУникальныхЗаписей);
		ТаблицаОперацийСНесколькимиРНПТ.Индексы.Добавить(ПоляОтбораУникальныхЗаписей);
		
		Отбор = Новый Структура(ПоляОтбораУникальныхЗаписей);
		Для Каждого СтрокаТаблицы Из ПодготовленнаяТаблица Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.СуммаБезНДС) Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
			
			СтрокиССуммамиКРаспределению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Отбор);
			Если СтрокиССуммамиКРаспределению.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			// Удалим строки с суммами к распределению, чтобы больше не пытаться их распределить.
			Для Каждого СтрокаКУдалению Из СтрокиССуммамиКРаспределению Цикл
				ТаблицаОперацийСНесколькимиРНПТ.Удалить(СтрокаКУдалению);
			КонецЦикла;
			
			СтрокиТребующиеРаспределенияСумм = ПодготовленнаяТаблица.НайтиСтроки(Отбор);
			КоличествоСтрокКРаспределению = СтрокиТребующиеРаспределенияСумм.Количество();
			МассивКоэффициентов = Новый Массив;
			Для Каждого СтрокаКРаспределению Из СтрокиТребующиеРаспределенияСумм Цикл
				МассивКоэффициентов.Добавить(СтрокаКРаспределению.Количество);
			КонецЦикла;
			
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			СтрокаТаблицы.СуммаБезНДС, МассивКоэффициентов, 2);
			
			Для ИндексЗаписи = 0 По КоличествоСтрокКРаспределению - 1 Цикл
				СтрокиТребующиеРаспределенияСумм[ИндексЗаписи].СуммаБезНДС = МассивСумм[ИндексЗаписи];
			КонецЦикла
		КонецЦикла;
	КонецЕсли;
	
	Параметры.Вставить("Операции", ПодготовленнаяТаблица);
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьТаблицуПараметровПроведения(ИсходнаяТаблица, СписокКолонок) Экспорт

	Если ИсходнаяТаблица = Неопределено Тогда
		
		ТаблицаРезультат = Новый ТаблицаЗначений;
		Колонки = Новый Структура(СписокКолонок);
		Для каждого Колонка Из Колонки Цикл
			ТаблицаРезультат.Колонки.Добавить(Колонка.Ключ);
		КонецЦикла;
		Возврат ТаблицаРезультат;

	Иначе

		Возврат ИсходнаяТаблица.Скопировать(, СписокКолонок);

	КонецЕсли;

КонецФункции

#КонецОбласти

// Процедура - Формирует движения прослеживаемых товаров
//
// Параметры:
//  ДокументСсылка					 - ДокументСсылка	 - ссылка на документ. формирующий движения
//  СтруктураДополнительныеСвойства	 - Структура		 - дополнительные свойства проведения
//  ИмяВременнойТаблицыЗапасы		 - Строка			 - имя временной таблицы запасов в менеджере временных таблиц
//
Процедура СформироватьДвиженияПрослеживаемыхТоваров(ДокументСсылка, СтруктураДополнительныеСвойства, ИмяВременнойТаблицыЗапасы = "ВременнаяТаблицаЗапасы") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	Если ДокументСсылка.Метаданные().Реквизиты.Найти("Контрагент") <> Неопределено Тогда
		Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Контрагент");
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Иначе
		Запрос.УстановитьПараметр("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	КонецЕсли;
	Если СтруктураДополнительныеСвойства.ДляПроведения.Свойство("ЭтоКонтрагентИзЕАЭС")
		И ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		Запрос.УстановитьПараметр("ЭтоПоступлениеИзЕАЭС", СтруктураДополнительныеСвойства.ДляПроведения.ЭтоКонтрагентИзЕАЭС);
	Иначе
		Запрос.УстановитьПараметр("ЭтоПоступлениеИзЕАЭС", Ложь);
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РасходнаяНакладная") 
		И ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаНаКомиссию Тогда
		Запрос.Текст = ТекстЗапросаДвиженияПрослеживаемыхТоваровПередачаНаКомиссию();
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		И ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтКомиссионера Тогда
		Запрос.Текст = ТекстЗапросаДвиженияПрослеживаемыхТоваровВозвратОтКомиссионера();
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионера") 
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
		Запрос.Текст = ТекстЗапросаДвиженияПрослеживаемыхКомиссионныхТоваровОбщий();
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РаспределениеЗатрат") Тогда
		Запрос.Текст = ТекстЗапросаДвиженияПрослеживаемыхТоваровРаспределениеЗатрат();
	Иначе
		Запрос.Текст = ТекстЗапросаДвиженияПрослеживаемыхТоваровОбщий();
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВременнаяТаблицаЗапасы", ИмяВременнойТаблицыЗапасы);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПрослеживаемыеТовары", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура СформироватьДвиженияГТД(ТаблицаТоваров, ТаблицаДвиженийГТД, Движения, Отказ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТаблицаДвиженийГТД) Тогда
		Возврат;
	КонецЕсли;
	
	Если Ложь Тогда
		ТаблицаДвиженийГТД = Новый ТаблицаЗначений;
	КонецЕсли;
	
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("Номенклатура", СтрокаТовара.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", СтрокаТовара.Характеристика);
		СтруктураПоиска.Вставить("Партия", СтрокаТовара.Партия);
		СтруктураПоиска.Вставить("СтранаПроисхождения", СтрокаТовара.СтранаПроисхождения);
		
		НужноРаспределить = СтрокаТовара.Количество;
		
		СтрокиОстатковГТД = ТаблицаДвиженийГТД.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаОстатковГТД Из СтрокиОстатковГТД Цикл
			
			Если НужноРаспределить = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрокаОстатковГТД.ТоварыНаКомиссии Тогда
				Движение = Движения.ЗапасыПринятыеВРазрезеГТД.Добавить();
			Иначе
				Движение = Движения.ЗапасыВРазрезеГТД.Добавить();
			КонецЕсли;
			
			// Стандартные реквизиты
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = СтрокаОстатковГТД.Период;
			// Измерения
			Движение.Организация = СтрокаОстатковГТД.Организация;
			Движение.Номенклатура = СтрокаОстатковГТД.Номенклатура;
			Движение.Характеристика = СтрокаОстатковГТД.Характеристика;
			Движение.Партия = СтрокаОстатковГТД.Партия;
			Движение.НомерГТД = СтрокаОстатковГТД.НомерГТД; 
			Движение.СтранаПроисхождения = СтрокаОстатковГТД.СтранаПроисхождения;
			// Ресурсы
			Если НужноРаспределить <= СтрокаОстатковГТД.КоличествоОстаток Тогда
				Движение.Количество = -НужноРаспределить;
				НужноРаспределить = 0;
			Иначе
				Движение.Количество = -СтрокаОстатковГТД.КоличествоОстаток;
				НужноРаспределить = НужноРаспределить - СтрокаОстатковГТД.КоличествоОстаток;
			КонецЕсли;
			
			СтрокаОстатковГТД.КоличествоОстаток = СтрокаОстатковГТД.КоличествоОстаток - Движение.Количество;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Движения.ЗапасыВРазрезеГТД.Записывать = Истина;
	Движения.ЗапасыПринятыеВРазрезеГТД.Записывать = Истина;

КонецПроцедуры

// Процедура - Подобрать РНПТ по остаткам
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - объект документа, в котором следует заполнить таблицу РНПТ
//  Отказ			 - Булево			 - признак ошибки подбора
//
Процедура ПодобратьРНПТОстатки(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаТоваров = ДокументОбъект.Запасы.Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРНПТИсходныйДокумент = ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров);
	ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров);
	
	КонтролироватьОстаток = Константы.КонтролироватьОстаткиПриПроведении.Получить();
	
	Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.Запасы Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		// Для пустого списка РНПТ используем заполнение, для заполненного - контроль
		Если КоличествоРНПТ = 0 Тогда
			
			// Для корректировочного документа сначала подберем РНПТ из исходного документа.
			ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент);
			
			Если ОсталосьПодобрать <> 0 Тогда
				// Добавляем РНПТ из остатков.
				ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки);
			КонецЕсли;
			
			Если КонтролироватьОстаток И ОсталосьПодобрать <> 0 Тогда
				СообщитьОшибкуПодбора(ДокументОбъект, СтрокаТабличнойЧасти, ОсталосьПодобрать, Отказ);
			КонецЕсли;
			
		Иначе
			
			// Проверка заполнения табличной части
			ДанныеПроверки = Новый Структура;
			ДанныеПроверки.Вставить("ИмяТЧ", "Запасы");
			ДанныеПроверки.Вставить("ИмяСписка", НСтр("ru = 'Товары'"));
			ПроверитьЗаполнениеДанныхПрослеживаемости(ДокументОбъект, ДанныеПроверки, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("РНПТ, ИдентификаторСтроки", "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

// Процедура - Подобрать РНПТ по данным продаж / закупок
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - объект документа, в котором следует заполнить таблицу РНПТ
//  Отказ			 - Булево			 - признак ошибки подбора
//
Процедура ПодобратьРНПТВозврат(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаТоваров = ДокументОбъект.Запасы.Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРНПТПродажПоступлений = ТаблицаРНПТПродажПоступлений(ДокументОбъект, ТаблицаТоваров);
	
	Если ТаблицаРНПТПродажПоступлений = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	КонтролироватьОстаток = Константы.КонтролироватьОстаткиПриПроведении.Получить();
	
	Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.Запасы Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		// Для пустого списка РНПТ используем заполнение, для заполненного - контроль
		Если КоличествоРНПТ = 0 Тогда
			
			// Для корректировочного документа сначала подберем РНПТ из исходного документа.
			ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТПродажПоступлений);
			
			Если КонтролироватьОстаток И ОсталосьПодобрать <> 0 Тогда
				СообщитьОшибкуПодбора(ДокументОбъект, СтрокаТабличнойЧасти, ОсталосьПодобрать, Отказ);
			КонецЕсли;
			
		Иначе
			
			// Проверка заполнения табличной части
			ДанныеПроверки = Новый Структура;
			ДанныеПроверки.Вставить("ИмяТЧ", "Запасы");
			ДанныеПроверки.Вставить("ИмяСписка", НСтр("ru = 'Товары'"));
			ПроверитьЗаполнениеДанныхПрослеживаемости(ДокументОбъект, ДанныеПроверки, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("РНПТ, ИдентификаторСтроки", "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

// Процедура - Подобрать РНПТ по данным продаж / закупок
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - объект документа, в котором следует заполнить таблицу РНПТ
//  Отказ			 - Булево			 - признак ошибки подбора
//
Процедура ПодобратьРНПТКомиссия(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаТоваров = ДокументОбъект.Запасы.Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомиссионераОСписании")
		Или ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтКомиссионера
		Или ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера Тогда
		ТаблицаРНПТ = ТаблицаРНПТПередачНаКомиссию(ДокументОбъект, ТаблицаТоваров);
	ИначеЕсли ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах Тогда
		ТаблицаРНПТ = ТаблицаРНПТОтчетКомиссионераОВозвратах(ДокументОбъект, ТаблицаТоваров);
	КонецЕсли;
	
	Если ТаблицаРНПТ = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	КонтролироватьОстаток = Константы.КонтролироватьОстаткиПриПроведении.Получить();
	
	Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.Запасы Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		// Для пустого списка РНПТ используем заполнение, для заполненного - контроль
		Если КоличествоРНПТ = 0 Тогда
			
			// Для корректировочного документа сначала подберем РНПТ из исходного документа.
			ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТ);
			
			Если КонтролироватьОстаток И ОсталосьПодобрать <> 0 Тогда
				СообщитьОшибкуПодбора(ДокументОбъект, СтрокаТабличнойЧасти, ОсталосьПодобрать, Отказ);
			КонецЕсли;
			
		Иначе
			
			// Проверка заполнения табличной части
			ДанныеПроверки = Новый Структура;
			ДанныеПроверки.Вставить("ИмяТЧ", "Запасы");
			ДанныеПроверки.Вставить("ИмяСписка", НСтр("ru = 'Товары'"));
			ПроверитьЗаполнениеДанныхПрослеживаемости(ДокументОбъект, ДанныеПроверки, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("РНПТ, ИдентификаторСтроки", "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

// Процедура - Подобрать РНПТ для розницы комбинированным способом
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - объект документа, в котором следует заполнить таблицу РНПТ
//  Отказ			 - Булево			 - признак ошибки подбора
//
Процедура ПодобратьРНПТРозница(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаТоваров = ДокументОбъект.Запасы.Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРНПТПродажПоступлений = ТаблицаРНПТПродажПоступлений(ДокументОбъект, ТаблицаТоваров);
	ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров);
	
	КонтролироватьОстаток = Константы.КонтролироватьОстаткиПриПроведении.Получить();
	
	НужноВыполнятьПроверкуЗаполненияРНПТ = Ложь;
	
	НомерЦикла = 1;
	НужноВыполнятьПроверкуЗаполненияРНПТ =
		ПодобратьРНПТРозницаДляПродажИлиВозвратов(
			ДокументОбъект,
			Отказ,
			ТаблицаРНПТПродажПоступлений,
			ТаблицаРНПТОстатки,
			КонтролироватьОстаток,
			НомерЦикла);
	
	НомерЦикла = 2;
	НужноВыполнятьПроверкуЗаполненияРНПТ = НужноВыполнятьПроверкуЗаполненияРНПТ Или
		ПодобратьРНПТРозницаДляПродажИлиВозвратов(
			ДокументОбъект,
			Отказ,
			ТаблицаРНПТПродажПоступлений,
			ТаблицаРНПТОстатки,
			КонтролироватьОстаток,
			НомерЦикла);
	
	Если НужноВыполнятьПроверкуЗаполненияРНПТ Тогда
		// Проверка заполнения табличной части
		ДанныеПроверки = Новый Структура;
		ДанныеПроверки.Вставить("ИмяТЧ", "Запасы");
		ДанныеПроверки.Вставить("ИмяСписка", НСтр("ru = 'Товары'"));
		ПроверитьЗаполнениеДанныхПрослеживаемости(ДокументОбъект, ДанныеПроверки, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодобратьРНПТРозницаДляПродажИлиВозвратов(
	ДокументОбъект,
	Отказ,
	ТаблицаРНПТПродажПоступлений,
	ТаблицаРНПТОстатки,
	КонтролироватьОстаток,
	НомерЦикла)
	
	НужноВыполнятьПроверкуЗаполненияРНПТ = Ложь;
	
	Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.Запасы Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		Если ОсталосьПодобрать < 0 Тогда
			ЭтоВозврат = Истина;
			ОсталосьПодобрать = -ОсталосьПодобрать;
		Иначе
			ЭтоВозврат = Ложь;
		КонецЕсли;
		Если ЭтоВозврат И (ТаблицаРНПТПродажПоступлений = Неопределено Или ТаблицаРНПТПродажПоступлений.Количество() = 0) Тогда
			Продолжить;
		КонецЕсли;
		Если НомерЦикла = 1 И ЭтоВозврат Тогда // В первом цикле обрабатываем продажи.
			Продолжить;
		ИначеЕсли НомерЦикла = 2 И Не ЭтоВозврат Тогда // Во втором цикле обрабатываем возвраты.
			Продолжить;
		КонецЕсли;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		// Для пустого списка РНПТ используем заполнение, для заполненного - контроль
		Если КоличествоРНПТ = 0 Тогда
			
			Если ОсталосьПодобрать <> 0 Тогда
				// Добавляем РНПТ из остатков.
				Если ЭтоВозврат Тогда
					ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТПродажПоступлений);
				Иначе
					ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки);
				КонецЕсли; 
			КонецЕсли;
			
			Если КонтролироватьОстаток И ОсталосьПодобрать <> 0 Тогда
				СообщитьОшибкуПодбора(ДокументОбъект, СтрокаТабличнойЧасти, ОсталосьПодобрать, Отказ);
			КонецЕсли;
			
		Иначе
			
			НужноВыполнятьПроверкуЗаполненияРНПТ = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("РНПТ, ИдентификаторСтроки", "Количество, КоличествоПрослеживаемости");
	
	Если НомерЦикла = 1 Тогда
		ДополнитьТаблицаРНПТПродажПоступлений(ТаблицаРНПТПродажПоступлений, ДокументОбъект);
	КонецЕсли;
	
	Возврат НужноВыполнятьПроверкуЗаполненияРНПТ;
	
КонецФункции

Процедура ДополнитьТаблицаРНПТПродажПоступлений(ТаблицаРНПТПродажПоступлений, ДокументОбъект)
	
	РезультатЗапроса = ПолучитьДанныеДляДополненияТаблицыРНПТПродажПоступлений(ДокументОбъект);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ТаблицаРНПТПродажПоступлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеДляДополненияТаблицыРНПТПродажПоступлений(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетОРозничныхПродажахЗапасы.Номенклатура КАК Номенклатура,
		|	ОтчетОРозничныхПродажахЗапасы.Характеристика КАК Характеристика,
		|	ОтчетОРозничныхПродажахЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ОтчетОРозничныхПродажахЗапасы.Партия КАК Партия,
		|	ОтчетОРозничныхПродажахЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТ_Запасы
		|ИЗ
		|	&Запасы КАК ОтчетОРозничныхПродажахЗапасы
		|ГДЕ
		|	ОтчетОРозничныхПродажахЗапасы.Количество > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетОРозничныхПродажахСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	ОтчетОРозничныхПродажахСведенияПрослеживаемости.Количество КАК Количество,
		|	ОтчетОРозничныхПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|	ОтчетОРозничныхПродажахСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТ_СведенияПрослеживаемости
		|ИЗ
		|	&СведенияПрослеживаемости КАК ОтчетОРозничныхПродажахСведенияПрослеживаемости
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Запасы.Номенклатура КАК Номенклатура,
		|	ВТ_Запасы.Характеристика КАК Характеристика,
		|	ВТ_Запасы.Партия КАК Партия,
		|	ВТ_Запасы.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВТ_СведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	ВТ_СведенияПрослеживаемости.Количество КАК Количество,
		|	ВТ_СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|	&ИсходныйДокумент КАК ИсходныйДокумент
		|ИЗ
		|	ВТ_Запасы КАК ВТ_Запасы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияПрослеживаемости КАК ВТ_СведенияПрослеживаемости
		|		ПО ВТ_Запасы.ИдентификаторСтроки = ВТ_СведенияПрослеживаемости.ИдентификаторСтроки";
	
	Запрос.УстановитьПараметр("ИсходныйДокумент", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СведенияПрослеживаемости", ДокументОбъект.СведенияПрослеживаемости.Выгрузить());
	Запрос.УстановитьПараметр("Запасы", ДокументОбъект.Запасы.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса;
	
КонецФункции

// Процедура - Подобрать РНПТ по данным документа-основания
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - объект документа, в котором следует заполнить таблицу РНПТ
//  Отказ			 - Булево			 - признак ошибки подбора
//
Процедура ПодобратьРНПТКорректировка(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаТоваров = ДокументОбъект.Запасы.Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРНПТИсходныйДокумент = ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров);
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
		ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров);
	Иначе
		ТаблицаРНПТОстатки = Неопределено;
	КонецЕсли; 
	
	КонтролироватьОстаток = Константы.КонтролироватьОстаткиПриПроведении.Получить();
	
	Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.Запасы Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		// Для пустого списка РНПТ используем заполнение, для заполненного - контроль
		Если КоличествоРНПТ = 0 И ТаблицаРНПТИсходныйДокумент <> Неопределено Тогда
			
			// Для корректировочного документа сначала подберем РНПТ из исходного документа.
			ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент);
			
			// Для корректировки реализации оставщиеся РНПТ списываем с остатка
			Если ОсталосьПодобрать <> 0 И ТаблицаРНПТОстатки <> Неопределено Тогда
				ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки);
			КонецЕсли; 
			
			Если КонтролироватьОстаток И ОсталосьПодобрать <> 0 Тогда
				СообщитьОшибкуПодбора(ДокументОбъект, СтрокаТабличнойЧасти, ОсталосьПодобрать, Отказ);
			КонецЕсли;
			
		Иначе
			
			// Проверка заполнения табличной части
			ДанныеПроверки = Новый Структура;
			ДанныеПроверки.Вставить("ИмяТЧ", "Запасы");
			ДанныеПроверки.Вставить("ИмяСписка", НСтр("ru = 'Товары'"));
			ПроверитьЗаполнениеДанныхПрослеживаемости(ДокументОбъект, ДанныеПроверки, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("РНПТ, ИдентификаторСтроки", "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

// Процедура - Подобрать РНПТ по данным передачи в эксплуатацию
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект	 - объект документа, в котором следует заполнить таблицу РНПТ
//  Отказ			 - Булево			 - признак ошибки подбора
//
Процедура ПодобратьРНПТВозвратИзЭксплуатации(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаТоваров = ДокументОбъект.Запасы.Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// TODO
	// Не реализовано
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("РНПТ, ИдентификаторСтроки", "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

// Процедура - Очистить данные прослеживаемости в документе
//
// Параметры:
//  ТабличнаяЧасть			 - 	ТабличнаяЧасть, ДанныеФормыКоллекция - Таблица прослеживаемых запасов
//  СведенияПрослеживаемости - 	ТабличнаяЧасть, ДанныеФормыКоллекция - Таблица РНПТ
//
Процедура ОчиститьДанныеПрослеживаемости(ТабличнаяЧасть, СведенияПрослеживаемости) Экспорт
		
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		СтрокаТаблицы.ПрослеживаемыйТовар = Ложь;
	КонецЦикла;
	СведенияПрослеживаемости.Очистить();
	
КонецПроцедуры

Функция ПолучитьНачальныеДанные(Период, Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("НачалоПериода", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	
	ТекстЗапроса = 
	
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК Сумма,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(&Период, ) КАК ЗапасыОстатки
	|ГДЕ
	|	ЗапасыОстатки.Номенклатура.ПрослеживаемыйТовар
	|	И ЗапасыОстатки.КоличествоОстаток > 0
	|	И ЗапасыОстатки.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество) КАК Количество,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Сумма) КАК Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание КАК ДокументРегистрации,
	|	РегистрацияПрослеживаемыхТоваров.Основание.СтруктурнаяЕдиница КАК Склад,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД КАК ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.Характеристика КАК Характеристика,
	|	РегистрацияПрослеживаемыхТоваров.Партия КАК Партия
	|ПОМЕСТИТЬ ЗарегистрированныеОстаткиПоОснованию
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Организация = &Организация
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияТоваров)
	|	И РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.Основание.СтруктурнаяЕдиница,
	|	РегистрацияПрослеживаемыхТоваров.Партия,
	|	РегистрацияПрослеживаемыхТоваров.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТоварыОбороты.Регистратор.Склад <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.Склад
	|		КОГДА ПрослеживаемыеТоварыОбороты.Регистратор.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.СтруктурнаяЕдиница
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	ПрослеживаемыеТоварыОбороты.РНПТ КАК РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРНПТОтПоставщика,
	|	ПрослеживаемыеТоварыОбороты.Характеристика КАК Характеристика,
	|	ПрослеживаемыеТоварыОбороты.Партия КАК Партия
	|ПОМЕСТИТЬ ПрослеживаемыеТоварыСРНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Обороты(&НачалоПериода, &Период, Регистратор, Организация = &Организация) КАК ПрослеживаемыеТоварыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОбороты.Номенклатура,
	|	ПрослеживаемыеТоварыОбороты.РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеТоварыОбороты.Регистратор.Склад <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.Склад
	|		КОГДА ПрослеживаемыеТоварыОбороты.Регистратор.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.СтруктурнаяЕдиница
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПрослеживаемыеТоварыОбороты.Партия,
	|	ПрослеживаемыеТоварыОбороты.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ КАК РНПТ
	|ПОМЕСТИТЬ СписокРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеТоварыСРНПТ КАК ПрослеживаемыеТоварыСРНПТ
	|ГДЕ
	|	ПрослеживаемыеТоварыСРНПТ.ЭтоРНПТОтПоставщика = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыСРНПТ.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыСРНПТ.КоличествоПриход - ПрослеживаемыеТоварыСРНПТ.КоличествоРасход) КАК Остаток,
	|	ПрослеживаемыеТоварыСРНПТ.Склад КАК Склад,
	|	ПрослеживаемыеТоварыСРНПТ.Характеристика КАК Характеристика,
	|	ПрослеживаемыеТоварыСРНПТ.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеТоварыСРНПТ КАК ПрослеживаемыеТоварыСРНПТ
	|ГДЕ
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ В
	|			(ВЫБРАТЬ
	|				СписокРНПТОтПоставщика.РНПТ
	|			ИЗ
	|				СписокРНПТОтПоставщика КАК СписокРНПТОтПоставщика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыСРНПТ.Номенклатура,
	|	ПрослеживаемыеТоварыСРНПТ.Склад,
	|	ПрослеживаемыеТоварыСРНПТ.Партия,
	|	ПрослеживаемыеТоварыСРНПТ.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.Номенклатура КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Остаток, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Сумма, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Сумма, 0)) КАК Сумма,
	|	ТаблицаОстатковБезОснования.Склад КАК Склад,
	|	ТаблицаОстатковБезОснования.Характеристика КАК Характеристика,
	|	ТаблицаОстатковБезОснования.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснования
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ТаблицаОстатковПоОснованию
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ТаблицаОстатковПоОснованию.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ТаблицаОстатковПоОснованию.Склад
	|			И ТаблицаОстатковБезОснования.Характеристика = ТаблицаОстатковПоОснованию.Характеристика
	|			И ТаблицаОстатковБезОснования.Партия = ТаблицаОстатковПоОснованию.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика КАК ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Склад
	|			И ТаблицаОстатковБезОснования.Характеристика = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Характеристика
	|			И ТаблицаОстатковБезОснования.Партия = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Партия
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) > 0
	|	И ТаблицаОстатковПоОснованию.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковБезОснования.Номенклатура,
	|	ТаблицаОстатковБезОснования.Склад,
	|	ТаблицаОстатковБезОснования.Характеристика,
	|	ТаблицаОстатковБезОснования.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарегистрированныеОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ЗарегистрированныеОстатки.Количество) КАК Количество,
	|	СУММА(ЗарегистрированныеОстатки.Сумма) КАК Сумма,
	|	ЗарегистрированныеОстатки.ДокументРегистрации КАК ДокументРегистрации,
	|	НоменклатураСправочник.КодОКПД2 КАК КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗарегистрированныеОстатки.ТНВЭД КАК КодТНВЭД,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА ЗарегистрированныеОстатки.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ ЗарегистрированныеОстатки.Количество
	|	КОНЕЦ КАК КоличествоПрослеживаеомсти,
	|	ЗарегистрированныеОстатки.Склад КАК Склад,
	|	НоменклатураСправочник.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЗарегистрированныеОстатки.Характеристика КАК Характеристика,
	|	ЗарегистрированныеОстатки.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаОстатковПоОснованию
	|ИЗ
	|	ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО НоменклатураСправочник.ТоварнаяНоменклатураВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО ЗарегистрированныеОстатки.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	ЗарегистрированныеОстатки.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарегистрированныеОстатки.Номенклатура,
	|	ЗарегистрированныеОстатки.ДокументРегистрации,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА ЗарегистрированныеОстатки.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ ЗарегистрированныеОстатки.Количество
	|	КОНЕЦ,
	|	ЗарегистрированныеОстатки.Склад,
	|	ЗарегистрированныеОстатки.ТНВЭД,
	|	НоменклатураСправочник.СтранаПроисхождения,
	|	ЗарегистрированныеОстатки.Характеристика,
	|	ЗарегистрированныеОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатковБезОснования.Количество КАК Количество,
	|	ТаблицаОстатковБезОснования.Сумма КАК Сумма,
	|	ТаблицаОстатковБезОснования.Склад КАК Склад,
	|	ТаблицаОстатковБезОснования.Характеристика КАК Характеристика,
	|	ТаблицаОстатковБезОснования.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснованияБезИнвентаризации
	|ИЗ
	|	ТаблицаОстатковБезОснования КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстаткиПоОснованию
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ЗарегистрированныеОстаткиПоОснованию.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ЗарегистрированныеОстаткиПоОснованию.Склад
	|			И ТаблицаОстатковБезОснования.Характеристика = ЗарегистрированныеОстаткиПоОснованию.Характеристика
	|			И ТаблицаОстатковБезОснования.Партия = ЗарегистрированныеОстаткиПоОснованию.Партия
	|ГДЕ
	|	ЗарегистрированныеОстаткиПоОснованию.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Количество КАК Количество,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Сумма КАК Сумма,
	|	"""" КАК Основание,
	|	ЛОЖЬ КАК ЕстьПервичныйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК КодОКПД2,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|	НЕОПРЕДЕЛЕНО КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаПрослеживаемости,
	|	НЕОПРЕДЕЛЕНО КАК КоличествоПрослеживаемости,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Склад КАК Склад,
	|	ЛОЖЬ КАК ИмпортИзЕАЭС,
	|	НЕОПРЕДЕЛЕНО КАК ВидСтавкиНДС,
	|	NULL КАК СтранаПроисхождения,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Характеристика КАК Характеристика,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Партия КАК Партия
	|ИЗ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации КАК ТаблицаОстатковБезОснованияБезИнвентаризации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоРегистрации.Номенклатура,
	|	ТаблицаОстатковПоРегистрации.Количество,
	|	ТаблицаОстатковПоРегистрации.Сумма,
	|	ТаблицаОстатковПоРегистрации.ДокументРегистрации,
	|	ИСТИНА,
	|	ТаблицаОстатковПоРегистрации.КодОКПД2,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаИзмерения,
	|	ТаблицаОстатковПоРегистрации.КодТНВЭД,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаПрослеживаемости,
	|	ТаблицаОстатковПоРегистрации.КоличествоПрослеживаеомсти,
	|	ТаблицаОстатковПоРегистрации.Склад,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаОстатковПоРегистрации.СтранаПроисхождения,
	|	ТаблицаОстатковПоРегистрации.Характеристика,
	|	ТаблицаОстатковПоРегистрации.Партия
	|ИЗ
	|	ТаблицаОстатковПоОснованию КАК ТаблицаОстатковПоРегистрации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Количество,
	|	РегистрацияПрослеживаемыхТоваров.Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	ИСТИНА,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ РегистрацияПрослеживаемыхТоваров.Количество
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	НоменклатураСправочник.ВидСтавкиНДС,
	|	РегистрацияПрослеживаемыхТоваров.СтранаПроисхождения,
	|	РегистрацияПрослеживаемыхТоваров.Характеристика,
	|	РегистрацияПрослеживаемыхТоваров.Партия
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО РегистрацияПрослеживаемыхТоваров.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Количество > 0
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ВвозТоваровИзЕАЭС)
	|	И РегистрацияПрослеживаемыхТоваров.Организация = &Организация";
	

	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

// Движения по реализации прослеживаемых товаров в страны ЕАЭС
Процедура СформироватьДвиженияПрослеживаемыхТоваровВЕАЭС(Движения, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	Если СтруктураДополнительныеСвойства.ДляПроведения.Свойство("ЭтоКонтрагентИзЕАЭС") Тогда
		Запрос.УстановитьПараметр("ЭтоПродажаВЕАЭС", СтруктураДополнительныеСвойства.ДляПроведения.ЭтоКонтрагентИзЕАЭС);
	Иначе
		Запрос.УстановитьПараметр("ЭтоПродажаВЕАЭС", Ложь);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Ссылка КАК Регистратор,
	|	&Организация КАК Организация,
	|	ВременнаяТаблицаШапка.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
	|	ВременнаяТаблицаШапка.Контрагент КАК Контрагент
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	Шапка.Ссылка КАК СопроводительныйДокумент,
	|	Шапка.Контрагент КАК Контрагент,
	|	ТаблицаЗапасы.НомерСтроки КАК ПорядковыйНомер,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	Шапка.Дата КАК Период,
	|	СведенияПрослеживаемости.ВидДвижения КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент) КАК КорректируемыйДокумент
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	&ЭтоПродажаВЕАЭС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Количество КАК Количество,
	|	ВременнаяТаблицаЗапасы.СуммаРег КАК СуммаРуб,
	|	ВременнаяТаблицаЗапасы.СуммаНДСРег КАК СуммаНДСРуб,
	|	ВременнаяТаблицаЗапасы.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Реквизиты = МассивРезультатов[0].Выгрузить();
	ПрослеживаемыеТоварыРеализованные = МассивРезультатов[1].Выгрузить();
	РеализацияТаблицаДокумента = МассивРезультатов[2].Выгрузить();
	
	ПрослеживаемостьПереопределяемый.СформироватьДвиженияПрослеживаемыхТоваровВЕАЭС(
		ПрослеживаемыеТоварыРеализованные,
		РеализацияТаблицаДокумента,
		Реквизиты,
		Движения);
	
КонецПроцедуры

// Определяет, является ли страна мира государством-членом таможенного союза (ЕАЭС)
// Параметры
// СтранаРегистрацииКонтрагента - СправочникСсылка.СтраныМира - страна мира
//
// Возвращаемое значение:
//  Булево - Истина, если переданная страна является государством-членом таможенного союза (ЕАЭС)
//  Для российских контрагентов возвращается Ложь.
Функция ГосударствоЧленТаможенногоСоюза(СтранаРегистрацииКонтрагента) Экспорт
	
	Если ЗначениеЗаполнено(СтранаРегистрацииКонтрагента)
		И ТипЗнч(СтранаРегистрацииКонтрагента) = Тип("СправочникСсылка.СтраныМира")
		И СтранаРегистрацииКонтрагента <> Справочники.СтраныМира.Россия Тогда
		
		Возврат УправлениеКонтактнойИнформацией.ЭтоСтранаУчастникЕАЭС(СтранаРегистрацииКонтрагента);
		
	Иначе
		
		Возврат Ложь;
	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ЕстьОстаткиПрослеживаемости() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки КАК ПрослеживаемыеТоварыОстатки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Следующий();
	
КонецФункции

Функция ОтказОтключитьУчетПрослеживаемыхТоваров() Экспорт
	
	Возврат НСтр("ru='Нельзя изменить значение опции Учет прослеживаемых товаров, потому что в программе зафиксированы отрицательные остатки по ГТД.'");
	
КонецФункции

Процедура УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты) Экспорт
	
	Если ТаблицаРНПТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ТаблицаДанных = НаборЗаписей.Выгрузить();
	//ТаблицаДанных.Свернуть("Организация, РНПТ, Период");
	
	Для Каждого СтрокаТаблицы Из ТаблицаРНПТ Цикл
		
		МенеджерЗаписи = РегистрыСведений.СвойстваРНПТ.СоздатьМенеджерЗаписи();
		
		Если Реквизиты = Неопределено Тогда
			МенеджерЗаписи.Организация = СтрокаТаблицы.Организация;
			МенеджерЗаписи.ДатаПоступления = СтрокаТаблицы.Период;
		Иначе
			МенеджерЗаписи.Организация = Реквизиты.Организация;
			МенеджерЗаписи.ДатаПоступления = Реквизиты.Период;
		КонецЕсли;
		
		МенеджерЗаписи.РНПТ = СтрокаТаблицы.РНПТ;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет реквизиты объекта значениями, полученными в структуре ДанныхЗаполнения.
//	Заполнение возможно только в случае, когда в качестве ДанныхЗаполнения получена структура.
//	Заполнены будут только те реквизиты, для которых в метаданных установлен флаг "ЗаполнятьИзДанныхЗаполнения".
//
//
// Параметры
//  <Объект>  - <СправочникОбъект>, <ДокументОбъект> и т.д. - Заполняемый объект.
//  <ДанныеЗаполнения>  - <произвольный тип> - параметр, полученный в ОбработкеЗаполнения объекта.
//  <МетаданныеОбъекта>  - <Метаданные>.
//
//
Процедура ЗаполнитьПоСтруктуре(Объект, ДанныеЗаполнения, МетаданныеОбъекта = Неопределено)	Экспорт

	Если Объект = Неопределено
		ИЛИ ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")
		ИЛИ ДанныеЗаполнения.Количество() = 0 Тогда

		Возврат;

	КонецЕсли;

	Если МетаданныеОбъекта = Неопределено Тогда
		МетаданныеОбъекта = Объект.Метаданные();
	КонецЕсли;
	Если  Метаданные.Справочники.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		РазличатьГруппыИЭлементы = МетаданныеОбъекта.Иерархический;
	Иначе
		РазличатьГруппыИЭлементы = Ложь;
	КонецЕсли;

	СтруктураЗаполнения = Новый Структура;
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			СтруктураЗаполнения.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			Если РазличатьГруппыИЭлементы Тогда
				Если (Объект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента)
					ИЛИ (НЕ Объект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы) Тогда
					СтруктураЗаполнения.Вставить(Реквизит.Имя);
				КонецЕсли;
			Иначе
				СтруктураЗаполнения.Вставить(Реквизит.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ЗаполняемыйЭлемент Из СтруктураЗаполнения Цикл
		ЗначениеЗаполнения = ДанныеЗаполнения[ЗаполняемыйЭлемент.Ключ];
		Если ТипЗнч(ЗначениеЗаполнения) = Тип("Массив")
			ИЛИ ТипЗнч(ЗначениеЗаполнения) = Тип("ФиксированныйМассив") Тогда
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения[0];
		Иначе
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Объект, СтруктураЗаполнения);

КонецПроцедуры

#КонецОбласти

// Переопределяемая процедура обработки проведения документов 
// "Уведомление об остатках прослеживаемых товаров" и "Уведомление о ввозе прослеживаемых товаров"
// 
// Параметры:
//  ПараметрыПроведения - Структура таблиц см. Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения и 
//                        Документы.УведомлениеОВвозеПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения
//  Движения - ссылка на движения документа
//  Отказ - Булево - признак отказа от записи
//
Процедура ОбработкаПроведенияУведомления(ПараметрыПроведения, Движения, Отказ) Экспорт
	
	// Формируем таблицу для движений по регистру накопления ПрослеживаемыеТовары
	ТаблицаДвиженийРНПТ = ПодготовитьТаблицуРНПТ(ПараметрыПроведения.ТаблицаТоваров,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	СформироватьДвиженияПрослеживаемостьТоваровУведомления(
		ТаблицаДвиженийРНПТ,
		Движения,
		Отказ);
		
	// Формируем движения по свойствам РНПТ для корректного списания товаров по ФИФО.
	Если ЗначениеЗаполнено(ТаблицаДвиженийРНПТ)
		И ЗначениеЗаполнено(ПараметрыПроведения.Реквизиты) Тогда
		РазличныеРНПТ = ТаблицаДвиженийРНПТ.Скопировать();
		РазличныеРНПТ.Свернуть("РНПТ");
		ПрослеживаемостьУНФ.УстановитьСвойстваРНПТ(РазличныеРНПТ, ПараметрыПроведения.Реквизиты[0]);
	КонецЕсли;
	
	// Формируем таблицу для движений по счету ГТД
	ТаблицаОстатковГТД = ПодготовитьТаблицуОстатковГТД(ПараметрыПроведения.ТаблицаТоваров,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	СформироватьДвиженияГТД(
		ПараметрыПроведения.ТаблицаТоваров,
		ТаблицаОстатковГТД,
		Движения,
		Отказ);
		
КонецПроцедуры

Процедура СформироватьДвиженияПрослеживаемостьТоваровУведомления(ТаблицаДвиженийРНПТ, Движения, Отказ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТаблицаДвиженийРНПТ) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДвиженийРНПТ Цикл
		Запись = Движения.ПрослеживаемыеТовары.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеТовары.Записывать = Истина;
	
КонецПроцедуры   

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДвиженияПрослеживаемыхТоваровОбщий()
	
	Возврат
	"ВЫБРАТЬ
	|	Шапка.Дата КАК Период,
	|	Шапка.Ссылка КАК Регистратор,
	|	СведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	СведенияПрослеживаемости.ВидДвижения КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	&Контрагент КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент) КАК КорректируемыйДокумент
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС";
	
КонецФункции

Функция ТекстЗапросаДвиженияПрослеживаемыхТоваровРаспределениеЗатрат()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаЗапасы.КорректируемыйДокумент КАК КорректируемыйДокумент
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Дата КАК Период,
	|	Шапка.Ссылка КАК Регистратор,
	|	СведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	СведенияПрослеживаемости.ВидДвижения КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	Запасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	&Контрагент КАК Контрагент,
	|	ЕСТЬNULL(Запасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент) КАК КорректируемыйДокумент
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Запасы КАК Запасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = Запасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС";
	
КонецФункции

Функция ТекстЗапросаДвиженияПрослеживаемыхКомиссионныхТоваровОбщий()
	
	Возврат
	"ВЫБРАТЬ
	|	Шапка.Дата КАК Период,
	|	Шапка.Ссылка КАК Регистратор,
	|	СведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	СведенияПрослеживаемости.ВидДвижения КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	&Контрагент КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент) КАК КорректируемыйДокумент,
	|	&Контрагент КАК Комиссионер
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС";
	
КонецФункции

Функция ТекстЗапросаДвиженияПрослеживаемыхТоваровПередачаНаКомиссию()
	
	Возврат
	"ВЫБРАТЬ
	|	Шапка.Дата КАК Период,
	|	Шапка.Ссылка КАК Регистратор,
	|	СведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	СведенияПрослеживаемости.ВидДвижения КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	&Контрагент КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент) КАК КорректируемыйДокумент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комиссионер
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Шапка.Дата,
	|	Шапка.Ссылка,
	|	СведенияПрослеживаемости.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	СведенияПрослеживаемости.РНПТ,
	|	ТаблицаЗапасы.СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	СведенияПрослеживаемости.Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости,
	|	&Контрагент,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент),
	|	&Контрагент КАК Контрагент
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС";
	
КонецФункции

Функция ТекстЗапросаДвиженияПрослеживаемыхТоваровВозвратОтКомиссионера()
	
	Возврат
	"ВЫБРАТЬ
	|	Шапка.Дата КАК Период,
	|	Шапка.Ссылка КАК Регистратор,
	|	СведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	СведенияПрослеживаемости.ВидДвижения КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	&Контрагент КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент) КАК КорректируемыйДокумент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комиссионер
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Шапка.Дата,
	|	Шапка.Ссылка,
	|	СведенияПрослеживаемости.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	СведенияПрослеживаемости.РНПТ,
	|	ТаблицаЗапасы.СтранаПроисхождения,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	СведенияПрослеживаемости.Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости,
	|	&Контрагент,
	|	ЕСТЬNULL(ТаблицаЗапасы.КорректируемыйДокумент, Шапка.КорректируемыйДокумент),
	|	&Контрагент
	|ИЗ
	|	ВременнаяТаблицаСведенияПрослеживаемости КАК СведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ПО СведенияПрослеживаемости.ИдентификаторСтроки = ТаблицаЗапасы.ИдентификаторСтроки,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	НЕ &ЭтоПоступлениеИзЕАЭС";
	
КонецФункции

Процедура СообщитьОшибкуПодбора(ДокументОбъект, СтрокаТабличнойЧасти, ОсталосьПодобрать, Отказ)
	
	ПоляПредставления = Новый Структура;
	ПоляПредставления.Вставить("ПредставлениеНоменклатуры", СтрокаТабличнойЧасти.Номенклатура);
	ПоляПредставления.Вставить("ПредставлениеХарактеристики", СтрокаТабличнойЧасти.Характеристика);
	ПоляПредставления.Вставить("ПредставлениеПартии", СтрокаТабличнойЧасти.Партия);
	ПредставлениеНоменклатуры = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПоляПредставления);
	ТекстОшибки = СтрШаблон(
		НСтр("ru = 'По учету прослеживаемости не удалось подобрать %1 %2 запаса %3 (%4)'"),
		Формат(ОсталосьПодобрать, "ЧГ=0"),
		СтрокаТабличнойЧасти.ЕдиницаИзмерения,
		ПредставлениеНоменклатуры,
		СтрокаТабличнойЧасти.СтранаПроисхождения);
	
	Поле = СтрШаблон("Запасы[%1].Количество", Формат(СтрокаТабличнойЧасти.НомерСтроки - 1,"ЧГ="));
	ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
	
КонецПроцедуры

Функция ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаЗапасов)
	
	Организация = Константы.УчетПоКомпании.Компания(ДокументОбъект.Организация);
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаЗапасов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Партия", "Партия");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("ТаблицаЗапасов", ТаблицаЗапасов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаЗапасов.Партия КАК Партия,
	|	ТаблицаЗапасов.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаЗапасов
	|ИЗ
	|	&ТаблицаЗапасов КАК ТаблицаЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаЗапасов.Партия КАК Партия,
	|	ТаблицаЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|	СвойстваРНПТ.ДатаПоступления КАК ДатаПоступления
	|ИЗ
	|	ТаблицаЗапасов КАК ТаблицаЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары.Остатки(&МоментСписания, Организация = &Организация) КАК ПрослеживаемыеТоварыОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|			ПО ПрослеживаемыеТоварыОстатки.Организация = СвойстваРНПТ.Организация
	|				И ПрослеживаемыеТоварыОстатки.РНПТ = СвойстваРНПТ.РНПТ
	|		ПО ТаблицаЗапасов.Номенклатура = ПрослеживаемыеТоварыОстатки.Номенклатура
	|			И ТаблицаЗапасов.Характеристика = ПрослеживаемыеТоварыОстатки.Характеристика
	|			И ТаблицаЗапасов.Партия = ПрослеживаемыеТоварыОстатки.Партия
	|			И ТаблицаЗапасов.СтранаПроисхождения = ПрослеживаемыеТоварыОстатки.СтранаПроисхождения
	|ГДЕ
	|	ПрослеживаемыеТоварыОстатки.Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоступления";
	
	ТаблицаРНПТОстатки = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРНПТОстатки.Индексы.Добавить("Номенклатура");
	ТаблицаРНПТОстатки.Индексы.Добавить("Характеристика");
	ТаблицаРНПТОстатки.Индексы.Добавить("Партия");
	ТаблицаРНПТОстатки.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРНПТОстатки;
	
КонецФункции

Функция ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров)
	
	ИсходныйДокумент = Неопределено;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
		ИсходныйДокумент = ДокументОбъект.ДокументОснование;
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.РасходнаяНакладная") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаПоступления") Тогда
		ИсходныйДокумент = ДокументОбъект.ДокументОснование;
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ПриходнаяНакладная") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ИсходныйДокумент) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	ИмяВидаДокумента = ИсходныйДокумент.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныйДокумент", ИсходныйДокумент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныйДокументСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ИсходныйДокументСведенияПрослеживаемости.Количество КАК Количество,
	|	ИсходныйДокументСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ИсходныйДокументЗапасы.Номенклатура КАК Номенклатура,
	|	ИсходныйДокументЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ИсходныйДокументЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК ИсходныйДокументЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.СведенияПрослеживаемости КАК ИсходныйДокументСведенияПрослеживаемости
	|		ПО ИсходныйДокументЗапасы.Ссылка = ИсходныйДокументСведенияПрослеживаемости.Ссылка
	|			И ИсходныйДокументЗапасы.ИдентификаторСтроки = ИсходныйДокументСведенияПрослеживаемости.ИдентификаторСтроки
	|ГДЕ
	|	ИсходныйДокументЗапасы.Ссылка = &ИсходныйДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсходныйДокументСведенияПрослеживаемости.НомерСтроки";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.РасходнаяНакладная", "Документ." + ИмяВидаДокумента); 
	
	ТаблицаРНПТИсходныйДокумент = Запрос.Выполнить().Выгрузить();
	ТаблицаРНПТИсходныйДокумент.Индексы.Добавить("ИдентификаторСтроки");
	ТаблицаРНПТИсходныйДокумент.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРНПТИсходныйДокумент;
	
КонецФункции

Функция ТаблицаРНПТПродажПоступлений(ДокументОбъект, ТаблицаТоваров)
	
	ИсходныйДокумент = Неопределено;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПриходнаяНакладная") 
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя Тогда 
		Если ТипЗнч(ДокументОбъект.ДокументОснование) <> Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			Возврат Неопределено;
		КонецЕсли; 
		ИсходныеДокументы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументОбъект.ДокументОснование);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РасходнаяНакладная") 
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику Тогда 
		Если ТипЗнч(ДокументОбъект.ДокументОснование) <> Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			Возврат Неопределено;
		КонецЕсли; 
		ИсходныеДокументы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументОбъект.ДокументОснование);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		ИсходныеДокументы = КорректируемыеРозничныеДокументы(ДокументОбъект);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныеДокументы", ИсходныеДокументы);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ИсходныйДокумент КАК ИсходныйДокумент,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Партия КАК Партия,
	|	ВложенныйЗапрос.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВложенныйЗапрос.РНПТ КАК РНПТ,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеТовары.Регистратор КАК ИсходныйДокумент,
	|		ПрослеживаемыеТовары.Номенклатура КАК Номенклатура,
	|		ПрослеживаемыеТовары.Характеристика КАК Характеристика,
	|		ПрослеживаемыеТовары.Партия КАК Партия,
	|		ПрослеживаемыеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ПрослеживаемыеТовары.РНПТ КАК РНПТ,
	|		ПрослеживаемыеТовары.Количество КАК Количество,
	|		ПрослеживаемыеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|	ГДЕ
	|		ПрослеживаемыеТовары.Регистратор В(&ИсходныеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрослеживаемыеТовары.КорректируемыйДокумент,
	|		ПрослеживаемыеТовары.Номенклатура,
	|		ПрослеживаемыеТовары.Характеристика,
	|		ПрослеживаемыеТовары.Партия,
	|		ПрослеживаемыеТовары.СтранаПроисхождения,
	|		ПрослеживаемыеТовары.РНПТ,
	|		-ПрослеживаемыеТовары.Количество,
	|		-ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|	ГДЕ
	|		ПрослеживаемыеТовары.КорректируемыйДокумент В(&ИсходныеДокументы)
	|		И ПрослеживаемыеТовары.Регистратор <> &ТекущийДокумент) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ИсходныйДокумент,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.СтранаПроисхождения,
	|	ВложенныйЗапрос.РНПТ";
	
	ТаблицаРНПТПродажПоступлений = Запрос.Выполнить().Выгрузить();
	ТаблицаРНПТПродажПоступлений.Индексы.Добавить("Номенклатура");
	ТаблицаРНПТПродажПоступлений.Индексы.Добавить("Характеристика");
	ТаблицаРНПТПродажПоступлений.Индексы.Добавить("Партия");
	ТаблицаРНПТПродажПоступлений.Индексы.Добавить("СтранаПроисхождения");
	ТаблицаРНПТПродажПоступлений.Индексы.Добавить("ИсходныйДокумент");
	
	Возврат ТаблицаРНПТПродажПоступлений;
	
КонецФункции

Функция ТаблицаРНПТПередачНаКомиссию(ДокументОбъект, ТаблицаТоваров)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Комиссионер", ДокументОбъект.Контрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Партия КАК Партия,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеТоварыОстатки.Характеристика КАК Характеристика,
	|	ПрослеживаемыеТоварыОстатки.Комиссионер КАК Комиссионер,
	|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемостиОстаток
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(, Комиссионер = &Комиссионер) КАК ПрослеживаемыеТоварыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Организация,
	|	ПрослеживаемыеТовары.РНПТ,
	|	ПрослеживаемыеТовары.СтранаПроисхождения,
	|	ПрослеживаемыеТовары.Партия,
	|	ПрослеживаемыеТовары.Номенклатура,
	|	ПрослеживаемыеТовары.Характеристика,
	|	ПрослеживаемыеТовары.Комиссионер,
	|	ПрослеживаемыеТовары.Количество,
	|	ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	ПрослеживаемыеТовары.Регистратор = &ТекущийДокумент
	|	И ПрослеживаемыеТовары.Комиссионер = &Комиссионер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.РНПТ КАК РНПТ,
	|	ВтИтог.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Комиссионер КАК Комиссионер,
	|	СУММА(ВтИтог.КоличествоОстаток) КАК Количество,
	|	СУММА(ВтИтог.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтИтог.Партия,
	|	ВтИтог.Комиссионер,
	|	ВтИтог.Номенклатура,
	|	ВтИтог.Организация,
	|	ВтИтог.СтранаПроисхождения,
	|	ВтИтог.РНПТ,
	|	ВтИтог.Характеристика";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("Номенклатура");
	Результат.Индексы.Добавить("Характеристика");
	Результат.Индексы.Добавить("Партия");
	Результат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаРНПТОтчетКомиссионераОВозвратах(ДокументОбъект, ТаблицаТоваров)
	
	СписокКорректируемыхДокументов = ДокументОбъект.Покупатели.ВыгрузитьКолонку("ОтчетКомиссионера");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СписокКорректируемыхДокументов", СписокКорректируемыхДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Организация КАК Организация,
	|	ПрослеживаемыеТовары.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТовары.Партия КАК Партия,
	|	ПрослеживаемыеТовары.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеТовары.Характеристика КАК Характеристика,
	|	ПрослеживаемыеТовары.Комиссионер КАК Комиссионер,
	|	ПрослеживаемыеТовары.Количество КАК КоличествоОстаток,
	|	ПрослеживаемыеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемостиОстаток
	|ПОМЕСТИТЬ ВтИтог
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	ПрослеживаемыеТовары.Регистратор В(&СписокКорректируемыхДокументов)
	|	И НЕ ПрослеживаемыеТовары.Регистратор = &ТекущийДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтИтог.Организация КАК Организация,
	|	ВтИтог.РНПТ КАК РНПТ,
	|	ВтИтог.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВтИтог.Партия КАК Партия,
	|	ВтИтог.Номенклатура КАК Номенклатура,
	|	ВтИтог.Характеристика КАК Характеристика,
	|	ВтИтог.Комиссионер КАК Комиссионер,
	|	СУММА(ВтИтог.КоличествоОстаток) КАК Количество,
	|	СУММА(ВтИтог.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости
	|ИЗ
	|	ВтИтог КАК ВтИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтИтог.Партия,
	|	ВтИтог.Комиссионер,
	|	ВтИтог.Номенклатура,
	|	ВтИтог.Организация,
	|	ВтИтог.СтранаПроисхождения,
	|	ВтИтог.РНПТ,
	|	ВтИтог.Характеристика";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("Номенклатура");
	Результат.Индексы.Добавить("Характеристика");
	Результат.Индексы.Добавить("Партия");
	Результат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат Результат;
	
КонецФункции

Процедура ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки)
	
	Отбор = Новый Структура("Номенклатура, Характеристика, Партия, СтранаПроисхождения",
		СтрокаТабличнойЧасти.Номенклатура, 
		СтрокаТабличнойЧасти.Характеристика, 
		СтрокаТабличнойЧасти.Партия, 
		СтрокаТабличнойЧасти.СтранаПроисхождения);
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
		И ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДокументПродажи) Тогда
		КассоваяСмена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ДокументПродажи, "КассоваяСмена");
		Если ЗначениеЗаполнено(КассоваяСмена) Тогда
			Отбор.Вставить("ИсходныйДокумент", КассоваяСмена);
		КонецЕсли; 
	КонецЕсли; 
	ОстаткиРНПТ = ТаблицаРНПТОстатки.НайтиСтроки(Отбор);
	Для Каждого ПодобранныйРНПТ Из ОстаткиРНПТ Цикл
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ОсталосьПодобрать >= ПодобранныйРНПТ.Количество Тогда
			// Добавляем все количество из подобранного РНПТ
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			ОсталосьПодобрать = ОсталосьПодобрать - ПодобранныйРНПТ.Количество;
			ТаблицаРНПТОстатки.Удалить(ПодобранныйРНПТ);
		Иначе
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			НоваяСтрока.Количество = ОсталосьПодобрать;
			
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(ПодобранныйРНПТ.Количество - ОсталосьПодобрать);
			МассивКоэффициентов.Добавить(ОсталосьПодобрать);
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ПодобранныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
			
			НоваяСтрока.КоличествоПрослеживаемости = МассивСумм[1];
			
			ПодобранныйРНПТ.Количество = ПодобранныйРНПТ.Количество - ОсталосьПодобрать;
			ПодобранныйРНПТ.КоличествоПрослеживаемости = ПодобранныйРНПТ.КоличествоПрослеживаемости - МассивСумм[1];
			
			ОсталосьПодобрать = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент)
	
	Если ТаблицаРНПТИсходныйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИсходныеРНПТ = ТаблицаРНПТИсходныйДокумент.НайтиСтроки(Новый Структура("ИдентификаторСтроки, СтранаПроисхождения", 
	СтрокаТабличнойЧасти.ИдентификаторСтроки, СтрокаТабличнойЧасти.СтранаПроисхождения));
	
	Для Каждого ИсходныйРНПТ ИЗ ИсходныеРНПТ Цикл
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ОсталосьПодобрать >= ИсходныйРНПТ.Количество Тогда
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			ОсталосьПодобрать = ОсталосьПодобрать - ИсходныйРНПТ.Количество;
			ТаблицаРНПТИсходныйДокумент.Удалить(ИсходныйРНПТ);
		Иначе
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			НоваяСтрока.Количество = ОсталосьПодобрать;
			
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(ИсходныйРНПТ.Количество - ОсталосьПодобрать);
			МассивКоэффициентов.Добавить(ОсталосьПодобрать);
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ИсходныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
			
			НоваяСтрока.КоличествоПрослеживаемости = МассивСумм[1];
			
			ИсходныйРНПТ.Количество = ИсходныйРНПТ.Количество - ОсталосьПодобрать;
			ИсходныйРНПТ.КоличествоПрослеживаемости = ИсходныйРНПТ.КоличествоПрослеживаемости - МассивСумм[1];
			
			ОсталосьПодобрать = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция КорректируемыеРозничныеДокументы(ДокументОбъект)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЗапасов", ДокументОбъект.Запасы.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасов.ДокументПродажи КАК ДокументПродажи
	|ПОМЕСТИТЬ Чеки
	|ИЗ
	|	&ТаблицаЗапасов КАК ТаблицаЗапасов
	|ГДЕ
	|	ТаблицаЗапасов.Возврат > 0
	|	И ТаблицаЗапасов.ДокументПродажи ССЫЛКА Документ.ЧекККМ
	|	И ТаблицаЗапасов.ДокументПродажи <> ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМ.КассоваяСмена КАК Ссылка
	|ИЗ
	|	Чеки КАК Чеки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ КАК ЧекККМ
	|		ПО Чеки.ДокументПродажи = ЧекККМ.Ссылка
	|ГДЕ
	|	НЕ ЧекККМ.КассоваяСмена ЕСТЬ NULL
	|	И ЧекККМ.КассоваяСмена <> ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции
 
Функция ПодготовитьТаблицуРНПТ(ТаблицаТоваров, ТаблицаРеквизитов, Отказ)
	
	Если Не ЗначениеЗаполнено(ТаблицаТоваров)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыРНПТ(ТаблицаТоваров, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаРНПТ = ПодготовитьТаблицуРНПТпоТовару(Реквизиты, Параметры.ТаблицаТоваров, Отказ);
	
	Возврат ТаблицаРНПТ;
	
КонецФункции

Функция ПодготовитьТаблицуРНПТпоТовару(Реквизиты, ТаблицаТоваров, Отказ)

	ТаблицаТоваровСРНПТ = ТаблицаТоваров.СкопироватьКолонки();
	ТаблицаТоваровСРНПТ.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаТоваровСРНПТ.Колонки.Добавить("РНПТ", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаТоваровСРНПТ.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Если Не ЗначениеЗаполнено(Реквизиты.РНПТ) Тогда
		Возврат ТаблицаТоваровСРНПТ;
	КонецЕсли;
	
	Для каждого ТекущаяСтрока Из ТаблицаТоваров Цикл
		
		НоваяСтрока = ТаблицаТоваровСРНПТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		
	КонецЦикла;
	
	Возврат ТаблицаТоваровСРНПТ;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыРНПТ(ТаблицаТоваров, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаТоваров
		
	СписокОбязательныхКолонок = ""
		+ "НомерСтроки,"                              // <Число> - номер строки в таблице товаров
		+ "Номенклатура,"                             // <СправочникСсылка.Номенклатура> - номенклатура
		+ "Характеристика,"                           // <СправочникСсылка.ХарактеристикиНоменклатуры> - номенклатура
		+ "Партия,"                                   // <СправочникСсылка.ПартииНоменклатуры> - номенклатура
		+ "Количество,"		                          // <Число ,15,3> - количество
		+ "КоличествоПрослеживаемости,"               // <Число, 15,3> - количество по прослеживаемости
		+ "Сумма,"		                              // <Число, 15,3> - сумма
		+ "СтранаПроисхождения";                      // <СправочникСсылка.СтраныМира> - страна происхождения товара
		
	Параметры.Вставить("ТаблицаТоваров", ПрослеживаемостьВызовСервераПереопределяемый.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоваров, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"							// <Дата> - период движений - дата документа
		+ "Регистратор,"					// <ДокументСсылка.*> - документ-регистратор движений
		+ "Организация,"					// <СправочникСсылка.Организации> - организация
		+ "РНПТ";							// <ОпределяемыеТипы.РНПТ> - РНПТ
		
	Параметры.Вставить("Реквизиты", ПрослеживаемостьВызовСервераПереопределяемый.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуОстатковГТД(ТаблицаТоваров, ТаблицаРеквизитов, Отказ)
	
	Если Не ЗначениеЗаполнено(ТаблицаТоваров)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыГТД(ТаблицаТоваров, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Не ЗначениеЗаполнено(Реквизиты.РНПТ)
		ИЛИ ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.УведомлениеОбОстаткахПрослеживаемыхТоваров") Тогда

		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаГТД = ПодготовитьТаблицуОстатковГТДПоТовару(Реквизиты, Параметры.ТаблицаТоваров, Отказ);
	
	Возврат ТаблицаГТД;
	
КонецФункции

Функция ПодготовитьТаблицуОстатковГТДПоТовару(Реквизиты, ТаблицаТоваров, Отказ)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЗапасыВРазрезеГТДОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ЗапасыВРазрезеГТДОстатки.НомерГТД КАК НомерГТД,
	|	ЗапасыВРазрезеГТДОстатки.НомерГТД.Код КАК КодГТД,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаГТД,
	|	ЗапасыВРазрезеГТДОстатки.Организация КАК Организация
	|ПОМЕСТИТЬ ОстаткиСУчетомТекущегоДокумента
	|ИЗ
	|	ТаблицаЗапасы КАК ТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(, Организация = &Организация) КАК ЗапасыВРазрезеГТДОстатки
	|		ПО ТаблицаЗапасы.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
	|			И ТаблицаЗапасы.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
	|			И ТаблицаЗапасы.Партия = ЗапасыВРазрезеГТДОстатки.Партия
	|ГДЕ
	|	ЗапасыВРазрезеГТДОстатки.КоличествоОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыПринятыеВРазрезеГТДОстатки.СтранаПроисхождения,
	|	ЗапасыПринятыеВРазрезеГТДОстатки.КоличествоОстаток,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ЗапасыПринятыеВРазрезеГТДОстатки.НомерГТД,
	|	ЗапасыПринятыеВРазрезеГТДОстатки.НомерГТД.Код,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЗапасыПринятыеВРазрезеГТДОстатки.Организация
	|ИЗ
	|	ТаблицаЗапасы КАК ТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыПринятыеВРазрезеГТД.Остатки(, Организация = &Организация) КАК ЗапасыПринятыеВРазрезеГТДОстатки
	|		ПО ТаблицаЗапасы.Номенклатура = ЗапасыПринятыеВРазрезеГТДОстатки.Номенклатура
	|			И ТаблицаЗапасы.Характеристика = ЗапасыПринятыеВРазрезеГТДОстатки.Характеристика
	|			И ТаблицаЗапасы.Партия = ЗапасыПринятыеВРазрезеГТДОстатки.Партия
	|ГДЕ
	|	ЗапасыПринятыеВРазрезеГТДОстатки.КоличествоОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущийДокумент.СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТекущийДокумент.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЕСТЬNULL(ТекущийДокумент.Количество, 0)
	|		ИНАЧЕ -ЕСТЬNULL(ТекущийДокумент.Количество, 0)
	|	КОНЕЦ,
	|	ТекущийДокумент.Номенклатура,
	|	ТекущийДокумент.Характеристика,
	|	ТекущийДокумент.Партия,
	|	ТекущийДокумент.НомерГТД,
	|	ТекущийДокумент.НомерГТД.Код,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ТекущийДокумент.Организация
	|ИЗ
	|	РегистрНакопления.ЗапасыВРазрезеГТД КАК ТекущийДокумент
	|ГДЕ
	|	ТекущийДокумент.Регистратор = &Ссылка
	|	И ТекущийДокумент.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущийДокумент.СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТекущийДокумент.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЕСТЬNULL(ТекущийДокумент.Количество, 0)
	|		ИНАЧЕ -ЕСТЬNULL(ТекущийДокумент.Количество, 0)
	|	КОНЕЦ,
	|	ТекущийДокумент.Номенклатура,
	|	ТекущийДокумент.Характеристика,
	|	ТекущийДокумент.Партия,
	|	ТекущийДокумент.НомерГТД,
	|	ТекущийДокумент.НомерГТД.Код,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ТекущийДокумент.Организация
	|ИЗ
	|	РегистрНакопления.ЗапасыПринятыеВРазрезеГТД КАК ТекущийДокумент
	|ГДЕ
	|	ТекущийДокумент.Регистратор = &Ссылка
	|	И ТекущийДокумент.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиЗапасовПоРегиструГТД.Номенклатура КАК Номенклатура,
	|	ОстаткиЗапасовПоРегиструГТД.Характеристика КАК Характеристика,
	|	ОстаткиЗапасовПоРегиструГТД.Партия КАК Партия,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД КАК НомерГТД,
	|	ОстаткиЗапасовПоРегиструГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ОстаткиЗапасовПоРегиструГТД.КоличествоОстаток) КАК КоличествоОстаток,
	|	ОстаткиЗапасовПоРегиструГТД.ДатаГТД КАК ДатаГТД,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД.Код КАК КодГТД,
	|	ВЫБОР
	|		КОГДА ОстаткиЗапасовПоРегиструГТД.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТоварыНаКомиссии,
	|	ОстаткиЗапасовПоРегиструГТД.Организация КАК Организация
	|ИЗ
	|	ОстаткиСУчетомТекущегоДокумента КАК ОстаткиЗапасовПоРегиструГТД
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиЗапасовПоРегиструГТД.СтранаПроисхождения,
	|	ОстаткиЗапасовПоРегиструГТД.Номенклатура,
	|	ОстаткиЗапасовПоРегиструГТД.Характеристика,
	|	ОстаткиЗапасовПоРегиструГТД.Партия,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД.Код,
	|	ОстаткиЗапасовПоРегиструГТД.ДатаГТД,
	|	ВЫБОР
	|		КОГДА ОстаткиЗапасовПоРегиструГТД.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ОстаткиЗапасовПоРегиструГТД.Организация");
	
	МоментСписания = Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая);
	Запрос.УстановитьПараметр("Период", МоментСписания);
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ТаблицаТоваров);
	
	ОтборОрганизация = Константы.УчетПоКомпании.Компания(Реквизиты.Организация);
	Запрос.УстановитьПараметр("Организация", ОтборОрганизация);
	
	ТаблицаОстатковГТД = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТаблицы Из ТаблицаОстатковГТД Цикл
		СтрокаТаблицы.ДатаГТД = ГрузовыеТаможенныеДекларацииСервер.ВыделитьДатуИзНомераГТД(СтрокаТаблицы.КодГТД);
	КонецЦикла; 
	
	ТаблицаОстатковГТД.Сортировать("Номенклатура, Характеристика, Партия, ДатаГТД");
	
	ТаблицаОстатковГТД.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаОстатковГТД.ЗаполнитьЗначения(Реквизиты.Период, "Период");
	
	Возврат ТаблицаОстатковГТД;
	
КонецФункции


Функция ПодготовитьПараметрыТаблицыГТД(ТаблицаТоваров, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаТоваров
	
	СписокОбязательныхКолонок = ""
		+ "Номенклатура,"				// <СправочникСсылка.*> - списываемая номенклатура
		+ "Характеристика,"
		+ "Партия,"
		+ "СтранаПроисхождения,";		// <СправочникСсылка.СтраныМира> - страна происхождения
		
	Параметры.Вставить("ТаблицаТоваров", ПрослеживаемостьПереопределяемый.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоваров, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"				// <Дата> - период движений - дата документа
		+ "Регистратор,"		// <ДокументСсылка.*> - документ-регистратор движений
		+ "РНПТ,"				// <СправочникСсылка.НомераГТД> - номер гтд
		+ "Организация,";		// <СправочникСсылка.Организации> - организация
		
	Параметры.Вставить("Реквизиты", ПрослеживаемостьПереопределяемый.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыРегистрацииПрослеживаемогоТовара(ТаблицаРеквизиты)
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Основание,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"        // <Дата> - период движений - дата документа
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Склад";    // <СправочникСсылка.Склады>
	
	Параметры.Вставить("Реквизиты", 
		ПрослеживаемостьВызовСервераПереопределяемый.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции  

Процедура ЗарегистрироватьПрослеживаемыйТовар(ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
		
	Параметры = ПодготовитьПараметрыРегистрацииПрослеживаемогоТовара(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
	
КонецПроцедуры   

// Процедура удаления проведения первичных документов
// 
// Параметры:
// Регистратор - ДокументСсылка - Документ регистратор
// 
Процедура УдалениеПроведенияПервичногоДокумента(Регистратор) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояниеУдалениеПроведенияПервичногоДокумента(Регистратор);
	
КонецПроцедуры


//Процедура СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости)
//	
//	ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
//	СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, СтрокаСРНПТ.РНПТ);
//	ОстаткиРНПТ = ТаблицаРНПТОстатки.НайтиСтроки(ОтборОстатки);
//	
//	Если ОстаткиРНПТ.Количество() = 0 
//		ИЛИ ОстаткиРНПТ[0].Количество < ТребуемоеКоличество
//		ИЛИ ОстаткиРНПТ[0].КоличествоПрослеживаемости < ТребуемоеКоличествоПрослеживаемости Тогда
//		
//		//++!! Переделать сообщение, сообщать что конкретно не удалось списать
//		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
//			НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2'"),
//			Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
//			СтрокаСРНПТ.РНПТ);
//		Поле = "Товары["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
//		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
//		
//	Иначе
//		Если ОстаткиРНПТ[0].Количество <> ТребуемоеКоличество
//			И ОстаткиРНПТ[0].КоличествоПрослеживаемости <> ТребуемоеКоличествоПрослеживаемости Тогда
//			ОстаткиРНПТ[0].Количество = ОстаткиРНПТ[0].Количество - ТребуемоеКоличество;
//			ОстаткиРНПТ[0].КоличествоПрослеживаемости = ОстаткиРНПТ[0].КоличествоПрослеживаемости - ТребуемоеКоличествоПрослеживаемости;
//		Иначе
//			ТаблицаРНПТОстатки.Удалить(ОстаткиРНПТ[0]);
//		КонецЕсли;
//		
//	КонецЕсли;

//КонецПроцедуры

//Процедура СверитьОстаткиСИсходнымДокументомРеализации(СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости)
//	
//	Если ТаблицаРНПТИсходныйДокумент = Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	
//	ОтборИсходныйДокумент = Новый Структура("ИдентификаторСтроки, СтранаПроисхождения", 
//	СтрокаТабличнойЧасти.ИдентификаторСтроки, СтрокаТабличнойЧасти.СтранаПроисхождения);
//	ИсходныеРНПТ = ТаблицаРНПТИсходныйДокумент.НайтиСтроки(ОтборИсходныйДокумент);
//	Для Каждого ИсходныйРНПТ ИЗ ИсходныеРНПТ Цикл
//		Если ТребуемоеКоличество = 0 И ТребуемоеКоличествоПрослеживаемости = 0 Тогда
//			Прервать;
//		КонецЕсли;
//		Если ИсходныйРНПТ.Количество <= ТребуемоеКоличество
//			И ИсходныйРНПТ.КоличествоПрослеживаемости <= ТребуемоеКоличествоПрослеживаемости Тогда
//			ТребуемоеКоличество = ТребуемоеКоличество - ИсходныйРНПТ.Количество;
//			ТребуемоеКоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости - ИсходныйРНПТ.КоличествоПрослеживаемости;
//			ТаблицаРНПТИсходныйДокумент.Удалить(ИсходныйРНПТ);
//		Иначе
//			Если ИсходныйРНПТ.Количество > ТребуемоеКоличество Тогда
//				ИсходныйРНПТ.Количество = ИсходныйРНПТ.Количество - ТребуемоеКоличество;
//				ТребуемоеКоличество = 0;
//			Иначе
//				ТребуемоеКоличество = ТребуемоеКоличество - ИсходныйРНПТ.Количество;
//			КонецЕсли;
//			Если ИсходныйРНПТ.КоличествоПрослеживаемости > ТребуемоеКоличествоПрослеживаемости Тогда
//				ИсходныйРНПТ.КоличествоПрослеживаемости = ИсходныйРНПТ.КоличествоПрослеживаемости - ТребуемоеКоличествоПрослеживаемости;
//				ТребуемоеКоличествоПрослеживаемости = 0;
//			Иначе
//				ТребуемоеКоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости - ИсходныйРНПТ.КоличествоПрослеживаемости;
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;

//КонецПроцедуры

//Функция ПодготовитьПараметрыДвиженияТоваров(ТаблицаТовары)
//	
//	Параметры = Новый Структура;
//	
//	СписокОбязательныхКолонок = ""
//	+ "Номенклатура,"               // <СправочникСсылка.Номенклатура>
//	+ "СтранаПроисхождения,"        // <СправочникСсылка.СтраныМира>
//	+ "РНПТ,"                       // <СправочникСсылка.НомераГТД>
//	+ "Количество,"                 // <Число,15,3> - количество
//	+ "КоличествоПрослеживаемости"; // <Число,26,11> - количество в единицах прослеживаемости
//	
//	Параметры.Вставить("Товары", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
//		ТаблицаТовары, СписокОбязательныхКолонок));
//		
//	Возврат Параметры;
//	
//КонецФункции

//Функция ПодготовитьПараметрыОперацииСПрослеживаемымТоваром(ТаблицаОперации)
//	
//	Параметры = Новый Структура;
//	
//	// Подготовка таблицы операций с прослеживаемыми товарами:
//	СписокОбязательныхКолонок = ""
//	+ "ОтражениеВОтчетности,"  // <ПеречислениеСсылка.ПорядокОтраженияВОтчетностиПоПрослеживаемости> - отчетная форма операции
//	+ "ПериодОперации,"        // <Дата> - начало квартала в котором отражается операция
//	+ "РНПТ,"                  // <СправочникСсылка.НомераГТД>
//	+ "ДокументОперации,"      // <ДокументСсылка>
//	+ "Контрагент,"            // <СправочникСсылка.Контрагенты>
//	+ "Номенклатура,"          // <СправочникСсылка.Номенклатура>
//	+ "Количество,"                    // <Число,15,3> - количество
//	+ "КоличествоПрослеживаемости,"    // <Число,26,11> - количество в единицах прослеживаемости
//	+ "СуммаБезНДС,"                   // <Число,15,2>
//	+ "ТипДокументаВПрослеживаемости," // <СправочникСсылка.ТипыДокументов>
//	+ "НомерДокумента," // <Строка, 11>
//	+ "ДатаДокумента,"  // <Дата>
//	+ "КодОперации";    // <СправочникСсылка.КодыОперацийПрослеживаемости>
//	
//	Параметры.Вставить("Операции", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
//		ТаблицаОперации, СписокОбязательныхКолонок));
//		
//	Возврат Параметры;
//	
//КонецФункции

#КонецОбласти

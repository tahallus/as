#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработкаПредупрежденийКомпонентов

// Возвращает структуру данных предупреждения компонента.
// 
// Возвращаемое значение:
// 	Структура - параметры просмотра документооборота:
// 	* Вид - См. НастройкиЭДО.ВидыПредупреждений
// 	* Текст - Строка - текст сообщения.
// 	* Блокирующее - Булево - признак невозможности дальнейших действий без устранения проблемы.
// 	* ДополнительныеДанные - Структура - дополнительные данные для обработки сообщения.
Функция НовыеДанныеПредупрежденияКомпонента() Экспорт
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Вид", "");
	ПараметрыСообщения.Вставить("ТекстОшибки", "");
	ПараметрыСообщения.Вставить("Блокирующее", Ложь);
	ПараметрыСообщения.Вставить("ДополнительныеДанные", Новый Структура);	

	Возврат ПараметрыСообщения;

КонецФункции

// Возвращает структуру данных для открытия формы проблем при обработке документов.
// 
// Возвращаемое значение:
//  Структура - параметры просмотра документооборота:
//  * СписокДокументовКОтправке - Массив из ДокументСсылка - ссылки на обрабатываемые документы.
//  * АдресСведенийОбОшибках - Строка - адрес сведений об ошибках во временном хранилище.
//  * РежимПодписатьОтправить - Булево - режим "Подписать и отправить".
//  * ФормаВладелец - ФормаКлиентскогоПриложения
//
Функция НовыеПараметрыПроблемПриОбработкеДокументов() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокДокументовКОтправке", Новый Массив);
	Параметры.Вставить("АдресСведенийОбОшибках", "");
	Параметры.Вставить("РежимПодписатьОтправить", Ложь);
	Параметры.Вставить("ИсправляемыйДокумент", Неопределено);
	Параметры.Вставить("ФормаВладелец", Неопределено);
	Параметры.Вставить("Предупреждения", Неопределено);
	
	Возврат Параметры;

КонецФункции

#КонецОбласти

#Область ОшибкиПриОбработкеДокументов

Функция ВидОшибкиНетПравДляНастройкиЭДО() Экспорт
	
	ВидОшибки = ОбработкаНеисправностейБЭДКлиентСервер.НовоеОписаниеВидаОшибки();
	ВидОшибки.Идентификатор = "НетПравДляНастройкиЭДО";
	ВидОшибки.ЗаголовокПроблемы = НСтр("ru = 'Не удалось сформировать электронный документ'");
	ВидОшибки.ОписаниеПроблемы = НСтр("ru = 'Нет прав для настройки электронного документооборота'");
	ВидОшибки.ОписаниеРешения = НСтр("ru = 'Обратитесь к администратору'");

	Возврат ВидОшибки;
	
КонецФункции

Процедура ЗаполнитьСостояниеЭДО_ФормаДокумента(Параметры) Экспорт
	
	Форма = Параметры.Форма;
	ОбъектУчета = Параметры.ДокументСсылка;
	КонтроллерСостояниеЭДО = Параметры.КонтроллерСостояниеЭДО;
	ГруппаСостояниеЭДО = Параметры.ГруппаСостояниеЭДО;
	
	Если КонтроллерСостояниеЭДО = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДокумента = ИнтеграцияЭДОВызовСервера.ОписаниеОбъектаУчета(ОбъектУчета);
	
	Если ПараметрыДокумента.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Внутренний") Тогда
		ПризнакВидимости = ИнтерфейсДокументовЭДОВызовСервера.ИспользуетсяЭДОИВнутреннийЭДО();
		Если ГруппаСостояниеЭДО = Неопределено Тогда
			КонтроллерСостояниеЭДО.Видимость = ПризнакВидимости;
		Иначе
			ГруппаСостояниеЭДО.Видимость = ПризнакВидимости;
		КонецЕсли;
		
		Если Не ПризнакВидимости Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли; 
		
	ДанныеСостоянияЭДО = ИнтеграцияЭДОВызовСервера.ДанныеСостоянияЭДОДляФормыОбъектаУчета(ОбъектУчета);
	
	Если ГруппаСостояниеЭДО = Неопределено Тогда
		КонтроллерСостояниеЭДО.Видимость = ДанныеСостоянияЭДО.ИспользуетсяОбменЭлектроннымиДокументами;
	Иначе
		ГруппаСостояниеЭДО.Видимость = ДанныеСостоянияЭДО.ИспользуетсяОбменЭлектроннымиДокументами;
	КонецЕсли;
	
	Если Не ДанныеСостоянияЭДО.ИспользуетсяОбменЭлектроннымиДокументами Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыОбменаСКонтрагентами") 
		И Форма.ПараметрыОбменаСКонтрагентами <> Неопределено Тогда
		Форма.ПараметрыОбменаСКонтрагентами.Вставить("ДанныеСостоянияЭДОИзначальные", ДанныеСостоянияЭДО);
		Форма.ПараметрыОбменаСКонтрагентами.Вставить("ДанныеСостоянияЭДОТекущие", ДанныеСостоянияЭДО);
	КонецЕсли;
	
	Если ПустаяСтрока(ДанныеСостоянияЭДО.ПредставлениеСостояния) Тогда
		Если ГруппаСостояниеЭДО = Неопределено Тогда
			КонтроллерСостояниеЭДО.Видимость = Ложь;
		Иначе
			ГруппаСостояниеЭДО.Видимость = Ложь;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(КонтроллерСостояниеЭДО) = Тип("ПолеФормы")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыОбменаСКонтрагентами") 
		И Форма.ПараметрыОбменаСКонтрагентами <> Неопределено		 
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.ПараметрыОбменаСКонтрагентами, "ПутьКДаннымКонтроллераСостояния") Тогда
		Форма[Форма.ПараметрыОбменаСКонтрагентами.ПутьКДаннымКонтроллераСостояния] = ДанныеСостоянияЭДО.ПредставлениеСостояния;
	ИначеЕсли ТипЗнч(КонтроллерСостояниеЭДО) = Тип("ДекорацияФормы") Тогда
		КонтроллерСостояниеЭДО.Заголовок = ДанныеСостоянияЭДО.ПредставлениеСостояния;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СоставПакета

Функция ГраницыВыводаДокументовПакета(СоставПакета, ТекущийДокумент, КоличествоОтображаемыхДокументовПакета) Экспорт

	ИндексДокумента = 1;	
		
	Для Каждого Документ Из СоставПакета Цикл
		Если Документ.Значение = ТекущийДокумент Тогда
			Прервать;
		КонецЕсли;
		ИндексДокумента = ИндексДокумента + 1;
	КонецЦикла;	
		
	ВсегоДокументов = СоставПакета.Количество();
	КоличествоОтображаемыхДокументов = ?(ВсегоДокументов < КоличествоОтображаемыхДокументовПакета, ВсегоДокументов,
		КоличествоОтображаемыхДокументовПакета);
	КоличествоДокументовСправа = ВсегоДокументов - ИндексДокумента;
		
	ПозицияДокументаНаПанели = ?(КоличествоОтображаемыхДокументов - КоличествоДокументовСправа
		< КоличествоОтображаемыхДокументов - 1, 1, КоличествоОтображаемыхДокументов - КоличествоДокументовСправа);	
	ДополнительноВыводимыхСправа = КоличествоОтображаемыхДокументов - ПозицияДокументаНаПанели;	
	ДополнительноВыводимыхСлева = ПозицияДокументаНаПанели - 1;

	Результат = Новый Структура;
	Результат.Вставить("ИндексНачалоВыводаЭлементов", ИндексДокумента - ДополнительноВыводимыхСлева);
	Результат.Вставить("ИндексКонцаВыводаЭлементов", ИндексДокумента + ДополнительноВыводимыхСправа);
	
	Возврат Результат;
		
КонецФункции

#КонецОбласти

Функция НайтиЭлементСхемыИнформацияПолучателя(ЭлементСхемыРегламенты) Экспорт
	
	Результат = Неопределено;
	
	Если ЭлементСхемыРегламенты.ТипЭлементаРегламента =
		ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ИнформацияОтправителя") Тогда
		
		Для Каждого ЭлементСхемы Из ЭлементСхемыРегламенты.ПолучитьЭлементы() Цикл
			Если ЭлементСхемы.ТипЭлементаРегламента = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ИнформацияПолучателя") Тогда
				Результат = ЭлементСхемы;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьФормуПечатиДокументовБСП(Форма) Экспорт
	
	ОбъектыУчета = Форма.Параметры.ПараметрКоманды;
	
	Если Не ЗначениеЗаполнено(ОбъектыУчета) Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектыУчета) <> Тип("Массив") Тогда
		 ОбъектыУчета = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОбъектыУчета);
	КонецЕсли;
	
	ПараметрыЭД = ИнтеграцияЭДОВызовСервера.ОписаниеОбъектаУчета(ОбъектыУчета[0]);
	
	Если ПараметрыЭД.ТипДокумента <> ПредопределенноеЗначение("Перечисление.ТипыДокументовЭДО.Внутренний") Тогда 
		Возврат;
	КонецЕсли;
		
	Команда = ИнтерфейсДокументовЭДОВызовСервера.КомандаПечатиОбъекта(ОбъектыУчета[0], Форма.НастройкиПечатныхФорм[0].ИмяМакета);
	Если Не ЗначениеЗаполнено(Команда) Тогда
		Форма.Элементы.ГруппаДополнительнаяИнформация.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ВидВнутреннегоДокумента = ИнтерфейсДокументовЭДОВызовСервера.НайтиСоздатьВидВнутреннегоДокумента(ОбъектыУчета[0], Команда);

	Настройки = ИнтерфейсДокументовЭДОВызовСервера.СуществуюНастройкиВнутреннегоЭДО(ПараметрыЭД.Организация, ВидВнутреннегоДокумента); 
		
	ЭДОНачат = ИнтерфейсДокументовЭДОВызовСервера.ЕстьАктуальныеЭлектронныеДокументы(ОбъектыУчета, ВидВнутреннегоДокумента);
	ТекстСостоянияЭД = ИнтеграцияЭДОВызовСервера.ПредставлениеСостоянияВнутреннегоДокументаОбъектаУчета(ОбъектыУчета, ВидВнутреннегоДокумента);
	
	Форма.Элементы.ГруппаДополнительнаяИнформация.Видимость = Ложь;

	Если Настройки <> Неопределено И Настройки.Формировать Или ЭДОНачат Тогда 
		
		Форма.Элементы.ОтправитьНаПодписьКнопкаФормы.КнопкаПоУмолчанию = Истина;
		
		Если ЗначениеЗаполнено(ТекстСостоянияЭД) И ЭДОНачат Тогда
			
			Форма.Элементы.ПредставлениеПрогрессаПодписанияДекорация.Заголовок = Новый ФорматированнаяСтрока(ТекстСостоянияЭД,,,, "ВнутреннийЭДОПрогрессПодписания");
			
			Форма.Элементы.ЭмблемаСервиса1СЭДОПодписаниеКартинка.Видимость = Истина;
			Форма.Элементы.ПредставлениеПрогрессаПодписанияДекорация.Видимость = Истина;
			Форма.Элементы.ОтправитьНаПодписьКнопкаФормы.Видимость = Ложь;
			
		Иначе

			Форма.Элементы.ОтправитьНаПодписьКнопкаФормы.Видимость = ЗначениеЗаполнено(Форма.ОбъектыПечати);
			
		КонецЕсли;
		
		Форма.Элементы.КнопкаПечатьКоманднаяПанель.ЦветФона = Новый Цвет;
		Форма.Элементы.КнопкаПечатьКоманднаяПанель.Отображение = ОтображениеКнопки.Картинка;
		
	ИначеЕсли ЗначениеЗаполнено(ПараметрыЭД) И ПараметрыЭД.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Внутренний") 
		И Настройки = Неопределено Тогда 
		
		ТекстПриглашения = НСтр("ru = 'Хотите сэкономить на бумаге? Оформите документ в электронном виде.'");
		
		Форма.Элементы.ДополнительнаяИнформация.Заголовок = Новый ФорматированнаяСтрока(ТекстПриглашения,,,, "Реклама1СЭДОВнутренний"); 
		Форма.Элементы.ГруппаДополнительнаяИнформация.Видимость = ЗначениеЗаполнено(Форма.ОбъектыПечати);
		Форма.Элементы.КнопкаПечатьКоманднаяПанель.КнопкаПоУмолчанию = Истина;
		Форма.Элементы.КартинкаИнформации.Видимость = Истина;
		Форма.Элементы.КартинкаИнформации.Картинка = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО;

	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаблокироватьЭлементФормы(Форма, СписокЭлементов, Элемент) Экспорт

	Элемент.Доступность = Ложь;
	СписокЭлементов.Добавить(Элемент.Имя);

КонецПроцедуры

Процедура РазблокироватьЗаблокированныеЭлементыФормы(Форма, СписокЭлементов) Экспорт

	Для Каждого ЗаблокированныйЭлементыФормы Из СписокЭлементов Цикл

		Форма.Элементы[ЗаблокированныйЭлементыФормы.Значение].Доступность = Истина;

	КонецЦикла;

	СписокЭлементов.Очистить();

КонецПроцедуры

#КонецОбласти

#Область ОбработкаПредупрежденийКомпонентов

// Возвращает параметры просмотра документооборота.
// 
// Параметры:
// 	Предупреждения - Массив Из см. ИнтерфейсДокументовЭДОКлиентСервер.НовыеДанныеПредупрежденияКомпонента
// 	Вид - см. _НастройкиЭДО.ВидыПредупреждений 
// Возвращаемое значение:
// 	Массив Из см. ИнтерфейсДокументовЭДО.НовыеПараметрыПредупрежденияКомпонента
Функция ПредупрежденияПоВиду(Предупреждения, Вид) Экспорт
	
	ПредупрежденияПоВиду = Новый Массив;
	
	Для Каждого Предупреждение Из Предупреждения Цикл
		Если Предупреждение.Вид = Вид Тогда
			ПредупрежденияПоВиду.Добавить(Предупреждение);
		КонецЕсли;
	КонецЦикла;
		
	Возврат ПредупрежденияПоВиду;
	
КонецФункции

// Возвращает пустые настройки формирования электронного документа по объекту учета.
// 
// Возвращаемое значение:
// 	Структура - Описание:
// * Направление - ПеречислениеСсылка.НаправленияЭДО - направление электронного документа.
// * НастройкиОтправки - Неопределено, См. НастройкиЭДО.НастройкиОтправки
// * НастройкиВнутреннегоЭДО - Неопределено, См. НастройкиЭДО.НастройкиВнутреннегоЭДО
Функция НовыеНастройкиФормированияЭлектронногоДокументаОбъектаУчета() Экспорт
	НастройкиФормирования = Новый Структура;
	НастройкиФормирования.Вставить("Направление"); 
	НастройкиФормирования.Вставить("НастройкиОтправки");
	НастройкиФормирования.Вставить("НастройкиВнутреннегоЭДО", НастройкиЭДОКлиентСервер.НовоеОписаниеПолейКлючаНастройкиВнутреннегоЭДО());
	
	Возврат НастройкиФормирования;
КонецФункции

#КонецОбласти
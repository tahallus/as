
Функция НастройкиСистемы() Экспорт
	
	Отбор = Новый Структура("Организация", Справочники.Организации.ПустаяСсылка());
	//Результат = РегистрыСведений._НастройкиСистемы.ПолучитьПоследнее(ТекущаяДата(), Отбор);
	Результат = РегистрыСведений._НастройкиСистемы.Получить(Отбор);
	
	Возврат Результат;
	
КонецФункции


Функция ВставитьЭлемент(Форма, Имя, Тип, СтруктураЭлемента) Экспорт
    
    Родитель=Форма;
    ИмяРодителя="";
    Если СтруктураЭлемента.Свойство("ИмяРодителя", ИмяРодителя) И ЗначениеЗаполнено(ИмяРодителя) Тогда 
        Родитель = Форма.Элементы[ИмяРодителя];
    КонецЕсли;
    
    СледующийЭлемент=Неопределено;
    ИмяСледующегоЭлемента="";
    Если СтруктураЭлемента.Свойство("ИмяСледующегоЭлемента", ИмяСледующегоЭлемента)
        И ЗначениеЗаполнено(ИмяСледующегоЭлемента) Тогда 
        СледующийЭлемент=Форма.Элементы[ИмяСледующегоЭлемента];
    КонецЕсли;
    
    Элемент=Форма.Элементы.Вставить(Имя, Тип, Родитель, СледующийЭлемент);
    
    ЗаполнитьЗначенияСвойств(Элемент,СтруктураЭлемента);
    
    Возврат Элемент;
    
КонецФункции


Функция ЭксельОткрыть(Эксель, ФайлЗагрузки) Экспорт 
	
	Если Эксель = Неопределено Тогда
		Эксель = Новый COMОбъект("Excel.Application"); 
	КонецЕсли;
	Эксель.DisplayAlerts = 0;
	Книга = Эксель.WorkBooks.Open(ФайлЗагрузки);
	текЛист = Книга.Worksheets(1);
	
	Возврат текЛист;
	
КонецФункции

Функция ЭксельЗакрыть(Эксель) Экспорт 
	
	Эксель.DisplayAlerts = 0; 
	Эксель.Quit();
	Эксель.DisplayAlerts = 1;
	
	Возврат Истина;
	
КонецФункции

Функция ЧислоСтрока(Знач ТекстКонвертации) Экспорт
	
	Результат = 0;
	
	Попытка
		ТекстКонвертации = СтрЗаменить(ТекстКонвертации, Символы.НПП, "");
		ТекстКонвертации = СтрЗаменить(ТекстКонвертации, ",", ".");
		Результат = Число(СокрЛП(ТекстКонвертации));
	Исключение
	КонецПопытки;
		
	Возврат Результат;
	
КонецФункции

Функция СтрокаЧисло(ЧислоКонвертации) Экспорт
	Возврат СокрЛП(СтрЗаменить(ЧислоКонвертации, Символы.НПП, ""));
КонецФункции

Функция ДатаСтрокаЭксель(Знач ДатаКонвертацииСтр) Экспорт
	
	ДатаКонвертации = Дата(1,1,1);
	
	Если СтрДлина(ДатаКонвертацииСтр) > 0 Тогда
		Попытка
			ДатаКонвертацииСтр = Число(ДатаКонвертацииСтр);
		Исключение
			ДатаКонвертацииСтр = ДатаКонвертацииСтр;
		КонецПопытки;
		ТипДаты = ТипЗнч(ДатаКонвертацииСтр);
		Если ТипДаты = Тип("Число") Тогда
			ЗначениеЯчейки = Число(ДатаКонвертацииСтр);
			ДатаКонвертации = Дата(1900, 1, 1, 0, 0, 0) + (ЗначениеЯчейки * 86400 - 2 * 86400);
		ИначеЕсли ТипДаты = Тип("Дата") Тогда
			ДатаКонвертации = ДатаКонвертацииСтр;
		Иначе
			ДатаКонвертации = ДатаСтрока(ДатаКонвертацииСтр, "dd.MM.yyyy");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДатаКонвертации;
	
КонецФункции

Функция ДатаСтрока(Знач СтрокаДатаВремя, Шаблон = "") Экспорт
	
	СтрокаДатаВремя = СтрокаСтрока(СтрокаДатаВремя);
	
	ДатаОтвета = Дата(1,1,1);
	
	Если Шаблон = "" Тогда
		Если СтрДлина(СтрокаДатаВремя) < 8 Тогда
			Возврат ДатаОтвета;
		КонецЕсли;
			
		// 29032013 191308
		СтрокаДата	= Лев(СтрокаДатаВремя, 8);
		ЧислоДень	= Число(Сред(СтрокаДата, 1, 2));
		ЧислоМесяц	= Число(Сред(СтрокаДата, 3, 2));
		ЧислоГод	= Число(Сред(СтрокаДата, 5, 4));
		ЧислоЧасов	= Число(Сред(СтрокаДата, 10, 2));
		ЧислоМинут	= Число(Сред(СтрокаДата, 12, 2));
		ЧислоСекунд	= Число(Сред(СтрокаДата, 14, 2));
		
	Иначе
		Если СтрДлина(СтрокаДатаВремя) < СтрДлина(Шаблон) Тогда
			Возврат ДатаОтвета;
		КонецЕсли;
		ЧислоГод	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "yyyy");
		Если ЧислоГод = 0 Тогда
			ЧислоГод	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "yy");
			ЧислоГод	= ?(ЧислоГод = 0, ЧислоГод, 2000 + ЧислоГод);
		КонецЕсли;
		ЧислоМесяц	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "MM");
		ЧислоДень	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "dd");
		ЧислоЧасов	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "HH");
		ЧислоМинут	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "mm");
		ЧислоСекунд	= НайтиСтрокуПоШаблону(СтрокаДатаВремя, Шаблон, "ss");
		
	КонецЕсли;
	
	ДатаОтвета = Дата(ЧислоГод, ЧислоМесяц, ЧислоДень, ЧислоЧасов, ЧислоМинут, ЧислоСекунд);
	
	Возврат ДатаОтвета;
	
КонецФункции

Функция БулевоСтрока(Знач СтрокаБулево) Экспорт
	
	Результат = Ложь;
	
	СтрокаБулево = СокрЛП(ВРег(СтрокаБулево));
	
	Если СтрокаБулево = "ДА" 
		ИЛИ СтрокаБулево = "YES"
		ИЛИ СтрокаБулево = "Х" // рус
		ИЛИ СтрокаБулево = "X" // анг
		ИЛИ СтрокаБулево = "OK" // рус
		ИЛИ СтрокаБулево = "ОК" // анг
		ИЛИ СтрокаБулево = "ИСТИНА"
		ИЛИ СтрокаБулево = "TRUE" Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НайтиСтрокуПоШаблону(ИсходнаяСтрока, Шаблон, СтрокаПоиска, ЗначениеПоУмолчанию = 0)
	
	ЗначениеВозврата = ЗначениеПоУмолчанию;
	
	ПозицияСтрокиПоиска = Найти(Шаблон, СтрокаПоиска);
	Если ПозицияСтрокиПоиска > 0 Тогда
		ЗначениеВозврата = Число(Сред(ИсходнаяСтрока, ПозицияСтрокиПоиска, СтрДлина(СтрокаПоиска)));
	КонецЕсли;
	
	Возврат ЗначениеВозврата;
	
КонецФункции

Функция СтрокаСтрока(Знач ТекСтрока) Экспорт
	
	ТекСтрока = СтрЗаменить(ТекСтрока, Символы.НПП, "");
	ТекСтрока = СокрЛП(ТекСтрока);
	
	Возврат ТекСтрока;
	
КонецФункции
 
Функция ОчиститьНаименование(Знач АнализируемыйТекст) Экспорт 

    // Читаемые символы. 
    Латиница = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"; 
    Кирилица = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя"; 
    //Греческие = "????????????????????????????????????????????????"; 
    Цифры = "0123456789"; 
	//СпециальныеСимволы = "~`!@#$%^&*(){}[]_-=+\|/*:;.<>?,№«» "; 
	//ДвойнаяКавычка = """"; 
	//ОдинарнаяКавычка = "'"; 
	//АпострофОбратный = "L9;";           // КодСимвола 769. Обратный для символа на букве "Ё". 
	//АвторскоеПраво = "©";             // КодСимвола 169. "Copyright" - латинская буква C в окружности - авторское право. 
	//Зарезервировано = "®";           // КодСимвола 174. "Registered" - латинская буква R в окружности - товарный знак. 
	//ТоварныйЗнак = "™";               // Верхний  индекс ТМ. 
	//ШирокоеТире = "—";                // КодСимвола 8212. 
	//ДенежныеСимволы = "¤?€??";  // Денежная единица, Цент, Евро, Фунт стерлингов, Иена или юань. 
	//ДробныеСимволы = "???";    // Дроби: 1/2, 1/4, 3/4. 
	//СимволыСтепени = "???";         // Степени: 1, 2, 3 
	//ПрочиеСимволы = "°±??O?µ"+Символ(167);    // Градус, Плюс/Минус, Знак умножения, Знак деления, Диаметр, Знак функции, Микро, Параграф. 
     
    ЧитаемыеСимволы = Латиница + Кирилица + Цифры;
	//+ Греческие + СпециальныеСимволы + ШирокоеТире 
	//+ ДвойнаяКавычка + ОдинарнаяКавычка + АпострофОбратный + АвторскоеПраво + Зарезервировано + ТоварныйЗнак 
	//+ ДенежныеСимволы + ДробныеСимволы + СимволыСтепени + ПрочиеСимволы; 
     
    // Формирование результирующей строки. 
    ИтоговаяСтрока = ""; 
    Для НомерСимвола = 1 ПО СтрДлина(АнализируемыйТекст) Цикл 
        ТекущийСимвол = Сред(АнализируемыйТекст, НомерСимвола, 1); 
        // Заменяемые символы. Системный набор значений: "Символы":  
        Если Найти(ЧитаемыеСимволы, ТекущийСимвол) > 0 Тогда 
            ИтоговаяСтрока = ИтоговаяСтрока + ТекущийСимвол;  
        КонецЕсли; 
    КонецЦикла; 
     
    Возврат ВРег(ОчиститьОтПробелов(ИтоговаяСтрока)); 
     
КонецФункции

Функция ОчиститьОтПробелов(Знач АнализируемыйТекст, ВсеПробелы = Ложь) Экспорт

	АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, "     "	, " ");
	АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, "    "		, " ");
	АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, "   "		, " ");
	АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, "  "		, " ");
	Если ВсеПробелы Тогда
		АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, " "	, "");
		АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, Символы.НПП	, "");
	Иначе
		АнализируемыйТекст = СтрЗаменить(АнализируемыйТекст, Символы.НПП	, " ");
	КонецЕсли;
	АнализируемыйТекст = СокрЛП(АнализируемыйТекст);
	
	Возврат АнализируемыйТекст;
	
КонецФункции



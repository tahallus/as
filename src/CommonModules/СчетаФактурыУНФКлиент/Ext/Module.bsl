#Область ПрограммныйИнтерфейс

// Устанавливает надпись гиперссылки на Счет-фактуру.
//
// Параметры:
// 	ФормаДокумента - ФормаКлиентскогоПриложения - форма, из которой открывается счет-фактура,
// 	Полученный - Булево - открыть полученный счет-фактуру.
Процедура ОткрытьСчетФактуру(ФормаДокумента, Полученный = Ложь) Экспорт

	НайденныйСчетФактура = СчетаФактурыУНФВызовСервера.ПолучитьПодчиненныйСчетФактуру(ФормаДокумента.Объект.Ссылка,
		Полученный);

	Если ФормаДокумента.Объект.ПометкаУдаления И Не ЗначениеЗаполнено(НайденныйСчетФактура) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Счет-фактуру нельзя вводить на основании документа, помеченного на удаление.'"));
		Возврат;
	КонецЕсли;

	Если ФормаДокумента.Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Документ был изменен. Сначала следует записать документ.'"));
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ФормаДокумента.Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Документ не записан. Сначала следует записать документ.'"));
		Возврат;
	КонецЕсли;

	Если Полученный Тогда
		ИмяФормы = "Документ.СчетФактураПолученный.ФормаОбъекта";
	Иначе
		ИмяФормы = "Документ.СчетФактура.ФормаОбъекта";
	КонецЕсли;
	
	// Откроем или введем новый документ
	СтруктураПараметровСчетФактуры = Новый Структура;
	Если ЗначениеЗаполнено(НайденныйСчетФактура) Тогда

		СтруктураПараметровСчетФактуры.Вставить("Ключ", НайденныйСчетФактура.Ссылка);

	Иначе

		СтруктураПараметровСчетФактуры.Вставить("Основание", ФормаДокумента.Объект.Ссылка);

	КонецЕсли;

	ОткрытьФорму(ИмяФормы, СтруктураПараметровСчетФактуры, ФормаДокумента);

КонецПроцедуры 

// Формирует надпись навигационной ссылки на Счет-фактуру.
// 
// Параметры:
// 	Дата - Дата - дата счета фактуры,
// 	Номер - Строка - номер счета фактуры.
// Возвращаемое значение:
// 	Строка - представление навигационной ссылки счета-фактуры.
Функция ПредставлениеСчетаФактуры(Дата, Номер) Экспорт

	ТекстПроСчетФактуру = НСтр("ru = '№ %Номер% от %Дата% г.'");
	КороткийНомер = РаботаСФормойДокументаКлиентСервер.ПолучитьКороткийНомерДокумента(Номер);
	ТекстПроСчетФактуру = СтрЗаменить(ТекстПроСчетФактуру, "%Номер%", КороткийНомер);
	ТекстПроСчетФактуру = СтрЗаменить(ТекстПроСчетФактуру, "%Дата%", Формат(Дата, "ДЛФ=D"));
	Возврат ТекстПроСчетФактуру;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура оповещает открытые формы с целью обновления надписи-гиперссылки о счет фактуре
// 
// Используется при печати УПД (Универсального передаточного документа)
// ОписаниеСчетовФактур. Тип Массив (многомерный).
// 
// Каждая строка массива содержит описание созданной счет фактуры.
// Расшифровка описания:
//  [0] - ссылка на документ основание
//  [1] - дата счет фактуры
//  [2] - номер счет фактуры
//
Процедура ОбновитьНадписиОСчетахФактурахОткрытыхФормах(ОписаниеСчетовФактур) Экспорт

	Если ТипЗнч(ОписаниеСчетовФактур) = Тип("Массив") Тогда

		Для Каждого СчетФактураСозданная Из ОписаниеСчетовФактур Цикл

			Структура = Новый Структура;
			Структура.Вставить("ДокументОснование", СчетФактураСозданная[0]);
			Структура.Вставить("Представление", ПредставлениеСчетаФактуры(СчетФактураСозданная[2],
				СчетФактураСозданная[1]));
			Оповестить("ОбновлениеТекстаПроСчетФактуру", Структура);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти
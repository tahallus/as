#Область ПрограммныйИнтерфейс

// Проверяет, есть ли в базе экземпляры оборудования с включенным флагом
// автоматической фискализации.
// Если передать в параметре организацию, то проверка будет проведена только
// по оборудованию этой организации.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, оборудование
//    которой подлежит проверке
//  ЗаписатьВЖурнал - Булево - надо ли создавать запись журнала регистрации
//    в случае, если оборудование не найдено
// 
// Возвращаемое значение:
//  Булево - Истина, если оборудование с флагом найдено
// 
Функция ЕстьККТСАвтоматическойФискализацией(Организация = Неопределено, ЗаписатьВЖурнал = Истина) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.ККТ)
	|	И &УсловиеПоОрганизации
	|	И ПодключаемоеОборудование.АвтоматическаяФискализация";
	
	Если Организация = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоОрганизации", "Истина");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоОрганизации", "ПодключаемоеОборудование.Организация = &Организация");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Не Запрос.Выполнить().Пустой();
	
	Если Не Результат И ЗаписатьВЖурнал Тогда
		ЗаписатьВЖурналРезультатПроверки(Организация);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Создает запись в регистре ОчередьЧековККТ для фискализации документа
// 
// Параметры:
//  Ссылка - ДокументСсылка - Документ, который необходимо фискализировать
//  ТекстОшибки - Строка - сюда будет записано сообщение, при возникновении ошибки
// 
Процедура ДобавитьВОчередьФискализации(Ссылка, ТекстОшибки = "") Экспорт
	
	МетаданныеДокумента = Ссылка.Метаданные();
	
	Если Не ДоступнаРаспределеннаяФискализация(МетаданныеДокумента) Тогда
		ТекстОшибки = НСтр("ru = 'Для данного вида документов распределенная фискализация не доступна'");
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Распределенная фискализация'"),
			УровеньЖурналаРегистрации.Ошибка,
			,
			Ссылка,
			ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ИмяДокумента = МетаданныеДокумента.Имя;
	ИмяДокумента = ?(ИмяДокумента = "ЧекККМВозврат", "ЧекККМ" ,ИмяДокумента);

	ДанныеДокумента = Документы[ИмяДокумента].ПолучитьДанныеДляФискализации(Ссылка);
	МенеджерОборудованияВызовСервера.ДобавитьЧекВОчередьЧековККТ(ДанныеДокумента)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДоступнаРаспределеннаяФискализация(МетаданныеДокумента)
	
	Результат = Ложь;
	
	Если МетаданныеДокумента.Имя = "ОперацияПоПлатежнымКартам"
		Или МетаданныеДокумента.Имя = "ЧекККМ"
		Или МетаданныеДокумента.Имя = "ЧекККМВозврат" Тогда
		
		Результат = Истина;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаписатьВЖурналРезультатПроверки(Организация)
	
	Если Организация = Неопределено Тогда
		Комментарий = НСтр("ru = 'ККТ с автоматической фискализацией не найдены'");
	Иначе
		Комментарий = СтрШаблон(НСтр("ru = 'ККТ с автоматической фискализацией по организации %1 не найдены'"), Организация);
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Распределенная фискализация'"),
		УровеньЖурналаРегистрации.Информация,
		,
		,
		Комментарий);
	
КонецПроцедуры

#КонецОбласти
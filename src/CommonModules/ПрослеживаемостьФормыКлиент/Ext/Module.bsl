#Область СлужебныйПрограммныйИнтерфейс

// Процедура вызывается при выборе ТНВЭД и номенклатуры в документе
// Уведомление об остатках прослеживаемых товаров
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма из которой вызвана формы выбора
//  Выбранное значение - выбранное значение в форме выбора
//  ИсточникВыбора - ФормаКлиенскогоПриложения - форма в которой выбрали значение
//
Процедура ОбработкаВыбораУведомления(Форма, ВыбранноеЗначение, ИсточникВыбора) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если ИсточникВыбора.ИмяФормы = ПрослеживаемостьФормыКлиентПереопределяемый.ФормаВыбораНоменклатуры() Тогда
		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;

		ТекущиеДанные.Номенклатура = ВыбранноеЗначение;
		
		ДанныеСтрокиТаблицы = Новый Структура(
			"Номенклатура, ЕдиницаИзмерения, Количество, 
			|КодОКПД2, ЕдиницаПрослеживаемости,
			|КоличествоПрослеживаемости,Сумма,СтранаПроисхождения");
		
		ПрослеживаемостьКлиентПереопределяемый.ДанныеСтрокиТаблицыТоварыУведомленияОбОстатках(ДанныеСтрокиТаблицы);
		
		ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
		
		ДанныеОбъекта = Новый Структура("КодТНВЭД,ЕдиницаПрослеживаемости");
		
		ПрослеживаемостьКлиентПереопределяемый.ДанныеОбъектаУведомленияОбОСтатках(ДанныеОбъекта);
		
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Форма.Объект);
		
		ПрослеживаемостьФормыВызовСервера.ТоварыНоменклатураПриИзмененииНаСервере(
			ДанныеСтрокиТаблицы,
			ДанныеОбъекта);
	
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
		
		ТоварыКоличествоПриИзмененииУведомления(Форма, ТекущиеДанные);
		
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = ПрослеживаемостьФормыКлиентПереопределяемый.ФормаВыбораТНВЭД() Тогда
		
		ЗаполнитьЗначенияСвойств(Объект, 
			ПрослеживаемостьВызовСервераПереопределяемый.ПараметрыВыбранногоТНВЭД(ВыбранноеЗначение));
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = 
			"Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Форма.ФормаДополнительныхСведений" Тогда
		
		ЗаполнитьЗначенияСвойств(Объект, ВыбранноеЗначение,,"Продавцы");
		
		Объект.Продавцы.Очистить();
		
		Для каждого ТекущаяСтрока Из ВыбранноеЗначение.Продавцы Цикл
			
			НоваяСтрока = Объект.Продавцы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			
		КонецЦикла;
		
		Форма.Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры 

// Процедура вызывается при начале выбора номенклатуры
// 
// Параметры:
// ФормаВладелец - ФормаКлиентскогоПриложения - Форма, в которой выбрали номенклатуру
Процедура ТоварыНоменклатураНачалоВыбораУведомления(ФормаВладелец) Экспорт
	
	Объект = ФормаВладелец.Объект;
	
	РеквизитыОтбора = Новый Структура("СписокНоменклатуры",
		ПрослеживаемостьФормыВызовСервера.СписокНоменклатуры(Объект.ПервичныйДокумент, Объект.КодТНВЭД, Объект.Дата));
	
	ПрослеживаемостьФормыКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(
		ФормаВладелец, РеквизитыОтбора);
	
КонецПроцедуры

// Процедура вызывается при изменении количества в документе 
// Уведомление об остатках прослеживаемых товаров
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма владелец
//  ТекущиеДанные - ДанныеФормыЭлементКоллекции - текущая строка в таблице товары
//
Процедура ТоварыКоличествоПриИзмененииУведомления(Форма, ТекущиеДанные) Экспорт
	
	Объект= Форма.Объект;;
	
	Если Объект.ЕдиницаИзмерения = Объект.ЕдиницаПрослеживаемости Тогда
		
		ВесПоСертификатуТовара = 1;
		
	Иначе
		
		ВесПоСертификатуТовара = 
			ПрослеживаемостьВызовСервераПереопределяемый.ВесТовараПоСертификату(ТекущиеДанные.Номенклатура);
			
	КонецЕсли;
	
	ТекущиеДанные.КоличествоПрослеживаемости = ТекущиеДанные.Количество * ВесПоСертификатуТовара;
	
КонецПроцедуры

// Вызывается при начале выбора кода ТНВЭД в документе 
// Уведомление об остатках прослеживаемых товаров
//
// Параметры: 
// ФормаВладелец - ФормаКлиентскогоПриложения - форма владелец
//
Процедура КодТНВЭДНачалоВыбора(ФормаВладелец) Экспорт
	
	Объект = ФормаВладелец.Объект;
	ПервичныйДокумент = Объект.ПервичныйДокумент;
	Период = Объект.Дата;
	
	ПрослеживаемостьФормыКлиентПереопределяемый.ОткрытьФормуВыбораТНВЭД(
		ФормаВладелец, ПрослеживаемостьФормыВызовСервера.СписокТНВЭД(ПервичныйДокумент, Объект.Ссылка, Период));

	КонецПроцедуры

// Выполняет команду печати документа Уведомление об остатках прослеживаемых товаров
//
// Параметры:
//  ОписаниеКоманды - структура, содержащая ключ, соответствующие таблице значений
//						создаваемой функций БСП УправлениеПечатью.СоздатьКоллекциюКомандПечати(),
//						и ключ Форма - управляемая форма, из которой вызвана команда печати.
//
Функция ВыполнитьКомандуПечатиУведомленияОбОСтаткахПрослеживаемыхТоваров(ОписаниеКоманды) Экспорт

	ПараметрыПечати = ПрослеживаемостьКлиентПереопределяемый.ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати);
	
	Если ОписаниеКоманды.Свойство("ДополнительныеПараметры") 
		И ПараметрыПечати <> Неопределено Тогда
		ПараметрыПечати.Вставить("ДополнительныеПараметры", ОписаниеКоманды.ДополнительныеПараметры);
	КонецЕсли;

	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров",
		"УведомлениеОбОстаткахПрослеживаемыхТоваров",
		ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма,
		ПараметрыПечати);
	
КонецФункции

// Выполняет команду печати документа "Уведомление о ввозе прослеживаемых товаров"
//
// Параметры:
//  ОписаниеКоманды - структура,содержащая ключ, соответствующие таблице значений
//						создаваемой функций БСП УправлениеПечатью.СоздатьКоллекциюКомандПечати(),
//						и ключ Форма - управляемая форма, из которой вызвана команда печати.
//
Функция ВыполнитьКомандуПечатиУведомленияОВвозеПрослеживаемыхТоваров(ОписаниеКоманды) Экспорт

	ПараметрыПечати = ПрослеживаемостьКлиентПереопределяемый.ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати);
	
	Если ОписаниеКоманды.Свойство("ДополнительныеПараметры") 
		И ПараметрыПечати <> Неопределено Тогда
		ПараметрыПечати.Вставить("ДополнительныеПараметры", ОписаниеКоманды.ДополнительныеПараметры);
	КонецЕсли;

	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОВвозеПрослеживаемыхТоваров",
		"УведомлениеОВвозеПрослеживаемыхТоваров",
		ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма,
		ПараметрыПечати);
	
КонецФункции

#Область УведомленияОбОстатках

// Проверяет соответствие реквизитов шапки с реквизитами табличной части
//
// Параметры: 
// ФормаВладелец - ФормаКлиентскогоПриложения - форма владелец
// Отказ - булево - признак отказа
// ПараметрыЗаписи - РежимЗаписиДокумента - режимы записи документа
//
Процедура ПроверитьСоответствиеРеквизитовВШапкеИТабличнойЧасти(Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	Если ПараметрыЗаписи.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	НомерКорректировки = Объект.НомерКорректировки;
	
	ТекущийКодТНВЭД = ?(НомерКорректировки = 0, Объект.КодТНВЭД, Объект.КодТНВЭДПослеИзменения);
	ТекущаяЕдиницаИзмерения = ?(НомерКорректировки = 0, Объект.ЕдиницаИзмерения, Объект.ЕдиницаИзмеренияПослеИзменения);
	
	Для каждого ТекущаяСтрокаТовары Из Объект.Товары Цикл
		
		Если НомерКорректировки > 0 
			И ТекущаяСтрокаТовары.КоличествоПослеИзменения = 0
			И ТекущаяСтрокаТовары.КоличествоПрослеживаемостиПослеИзменения = 0
			И ТекущаяСтрокаТовары.СуммаПослеИзменения = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыНоменклатуры = ПрослеживаемостьФормыВызовСервера.ПараметрыНоменклатуры(ТекущаяСтрокаТовары.Номенклатура);
		
		Если ПараметрыНоменклатуры.КодТНВЭД <> ТекущийКодТНВЭД Тогда
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Корректность", НСтр("ru = 'Номенклатура'"),,,
				НСтр("ru = 'В номенклатуре %1 ТН ВЭД %2 не совпадает со значением ТН ВЭД %3 в шапке документа'"));
				
			ТекстСообщения = СтрШаблон(
				ТекстСообщения, 
				ТекущаяСтрокаТовары.Номенклатура,
				ПараметрыНоменклатуры.КодТНВЭД,
				ТекущийКодТНВЭД);
				
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Объект.Товары", ТекущаяСтрокаТовары.НомерСтроки, "Номенклатура");
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКДанным,, Отказ);
			
		ИначеЕсли ПараметрыНоменклатуры.ЕдиницаИзмерения <> ТекущаяЕдиницаИзмерения Тогда
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Корректность", НСтр("ru = 'Номенклатура'"),,,
				НСтр("ru = 'В номенклатуре %1 единица измерения %2 не совпадает со значением единицы измерения %3 в шапке документа'"));
				
			ТекстСообщения = СтрШаблон(
				ТекстСообщения,
				ТекущаяСтрокаТовары.Номенклатура,
				ПараметрыНоменклатуры.ЕдиницаИзмерения,
				ТекущаяЕдиницаИзмерения);
			
			ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Объект.Товары", ТекущаяСтрокаТовары.НомерСтроки, "Номенклатура");
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКДанным,, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область УведомленияОПеремещении

// Выполняет команду печати документа Уведомление о перемещении прослеживаемых товаров
//
// Параметры:
//  ОписаниеКоманды - структура, содержащая ключ, соответствующие таблице значений
//						создаваемой функций БСП УправлениеПечатью.СоздатьКоллекциюКомандПечати(),
//						и ключ Форма - управляемая форма, из которой вызвана команда печати.
//
Функция ВыполнитьКомандуПечатиУведомленияОПеремещенииПрослеживаемыхТоваров(ОписаниеКоманды) Экспорт

	ПараметрыПечати = ПрослеживаемостьКлиентПереопределяемый.ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати);
	
	Если ОписаниеКоманды.Свойство("ДополнительныеПараметры") 
		И ПараметрыПечати <> Неопределено Тогда
		ПараметрыПечати.Вставить("ДополнительныеПараметры", ОписаниеКоманды.ДополнительныеПараметры);
	КонецЕсли;

	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров",
		"УведомлениеОПеремещенииПрослеживаемыхТоваров",
		ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма,
		ПараметрыПечати);
	
КонецФункции

#КонецОбласти

#КонецОбласти
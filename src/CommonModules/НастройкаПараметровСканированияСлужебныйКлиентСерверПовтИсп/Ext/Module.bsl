#Область СлужебныйПрограммныйИнтерфейс

// Перечисление параметров настроек контроля кодов маркировки.
// 
// Возвращаемое значение:
// 	Структура - Параметры контроля.
Функция ПараметрыКонтроля() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	
	ВозвращаемоеЗначение.Вставить("ПараметрыКонтроляСтатусов");
	ВозвращаемоеЗначение.Вставить("ПараметрыКонтроляВладельцев");
	ВозвращаемоеЗначение.Вставить("ПараметрыКонтроляСредствамиККТ");
	
	ЗаполнитьЗначенияКлючами(ВозвращаемоеЗначение);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РежимыКонтроляСредствамиККТ() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	
	ВозвращаемоеЗначение.Вставить("ПриСканировании");
	ВозвращаемоеЗначение.Вставить("ПередПробитиемЧека");
	
	ЗаполнитьЗначенияКлючами(ВозвращаемоеЗначение);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Представления настроек параметров сканирования для отображения пользователю.
// 
// Возвращаемое значение:
// 	Соответствие - Представление параметров сканирования.
Функция ПредставленияПараметровСканирования() Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие();
	ПараметрыКонтроля    = ПараметрыКонтроля();
	
	ВозвращаемоеЗначение.Вставить(
		"ЗапрашиватьДанныеСервисаИСМП",
		НСтр("ru = 'Запрашивать данные сервиса ГИС МТ'"));
	
	ВозвращаемоеЗначение.Вставить(
		ПараметрыКонтроля.ПараметрыКонтроляСтатусов,
		НСтр("ru = 'Контролировать статусы кодов маркировки'"));
	ВозвращаемоеЗначение.Вставить(
		ПараметрыКонтроля.ПараметрыКонтроляВладельцев,
		НСтр("ru = 'Контролировать владельцев кодов маркировки'"));
	ВозвращаемоеЗначение.Вставить(
		ПараметрыКонтроля.ПараметрыКонтроляСредствамиККТ,
		НСтр("ru = 'Контролировать коды маркировки средствами ККТ'"));
	
	ВозвращаемоеЗначение.Вставить(
		"РежимКонтроляСредствамиККТ",
		НСтр("ru = 'Режим контроля средствами ККТ'"));
	ВозвращаемоеЗначение.Вставить(
		"ПропускатьПроверкуСредствамиККТ",
		НСтр("ru = 'Пропускать проверку средствами ККТ, если выполнен контроль статусов'"));
	
	РежимыКонтроля = РежимыКонтроляСредствамиККТ();
	
	ВозвращаемоеЗначение.Вставить(
		РежимыКонтроля.ПриСканировании,
		НСтр("ru = 'При сканировании'"));
	ВозвращаемоеЗначение.Вставить(
		РежимыКонтроля.ПередПробитиемЧека,
		НСтр("ru = 'Перед пробитием чека'"));
	
	ВозвращаемоеЗначение.Вставить(
		"КонтролироватьСтандартнуюВложенность",
		НСтр("ru = 'Контролировать стандартную вложенность'"));
	ВозвращаемоеЗначение.Вставить(
		"ПропускатьСтрокиСОшибкамиПриЗагрузкеИзТСД",
		НСтр("ru = 'Пропускать строки с ошибками при загрузке из ТСД'"));
	ВозвращаемоеЗначение.Вставить(
		"ПроверятьАлфавитКодовМаркировки",
		НСтр("ru = 'Проверять алфавит кодов маркировки'"));
	ВозвращаемоеЗначение.Вставить(
		"ПроверятьПотребительскиеУпаковкиНаВхождениеВСеруюЗонуМОТП",
		НСтр("ru = 'Проверять потребительские упаковки на вхождение в серую зону'"));
	ВозвращаемоеЗначение.Вставить(
		"ПроверятьЛогистическиеИГрупповыеУпаковкиНаСодержаниеСерыхКодовМОТП",
		НСтр("ru = 'Проверять логистические и групповые упаковки на содержание серых кодов'"));
	ВозвращаемоеЗначение.Вставить(
		"УчитыватьМРЦ",
		НСтр("ru = 'Проверять потребительские упаковки на вхождение в серую зону'"));
	ВозвращаемоеЗначение.Вставить(
		"ДатаПроизводстваНачалаКонтроляСтатусовКодовМаркировкиМОТП",
		НСтр("ru = 'Контролировать статусы с даты производства'"));
		
	ВозвращаемоеЗначение.Вставить(
		"ПроверятьСтруктуруКодовМаркировки",
		НСтр("ru = 'Восстанавливать структуру кода маркировки'"));
	ВозвращаемоеЗначение.Вставить(
		"УпрощеннаяОбработкаКодовМаркировки",
		НСтр("ru = 'Упрощенная обработка кодов маркировки при загрузке в отчет производственной линии'"));
	
	ВозвращаемоеЗначение.Вставить(
		"ПроверятьСтруктуруКодовМаркировки",
		НСтр("ru = 'Восстанавливать структуру кода маркировки'"));
	ВозвращаемоеЗначение.Вставить(
		"УпрощеннаяОбработкаКодовМаркировки",
		НСтр("ru = 'Упрощенная обработка кодов маркировки при загрузке в отчет производственной линии'"));
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Допустимые виды операций для настройки исключений.
// 
// Возвращаемое значение:
// 	СписокЗначений - ПеречислениеСсылка.ВидыПродукцииИС, ПеречислениеСсылка.ВидыОперацийИСМП - Значение и представление допустимых видов операций.
Функция ДопустимыеВидыОпераций() Экспорт
	
	ВозвращаемоеЗначение = Новый СписокЗначений();
	
	//
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа"),
		НСтр("ru ='Розничные продажи'"));
	
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации"),
		НСтр("ru ='Розничные возвраты'"));
	
	//
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"),
		НСтр("ru ='Оптовые продажи'"));
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаПродажа"),
		НСтр("ru ='Оптовые возвраты'"));
	
	//
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"),
		НСтр("ru ='Приобретение товаров'"));
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Перемаркировка"),
		НСтр("ru ='Перемаркировка'"));
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеЭмитированныхКодовМаркировки"),
		НСтр("ru ='Списание кодов маркировки'"));
	
	//
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"),
		НСтр("ru ='Агрегация'"));
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ"),
		НСтр("ru ='Нанесение'"));
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"),
		НСтр("ru ='Ввод в оборот'"));
	
	//
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"),
		НСтр("ru ='Вывод из оборота'"));
	ВозвращаемоеЗначение.Добавить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборот"),
		НСтр("ru ='Возврат в оборот'"));
	
	Для Каждого Элемент Из ВозвращаемоеЗначение Цикл
		Если Не ЗначениеЗаполнено(Элемент.Представление) Тогда
			Элемент.Представление = СокрЛП(Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ВозвращаемоеЗначение.СортироватьПоПредставлению();
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Определение зависимостей видов операций от допустимых для настройки исключений видов операций.
// 
// Возвращаемое значение:
// 	Соответствие - соответствие виду операции, который не указан в допустимых видах операции.
Функция ПодчиненныеВидыОпераций() Экспорт
	
	СоответствиеЗначений = Новый Соответствие();
	
	//
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаПродажа"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.АгрегацияИзменение"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.АгрегацияСоздание"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.АгрегацияУдаление"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.АгрегацияПроверкаСтатусаОбработкиДокумента"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Агрегация"));
	
	//
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеПроверкаСтатусаОбработкиДокумента"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеЭмитированныхКодовМаркировки"));
	
	//
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОбИспользованииКодовМаркировки"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОбИспользованииРасчетСтатуса"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОбИспользованииКодовМаркировки"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотКонтрактноеПроизводствоЕАЭС"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборотИмпортСФТС"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВводВОборот"));
	
	//
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаБезвозмезднаяПередача"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаВозвратФизическомуЛицу"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаВПроцессеРеализацииПоДоговоруРассрочки"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаИспользованиеДляСобственныхНуждПредприятия"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаКонфискацияТовара"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаКредитныйДоговор"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаЛиквидацияПредприятия"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРеализацияКонфискованныхТоваров"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРеализацияПоДоговоруРассрочки"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаУничтожениеТовара"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаУтратаПовреждениеТовара"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаЭкспортВСтраныЕАЭС"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаЭкспортЗаПределыСтранЕАЭС"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаПродажаПоОбразцамДистанционнаяПродажа"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаБрак"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаИстечениеСрокаГодности"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаЛабораторныеОбразцы"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаОтзывСРынка"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРекламации"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаДругиеПричины"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаТестированиеПродукта"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.СписаниеВведенныхВОборотКодовМаркировки"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборота"));
	
	//
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаТрансграничнаяТорговля"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаБезвозмезднаяПередача"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПриобретениеГосПредприятием"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаКомиссия"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаДляСобственныхНуждПокупателя"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаАгент"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаАннулировать"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаАннулирование"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаТрансграничнаяТорговляАннулирование"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ОтгрузкаПродажа"));
	
	//
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаПродажа"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаБезвозмезднаяПередача"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаКомиссия"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаАгент"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаПриобретениеГосПредприятием"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаДляСобственныхНуждПокупателя"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаОтклонить"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаОтклонен"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ПриемкаТрансграничнаяТорговля"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.Приемка"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборот"));
	СоответствиеЗначений.Вставить(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборотПриДистанционномСпособеПродажи"),
		ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборот"));
	
	Возврат СоответствиеЗначений;
	
КонецФункции

// Предопределенное значение отображения по товарным группам.
// 
// Возвращаемое значение:
// 	Строка - Идентификатор значения.
Функция ВариантОтображенияПоВидамПродукции() Экспорт
	Возврат "ПоТоварнымГруппам";
КонецФункции

// Предопределенное значение отображения по видам операции.
// 
// Возвращаемое значение:
// 	Строка - Идентификатор значения
Функция ВариантОтображенияПоОперациям() Экспорт
	Возврат "ПоОперациям";
КонецФункции

// Описание
// 
// Параметры:
// 	НастройкаЗначение - ПеречислениеСсылка.ВидыПродукцииИС, ПеречислениеСсылка.ВидыОперацийИСМП - Настройка.
// Возвращаемое значение:
// 	Строка - Представление
Функция ПредставлениеНастройки(НастройкаЗначение) Экспорт
	
	ДопустимыеВидыОпераций = ДопустимыеВидыОпераций();
	
	ПоискЗначения = ДопустимыеВидыОпераций.НайтиПоЗначению(НастройкаЗначение);
	Если ПоискЗначения <> Неопределено Тогда
		Если ЗначениеЗаполнено(ПоискЗначения.Представление) Тогда
			Возврат ПоискЗначения.Представление;
		Иначе
			Возврат СокрЛП(ПоискЗначения.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СокрЛП(НастройкаЗначение);
	
КонецФункции

// Описание
// 
// Параметры:
// 	ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции.
// 	ВидОперации - ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции.
// 	ИмяПараметраКонтроля - Строка - Идентификатор параметра контроля.
// Возвращаемое значение:
// 	Булево - Признак исключения операции.
Функция ОперацияИсключенаВНастройкахСканирования(ВидПродукции, ВидОперации, ИмяПараметраКонтроля) Экспорт
	
	Если Не ЗначениеЗаполнено(ВидПродукции) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПараметрыКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПараметрыКонтроля();
	Если ИмяПараметраКонтроля <> ПараметрыКонтроля.ПараметрыКонтроляСредствамиККТ Тогда
	
		ЗапрашиватьДанныеСервисаИСМП = ИнтеграцияИСМПКлиентСерверПовтИсп.ЗапрашиватьДанныеСервиса();
		
		Если Не ЗапрашиватьДанныеСервисаИСМП Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ГруппаПараметров = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
		ИнтеграцияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки(),
		ИмяПараметраКонтроля);
	
	ИсключенияПоВидуПродукции = ГруппаПараметров.Исключения.Получить(ВидПродукции);
	
	Если ИсключенияПоВидуПродукции = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ИсключенияПоВидуПродукции.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ИсключенияПоВидуПродукции.Получить(ВидОперации) <> Неопределено Тогда
		Возврат Истина;
	Иначе
		
		ПодчиненныеВидыОпераций = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПодчиненныеВидыОпераций();
		РодительскаяОперация    = ПодчиненныеВидыОпераций.Получить(ВидОперации);
		
		Если ИсключенияПоВидуПродукции.Получить(РодительскаяОперация) = Неопределено Тогда
			Возврат Ложь;
		Иначе 
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

// Виды розничных операций.
// 
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ВидыОперацийИСМП - Виды розничных операций.
Функция ОперацииРозничнойТорговли() Экспорт
	
	ОперацииРозничнойТорговли = Новый Массив();
	
	ОперацииРозничнойТорговли.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа"));
	ОперацииРозничнойТорговли.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации"));
	
	Возврат ОперацииРозничнойТорговли;
	
КонецФункции

// Определяет необходимость контроля статусов кодов маркировки для вида опреации по товарной группе.
// 
// Параметры:
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС  - Вид продукции.
//  ВидОперации  - ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции.
// 
// Возвращаемое значение:
//  Булево - Контролировать статусы кодов маркировки.
Функция КонтролироватьСтатусыКодовМаркировки(ВидПродукции, ВидОперации) Экспорт
	
	ПараметрыКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПараметрыКонтроля();
	ГруппаПараметров  = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
		ИнтеграцияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки(),
		ПараметрыКонтроля.ПараметрыКонтроляСтатусов);
	
	Если ГруппаПараметров.Включено
		И Не НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацияИсключенаВНастройкахСканирования(
		ВидПродукции,
		ВидОперации,
		ПараметрыКонтроля.ПараметрыКонтроляСтатусов) Тогда
		
		Возврат Истина;
		
	Иначе
	
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Определяет необходимость контроля владельцев кодов маркировки для вида опреации по товарной группе.
// 
// Параметры:
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС  - Вид продукции.
//  ВидОперации  - ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции.
// 
// Возвращаемое значение:
//  Булево - Контролировать владельцев кодов маркировки.
Функция КонтролироватьВладельцевКодовМаркировки(ВидПродукции, ВидОперации) Экспорт
	
	ПараметрыКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПараметрыКонтроля();
	ГруппаПараметров  = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
		ИнтеграцияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки(),
		ПараметрыКонтроля.ПараметрыКонтроляВладельцев);
	
	Если ГруппаПараметров.Включено
		И Не НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацияИсключенаВНастройкахСканирования(
		ВидПродукции,
		ВидОперации,
		ПараметрыКонтроля.ПараметрыКонтроляВладельцев) Тогда
		
		Возврат Истина;
		
	Иначе
	
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Определяет необходимость контроля кодов маркировки средствами ККТ для вида опреации по товарной группе.
// 
// Параметры:
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС  - Вид продукции.
//  ВидОперации  - ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции.
// 
// Возвращаемое значение:
//  Булево - Контролировать коды маркировки средствами ККТ.
Функция КонтролироватьКодыМаркировкиСредствамиККТ(ВидПродукции, ВидОперации) Экспорт
	
	ПараметрыКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПараметрыКонтроля();
	ГруппаПараметров  = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
		ИнтеграцияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки(),
		ПараметрыКонтроля.ПараметрыКонтроляСредствамиККТ);
	
	Если ГруппаПараметров.Включено
		И Не НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацияИсключенаВНастройкахСканирования(
			ВидПродукции,
			ВидОперации,
			ПараметрыКонтроля.ПараметрыКонтроляСредствамиККТ) Тогда
		
		Возврат Истина;
		
	Иначе
	
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьЗначенияКлючами(Данные)

	Для Каждого КлючИЗначение Из Данные Цикл
			Данные[КлючИЗначение.Ключ] = КлючИЗначение.Ключ;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//@skip-warning
Процедура ПриОпределенииНастроекИнтеграции(НастройкиИнтеграции) Экспорт
	
КонецПроцедуры

Функция КорневойАдрес() Экспорт
	
	Возврат ТелефонияСервер.ПолучитьНастройкиТелефонии().АдресОблачнойАТС;
	
КонецФункции

Функция ШаблонURLHTTPСервиса() Экспорт
	
	Возврат "itoolabs";
	
КонецФункции

Функция ЗапросИсходящегоВызова(НомерКонтакта, НастройкиТелефонии) Экспорт
	
	ПараметрыОтправки = ОтправкаЗапросов.НовыйПараметрыОтправки();
	ПараметрыОтправки.Сервер = КорневойАдрес();
	ПараметрыОтправки.ПараметрыТела.Вставить("cmd",   "makeCall");
	ПараметрыОтправки.ПараметрыТела.Вставить("phone", НомерКонтакта);
	ПараметрыОтправки.ПараметрыТела.Вставить("user",  НастройкиТелефонии.НастройкиТекущегоПользователя.ВнутреннийНомер);
	ПараметрыОтправки.ПараметрыТела.Вставить("token", НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС);
	Возврат ПараметрыОтправки;
	
КонецФункции

Процедура ОбработатьОтветЗапросаИсходящегоВызова(HttpОтвет, НастройкиТелефонии, Результат) Экспорт
	
	Если HTTPОтвет.КодСостояния = 200 Тогда
		Возврат;
	КонецЕсли;
	
	Результат.ЗаголовокОшибки = РасшифровкаОшибки(HTTPОтвет.КодСостояния);
	Результат.ТекстОшибки = РаскодироватьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку(), СпособКодированияСтроки.КодировкаURL);
	
КонецПроцедуры

Функция КорректнаяПодписьЗапроса(ПодписьЗапроса, ПараметрыЗапроса = Неопределено) Экспорт
	
	НастройкиТелефонии = ТелефонияСервер.ПолучитьНастройкиТелефонии();
	КлючДляАвторизации = НастройкиТелефонии.КлючДляАвторизацииВУНФ;
	Возврат ПодписьЗапроса = КлючДляАвторизации;
	
КонецФункции

Функция НастройкиИнтеграцииЗаполнены(АТС, НастройкиТелефонии) Экспорт
	
	Возврат ЗначениеЗаполнено(НастройкиТелефонии.АдресОблачнойАТС)
		И ЗначениеЗаполнено(НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС)
		И ЗначениеЗаполнено(НастройкиТелефонии.КлючДляАвторизацииВУНФ);
	
КонецФункции

Функция СсылкаНаЗаписьРазговора(ДанныеЗвонка, Ошибка) Экспорт
	
	Возврат ДанныеЗвонка.ЗаписьРазговора.Ссылка;
	
КонецФункции

#Область УстаревшиеПроцедурыИФункции

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПриСозданииИсходящегоВызова(НомерАбонента, ДанныеПользователяАТС, НастройкиТелефонии, ПараметрыОтправки, Ошибка) Экспорт
	
	ПараметрыОтправки.ПараметрыТела.Вставить("cmd",   "makeCall");
	ПараметрыОтправки.ПараметрыТела.Вставить("phone", НомерАбонента);
	ПараметрыОтправки.ПараметрыТела.Вставить("user",  ДанныеПользователяАТС.ВнутреннийНомер);
	ПараметрыОтправки.ПараметрыТела.Вставить("token", НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС);
	
КонецПроцедуры

// Устарела. Будет удалена в следующей версии программы.
//
Процедура ПриОбработкеОтветаНаСозданиеИсходящегоВызова(HTTPОтвет, ЗаголовокОшибки, ТекстОшибки) Экспорт
	
	Если HTTPОтвет.КодСостояния = 200 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокОшибки = РасшифровкаОшибки(HTTPОтвет.КодСостояния);
	ТекстОшибки = РаскодироватьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку(), СпособКодированияСтроки.КодировкаURL);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РасшифровкаОшибки(Код)
	
	Если Код = 400 Тогда
		Возврат НСтр("ru='Переданы некорректные параметры'");
	ИначеЕсли Код = 401 Тогда
		Возврат НСтр("ru='Передан неверный ключ (token)'");
	Иначе
		Возврат НСтр("ru='Неизвестная ошибка'");
	КонецЕсли;
	
КонецФункции

#КонецОбласти


#Область ПрограммныйИнтерфейс

// Заполняет уникальные ключи связи в табличной части.
//
// Параметры:
//  Таблица - ТаблицаЗначений, ТабличнаяЧасть - Заполняемая таблица.
//  ИмяРеквизита - Строка - Имя реквизита ключа связи.
Процедура ЗаполнитьКлючиСвязи(Таблица, ИмяРеквизита = "КлючСвязи") Экспорт
	
	МаксимальноеЗначение = 0;
	Для каждого СтрокаТабличнойЧасти Из Таблица Цикл
		Если СтрокаТабличнойЧасти[ИмяРеквизита] > МаксимальноеЗначение Тогда
			МаксимальноеЗначение = СтрокаТабличнойЧасти[ИмяРеквизита];
		КонецЕсли; 
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из Таблица Цикл
		Если СтрокаТабличнойЧасти[ИмяРеквизита] <> 0 Тогда
			Продолжить;
		КонецЕсли; 
		МаксимальноеЗначение = МаксимальноеЗначение+1;
		СтрокаТабличнойЧасти[ИмяРеквизита] = МаксимальноеЗначение;
	КонецЦикла; 
	
КонецПроцедуры

// Заполняет таблицу распределения материалов по таблицам продукции и запасов.
//
// Параметры:
//  Продукция - ТаблицаЗначений, ТабличнаяЧасть - Таблица продукции.
//  Запасы - ТаблицаЗначений, ТабличнаяЧасть - Таблица распределяемых запасов.
//  РаспределениеЗапасов - ТаблицаЗначений, ТабличнаяЧасть - Полученная таблица распределения материалов.
//  ВыполненныеЭтапы - ТаблицаЗначений, ТабличнаяЧасть - Таблица выполненных при производстве этапов.
//  ЗаказНаПроизводство - ДокументСсылка.ЗаказНаПроизводство - Заказ на производство, по которому выполняется распределение.
//  ВидОперации - ПеречислениеСсылка.ВидыОперацийЗаказНаПроизводство, ПеречислениеСсылка.ВидыОперацийСборкаЗапасов - Вид
//      операции производства.
//
Процедура РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, ВыполненныеЭтапы = Неопределено, ЗаказНаПроизводство = Неопределено, ВидОперации = Неопределено) Экспорт
	
	ЗаполнитьКлючиСвязи(Продукция); 
	ЗаполнитьКлючиСвязи(Запасы); 
	
	Если ТипЗнч(Продукция) <> Тип("ТаблицаЗначений") Тогда
		ТаблицаПродукции = Продукция.Выгрузить();
	Иначе
		ТаблицаПродукции = Продукция;
	КонецЕсли; 
	Если ТипЗнч(Запасы) <> Тип("ТаблицаЗначений") Тогда
		ТаблицаЗапасы = Запасы.Выгрузить();
	Иначе
		ТаблицаЗапасы = Запасы;
	КонецЕсли;
	
	ЭтоРазборка = (ЗначениеЗаполнено(ВидОперации) 
	И (ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка 
	ИЛИ ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка));
	
	СоставСпецификаций = СоставСпецификаций(ТаблицаПродукции, Истина);
	Для каждого СтрокаСостава Из СоставСпецификаций Цикл
		ЗаказНеЗаполнен = (НЕ ЗначениеЗаполнено(СтрокаСостава.ЗаказПокупателя) И НЕ ЗначениеЗаполнено(ЗаказНаПроизводство));
		Если (ЗаказНеЗаполнен ИЛИ ЭтоРазборка) И ЗначениеЗаполнено(СтрокаСостава.Этап) Тогда
			// Поэтапное производство возможно только под заказ
			СтрокаСостава.Этап = Справочники.ЭтапыПроизводства.ПустаяСсылка();
		КонецЕсли; 
	КонецЦикла; 
	СоставСпецификаций.Свернуть("КлючСвязи, Этап, НоменклатураСостава, ХарактеристикаСостава", "КоличествоСостава");
	Если ТаблицаЗапасы.Колонки.Найти("Ячейка") = Неопределено Тогда
		ТаблицаЗапасы.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.Ячейки"))
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") И ВыполненныеЭтапы <> Неопределено Тогда
		Если ТипЗнч(ВыполненныеЭтапы) <> Тип("ТаблицаЗначений") Тогда
			ТаблицаЭтапов = ВыполненныеЭтапы.Выгрузить();
		Иначе
			ТаблицаЭтапов = ВыполненныеЭтапы;
		КонецЕсли;
	Иначе
		ТаблицаЭтапов = СоставСпецификаций.Скопировать(, "КлючСвязи, Этап");
	КонецЕсли; 
	ТаблицаЭтапов.Свернуть("КлючСвязи, Этап");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Продукция", ТаблицаПродукции);
	Запрос.УстановитьПараметр("Запасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("СоставСпецификаций", СоставСпецификаций);
	Запрос.УстановитьПараметр("Этапы", ТаблицаЭтапов);
	Запрос.УстановитьПараметр("ЭтоРазборка", ЭтоРазборка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Спецификация КАК Спецификация,
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Продукция.Количество КАК Количество,
	|	Продукция.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ Продукция
	|ИЗ
	|	&Продукция КАК Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Запасы.Этап КАК Этап,
	|	Запасы.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Запасы.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Спецификация КАК Спецификация,
	|	Запасы.Партия КАК Партия,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Запасы.Количество КАК Количество,
	|	Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Ячейка КАК Ячейка,
	|	Запасы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&Запасы КАК Запасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставСпецификаций.Этап КАК Этап,
	|	СоставСпецификаций.НоменклатураСостава КАК НоменклатураСостава,
	|	СоставСпецификаций.ХарактеристикаСостава КАК ХарактеристикаСостава,
	|	СоставСпецификаций.КоличествоСостава КАК КоличествоСостава,
	|	СоставСпецификаций.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ СоставСпецификаций
	|ИЗ
	|	&СоставСпецификаций КАК СоставСпецификаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Этапы.Этап КАК Этап,
	|	Этапы.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ Этапы
	|ИЗ
	|	&Этапы КАК Этапы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Спецификация КАК Спецификация,
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Продукция.Количество КАК Количество,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	ЕСТЬNULL(Этапы.Этап, ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)) КАК Этап
	|ПОМЕСТИТЬ ПродукцияИЭтапы
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Этапы КАК Этапы
	|		ПО Продукция.КлючСвязи = Этапы.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	СоставСпецификаций.Этап КАК Этап,
	|	СоставСпецификаций.НоменклатураСостава КАК НоменклатураСостава,
	|	СоставСпецификаций.ХарактеристикаСостава КАК ХарактеристикаСостава,
	|	СоставСпецификаций.КоличествоСостава КАК КоличествоСостава
	|ПОМЕСТИТЬ ПродукцияИСостав
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставСпецификаций КАК СоставСпецификаций
	|		ПО Продукция.КлючСвязи = СоставСпецификаций.КлючСвязи
	|ГДЕ
	|	НЕ СоставСпецификаций.КлючСвязи ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставСпецификаций.НоменклатураСостава КАК НоменклатураСостава,
	|	СоставСпецификаций.ХарактеристикаСостава КАК ХарактеристикаСостава,
	|	ПродукцияИЭтапы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПродукцияИЭтапы.Этап КАК Этап,
	|	СУММА(СоставСпецификаций.КоличествоСостава) КАК КоличествоСостава
	|ПОМЕСТИТЬ БазаПоСоставу
	|ИЗ
	|	СоставСпецификаций КАК СоставСпецификаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродукцияИЭтапы КАК ПродукцияИЭтапы
	|		ПО СоставСпецификаций.КлючСвязи = ПродукцияИЭтапы.КлючСвязи
	|			И СоставСпецификаций.Этап = ПродукцияИЭтапы.Этап
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставСпецификаций.НоменклатураСостава,
	|	СоставСпецификаций.ХарактеристикаСостава,
	|	ПродукцияИЭтапы.ЗаказПокупателя,
	|	ПродукцияИЭтапы.Этап
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(Продукция.Количество) КАК Количество
	|ПОМЕСТИТЬ БазаПоКоличествуПродукции
	|ИЗ
	|	Продукция КАК Продукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Продукция.ЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродукцияИСостав.КлючСвязи КАК КлючСвязиПродукция,
	|	ПродукцияИСостав.Этап КАК Этап,
	|	ВЗЗапасы.Номенклатура КАК Номенклатура,
	|	ВЗЗапасы.Характеристика КАК Характеристика,
	|	ВЗЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЗЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ЕСТЬNULL(БазаПоСоставу.КоличествоСостава, 0) = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЗЗапасы.Количество / ЕСТЬNULL(БазаПоСоставу.КоличествоСостава, 0) * ПродукцияИСостав.КоличествоСостава
	|			КОНЕЦ КАК ЧИСЛО(15, 3))) КАК Количество,
	|	ВЗЗапасы.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ЗапасыРаспределенные
	|ИЗ
	|	ПродукцияИСостав КАК ПродукцияИСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Запасы.Этап КАК Этап,
	|			Запасы.Номенклатура КАК Номенклатура,
	|			Запасы.Характеристика КАК Характеристика,
	|			Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|			Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|			СУММА(Запасы.Количество) КАК Количество,
	|			МИНИМУМ(Запасы.НомерСтроки) КАК НомерСтроки
	|		ИЗ
	|			Запасы КАК Запасы
	|		ГДЕ
	|			(Запасы.Номенклатура, Запасы.Характеристика, Запасы.ЗаказПокупателя, Запасы.Этап) В
	|					(ВЫБРАТЬ
	|						БазаПоСоставу.НоменклатураСостава,
	|						БазаПоСоставу.ХарактеристикаСостава,
	|						БазаПоСоставу.ЗаказПокупателя,
	|						БазаПоСоставу.Этап
	|					ИЗ
	|						БазаПоСоставу)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Запасы.Характеристика,
	|			Запасы.Номенклатура,
	|			Запасы.ЕдиницаИзмерения,
	|			Запасы.Этап,
	|			Запасы.ЗаказПокупателя) КАК ВЗЗапасы
	|		ПО ПродукцияИСостав.НоменклатураСостава = ВЗЗапасы.Номенклатура
	|			И ПродукцияИСостав.ХарактеристикаСостава = ВЗЗапасы.Характеристика
	|			И ПродукцияИСостав.ЗаказПокупателя = ВЗЗапасы.ЗаказПокупателя
	|			И ПродукцияИСостав.Этап = ВЗЗапасы.Этап
	|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоСоставу КАК БазаПоСоставу
	|		ПО ПродукцияИСостав.НоменклатураСостава = БазаПоСоставу.НоменклатураСостава
	|			И ПродукцияИСостав.ХарактеристикаСостава = БазаПоСоставу.ХарактеристикаСостава
	|			И ПродукцияИСостав.ЗаказПокупателя = БазаПоСоставу.ЗаказПокупателя
	|			И ПродукцияИСостав.Этап = БазаПоСоставу.Этап
	|ГДЕ
	|	НЕ ВЗЗапасы.Номенклатура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродукцияИСостав.КлючСвязи,
	|	ПродукцияИСостав.Этап,
	|	ВЗЗапасы.Номенклатура,
	|	ВЗЗапасы.Характеристика,
	|	ВЗЗапасы.ЕдиницаИзмерения,
	|	ВЗЗапасы.ЗаказПокупателя,
	|	ВЗЗапасы.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Продукция.КлючСвязи,
	|	ВЗЗапасы.Этап,
	|	ВЗЗапасы.Номенклатура,
	|	ВЗЗапасы.Характеристика,
	|	ВЗЗапасы.ЕдиницаИзмерения,
	|	ВЗЗапасы.ЗаказПокупателя,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ЕСТЬNULL(БазаПоКоличествуПродукции.Количество, 0) = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЗЗапасы.Количество / ЕСТЬNULL(БазаПоКоличествуПродукции.Количество, 0) * Продукция.Количество
	|			КОНЕЦ КАК ЧИСЛО(15, 3))),
	|	ВЗЗапасы.НомерСтроки
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Запасы.Этап КАК Этап,
	|			Запасы.Номенклатура КАК Номенклатура,
	|			Запасы.Характеристика КАК Характеристика,
	|			Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|			Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|			СУММА(Запасы.Количество) КАК Количество,
	|			МИНИМУМ(Запасы.НомерСтроки) КАК НомерСтроки
	|		ИЗ
	|			Запасы КАК Запасы
	|		ГДЕ
	|			НЕ (Запасы.Номенклатура, Запасы.Характеристика, Запасы.ЗаказПокупателя, Запасы.Этап) В
	|						(ВЫБРАТЬ
	|							БазаПоСоставу.НоменклатураСостава,
	|							БазаПоСоставу.ХарактеристикаСостава,
	|							БазаПоСоставу.ЗаказПокупателя,
	|							БазаПоСоставу.Этап
	|						ИЗ
	|							БазаПоСоставу)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Запасы.ЗаказПокупателя,
	|			Запасы.ЕдиницаИзмерения,
	|			Запасы.Характеристика,
	|			Запасы.Номенклатура,
	|			Запасы.Этап) КАК ВЗЗапасы
	|		ПО Продукция.ЗаказПокупателя = ВЗЗапасы.ЗаказПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоКоличествуПродукции КАК БазаПоКоличествуПродукции
	|		ПО Продукция.ЗаказПокупателя = БазаПоКоличествуПродукции.ЗаказПокупателя
	|ГДЕ
	|	НЕ ВЗЗапасы.Номенклатура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Продукция.КлючСвязи,
	|	ВЗЗапасы.Этап,
	|	ВЗЗапасы.Номенклатура,
	|	ВЗЗапасы.ЗаказПокупателя,
	|	ВЗЗапасы.Характеристика,
	|	ВЗЗапасы.ЕдиницаИзмерения,
	|	ВЗЗапасы.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыРаспределенные.КлючСвязиПродукция КАК КлючСвязиПродукция,
	|	0 КАК КлючСвязиЗапасы,
	|	ЗапасыРаспределенные.Этап КАК Этап,
	|	ЗапасыРаспределенные.Номенклатура КАК Номенклатура,
	|	ЗапасыРаспределенные.Характеристика КАК Характеристика,
	|	ЗапасыРаспределенные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	ЗапасыРаспределенные.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка) КАК Ячейка,
	|	ЗапасыРаспределенные.Количество КАК Количество,
	|	ЗапасыРаспределенные.Номенклатура.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики
	|ИЗ
	|	ЗапасыРаспределенные КАК ЗапасыРаспределенные
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗапасыРаспределенные.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЗОкругления.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЗОкругления.Этап КАК Этап,
	|	ВЗОкругления.Номенклатура КАК Номенклатура,
	|	ВЗОкругления.Характеристика КАК Характеристика,
	|	ВЗОкругления.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ВЗОкругления.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыРаспределенные.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыРаспределенные.Этап КАК Этап,
	|		ЗапасыРаспределенные.Номенклатура КАК Номенклатура,
	|		ЗапасыРаспределенные.Характеристика КАК Характеристика,
	|		ЗапасыРаспределенные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		- ЗапасыРаспределенные.Количество КАК Количество
	|	ИЗ
	|		ЗапасыРаспределенные КАК ЗапасыРаспределенные
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Запасы.ЗаказПокупателя,
	|		Запасы.Этап,
	|		Запасы.Номенклатура,
	|		Запасы.Характеристика,
	|		Запасы.ЕдиницаИзмерения,
	|		Запасы.Количество
	|	ИЗ
	|		Запасы КАК Запасы) КАК ВЗОкругления
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЗОкругления.ЗаказПокупателя,
	|	ВЗОкругления.Этап,
	|	ВЗОкругления.Номенклатура,
	|	ВЗОкругления.Характеристика,
	|	ВЗОкругления.ЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЗОкругления.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Запасы.Этап КАК Этап,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Спецификация КАК Спецификация,
	|	Запасы.Партия КАК Партия,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Запасы.Количество КАК Количество,
	|	Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Ячейка КАК Ячейка,
	|	Запасы.КлючСвязи КАК КлючСвязиЗапасы
	|ИЗ
	|	Запасы КАК Запасы";
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаРаспределения = Результат.Получить(9).Выгрузить();
	ТаблицаЗапасов = Результат.Получить(11).Выгрузить();
	
	// Проверка ошибок округления. Расхождение добавляется к строке с максимальным значением 
	ВыборкаОкругления = Результат.Получить(10).Выбрать();
	Пока ВыборкаОкругления.Следующий() Цикл
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЗаказПокупателя", ВыборкаОкругления.ЗаказПокупателя);
		СтруктураОтбора.Вставить("Этап", ВыборкаОкругления.Этап);
		СтруктураОтбора.Вставить("Номенклатура", ВыборкаОкругления.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", ВыборкаОкругления.Характеристика);
		СтруктураОтбора.Вставить("ЕдиницаИзмерения", ВыборкаОкругления.ЕдиницаИзмерения);
		Строки = ТаблицаРаспределения.НайтиСтроки(СтруктураОтбора);
		Если ВыборкаОкругления.Количество <> 0 Тогда
			УчестьОкругление(Строки, ВыборкаОкругления.Количество, "Количество");
		КонецЕсли; 
	КонецЦикла;
	
	Результат = ТаблицаРаспределения.СкопироватьКолонки();
	Для каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
		Распределить = СтрокаРаспределения.Количество;
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЗаказПокупателя", СтрокаРаспределения.ЗаказПокупателя);
		СтруктураОтбора.Вставить("Этап", СтрокаРаспределения.Этап);
		СтруктураОтбора.Вставить("Номенклатура", СтрокаРаспределения.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", СтрокаРаспределения.Характеристика);
		СтруктураОтбора.Вставить("ЕдиницаИзмерения", СтрокаРаспределения.ЕдиницаИзмерения);
		Строки = ТаблицаЗапасов.НайтиСтроки(СтруктураОтбора);
		Для каждого СтрокаЗапасов Из Строки Цикл
			Если СтрокаЗапасов.Количество <= 0 Тогда
				Продолжить;
			КонецЕсли; 
			Количество = Мин(Распределить, СтрокаЗапасов.Количество);
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - Количество;
			Распределить = Распределить - Количество;
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			НоваяСтрока.Количество = Количество;
			Если Распределить <= 0 Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	Если ТипЗнч(РаспределениеЗапасов) <> Тип("ТаблицаЗначений") Тогда
		РаспределениеЗапасов.Загрузить(Результат);
	Иначе
		РаспределениеЗапасов = Результат;
	КонецЕсли; 
	
КонецПроцедуры

// Заполняет таблицу запасов по таблице распределения материалов.
//
// Параметры:
//  Запасы - ТабличнаяЧасть - Заполняемая табличная часть запасов.
//  РаспределениеЗапасов - ТабличнаяЧасть - Табличная часть распределения запасов - источник данных.
//
Процедура ЗаполнитьПоРаспределению(Запасы, РаспределениеЗапасов) Экспорт
	
	ТаблицаРаспределения = РаспределениеЗапасов.Выгрузить();
	БезЯчеек = (ТаблицаРаспределения.Колонки.Найти("Ячейка") = Неопределено);
	Если БезЯчеек Тогда
		ТаблицаРаспределения.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаРаспределения", ТаблицаРаспределения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРаспределения.Этап КАК Этап,
	|	ВЫРАЗИТЬ(ТаблицаРаспределения.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаРаспределения.Характеристика КАК Характеристика,
	|	ТаблицаРаспределения.Партия КАК Партия,
	|	ТаблицаРаспределения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаРаспределения.Спецификация КАК Спецификация,
	|	ТаблицаРаспределения.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаРаспределения.Ячейка КАК Ячейка,
	|	ТаблицаРаспределения.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаРаспределения.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаРаспределения
	|ИЗ
	|	&ТаблицаРаспределения КАК ТаблицаРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспределения.Этап КАК Этап,
	|	ТаблицаРаспределения.Номенклатура КАК Номенклатура,
	|	ТаблицаРаспределения.Характеристика КАК Характеристика,
	|	ТаблицаРаспределения.Партия КАК Партия,
	|	ТаблицаРаспределения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаРаспределения.Спецификация КАК Спецификация,
	|	ТаблицаРаспределения.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаРаспределения.Ячейка КАК Ячейка,
	|	ТаблицаРаспределения.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ТаблицаРаспределения.Количество) КАК Количество,
	|	1 КАК ДоляСтоимости,
	|	ТаблицаРаспределения.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	ТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаспределения.Этап,
	|	ТаблицаРаспределения.Номенклатура,
	|	ТаблицаРаспределения.Характеристика,
	|	ТаблицаРаспределения.Партия,
	|	ТаблицаРаспределения.ЕдиницаИзмерения,
	|	ТаблицаРаспределения.Спецификация,
	|	ТаблицаРаспределения.СтруктурнаяЕдиница,
	|	ТаблицаРаспределения.Ячейка,
	|	ТаблицаРаспределения.ЗаказПокупателя,
	|	ТаблицаРаспределения.Номенклатура.СтранаПроисхождения";
	
	Запасы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

// Объединяет информацию табличных частей запасов и распределения. Итоговая таблица значений содержит данные
//		распределения запасов и специфические колонки, присутствующие только в таблице запасов: СтранаПроисхождения,
//		НомерГТД, Резерв, ДоляСтоимости.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.СборкаЗапасов - Ссылка на документ производства, для которого нужно получить
//                                                  объединенную информацию
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с результатом объединения.
//
Функция ОбъединитьЗапасыИРаспределение(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СборкаЗапасовЗапасы.Этап КАК Этап,
	|	СборкаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовЗапасы.Характеристика КАК Характеристика,
	|	СборкаЗапасовЗапасы.Партия КАК Партия,
	|	СборкаЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СборкаЗапасовЗапасы.Спецификация КАК Спецификация,
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.Ячейка КАК Ячейка,
	|	СборкаЗапасовЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СборкаЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СборкаЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	СУММА(СборкаЗапасовЗапасы.Резерв) КАК Резерв,
	|	СУММА(СборкаЗапасовЗапасы.ДоляСтоимости) КАК ДоляСтоимости,
	|	СУММА(СборкаЗапасовЗапасы.Количество) КАК Количество
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
	|ГДЕ
	|	СборкаЗапасовЗапасы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СборкаЗапасовЗапасы.Этап,
	|	СборкаЗапасовЗапасы.Партия,
	|	СборкаЗапасовЗапасы.ЕдиницаИзмерения,
	|	СборкаЗапасовЗапасы.Номенклатура,
	|	СборкаЗапасовЗапасы.Спецификация,
	|	СборкаЗапасовЗапасы.Ячейка,
	|	СборкаЗапасовЗапасы.Характеристика,
	|	СборкаЗапасовЗапасы.СтруктурнаяЕдиница,
	|	СборкаЗапасовЗапасы.ЗаказПокупателя,
	|	СборкаЗапасовЗапасы.СтранаПроисхождения,
	|	СборкаЗапасовЗапасы.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СборкаЗапасовРаспределениеЗапасов.Ссылка КАК Ссылка,
	|	СборкаЗапасовРаспределениеЗапасов.Этап КАК Этап,
	|	СборкаЗапасовРаспределениеЗапасов.НомерСтроки КАК НомерСтроки,
	|	СборкаЗапасовРаспределениеЗапасов.КлючСвязиПродукция КАК КлючСвязиПродукция,
	|	СборкаЗапасовРаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовРаспределениеЗапасов.Характеристика КАК Характеристика,
	|	СборкаЗапасовРаспределениеЗапасов.Партия КАК Партия,
	|	СборкаЗапасовРаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СборкаЗапасовРаспределениеЗапасов.Спецификация КАК Спецификация,
	|	СборкаЗапасовРаспределениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасовРаспределениеЗапасов.Ячейка КАК Ячейка,
	|	СборкаЗапасовРаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	СборкаЗапасовРаспределениеЗапасов.Количество КАК Количество,
	|	0 КАК Резерв,
	|	0 КАК ДоляСтоимости,
	|	ЛОЖЬ КАК Распределено
	|ИЗ
	|	Документ.СборкаЗапасов.РаспределениеЗапасов КАК СборкаЗапасовРаспределениеЗапасов
	|ГДЕ
	|	СборкаЗапасовРаспределениеЗапасов.Ссылка = &Ссылка";
	
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаЗапасы = Результат.Получить(0).Выбрать();
	ТаблицаРаспределение = Результат.Получить(1).Выгрузить();
	
	Пока ВыборкаЗапасы.Следующий() Цикл
		СтруктураОтбора = Новый Структура("Этап, Номенклатура, Характеристика, Партия, Спецификация, ЕдиницаИзмерения, СтруктурнаяЕдиница, Ячейка, ЗаказПокупателя");
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, ВыборкаЗапасы);
		СтруктураОтбора.Вставить("Распределено", Ложь);
		СтрокиРаспределение = ТаблицаРаспределение.НайтиСтроки(СтруктураОтбора);
		КоличествоРаспределить = ВыборкаЗапасы.Количество;
		РезервРаспределить = ВыборкаЗапасы.Резерв;
		ДоляСтоимостиРаспределить = ВыборкаЗапасы.ДоляСтоимости;
		Для каждого СтрокаРаспределение Из СтрокиРаспределение Цикл
			Если КоличествоРаспределить = СтрокаРаспределение.Количество Тогда
				СтрокаРаспределение.Резерв = РезервРаспределить;
				СтрокаРаспределение.ДоляСтоимости = ДоляСтоимостиРаспределить;
				ЗаполнитьЗначенияСвойств(СтрокаРаспределение, ВыборкаЗапасы, "СтранаПроисхождения, НомерГТД");
				СтрокаРаспределение.Распределено = Истина;
				Прервать;
			ИначеЕсли КоличествоРаспределить > СтрокаРаспределение.Количество Тогда
				СтрокаРаспределение.Резерв = Мин(РезервРаспределить, СтрокаРаспределение.Количество);
				Если КоличествоРаспределить <> 0 Тогда
					СтрокаРаспределение.ДоляСтоимости = ДоляСтоимостиРаспределить * СтрокаРаспределение.Количество / КоличествоРаспределить;
				КонецЕсли; 
				ЗаполнитьЗначенияСвойств(СтрокаРаспределение, ВыборкаЗапасы, "СтранаПроисхождения, НомерГТД");
				СтрокаРаспределение.Распределено = Истина;
				КоличествоРаспределить = КоличествоРаспределить - СтрокаРаспределение.Количество;
				РезервРаспределить = РезервРаспределить - СтрокаРаспределение.Резерв;
				ДоляСтоимостиРаспределить = ДоляСтоимостиРаспределить - СтрокаРаспределение.ДоляСтоимости;
			ИначеЕсли КоличествоРаспределить < СтрокаРаспределение.Количество Тогда
				НоваяСтрока = ТаблицаРаспределение.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределение);
				НоваяСтрока.Количество = КоличествоРаспределить;
				НоваяСтрока.Резерв = РезервРаспределить;
				НоваяСтрока.ДоляСтоимости = ДоляСтоимостиРаспределить;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапасы, "СтранаПроисхождения, НомерГТД");
				НоваяСтрока.Распределено = Истина;
				СтрокаРаспределение.Количество = СтрокаРаспределение.Количество - НоваяСтрока.Количество;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	ТаблицаРаспределение.Сортировать("НомерСтроки");
	Возврат ТаблицаРаспределение;
	
КонецФункции

// Возвращает массив этапов производства спецификаций.
//
// Параметры:
//  Спецификации - СправочникСсылка.Спецификации, Массив - Спецификация / массив спецификаций, для которых нужно
//                                                         определить используемые этапы производства
// Возвращаемое значение:
//  Массив - Массив ссылок на этапы производства (СправочникСсылка.ЭтапыПроизводства), которые будут пройдены при
//           производстве по заданным спецификациям.
//
Функция ЭтапыПроизводстваСпецификаций(Спецификации) Экспорт
	
	Если ТипЗнч(Спецификации) <> Тип("Массив") Тогда
		МассивСпецификация = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Спецификации); 
	Иначе
		МассивСпецификация = Спецификации;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификации", МассивСпецификация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыПроизводстваЭтапы.Этап КАК Этап,
	|	МИНИМУМ(ВидыПроизводстваЭтапы.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПроизводства.Этапы КАК ВидыПроизводстваЭтапы
	|		ПО Спецификации.ВидПроизводства = ВидыПроизводстваЭтапы.Ссылка
	|ГДЕ
	|	Спецификации.Ссылка В(&Спецификации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыПроизводстваЭтапы.Этап
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка),
	|	0
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|ГДЕ
	|	Спецификации.ВидПроизводства = ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|	И (Спецификации.Ссылка В (&Спецификации)
	|			ИЛИ ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) В (&Спецификации))
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Спецификации.Ссылка) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	МассивЭтапов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Этап");
	Если МассивЭтапов.Количество() = 0 Тогда
		МассивЭтапов.Добавить(Справочники.ЭтапыПроизводства.ПустаяСсылка());
	КонецЕсли; 
	Возврат МассивЭтапов;
	
КонецФункции

// Возвращает спецификации, использующие поэтапное производство.
//
// Параметры:
//  Спецификации - Массив - Массив спецификаций (СправочникСсылка.Спецификации), которые нужно проверить
// Возвращаемое значение:
//  Массив - Массив спецификаций (СправочникСсылка.Спецификации), использующих поэтапное производство.
//
Функция СпецификацииСПоэтапнымПроизводством(Спецификации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификации", Спецификации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спецификации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|ГДЕ
	|	Спецификации.Ссылка В(&Спецификации)
	|	И Спецификации.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Добавляет в запрос временную таблицу этапов производства продукции.
//
// Параметры:
//  Запрос - Запрос - Запрос, в который добавляется временная таблица.
//  ИмяВременнаяТаблица - Строка - Имя временной таблицы продукции.
Процедура ДобавитьТаблицуПорядкаЭтапов(Запрос, ИмяВременнаяТаблица = "Продукция") Экспорт
	
	Запрос.Текст = СтрШаблон(
	"ВЫБРАТЬ
	|	Продукция.Ссылка КАК Заказ,
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Спецификация КАК Спецификация,
	|	Продукция.Партия КАК Партия,
	|	ВидыПроизводстваЭтапы.НомерСтроки КАК Порядок,
	|	ВидыПроизводстваЭтапы.Этап КАК Этап
	|ПОМЕСТИТЬ ПродукцияИЭтапыПлан
	|ИЗ
	|	%1 КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации КАК Спецификации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПроизводства.Этапы КАК ВидыПроизводстваЭтапы
	|			ПО Спецификации.ВидПроизводства = ВидыПроизводстваЭтапы.Ссылка
	|		ПО Продукция.Спецификация = Спецификации.Ссылка
	|ГДЕ
	|	Продукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|	И Спецификации.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)",
	ИмяВременнаяТаблица);
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает структурную единицу накопления себестоимости изделий по умолчанию (подразделение по умолчанию для 
//		завершающего этапа производства)
//
// Параметры:
//  СтруктурнаяЕдиницаПроизводства - СправочникСсылка.СтруктурныеЕдиницы - Структурная единица производства. Будет 
//		возвращена, если для завершающего этапа производства подразделение по умолчанию не задано.
// Возвращаемое значение:
//  СправочникСсылка.СтруктурныеЕдиницы - Подразделение накопления себестоимости изделий по умолчанию.
//
Функция СтруктурнаяЕдиницаНакопленияСебестоимостиПоУмолчанию(СтруктурнаяЕдиницаПроизводства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭтапыПроизводстваСтруктурныеЕдиницы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	Справочник.ЭтапыПроизводства.СтруктурныеЕдиницы КАК ЭтапыПроизводстваСтруктурныеЕдиницы
	|ГДЕ
	|	ЭтапыПроизводстваСтруктурныеЕдиницы.Ссылка = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ЗавершениеПроизводства)
	|	И ЭтапыПроизводстваСтруктурныеЕдиницы.ПоУмолчанию";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СтруктурнаяЕдиница;
	Иначе
		Возврат СтруктурнаяЕдиницаПроизводства;
	КонецЕсли; 
	
КонецФункции

// Заполняет этапы производства для таблицы запасов по спецификациям продукции.
//
// Параметры:
//  Продукция - ТаблицаЗначений - Таблица продукции.
//  Запасы - ТабличнаяЧасть - Табличная часть запасов, в которой будут заполнены этапы производства.
Процедура ЗаполнитьЭтапыМатериалов(Продукция, Запасы) Экспорт
	
	ТаблицаСостава = СоставСпецификаций(Продукция, Истина);
	ТаблицаСостава.Свернуть("НоменклатураСостава, ХарактеристикаСостава, ЕдиницаИзмеренияСостава, Этап", "КоличествоСостава");
	ТаблицаЗапасы = Запасы.ВыгрузитьКолонки();
	
	Для каждого СтрокаЗапасов Из Запасы Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("НоменклатураСостава", СтрокаЗапасов.Номенклатура);
		СтруктураПоиска.Вставить("ХарактеристикаСостава", СтрокаЗапасов.Характеристика);
		СтруктураПоиска.Вставить("ЕдиницаИзмеренияСостава", СтрокаЗапасов.ЕдиницаИзмерения);
		СтрокиСостава = ТаблицаСостава.НайтиСтроки(СтруктураПоиска);
		Если СтрокиСостава.Количество() = 0 Тогда
			НоваяСтрока = ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			Если ТаблицаСостава.Количество() > 0 И ТаблицаСостава.Найти(Справочники.ЭтапыПроизводства.ПустаяСсылка(), "Этап") = Неопределено Тогда
				НоваяСтрока.Этап = Справочники.ЭтапыПроизводства.ЗавершениеПроизводства;
			КонецЕсли; 
		ИначеЕсли СтрокиСостава.Количество() = 1 Тогда
			НоваяСтрока = ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			НоваяСтрока.Этап = СтрокиСостава[0].Этап;
		Иначе
			ВсегоКоличество = 0;
			Для каждого СтрокаСостава Из СтрокиСостава Цикл
				ВсегоКоличество = ВсегоКоличество + СтрокаСостава.КоличествоСостава;
			КонецЦикла;
			Если ВсегоКоличество = 0 Тогда
				// Распределение по количеству строк
				Распределено = 0;
				НовыеСтроки = Новый Массив;
				Для каждого СтрокаСостава Из СтрокиСостава Цикл
					НоваяСтрока = ТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
					НоваяСтрока.Этап = СтрокиСостава[0].Этап;
					НоваяСтрока.Количество = СтрокаЗапасов.Количество * 1 / СтрокиСостава.Количество();
					Распределено = Распределено + НоваяСтрока.Количество;
					НовыеСтроки.Добавить(НоваяСтрока);
				КонецЦикла;
				Если Распределено <> СтрокаЗапасов.Количество Тогда
					УчестьОкругление(НовыеСтроки, (СтрокаЗапасов.Количество-Распределено), "Количество");
				КонецЕсли; 
			Иначе
				// Распределение по количеству
				Распределено = 0;
				НовыеСтроки = Новый Массив;
				Для каждого СтрокаСостава Из СтрокиСостава Цикл
					НоваяСтрока = ТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
					НоваяСтрока.Этап = СтрокиСостава[0].Этап;
					НоваяСтрока.Количество = СтрокаЗапасов.Количество * СтрокаСостава.КоличествоСостава / ВсегоКоличество;
					Распределено = Распределено + НоваяСтрока.Количество;
					НовыеСтроки.Добавить(НоваяСтрока);
				КонецЦикла;
				Если Распределено <> СтрокаЗапасов.Количество Тогда
					УчестьОкругление(НовыеСтроки, (СтрокаЗапасов.Количество - Распределено), "Количество");
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	ТаблицаЗапасы.ЗаполнитьЗначения(0, "КлючСвязи");
	СвернутьПоВсемКолонкам(ТаблицаЗапасы, "Количество, Резерв, ДоляСтоимости");
	ЗаполнитьКлючиСвязи(ТаблицаЗапасы);
	Запасы.Загрузить(ТаблицаЗапасы);
	
КонецПроцедуры

// Возвращает признак использования спецификацией дополнительных реквизитов
//
// Параметры:
//  Спецификация - СправочникСсылка.Спецификации - Проверяемая спецификация.
// Возвращаемое значение:
//  Булево - Признак наличия у спецификации общих или привязанных к категории дополнительных реквизитов.
//
Функция ЕстьДопРеквизитыСпецификации(Спецификация) Экспорт
	
	НаборРеквизитов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Владелец.КатегорияНоменклатуры.НаборСвойствСпецификации", Истина); 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборРеквизитов", НаборРеквизитов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	НаборДополнительныеРеквизиты.Свойство КАК Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборДополнительныеРеквизиты
	|ГДЕ
	|	НаборДополнительныеРеквизиты.Ссылка В (&НаборРеквизитов, ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Спецификации_Общие))
	|	И НЕ НаборДополнительныеРеквизиты.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка.Следующий();
	
КонецФункции

// Процедура - Обновить признаки параметрических спецификаций в табличной части документа
//
// Параметры:
//  ТабличнаяЧасть	 - 	ДанныеФормыКоллекция - Таблица, содержащая колонки дополнительных реквизитов спецификаций: ЭтоШаблон, ЕстьДопРеквизиты
//
Процедура ОбновитьПризнакиПараметрическихСпецификаций(ТабличнаяЧасть) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПараметрическиеСпецификации")
		ИЛИ НЕ ПравоДоступа("Чтение", Метаданные.Справочники.Спецификации) Тогда
		Возврат;
	КонецЕсли; 
	
	МассивСпецификаций = Новый Массив;
	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(Стр.Спецификация) И МассивСпецификаций.Найти(Стр.Спецификация)=Неопределено Тогда
			МассивСпецификаций.Добавить(Стр.Спецификация);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивСпецификаций.Количество()>0 Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Спецификации.Ссылка КАК Ссылка,
		|	Спецификации.ЭтоШаблон КАК ЭтоШаблон,
		|	ВЫБОР
		|		КОГДА НаборДополнительныеРеквизиты.Свойство ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьДопРеквизиты
		|ИЗ
		|	Справочник.Спецификации КАК Спецификации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииНоменклатуры КАК КатегорииНоменклатуры
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборДополнительныеРеквизиты
		|				ПО (КатегорииНоменклатуры.НаборСвойствСпецификации = НаборДополнительныеРеквизиты.Ссылка
		|						ИЛИ НаборДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Спецификации_Общие))
		|					И (НЕ НаборДополнительныеРеквизиты.ПометкаУдаления)
		|			ПО Номенклатура.КатегорияНоменклатуры = КатегорииНоменклатуры.Ссылка
		|		ПО Спецификации.Владелец = Номенклатура.Ссылка
		|ГДЕ
		|	Спецификации.Ссылка В(&МассивСпецификаций)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА НаборДополнительныеРеквизиты.Свойство ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	Спецификации.Ссылка,
		|	Спецификации.ЭтоШаблон";
		Выборка = Запрос.Выполнить().Выбрать();
		ПараметрыСпецификаций = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			СтруктураПараметров = Новый Структура("ЭтоШаблон, ЕстьДопРеквизиты");
			ЗаполнитьЗначенияСвойств(СтруктураПараметров, Выборка);
			ПараметрыСпецификаций.Вставить(Выборка.Ссылка, СтруктураПараметров);	
		КонецЦикла; 
		
		Для каждого Стр Из ТабличнаяЧасть Цикл
			СтруктураПараметров = ПараметрыСпецификаций.Получить(Стр.Спецификация);
			Если НЕ ЗначениеЗаполнено(Стр.Спецификация) ИЛИ СтруктураПараметров=Неопределено Тогда
				Стр.ЭтоШаблонСпецификации = Ложь;
				Стр.ЕстьДопРеквизитыСпецификации = Ложь;
			Иначе
				Стр.ЭтоШаблонСпецификации = СтруктураПараметров.ЭтоШаблон;
				Стр.ЕстьДопРеквизитыСпецификации = СтруктураПараметров.ЕстьДопРеквизиты;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

// Обновляет признак пометки удаления у привязанных к заказу спецификаций.
//
// Параметры:
//  Заказ - ДокументСсылка.ЗаказПокупателя, ДокументСсылка.ЗаказНаПроизводство - Заказ для отбора спецификаций.
//  ПометкаУдаления - Булево - Новое значение признака пометки удаления спецификаций.
Процедура ОбновитьСвязанныеСпецификации(Заказ, ПометкаУдаления) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Заказ) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ПравоДоступа("Изменение", Метаданные.Справочники.Спецификации) Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("ПометкаУдаления", ПометкаУдаления);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументЗаказ.Ссылка КАК Заказ,
	|	Спецификации.Ссылка КАК Спецификация
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ДокументЗаказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации КАК Спецификации
	|		ПО (Спецификации.Заказ = ДокументЗаказ.Ссылка)
	|ГДЕ
	|	ДокументЗаказ.Ссылка = &Заказ
	|	И Спецификации.ПометкаУдаления <> &ПометкаУдаления
	|	И ДокументЗаказ.ПометкаУдаления <> &ПометкаУдаления";
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ЗаказПокупателя", "Документ.ЗаказНаПроизводство");
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Спецификация = Выборка.Спецификация.ПолучитьОбъект();
		Спецификация.УстановитьПометкуУдаления(ПометкаУдаления);
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура СравнитьЗапасыИРаспределение(Объект, Отказ) Экспорт
	
	Если ТипЗнч(Объект) <> Тип("ДокументОбъект.ЗаказНаПроизводство") 
		И ТипЗнч(Объект) <> Тип("ДокументОбъект.СборкаЗапасов") Тогда
		Возврат;
	КонецЕсли; 
	
	Если Объект.Запасы.Количество() = 0 И Объект.РаспределениеЗапасов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	БезЯчеек = (ТаблицаЗапасы.Колонки.Найти("Ячейка") = Неопределено);
	Если БезЯчеек Тогда
		ТаблицаЗапасы.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	КонецЕсли; 
	
	ТаблицаРаспределения = Объект.РаспределениеЗапасов.Выгрузить();
	Если БезЯчеек Тогда
		ТаблицаРаспределения.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	КонецЕсли; 
	
	ЭтоРазборка = (Объект.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РаспределениеЗапасов", ТаблицаРаспределения);
	Запрос.УстановитьПараметр("Запасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("ЭтоРазборка", ЭтоРазборка);
	Запрос.УстановитьПараметр("ПоложениеСклада", Объект.ПоложениеСклада);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", ПолучитьФункциональнуюОпцию("УчетПоЯчейкам"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Запасы.Этап КАК Этап,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Запасы.Спецификация КАК Спецификация,
	|	Запасы.Партия КАК Партия,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА &ЭтоРазборка
	|				ИЛИ &ПоложениеСклада <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		ИНАЧЕ Запасы.СтруктурнаяЕдиница
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА НЕ &УчетПоЯчейкам
	|				ИЛИ &ЭтоРазборка
	|				ИЛИ &ПоложениеСклада <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|		ИНАЧЕ Запасы.Ячейка
	|	КОНЕЦ КАК Ячейка,
	|	Запасы.Количество КАК Количество
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&Запасы КАК Запасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеЗапасов.Этап КАК Этап,
	|	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	РаспределениеЗапасов.Характеристика КАК Характеристика,
	|	РаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РаспределениеЗапасов.Спецификация КАК Спецификация,
	|	РаспределениеЗапасов.Партия КАК Партия,
	|	РаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА &ЭтоРазборка
	|				ИЛИ &ПоложениеСклада <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		ИНАЧЕ РаспределениеЗапасов.СтруктурнаяЕдиница
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА НЕ &УчетПоЯчейкам
	|				ИЛИ &ЭтоРазборка
	|				ИЛИ &ПоложениеСклада <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|		ИНАЧЕ РаспределениеЗапасов.Ячейка
	|	КОНЕЦ КАК Ячейка,
	|	РаспределениеЗапасов.Количество КАК Количество
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	&РаспределениеЗапасов КАК РаспределениеЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Этап КАК Этап,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Спецификация КАК Спецификация,
	|	ВложенныйЗапрос.Партия КАК Партия,
	|	ВложенныйЗапрос.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Ячейка КАК Ячейка,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоЗапасы) КАК КоличествоЗапасы,
	|	СУММА(ВложенныйЗапрос.КоличествоРаспределено) КАК КоличествоРаспределено
	|ИЗ
	|	(ВЫБРАТЬ
	|		Запасы.Этап КАК Этап,
	|		Запасы.Номенклатура КАК Номенклатура,
	|		Запасы.Характеристика КАК Характеристика,
	|		Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Запасы.Спецификация КАК Спецификация,
	|		Запасы.Партия КАК Партия,
	|		Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|		Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		Запасы.Ячейка КАК Ячейка,
	|		Запасы.Количество КАК Количество,
	|		Запасы.Количество КАК КоличествоЗапасы,
	|		0 КАК КоличествоРаспределено
	|	ИЗ
	|		Запасы КАК Запасы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаспределениеЗапасов.Этап,
	|		РаспределениеЗапасов.Номенклатура,
	|		РаспределениеЗапасов.Характеристика,
	|		РаспределениеЗапасов.ЕдиницаИзмерения,
	|		РаспределениеЗапасов.Спецификация,
	|		РаспределениеЗапасов.Партия,
	|		РаспределениеЗапасов.ЗаказПокупателя,
	|		РаспределениеЗапасов.СтруктурнаяЕдиница,
	|		РаспределениеЗапасов.Ячейка,
	|		-РаспределениеЗапасов.Количество,
	|		0,
	|		РаспределениеЗапасов.Количество
	|	ИЗ
	|		РаспределениеЗапасов КАК РаспределениеЗапасов) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Этап,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Спецификация,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.ЗаказПокупателя,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Ячейка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) <> 0";
	
	ИменаКолонок = "Этап, Номенклатура, Характеристика, ЕдиницаИзмерения, Спецификация, Партия, ЗаказПокупателя, СтруктурнаяЕдиница";
	Если НЕ БезЯчеек Тогда
		ИменаКолонок = ИменаКолонок + ", Ячейка";
	КонецЕсли; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураОтбора = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Выборка);
		СтрокиЗапасов = Объект.Запасы.НайтиСтроки(СтруктураОтбора);
		Если СтрокиЗапасов.Количество() = 0 Тогда
			СтрокиРаспределения = Объект.РаспределениеЗапасов.НайтиСтроки(СтруктураОтбора);
			Если СтрокиРаспределения.Количество() = 0 Тогда
				ТекстСообщения = НСтр(
					"ru = 'Обнаружено распределение, не отраженное в таблице материалов. Выполните перераспределение.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, , , Отказ);
			Иначе
				ТекстСообщения = НСтр("ru = 'Обнаружено распределение, не отраженное в таблице материалов'");
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РаспределениеЗапасов",
					СтрокиРаспределения[0].НомерСтроки, "Номенклатура");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле, , Отказ);
			КонецЕсли; 
		Иначе
			СтрокаЗапасов = СтрокиЗапасов[0];
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Обнаружено неверное распределение материалов в строке %1'"),
				СтрокаЗапасов.НомерСтроки);
			ТекстУточнения = "";
			Если Выборка.Количество <> 0 Тогда
				ТекстУточнения = ТекстУточнения + СтрШаблон(НСтр("ru = 'количество %1, распределено %2'"),
					Выборка.КоличествоЗапасы, Выборка.КоличествоРаспределено);
			КонецЕсли; 
			Если НЕ ПустаяСтрока(ТекстУточнения) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = '%1 (%2)'"), ТекстСообщения, ТекстУточнения);
			КонецЕсли;
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаЗапасов.НомерСтроки,
				"Номенклатура");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, КонтекстноеПоле, , Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКэшКонтроляРаспределения(Объект, КэшКонтроляРаспределения) Экспорт
	
	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	Если ТаблицаЗапасы.Колонки.Найти("Ячейка") = Неопределено Тогда
		ТаблицаЗапасы.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	КонецЕсли; 
	
	ТаблицаРаспределения = Объект.РаспределениеЗапасов.Выгрузить();
	Если ТаблицаРаспределения.Колонки.Найти("Ячейка") = Неопределено Тогда
		ТаблицаРаспределения.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.Ячейки"));
	КонецЕсли; 
	
	Если Объект.ВидОперации=Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка
		ИЛИ Объект.ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка
		ИЛИ Объект.ПоложениеСклада=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		ТаблицаЗапасы.ЗаполнитьЗначения(Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), "СтруктурнаяЕдиница");
		ТаблицаРаспределения.ЗаполнитьЗначения(Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), "СтруктурнаяЕдиница");
		ТаблицаЗапасы.ЗаполнитьЗначения(Справочники.Ячейки.ПустаяСсылка(), "Ячейка");
		ТаблицаРаспределения.ЗаполнитьЗначения(Справочники.Ячейки.ПустаяСсылка(), "Ячейка");
	КонецЕсли;
	
	Если Объект.ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		ТаблицаЗапасы.ЗаполнитьЗначения(Документы.ЗаказПокупателя.ПустаяСсылка(), "ЗаказПокупателя");
		ТаблицаРаспределения.ЗаполнитьЗначения(Документы.ЗаказПокупателя.ПустаяСсылка(), "ЗаказПокупателя");
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РаспределениеЗапасов", ТаблицаРаспределения);
	Запрос.УстановитьПараметр("Запасы", ТаблицаЗапасы);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Запасы.Этап КАК Этап,
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Запасы.Спецификация КАК Спецификация,
	|	Запасы.Партия КАК Партия,
	|	Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Запасы.Ячейка КАК Ячейка,
	|	Запасы.Количество КАК Количество
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&Запасы КАК Запасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеЗапасов.Этап КАК Этап,
	|	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	РаспределениеЗапасов.Характеристика КАК Характеристика,
	|	РаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РаспределениеЗапасов.Спецификация КАК Спецификация,
	|	РаспределениеЗапасов.Партия КАК Партия,
	|	РаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РаспределениеЗапасов.Ячейка КАК Ячейка,
	|	РаспределениеЗапасов.Количество КАК Количество
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	&РаспределениеЗапасов КАК РаспределениеЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Этап КАК Этап,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Спецификация КАК Спецификация,
	|	ВложенныйЗапрос.Партия КАК Партия,
	|	ВложенныйЗапрос.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Ячейка КАК Ячейка,
	|	СУММА(ВложенныйЗапрос.КоличествоЗапасы) КАК КоличествоЗапасы,
	|	СУММА(ВложенныйЗапрос.КоличествоРаспределение) КАК КоличествоРаспределение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Запасы.Этап КАК Этап,
	|		Запасы.Номенклатура КАК Номенклатура,
	|		Запасы.Характеристика КАК Характеристика,
	|		Запасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Запасы.Спецификация КАК Спецификация,
	|		Запасы.Партия КАК Партия,
	|		Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|		Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		Запасы.Ячейка КАК Ячейка,
	|		Запасы.Количество КАК КоличествоЗапасы,
	|		0 КАК КоличествоРаспределение
	|	ИЗ
	|		Запасы КАК Запасы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаспределениеЗапасов.Этап,
	|		РаспределениеЗапасов.Номенклатура,
	|		РаспределениеЗапасов.Характеристика,
	|		РаспределениеЗапасов.ЕдиницаИзмерения,
	|		РаспределениеЗапасов.Спецификация,
	|		РаспределениеЗапасов.Партия,
	|		РаспределениеЗапасов.ЗаказПокупателя,
	|		РаспределениеЗапасов.СтруктурнаяЕдиница,
	|		РаспределениеЗапасов.Ячейка,
	|		0,
	|		РаспределениеЗапасов.Количество
	|	ИЗ
	|		РаспределениеЗапасов КАК РаспределениеЗапасов) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Этап,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Спецификация,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.ЗаказПокупателя,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Ячейка";
	
	КэшКонтроляРаспределения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура РазузловатьОперации(Запрос, ДокументыРазузлования = Неопределено, ИмяТЧ = "", УровеньВложенности = 0) Экспорт
	
	Если Запрос.МенеджерВременныхТаблиц = Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Если ТипЗнч(ДокументыРазузлования) = Тип("Массив") Тогда
		МассивДокументов = ДокументыРазузлования;
	Иначе
		МассивДокументов = Новый Массив;
		Если ЗначениеЗаполнено(ДокументыРазузлования) Тогда
			МассивДокументов.Добавить(ДокументыРазузлования);
		КонецЕсли; 
	КонецЕсли; 
	
	// Выборка спецификаций из ТЧ документа
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаОпераций") = Неопределено Тогда
		Если МассивДокументов.Количество() = 0 ИЛИ ПустаяСтрока(ИмяТЧ) Тогда
			Возврат;
		КонецЕсли;
		ПервыйДокумент = МассивДокументов[0];
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
		Если ПервыйДокумент.Метаданные() = Метаданные.Документы.ЗаказПокупателя 
			И ИмяТЧ = "Запасы" 
			И Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТЗаказПокупателяЗапасы") <> Неопределено Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	0 КАК Уровень,
			|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК Порядок,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
			|	ТабличнаяЧасть.Спецификация КАК Спецификация,
			|	ТабличнаяЧасть.Спецификация КАК ВложеннаяСпецификация,
			|	ИСТИНА КАК ЭтоУзел,
			|	ТабличнаяЧасть.Номенклатура КАК Операция,
			|	1 КАК НормаВремени,
			|	1 КАК Количество
			|ПОМЕСТИТЬ ТаблицаОпераций
			|ИЗ
			|	ВТЗаказПокупателяЗапасы КАК ТабличнаяЧасть
			|ГДЕ
			|	ТабличнаяЧасть.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабличнаяЧасть.Номенклатура,
			|	ТабличнаяЧасть.Спецификация";
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ
			|	0 КАК Уровень,
			|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК Порядок,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
			|	ТабличнаяЧасть.Спецификация КАК Спецификация,
			|	ТабличнаяЧасть.Спецификация КАК ВложеннаяСпецификация,
			|	ИСТИНА КАК ЭтоУзел,
			|	ТабличнаяЧасть.Номенклатура КАК Операция,
			|	1 КАК НормаВремени,
			|	1 КАК Количество
			|ПОМЕСТИТЬ ТаблицаОпераций
			|ИЗ
			|	Документ.ЗаказПокупателя.Запасы КАК ТабличнаяЧасть
			|ГДЕ
			|	ТабличнаяЧасть.Ссылка В(&МассивДокументов)
			|	И ТабличнаяЧасть.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабличнаяЧасть.Спецификация,
			|	ТабличнаяЧасть.Номенклатура";
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаказПокупателя.Запасы", ПервыйДокумент.Метаданные().Имя + "." + ИмяТЧ);
		КонецЕсли; 
		Запрос.Выполнить();
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("УровеньВложенности", УровеньВложенности);
	Запрос.УстановитьПараметр("ИспользоватьЭтапыПроизводства", ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОпераций.Уровень КАК Уровень,
	|	ТаблицаОпераций.Порядок КАК Порядок,
	|	ТаблицаОпераций.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОпераций.Этап КАК Этап,
	|	ТаблицаОпераций.Спецификация КАК Спецификация,
	|	ТаблицаОпераций.ВложеннаяСпецификация КАК ВложеннаяСпецификация,
	|	ТаблицаОпераций.ЭтоУзел КАК ЭтоУзел,
	|	ТаблицаОпераций.Операция КАК Операция,
	|	ТаблицаОпераций.НормаВремени КАК НормаВремени,
	|	ТаблицаОпераций.Количество КАК Количество
	|ПОМЕСТИТЬ ВремТаблицаОпераций
	|ИЗ
	|	ТаблицаОпераций КАК ТаблицаОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОпераций.Уровень КАК Уровень,
	|	ТаблицаОпераций.Порядок КАК Порядок,
	|	ТаблицаОпераций.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОпераций.Этап КАК Этап,
	|	ТаблицаОпераций.Спецификация КАК Спецификация,
	|	ТаблицаОпераций.ВложеннаяСпецификация КАК ВложеннаяСпецификация,
	|	ТаблицаОпераций.ЭтоУзел КАК ЭтоУзел,
	|	ТаблицаОпераций.Операция КАК Операция,
	|	СУММА(ТаблицаОпераций.НормаВремени) КАК НормаВремени,
	|	СУММА(ТаблицаОпераций.Количество) КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель
	|ПОМЕСТИТЬ ТаблицаОпераций
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОпераций.Уровень КАК Уровень,
	|		ТаблицаОпераций.Порядок КАК Порядок,
	|		0 КАК НомерСтроки,
	|		ТаблицаОпераций.Этап КАК Этап,
	|		ТаблицаОпераций.Спецификация КАК Спецификация,
	|		НЕОПРЕДЕЛЕНО КАК ВложеннаяСпецификация,
	|		ЛОЖЬ КАК ЭтоУзел,
	|		ТаблицаОпераций.Операция КАК Операция,
	|		ТаблицаОпераций.НормаВремени КАК НормаВремени,
	|		ТаблицаОпераций.Количество КАК Количество
	|	ИЗ
	|		ВремТаблицаОпераций КАК ТаблицаОпераций
	|	ГДЕ
	|		НЕ ТаблицаОпераций.ЭтоУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаОпераций.Уровень,
	|		ТаблицаОпераций.Порядок,
	|		ВЫБОР
	|			КОГДА ТаблицаОпераций.НомерСтроки = 0
	|				ТОГДА СпецификацииОперации.НомерСтроки
	|			ИНАЧЕ ТаблицаОпераций.НомерСтроки
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьЭтапыПроизводства
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|			КОГДА ТаблицаОпераций.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|				ТОГДА СпецификацииОперации.Этап
	|			ИНАЧЕ ТаблицаОпераций.Этап
	|		КОНЕЦ,
	|		ТаблицаОпераций.Спецификация,
	|		НЕОПРЕДЕЛЕНО,
	|		ЛОЖЬ,
	|		ЕСТЬNULL(СпецификацииОперации.Операция, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|		ВЫБОР
	|			КОГДА СпецификацииОперации.НормаВремени ЕСТЬ NULL
	|				ТОГДА 1
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СпецификацииОперации.КоличествоПродукции = 0
	|						ТОГДА 0
	|					ИНАЧЕ СпецификацииОперации.НормаВремени
	|				КОНЕЦ
	|		КОНЕЦ,
	|		ТаблицаОпераций.Количество * ВЫБОР
	|			КОГДА СпецификацииОперации.Количество ЕСТЬ NULL
	|					ИЛИ СпецификацииОперации.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СпецификацииОперации.КоличествоПродукции = 0
	|						ТОГДА 0
	|					ИНАЧЕ СпецификацииОперации.Количество / СпецификацииОперации.КоличествоПродукции
	|				КОНЕЦ
	|		КОНЕЦ
	|	ИЗ
	|		ВремТаблицаОпераций КАК ТаблицаОпераций
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
	|			ПО ТаблицаОпераций.ВложеннаяСпецификация = СпецификацииОперации.Ссылка
	|	ГДЕ
	|		ТаблицаОпераций.ЭтоУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаОпераций.Уровень + 1,
	|		СпецификацииСостав.НомерСтроки,
	|		0,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьЭтапыПроизводства
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|			КОГДА ТаблицаОпераций.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|				ТОГДА СпецификацииСостав.Этап
	|			ИНАЧЕ ТаблицаОпераций.Этап
	|		КОНЕЦ,
	|		ТаблицаОпераций.Спецификация,
	|		СпецификацииСостав.Спецификация,
	|		ИСТИНА,
	|		СпецификацииСостав.Номенклатура,
	|		1,
	|		ТаблицаОпераций.Количество * ВЫБОР
	|			КОГДА СпецификацииСостав.КоличествоПродукции = 0
	|				ТОГДА 0
	|			ИНАЧЕ СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции
	|		КОНЕЦ
	|	ИЗ
	|		ВремТаблицаОпераций КАК ТаблицаОпераций
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|			ПО ТаблицаОпераций.ВложеннаяСпецификация = СпецификацииСостав.Ссылка
	|	ГДЕ
	|		ТаблицаОпераций.ЭтоУзел
	|		И СпецификацииСостав.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|		И СпецификацииСостав.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|		И &УровеньВложенности < 50) КАК ТаблицаОпераций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОпераций.Уровень,
	|	ТаблицаОпераций.Порядок,
	|	ТаблицаОпераций.НомерСтроки,
	|	ТаблицаОпераций.Этап,
	|	ТаблицаОпераций.Спецификация,
	|	ТаблицаОпераций.ВложеннаяСпецификация,
	|	ТаблицаОпераций.ЭтоУзел,
	|	ТаблицаОпераций.Операция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТаблицаОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаОпераций.Спецификация КАК Спецификация
	|ИЗ
	|	ТаблицаОпераций КАК ТаблицаОпераций
	|ГДЕ
	|	ТаблицаОпераций.ЭтоУзел";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		РазузловатьОперации(Запрос, МассивДокументов, ИмяТЧ, УровеньВложенности + 1);
	КонецЕсли;
	
КонецПроцедуры

Функция СоставСпецификаций(Продукция, ДобавлятьЗапасы = Ложь, ДобавлятьОперации = Ложь, ТолькоРазвернутьУзлы = Ложь, ВБазовыхЕдиницах = Истина) Экспорт
	
	Если ТолькоРазвернутьУзлы И Продукция.Колонки.Найти("ЭтоУзел") = Неопределено Тогда
		Возврат Продукция;
	КонецЕсли;
	
	Если Продукция.Колонки.Найти("ПроверкаЗацикливания") = Неопределено Тогда
		Продукция.Колонки.Добавить("ПроверкаЗацикливания", Новый ОписаниеТипов("Массив"));
	КонецЕсли;
	Если Продукция.Колонки.Найти("НомерСтрокиСостава") = Неопределено Тогда
		Продукция.Колонки.Добавить("НомерСтрокиСостава", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0, ДопустимыйЗнак.Неотрицательный)));
	КонецЕсли;
	
	ИспользоватьЭтапы = ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИспользоватьЭтапы", ИспользоватьЭтапы);
	Запрос.УстановитьПараметр("ВБазовыхЕдиницах", ВБазовыхЕдиницах);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ТолькоРазвернутьУзлы Тогда
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СпецификацияСостава) ИЛИ НЕ СтрокаТабличнойЧасти.ЭтоУзел Тогда
				Продолжить;
			КонецЕсли; 
			Если СтрокаТабличнойЧасти.ПроверкаЗацикливания.Найти(СтрокаТабличнойЧасти.СпецификацияСостава) <> Неопределено Тогда
				Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ХарактеристикаСостава) Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Обнаружена зацикленность узлов спецификаций %1 (%2, %3)'"), СтрокаТабличнойЧасти.СпецификацияСостава, СтрокаТабличнойЧасти.НоменклатураСостава, СтрокаТабличнойЧасти.ХарактеристикаСостава);
				Иначе
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Обнаружена зацикленность узлов спецификаций %1 (%2)'"), СтрокаТабличнойЧасти.СпецификацияСостава, СтрокаТабличнойЧасти.НоменклатураСостава);
				КонецЕсли; 
				ВызватьИсключение ТекстСообщения;
			КонецЕсли; 
			СтрокаТабличнойЧасти.ПроверкаЗацикливания.Добавить(СтрокаТабличнойЧасти.СпецификацияСостава);
		КонецЦикла; 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция.НомерСтроки КАК НомерСтроки,
		|	Продукция.НомерСтрокиСостава КАК НомерСтрокиСостава,
		|	ВЫБОР
		|		КОГДА &ИспользоватьЭтапы
		|			ТОГДА Продукция.Этап
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|	КОНЕЦ КАК Этап,
		|	Продукция.НоменклатураСостава КАК Номенклатура,
		|	Продукция.ХарактеристикаСостава КАК Характеристика,
		|	Продукция.СпецификацияСостава КАК Спецификация,
		|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
		|	Продукция.КоличествоСостава * ВЫБОР
		|		КОГДА Продукция.ЕдиницаИзмеренияСостава ССЫЛКА Справочник.ЕдиницыИзмерения
		|			ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмеренияСостава КАК Справочник.ЕдиницыИзмерения).Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Количество,
		|	Продукция.ДоляСтоимости КАК ДоляСтоимости,
		|	Продукция.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ Продукция
		|ИЗ
		|	&Продукция КАК Продукция
		|ГДЕ
		|	Продукция.СпецификацияСостава <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
		|	И Продукция.ЭтоУзел";
	Иначе
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТабличнойЧасти.ПроверкаЗацикливания.Добавить(СтрокаТабличнойЧасти.Спецификация);
		КонецЦикла; 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Продукция.НомерСтроки КАК НомерСтроки,
		|	Продукция.НомерСтрокиСостава КАК НомерСтрокиСостава,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	Продукция.Номенклатура КАК Номенклатура,
		|	Продукция.Характеристика КАК Характеристика,
		|	Продукция.Спецификация КАК Спецификация,
		|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
		|	Продукция.Количество КАК Количество,
		|	Продукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	0 КАК ДоляСтоимости,
		|	Продукция.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ ВТ_Продукция
		|ИЗ
		|	&Продукция КАК Продукция
		|ГДЕ
		|	Продукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Продукция.НомерСтроки КАК НомерСтроки,
		|	Продукция.НомерСтрокиСостава КАК НомерСтрокиСостава,
		|	Продукция.Этап КАК Этап,
		|	Продукция.Номенклатура КАК Номенклатура,
		|	Продукция.Характеристика КАК Характеристика,
		|	Продукция.Спецификация КАК Спецификация,
		|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
		|	Продукция.Количество * ВЫБОР
		|		КОГДА Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|			ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Количество,
		|	Продукция.ДоляСтоимости КАК ДоляСтоимости,
		|	Продукция.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ Продукция
		|ИЗ
		|	ВТ_Продукция КАК Продукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Продукция";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Продукция", Продукция);
	Запрос.УстановитьПараметр("ДобавлятьЗапасы", ДобавлятьЗапасы);
	Запрос.УстановитьПараметр("ДобавлятьОперации", ДобавлятьОперации);
	Запрос.УстановитьПараметр("ТолькоРазвернутьУзлы", ТолькоРазвернутьУзлы);
	Запрос.УстановитьПараметр("ИспользоватьЭтапы", ИспользоватьЭтапы);
	Запрос.Выполнить();	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Продукция.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЭтапы
	|				И Продукция.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|			ТОГДА СпецификацииСостав.Этап
	|		КОГДА &ИспользоватьЭтапы
	|			ТОГДА Продукция.Этап
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|	КОНЕЦ КАК Этап,
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Спецификация КАК Спецификация,
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Продукция.Количество КАК Количество,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	ВЫБОР
	|		КОГДА Продукция.НомерСтрокиСостава = 0
	|			ТОГДА СпецификацииСостав.НомерСтроки
	|		ИНАЧЕ Продукция.НомерСтрокиСостава
	|	КОНЕЦ КАК НомерСтрокиСостава,
	|	СпецификацииСостав.Номенклатура КАК НоменклатураСостава,
	|	СпецификацииСостав.Характеристика КАК ХарактеристикаСостава,
	|	СпецификацииСостав.Спецификация КАК СпецификацияСостава,
	|	СпецификацииСостав.Количество / ВЫБОР
	|		КОГДА СпецификацииСостав.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ СпецификацииСостав.КоличествоПродукции
	|	КОНЕЦ * ВЫБОР
	|		КОГДА &ВБазовыхЕдиницах
	|				И СпецификацииСостав.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА СпецификацииСостав.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ * Продукция.Количество КАК КоличествоСостава,
	|	ВЫБОР
	|		КОГДА Продукция.ДоляСтоимости = 0
	|			ТОГДА СпецификацииСостав.ДоляСтоимости
	|		КОГДА ЕСТЬNULL(ИтогДоляСтоимости.ДоляСтоимости, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ Продукция.ДоляСтоимости / ЕСТЬNULL(ИтогДоляСтоимости.ДоляСтоимости, 0) * СпецификацииСостав.ДоляСтоимости
	|	КОНЕЦ КАК ДоляСтоимости,
	|	ВЫБОР
	|		КОГДА &ВБазовыхЕдиницах
	|			ТОГДА СпецификацииСостав.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ СпецификацииСостав.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияСостава,
	|	ВЫБОР
	|		КОГДА СпецификацииСостав.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|				И СпецификацииСостав.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУзел
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|		ПО Продукция.Спецификация = СпецификацииСостав.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Продукция.Спецификация КАК Спецификация,
	|			СУММА(СпецификацииСостав.ДоляСтоимости) КАК ДоляСтоимости
	|		ИЗ
	|			Продукция КАК Продукция
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|				ПО Продукция.Спецификация = СпецификацииСостав.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Продукция.Спецификация) КАК ИтогДоляСтоимости
	|		ПО Продукция.Спецификация = ИтогДоляСтоимости.Спецификация
	|ГДЕ
	|	(&ДобавлятьЗапасы
	|				И СпецификацииСостав.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|				И СпецификацииСостав.ТипСтрокиСостава <> ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Расход)
	|				И НЕ(СпецификацииСостав.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|						И СпецификацииСостав.Спецификация = ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка))
	|			ИЛИ &ДобавлятьОперации
	|				И СпецификацииСостав.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|				И СпецификацииСостав.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Продукция.НомерСтроки,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЭтапы
	|				И Продукция.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|			ТОГДА СпецификацииОперации.Этап
	|		КОГДА &ИспользоватьЭтапы
	|			ТОГДА Продукция.Этап
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|	КОНЕЦ,
	|	Продукция.Номенклатура,
	|	Продукция.Характеристика,
	|	Продукция.Спецификация,
	|	Продукция.ЗаказПокупателя,
	|	Продукция.Количество,
	|	Продукция.КлючСвязи,
	|	ВЫБОР
	|		КОГДА Продукция.НомерСтрокиСостава = 0
	|			ТОГДА СпецификацииОперации.НомерСтроки
	|		ИНАЧЕ Продукция.НомерСтрокиСостава
	|	КОНЕЦ,
	|	СпецификацииОперации.Операция,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка),
	|	СпецификацииОперации.НормаВремени / ВЫБОР
	|		КОГДА СпецификацииОперации.КоличествоПродукции = 0
	|			ТОГДА 1
	|		ИНАЧЕ СпецификацииОперации.КоличествоПродукции
	|	КОНЕЦ * Продукция.Количество,
	|	0,
	|	СпецификацииОперации.Операция.ЕдиницаИзмерения,
	|	ЛОЖЬ
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
	|		ПО Продукция.Спецификация = СпецификацииОперации.Ссылка
	|ГДЕ
	|	&ДобавлятьОперации";
	
	Состав = Запрос.Выполнить().Выгрузить();
	
	Если ТолькоРазвернутьУзлы Тогда
		Для каждого СтрокаПродукции Из Продукция Цикл
			Если СтрокаПродукции.ЭтоУзел Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Состав.Добавить(), СтрокаПродукции);
		КонецЦикла; 
	КонецЕсли;
	
	Если Состав.Найти(Истина, "ЭтоУзел") <> Неопределено Тогда
		Состав = СоставСпецификаций(Состав, ДобавлятьЗапасы, ДобавлятьОперации, Истина);
	КонецЕсли;
	
	Если НЕ ТолькоРазвернутьУзлы Тогда
		Состав.Сортировать("НомерСтроки, НомерСтрокиСостава");
	КонецЕсли; 
	
	Возврат Состав;
	
КонецФункции

Процедура ДобавитьУдаленнуюПродукцию(Документ, ТаблицаПродукции, ИмяТЧ) Экспорт
	
	ЕстьЗаказПокупателя = (ТаблицаПродукции.Колонки.Найти("ЗаказПокупателя") <> Неопределено);
	ЕстьЗаказНаПроизводство = (ТаблицаПродукции.Колонки.Найти("ЗаказНаПроизводство") <> Неопределено);
	ОчищаемыеПоля = Новый Структура;
	ОчищаемыеПоля.Вставить("Количество", 0);
	ОчищаемыеПоля.Вставить("КоличествоПлан", 0);
	ОчищаемыеПоля.Вставить("КоличествоФакт", 0);
	ОчищаемыеПоля.Вставить("ИмяТЧ", ИмяТЧ);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПродукции.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукции.Характеристика КАК Характеристика,
	|	ТаблицаПродукции.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаПродукции
	|ИЗ
	|	&ТаблицаПродукции КАК ТаблицаПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ * ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ТЧДокумента
	|ГДЕ
	|	НЕ (ТЧДокумента.Номенклатура, ТЧДокумента.Характеристика, ТЧДокумента.Партия) В
	|			(ВЫБРАТЬ
	|				ПоляВыборки.Номенклатура,
	|				ПоляВыборки.Характеристика,
	|				ПоляВыборки.Партия
	|			ИЗ
	|				ТаблицаПродукции КАК ПоляВыборки)
	|	И ТЧДокумента.Ссылка = &Документ";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ЗаказПокупателя.Запасы", "Документ." + Документ.Метаданные().Имя + "." + ИмяТЧ);
	Если ЕстьЗаказПокупателя Тогда
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"ТаблицаПродукции.Партия КАК Партия", 
		"ТаблицаПродукции.Партия КАК Партия,
		|	ТаблицаПродукции.ЗаказПокупателя КАК ЗаказПокупателя");
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		", ТЧДокумента.Партия", 
		", ТЧДокумента.Партия, ТЧДокумента.ЗаказПокупателя");
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"ПоляВыборки.Партия", 
		"ПоляВыборки.Партия,
		|				ПоляВыборки.ЗаказПокупателя");
	КонецЕсли; 	
	Если ЕстьЗаказНаПроизводство Тогда
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"ТаблицаПродукции.Партия КАК Партия", 
		"ТаблицаПродукции.Партия КАК Партия,
		|	ТаблицаПродукции.ЗаказНаПроизводство КАК ЗаказНаПроизводство");
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		", ТЧДокумента.Партия", 
		", ТЧДокумента.Партия, ТЧДокумента.ЗаказНаПроизводство");
		ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"ПоляВыборки.Партия", 
		"ПоляВыборки.Партия,
		|				ПоляВыборки.ЗаказНаПроизводство");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("ТаблицаПродукции", ТаблицаПродукции);
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаПродукции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОчищаемыеПоля);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверкаПоэтапногоПроизводства(Документ, ТаблицаПродукции, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Документ", Документ.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаПродукции", ТаблицаПродукции);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродукции.ИмяТЧ КАК ИмяТЧ,
	|	ТаблицаПродукции.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПродукции.Номенклатура КАК Номенклатура,
	|	ТаблицаПродукции.Характеристика КАК Характеристика,
	|	ТаблицаПродукции.Партия КАК Партия,
	|	ТаблицаПродукции.Спецификация КАК Спецификация,
	|	ТаблицаПродукции.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаПродукции.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаПродукции.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ТаблицаПродукции.ЗаказНаПроизводство
	|		ИНАЧЕ ТаблицаПродукции.ЗаказПокупателя
	|	КОНЕЦ КАК Заказ,
	|	ТаблицаПродукции.ПодразделениеЗавершающегоЭтапа КАК ПодразделениеЗавершающегоЭтапа
	|ПОМЕСТИТЬ ТаблицаПродукции
	|ИЗ
	|	&ТаблицаПродукции КАК ТаблицаПродукции
	|ГДЕ
	|	(ТаблицаПродукции.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ТаблицаПродукции.ЗаказНаПроизводство <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыПроизводства.Заказ КАК Заказ,
	|	ЭтапыПроизводства.Номенклатура КАК Номенклатура,
	|	ЭтапыПроизводства.Характеристика КАК Характеристика,
	|	ЭтапыПроизводства.Спецификация КАК Спецификация,
	|	ЭтапыПроизводства.Партия КАК Партия,
	|	ЭтапыПроизводства.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ЭтапыПроизводства.КоличествоПлан = 0
	|			ТОГДА ЭтапыПроизводства.КоличествоФакт
	|		ИНАЧЕ ЭтапыПроизводства.КоличествоПлан
	|	КОНЕЦ КАК Количество,
	|	ЭтапыПроизводства.КоличествоФакт КАК КоличествоФакт,
	|	ЭтапыПроизводства.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ СуществующиеДвижения
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК ЭтапыПроизводства
	|ГДЕ
	|	ЭтапыПроизводства.Регистратор <> &Документ
	|	И (ЭтапыПроизводства.Заказ, ЭтапыПроизводства.Номенклатура, ЭтапыПроизводства.Характеристика, ЭтапыПроизводства.Спецификация, ЭтапыПроизводства.Партия) В
	|			(ВЫБРАТЬ
	|				ТаблицаПродукции.Заказ,
	|				ТаблицаПродукции.Номенклатура,
	|				ЭтапыПроизводства.Характеристика,
	|				ТаблицаПродукции.Спецификация,
	|				ТаблицаПродукции.Партия
	|			ИЗ
	|				ТаблицаПродукции)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыПроизводства.Заказ,
	|	ЭтапыПроизводства.Номенклатура,
	|	ЭтапыПроизводства.СтруктурнаяЕдиница,
	|	ЭтапыПроизводства.Характеристика,
	|	ЭтапыПроизводства.Спецификация,
	|	ЭтапыПроизводства.Партия,
	|	ЭтапыПроизводства.КоличествоФакт,
	|	ЭтапыПроизводства.КоличествоПлан";
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("ВыполнениеЭтаповРазнымиПодразделениями")
		И ТипЗнч(Документ.Ссылка) <> Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродукции.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПродукции.ИмяТЧ КАК ИмяТЧ,
		|	СуществующиеДвижения.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
		|ИЗ
		|	ТаблицаПродукции КАК ТаблицаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуществующиеДвижения КАК СуществующиеДвижения
		|		ПО ТаблицаПродукции.Заказ = СуществующиеДвижения.Заказ
		|			И ТаблицаПродукции.Номенклатура = СуществующиеДвижения.Номенклатура
		|			И ТаблицаПродукции.Характеристика = СуществующиеДвижения.Характеристика
		|			И ТаблицаПродукции.Партия = СуществующиеДвижения.Партия
		|			И ТаблицаПродукции.Спецификация = СуществующиеДвижения.Спецификация
		|			И ТаблицаПродукции.ПодразделениеЗавершающегоЭтапа <> СуществующиеДвижения.СтруктурнаяЕдиница
		|			И (СуществующиеДвижения.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		|ГДЕ
		|	НЕ СуществующиеДвижения.СтруктурнаяЕдиница ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		ПредыдущийНомер = 0;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ПредыдущийНомер = Выборка.НомерСтроки Тогда
				Продолжить;
			КонецЕсли; 
			ПредыдущийНомер = Выборка.НомерСтроки;
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'В существующих документах по продукции в строке %1 используется завершающее подразделение ""%2"", отличающееся от выбранного'"),
				Выборка.НомерСтроки, Выборка.СтруктурнаяЕдиница);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(Выборка.ИмяТЧ, Выборка.НомерСтроки,
				"ПодразделениеЗавершающегоЭтапа");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Документ, КонтекстноеПоле, , Отказ);
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Документ.Ссылка) <> Тип("ДокументСсылка.СдельныйНаряд") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродукции.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПродукции.ИмяТЧ КАК ИмяТЧ,
		|	ТаблицаПродукции.Количество * ВЫБОР
		|		КОГДА ТаблицаПродукции.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|			ТОГДА ТаблицаПродукции.ЕдиницаИзмерения.Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Количество,
		|	СуществующиеДвижения.Количество КАК КоличествоТекущее
		|ИЗ
		|	ТаблицаПродукции КАК ТаблицаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуществующиеДвижения КАК СуществующиеДвижения
		|		ПО ТаблицаПродукции.Заказ = СуществующиеДвижения.Заказ
		|			И ТаблицаПродукции.Номенклатура = СуществующиеДвижения.Номенклатура
		|			И ТаблицаПродукции.Характеристика = СуществующиеДвижения.Характеристика
		|			И ТаблицаПродукции.Партия = СуществующиеДвижения.Партия
		|			И ТаблицаПродукции.Спецификация = СуществующиеДвижения.Спецификация
		|ГДЕ
		|	НЕ СуществующиеДвижения.Количество ЕСТЬ NULL
		|	И СуществующиеДвижения.Количество <> 0
		|	И ТаблицаПродукции.Количество <> 0
		|	И СуществующиеДвижения.Количество <> ТаблицаПродукции.Количество * ВЫБОР
		|			КОГДА ТаблицаПродукции.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|				ТОГДА ТаблицаПродукции.ЕдиницаИзмерения.Коэффициент
		|			ИНАЧЕ 1
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	СуществующиеДвижения.Количество,
		|	ТаблицаПродукции.Количество * ВЫБОР
		|		КОГДА ТаблицаПродукции.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|			ТОГДА ТаблицаПродукции.ЕдиницаИзмерения.Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ,
		|	ТаблицаПродукции.НомерСтроки,
		|	ТаблицаПродукции.ИмяТЧ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		Выборка = Запрос.Выполнить().Выбрать();
		ПредыдущийНомер = 0;
		Пока Выборка.Следующий() Цикл
			Если ПредыдущийНомер = Выборка.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			ПредыдущийНомер = Выборка.НомерСтроки;
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'При поэтапном производстве запланированное и фактически изготовленное количество продукции не может отличаться.
				|В строке %1 указано количество %2, в других документах %3'"),
				Выборка.НомерСтроки, Выборка.Количество, Выборка.КоличествоТекущее);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(Выборка.ИмяТЧ, Выборка.НомерСтроки,
				"Количество");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Документ, КонтекстноеПоле, , Отказ);
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя")
		ИЛИ ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродукции.Номенклатура КАК Номенклатура,
		|	ТаблицаПродукции.Характеристика КАК Характеристика,
		|	ТаблицаПродукции.Партия КАК Партия,
		|	ТаблицаПродукции.Спецификация КАК Спецификация,
		|	ТаблицаПродукции.ИмяТЧ КАК ИмяТЧ,
		|	ТаблицаПродукции.Количество КАК Количество,
		|	СуществующиеДвижения.Количество КАК КоличествоТекущее,
		|	СуществующиеДвижения.КоличествоПлан КАК КоличествоПлан,
		|	СуществующиеДвижения.КоличествоФакт КАК КоличествоФакт
		|ИЗ
		|	ТаблицаПродукции КАК ТаблицаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуществующиеДвижения КАК СуществующиеДвижения
		|		ПО ТаблицаПродукции.Заказ = СуществующиеДвижения.Заказ
		|			И ТаблицаПродукции.Номенклатура = СуществующиеДвижения.Номенклатура
		|			И ТаблицаПродукции.Характеристика = СуществующиеДвижения.Характеристика
		|			И ТаблицаПродукции.Партия = СуществующиеДвижения.Партия
		|			И ТаблицаПродукции.Спецификация = СуществующиеДвижения.Спецификация
		|ГДЕ
		|	НЕ СуществующиеДвижения.Количество ЕСТЬ NULL
		|	И СуществующиеДвижения.Количество <> 0
		|	И ТаблицаПродукции.Количество = 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СуществующиеДвижения.Количество,
		|	СуществующиеДвижения.КоличествоПлан,
		|	СуществующиеДвижения.КоличествоФакт,
		|	ТаблицаПродукции.Количество,
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Партия,
		|	ТаблицаПродукции.Спецификация,
		|	ТаблицаПродукции.ИмяТЧ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Спецификация";
		Выборка = Запрос.Выполнить().Выбрать();
		ПредыдущаяСпецификация = Неопределено;
		Пока Выборка.Следующий() Цикл
			Если ПредыдущаяСпецификация = Выборка.Спецификация Тогда
				Продолжить;
			КонецЕсли;
			Если Выборка.КоличествоФакт <> 0 Тогда
				ТекстОшибки = НСтр("ru = 'Изделие участвует в производстве: %1. Изменение запрещено'");
			ИначеЕсли Выборка.КоличествоПлан <> 0 И ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
				ТекстОшибки = НСтр("ru = 'Изделие запланировано к производству: %1. Изменение запрещено'");
			Иначе
				Продолжить;
			КонецЕсли;
			ПредыдущаяСпецификация = Выборка.Спецификация;
			СтруктураПолей = Новый Структура;
			СтруктураПолей.Вставить("ПредставлениеНоменклатуры", Выборка.Номенклатура);
			СтруктураПолей.Вставить("ПредставлениеХарактеристики", Выборка.Характеристика);
			СтруктураПолей.Вставить("ПредставлениеПартии", Выборка.Партия);
			ЗаполнитьЗначенияСвойств(СтруктураПолей, Выборка);
			ПредставлениеНоменклатуры = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(СтруктураПолей);
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ТекстОшибки, ПредставлениеНоменклатуры), Документ,
				Выборка.ИмяТЧ, , Отказ);
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДвижениеЗапасыЗеркально(НовоеДвижение, Движение) Экспорт
	
	ЗаполнитьЗначенияСвойств(НовоеДвижение, Движение);
		
	НовоеДвижение.ВидДвижения = ?(Движение.ВидДвижения=ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
		
	НовоеДвижение.СтруктурнаяЕдиница = Движение.КоррСтруктурнаяЕдиница;
	НовоеДвижение.СчетУчета = Движение.КоррСчетУчета;
	НовоеДвижение.Номенклатура = Движение.КоррНоменклатура;
	НовоеДвижение.Характеристика = Движение.КоррХарактеристика;
	НовоеДвижение.Партия = Движение.КоррПартия;
	НовоеДвижение.ЗаказПокупателя = Движение.КоррЗаказПокупателя;
	
	НовоеДвижение.КоррСтруктурнаяЕдиница = Движение.СтруктурнаяЕдиница;
	НовоеДвижение.КоррСчетУчета = Движение.СчетУчета;
	НовоеДвижение.КоррНоменклатура = Движение.Номенклатура;
	НовоеДвижение.КоррХарактеристика = Движение.Характеристика;
	НовоеДвижение.КоррПартия = Движение.Партия;
	НовоеДвижение.КоррЗаказПокупателя = Движение.ЗаказПокупателя;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовоеДвижение, "Спецификация")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовоеДвижение, "КоррСпецификация") Тогда
		НовоеДвижение.Спецификация = Движение.КоррСпецификация;
		НовоеДвижение.КоррСпецификация = Движение.Спецификация;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовоеДвижение, "ЗаказНаПроизводство")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовоеДвижение, "КоррЗаказНаПроизводство") Тогда
		НовоеДвижение.ЗаказНаПроизводство = Движение.КоррЗаказНаПроизводство;
		НовоеДвижение.КоррЗаказНаПроизводство = Движение.ЗаказНаПроизводство;
	КонецЕсли; 
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовоеДвижение, "СчетДт")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НовоеДвижение, "СчетКт") Тогда
		Если НовоеДвижение.ВидДвижения=ВидДвиженияНакопления.Приход Тогда
			НовоеДвижение.СчетДт = Движение.КоррСчетУчета;
			НовоеДвижение.СчетКт = Движение.СчетУчета;
		Иначе
			НовоеДвижение.СчетДт = Движение.СчетУчета;
			НовоеДвижение.СчетКт = Движение.КоррСчетУчета;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура СформироватьДвиженияЗаказыНаПроизводствоСУчетомОстатков(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	// Скорректируем движения по регистру с учетом остатков
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаЗаказыНаПроизводство.Период КАК Период,
	|	ВременнаяТаблицаЗаказыНаПроизводство.ВидДвижения КАК ВидДвижения,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Организация КАК Организация,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Склад КАК Склад,
	|	ВременнаяТаблицаЗаказыНаПроизводство.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Характеристика КАК Характеристика,
	|	СУММА(ВременнаяТаблицаЗаказыНаПроизводство.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗаказыНаПроизводство КАК ВременнаяТаблицаЗаказыНаПроизводство
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаЗаказыНаПроизводство.Номенклатура,
	|	ВременнаяТаблицаЗаказыНаПроизводство.ВидДвижения,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Характеристика,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Организация,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Склад,
	|	ВременнаяТаблицаЗаказыНаПроизводство.ЗаказНаПроизводство,
	|	ВременнаяТаблицаЗаказыНаПроизводство.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	СУММА(ВложенныйЗапрос.Остаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыНаПроизводствоОстатки.Организация КАК Организация,
	|		ЗаказыНаПроизводствоОстатки.Склад КАК Склад,
	|		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ЗаказыНаПроизводствоОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыНаПроизводствоОстатки.Характеристика КАК Характеристика,
	|		ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК Остаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|	ГДЕ
	|		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство В
	|				(ВЫБРАТЬ
	|					ВременнаяТаблицаЗаказыНаПроизводство.ЗаказНаПроизводство
	|				ИЗ
	|					ВременнаяТаблицаЗаказыНаПроизводство КАК ВременнаяТаблицаЗаказыНаПроизводство
	|				СГРУППИРОВАТЬ ПО
	|					ВременнаяТаблицаЗаказыНаПроизводство.ЗаказНаПроизводство)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыНаПроизводство.Организация,
	|		ЗаказыНаПроизводство.Склад,
	|		ЗаказыНаПроизводство.ЗаказНаПроизводство,
	|		ЗаказыНаПроизводство.Номенклатура,
	|		ЗаказыНаПроизводство.Характеристика,
	|		ВЫБОР
	|			КОГДА ЗаказыНаПроизводство.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЗаказыНаПроизводство.Количество
	|			ИНАЧЕ -ЗаказыНаПроизводство.Количество
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство КАК ЗаказыНаПроизводство
	|	ГДЕ
	|		ЗаказыНаПроизводство.Регистратор = &Ссылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЗаказНаПроизводство,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Склад";
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаЗаказыНаПроизводство = Результат[0].Выгрузить();
	ТаблицаОстатков = Результат[1].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("Организация, Склад, ЗаказНаПроизводство, Номенклатура, Характеристика");
	ТаблицаОстатков.Индексы.Добавить("Организация, ЗаказНаПроизводство, Номенклатура, Характеристика");
	ТаблицаДвижений = ТаблицаЗаказыНаПроизводство.СкопироватьКолонки();
	
	СтруктураОтбора = Новый Структура;
	Для каждого СтрокаТаблицы Из ТаблицаЗаказыНаПроизводство Цикл
		СтруктураОтбора.Очистить();
		СтруктураОтбора.Вставить("Организация", СтрокаТаблицы.Организация);
		СтруктураОтбора.Вставить("Склад", СтрокаТаблицы.Склад);
		СтруктураОтбора.Вставить("ЗаказНаПроизводство", СтрокаТаблицы.ЗаказНаПроизводство);
		СтруктураОтбора.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
		СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
		Если СтрокиОстатков.Количество() = 0 Тогда
			// Учитываются также остатки по другим складам
			СтруктураОтбора.Удалить("Склад");
			СтрокиОстатковВсеСклады = ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаОстатка Из СтрокиОстатковВсеСклады Цикл
				Если СтрокаОстатка.Склад = СтрокаТаблицы.Склад Тогда
					Продолжить;
				КонецЕсли; 
				СтрокиОстатков.Добавить(СтрокаОстатка);
			КонецЦикла; 
		КонецЕсли;
		
		Если СтрокиОстатков.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		КСписанию = СтрокаТаблицы.Количество;
		Для каждого СтрокаОстатка Из СтрокиОстатков Цикл
			Количество = Мин(СтрокаОстатка.Остаток, КСписанию);
			Если Количество <= 0 Тогда
				Продолжить;
			КонецЕсли; 
			НоваяСтрока = ТаблицаДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = Количество;
			Если СтрокаТаблицы.Склад <> СтрокаОстатка.Склад Тогда
				ИндексВставки = ТаблицаДвижений.Индекс(НоваяСтрока);
				НоваяСтрокаПриход = ТаблицаДвижений.Вставить(ИндексВставки);
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТаблицы);
				НоваяСтрокаПриход.Количество = Количество;
				НоваяСтрокаПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
				НоваяСтрокаРасход = ТаблицаДвижений.Вставить(ИндексВставки);
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, НоваяСтрокаПриход);
				НоваяСтрокаРасход.Количество = - Количество;
				НоваяСтрокаРасход.Склад = СтрокаОстатка.Склад;
			КонецЕсли; 
			СтрокаОстатка.Остаток = СтрокаОстатка.Остаток - Количество;
			КСписанию = КСписанию - Количество;
			Если КСписанию <= 0 Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаказыНаПроизводство", ТаблицаДвижений);
	
КонецПроцедуры

Процедура ДобавитьОтборыСпецификации(Параметры, Отказ) Экспорт
		
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
			
			ТипВладелец = Параметры.Отбор.Владелец.ТипНоменклатуры;
			
			Если (ТипВладелец = Перечисления.ТипыНоменклатуры.Операция
				ИЛИ ТипВладелец = Перечисления.ТипыНоменклатуры.ВидРабот
				ИЛИ ТипВладелец = Перечисления.ТипыНоменклатуры.Услуга
				ИЛИ (НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуПроизводство.Получить() И ТипВладелец = Перечисления.ТипыНоменклатуры.Запас)
				ИЛИ (НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы.Получить() И ТипВладелец = Перечисления.ТипыНоменклатуры.Работа)) Тогда
			
				Сообщение = Новый СообщениеПользователю();
				ТекстНадписи = НСтр("ru = 'Для номенклатуры типа %1 спецификация не указывается.'");
				ТекстНадписи = СтрШаблон(ТекстНадписи, ТипВладелец);
				Сообщение.Текст = ТекстНадписи;
				Сообщение.Сообщить();
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	МассивЗначений = Новый Массив;
	МассивЗначений.Добавить(Неопределено);
	МассивЗначений.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
	МассивЗначений.Добавить(Документы.ЗаказНаПроизводство.ПустаяСсылка());
	Если Параметры.Свойство("ЗаказПокупателя") Тогда
		Заказ = Параметры.ЗаказПокупателя;
		Если Параметры.Свойство("ВидОперации") Тогда
			ДоступныеВидыОпераций = Новый Массив;
			ДоступныеВидыОпераций.Добавить(Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу);
			ПодходящийВидОпераций = (ДоступныеВидыОпераций.Найти(Параметры.ВидОперации)<>Неопределено);
		Иначе
			ПодходящийВидОпераций = Истина; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(Заказ) И ТипЗнч(Заказ)=Тип("ДокументСсылка.ЗаказПокупателя") И ПодходящийВидОпераций Тогда
			МассивЗначений.Добавить(Заказ);
		КонецЕсли;
	КонецЕсли; 
	Если Параметры.Свойство("ЗаказНаПроизводство") Тогда
		Заказ = Параметры.ЗаказНаПроизводство;
		Если ЗначениеЗаполнено(Заказ) И ТипЗнч(Заказ)=Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			МассивЗначений.Добавить(Заказ);
		КонецЕсли;
	КонецЕсли; 
	Параметры.Отбор.Вставить("Заказ", Новый ФиксированныйМассив(МассивЗначений));
	
	Если НЕ Параметры.Свойство("ЭтоШаблон") Тогда
		Параметры.Отбор.Вставить("ЭтоШаблон", Ложь);
	КонецЕсли; 
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("ХарактеристикаПродукции") Тогда
		
		ХарактеристикаПродукции = Параметры.Отбор.ХарактеристикаПродукции;
		
		Если ЗначениеЗаполнено(ХарактеристикаПродукции) Тогда
			
			МассивЗначений = Новый Массив;
			МассивЗначений.Добавить(ХарактеристикаПродукции);
			МассивЗначений.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			Параметры.Отбор.ХарактеристикаПродукции = Новый ФиксированныйМассив(МассивЗначений);
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеВыбораСотрудникиБригады(ДанныеВыбора, Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтрокаПоиска", "%" + Параметры.СтрокаПоиска + "%");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	Бригады.Ссылка КАК Ссылка,
	|	Бригады.Наименование КАК Наименование,
	|	"""" КАК Код,
	|	1 КАК Порядок
	|ПОМЕСТИТЬ РезультатПоиска
	|ИЗ
	|	Справочник.Бригады КАК Бригады
	|ГДЕ
	|	НЕ Бригады.ПометкаУдаления
	|	И Бригады.Наименование ПОДОБНО &СтрокаПоиска
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 10
	|	Сотрудники.Ссылка,
	|	Сотрудники.Наименование,
	|	Сотрудники.Код,
	|	2
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	НЕ Сотрудники.ПометкаУдаления
	|	И (Сотрудники.Наименование ПОДОБНО &СтрокаПоиска ИЛИ Сотрудники.Код ПОДОБНО &СтрокаПоиска)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 10
	|	РезультатПоиска.Ссылка КАК Ссылка,
	|	РезультатПоиска.Наименование КАК Наименование,
	|	РезультатПоиска.Код КАК Код,
	|	РезультатПоиска.Порядок КАК Порядок
	|ИЗ
	|	РезультатПоиска КАК РезультатПоиска
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Наименование";
	Выборка = Запрос.Выполнить().Выбрать();
	ДанныеВыбора = Новый СписокЗначений;
	ДлинаСтрокиПоиска = СтрДлина(Параметры.СтрокаПоиска);
	ПолужирныйШрифт = Новый Шрифт(Новый Шрифт, , , Истина);
	ОбычныйШрифт = Новый Шрифт;
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.Сотрудники") И СтрНайти(Выборка.Код, Параметры.СтрокаПоиска) > 0 Тогда
			Наименование = СтрШаблон("%1 (%2)", Выборка.Код, Выборка.Наименование);
		ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.Сотрудники") Тогда
			Наименование = СтрШаблон("%1 (%2)", Выборка.Наименование, Выборка.Код);
		Иначе
			Наименование = Выборка.Наименование;
		КонецЕсли; 
		Позиция = Найти(НРег(Наименование), НРег(Параметры.СтрокаПоиска));
		ДлинаНаименования = СтрДлина(Наименование);
		ЭлементыПредставления = Новый Массив;
		Если Позиция > 1 Тогда
			ТекстДо = Лев(Наименование, Позиция - 1);
			ЭлементыПредставления.Добавить(Новый ФорматированнаяСтрока(ТекстДо, ?(Выборка.Порядок = 1, ПолужирныйШрифт, ОбычныйШрифт)));
		КонецЕсли; 
		Если ДлинаСтрокиПоиска > 0 Тогда
			ТекстПоиска = Сред(Наименование, Позиция, ДлинаСтрокиПоиска);
			ЭлементыПредставления.Добавить(Новый ФорматированнаяСтрока(ТекстПоиска, ПолужирныйШрифт, WebЦвета.ЗеленыйЛес));
		КонецЕсли;
		Если Позиция + ДлинаСтрокиПоиска <= ДлинаНаименования Тогда
			ТекстПосле = Сред(Наименование, Позиция + ДлинаСтрокиПоиска);
			ЭлементыПредставления.Добавить(Новый ФорматированнаяСтрока(ТекстПосле, ?(Выборка.Порядок = 1, ПолужирныйШрифт, ОбычныйШрифт)));
		КонецЕсли;
		ДанныеВыбора.Добавить(Выборка.Ссылка, Новый ФорматированнаяСтрока(ЭлементыПредставления));	// АПК:1356 Используются локализованные имена сотрудников и бригад
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура УчестьОкругление(Таблица, Значение, ИмяКолонки)
	
	МаксимальноеЗначение = 0;
	НайденнаяСтрока = Неопределено;
	Для каждого Строка Из Таблица Цикл
		Если НайденнаяСтрока=Неопределено ИЛИ Строка[ИмяКолонки]>МаксимальноеЗначение Тогда
			МаксимальноеЗначение = Строка[ИмяКолонки];
			НайденнаяСтрока = Строка;
		КонецЕсли; 
	КонецЦикла;
	Если НайденнаяСтрока <> Неопределено Тогда
		НайденнаяСтрока[ИмяКолонки] = НайденнаяСтрока[ИмяКолонки] + Значение;
	КонецЕсли; 
	
КонецПроцедуры

Процедура СвернутьПоВсемКолонкам(Таблица, КолонкиСуммирования)
	
	ПропускатьКолонки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КолонкиСуммирования, , , Истина);
	КолонкиСворачивания = "";
	Для каждого Колонка Из Таблица.Колонки Цикл
		Если ПропускатьКолонки.Найти(Колонка.Имя)<>Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		КолонкиСворачивания = КолонкиСворачивания + ?(ПустаяСтрока(КолонкиСворачивания), "", ", ") + Колонка.Имя;
	КонецЦикла;
	
	Таблица.Свернуть(КолонкиСворачивания, КолонкиСуммирования); 
	
КонецПроцедуры

#КонецОбласти 

 

#Область ПрограммныйИнтерфейс

Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске();
	
	// Для тех, у кого есть профиль "Рабочее место кассира" 
	Если ПараметрыРаботыКлиента.Свойство("ЕстьПрофильРМК") И ПараметрыРаботыКлиента.ЕстьПрофильРМК Тогда
		РабочееМестоКассираВызовСервера.УстановитьМинимальныйИнтерфейсРМК();
		ОбновитьИнтерфейс();
		ОткрытьФормуРМК();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Запуск формы РМК

Процедура ОткрытьФормуРМК() Экспорт
	
	ЗначенияЗаполнения = РабочееМестоКассираВызовСервера.ПолучитьКассуККМИТерминалПоУмолчанию();
	
	МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
	
	Если ТребуетсяОткрытьОкноВыбораКассы(ЗначенияЗаполнения) Тогда
		ОткрытьФорму("Документ.ЧекККМ.Форма.ФормаДокумента_РМК_ОкноВыбораКассы", 
		Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
	"Документ.ЧекККМ.Форма.ФормаДокумента_РМК",
	Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));

КонецПроцедуры

Функция ТребуетсяОткрытьОкноВыбораКассы(ЗначенияЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(ЗначенияЗаполнения.КассаККМ) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияЗаполнения.КоличествоЭквайринговыхТерминалов)
		И Не ЗначениеЗаполнено(ЗначенияЗаполнения.ЭквайринговыйТерминал) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#Область РаспределениеПродаж

Процедура ПроверитьПредупредитьОРаспределении(Идентификатор) Экспорт
	
	Если РабочееМестоКассираВызовСервера.НадоПредупредитьОРаспределенииПоЗаказам(Идентификатор) Тогда
		ТекстПредупреждения = НСтр("ru = 'Продажа по заказу покупателя может быть разбита на несколько чеков. Если получились чеки с разными организациями и сброшен флаг ""По компании"", то разбиение не выполняется.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПредпросмотрЧека

Процедура ПредпросмотрЧекаДенежныхДокументов(Параметры, Владелец, ИдентификаторУстройства) Экспорт
	
	Если ИдентификаторУстройства <> Неопределено Тогда
		
		ПараметрыРегистрации = РабочееМестоКассираВызовСервера.ПолучитьПараметрыРегистрацииККТ(ИдентификаторУстройства);
		
		Если ПараметрыРегистрации.Свойство("ОрганизацияНазвание") Тогда
			Параметры.Вставить("ОрганизацияНазвание", ПараметрыРегистрации.ОрганизацияНазвание);
		КонецЕсли;
		
		Если ПараметрыРегистрации.Свойство("АдресРасчетов") Тогда
			Параметры.Вставить("АдресРасчетов", ПараметрыРегистрации.АдресРасчетов);
		КонецЕсли;
		
		Если ПараметрыРегистрации.Свойство("ОрганизацияИНН") Тогда
			Параметры.Вставить("ОрганизацияИНН", ПараметрыРегистрации.ОрганизацияИНН);
		КонецЕсли;
		
		СтатусПоследнейСмены = МенеджерОборудованияВызовСервера.ПолучитьСтатусПоследнейСмены(ИдентификаторУстройства);
		Параметры.НомерЧека = СтатусПоследнейСмены.ТекущийНомерЧека;
		Параметры = МенеджерОборудованияВызовСервера.СформироватьШаблонЧека(Параметры, , ИдентификаторУстройства);
		ОсновныеПараметры = Параметры;
		ОписаниеОшибки = "";
		Если НЕ МенеджерОборудованияВызовСервера.ВыполненаПроверкаОбязательностиИПравильностиЗаполненияТэгов(ОсновныеПараметры, ИдентификаторУстройства, ОписаниеОшибки) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
		КонецЕсли;
		Отказ = Ложь;
		ИсправленыОсновныеПараметры = Ложь;
		МенеджерОборудованияВызовСервера.ПривестиДанныеКТребуемомуФормату(ОсновныеПараметры, Отказ, ОписаниеОшибки, ИсправленыОсновныеПараметры);
		Если Отказ Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
		ИначеЕсли ИсправленыОсновныеПараметры Тогда
			Параметры = ОсновныеПараметры;
		КонецЕсли;
		
	КонецЕсли;
	
	Разделитель = "------------------------------------------------";
	КУдалению = "================================================";
	ТекстЧека = МенеджерОборудованияКлиентСервер.СформироватьТекстНефискальногоЧека(Параметры, 48);
	ТекстЧека = СтрЗаменить(ТекстЧека, КУдалению, "");
	Позиция1 = СтрНайти(ТекстЧека, Разделитель);
	Позиция2 = СтрНайти(ТекстЧека, Разделитель,, Позиция1 + 1);
	Позиция3 = СтрНайти(ТекстЧека, Разделитель,, Позиция2 + 1);
	Шапка = Лев(ТекстЧека, Позиция1 - 1);
	Состав = Сред(ТекстЧека, Позиция1 + 49, Позиция2 - Позиция1 - 50);
	Итог = Сред(ТекстЧека, Позиция2 + 49, Позиция3 - Позиция2 - 49);
	Подвал = Сред(ТекстЧека, Позиция3 + 49);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РеквизитыЧека", Шапка + Итог + Подвал);
	ПараметрыФормы.Вставить("СоставЧека", Состав);
	ПараметрыФормы.Вставить("Документ", Параметры.ДокументОснование);
	ПараметрыФормы.Вставить("КоличествоСтрок", Параметры.ПозицииЧека.Количество());
	
	ОткрытьФорму("ОбщаяФорма.ПредпросмотрЧека", ПараметрыФормы, Владелец,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаФизлицаКассира

// Определяет сотрудника пользователя и открывает форму элемента справочника
//
// Параметры:
//  Форма - УправляемаяФорма - форма, в которой пробивается чек
//
Процедура ОткрытьФормуСотрудника(Форма) Экспорт
	
	РеквизитыДокумента = УправлениеНебольшойФирмойКлиентСервер.СформироватьСтруктуруДляПроверкиКассира();
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Форма.Объект);
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(
		Форма, "КассаДляПроверкиОтветственного")
		И ЗначениеЗаполнено(Форма.КассаДляПроверкиОтветственного) Тогда
		
		РеквизитыДокумента.КассаККМ = Форма.КассаДляПроверкиОтветственного;
		
	КонецЕсли;
	Реквизиты = РабочееМестоКассираВызовСервера.ПолучитьРеквизитыКассира(РеквизитыДокумента);
	Сотрудник = Реквизиты.Сотрудник;
	
	Если ТипЗнч(Сотрудник) <> Тип("СправочникСсылка.Сотрудники") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Произошла ошибка'"));
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("УстановитьВидимостьПредупрежденияОКассире", Форма);
	ПараметрыОткрытия = Новый Структура("Ключ", Сотрудник);
	
	ОткрытьФорму(
		"Справочник.Сотрудники.ФормаОбъекта",
		ПараметрыОткрытия,
		Форма,,,,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

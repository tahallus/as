#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НастройкиВыгрузкиРеквизитов") Тогда
		ЗаполнитьСписокРеквизитов(Параметры.НастройкиВыгрузкиРеквизитов);
		// Для обратной совместимости по номенклатуре по умолчанию выгружаются все дополнительные свойства.
		ЗаполнитьСписокДопРеквизитов(Параметры.НастройкиВыгрузкиДопРеквизитов, "Справочник_Номенклатура", Не Параметры.НастройкиВыгрузкиДопРеквизитовНоменклатурыИспользовать);
	ИначеЕсли Параметры.Свойство("НастройкиВыгрузкиДопРеквизитовЗаказов") Тогда
		Элементы.СтраницаОсновныеРеквизиты.Видимость = Ложь;
		Элементы.СтраницыТело.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		ЗаполнитьСписокДопРеквизитов(Параметры.НастройкиВыгрузкиДопРеквизитовЗаказов, "Документ_ЗаказПокупателя");
	КонецЕсли;
	
	ОбновитьКоличествоТаблиц();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ВыбранныеРеквизиты = Новый Структура;
	НастройкиВыгрузкиРеквизитов = Новый Структура;
	НастройкиВыгрузкиДопРеквизитов = Новый Структура;
	
	Для каждого реквизит Из СписокРеквизитовОсновныеРеквизиты Цикл
		Если реквизит.Пометка Тогда
			НастройкиВыгрузкиРеквизитов.Вставить(реквизит.Значение, реквизит.Представление);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого реквизит Из СписокРеквизитов Цикл
		Если реквизит.Пометка Тогда
			НастройкиВыгрузкиДопРеквизитов.Вставить(реквизит.Значение, реквизит.Представление);
		КонецЕсли;
	КонецЦикла;
	
	ВыбранныеРеквизиты.Вставить("НастройкиВыгрузкиРеквизитов" , НастройкиВыгрузкиРеквизитов);
	ВыбранныеРеквизиты.Вставить("НастройкиВыгрузкиДопРеквизитов" , НастройкиВыгрузкиДопРеквизитов);
	
	Закрыть(ВыбранныеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокДопРеквизитов(ТекущиеНастройки, ИмяТаблицы, ПометкаПоУмолчанию = Ложь)
	
	Если ЗначениеЗаполнено(ТекущиеНастройки) Тогда
		СоответствиеВыбранныхРеквизитов = ОбменССайтом.ЧтениеJSONВСтруктуру(ТекущиеНастройки, Истина);
	Иначе
		СоответствиеВыбранныхРеквизитов = Новый Соответствие;
	КонецЕсли;
	
	ТаблицаСвойств = УправлениеСвойствамиУНФ.СписокСвойствДляВидаОбъектов(ИмяТаблицы, "ДополнительныеРеквизиты");
	Для каждого ДопРеквизит Из ТаблицаСвойств Цикл
		
		СвойстваРеквизитаСписка = Неопределено;
		ИмяРеквизита = ДопРеквизит.Свойство.ИдентификаторДляФормул;
		НаименованиеДляВыгрузки = СоответствиеВыбранныхРеквизитов.Получить(ИмяРеквизита);
		
		НовСтр = СписокРеквизитов.Добавить();
		НовСтр.Значение = ИмяРеквизита;
		
		Если НаименованиеДляВыгрузки = Неопределено Тогда
			НовСтр.Представление = ДопРеквизит.Наименование;
			НовСтр.Пометка = ПометкаПоУмолчанию;
		Иначе
			НовСтр.Представление = НаименованиеДляВыгрузки;
			НовСтр.Пометка = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	СортироватьПоПометке("СписокРеквизитов");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРеквизитов(ТекущиеНастройки)
	
	Если ЗначениеЗаполнено(ТекущиеНастройки) Тогда
		СписокВыбранныхРеквизитов = ОбменССайтом.ЧтениеJSONВСтруктуру(ТекущиеНастройки, Ложь);
	Иначе
		СписокВыбранныхРеквизитов = Новый Структура;
	КонецЕсли;
	
	Для каждого реквизит Из Метаданные.Справочники.Номенклатура.Реквизиты Цикл
		
		СвойстваРеквизитаСписка = Неопределено;
		ЕстьРеквизит = СписокВыбранныхРеквизитов.Свойство(реквизит.Имя, СвойстваРеквизитаСписка);
		
		НовСтр = СписокРеквизитовОсновныеРеквизиты.Добавить();
		НовСтр.Значение = реквизит.Имя;
		Если ЕстьРеквизит Тогда
			НовСтр.Представление = ?(ЗначениеЗаполнено(СвойстваРеквизитаСписка), СвойстваРеквизитаСписка, реквизит.Имя);
			НовСтр.Пометка = Истина;
		Иначе
			НовСтр.Представление = реквизит.Имя;
			НовСтр.Пометка = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	СортироватьПоПометке("СписокРеквизитовОсновныеРеквизиты");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовПриИзменении(Элемент)
	СортироватьПоПометке("СписокРеквизитов");
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовОсновныеРеквизитыПриИзменении(Элемент)
	СортироватьПоПометке("СписокРеквизитовОсновныеРеквизиты");
КонецПроцедуры

&НаСервере
Процедура СортироватьПоПометке(ИмяТаблицы)
	
	ТЗРеквизитов = РеквизитФормыВЗначение(ИмяТаблицы);
	ТЗРеквизитов.Сортировать("Пометка Убыв, Значение Возр");
	
	ЗначениеВРеквизитФормы(ТЗРеквизитов, ИмяТаблицы);
	
	ОбновитьКоличествоТаблиц();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоТаблиц()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Пометка" , Истина);
	
	КоличествоВыбраноСписокРеквизитов = СписокРеквизитов.НайтиСтроки(Отбор).Количество();
	КоличествоВыбраноСписокРеквизитовОсновныеРеквизиты = СписокРеквизитовОсновныеРеквизиты.НайтиСтроки(Отбор).Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовОсновныеРеквизитыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовОсновныеРеквизитыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти


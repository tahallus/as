<ПравилаРегистрации>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>e2d67827-1230-11ec-973c-d45d64398041</Ид>
	<Наименование>УправлениеНебольшойФирмой: Обмен с мобильными приложениями</Наименование>
	<ДатаВремяСоздания>2021-10-01T08:06:57</ДатаВремяСоздания>
	<ПланОбмена Имя="ОбменСМобильнымиПриложениями">ПланОбменаСсылка.ОбменСМобильнымиПриложениями</ПланОбмена>
	<Конфигурация ВерсияПлатформы="8.2" ВерсияКонфигурации="1.6.26.79" СинонимКонфигурации="Управление нашей фирмой, редакция 1.6">УправлениеНебольшойФирмой</Конфигурация>
	<СоставПланаОбмена>
		<Элемент>
			<Тип>СправочникСсылка.Контрагенты</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>РегистрСведенийЗапись.ЦеныНоменклатуры</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>РегистрСведенийЗапись.ШтрихкодыНоменклатуры</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.СтруктурныеЕдиницы</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.ХарактеристикиНоменклатуры</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.Организации</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.ЗаказПокупателя</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.РасходнаяНакладная</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.Номенклатура</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.ПеремещениеЗапасов</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.ИнвентаризацияЗапасов</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.СерииНоменклатуры</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.ЗаказПоставщику</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.ПриходнаяНакладная</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.НоменклатураПрисоединенныеФайлы</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
	</СоставПланаОбмена>
	<ПравилаРегистрацииОбъектов>
		<Группа Отключить="false">
			<Код>000000001</Код>
			<Наименование>Документы</Наименование>
			<Правило Отключить="false" Валидное="true">
				<Код>000000002</Код>
				<Наименование>Заказ покупателя</Наименование>
				<ОбъектНастройки>ДокументСсылка.ЗаказПокупателя</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.ЗаказПокупателя</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;

Если НЕ Отказ И НЕ Объект.Ссылка.Пустая() Тогда
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказПокупателя", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЧекККМ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Заказ = &amp;ЗаказПокупателя
	|	И ЧекККМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|	И НЕ ЧекККМ.ОперацияСДенежнымиСредствами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РеализацияТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РасходнаяНакладная КАК РеализацияТоваров
	|ГДЕ
	|	НЕ РеализацияТоваров.ПометкаУдаления
	|	И РеализацияТоваров.Проведен
	|	И РеализацияТоваров.Заказ = &amp;ЗаказПокупателя";
	
	Результат = Запрос.ВыполнитьПакет();
	Если НЕ(Результат[0].Пустой()
		И Результат[1].Пустой()) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецЕсли;</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];

	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
	Если ФильтрПоМППройден Тогда
		ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиницаРезерв, Объект.СтруктурнаяЕдиницаРезерв, Объект.Организация);
			
		ФильтрПройден2 = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСостояниюЗаказа(
			ТекПолучатель, Объект.СостояниеЗаказа);   
			
		Если НЕ ФильтрПройден ИЛИ НЕ ФильтрПройден2 Тогда
			Получатели.Удалить(ИндексТек);
		КонецЕсли;  
	Иначе
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000003</Код>
				<Наименование>Заказ поставщику</Наименование>
				<ОбъектНастройки>ДокументСсылка.ЗаказПоставщику</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.ЗаказПоставщику</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>Булево</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>Проведен</СвойствоОбъекта>
						<Вид>ЗначениеКонстанты</Вид>
						<ЗначениеКонстанты>true</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>Проведен</Наименование>
								<Тип>Булево</Тип>
								<Вид>Свойство</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.СостоянияЗаказовПоставщикам</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>СостояниеЗаказа</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.СостоянияЗаказовПоставщикам.Завершен;</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>СостояниеЗаказа</Наименование>
								<Тип>СправочникСсылка.СостоянияЗаказовПоставщикам</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
				</ОтборПоСвойствамОбъекта>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;

Если НЕ Отказ И НЕ Объект.Ссылка.Пустая() Тогда
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПриходнаяНакладная.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|ГДЕ
	|	ПриходнаяНакладная.Заказ = &amp;ЗаказПоставщику
	|	И НЕ ПриходнаяНакладная.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Отказ = Истина;
	КонецЕсли;
КонецЕсли;</ПередОбработкой>
				<ПослеОбработки>//МаксИндекс = Получатели.ВГраница();
//Для Индекс = 0 По МаксИндекс Цикл
//	ИндексТек = МаксИндекс - Индекс;
//	ТекПолучатель = Получатели[ИндексТек];
//	ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
//		ТекПолучатель, Объект.СтруктурнаяЕдиницаРезерв, , Объект.Организация);
//	Если НЕ ФильтрПройден Тогда
//		Получатели.Удалить(ИндексТек);
//	КонецЕсли;
//КонецЦикла;

МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];

	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
	Если ФильтрПоМППройден Тогда
		
		ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиницаРезерв, Объект.СтруктурнаяЕдиницаРезерв, Объект.Организация);
			
		ФильтрПройден2 = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСостояниюЗаказаПоставщику(
			ТекПолучатель, Объект.СостояниеЗаказа);

		Если НЕ ФильтрПройден ИЛИ НЕ ФильтрПройден2  Тогда
			Получатели.Удалить(ИндексТек);
		КонецЕсли;
	Иначе
		Получатели.Удалить(ИндексТек);
	КонецЕсли;   
	
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000004</Код>
				<Наименование>Приходная накладная</Наименование>
				<ОбъектНастройки>ДокументСсылка.ПриходнаяНакладная</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.ПриходнаяНакладная</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.Организации</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>Организация</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.Организации.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>Организация</Наименование>
								<Тип>СправочникСсылка.Организации</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.СтруктурныеЕдиницы</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>СтруктурнаяЕдиница</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>СтруктурнаяЕдиница</Наименование>
								<Тип>СправочникСсылка.СтруктурныеЕдиницы</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<Группа>
						<БулевоЗначениеГруппы>ИЛИ</БулевоЗначениеГруппы>
						<ЭлементОтбора>
							<ТипСвойстваОбъекта>ДокументСсылка.ЗаказПоставщику</ТипСвойстваОбъекта>
							<ВидСравнения>Равно</ВидСравнения>
							<СвойствоОбъекта>Заказ</СвойствоОбъекта>
							<Вид>АлгоритмЗначения</Вид>
							<ЗначениеКонстанты>Значение = Документы.ЗаказПоставщику.ПустаяСсылка();</ЗначениеКонстанты>
							<ТаблицаСвойствОбъекта>
								<Свойство>
									<Наименование>Заказ</Наименование>
									<Тип>ДокументСсылка.ЗаказПоставщику</Тип>
									<Вид>Реквизит</Вид>
								</Свойство>
							</ТаблицаСвойствОбъекта>
						</ЭлементОтбора>
						<ЭлементОтбора>
							<ТипСвойстваОбъекта>СправочникСсылка.СостоянияЗаказовПоставщикам</ТипСвойстваОбъекта>
							<ВидСравнения>НеРавно</ВидСравнения>
							<СвойствоОбъекта>Заказ.СостояниеЗаказа</СвойствоОбъекта>
							<Вид>АлгоритмЗначения</Вид>
							<ЗначениеКонстанты>Значение = Справочники.СостоянияЗаказовПоставщикам.Завершен;</ЗначениеКонстанты>
							<ТаблицаСвойствОбъекта>
								<Свойство>
									<Наименование>Заказ</Наименование>
									<Тип>ДокументСсылка.ЗаказПоставщику</Тип>
									<Вид>Реквизит</Вид>
								</Свойство>
								<Свойство>
									<Наименование>СостояниеЗаказа</Наименование>
									<Тип>СправочникСсылка.СостоянияЗаказовПоставщикам</Тип>
									<Вид>Реквизит</Вид>
								</Свойство>
							</ТаблицаСвойствОбъекта>
						</ЭлементОтбора>
					</Группа>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>ПеречислениеСсылка.ВидыОперацийПриходнаяНакладная</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>ВидОперации</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Перечисления.ВидыОперацийПриходнаяНакладная.ПоступлениеОтПоставщика;</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>ВидОперации</Наименование>
								<Тип>ПеречислениеСсылка.ВидыОперацийПриходнаяНакладная</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
				</ОтборПоСвойствамОбъекта>
				<ПередОбработкой>Если Объект.ПометкаУдаления
	ИЛИ Объект.Запасы.Количество() = 0 Тогда
	Отказ = Истина;
КонецЕсли;

Отбор = Новый Структура("Количество", 0);
НезаполненныеСтроки = Объект.Запасы.НайтиСтроки(Отбор);
Если НезаполненныеСтроки.Количество() &gt; 0 Тогда
	Отказ = Истина;
КонецЕсли;

Отбор = Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
НезаполненныеСтроки = Объект.Запасы.НайтиСтроки(Отбор);
Если НезаполненныеСтроки.Количество() &gt; 0 Тогда
	Отказ = Истина;
КонецЕсли;

ЭтоПоступлениеМаркируемойПродукции = Ложь;
РегистрироватьПоступлениеМаркируемойПродукции = Ложь;

Если ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ИСМП") Тогда
	ВестиУчетМаркируемойПродукции = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойПродукцииИСМП");
	Если ВестиУчетМаркируемойПродукции Тогда
		//ВидыПродукцииДокумента = ИнтеграцияИСУНФ.ВидыПродукцииВТоварах(Объект.Товары);
		//Если ВидыПродукцииДокумента.Количество() &gt; 0 Тогда
		//	Запрос = Новый Запрос;
		//	Запрос.УстановитьПараметр("ДатаСеанса", ТекущаяДатаСеанса());
		//	Запрос.Текст = "ВЫБРАТЬ
		//	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции КАК ВидПродукции
		//	|ИЗ
		//	|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
		//	|ГДЕ
		//	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции
		//	|	И НастройкиУчетаМаркируемойПродукцииИСМП.ДатаОбязательнойМаркировки &lt;= &amp;ДатаСеанса";
		//	Результат = Запрос.Выполнить();
		//	ВидыПродукцииИС = Результат.Выгрузить().ВыгрузитьКолонку("ВидПродукции");
		//	Для Каждого ВидПродукции Из ВидыПродукцииДокумента Цикл
		//		Если ВидыПродукцииИС.Найти(ВидПродукции) = Неопределено Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		ЭтоПоступлениеМаркируемойПродукции = Истина;
		//	КонецЦикла;
		//	Если ЭтоПоступлениеМаркируемойПродукции Тогда
		//		НаборЗаписей = РегистрыСведений.СтатусыПроверкиИПодбораДокументовИСМП.СоздатьНаборЗаписей();
		//		НаборЗаписей.Отбор.Документ.Установить(Объект.Ссылка);
		//		НаборЗаписей.Прочитать();
		//		Для Каждого Запись Из НаборЗаписей Цикл
		//			Если Запись.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Выполняется Тогда
		//				РегистрироватьПоступлениеМаркируемойПродукции = Истина;
		//			КонецЕсли;
		//		КонецЦикла;
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
КонецЕсли;

//Если ЗначениеЗаполнено(Объект.ТТНВходящаяЕГАИС) Тогда
//	ЭтоПоступлениеМаркируемойПродукции = Истина;
//	Если Объект.ТТНВходящаяЕГАИС.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Выполняется Тогда
//		РегистрироватьПоступлениеМаркируемойПродукции = Истина;
//	КонецЕсли;	
//КонецЕсли;

Если ЭтоПоступлениеМаркируемойПродукции Тогда
	Если НЕ РегистрироватьПоступлениеМаркируемойПродукции Тогда
		Отказ = Истина;
	КонецЕсли;
ИначеЕсли Объект.Проведен Тогда
	Отказ = Истина;
КонецЕсли;</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];

	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
	Если ФильтрПоМППройден Тогда
		ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиница, Объект.СтруктурнаяЕдиница, Объект.Организация);
			
		Если НЕ ФильтрПройден   Тогда
			Получатели.Удалить(ИндексТек);
		КонецЕсли;    
	Иначе
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
		
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000005</Код>
				<Наименование>Расходная накладная</Наименование>
				<ОбъектНастройки>ДокументСсылка.РасходнаяНакладная</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.РасходнаяНакладная</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>ПеречислениеСсылка.ВидыОперацийРасходнаяНакладная</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>ВидОперации</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику;</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>ВидОперации</Наименование>
								<Тип>ПеречислениеСсылка.ВидыОперацийРасходнаяНакладная</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>Булево</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>Проведен</СвойствоОбъекта>
						<Вид>ЗначениеКонстанты</Вид>
						<ЗначениеКонстанты>false</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>Проведен</Наименование>
								<Тип>Булево</Тип>
								<Вид>Свойство</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.Организации</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>Организация</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.Организации.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>Организация</Наименование>
								<Тип>СправочникСсылка.Организации</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.СтруктурныеЕдиницы</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>СтруктурнаяЕдиница</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>СтруктурнаяЕдиница</Наименование>
								<Тип>СправочникСсылка.СтруктурныеЕдиницы</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
				</ОтборПоСвойствамОбъекта>
				<ПередОбработкой>Если Объект.ПометкаУдаления
	ИЛИ Объект.Запасы.Количество() = 0 Тогда
	Отказ = Истина;
КонецЕсли;

Отбор = Новый Структура("Количество", 0);
НезаполненныеСтроки = Объект.Запасы.НайтиСтроки(Отбор);
Если НезаполненныеСтроки.Количество() &gt; 0 Тогда
	Отказ = Истина;
КонецЕсли;

Отбор = Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
НезаполненныеСтроки = Объект.Запасы.НайтиСтроки(Отбор);
Если НезаполненныеСтроки.Количество() &gt; 0 Тогда
	Отказ = Истина;
КонецЕсли;</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];    
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
	Если ФильтрПоМППройден Тогда

		ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиница, Объект.СтруктурнаяЕдиница, Объект.Организация);
		Если НЕ ФильтрПройден Тогда
			Получатели.Удалить(ИндексТек);
		КонецЕсли;
	Иначе
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000006</Код>
				<Наименование>Инвентаризация запасов</Наименование>
				<ОбъектНастройки>ДокументСсылка.ИнвентаризацияЗапасов</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.ИнвентаризацияЗапасов</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>Булево</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>ПометкаУдаления</СвойствоОбъекта>
						<Вид>ЗначениеКонстанты</Вид>
						<ЗначениеКонстанты>false</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>ПометкаУдаления</Наименование>
								<Тип>Булево</Тип>
								<Вид>Свойство</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
				</ОтборПоСвойствамОбъекта>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
	Если ФильтрПоМППройден Тогда
		ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиница, Объект.СтруктурнаяЕдиница, Объект.Организация);
			
		Если НЕ ФильтрПройден Тогда
			Получатели.Удалить(ИндексТек);
		КонецЕсли;
	Иначе
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000007</Код>
				<Наименование>Перемещение запасов</Наименование>
				<ОбъектНастройки>ДокументСсылка.ПеремещениеЗапасов</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.ПеремещениеЗапасов</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>Булево</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>ПометкаУдаления</СвойствоОбъекта>
						<Вид>ЗначениеКонстанты</Вид>
						<ЗначениеКонстанты>false</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>ПометкаУдаления</Наименование>
								<Тип>Булево</Тип>
								<Вид>Свойство</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.Организации</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>Организация</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.Организации.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>Организация</Наименование>
								<Тип>СправочникСсылка.Организации</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.СтруктурныеЕдиницы</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>СтруктурнаяЕдиница</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>СтруктурнаяЕдиница</Наименование>
								<Тип>СправочникСсылка.СтруктурныеЕдиницы</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>СправочникСсылка.СтруктурныеЕдиницы</ТипСвойстваОбъекта>
						<ВидСравнения>НеРавно</ВидСравнения>
						<СвойствоОбъекта>СтруктурнаяЕдиницаПолучатель</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>СтруктурнаяЕдиницаПолучатель</Наименование>
								<Тип>СправочникСсылка.СтруктурныеЕдиницы</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>Булево</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>Проведен</СвойствоОбъекта>
						<Вид>ЗначениеКонстанты</Вид>
						<ЗначениеКонстанты>false</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>Проведен</Наименование>
								<Тип>Булево</Тип>
								<Вид>Свойство</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
					<ЭлементОтбора>
						<ТипСвойстваОбъекта>ПеречислениеСсылка.ВидыОперацийПеремещениеЗапасов</ТипСвойстваОбъекта>
						<ВидСравнения>Равно</ВидСравнения>
						<СвойствоОбъекта>ВидОперации</СвойствоОбъекта>
						<Вид>АлгоритмЗначения</Вид>
						<ЗначениеКонстанты>Значение = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение;</ЗначениеКонстанты>
						<ТаблицаСвойствОбъекта>
							<Свойство>
								<Наименование>ВидОперации</Наименование>
								<Тип>ПеречислениеСсылка.ВидыОперацийПеремещениеЗапасов</Тип>
								<Вид>Реквизит</Вид>
							</Свойство>
						</ТаблицаСвойствОбъекта>
					</ЭлементОтбора>
				</ОтборПоСвойствамОбъекта>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];

	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
	Если ФильтрПоМППройден Тогда
		
		ФильтрПройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиница, Объект.СтруктурнаяЕдиница, Объект.Организация);
		ФильтрПройден2 = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоСкладу(
			ТекПолучатель, Объект.СтруктурнаяЕдиницаПолучатель, Объект.СтруктурнаяЕдиницаПолучатель, Объект.Организация);
			
		Если НЕ ФильтрПройден ИЛИ НЕ ФильтрПройден2 Тогда
			Получатели.Удалить(ИндексТек);
		КонецЕсли;   
	Иначе
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
		
КонецЦикла;</ПослеОбработки>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>000000009</Код>
			<Наименование>Справочники</Наименование>
			<Правило Отключить="false" Валидное="true">
				<Код>000000008</Код>
				<Наименование>Номенклатура</Наименование>
				<ОбъектНастройки>СправочникСсылка.Номенклатура</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.Номенклатура</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000010</Код>
				<Наименование>Организации</Наименование>
				<ОбъектНастройки>СправочникСсылка.Организации</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.Организации</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000011</Код>
				<Наименование>СерииНоменклатуры</Наименование>
				<ОбъектНастройки>СправочникСсылка.СерииНоменклатуры</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.СерииНоменклатуры</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000012</Код>
				<Наименование>СтруктурныеЕдиницы</Наименование>
				<ОбъектНастройки>СправочникСсылка.СтруктурныеЕдиницы</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.СтруктурныеЕдиницы</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000013</Код>
				<Наименование>ХарактеристикиНоменклатуры</Наименование>
				<ОбъектНастройки>СправочникСсылка.ХарактеристикиНоменклатуры</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.ХарактеристикиНоменклатуры</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000016</Код>
				<Наименование>Присоединенные файлы (Номенклатура)</Наименование>
				<ОбъектНастройки>СправочникСсылка.НоменклатураПрисоединенныеФайлы</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.НоменклатураПрисоединенныеФайлы</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000017</Код>
				<Наименование>Контрагенты</Наименование>
				<ОбъектНастройки>СправочникСсылка.Контрагенты</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.Контрагенты</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>Если Объект.ПометкаУдаления Тогда
	Отказ = Истина;
КонецЕсли;
</ПередОбработкой>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>000000014</Код>
			<Наименование>РегистрыСведений</Наименование>
			<Правило Отключить="false" Валидное="true">
				<Код>000000015</Код>
				<Наименование>ШтрихкодыНоменклатуры</Наименование>
				<ОбъектНастройки>РегистрСведенийЗапись.ШтрихкодыНоменклатуры</ОбъектНастройки>
				<ОбъектМетаданныхИмя>РегистрСведений.ШтрихкодыНоменклатуры</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>РегистрСведений</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000018</Код>
				<Наименование>Цены номенклатуры</Наименование>
				<ОбъектНастройки>РегистрСведенийЗапись.ЦеныНоменклатуры</ОбъектНастройки>
				<ОбъектМетаданныхИмя>РегистрСведений.ЦеныНоменклатуры</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>РегистрСведений</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПослеОбработки>МаксИндекс = Получатели.ВГраница();
Для Индекс = 0 По МаксИндекс Цикл
	ИндексТек = МаксИндекс - Индекс;
	ТекПолучатель = Получатели[ИндексТек];
	
	ФильтрПоМППройден = УправлениеМобильнымиПриложениямиУНФ.ПроверитьФильтрПоМобильномуПриложению(ТекПолучатель, Объект); 
		
	Если  НЕ ФильтрПоМППройден Тогда
		Получатели.Удалить(ИндексТек);
	КонецЕсли;
КонецЦикла;</ПослеОбработки>
			</Правило>
		</Группа>
	</ПравилаРегистрацииОбъектов>
</ПравилаРегистрации>
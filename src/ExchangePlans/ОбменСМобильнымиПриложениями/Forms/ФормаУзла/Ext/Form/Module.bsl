#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СписокПриложений = УправлениеМобильнымиПриложениями.СписокМобильныхПриложений();
	Элементы.МобильноеПриложение.СписокВыбора.ЗагрузитьЗначения(СписокПриложений);
	Если СписокПриложений.Количество() = 1 Тогда
		Элементы.МобильноеПриложение.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	НастройкиОбмена = Неопределено;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗначениеКопирования = Параметры.ЗначениеКопирования;
		Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
			КопируемыеНастройки = ЗначениеКопирования.НастройкиОбмена.Получить();
			НастройкиОбмена = Новый ХранилищеЗначения(КопируемыеНастройки, Новый СжатиеДанных(9));
		КонецЕсли;
		Если СписокПриложений.Количество() = 1 Тогда
			Объект.МобильноеПриложение = СписокПриложений[0];
			Объект.ВерсияФорматаОбмена = УправлениеМобильнымиПриложениями.ВерсияФорматаОбмена(
				Объект.МобильноеПриложение);
		КонецЕсли;
		Объект.ПрефиксДляДанныхМобильногоУстройства = 
			УправлениеМобильнымиПриложениями.НовыйПрефиксДляДанныхМобильногоУстройства();
		ПриЧтенииСозданииНаСервере(НастройкиОбмена);
	КонецЕсли;
	
	Если Объект.ЭтотУзел Тогда
		Элементы.ФормаСтандартныеНастройки.Видимость = Ложь;
		Элементы.ГруппаСтатусОбмена.Видимость = Ложь;
		Элементы.МобильноеПриложение.Видимость = Ложь;
		Элементы.ГруппаПользователей.Видимость = Ложь;
		Элементы.Пользователь.Видимость = Ложь;
		Элементы.ГруппаШапкаПраво.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкаКомпоновки = ТекущиеНастройкиКомпоновкиСервер();
 	ТекущийОбъект.НастройкиОбмена = Новый ХранилищеЗначения(НастройкаКомпоновки, Новый СжатиеДанных(9));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ЭтотУзел Тогда
		Возврат;
	КонецЕсли;
	
	ПриИзмененииУчастниковНастройкиСервер();
	УправлениеМобильнымиПриложениями.ПослеЗаписиНастройки(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого ЭлементНастройки Из Элементы.ГруппаНастройки.ПодчиненныеЭлементы Цикл
		Если ЭлементНастройки.Вид = ВидПоляФормы.ПолеВвода Тогда
			Если ЭлементНастройки.АвтоОтметкаНезаполненного = Истина Тогда
				ПроверяемыеРеквизиты.Добавить(ЭлементНастройки.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодПодключенияПользователяНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УзелОбмена", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("ТекущийПользователь", Объект.Пользователь);
	ОткрытьФорму("Обработка.УправлениеМобильнымиПриложениями.Форма.КодПодключения",
		ПараметрыОткрытия, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура КодыПодключенияПользователейНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УзелОбмена", Объект.Ссылка);
	ОткрытьФорму("Обработка.УправлениеМобильнымиПриложениями.Форма.КодыПодключения",
		ПараметрыОткрытия, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура МобильноеПриложениеПриИзменении(Элемент)

	МобильноеПриложениеПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПользователейПриИзменении(Элемент)
	
	ПриИзмененииУчастниковНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбязательнаяНастройкаПриИзменении(Элемент)

	ОбязательнаяНастройкаПриИзмененииСервер(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ПриИзмененииУчастниковНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбменаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЖурналРегистрацииПоНастройкам();
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбменаНадписьНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЖурналРегистрацииПоНастройкам();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаНастроекКомпоновки

&НаКлиенте
Процедура ТаблицаНастроекКомпоновкиПриИзменении(Элемент)
	
	ОчиститьСообщения();
	ТаблицаНастроекКомпоновкиПриИзмененииСервер();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СтандартныеНастройки(Команда)
	
	Модифицированность = Истина;
	ЗагрузитьСтандартныеНастройки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьСтандартныеНастройки()
	
	ИнициализироватьКомпоновщикСервер(, Истина);
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщикСервер(НастройкиОбмена = Неопределено, НачальныеНастройки = Ложь)
	
	Если НастройкиОбмена = Неопределено Тогда
		Если НачальныеНастройки Тогда
			НастройкаКомпоновки = Неопределено;
		Иначе
			НастройкаКомпоновки = Объект.Ссылка.НастройкиОбмена.Получить();
		КонецЕсли;
	Иначе
		НастройкаКомпоновки = НастройкиОбмена.Получить();
	КонецЕсли;
	
	УправлениеМобильнымиПриложениями.ЗаполнитьНастройкиКомпоновщика(
		КомпоновщикНастроекКомпоновкиДанных,
		Объект.МобильноеПриложение, НастройкаКомпоновки);
	
	УправлениеМобильнымиПриложениями.ОтрисоватьФормуУзла(
		ЭтаФорма, Элементы.ГруппаНастройки, КомпоновщикНастроекКомпоновкиДанных, Объект.МобильноеПриложение);
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура МобильноеПриложениеПриИзмененииСервер()
	
	Объект.ВерсияФорматаОбмена = УправлениеМобильнымиПриложениями.ВерсияФорматаОбмена(
		Объект.МобильноеПриложение);
	ИнициализироватьКомпоновщикСервер(, Истина);

КонецПроцедуры

&НаСервере
Процедура ОбязательнаяНастройкаПриИзмененииСервер(ИмяНастройки)
	
	УправлениеМобильнымиПриложениями.ОбязательнаяНастройкаПриИзменении(
		ЭтаФорма, ИмяНастройки, Объект.МобильноеПриложение, КомпоновщикНастроекКомпоновкиДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналРегистрацииПоНастройкам()
	
	ПараметрыФормы = Новый Структура();
	ИмяПриложения = Новый Массив;
	ИмяПриложения.Добавить("WSConnection");
	ПараметрыФормы.Вставить("ДатаНачала", ДатаОбмена);
	ПараметрыФормы.Вставить("ДатаОкончания", ДатаОбмена);
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииУчастниковНастройки()
	
	ОчиститьСообщения();
	ПриИзмененииУчастниковНастройкиСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииУчастниковНастройкиСервер()
	
	НастройкаСохранена = Не Объект.Ссылка.Пустая();
	
	Если ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Элементы.ГруппаПользователей.ТолькоПросмотр = Истина;
		Элементы.Пользователь.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элементы.ГруппаПользователей.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		Элементы.КодПодключенияПользователя.Видимость = НастройкаСохранена;
		Элементы.КодыПодключенияПользователей.Видимость = Ложь;
	ИначеЕсли ЗначениеЗаполнено(Объект.ГруппаПользователей) Тогда
		Элементы.Пользователь.Видимость = Ложь;
		Элементы.Пользователь.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		Элементы.ГруппаПользователей.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элементы.КодыПодключенияПользователей.Видимость = НастройкаСохранена;
		Элементы.КодПодключенияПользователя.Видимость = Ложь;
	Иначе
		Элементы.ГруппаПользователей.ТолькоПросмотр = Ложь;
		Элементы.Пользователь.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		Элементы.ГруппаПользователей.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		Элементы.Пользователь.Видимость = Истина;
		Элементы.КодПодключенияПользователя.Видимость = Ложь;
		Элементы.КодыПодключенияПользователей.Видимость = Ложь;
	КонецЕсли;
	
	Если НастройкаСохранена Тогда
		АдресПубликации = Константы.АдресПубликацииИнформационнойБазыВИнтернете.Получить();
		Если ПустаяСтрока(АдресПубликации)
			и Не ОбщегоНазначения.РазделениеВключено() Тогда
			Элементы.ДекорацияQRКодНадпись.Заголовок = 
			НСтр("ru = 'Невозможно сформировать код подключения. Не заполнен адрес публикации информационной базы в интернете:
					|Настройки - Общие настройки - Публикация информационной базы'");
			Элементы.КодПодключенияПользователя.Видимость = Ложь;
			Элементы.КодыПодключенияПользователей.Видимость = Ложь;
		Иначе
			Элементы.ГруппаQRКодПредупреждение.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере(НастройкиОбмена = Неопределено)
	
	СостояниеОбменаДанными();
	ИнициализироватьКомпоновщикСервер(НастройкиОбмена);
	
КонецПроцедуры

&НаСервере
Процедура СостояниеОбменаДанными()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтатусОбмена = 0;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(СостоянияОбменовДанными.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ СостоянияОбменовДаннымиМаксДата
	|ИЗ
	|	РегистрСведений.СостоянияОбменовДанными КАК СостоянияОбменовДанными
	|ГДЕ
	|	СостоянияОбменовДанными.УзелИнформационнойБазы = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОбменовДанными.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	СостоянияОбменовДанными.РезультатВыполненияОбмена КАК РезультатВыполненияОбмена,
	|	СостоянияОбменовДанными.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ РезультатыВыполненияОбмена
	|ИЗ
	|	РегистрСведений.СостоянияОбменовДанными КАК СостоянияОбменовДанными
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОбменовДаннымиМаксДата КАК СостоянияОбменовДаннымиМаксДата
	|		ПО (СостоянияОбменовДаннымиМаксДата.ДатаОкончания = СостоянияОбменовДанными.ДатаОкончания)
	|ГДЕ
	|	СостоянияОбменовДанными.УзелИнформационнойБазы = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СостоянияОбменовДанными.РезультатВыполненияОбмена ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СостоянияОбменовДанными.РезультатВыполненияОбмена = ЗНАЧЕНИЕ(Перечисление.РезультатыВыполненияОбмена.Выполнено)
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусОбмена,
	|	ЕСТЬNULL(СостоянияОбменовДанными.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОбмена
	|ИЗ
	|	ПланОбмена.ОбменСМобильнымиПриложениями КАК ОбменСМобильнымиПриложениями
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезультатыВыполненияОбмена КАК СостоянияОбменовДанными
	|		ПО ОбменСМобильнымиПриложениями.Ссылка = СостоянияОбменовДанными.УзелИнформационнойБазы
	|ГДЕ
	|	ОбменСМобильнымиПриложениями.Ссылка = &Ссылка";
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.СостоянияОбменовДанными",
			"РегистрСведений.СостоянияОбменовДаннымиОбластейДанных");
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		СтатусОбмена = 0;
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	СтатусОбмена = Выборка.СтатусОбмена;
	ДатаОбмена = Выборка.ДатаОбмена;
КонецПроцедуры

&НаСервере
Процедура ТаблицаНастроекКомпоновкиПриИзмененииСервер()

	УправлениеМобильнымиПриложениямиПереопределяемый.ПриИзмененииТаблицыНастроек(
		ЭтаФорма, КомпоновщикНастроекКомпоновкиДанных);
	
КонецПроцедуры

&НаСервере
Функция ТекущиеНастройкиКомпоновкиСервер()
	
	УправлениеМобильнымиПриложениями.УстановитьРеквизитыФормыВОтборыКомпоновщика(
		ЭтаФорма, КомпоновщикНастроекКомпоновкиДанных, Объект.МобильноеПриложение);
	Возврат КомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки();
КонецФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	НастройкаСохранена = Не Объект.Ссылка.Пустая();
	
	Если СтатусОбмена = 0 Тогда
		СтатусОбменаНадпись = Нстр("ru = 'Ожидается первая синхронизация данных'");
	ИначеЕсли СтатусОбмена = 1 Тогда
		СтатусОбменаНадпись = Нстр("ru = 'Синхронизация успешно завершена в %ДатаОбмена%'");
	ИначеЕсли СтатусОбмена = 2 Тогда
		СтатусОбменаНадпись = Нстр("ru = 'Синхронизация завершена с ошибками в %ДатаОбмена%'");
	КонецЕсли;
	СтатусОбменаНадпись = СтрЗаменить(СтатусОбменаНадпись, "%ДатаОбмена%", Формат(ДатаОбмена, "ДЛФ=DT"));
	Элементы.СтатусОбмена.Видимость = НастройкаСохранена;
	Элементы.СтатусОбменаНадпись.Видимость = НастройкаСохранена;
	Элементы.СтатусОбмена.Гиперссылка = НЕ СтатусОбмена = 0;
	Элементы.СтатусОбменаНадпись.Гиперссылка = НЕ СтатусОбмена = 0;
	
	Элементы.ГруппаОтборы.Видимость = ЗначениеЗаполнено(Объект.МобильноеПриложение);
	
	ЭлементВидСравнения = Элементы.ТаблицаНастроекКомпоновки.ПодчиненныеЭлементы.ТаблицаНастроекКомпоновкиВидСравнения;
	ЭлементВидСравнения.СписокВыбора.Очистить();
	ЭлементВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.Равно);
	ЭлементВидСравнения.СписокВыбора.Добавить(ВидСравненияКомпоновкиДанных.ВСписке);
	
	ПриИзмененииУчастниковНастройкиСервер();
	
КонецПроцедуры

#КонецОбласти


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьАктуальнуюВерсиюAPI() Экспорт
	Возврат "5.140";
КонецФункции

Функция ПолучитьОписаниеУзлаОбмена(СсылкаНаУзелОбмена) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнтеграцияСМагазинамиСоцСетей.Ссылка КАК Ссылка,
	|	ИнтеграцияСМагазинамиСоцСетей.ВидЦеныНоменклатуры КАК ВидЦеныНоменклатуры,
	|	ИнтеграцияСМагазинамиСоцСетей.ВидЦеныНоменклатурыСтарая КАК ВидЦеныНоменклатурыСтарая,
	|	ИнтеграцияСМагазинамиСоцСетей.ТокенДоступа КАК ТокенДоступа,
	|	ИнтеграцияСМагазинамиСоцСетей.ИдентификаторГруппы КАК ИдентификаторГруппы,
	|	ИнтеграцияСМагазинамиСоцСетей.ИдентификаторПользователя КАК ИдентификаторПользователя,
	|	ИнтеграцияСМагазинамиСоцСетей.ВыгружатьИзмененияНоменклатуры КАК ВыгружатьИзмененияНоменклатуры,
	|	ИнтеграцияСМагазинамиСоцСетей.ЗагружатьЗаказы КАК ЗагружатьЗаказы,
	|	ИнтеграцияСМагазинамиСоцСетей.КодПриложения КАК КодПриложения,
	|	ИнтеграцияСМагазинамиСоцСетей.Организация КАК Организация,
	|	ИнтеграцияСМагазинамиСоцСетей.ПодразделениеДляПодстановкиВЗаказы КАК ПодразделениеДляПодстановкиВЗаказы,
	|	ИнтеграцияСМагазинамиСоцСетей.МагазинДляИнтеграции КАК МагазинДляИнтеграции,
	|	ИнтеграцияСМагазинамиСоцСетей.ГруппаДляНовыхКонтрагентов КАК ГруппаДляНовыхКонтрагентов,
	|	ИнтеграцияСМагазинамиСоцСетей.ГруппаДоступаДляНовыхКонтрагентов КАК ГруппаДоступаДляНовыхКонтрагентов,
	|	ИнтеграцияСМагазинамиСоцСетей.Ответственный КАК Ответственный,
	|	ИнтеграцияСМагазинамиСоцСетей.СпособУстановкиДатыОтгрузкиЗаказа КАК СпособУстановкиДатыОтгрузкиЗаказа,
	|	ИнтеграцияСМагазинамиСоцСетей.СпособУстановкиДатыОтгрузкиЗаказаКоличествоДней КАК СпособУстановкиДатыОтгрузкиЗаказаКоличествоДней,
	|	ИнтеграцияСМагазинамиСоцСетей.Организация.БанковскийСчетПоУмолчанию КАК БанковскийСчет,
	|	ИнтеграцияСМагазинамиСоцСетей.Организация.КассаПоУмолчанию КАК Касса,
	|	ИнтеграцияСМагазинамиСоцСетей.ВалютаДляПодстановкиВЗаказы КАК ВалютаДляПодстановкиВЗаказы,
	|	ИнтеграцияСМагазинамиСоцСетей.Организация.ВидСтавкиНДСПоУмолчанию КАК ВидСтавкиНДСПоУмолчанию,
	|	ИнтеграцияСМагазинамиСоцСетей.ВыгружатьЦены КАК ВыгружатьЦены,
	|	ИнтеграцияСМагазинамиСоцСетей.ВыгружатьОстаток КАК ВыгружатьОстаток,
	|	ИнтеграцияСМагазинамиСоцСетей.КоличествоФотографийДляКарточки КАК КоличествоФотографийДляКарточки,
	|	ИнтеграцияСМагазинамиСоцСетей.ДатаЗагрузкиЗаказов КАК ДатаЗагрузкиЗаказов,
	|	ИнтеграцияСМагазинамиСоцСетей.ВариантВыгрузкиХарактеристик КАК ВариантВыгрузкиХарактеристик,
	|	ИнтеграцияСМагазинамиСоцСетей.НаименованиеНабораВариантов КАК НаименованиеНабораВариантов,
	|	ИнтеграцияСМагазинамиСоцСетей.ДобавлятьФайлыХарактеристикиИзНоменклатуры КАК ДобавлятьФайлыХарактеристикиИзНоменклатуры,
	|	ЕСТЬNULL(ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.ДатаОперации, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОперации,
	|	ИнтеграцияСМагазинамиСоцСетей.ИдентификаторРегламентногоЗадания КАК ИдентификаторРегламентногоЗадания,
	|	ИнтеграцияСМагазинамиСоцСетей.ЕстьОтборПоСкладам КАК ЕстьОтборПоСкладам,
	|	ИнтеграцияСМагазинамиСоцСетей.ОбмениватьсяСтатусамиЗаказа КАК ОбмениватьсяСтатусамиЗаказа,
	|	ИнтеграцияСМагазинамиСоцСетей.ИспользоватьДоставку КАК ИспользоватьДоставку,
	|	ИнтеграцияСМагазинамиСоцСетей.ТокенДоступаСообщества КАК ТокенДоступаСообщества,
	|	ИнтеграцияСМагазинамиСоцСетей.Наименование КАК Наименование,
	|	ИнтеграцияСМагазинамиСоцСетей.УчетнаяЗаписьДляОповещения КАК УчетнаяЗаписьДляОповещения,
	|	ИнтеграцияСМагазинамиСоцСетей.ИспользоватьОповещения КАК ИспользоватьОповещения,
	|	ИнтеграцияСМагазинамиСоцСетей.ОтправлятьСкрытуюКопиюВПоддержку КАК ОтправлятьСкрытуюКопиюВПоддержку
	|ИЗ
	|	ПланОбмена.ИнтеграцияСМагазинамиСоцСетей КАК ИнтеграцияСМагазинамиСоцСетей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей КАК ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей
	|		ПО (ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.УзелИнформационнойБазы = ИнтеграцияСМагазинамиСоцСетей.Ссылка)
	|ГДЕ
	|	ИнтеграцияСМагазинамиСоцСетей.Ссылка = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.Идентификатор КАК Идентификатор,
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.ГруппаНоменклатуры КАК ГруппаНоменклатуры
	|ИЗ
	|	РегистрСведений.СопоставлениеКаталоговДляМагазинаСоцСетей КАК СопоставлениеКаталоговДляМагазинаСоцСетей
	|ГДЕ
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов.КодСтатуса КАК КодСтатуса,
	|	ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов.СостояниеЗаказаПокупателя КАК СостояниеЗаказаПокупателя
	|ИЗ
	|	ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.СтатусыЗаказов КАК ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов
	|ГДЕ
	|	ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов.Ссылка = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки.Идентификатор КАК Идентификатор,
	|	ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки.СпособДоставки КАК СпособДоставки,
	|	ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки.СлужбаДоставки КАК СлужбаДоставки,
	|	ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки.НоменклатураДоставки КАК НоменклатураДоставки,
	|	ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки.СтавкаНДСДоставки КАК СтавкаНДСДоставки
	|ИЗ
	|	ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.СлужбыДоставки КАК ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки
	|ГДЕ
	|	ИнтеграцияСМагазинамиСоцСетейСлужбыДоставки.Ссылка = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(СопоставлениеИдентификаторовМагазиновСоцСетей.ДатаЗагрузки), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗагрузки
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""order""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнтеграцияСМагазинамиСоцСетейПодпискиНаСобытие.ЭлектроннаяПочта КАК ЭлектроннаяПочта,
	|	ИнтеграцияСМагазинамиСоцСетейПодпискиНаСобытие.Капча КАК Капча,
	|	ИнтеграцияСМагазинамиСоцСетейПодпискиНаСобытие.Ошибка КАК Ошибка
	|ИЗ
	|	ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.ПодпискиНаСобытие КАК ИнтеграцияСМагазинамиСоцСетейПодпискиНаСобытие
	|ГДЕ
	|	ИнтеграцияСМагазинамиСоцСетейПодпискиНаСобытие.Ссылка = &УзелОбмена";
	
	Запрос.УстановитьПараметр("УзелОбмена", СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[0].Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	ОписаниеУзелОбмена = Новый Структура;
	ОписаниеУзелОбмена.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.Ссылка);
	ОписаниеУзелОбмена.Вставить("ТокенДоступа" , ВыборкаДетальныеЗаписи.ТокенДоступа);
	ОписаниеУзелОбмена.Вставить("ТокенДоступаСообщества" , ВыборкаДетальныеЗаписи.ТокенДоступаСообщества);
	ОписаниеУзелОбмена.Вставить("МагазинДляИнтеграции" , ВыборкаДетальныеЗаписи.МагазинДляИнтеграции);
	ОписаниеУзелОбмена.Вставить("ВерсияAPI" , ПолучитьАктуальнуюВерсиюAPI());
	ОписаниеУзелОбмена.Вставить("Наименование" , ВыборкаДетальныеЗаписи.Наименование);
	ОписаниеУзелОбмена.Вставить("ИдентификаторГруппы" , ВыборкаДетальныеЗаписи.ИдентификаторГруппы);
	ОписаниеУзелОбмена.Вставить("ВидЦеныНоменклатуры" , ВыборкаДетальныеЗаписи.ВидЦеныНоменклатуры);
	ОписаниеУзелОбмена.Вставить("ВидЦеныНоменклатурыСтарая" , ВыборкаДетальныеЗаписи.ВидЦеныНоменклатурыСтарая);
	ОписаниеУзелОбмена.Вставить("Организация" , ВыборкаДетальныеЗаписи.Организация);
	ОписаниеУзелОбмена.Вставить("ПодразделениеДляПодстановкиВЗаказы" , ВыборкаДетальныеЗаписи.ПодразделениеДляПодстановкиВЗаказы);
	ОписаниеУзелОбмена.Вставить("ДатаЗагрузкиЗаказов" , ВыборкаДетальныеЗаписи.ДатаЗагрузкиЗаказов);
	ОписаниеУзелОбмена.Вставить("ВыгружатьИзмененияНоменклатуры" , ВыборкаДетальныеЗаписи.ВыгружатьИзмененияНоменклатуры);
	ОписаниеУзелОбмена.Вставить("ВыгружатьЦены" , ВыборкаДетальныеЗаписи.ВыгружатьЦены);
	ОписаниеУзелОбмена.Вставить("ВыгружатьОстаток" , ВыборкаДетальныеЗаписи.ВыгружатьОстаток);
	ОписаниеУзелОбмена.Вставить("КоличествоФотографийДляКарточки" , ВыборкаДетальныеЗаписи.КоличествоФотографийДляКарточки);
	ОписаниеУзелОбмена.Вставить("ГруппаДляНовыхКонтрагентов" , ВыборкаДетальныеЗаписи.ГруппаДляНовыхКонтрагентов);
	ОписаниеУзелОбмена.Вставить("ГруппаДоступаДляНовыхКонтрагентов" , ВыборкаДетальныеЗаписи.ГруппаДоступаДляНовыхКонтрагентов);
	ОписаниеУзелОбмена.Вставить("СпособУстановкиДатыОтгрузкиЗаказа" , ВыборкаДетальныеЗаписи.СпособУстановкиДатыОтгрузкиЗаказа);
	ОписаниеУзелОбмена.Вставить("СпособУстановкиДатыОтгрузкиЗаказаКоличествоДней" , ВыборкаДетальныеЗаписи.СпособУстановкиДатыОтгрузкиЗаказаКоличествоДней);
	ОписаниеУзелОбмена.Вставить("ИдентификаторРегламентногоЗадания" , ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗадания);
	ОписаниеУзелОбмена.Вставить("ИспользоватьДоставку" , ВыборкаДетальныеЗаписи.ИспользоватьДоставку);
	ОписаниеУзелОбмена.Вставить("ЗагружатьЗаказы" , ВыборкаДетальныеЗаписи.ЗагружатьЗаказы);
	ОписаниеУзелОбмена.Вставить("ОбмениватьсяСтатусамиЗаказа" , ВыборкаДетальныеЗаписи.ОбмениватьсяСтатусамиЗаказа);
	ОписаниеУзелОбмена.Вставить("БанковскийСчет" , ВыборкаДетальныеЗаписи.БанковскийСчет);
	ОписаниеУзелОбмена.Вставить("Касса" , ВыборкаДетальныеЗаписи.Касса);
	ОписаниеУзелОбмена.Вставить("Ответственный" , ВыборкаДетальныеЗаписи.Ответственный);
	ОписаниеУзелОбмена.Вставить("ВалютаПоУмолчанию" , ВыборкаДетальныеЗаписи.ВалютаДляПодстановкиВЗаказы);
	ОписаниеУзелОбмена.Вставить("ВидСтавкиНДСПоУмолчанию" , ВыборкаДетальныеЗаписи.ВидСтавкиНДСПоУмолчанию);
	ОписаниеУзелОбмена.Вставить("ВариантВыгрузкиХарактеристик" , ВыборкаДетальныеЗаписи.ВариантВыгрузкиХарактеристик);
	ОписаниеУзелОбмена.Вставить("НаименованиеНабораВариантов" , ВыборкаДетальныеЗаписи.НаименованиеНабораВариантов);
	ОписаниеУзелОбмена.Вставить("ДобавлятьФайлыХарактеристикиИзНоменклатуры" , ВыборкаДетальныеЗаписи.ДобавлятьФайлыХарактеристикиИзНоменклатуры);
	ОписаниеУзелОбмена.Вставить("ДатаОперации" , ВыборкаДетальныеЗаписи.ДатаОперации);
	ОписаниеУзелОбмена.Вставить("СоответствиеКодовВалюты" , Новый Соответствие);
	ОписаниеУзелОбмена.Вставить("ТекущаяДата" , ТекущаяДата());
	ОписаниеУзелОбмена.Вставить("ИмяСобытия" , "Интеграция ВКонтакте");
	ОписаниеУзелОбмена.Вставить("ЕстьОтборПоСкладам", ВыборкаДетальныеЗаписи.ЕстьОтборПоСкладам); 
	ОписаниеУзелОбмена.Вставить("ЗагружатьЦены", Истина); 
	ОписаниеУзелОбмена.Вставить("ДатаУстановкиЦен", ОписаниеУзелОбмена.ТекущаяДата);
	ОписаниеУзелОбмена.Вставить("УчетнаяЗаписьДляОповещения", ВыборкаДетальныеЗаписи.УчетнаяЗаписьДляОповещения);
	ОписаниеУзелОбмена.Вставить("ИспользоватьОповещения", ВыборкаДетальныеЗаписи.ИспользоватьОповещения);
	ОписаниеУзелОбмена.Вставить("ОтправлятьСкрытуюКопиюВПоддержку", ВыборкаДетальныеЗаписи.ОтправлятьСкрытуюКопиюВПоддержку);
	
	ОписаниеУзелОбмена.Вставить("ЗагружатьВиртуальныеКаталоги", Ложь);
	
	ОписаниеУзелОбмена.Вставить("ЗагружатьОстатки", Ложь);
	ОписаниеУзелОбмена.Вставить("ДатаЗагрузкиОстатков", ОписаниеУзелОбмена.ТекущаяДата);
	
	ОписаниеУзелОбмена.Вставить("СкладДляПодстановкиВЗаказыИОстатков" , ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ОсновнойСклад"));
	
	Если ОписаниеУзелОбмена.КоличествоФотографийДляКарточки > 4 Тогда
		ОписаниеУзелОбмена.КоличествоФотографийДляКарточки = 4;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеУзелОбмена.НаименованиеНабораВариантов) Тогда
		ОписаниеУзелОбмена.Вставить("НаименованиеНабораВариантов" , "Аналоги");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик) Тогда
		ОписаниеУзелОбмена.Вставить("ВариантВыгрузкиХарактеристик"
		, ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать"));
	КонецЕсли;
	
	СопоставлениеКаталоговВнешнейСистемы = Новый Соответствие;
	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Описание = Новый Структура;
		Описание.Вставить("КатегорияНоменклатуры" , ВыборкаДетальныеЗаписи.КатегорияНоменклатуры);
		Описание.Вставить("ГруппаНоменклатуры" , ВыборкаДетальныеЗаписи.ГруппаНоменклатуры);
		
		СопоставлениеКаталоговВнешнейСистемы.Вставить(ВыборкаДетальныеЗаписи.Идентификатор,Описание);
		
	КонецЦикла;
	
	ОписаниеУзелОбмена.Вставить("СопоставлениеКаталоговДляМагазинаСоцСетей" , СопоставлениеКаталоговВнешнейСистемы);
	
	СтатусыЗаказов = Новый Соответствие;
	ВыборкаДетальныеЗаписи = РезультатЗапроса[2].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтатусыЗаказов.Вставить(ВыборкаДетальныеЗаписи.КодСтатуса, ВыборкаДетальныеЗаписи.СостояниеЗаказаПокупателя);
	КонецЦикла;
	ОписаниеУзелОбмена.Вставить("СтатусыЗаказов" , СтатусыЗаказов);
	
	СлужбыДоставки = Новый Соответствие;
	ВыборкаДетальныеЗаписи = РезультатЗапроса[3].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Описание = Новый Структура;
		Описание.Вставить("СпособДоставки" , ВыборкаДетальныеЗаписи.СпособДоставки);
		Описание.Вставить("СлужбаДоставки" , ВыборкаДетальныеЗаписи.СлужбаДоставки);
		Описание.Вставить("НоменклатураДоставки" , ВыборкаДетальныеЗаписи.НоменклатураДоставки);
		Описание.Вставить("СтавкаНДСДоставки" , ВыборкаДетальныеЗаписи.СтавкаНДСДоставки);
		
		СлужбыДоставки.Вставить(ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьХешСтроки(ВыборкаДетальныеЗаписи.Идентификатор), Описание);
	КонецЦикла;
	ОписаниеУзелОбмена.Вставить("СлужбыДоставки" , СлужбыДоставки);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[4].Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	ОписаниеУзелОбмена.Вставить("ДатаЗагрузкиЗаказов" , Макс(ОписаниеУзелОбмена.ДатаЗагрузкиЗаказов,ВыборкаДетальныеЗаписи.ДатаЗагрузки- 1)); 
	
	ПодпискиНаСобытие = Новый Массив;
	ВыборкаДетальныеЗаписи = РезультатЗапроса[5].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Описание = Новый Структура;
		Описание.Вставить("ЭлектроннаяПочта" , ВыборкаДетальныеЗаписи.ЭлектроннаяПочта);
		Описание.Вставить("Капча" , ВыборкаДетальныеЗаписи.Капча);
		Описание.Вставить("Ошибка" , ВыборкаДетальныеЗаписи.Ошибка);
		
		ПодпискиНаСобытие.Добавить(Описание);
	КонецЦикла;
	ОписаниеУзелОбмена.Вставить("ПодпискиНаСобытие" , ПодпискиНаСобытие);
	
	Возврат ОписаниеУзелОбмена;
	
КонецФункции

Функция ВыполнитьМассивОпераций(МассивВсехОпераций, ОписаниеУзелОбмена)
	
	Если МассивВсехОпераций.Количество() = 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	// Ограничения на количество операций за один вызов, не более 25
	// Ограничение на длину url на более 15000 символов после кодировки
	
	КоличествоВызовов = 1;
	КоличествоСимволов = 0;
	МассивСкриптов = Новый  Массив;
	МассивМетодов = Новый  Массив;
	ШаблонВыполненияОперации = ШаблонВыполненияОперации();
	ШаблонВыполненияМассиваОперация = ШаблонВыполненияМассиваОперация();
	
	Для Каждого СтрОперация Из МассивВсехОпераций Цикл
		
		СтрокаСкрипта = СтрШаблон(ШаблонВыполненияОперации,СтрОперация.ИмяМетода, СтрОперация.ПараметрыМетодаСтрокой);
		
		КоличествоСимволовТекСкрипт = СтрДлина(КодироватьСтроку(СтрокаСкрипта,СпособКодированияСтроки.КодировкаURL));
		КоличествоСимволов = КоличествоСимволов + КоличествоСимволовТекСкрипт;
		
		Если КоличествоВызовов >= 24 Или КоличествоСимволов > 15000 Тогда
			МассивСкриптов.Добавить(СтрШаблон(ШаблонВыполненияМассиваОперация,СтрСоединить(МассивМетодов,"")));
			КоличествоВызовов = 0;
			МассивМетодов = Новый  Массив;
			КоличествоСимволов = КоличествоСимволовТекСкрипт;
		КонецЕсли;
		
		МассивМетодов.Добавить(СтрокаСкрипта);
		
		КоличествоВызовов = КоличествоВызовов + 1;
	КонецЦикла;
	
	Если МассивМетодов.Количество() <> 0 Тогда
		МассивСкриптов.Добавить(СтрШаблон(ШаблонВыполненияМассиваОперация,СтрСоединить(МассивМетодов,"")));
	КонецЕсли;
	
	Возврат ВыполнитьМассивСкриптов(МассивСкриптов, МассивВсехОпераций, ОписаниеУзелОбмена);
	
КонецФункции

Функция ВыполнитьМассивСкриптов(МассивСкриптов, МассивВсехОпераций, ОписаниеУзелОбмена,СтрокаПараметров = "")
	
	Если МассивСкриптов.Количество() = 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	АдресРесурса = "/method/execute";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	ЗарегистрироватьСсылкиКОбмену = Новый Массив;
	
	СтруктураОшибки = Новый Структура;
	СтруктураОшибки.Вставить("ЭтоКапча", Ложь);
	СтруктураОшибки.Вставить("ЗарегистрироватьСсылкиКОбмену", ЗарегистрироватьСсылкиКОбмену);
	
	Смещение = 0;
	Для Каждого СтрокаСкрипта Из МассивСкриптов Цикл 
		
		МассивОпераций = Новый Массив;
		
		СтруктураЗапросаHTTP.АдресРесурса = АдресРесурса + СтрШаблон("&code=%1", КодироватьСтроку(СтрокаСкрипта,СпособКодированияСтроки.КодировкаURL) + СтрокаПараметров);
		ОтветМассив = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, СтруктураЗапросаHTTP.АдресРесурса);
		
		Если ОтветМассив = Неопределено И СтрНайти(СтруктураЗапросаHTTP.ТелоОтвета, "Captcha needed") Тогда
			
			СоответствиеОтвет = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьСоответствиеИзJSON(СтруктураЗапросаHTTP.ТелоОтвета);
			МассивПараметров = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьЗначениеСоответствия(СоответствиеОтвет, "error.request_params");
			
			ИдентификаторПервойОперации = Неопределено;
			Для Каждого КлючЗначение Из МассивПараметров Цикл
				Если КлючЗначение.Получить("key") = "uid_1c" Тогда
					ИдентификаторПервойОперации = КлючЗначение.Получить("value");
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			МассивВсехОперацийДляПостОбработки = Новый Массив();
			ОперацияДляПодтверждения = Неопределено;
			Для Каждого ОписаниеОперации Из МассивВсехОпераций Цикл
				
				Если ОперацияДляПодтверждения = Неопределено Тогда
					
					Если ОписаниеОперации.Описание.uid_1c = ИдентификаторПервойОперации Тогда
						ОперацияДляПодтверждения = ОписаниеОперации;
					КонецЕсли;
					
					Продолжить;
					
				КонецЕсли;
				
				МассивВсехОперацийДляПостОбработки.Добавить(ОписаниеОперации);
			КонецЦикла;
			
			СтруктураОшибки = Новый Структура;
			СтруктураОшибки.Вставить("Ошибка", СтруктураЗапросаHTTP.ТелоОтвета);
			СтруктураОшибки.Вставить("ЭтоКапча", Истина);
			СтруктураОшибки.Вставить("ОперацияДляПодтверждения", ОперацияДляПодтверждения);
			СтруктураОшибки.Вставить("МассивВсехОпераций", МассивВсехОперацийДляПостОбработки);
			
			Возврат СтруктураОшибки;
		ИначеЕсли ОтветМассив = Неопределено И СтрНайти(СтруктураЗапросаHTTP.ТелоОтвета, "Runtime error occurred during code invocation: Too many API calls") Тогда
			
			СтрокаОшибок = СтруктураЗапросаHTTP.АдресРесурса + Символы.ПС + Символы.ПС + СтруктураЗапросаHTTP.ТелоОтвета;
			
			ОбработатьОшибку(ОписаниеУзелОбмена, СтрокаОшибок);
			ВызватьИсключение СтрокаОшибок;
			
			СтруктураОшибки = Новый Структура;
			СтруктураОшибки.Вставить("Ошибка", СтруктураЗапросаHTTP.ТелоОтвета);
			СтруктураОшибки.Вставить("ЭтоКапча", Истина);
			СтруктураОшибки.Вставить("ОперацияДляПодтверждения", ОперацияДляПодтверждения);
			СтруктураОшибки.Вставить("МассивВсехОпераций", МассивВсехОперацийДляПостОбработки);
			
			Возврат СтруктураОшибки;
			
		КонецЕсли;
		
		Для Н = 0 По ОтветМассив.ВГраница() Цикл
			
			ОписаниеОперации = МассивВсехОпераций[Н + Смещение];
			ОписаниеОперации.Результат = ОтветМассив[Н];
			
			Если ОписаниеОперации.Результат = Ложь Тогда
				
				Если СтрНайти(СтруктураЗапросаHTTP.ТелоОтвета,"photo not found or already assigned to another item") <> 0 Тогда
					СтруктураОшибки.ЗарегистрироватьСсылкиКОбмену.Добавить(ОписаниеОперации.Ссылка);
					
					МассивИдентификаторовФайлов = Новый Массив;
					Если ОписаниеОперации.Описание.Свойство("photo_ids") Тогда
						МассивИдентификаторовФайлов = СтрРазделить(ОписаниеОперации.Описание.photo_ids,",");
					КонецЕсли;
					
					МассивИдентификаторовФайлов.Добавить(ОписаниеОперации.Описание.main_photo_id);
					
					УдалитьФайлыТовараПоИдентификаторам(МассивИдентификаторовФайлов, ОписаниеУзелОбмена.Ссылка);
					
				Иначе
					ОписаниеОперации.Ошибка = СтруктураЗапросаHTTP.ТелоОтвета;
				КонецЕсли;
			КонецЕсли;
			
			МассивОпераций.Добавить(ОписаниеОперации); 
		КонецЦикла;
		
		Смещение = Смещение + Н;
		ОбработатьРезультатМассиваОперация(МассивОпераций, ОписаниеУзелОбмена, СтруктураЗапросаHTTP);
		
	КонецЦикла;
	
	Если СтруктураОшибки.ЗарегистрироватьСсылкиКОбмену.Количество() = 0 Тогда  
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СтруктураОшибки
	
КонецФункции

Процедура ОбработатьРезультатМассиваОперация(МассивОпераций, ОписаниеУзелОбмена, СтруктураЗапросаHTTP)
	
	СтрокаОшибок = "";
	
	Для Каждого СтрОперация Из МассивОпераций Цикл 
		Если СтрОперация.Результат <> Неопределено Тогда
			Если СтрОперация.Результат = Ложь И НЕ ПустаяСтрока(СтрОперация.Ошибка) Тогда
				
				СтрокаОшибок = СтрокаОшибок + СтруктураЗапросаHTTP.АдресРесурса + Символы.ПС + СтрОперация.Ошибка + Символы.ПС + ЗначениеВСтрокуВнутр(СтрОперация.Описание) + "---------------------------------------------------" + Символы.ПС;
				
			Иначе
				
				Если СтрОперация.ИмяМетода = "market.add" Тогда
					
					ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка
					,ПолучитьИдентификаторСтрокой(СтрОперация.Результат.Получить("market_item_id")), "item", ОписаниеУзелОбмена.ТекущаяДата);
					
				ИначеЕсли СтрОперация.ИмяМетода = "market.addProperty" Тогда
					
					ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка
					,ПолучитьИдентификаторСтрокой(СтрОперация.Результат.Получить("property_id")), "property", ОписаниеУзелОбмена.ТекущаяДата);
					
				ИначеЕсли СтрОперация.ИмяМетода = "market.addPropertyVariant" Тогда
					
					ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка
					,ПолучитьИдентификаторСтрокой(СтрОперация.Результат.Получить("variant_id")), "variant", ОписаниеУзелОбмена.ТекущаяДата);
					
				ИначеЕсли СтрОперация.ИмяМетода = "market.groupItems" Тогда
					
					Если СтрОперация.Результат <> Неопределено Тогда
						
						ИдентификаторГруппы = ПолучитьИдентификаторСтрокой(СтрОперация.Результат.Получить("item_group_id"));
						Если Не ЗначениеЗаполнено(ИдентификаторГруппы) Тогда 
							ИдентификаторГруппы = "";
						КонецЕсли;
						
						Для Каждого Характеристика Из СтрОперация.Ссылка Цикл
							
							ДобавитьЗначениеДополнительныхПолейОбъектовМагазина(ОписаниеУзелОбмена.Ссылка, Характеристика, ИдентификаторГруппы
							, "item_group_id", ОписаниеУзелОбмена.ТекущаяДата);
							
						КонецЦикла;
						
					КонецЕсли;
				ИначеЕсли СтрОперация.ИмяМетода = "market.restore" Тогда
					УдалитьЗаписьУдаленияТовараВМагазине(ОписаниеУзелОбмена.Ссылка,СтрОперация.Ссылка);
				ИначеЕсли СтрОперация.ИмяМетода = "market.delete" Тогда
					ДобавитьЗаписьУдаленияТовараВМагазине(ОписаниеУзелОбмена.Ссылка,СтрОперация.Ссылка);
				ИначеЕсли СтрОперация.ИмяМетода = "market.deleteAlbum" Тогда
					УдалениеПодборкиВМагазине(ОписаниеУзелОбмена.Ссылка,СтрОперация.Ссылка);
				ИначеЕсли СтрОперация.ИмяМетода = "market.addAlbum" Тогда
					ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка
					,ПолучитьИдентификаторСтрокой(СтрОперация.Результат.Получить("market_album_id")), "album", ОписаниеУзелОбмена.ТекущаяДата);
				КонецЕсли;
				
				Если СтрОперация.ИмяМетода = "market.add" Или СтрОперация.ИмяМетода = "market.edit"
					Или  СтрОперация.ИмяМетода = "market.addAlbum" Или СтрОперация.ИмяМетода = "market.editAlbum" Тогда
					ДобавитьХешКонтролируемыхРеквизитовМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка, СтрОперация.Хеш);
				КонецЕсли;
				
				Если СтрОперация.Описание.Свойство("stock_amount") Тогда
					ДобавитьОстаткиТоваровМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка, СтрОперация.Описание.stock_amount);
				Иначе
					ДобавитьОстаткиТоваровМагазина(ОписаниеУзелОбмена.Ссылка, СтрОперация.Ссылка, 0);
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПустаяСтрока(СтрокаОшибок) Тогда
		ОбработатьОшибку(ОписаниеУзелОбмена, СтрокаОшибок);
	КонецЕсли;
	
КонецПроцедуры 

Процедура УдалениеПодборкиВМагазине(УзелИнформационнойБазы, СсылкаНаОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Ссылка,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора КАК ТипИдентификатора,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.ДатаЗагрузки КАК ДатаЗагрузки
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка = &СсылкаНаОбъект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.ДатаЗагрузки
	|ИЗ
	|	Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетей КАК ВиртуальныеКаталогиТоваровМагазиновСоцСетей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы
	|			И ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|ГДЕ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка = &СсылкаНаОбъект";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", УзелИнформационнойБазы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		УдалитьСопоставлениеИдентификаторовМагазина(ВыборкаДетальныеЗаписи.УзелИнформационнойБазы,
		ВыборкаДетальныеЗаписи.Ссылка,
		ВыборкаДетальныеЗаписи.Идентификатор,
		ВыборкаДетальныеЗаписи.ТипИдентификатора);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗначениеДополнительныхПолейОбъектовМагазина(УзелИнформационнойБазы, СсылкаНаОбъект, Значение, ИмяПоля, ДатаЗагрузки)
	
	МЗ = РегистрыСведений.ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
	МЗ.УзелИнформационнойБазы = УзелИнформационнойБазы;
	МЗ.Ссылка = СсылкаНаОбъект;
	МЗ.Значение = Значение;
	МЗ.ИмяПоля = ИмяПоля;
	МЗ.ДатаЗагрузки = ДатаЗагрузки;
	МЗ.Записать();
	
КонецПроцедуры

Функция ШаблонВыполненияМассиваОперация() 
	Возврат "var r=[];%1;return r;";
КонецФункции 

Функция ШаблонВыполненияОперации() 
	Возврат "r.push(API.%1(%2));";
КонецФункции

Процедура СоздатьОбновитьНаборыСвойствИЗначений(ОписаниеУзелОбмена, СпособОбменаСМагазином) Экспорт
	
	Если ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик 
		<> ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.ВыгружатьХарактеристикуКакНаборСвойств") Тогда
		Возврат;
	КонецЕсли;
	
	Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда
		Возврат;
	КонецЕсли;
	
	АдресРесурса = "/method/market.getProperties";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&group_id=%1", ОписаниеУзелОбмена.ИдентификаторГруппы);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	РезультатМассив = ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
	
	ТипСтрока1000 = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100));
	
	ТаблицаНаборовСвойств = Новый ТаблицаЗначений;
	ТаблицаНаборовСвойств.Колонки.Добавить("ИдентификаторНоменклатура" , ТипСтрока1000);
	ТаблицаНаборовСвойств.Колонки.Добавить("Наименование" , ТипСтрока1000);
	ТаблицаНаборовСвойств.Колонки.Добавить("ИдентификаторХарактеристика" , ТипСтрока1000);
	ТаблицаНаборовСвойств.Колонки.Добавить("НаименованиеВарианта" , ТипСтрока1000);
	
	Для Каждого ОписаниеНабора Из РезультатМассив Цикл 
		
		МассивВариантов = ОписаниеНабора.Получить("variants");
		
		Если МассивВариантов = Неопределено Или МассивВариантов.Количество() = 0 Тогда
			
			НовСтр = ТаблицаНаборовСвойств.Добавить();
			НовСтр.ИдентификаторНоменклатура = ПолучитьИдентификаторСтрокой(ОписаниеНабора.Получить("id"));
			НовСтр.Наименование = ОписаниеНабора.Получить("title");
			Продолжить;
		КонецЕсли;
		
		Для Каждого ОписаниеВарианта Из МассивВариантов Цикл  
			
			НовСтр = ТаблицаНаборовСвойств.Добавить();
			НовСтр.ИдентификаторНоменклатура = ПолучитьИдентификаторСтрокой(ОписаниеНабора.Получить("id"));
			НовСтр.ИдентификаторХарактеристика = ПолучитьИдентификаторСтрокой(ОписаниеВарианта.Получить("id"));
			НовСтр.Наименование = ОписаниеНабора.Получить("title");
			НовСтр.НаименованиеВарианта = ОписаниеВарианта.Получить("title");
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНаборовСвойств.ИдентификаторНоменклатура КАК ИдентификаторНоменклатура,
	|	ТаблицаНаборовСвойств.ИдентификаторХарактеристика КАК ИдентификаторХарактеристика,
	|	ТаблицаНаборовСвойств.Наименование КАК Наименование,
	|	ТаблицаНаборовСвойств.НаименованиеВарианта КАК НаименованиеВарианта
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТаблицаНаборовСвойств КАК ТаблицаНаборовСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	ХарактеристикиНоменклатуры.Наименование КАК Наименование,
	|	ЕСТЬNULL(СопоставлениеИдентификаторовМагазина_Номенклатура.Идентификатор, """") КАК ИдентификаторНоменклатура,
	|	ЕСТЬNULL(СопоставлениеИдентификаторовМагазина_Характеристика.Идентификатор, """") КАК ИдентификаторХарактеристика
	|ПОМЕСТИТЬ ВТ_ТекНаборы
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазина_Номенклатура
	|			ПО Номенклатура.Ссылка = СопоставлениеИдентификаторовМагазина_Номенклатура.Ссылка
	|				И (СопоставлениеИдентификаторовМагазина_Номенклатура.ТипИдентификатора = ""property"")
	|				И (СопоставлениеИдентификаторовМагазина_Номенклатура.УзелИнформационнойБазы = &УзелОбмена)
	|		ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазина_Характеристика
	|		ПО ХарактеристикиНоменклатуры.Ссылка = СопоставлениеИдентификаторовМагазина_Характеристика.Ссылка
	|			И (СопоставлениеИдентификаторовМагазина_Характеристика.ТипИдентификатора = ""variant"")
	|			И (СопоставлениеИдентификаторовМагазина_Характеристика.УзелИнформационнойБазы = &УзелОбмена)
	|ГДЕ
	|	НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И НЕ ХарактеристикиНоменклатуры.Недействителен
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.ЭтоГруппа
	|	И НЕ Номенклатура.Недействителен
	|	И Номенклатура.ИспользоватьХарактеристики
	|	И ХарактеристикиНоменклатуры.Ссылка В
	|			(ВЫБРАТЬ
	|				НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика КАК Характеристика
	|			ИЗ
	|				РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|			ГДЕ
	|				НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена
	|				И НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|	И НЕ ХарактеристикиНоменклатуры.Владелец В
	|				(ВЫБРАТЬ
	|					ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей.Номенклатура КАК Номенклатура
	|				ИЗ
	|					РегистрСведений.ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей КАК ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей
	|				ГДЕ
	|					ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТекНаборы.Номенклатура КАК Номенклатура,
	|	ВТ_ТекНаборы.Характеристика КАК Характеристика,
	|	ВТ_ТекНаборы.Наименование КАК Наименование,
	|	ВТ_ТекНаборы.ИдентификаторНоменклатура КАК ИдентификаторНоменклатура,
	|	ВТ_ТекНаборы.ИдентификаторХарактеристика КАК ИдентификаторХарактеристика,
	|	ВТ_ТекНаборы.Наименование <> ЕСТЬNULL(ВТ.НаименованиеВарианта, """") КАК ТребуетсяОбновитьНаименованиеХарактеристика,
	|	(ВЫРАЗИТЬ(&НаименованиеНабораВариантов КАК СТРОКА(100))) <> ЕСТЬNULL(ВТ.Наименование, """") КАК ТребуетсяОбновитьНаименованиеНоменклатура
	|ИЗ
	|	ВТ_ТекНаборы КАК ВТ_ТекНаборы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	|		ПО ВТ_ТекНаборы.ИдентификаторНоменклатура = ВТ.ИдентификаторНоменклатура
	|			И ВТ_ТекНаборы.ИдентификаторХарактеристика = ВТ.ИдентификаторХарактеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Наименование
	|ИТОГИ
	|	МАКСИМУМ(ИдентификаторНоменклатура),
	|	МАКСИМУМ(ТребуетсяОбновитьНаименованиеНоменклатура)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("СпособОбменаСМагазином", СпособОбменаСМагазином);
	Запрос.УстановитьПараметр("ТаблицаНаборовСвойств", ТаблицаНаборовСвойств);
	Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("НаименованиеНабораВариантов", ОписаниеУзелОбмена.НаименованиеНабораВариантов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СоответствиеНаборов = Новый Соответствие;
	СоответствиеВариантов = Новый Соответствие;
	МассивВариантов = Новый Массив;
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл 
		
		ОписаниеНабора = Новый Структура;
		ОписаниеНабора.Вставить("Идентификатор" , ВыборкаНоменклатура.ИдентификаторНоменклатура);
		ОписаниеНабора.Вставить("Наименование" , ОписаниеУзелОбмена.НаименованиеНабораВариантов);
		ОписаниеНабора.Вставить("ТребуетсяОбновитьНаименование" , ВыборкаНоменклатура.ТребуетсяОбновитьНаименованиеНоменклатура);
		
		СоответствиеНаборов.Вставить(ВыборкаНоменклатура.Номенклатура, ОписаниеНабора);
		
		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			
			Если (ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторХарактеристика)
				И НЕ ВыборкаДетальныеЗаписи.ТребуетсяОбновитьНаименованиеХарактеристика) Тогда
				Продолжить;
			КонецЕсли;
			
			ОписаниеВарианта = Новый Структура;
			ОписаниеВарианта.Вставить("Идентификатор" , ВыборкаДетальныеЗаписи.ИдентификаторХарактеристика);
			ОписаниеВарианта.Вставить("Наименование" , ВыборкаДетальныеЗаписи.Наименование);
			ОписаниеВарианта.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
			ОписаниеВарианта.Вставить("ТребуетсяОбновитьНаименование" , ВыборкаДетальныеЗаписи.ТребуетсяОбновитьНаименованиеХарактеристика);
			
			СоответствиеВариантов.Вставить(ВыборкаДетальныеЗаписи.Характеристика, ОписаниеВарианта);
			МассивВариантов.Добавить(ВыборкаДетальныеЗаписи.Характеристика);
			
		КонецЦикла;
	КонецЦикла;
	
	МассивВариантов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивВариантов);
	
	МассивОпераций = Новый Массив;
	
	Для Каждого КлючЗначение Из СоответствиеНаборов Цикл 
		
		ОписаниеНабора = КлючЗначение.Значение;
		ОписаниеНабора.Вставить("uid_1c", Строка(Новый УникальныйИдентификатор));
		
		Если ЗначениеЗаполнено(ОписаниеНабора.Идентификатор) И НЕ ОписаниеНабора.ТребуетсяОбновитьНаименование Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеНабораДляОперации = Новый Структура;
		ОписаниеНабораДляОперации.Вставить("group_id" , ОписаниеУзелОбмена.ИдентификаторГруппы);
		ОписаниеНабораДляОперации.Вставить("type" , "text");
		ОписаниеНабораДляОперации.Вставить("title" , ОписаниеНабора.Наименование);
		ОписаниеНабораДляОперации.Вставить("uid_1c" , ОписаниеНабора.uid_1c);
		
		ИмяМетода = "market.addProperty";
		Если ЗначениеЗаполнено(ОписаниеНабора.Идентификатор) И ОписаниеНабора.ТребуетсяОбновитьНаименование Тогда
			ИмяМетода = "market.editProperty";
			ОписаниеНабораДляОперации.Вставить("property_id" , ОписаниеНабора.Идентификатор);
		КонецЕсли;
		
		ОписаниеОперации = Новый Структура;
		ОписаниеОперации.Вставить("ИмяМетода" , ИмяМетода);
		ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеНабораДляОперации));
		ОписаниеОперации.Вставить("Результат" , Неопределено);
		ОписаниеОперации.Вставить("Ошибка" , "");
		ОписаниеОперации.Вставить("Описание" , ОписаниеНабора);
		ОписаниеОперации.Вставить("Ссылка" , КлючЗначение.Ключ);
		
		МассивОпераций.Добавить(ОписаниеОперации);
	КонецЦикла;
	
	ВыполнитьМассивОпераций(МассивОпераций, ОписаниеУзелОбмена);
	
	Для Каждого СтрОперация Из МассивОпераций Цикл 
		Если СтрОперация.Результат <> Неопределено И ПустаяСтрока(СтрОперация.Ошибка) и СтрОперация.ИмяМетода = "market.addProperty" Тогда 
			
			ОписаниеНабора = СоответствиеНаборов.Получить(СтрОперация.Ссылка);
			ОписаниеНабора.Вставить("Идентификатор" , ПолучитьИдентификаторСтрокой(СтрОперация.Результат.Получить("property_id")));
			СоответствиеНаборов.Вставить(СтрОперация.Ссылка, ОписаниеНабора);
			
		КонецЕсли;
	КонецЦикла;
	
	Если МассивОпераций.Количество() Тогда
		ИнтеграцияСМагазинамиСоцСетейСервер.Пауза(1);
	КонецЕсли;
	
	МассивОпераций = Новый Массив;
	
	Для Каждого СтрХарактеристика Из МассивВариантов Цикл
		
		ОписаниеВарианта = СоответствиеВариантов.Получить(СтрХарактеристика);
		ОписаниеВарианта.Вставить("uid_1c", Строка(Новый УникальныйИдентификатор));
		
		Если ОписаниеВарианта = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОписаниеВарианта.Идентификатор) И НЕ ОписаниеВарианта.ТребуетсяОбновитьНаименование Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеНабора = СоответствиеНаборов.Получить(ОписаниеВарианта.Номенклатура); 
		
		Если ОписаниеНабора = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеВариантаДляОперации = Новый Структура;
		ОписаниеВариантаДляОперации.Вставить("group_id" , ОписаниеУзелОбмена.ИдентификаторГруппы);
		ОписаниеВариантаДляОперации.Вставить("property_id" , ОписаниеНабора.Идентификатор);
		ОписаниеВариантаДляОперации.Вставить("title" , ОписаниеВарианта.Наименование);
		ОписаниеВариантаДляОперации.Вставить("uid_1c" , ОписаниеВарианта.uid_1c);
		
		ИмяМетода = "market.addPropertyVariant";
		Если ЗначениеЗаполнено(ОписаниеВарианта.Идентификатор) И ОписаниеВарианта.ТребуетсяОбновитьНаименование Тогда
			ИмяМетода = "market.editPropertyVariant";
			ОписаниеВариантаДляОперации.Вставить("variant_id" , ОписаниеВарианта.Идентификатор);
		КонецЕсли;
		
		ОписаниеОперации = Новый Структура;
		ОписаниеОперации.Вставить("ИмяМетода" , ИмяМетода);
		ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеВариантаДляОперации));
		ОписаниеОперации.Вставить("Результат" , Неопределено);
		ОписаниеОперации.Вставить("Ошибка" , "");
		ОписаниеОперации.Вставить("Описание" , ОписаниеВарианта);
		ОписаниеОперации.Вставить("Ссылка" , СтрХарактеристика);
		
		МассивОпераций.Добавить(ОписаниеОперации);
	КонецЦикла;
	
	ВыполнитьМассивОпераций(МассивОпераций, ОписаниеУзелОбмена);
	
КонецПроцедуры

Функция ПолучитьТекстВыгрузкиТоваров()
	
	Возврат "ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Идентификатор КАК ИдентификаторКатегории,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура.ПометкаУдаления
	|		ИНАЧЕ НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика.ПометкаУдаления
	|	КОНЕЦ КАК ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура.Недействителен
	|		ИНАЧЕ НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика.Недействителен
	|	КОНЕЦ КАК Недействителен
	|ПОМЕСТИТЬ ВТ_ВсяНоменклатураДоступнаДляОбмена
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыИзменения.Ссылка КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ИзмененияХарактеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры.Изменения КАК ХарактеристикиНоменклатурыИзменения
	|ГДЕ
	|	ХарактеристикиНоменклатурыИзменения.Узел = &УзелОбмена
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Характеристика
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей.Изменения КАК НоменклатураХарактеристикДляМагазинаСоцСетейИзменения
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Узел = &УзелОбмена
	|	И НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураИзменения.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ИзмененияНоменклатура
	|ИЗ
	|	Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	|ГДЕ
	|	НоменклатураИзменения.Узел = &УзелОбмена
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураИзменения.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Номенклатура
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей.Изменения КАК НоменклатураХарактеристикДляМагазинаСоцСетейИзменения
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Узел = &УзелОбмена
	|	И НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыИзменения.ВидЦен КАК ВидЦен,
	|	ЦеныНоменклатурыИзменения.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыИзменения.Характеристика КАК Характеристика,
	|	ЦеныНоменклатурыИзменения.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ИзмененияЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.Изменения КАК ЦеныНоменклатурыИзменения
	|ГДЕ
	|	ЦеныНоменклатурыИзменения.Узел = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлыИзменения.Ссылка КАК Файл,
	|	НоменклатураПрисоединенныеФайлыИзменения.Ссылка.ВладелецФайла КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ИзмененияФайл
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы.Изменения КАК НоменклатураПрисоединенныеФайлыИзменения
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлыИзменения.Узел = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыПрисоединенныеФайлыИзменения.Ссылка КАК Файл
	|ПОМЕСТИТЬ ВТ_ИзмененияФайлХарактеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатурыПрисоединенныеФайлы.Изменения КАК ХарактеристикиНоменклатурыПрисоединенныеФайлыИзменения
	|ГДЕ
	|	ХарактеристикиНоменклатурыПрисоединенныеФайлыИзменения.Узел = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияНоменклатура.Номенклатура КАК Номенклатура,
	|	ИСТИНА КАК ИзменениеРеквизиты,
	|	ЛОЖЬ КАК ИзменениеЦена,
	|	ЛОЖЬ КАК ИзменениеФайлы,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	|ПОМЕСТИТЬ ВТ_Изменения
	|ИЗ
	|	ВТ_ИзмененияНоменклатура КАК ВТ_ИзмененияНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВТ_ИзмененияНоменклатура.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	|			И (&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать))
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияЦены.Номенклатура,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ВТ_ИзмененияЦены.Характеристика
	|ИЗ
	|	ВТ_ИзмененияЦены КАК ВТ_ИзмененияЦены
	|ГДЕ
	|	ВТ_ИзмененияЦены.ВидЦен В (&ВидЦеныНоменклатуры, &ВидЦеныНоменклатурыСтарая)
	|	И &ВыгружатьЦены
	|	И ВЫБОР
	|			КОГДА &ВариантВыгрузкиХарактеристик = ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|				ТОГДА ВТ_ИзмененияЦены.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияФайл.Номенклатура,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|ИЗ
	|	ВТ_ИзмененияФайл КАК ВТ_ИзмененияФайл
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать))
	|			И ВТ_ИзмененияФайл.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияХарактеристики.Характеристика.Владелец,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ВТ_ИзмененияХарактеристики.Характеристика
	|ИЗ
	|	ВТ_ИзмененияХарактеристики КАК ВТ_ИзмененияХарактеристики
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|	И &ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияФайлХарактеристики.Файл.ВладелецФайла.Владелец,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ВТ_ИзмененияФайлХарактеристики.Файл.ВладелецФайла
	|ИЗ
	|	ВТ_ИзмененияФайлХарактеристики КАК ВТ_ИзмененияФайлХарактеристики
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|	И &ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Изменения.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ВТ_Изменения.ИзменениеРеквизиты) КАК ИзменениеРеквизиты,
	|	МАКСИМУМ(ВТ_Изменения.ИзменениеЦена) КАК ИзменениеЦена,
	|	МАКСИМУМ(ВТ_Изменения.ИзменениеФайлы) КАК ИзменениеФайлы,
	|	МАКСИМУМ(ВТ_ВсяНоменклатураДоступнаДляОбмена.ИдентификаторКатегории) КАК ИдентификаторКатегории,
	|	ВТ_Изменения.Характеристика КАК Характеристика,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления КАК ПометкаУдаления,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен КАК Недействителен
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_Изменения КАК ВТ_Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсяНоменклатураДоступнаДляОбмена КАК ВТ_ВсяНоменклатураДоступнаДляОбмена
	|		ПО ВТ_Изменения.Номенклатура = ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура
	|			И ВТ_Изменения.Характеристика = ВТ_ВсяНоменклатураДоступнаДляОбмена.Характеристика
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Изменения.Номенклатура,
	|	ВТ_Изменения.Характеристика,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Изменения.Номенклатура,
	|	МАКСИМУМ(ВТ_Изменения.ИзменениеРеквизиты),
	|	МАКСИМУМ(ВТ_Изменения.ИзменениеЦена),
	|	МАКСИМУМ(ВТ_Изменения.ИзменениеФайлы),
	|	МАКСИМУМ(ВТ_ВсяНоменклатураДоступнаДляОбмена.ИдентификаторКатегории),
	|	ВТ_Изменения.Характеристика,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|ИЗ
	|	ВТ_Изменения КАК ВТ_Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсяНоменклатураДоступнаДляОбмена КАК ВТ_ВсяНоменклатураДоступнаДляОбмена
	|		ПО ВТ_Изменения.Номенклатура = ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|	И ВТ_Изменения.ИзменениеЦена
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Изменения.Номенклатура,
	|	ВТ_Изменения.Характеристика,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ИдентификаторКатегории,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Характеристика,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|ИЗ
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена КАК ВТ_ВсяНоменклатураДоступнаДляОбмена
	|ГДЕ
	|	&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен)
	|	И НЕ ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления
	|	И НЕ ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиТоваровМагазинаСоцСетей.Количество) КАК Количество,
	|	ОстаткиТоваровМагазинаСоцСетей.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ВыгруженныеОстатки
	|ИЗ
	|	РегистрСведений.ОстаткиТоваровМагазинаСоцСетей КАК ОстаткиТоваровМагазинаСоцСетей
	|ГДЕ
	|	&ВыгружатьОстаток
	|	И ОстаткиТоваровМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена
	|	И ВЫБОР
	|			КОГДА &ВариантВыгрузкиХарактеристик = ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|				ТОГДА ОстаткиТоваровМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваровМагазинаСоцСетей.Номенклатура,
	|	ОстаткиТоваровМагазинаСоцСетей.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиТоваров.Количество) КАК Количество,
	|	ОстаткиТоваров.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
	|ГДЕ
	|	&ВыгружатьОстаток
	|	И ВЫБОР
	|			КОГДА &ЕстьОтборПоСкладам
	|				ТОГДА (ОстаткиТоваров.Организация, ОстаткиТоваров.СтруктурнаяЕдиница) В
	|						(ВЫБРАТЬ
	|							ИнтеграцияСМагазинамиСоцСетейСтруктурныеЕдиницы.Ссылка.Организация КАК Организация,
	|							ИнтеграцияСМагазинамиСоцСетейСтруктурныеЕдиницы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|						ИЗ
	|							ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.СтруктурныеЕдиницы КАК ИнтеграцияСМагазинамиСоцСетейСтруктурныеЕдиницы
	|						ГДЕ
	|							ИнтеграцияСМагазинамиСоцСетейСтруктурныеЕдиницы.Ссылка = &УзелОбмена)
	|			ИНАЧЕ ОстаткиТоваров.Организация В
	|					(ВЫБРАТЬ
	|						ИнтеграцияСМагазинамиСоцСетей.Организация КАК Организация
	|					ИЗ
	|						ПланОбмена.ИнтеграцияСМагазинамиСоцСетей КАК ИнтеграцияСМагазинамиСоцСетей
	|					ГДЕ
	|						ИнтеграцияСМагазинамиСоцСетей.Ссылка = &УзелОбмена)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ВариантВыгрузкиХарактеристик = ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|				ТОГДА ОстаткиТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ОстаткиТоваров.Номенклатура В
	|			(ВЫБРАТЬ
	|				ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура КАК Номенклатура
	|			ИЗ
	|				ВТ_ВсяНоменклатураДоступнаДляОбмена КАК ВТ_ВсяНоменклатураДоступнаДляОбмена)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваров.Номенклатура,
	|	ОстаткиТоваров.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_ВыгруженныеОстатки.Количество, 0) КАК КоличествоОстатокВыгруженный,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Остатки.Количество, 0) КАК ЧИСЛО(15, 0)) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ВТ_ВыгруженныеОстатки.Количество, 0) <> (ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Остатки.Количество, 0) КАК ЧИСЛО(15, 0)))
	|		И (ЕСТЬNULL(ВТ_ВыгруженныеОстатки.Количество, 0) > 0
	|			ИЛИ (ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Остатки.Количество, 0) КАК ЧИСЛО(15, 0))) > 0) КАК ТребуетсяОбновитьОстаток,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ИзмененияОстаток
	|ИЗ
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена КАК ВТ_ВсяНоменклатураДоступнаДляОбмена
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыгруженныеОстатки КАК ВТ_ВыгруженныеОстатки
	|		ПО ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура = ВТ_ВыгруженныеОстатки.Номенклатура
	|			И ВТ_ВсяНоменклатураДоступнаДляОбмена.Характеристика = ВТ_ВыгруженныеОстатки.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура = ВТ_Остатки.Номенклатура
	|			И ВТ_ВсяНоменклатураДоступнаДляОбмена.Характеристика = ВТ_Остатки.Характеристика
	|ГДЕ
	|	&ВыгружатьОстаток
	|	И (&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен)
	|			ИЛИ ЕСТЬNULL(ВТ_ВыгруженныеОстатки.Количество, 0) <> (ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Остатки.Количество, 0) КАК ЧИСЛО(15, 0)))
	|				И (ЕСТЬNULL(ВТ_ВыгруженныеОстатки.Количество, 0) > 0
	|					ИЛИ (ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Остатки.Количество, 0) КАК ЧИСЛО(15, 0))) > 0))
	|	И НЕ ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления
	|	И НЕ ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ВсяНоменклатураПред
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияОстаток.Номенклатура,
	|	ВТ_ИзмененияОстаток.Характеристика
	|ИЗ
	|	ВТ_ИзмененияОстаток КАК ВТ_ИзмененияОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВсяНоменклатураПред.Номенклатура КАК Номенклатура,
	|	ВТ_ВсяНоменклатураПред.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ВсяНоменклатура
	|ИЗ
	|	ВТ_ВсяНоменклатураПред КАК ВТ_ВсяНоменклатураПред
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЛОЖЬ КАК ФайлХарактеристики,
	|	1 КАК Приоритет,
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Файл,
	|	НоменклатураПрисоединенныеФайлы.Расширение КАК Расширение
	|ПОМЕСТИТЬ ВТ_ФайлыДляВыгрузки
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|			ПО НоменклатураПрисоединенныеФайлы.Ссылка = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
	|	И ВТ_Номенклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И (НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPEG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""PNG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""GIF"")
	|	И НоменклатураПрисоединенныеФайлы.Размер <= 52428800
	|	И (&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|			ИЛИ &СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен))
	|	И ВЫБОР
	|			КОГДА ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота ЕСТЬ NULL
	|					ИЛИ ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота > 400
	|					И ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина > 400
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Номенклатура,
	|	ВТ_Номенклатура.Характеристика,
	|	ИСТИНА,
	|	2,
	|	ХарактеристикиНоменклатурыПрисоединенныеФайлы.Ссылка,
	|	ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыПрисоединенныеФайлы КАК ХарактеристикиНоменклатурыПрисоединенныеФайлы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|			ПО ХарактеристикиНоменклатурыПрисоединенныеФайлы.Ссылка = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|		ПО ВТ_Номенклатура.Характеристика = ХарактеристикиНоменклатурыПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И НЕ ХарактеристикиНоменклатурыПрисоединенныеФайлы.ПометкаУдаления
	|	И (ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""JPG""
	|			ИЛИ ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""JPEG""
	|			ИЛИ ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""PNG""
	|			ИЛИ ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""GIF"")
	|	И ХарактеристикиНоменклатурыПрисоединенныеФайлы.Размер <= 52428800
	|	И (&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|			ИЛИ &СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен))
	|	И ВЫБОР
	|			КОГДА ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота ЕСТЬ NULL
	|					ИЛИ ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота > 400
	|					И ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина > 400
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Номенклатура,
	|	ВТ_Номенклатура.Характеристика,
	|	ИСТИНА,
	|	3,
	|	НоменклатураПрисоединенныеФайлы.Ссылка,
	|	НоменклатураПрисоединенныеФайлы.Расширение
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|			ПО НоменклатураПрисоединенныеФайлы.Ссылка = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	&ДобавлятьФайлыХарактеристикиИзНоменклатуры
	|	И &ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
	|	И (НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPEG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""PNG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""GIF"")
	|	И НоменклатураПрисоединенныеФайлы.Размер <= 52428800
	|	И ВТ_Номенклатура.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И (&СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения)
	|			ИЛИ &СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен))
	|	И ВЫБОР
	|			КОГДА ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота ЕСТЬ NULL
	|					ИЛИ ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота > 400
	|					И ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина > 400
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатура.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЕСТЬNULL(СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор, НЕОПРЕДЕЛЕНО)) КАК Идентификатор,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
	|ИЗ
	|	ВТ_ВсяНоменклатура КАК ВТ_ВсяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			И (ВТ_ВсяНоменклатура.Номенклатура = (ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.Номенклатура)))
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item"")
	|ГДЕ
	|	ВТ_ВсяНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|				ТОГДА НЕ СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор ЕСТЬ NULL
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсяНоменклатура.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатура.Номенклатура,
	|	ЕСТЬNULL(СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор, НЕОПРЕДЕЛЕНО),
	|	ВТ_ВсяНоменклатура.Характеристика
	|ИЗ
	|	ВТ_ВсяНоменклатура КАК ВТ_ВсяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			И (ВТ_ВсяНоменклатура.Характеристика = (ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.ХарактеристикиНоменклатуры)))
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item"")
	|ГДЕ
	|	&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И ВТ_ВсяНоменклатура.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|				ТОГДА НЕ СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор ЕСТЬ NULL
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТ_ВсяНоменклатура.Характеристика КАК Характеристика,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор
	|ИЗ
	|	ВТ_ВсяНоменклатура КАК ВТ_ВсяНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВТ_ВсяНоменклатура.Характеристика = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""variant"")
	|ГДЕ
	|	&ВариантВыгрузкиХарактеристик = ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.ВыгружатьХарактеристикуКакНаборСвойств)
	|	И ВЫБОР
	|			КОГДА &СпособОбменаСМагазином = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ФайлыДляВыгрузки.Номенклатура КАК Номенклатура,
	|	ВТ_ФайлыДляВыгрузки.Характеристика КАК Характеристика,
	|	ВТ_ФайлыДляВыгрузки.Файл КАК ФайлКартинки,
	|	ВТ_ФайлыДляВыгрузки.Расширение КАК Расширение,
	|	ВТ_ФайлыДляВыгрузки.Характеристика.ФайлКартинки = ВТ_ФайлыДляВыгрузки.Файл
	|		ИЛИ ВТ_ФайлыДляВыгрузки.Номенклатура.ФайлКартинки = ВТ_ФайлыДляВыгрузки.Файл КАК ЭтоОсновнойФайл,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор КАК ИдентификаторФайла,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор ЕСТЬ NULL КАК ТребуетсяЗагрузка,
	|	ВТ_ФайлыДляВыгрузки.Приоритет КАК Приоритет,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота, 0) КАК ФайлКартинкиВысота,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина, 0) КАК ФайлКартинкиШирина
	|ИЗ
	|	ВТ_ФайлыДляВыгрузки КАК ВТ_ФайлыДляВыгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|		ПО ВТ_ФайлыДляВыгрузки.Номенклатура = СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура
	|			И ВТ_ФайлыДляВыгрузки.Характеристика = СопоставлениеФайловДляМагазинаСоцСетей.Характеристика
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			И ВТ_ФайлыДляВыгрузки.Файл = СопоставлениеФайловДляМагазинаСоцСетей.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|		ПО ВТ_ФайлыДляВыгрузки.Файл = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|ГДЕ
	|	&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И ВТ_ФайлыДляВыгрузки.ФайлХарактеристики
	|	И ВТ_ФайлыДляВыгрузки.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И &СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ЭтоОсновнойФайл УБЫВ,
	|	Приоритет,
	|	ФайлКартинки
	|ИТОГИ
	|	МАКСИМУМ(Номенклатура),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФайлКартинки)
	|ПО
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ФайлыДляВыгрузки.Номенклатура КАК Номенклатура,
	|	ВТ_ФайлыДляВыгрузки.Файл КАК ФайлКартинки,
	|	ВТ_ФайлыДляВыгрузки.Расширение КАК Расширение,
	|	ВТ_ФайлыДляВыгрузки.Номенклатура.ФайлКартинки = ВТ_ФайлыДляВыгрузки.Файл КАК ЭтоОсновнойФайл,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор КАК ИдентификаторФайла,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор ЕСТЬ NULL КАК ТребуетсяЗагрузка,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ВТ_ФайлыДляВыгрузки.Приоритет КАК Приоритет,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота, 0) КАК ФайлКартинкиВысота,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина, 0) КАК ФайлКартинкиШирина
	|ИЗ
	|	ВТ_ФайлыДляВыгрузки КАК ВТ_ФайлыДляВыгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|		ПО ВТ_ФайлыДляВыгрузки.Номенклатура = СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			И ВТ_ФайлыДляВыгрузки.Файл = СопоставлениеФайловДляМагазинаСоцСетей.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|		ПО ВТ_ФайлыДляВыгрузки.Файл = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|ГДЕ
	|	НЕ ВТ_ФайлыДляВыгрузки.ФайлХарактеристики
	|	И &СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ЭтоОсновнойФайл УБЫВ,
	|	Приоритет,
	|	ФайлКартинки
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФайлКартинки),
	|	МАКСИМУМ(Характеристика)
	|ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихОсновнаяЦена.Цена, 0) КАК ОсновнаяЦена,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСтараяЦена.Цена, 0) > ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихОсновнаяЦена.Цена, 0)
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСтараяЦена.Цена, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтараяЦена,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.Характеристика КАК Характеристика
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ТекущаяДата,
	|				(Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|							ВТ_Номенклатура.Характеристика КАК Характеристика
	|						ИЗ
	|							ВТ_Номенклатура КАК ВТ_Номенклатура
	|						ГДЕ
	|							ВТ_Номенклатура.ИзменениеЦена
	|							И НЕ ВТ_Номенклатура.ПометкаУдаления
	|							И НЕ ВТ_Номенклатура.Недействителен)
	|					И ВидЦен = &ВидЦеныНоменклатуры) КАК ЦеныНоменклатурыСрезПоследнихОсновнаяЦена
	|		ПО ВТ_Номенклатура.Номенклатура = ЦеныНоменклатурыСрезПоследнихОсновнаяЦена.Номенклатура
	|			И ВТ_Номенклатура.Номенклатура = ЦеныНоменклатурыСрезПоследнихОсновнаяЦена.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ТекущаяДата,
	|				(Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|							ВТ_Номенклатура.Характеристика КАК Характеристика
	|						ИЗ
	|							ВТ_Номенклатура КАК ВТ_Номенклатура
	|						ГДЕ
	|							ВТ_Номенклатура.ИзменениеЦена
	|							И НЕ ВТ_Номенклатура.ПометкаУдаления
	|							И НЕ ВТ_Номенклатура.Недействителен)
	|					И ВидЦен = &ВидЦеныНоменклатурыСтарая) КАК ЦеныНоменклатурыСрезПоследнихСтараяЦена
	|		ПО ВТ_Номенклатура.Характеристика = ЦеныНоменклатурыСрезПоследнихСтараяЦена.Характеристика
	|			И ВТ_Номенклатура.Характеристика = ЦеныНоменклатурыСрезПоследнихСтараяЦена.Характеристика
	|ГДЕ
	|	ВТ_Номенклатура.ИзменениеЦена
	|	И &ВыгружатьЦены
	|	И НЕ ВТ_Номенклатура.ПометкаУдаления
	|	И НЕ ВТ_Номенклатура.Недействителен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияОстаток.Номенклатура КАК Номенклатура,
	|	ВТ_ИзмененияОстаток.КоличествоОстатокВыгруженный КАК КоличествоОстатокВыгруженный,
	|	ВТ_ИзмененияОстаток.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТ_ИзмененияОстаток.ТребуетсяОбновитьОстаток КАК ТребуетсяОбновитьОстаток,
	|	ВТ_ИзмененияОстаток.Характеристика КАК Характеристика
	|ИЗ
	|	ВТ_ИзмененияОстаток КАК ВТ_ИзмененияОстаток
	|ГДЕ
	|	&ВыгружатьОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСправочник.Ссылка КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(НоменклатураСправочник.Комментарий КАК СТРОКА(1))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(НоменклатураСправочник.Комментарий КАК СТРОКА(1000))
	|		КОГДА (ВЫРАЗИТЬ(НоменклатураСправочник.НаименованиеПолное КАК СТРОКА(1))) <> """"
	|			ТОГДА НоменклатураСправочник.НаименованиеПолное
	|		ИНАЧЕ НоменклатураСправочник.Наименование
	|	КОНЕЦ КАК Описание,
	|	ВЫРАЗИТЬ(НоменклатураСправочник.Наименование КАК СТРОКА(100)) КАК Наименование,
	|	НоменклатураСправочник.Артикул КАК Артикул,
	|	НоменклатураСправочник.ПометкаУдаления КАК ПометкаУдаления,
	|	НоменклатураСправочник.ФайлКартинки КАК ФайлКартинки,
	|	НоменклатураСправочник.Вес * 1000 КАК Вес,
	|	НоменклатураСправочник.Высота * 10 КАК Высота,
	|	НоменклатураСправочник.Длина * 10 КАК Длина,
	|	НоменклатураСправочник.Объем КАК Объем,
	|	НоменклатураСправочник.Ширина * 10 КАК Ширина,
	|	ВТ_Номенклатура.ИдентификаторКатегории КАК ИдентификаторКатегории,
	|	ЕСТЬNULL(ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.Хеш, """") КАК ХешПолейНоменклатуры,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор КАК ИдентификаторФайлКартинки,
	|	НоменклатураСправочник.ФайлКартинки.Расширение КАК ФайлКартинкиРасширение,
	|	ВТ_Номенклатура.Характеристика КАК Характеристика,
	|	"""" КАК НаименованиеХарактеристика,
	|	"""" КАК НаименованиеДляПечатиХарактеристика,
	|	"""" КАК АртикулХарактеристика,
	|	НЕОПРЕДЕЛЕНО КАК ФайлКартинкиНоменклатура,
	|	НЕОПРЕДЕЛЕНО КАК ФайлКартинкиРасширениеНоменклатура,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторФайлКартинкиНоменклатура,
	|	НЕОПРЕДЕЛЕНО КАК ОсновнойВариант,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота, 0) КАК ФайлКартинкиВысота,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина, 0) КАК ФайлКартинкиШирина,
	|	0 КАК ФайлКартинкиНоменклатураВысота,
	|	0 КАК ФайлКартинкиНоменклатураШирина,
	|	НоменклатураСправочник.Недействителен КАК Недействителен,
	|	НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.Ссылка ЕСТЬ NULL КАК Актуальна
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей КАК ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей
	|			ПО НоменклатураСправочник.Ссылка = ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.Ссылка
	|				И (ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|			ПО НоменклатураСправочник.Ссылка = СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура
	|				И (СопоставлениеФайловДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|				И (НоменклатураСправочник.ФайлКартинки = (ВЫРАЗИТЬ(СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Справочник.НоменклатураПрисоединенныеФайлы)))
	|				И (СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|			ПО НоменклатураСправочник.ФайлКартинки = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураСправочник.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей КАК НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.Ссылка
	|			И (НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|ГДЕ
	|	ВТ_Номенклатура.ИзменениеРеквизиты
	|	И ВТ_Номенклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И &СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НоменклатураСправочник.Ссылка,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(НоменклатураСправочник.Комментарий КАК СТРОКА(1))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(НоменклатураСправочник.Комментарий КАК СТРОКА(1000))
	|		КОГДА (ВЫРАЗИТЬ(НоменклатураСправочник.НаименованиеПолное КАК СТРОКА(1))) <> """"
	|			ТОГДА НоменклатураСправочник.НаименованиеПолное
	|		ИНАЧЕ НоменклатураСправочник.Наименование
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(НоменклатураСправочник.Наименование КАК СТРОКА(100)),
	|	НоменклатураСправочник.Артикул,
	|	ХарактеристикиНоменклатуры.ПометкаУдаления,
	|	ХарактеристикиНоменклатуры.ФайлКартинки,
	|	НоменклатураСправочник.Вес * 1000,
	|	НоменклатураСправочник.Высота * 10,
	|	НоменклатураСправочник.Длина * 10,
	|	НоменклатураСправочник.Объем,
	|	НоменклатураСправочник.Ширина * 10,
	|	ВТ_Номенклатура.ИдентификаторКатегории,
	|	ЕСТЬNULL(ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.Хеш, """"),
	|	СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор,
	|	ХарактеристикиНоменклатуры.ФайлКартинки.Расширение,
	|	ВТ_Номенклатура.Характеристика,
	|	ХарактеристикиНоменклатуры.Наименование,
	|	ХарактеристикиНоменклатуры.НаименованиеДляПечати,
	|	ХарактеристикиНоменклатуры.Артикул,
	|	НоменклатураСправочник.ФайлКартинки,
	|	НоменклатураСправочник.ФайлКартинки.Расширение,
	|	СопоставлениеФайловМагазинаНоменклатура.Идентификатор,
	|	НЕ ЗначенияНоменклатурыПоУмолчанию.Характеристика ЕСТЬ NULL,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота, 0),
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина, 0),
	|	ДополнительныеПоляФайловМагазинаНоменклатура.Высота,
	|	ДополнительныеПоляФайловМагазинаНоменклатура.Ширина,
	|	ХарактеристикиНоменклатуры.Недействителен,
	|	НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.Ссылка ЕСТЬ NULL
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловМагазинаНоменклатура
	|			ПО НоменклатураСправочник.ФайлКартинки = ДополнительныеПоляФайловМагазинаНоменклатура.Файл
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураСправочник.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|			ПО ХарактеристикиНоменклатуры.ФайлКартинки = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|			ПО ХарактеристикиНоменклатуры.Владелец = СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура
	|				И ХарактеристикиНоменклатуры.Ссылка = СопоставлениеФайловДляМагазинаСоцСетей.Характеристика
	|				И ХарактеристикиНоменклатуры.ФайлКартинки = СопоставлениеФайловДляМагазинаСоцСетей.Файл
	|				И (СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей КАК ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей
	|			ПО ХарактеристикиНоменклатуры.Ссылка = ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.Ссылка
	|				И (ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|		ПО ВТ_Номенклатура.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловМагазинаНоменклатура
	|		ПО (НоменклатураСправочник.Ссылка = СопоставлениеФайловМагазинаНоменклатура.Номенклатура)
	|			И ВТ_Номенклатура.Характеристика = СопоставлениеФайловМагазинаНоменклатура.Характеристика
	|			И (НоменклатураСправочник.ФайлКартинки = СопоставлениеФайловМагазинаНоменклатура.Файл)
	|			И (СопоставлениеФайловМагазинаНоменклатура.УзелИнформационнойБазы = &УзелОбмена)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияНоменклатурыПоУмолчанию КАК ЗначенияНоменклатурыПоУмолчанию
	|		ПО ВТ_Номенклатура.Номенклатура = ЗначенияНоменклатурыПоУмолчанию.Номенклатура
	|			И ВТ_Номенклатура.Характеристика = ЗначенияНоменклатурыПоУмолчанию.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей КАК НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей
	|		ПО ВТ_Номенклатура.Характеристика = НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.Ссылка
	|			И (НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|ГДЕ
	|	&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И ВТ_Номенклатура.ИзменениеРеквизиты
	|	И ВТ_Номенклатура.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияНоменклатура.Номенклатура КАК Ссылка
	|ИЗ
	|	ВТ_ИзмененияНоменклатура КАК ВТ_ИзмененияНоменклатура
	|ГДЕ
	|	&СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияФайл.Файл
	|ИЗ
	|	ВТ_ИзмененияФайл КАК ВТ_ИзмененияФайл
	|ГДЕ
	|	&СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияХарактеристики.Характеристика
	|ИЗ
	|	ВТ_ИзмененияХарактеристики КАК ВТ_ИзмененияХарактеристики
	|ГДЕ
	|	&СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияФайлХарактеристики.Файл
	|ИЗ
	|	ВТ_ИзмененияФайлХарактеристики КАК ВТ_ИзмененияФайлХарактеристики
	|ГДЕ
	|	&СпособОбменаСМагазином <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияЦены.ВидЦен КАК ВидЦен,
	|	ВТ_ИзмененияЦены.Номенклатура КАК Номенклатура,
	|	ВТ_ИзмененияЦены.Характеристика КАК Характеристика,
	|	ВТ_ИзмененияЦены.Период КАК Период
	|ИЗ
	|	ВТ_ИзмененияЦены КАК ВТ_ИзмененияЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Характеристика КАК Характеристика,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей.Изменения КАК НоменклатураХарактеристикДляМагазинаСоцСетейИзменения
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейИзменения.Узел = &УзелОбмена";
	
КонецФункции

Функция ПолучитьСтруктураЗапросаHTTPДляФайлов()
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос("");
	Возврат СтруктураЗапросаHTTP;
КонецФункции

Функция ПолучитьСсылкуНаСтрокуАвторизации(НастройкиУзла, ЭтоСообщество) Экспорт
	
	Если НастройкиУзла.МагазинДляИнтеграции = ПредопределенноеЗначение("Перечисление.МагазиныСоцСетейДляИнтеграции.VK") Тогда
		
		Если ЭтоСообщество Тогда
			СтрШаблон = "https://oauth.vk.com/authorize?v=%1&client_id=%2&group_ids=%3&scope=messages,manage,docs&redirect_uri=http://oauth.vk.com/blank.html&display=page&response_type=token";
			Возврат СтрШаблон(СтрШаблон, ПолучитьАктуальнуюВерсиюAPI(), НастройкиУзла.КодПриложения, НастройкиУзла.ИдентификаторГруппы);
		Иначе
			СтрШаблон = "https://oauth.vk.com/authorize?v=%1&client_id=%2&scope=groups,market,photos,offline,docs&redirect_uri=http://oauth.vk.com/blank.html&display=page&response_type=token";
			Возврат СтрШаблон(СтрШаблон, ПолучитьАктуальнуюВерсиюAPI(), НастройкиУзла.КодПриложения);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Процедура ВыполнитьОбменИзФормы(Параметры, АдресХранилища = Неопределено) Экспорт
	
	ВыполнитьОбменИнтерактивно(Параметры.СсылкаНаУзелОбмена, Параметры.ЭтоПолныйОбмен);
	
КонецПроцедуры

Процедура ВыполнитьОбменИнтерактивно(СсылкаНаУзелОбмена, ЭтоПолныйОбмен = Ложь, ЭтоФоновоеЗадание = Ложь) Экспорт
	
	ОписаниеУзелОбмена = ПолучитьОписаниеУзлаОбмена(СсылкаНаУзелОбмена);
	
	Попытка
		
		ДлительныеОперации.СообщитьПрогресс(0, "Отправка статусов заказов...");
		
		ИзменитьЗаказы(ОписаниеУзелОбмена);
		
		ДлительныеОперации.СообщитьПрогресс(20, "Отправка статусов заказов...ОК
		|Загрузка заказов...");
		
		ЗагрузитьЗаказы(ОписаниеУзелОбмена); 
		
		ДлительныеОперации.СообщитьПрогресс(40, "Отправка статусов заказов...ОК
		|Загрузка заказов...ОК
		|Проверка файлов номенклатур...");
		
		ПроверитьОбновитьФайлыНоменклатур(ОписаниеУзелОбмена);
		
		СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество");
		
		Если ОписаниеУзелОбмена.ВыгружатьИзмененияНоменклатуры Тогда
			СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОписаниеУзелОбмена.ДатаОперации) Тогда
			СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен");
		КонецЕсли;
		
		Если ЭтоПолныйОбмен Тогда
			СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен");
			УдалитьРегламентноеЗаданиеОбмена(СсылкаНаУзелОбмена);
		КонецЕсли;
		
		Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен") И ЭтоФоновоеЗадание Тогда
			Возврат;
		КонецЕсли;
		
		ДлительныеОперации.СообщитьПрогресс(60, "Отправка статусов заказов...ОК
		|Загрузка заказов...ОК
		|Проверка файлов номенклатур...ОК
		|Выгрузка изменений номенклатуры...");
		
		ОперацияУспешна = ВыгрузитьНоменклатуру(ОписаниеУзелОбмена, СпособОбменаСМагазином); 
		
		Если ОперацияУспешна <> Истина Тогда
			
			ДлительныеОперации.СообщитьПрогресс(80, "Отправка статусов заказов...ОК
			|Загрузка заказов...ОК
			|Проверка файлов номенклатур...ОК
			|Выгрузка изменений номенклатуры...Капча");
			
			Возврат;
		КонецЕсли;
		
		ДлительныеОперации.СообщитьПрогресс(100, "Отправка статусов заказов...ОК
		|Загрузка заказов...ОК
		|Проверка файлов номенклатур...ОК
		|Выгрузка изменений номенклатуры...ОК
		|	Сбор данных...ОК
		|	Обработка файлов...ОК
		|	Обработка номенклатуры...ОК
		|");
		
		ОбработатьПодборкиТоваров(ОписаниеУзелОбмена, ЭтоПолныйОбмен);
		
		МЗ = РегистрыСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
		МЗ.УзелИнформационнойБазы = ОписаниеУзелОбмена.Ссылка;
		МЗ.ДатаОперации = ОписаниеУзелОбмена.ТекущаяДата;
		МЗ.Записать();
		
		Если НЕ ЭтоФоновоеЗадание Тогда
			ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.СоздатьРегламентноеЗаданиеОбмена(СсылкаНаУзелОбмена);
		КонецЕсли;
		
	Исключение
		
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ОбработатьОшибку(ОписаниеУзелОбмена, ПредставлениеОшибки);
		
		ДлительныеОперации.СообщитьПрогресс(0, ПредставлениеОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработатьОшибку(ОписаниеУзелОбмена, ПредставлениеОшибки)
	
	ОписаниеОшибки = СтрШаблон("Идентификатор: %1
	|МагазинДляИнтеграции: %2
	|Наименование: %3
	|Описание: %4",
	Новый УникальныйИдентификатор,
	ОписаниеУзелОбмена.МагазинДляИнтеграции,
	ОписаниеУзелОбмена.Наименование,
	ПредставлениеОшибки);
	
	Если ОписаниеУзелОбмена.ИспользоватьОповещения Тогда
		
		ТемаПисьма = СтрШаблон("Ошибка. Интеграция %1. %2", ОписаниеУзелОбмена.МагазинДляИнтеграции, ОписаниеУзелОбмена.Наименование);
		
		СоздатьОтправитьEmail(ОписаниеУзелОбмена,
		ТемаПисьма,
		ОписаниеОшибки);
		
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("ИнтеграцияСМагазином", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
	
КонецПроцедуры


Процедура СоздатьОтправитьEmail(ОписаниеУзелОбмена, ТемаПисьма, ТелоПисьма, ЭтоОшибка = Ложь)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ТипСобытия", Перечисления.ТипыСобытий.ЭлектронноеПисьмо);
	
	НовоеСобытие = Документы.Событие.СоздатьДокумент();
	НовоеСобытие.Заполнить(ЗначенияЗаполнения);
	НовоеСобытие.Дата = ТекущаяДатаСеанса();
	НовоеСобытие.УчетнаяЗапись = ОписаниеУзелОбмена.УчетнаяЗаписьДляОповещения;
	НовоеСобытие.ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ЭлектронноеПисьмо");
	НовоеСобытие.Тема = ТемаПисьма;
	НовоеСобытие.СодержаниеHTML = ТелоПисьма;
	НовоеСобытие.Содержание = ТелоПисьма;
	
	НовоеСобытие.Участники.Очистить();
	
	Для Каждого Стр Из ОписаниеУзелОбмена.ПодпискиНаСобытие Цикл
		
		Если ЭтоОшибка И НЕ Стр.Ошибка Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НовоеСобытие.Участники.Добавить();
		НоваяСтрока.Контакт = Стр.ЭлектроннаяПочта;
		НоваяСтрока.КакСвязаться = Стр.ЭлектроннаяПочта;
		НоваяСтрока.ТипПолучателяЭлектронногоПисьма 
		= ПредопределенноеЗначение("Перечисление.ТипыПолучателейЭлектронногоПисьма.Кому");
		
	КонецЦикла;
	
	Если ОписаниеУзелОбмена.ОтправлятьСкрытуюКопиюВПоддержку Тогда
		НоваяСтрока = НовоеСобытие.Участники.Добавить();
		НоваяСтрока.Контакт = "Команда разработки 1С:УНФ <sbm@1c.ru>";
		НоваяСтрока.КакСвязаться = "sbm@1c.ru";
		НоваяСтрока.ТипПолучателяЭлектронногоПисьма 
		= ПредопределенноеЗначение("Перечисление.ТипыПолучателейЭлектронногоПисьма.СкрытаяКопия");
	КонецЕсли;
	
	Если НовоеСобытие.Участники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НовоеСобытие.Записать();
	
	НовоеСобытие.ОтправитьЭлектронноеПисьмо();
	
КонецПроцедуры

Процедура ОбработатьПодборкиТоваров(ОписаниеУзелОбмена, ЭтоПолныйОбмен = Ложь) Экспорт
	
	МассивПодборок = ПолучитьПодборкиТоваров(ОписаниеУзелОбмена);
	
	// Создание или изменение подборки товара
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетейИзменения.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ИзмененияПодборок
	|ИЗ
	|	Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Изменения КАК ВиртуальныеКаталогиТоваровМагазиновСоцСетейИзменения
	|ГДЕ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетейИзменения.Узел = &УзелИнформационнойБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка КАК Ссылка,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Наименование КАК Наименование,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ЭтоОсновной КАК ЭтоОсновной,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ЭтоСкрытый КАК ЭтоСкрытый,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ПометкаУдаления КАК ПометкаУдаления,
	|	ЕСТЬNULL(СопоставлениеИдентификаторовМагазинаПодборка.Идентификатор, """") КАК Идентификатор,
	|	ЕСТЬNULL(СопоставлениеИдентификаторовМагазинаФайлыАльбома.Идентификатор, """") КАК ИдентификаторФайла,
	|	ЕСТЬNULL(ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.Хеш, """") КАК Хеш,
	|	СопоставлениеИдентификаторовМагазинаПодборка.Идентификатор ЕСТЬ NULL КАК ТребуетсяСоздать,
	|	СопоставлениеИдентификаторовМагазинаФайлыАльбома.Идентификатор ЕСТЬ NULL КАК ТребуетсяСоздатьФайл,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Логотип КАК ФайлКартинки,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота, 0) КАК ФайлКартинкиВысота,
	|	ЕСТЬNULL(ДополнительныеПоляФайловДляМагазинаСоцСетей.Ширина, 0) КАК ФайлКартинкиШирина,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Логотип.Расширение КАК ФайлКартинкиРасширение
	|ИЗ
	|	Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетей КАК ВиртуальныеКаталогиТоваровМагазиновСоцСетей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазинаПодборка
	|		ПО ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка = СопоставлениеИдентификаторовМагазинаПодборка.Ссылка
	|			И ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = СопоставлениеИдентификаторовМагазинаПодборка.УзелИнформационнойБазы
	|			И (СопоставлениеИдентификаторовМагазинаПодборка.ТипИдентификатора = ""album"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазинаФайлыАльбома
	|		ПО ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Логотип = СопоставлениеИдентификаторовМагазинаФайлыАльбома.Ссылка
	|			И ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = СопоставлениеИдентификаторовМагазинаФайлыАльбома.УзелИнформационнойБазы
	|			И (СопоставлениеИдентификаторовМагазинаФайлыАльбома.ТипИдентификатора = ""photo_album"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей КАК ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей
	|		ПО ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка = ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.Ссылка
	|			И ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.УзелИнформационнойБазы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|		ПО ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Логотип = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЭтоПолныйОбмен
	|				ТОГДА ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = &УзелИнформационнойБазы
	|			ИНАЧЕ ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка В
	|					(ВЫБРАТЬ
	|						ВТ_ИзмененияПодборок.Ссылка КАК Ссылка
	|					ИЗ
	|						ВТ_ИзмененияПодборок КАК ВТ_ИзмененияПодборок)
	|		КОНЕЦ
	|	И ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Логотип <> ЗНАЧЕНИЕ(Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетейПрисоединенныеФайлы.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияПодборок.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_ИзмененияПодборок КАК ВТ_ИзмененияПодборок";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("ЭтоПолныйОбмен", ЭтоПолныйОбмен);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВГраницаЗапроса = РезультатЗапроса.ВГраница();
	
	РезультатЗапросаПодборки = РезультатЗапроса[ВГраницаЗапроса - 1];
	ТаблицаИзмененияСсылка = РезультатЗапроса[ВГраницаЗапроса].Выгрузить();
	
	ОбщегоНазначенияБТС.Пауза(1);
	
	СтруктураЗапросаHTTP = ПолучитьСтруктураЗапросаHTTPДляФайлов();
	
	МассивОпераций = Новый Массив;
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаПодборки.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ИдентификаторФайла = ВыборкаДетальныеЗаписи.ИдентификаторФайла;
		
		ОписаниеПодборки = Новый Структура;
		ОписаниеПодборки.Вставить("deleted", ?(ВыборкаДетальныеЗаписи.ПометкаУдаления, 1, 0));
		ОписаниеПодборки.Вставить("title", ВыборкаДетальныеЗаписи.Наименование);
		ОписаниеПодборки.Вставить("main_album", ?(ВыборкаДетальныеЗаписи.ЭтоОсновной, 1, 0));
		ОписаниеПодборки.Вставить("is_hidden", ?(ВыборкаДетальныеЗаписи.ЭтоСкрытый, 1, 0));
		
		Если ВыборкаДетальныеЗаписи.ТребуетсяСоздать И ВыборкаДетальныеЗаписи.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ВыборкаДетальныеЗаписи.ПометкаУдаления И ВыборкаДетальныеЗаписи.ТребуетсяСоздатьФайл Тогда
			
			
			ОписаниеФайла = Новый Структура;
			ОписаниеФайла.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.ФайлКартинки);
			ОписаниеФайла.Вставить("Расширение" , ВыборкаДетальныеЗаписи.ФайлКартинкиРасширение);
			ОписаниеФайла.Вставить("Высота" , ВыборкаДетальныеЗаписи.ФайлКартинкиВысота);
			ОписаниеФайла.Вставить("Ширина" , ВыборкаДетальныеЗаписи.ФайлКартинкиШирина);
			
			ИдентификаторФайла = ОбработатьФайлПодборкиVK(ОписаниеУзелОбмена, ОписаниеФайла, СтруктураЗапросаHTTP);
			Если ИдентификаторФайла = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ОписаниеПодборки.Вставить("owner_id", "-" + ОписаниеУзелОбмена.ИдентификаторГруппы);
		ОписаниеПодборки.Вставить("photo_id", ИдентификаторФайла);
		ОписаниеПодборки.Вставить("album_id", "");
		
		ХешПолейПодборки = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьХешСтроки(ЗначениеВСтрокуВнутр(ОписаниеПодборки));
		Если ХешПолейПодборки = ВыборкаДетальныеЗаписи.Хеш И НЕ ЭтоПолныйОбмен Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПодборки.Вставить("album_id", ВыборкаДетальныеЗаписи.Идентификатор);
		
		ОписаниеПараметров = Новый Структура;
		Для Каждого КлючЗначение Из ОписаниеПодборки Цикл
			ОписаниеПараметров.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		
		ОписаниеПараметров.Вставить("ХешПолейПодборки", ХешПолейПодборки);
		ОписаниеПараметров.Вставить("Ссылка", ВыборкаДетальныеЗаписи.Ссылка);
		
		ОписаниеОперации = Новый Структура; 
		
		Если ВыборкаДетальныеЗаписи.ТребуетсяСоздать Тогда
			ОписаниеОперации.Вставить("ИмяМетода" , "market.addAlbum");
		ИначеЕсли ВыборкаДетальныеЗаписи.ПометкаУдаления Тогда
			ОписаниеОперации.Вставить("ИмяМетода" , "market.deleteAlbum");
		Иначе
			ОписаниеОперации.Вставить("ИмяМетода" , "market.editAlbum");
		КонецЕсли;
		
		ОписаниеОперации.Вставить("Хеш" , ХешПолейПодборки);
		
		ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеПодборки));
		ОписаниеОперации.Вставить("Результат" , Неопределено);
		ОписаниеОперации.Вставить("Ошибка" , "");
		ОписаниеОперации.Вставить("Описание" , ОписаниеПараметров);
		ОписаниеОперации.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.Ссылка);
		
		МассивОпераций.Добавить(ОписаниеОперации);
		
	КонецЦикла;
	
	ВыполнитьМассивОпераций(МассивОпераций, ОписаниеУзелОбмена);
	
	// Изменение состава подборки товара
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталогиИзменения.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталогиИзменения.ВиртуальныйКаталог КАК ВиртуальныйКаталог,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталогиИзменения.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталогиИзменения.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ИзмененияСоставаТоваров
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Изменения КАК НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталогиИзменения
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталогиИзменения.Узел = &УзелИнформационнойБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Ссылка КАК ВиртуальныйКаталог,
	|	ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Значение КАК Значение,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК ИдентификаторПодборки
	|ИЗ
	|	РегистрСведений.ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей КАК ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Ссылка = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|			И ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.УзелИнформационнойБазы = СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""album"")
	|ГДЕ
	|	ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.ИмяПоля = ""album_items""
	|	И ВЫБОР
	|			КОГДА &ЭтоПолныйОбмен
	|				ТОГДА ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|			ИНАЧЕ ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Ссылка В
	|					(ВЫБРАТЬ
	|						ВТ_ИзмененияСоставаТоваров.ВиртуальныйКаталог КАК ВиртуальныйКаталог
	|					ИЗ
	|						ВТ_ИзмененияСоставаТоваров КАК ВТ_ИзмененияСоставаТоваров)
	|		КОНЕЦ"; 
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("ЭтоПолныйОбмен", ЭтоПолныйОбмен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Строка50 = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(50));
	
	ТаблицаСоставаПодборок = Новый ТаблицаЗначений;
	ТаблицаСоставаПодборок.Колонки.Добавить("ИдентификаторПодборки", Строка50);
	ТаблицаСоставаПодборок.Колонки.Добавить("ИдентификаторТовара", Строка50);
	ТаблицаСоставаПодборок.Колонки.Добавить("ВиртуальныйКаталог",
	Новый ОписаниеТипов("СправочникСсылка.ВиртуальныеКаталогиТоваровМагазиновСоцСетей"));
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивТоваров = СтрРазделить(ВыборкаДетальныеЗаписи.Значение,",",Ложь);
		Для Каждого ИдентификаторТовара Из МассивТоваров Цикл
			
			НовСтр = ТаблицаСоставаПодборок.Добавить();
			НовСтр.ИдентификаторТовара = ИдентификаторТовара;
			НовСтр.ИдентификаторПодборки = ВыборкаДетальныеЗаписи.ИдентификаторПодборки;
			НовСтр.ВиртуальныйКаталог = ВыборкаДетальныеЗаписи.ВиртуальныйКаталог;
			
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСоставаПодборок.ВиртуальныйКаталог КАК ВиртуальныйКаталог,
	|	ТаблицаСоставаПодборок.ИдентификаторТовара КАК ИдентификаторТовара,
	|	ТаблицаСоставаПодборок.ИдентификаторПодборки КАК ИдентификаторПодборки
	|ПОМЕСТИТЬ ВТ_ТаблицаСоставаПодборок
	|ИЗ
	|	&ТаблицаСоставаПодборок КАК ТаблицаСоставаПодборок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазина_Номенклатура.Идентификатор КАК ИдентификаторТовара,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК ИдентификаторПодборки,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог КАК ВиртуальныйКаталог
	|ПОМЕСТИТЬ ВТ_НовыйСоставаПодборок
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги КАК НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазина_Номенклатура
	|		ПО НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Номенклатура = СопоставлениеИдентификаторовМагазина_Номенклатура.Ссылка
	|			И НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.УзелИнформационнойБазы = СопоставлениеИдентификаторовМагазина_Номенклатура.УзелИнформационнойБазы
	|			И (СопоставлениеИдентификаторовМагазина_Номенклатура.ТипИдентификатора = ""item"")
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.УзелИнформационнойБазы = СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы
	|			И НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""album"")
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЭтоПолныйОбмен
	|				ТОГДА НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|			ИНАЧЕ НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог В
	|					(ВЫБРАТЬ
	|						ВТ_ИзмененияСоставаТоваров.ВиртуальныйКаталог КАК ВиртуальныйКаталог
	|					ИЗ
	|						ВТ_ИзмененияСоставаТоваров КАК ВТ_ИзмененияСоставаТоваров)
	|		КОНЕЦ
	|	И НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И НЕ НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазина_Характеристика.Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги КАК НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазина_Характеристика
	|		ПО НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Характеристика = СопоставлениеИдентификаторовМагазина_Характеристика.Ссылка
	|			И НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.УзелИнформационнойБазы = СопоставлениеИдентификаторовМагазина_Характеристика.УзелИнформационнойБазы
	|			И (СопоставлениеИдентификаторовМагазина_Характеристика.ТипИдентификатора = ""item"")
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.УзелИнформационнойБазы = СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы
	|			И НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""album"")
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЭтоПолныйОбмен
	|				ТОГДА НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|			ИНАЧЕ НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог В
	|					(ВЫБРАТЬ
	|						ВТ_ИзмененияСоставаТоваров.ВиртуальныйКаталог КАК ВиртуальныйКаталог
	|					ИЗ
	|						ВТ_ИзмененияСоставаТоваров КАК ВТ_ИзмененияСоставаТоваров)
	|		КОНЕЦ
	|	И НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И НЕ НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НовыйСоставаПодборок.ВиртуальныйКаталог КАК Ссылка,
	|	ВТ_НовыйСоставаПодборок.ИдентификаторТовара КАК ИдентификаторТовара,
	|	ВТ_НовыйСоставаПодборок.ИдентификаторПодборки КАК ИдентификаторПодборки,
	|	ИСТИНА КАК ТребуетсяДобавить,
	|	ЛОЖЬ КАК ТребуетсяУдалить
	|ИЗ
	|	ВТ_НовыйСоставаПодборок КАК ВТ_НовыйСоставаПодборок
	|ГДЕ
	|	НЕ (ВТ_НовыйСоставаПодборок.ИдентификаторТовара, ВТ_НовыйСоставаПодборок.ИдентификаторПодборки) В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаСоставаПодборок.ИдентификаторТовара КАК ИдентификаторТовара,
	|					ВТ_ТаблицаСоставаПодборок.ИдентификаторПодборки КАК ИдентификаторПодборки
	|				ИЗ
	|					ВТ_ТаблицаСоставаПодборок КАК ВТ_ТаблицаСоставаПодборок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаСоставаПодборок.ВиртуальныйКаталог,
	|	ВТ_ТаблицаСоставаПодборок.ИдентификаторТовара,
	|	ВТ_ТаблицаСоставаПодборок.ИдентификаторПодборки,
	|	ЛОЖЬ,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ТаблицаСоставаПодборок КАК ВТ_ТаблицаСоставаПодборок
	|ГДЕ
	|	НЕ (ВТ_ТаблицаСоставаПодборок.ИдентификаторТовара, ВТ_ТаблицаСоставаПодборок.ИдентификаторПодборки) В
	|				(ВЫБРАТЬ
	|					ВТ_НовыйСоставаПодборок.ИдентификаторТовара КАК ИдентификаторТовара,
	|					ВТ_НовыйСоставаПодборок.ИдентификаторПодборки КАК ИдентификаторПодборки
	|				ИЗ
	|					ВТ_НовыйСоставаПодборок КАК ВТ_НовыйСоставаПодборок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_НовыйСоставаПодборок.ВиртуальныйКаталог,
	|	ВТ_ТаблицаСоставаПодборок.ИдентификаторТовара,
	|	ВТ_ТаблицаСоставаПодборок.ИдентификаторПодборки,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	ВТ_ТаблицаСоставаПодборок КАК ВТ_ТаблицаСоставаПодборок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НовыйСоставаПодборок КАК ВТ_НовыйСоставаПодборок
	|		ПО ВТ_ТаблицаСоставаПодборок.ИдентификаторТовара = ВТ_НовыйСоставаПодборок.ИдентификаторТовара
	|			И ВТ_ТаблицаСоставаПодборок.ИдентификаторПодборки = ВТ_НовыйСоставаПодборок.ИдентификаторПодборки
	|ИТОГИ
	|	МАКСИМУМ(ИдентификаторПодборки)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияСоставаТоваров.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	ВТ_ИзмененияСоставаТоваров.ВиртуальныйКаталог КАК ВиртуальныйКаталог,
	|	ВТ_ИзмененияСоставаТоваров.Номенклатура КАК Номенклатура,
	|	ВТ_ИзмененияСоставаТоваров.Характеристика КАК Характеристика
	|ИЗ
	|	ВТ_ИзмененияСоставаТоваров КАК ВТ_ИзмененияСоставаТоваров";
	
	Запрос.УстановитьПараметр("ТаблицаСоставаПодборок", ТаблицаСоставаПодборок);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВГраницаЗапроса = РезультатЗапроса.ВГраница();
	
	РезультатЗапросаСоставПодборок = РезультатЗапроса[ВГраницаЗапроса - 1];
	ТаблицаИзмененияРегистра = РезультатЗапроса[ВГраницаЗапроса].Выгрузить();
	
	ТаблицаСоставаПодборокНовая = РезультатЗапросаСоставПодборок.Выгрузить();
	
	Если НЕ РезультатЗапросаСоставПодборок.Пустой() Тогда
		
		СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос("");
		
		ВыборкаДетальныеЗаписиПодборка = РезультатЗапросаСоставПодборок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетальныеЗаписиПодборка.Следующий() Цикл
			
			МассивДляУдаления = Новый Массив;
			МассивДляДобавления = Новый Массив;
			МассивНовогоСостава = Новый Массив;
			
			ВыборкаДетальныеЗаписи = ВыборкаДетальныеЗаписиПодборка.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если ВыборкаДетальныеЗаписи.ТребуетсяДобавить Тогда
					МассивДляДобавления.Добавить(ВыборкаДетальныеЗаписи.ИдентификаторТовара);
				КонецЕсли;
				
				Если ВыборкаДетальныеЗаписи.ТребуетсяУдалить Тогда
					МассивДляУдаления.Добавить(ВыборкаДетальныеЗаписи.ИдентификаторТовара);
				Иначе
					МассивНовогоСостава.Добавить(ВыборкаДетальныеЗаписи.ИдентификаторТовара);
				КонецЕсли;
				
			КонецЦикла;
			
			УдалениеУспешно = Ложь;
			Если МассивДляУдаления.Количество() Тогда
				Для Каждого СтрИдентификатор Из МассивДляУдаления Цикл
					АдресРесурса = "/method/market.removeFromAlbum";
					ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
					
					АдресРесурса = АдресРесурса + СтрШаблон("&owner_id=-%1&album_ids=%2&item_id=%3", ОписаниеУзелОбмена.ИдентификаторГруппы,ВыборкаДетальныеЗаписиПодборка.ИдентификаторПодборки, СтрИдентификатор);
					
					Ответ = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
				КонецЦикла;
				
				УдалениеУспешно = (Ответ = 1 Или Ответ = "1");
			Иначе
				УдалениеУспешно = Истина;
			КонецЕсли;
			
			ДобавлениеУспешно = Ложь;
			Если МассивДляДобавления.Количество() Тогда
				АдресРесурса = "/method/market.addToAlbum";
				ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
				
				АдресРесурса = АдресРесурса + СтрШаблон("&owner_id=-%1&album_ids=%2&item_ids=%3", ОписаниеУзелОбмена.ИдентификаторГруппы,ВыборкаДетальныеЗаписиПодборка.ИдентификаторПодборки, СтрСоединить(МассивДляДобавления,","));
				
				Ответ = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
				
				ДобавлениеУспешно = (Ответ = 1 Или Ответ = "1");
			Иначе
				ДобавлениеУспешно = Истина;
			КонецЕсли;
			
			Если УдалениеУспешно И ДобавлениеУспешно Тогда
				ДобавитьЗначениеДополнительныхПолейОбъектовМагазина(ОписаниеУзелОбмена.Ссылка, ВыборкаДетальныеЗаписиПодборка.Ссылка, СтрСоединить(МассивНовогоСостава,",")
				, "album_items", ОписаниеУзелОбмена.ТекущаяДата);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	МассивУдаленияИзменений = Новый Массив;
	Если ТаблицаИзмененияСсылка <> Неопределено Тогда
		Для Каждого ВыборкаИзменения Из ТаблицаИзмененияСсылка Цикл
			МассивУдаленияИзменений.Добавить(ВыборкаИзменения.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Если ТаблицаИзмененияРегистра <> Неопределено Тогда
		Для Каждого ВыборкаИзменения Из ТаблицаИзмененияРегистра Цикл
			
			НЗ = РегистрыСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.СоздатьНаборЗаписей();
			НЗ.Отбор.УзелИнформационнойБазы.Установить(ВыборкаИзменения.УзелИнформационнойБазы);
			НЗ.Отбор.ВиртуальныйКаталог.Установить(ВыборкаИзменения.ВиртуальныйКаталог);
			НЗ.Отбор.Номенклатура.Установить(ВыборкаИзменения.Номенклатура);
			НЗ.Отбор.Характеристика.Установить(ВыборкаИзменения.Характеристика);
			
			МассивУдаленияИзменений.Добавить(НЗ);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого СтрДанные Из МассивУдаленияИзменений Цикл
		ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, СтрДанные);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОбновитьФайлыНоменклатур(ОписаниеУзелОбмена) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Идентификатор КАК ИдентификаторКатегории,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура.ПометкаУдаления
	|		ИНАЧЕ НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика.ПометкаУдаления
	|	КОНЕЦ КАК ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура.Недействителен
	|		ИНАЧЕ НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика.Недействителен
	|	КОНЕЦ КАК Недействителен
	|ПОМЕСТИТЬ ВТ_ВсяНоменклатураДоступнаДляОбмена
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Номенклатура КАК Номенклатура,
	|	ИСТИНА КАК ИзменениеРеквизиты,
	|	ИСТИНА КАК ИзменениеЦена,
	|	ИСТИНА КАК ИзменениеФайлы,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ИдентификаторКатегории КАК ИдентификаторКатегории,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Характеристика КАК Характеристика,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления КАК ПометкаУдаления,
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен КАК Недействителен
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_ВсяНоменклатураДоступнаДляОбмена КАК ВТ_ВсяНоменклатураДоступнаДляОбмена
	|ГДЕ
	|	НЕ ВТ_ВсяНоменклатураДоступнаДляОбмена.ПометкаУдаления
	|	И НЕ ВТ_ВсяНоменклатураДоступнаДляОбмена.Недействителен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Файл
	|ПОМЕСТИТЬ ВТ_ФайлыДляВыгрузки
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
	|	И ВТ_Номенклатура.ИзменениеФайлы
	|	И ВТ_Номенклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И (НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPEG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""PNG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""GIF"")
	|	И НоменклатураПрисоединенныеФайлы.Размер <= 52428800
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатурыПрисоединенныеФайлы КАК ХарактеристикиНоменклатурыПрисоединенныеФайлы
	|		ПО ВТ_Номенклатура.Характеристика = ХарактеристикиНоменклатурыПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	&ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И НЕ ХарактеристикиНоменклатурыПрисоединенныеФайлы.ПометкаУдаления
	|	И ВТ_Номенклатура.ИзменениеФайлы
	|	И (ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""JPG""
	|			ИЛИ ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""JPEG""
	|			ИЛИ ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""PNG""
	|			ИЛИ ХарактеристикиНоменклатурыПрисоединенныеФайлы.Расширение ПОДОБНО ""GIF"")
	|	И ХарактеристикиНоменклатурыПрисоединенныеФайлы.Размер <= 52428800
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	&ДобавлятьФайлыХарактеристикиИзНоменклатуры
	|	И &ВариантВыгрузкиХарактеристик <> ЗНАЧЕНИЕ(перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать)
	|	И НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
	|	И ВТ_Номенклатура.ИзменениеФайлы
	|	И (НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""JPEG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""PNG""
	|			ИЛИ НоменклатураПрисоединенныеФайлы.Расширение ПОДОБНО ""GIF"")
	|	И НоменклатураПрисоединенныеФайлы.Размер <= 52428800
	|	И ВТ_Номенклатура.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ФайлыДляВыгрузки.Файл КАК Файл
	|ИЗ
	|	ВТ_ФайлыДляВыгрузки КАК ВТ_ФайлыДляВыгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей КАК ДополнительныеПоляФайловДляМагазинаСоцСетей
	|		ПО ВТ_ФайлыДляВыгрузки.Файл = ДополнительныеПоляФайловДляМагазинаСоцСетей.Файл
	|ГДЕ
	|	ДополнительныеПоляФайловДляМагазинаСоцСетей.Высота ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ФайлыДляВыгрузки.Файл";
	
	Запрос.УстановитьПараметр("ВариантВыгрузкиХарактеристик", ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик);
	Запрос.УстановитьПараметр("ДобавлятьФайлыХарактеристикиИзНоменклатуры", ОписаниеУзелОбмена.ДобавлятьФайлыХарактеристикиИзНоменклатуры);
	Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ВыборкаДетальныеЗаписи.Файл);
		Картинка = Новый Картинка(ДвоичныеДанныеФайла);
		
		ДобавитьДополнительныеПоляФайлам(ВыборкаДетальныеЗаписи.Файл, Картинка.Высота(), Картинка.Ширина());
		
		ДвоичныеДанныеФайла = Неопределено;
		Картинка = Неопределено;
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура СоздатьРегламентноеЗаданиеОбмена(СсылкаНаУзелОбмена) Экспорт
	
	ОписаниеУзелОбмена = ПолучитьОписаниеУзлаОбмена(СсылкаНаУзелОбмена);
	
	Если НЕ ОписаниеУзелОбмена.ВыгружатьИзмененияНоменклатуры
		И НЕ ОписаниеУзелОбмена.ВыгружатьЦены
		И НЕ ОписаниеУзелОбмена.ЗагружатьЗаказы
		И НЕ ОписаниеУзелОбмена.ВыгружатьОстаток Тогда
		Возврат;
	КонецЕсли;
	
	Задание = РегламентныеЗаданияСервер.Задание(ОписаниеУзелОбмена.ИдентификаторРегламентногоЗадания);
	Если Задание = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		РасписаниеРегламентногоЗадания.ПериодПовтораВТечениеДня = 300;// 5 минут
		РасписаниеРегламентногоЗадания.ПериодПовтораДней = 1; // каждый день
		РасписаниеРегламентногоЗадания.ДатаНачала = ТекущаяДата();
		РасписаниеРегламентногоЗадания.ВремяНачала = ТекущаяДата() + 300;
		
		Параметры = Новый Массив;
		Параметры.Добавить(СсылкаНаУзелОбмена);
		
		ПараметрыЗадания = Новый Структура();
		ПараметрыЗадания.Вставить("Использование", Истина);
		ПараметрыЗадания.Вставить("ИмяМетода", "ИнтеграцияСМагазинамиСоцСетейСервер.ВыполнитьОбменВФоне");
		ПараметрыЗадания.Вставить("Параметры", Параметры);
		ПараметрыЗадания.Вставить("Расписание", РасписаниеРегламентногоЗадания);
		ПараметрыЗадания.Вставить("Наименование", ОписаниеУзелОбмена.Наименование);
		ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.ОбменСМагазинамиСоцСетей);
		
		Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		ИдентификаторРегламентногоЗадания = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
		
		УзелОбменаОбъект = СсылкаНаУзелОбмена.ПолучитьОбъект();
		УзелОбменаОбъект.ИдентификаторРегламентногоЗадания = ИдентификаторРегламентногоЗадания;
		УзелОбменаОбъект.ОбменДанными.Загрузка = Истина;
		УзелОбменаОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьРегламентноеЗаданиеОбмена(СсылкаНаУзелОбмена) Экспорт
	
	ОписаниеУзелОбмена = ПолучитьОписаниеУзлаОбмена(СсылкаНаУзелОбмена);
	
	Задание = РегламентныеЗаданияСервер.Задание(ОписаниеУзелОбмена.ИдентификаторРегламентногоЗадания);
	Если Задание <> Неопределено Тогда
		РегламентныеЗаданияСервер.УдалитьЗадание(Задание);
	КонецЕсли;
	
КонецПроцедуры

// Выгрузка номенклатуры 
Функция ВыгрузитьНоменклатуру(ОписаниеУзелОбмена, знач СпособОбменаСМагазином, ЭтоПовтор = Ложь) Экспорт
	
	СоздатьОбновитьНаборыСвойствИЗначений(ОписаниеУзелОбмена, СпособОбменаСМагазином);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстВыгрузкиТоваров();
	
	Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("ВыгружатьЦены", ОписаниеУзелОбмена.ВыгружатьЦены);
	Запрос.УстановитьПараметр("ВыгружатьОстаток", ОписаниеУзелОбмена.ВыгружатьОстаток);
	Запрос.УстановитьПараметр("КоличествоФотографийДляКарточки", ОписаниеУзелОбмена.КоличествоФотографийДляКарточки);
	Запрос.УстановитьПараметр("СпособОбменаСМагазином", СпособОбменаСМагазином);
	Запрос.УстановитьПараметр("ВидЦеныНоменклатуры", ОписаниеУзелОбмена.ВидЦеныНоменклатуры);
	Запрос.УстановитьПараметр("ВидЦеныНоменклатурыСтарая", ОписаниеУзелОбмена.ВидЦеныНоменклатурыСтарая);
	Запрос.УстановитьПараметр("ВариантВыгрузкиХарактеристик", ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик);
	Запрос.УстановитьПараметр("ДобавлятьФайлыХарактеристикиИзНоменклатуры", ОписаниеУзелОбмена.ДобавлятьФайлыХарактеристикиИзНоменклатуры);
	Запрос.УстановитьПараметр("ЕстьОтборПоСкладам", ОписаниеУзелОбмена.ЕстьОтборПоСкладам);
	Запрос.УстановитьПараметр("ТекущаяДата", ОписаниеУзелОбмена.ТекущаяДата);
	
	МассивХарактеристик = Новый Массив;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет(); 
	
	ДлительныеОперации.СообщитьПрогресс(60, "Отправка статусов заказов...ОК
	|Загрузка заказов...ОК
	|Проверка файлов номенклатур...ОК
	|Выгрузка изменений номенклатуры...
	|	Сбор данных...ОК
	|");  
	
	ВГраницаЗапроса = РезультатЗапроса.ВГраница();
	
	РезультатЗапросаСопоставленнаяНоменклатура = РезультатЗапроса[ВГраницаЗапроса - 9];
	РезультатЗапросаВариантыХарактеристик = РезультатЗапроса[ВГраницаЗапроса - 8];
	РезультатЗапросаФайлыХарактеристик = РезультатЗапроса[ВГраницаЗапроса - 7];
	РезультатЗапросаФайлы = РезультатЗапроса[ВГраницаЗапроса - 6];
	РезультатЗапросаЦена = РезультатЗапроса[ВГраницаЗапроса - 5];
	РезультатЗапросаОстаток = РезультатЗапроса[ВГраницаЗапроса - 4];
	РезультатЗапросаНоменклатура = РезультатЗапроса[ВГраницаЗапроса - 3];
	ТаблицаИзмененияСсылка = РезультатЗапроса[ВГраницаЗапроса - 2].Выгрузить();
	ТаблицаИзмененияРегистраЦена = РезультатЗапроса[ВГраницаЗапроса-1].Выгрузить();
	ТаблицаИзмененияРегистраТовары = РезультатЗапроса[ВГраницаЗапроса].Выгрузить();
	
	СоответствиеИдентификаторов = Новый Соответствие;
	СоответствиеОсновныеРеквизиты = Новый Соответствие;
	СоответствиеЦены = Новый Соответствие;
	СоответствиеОстаток = Новый Соответствие;
	
	ВыгружатьХарактеристики = ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик <>
	ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать");
	
	МассивНовыхХарактеристикДляАнализа = Новый Массив;
	МассивИсключенияНоменклатуры = Новый Массив;
	
	// Обработка идентификаторов номенклатуры
	ОбработатьИдентификаторыТоваров(СоответствиеИдентификаторов, РезультатЗапросаСопоставленнаяНоменклатура, ОписаниеУзелОбмена, МассивНовыхХарактеристикДляАнализа, СпособОбменаСМагазином);
	
	// Проверка на номенклатуру которой добавили характеристику
	Если ВыгружатьХарактеристики Тогда
		ПроверитьНоменклатуруНаИсключение(СоответствиеИдентификаторов,ОписаниеУзелОбмена, МассивИсключенияНоменклатуры, МассивНовыхХарактеристикДляАнализа);
	КонецЕсли;
	
	// Обработка идентификаторы вариантов 
	Если ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик =
		ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.ВыгружатьХарактеристикуКакНаборСвойств") Тогда
		ОбработатьИдентификаторыВариантов(СоответствиеИдентификаторов, РезультатЗапросаВариантыХарактеристик, СпособОбменаСМагазином);
	КонецЕсли;
	
	// Обработка цен номенклатуры
	ОбработатьЦеныТоваров(СоответствиеИдентификаторов, РезультатЗапросаЦена);
	
	// Обработка остаток номенклатуры
	ОбработатьОстаткиТоваров(СоответствиеИдентификаторов, РезультатЗапросаОстаток);
	
	ДлительныеОперации.СообщитьПрогресс(60, "Отправка статусов заказов...ОК
	|Загрузка заказов...ОК
	|Проверка файлов номенклатур...ОК
	|Выгрузка изменений номенклатуры...
	|	Сбор данных...ОК
	|	Обработка файлов...
	|");
	
	// Обработка файлов картинок характеристик
	ОбработатьФайлыХарактеристик(СоответствиеИдентификаторов, РезультатЗапросаФайлыХарактеристик , ОписаниеУзелОбмена, СпособОбменаСМагазином);
	
	// Обработка файлов картинок номенклатур
	ОбработатьФайлыНоменклатур(СоответствиеИдентификаторов, РезультатЗапросаФайлы, ОписаниеУзелОбмена, МассивИсключенияНоменклатуры, СпособОбменаСМагазином);
	
	ИнтеграцияСМагазинамиСоцСетейСервер.Пауза(1);
	
	ДлительныеОперации.СообщитьПрогресс(80, "Отправка статусов заказов...ОК
	|Загрузка заказов...ОК
	|Проверка файлов номенклатур...ОК
	|Выгрузка изменений номенклатуры...
	|	Сбор данных...ОК
	|	Обработка файлов...ОК
	|	Обработка номенклатуры...
	|");
	
	// Обработка номенклатуры
	ОбработатьТовары(СоответствиеИдентификаторов, РезультатЗапросаНоменклатура, ОписаниеУзелОбмена, МассивИсключенияНоменклатуры, СпособОбменаСМагазином);
	
	МассивОпераций = Новый Массив;
	Для Каждого КлючЗначение Из СоответствиеИдентификаторов Цикл 
		
		ОписаниеНоменклатуры = КлючЗначение.Значение;
		ОписаниеНоменклатуры.Вставить("uid_1c", Строка(Новый УникальныйИдентификатор));
		
		Если ВыгружатьХарактеристики И НЕ ЗначениеЗаполнено(ОписаниеНоменклатуры.Характеристика)
			И МассивИсключенияНоменклатуры.Найти(ОписаниеНоменклатуры.Номенклатура) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяМетода = "market.add";
		ХешПолейНоменклатуры = "";
		Если ОписаниеНоменклатуры.Свойство("item_id") Тогда
			ИмяМетода = "market.edit";
		Иначе
			
			Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
				Продолжить;
			КонецЕсли;
			
			Если НЕ ОписаниеНоменклатуры.Свойство("ХешПолейНоменклатуры") Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ТребуетсяУдаление = Ложь;
		
		Если ОписаниеНоменклатуры.Свойство("Актуальна") Тогда
			Если ОписаниеНоменклатуры.Свойство("Актуальна") и ОписаниеНоменклатуры.Свойство("deleted") Тогда
				
				Если ОписаниеНоменклатуры.Актуальна = Истина И ОписаниеНоменклатуры.deleted = "1" Тогда
					ТребуетсяУдаление = Истина;
				ИначеЕсли ОписаниеНоменклатуры.Актуальна = Ложь И ОписаниеНоменклатуры.deleted = "0" Тогда
					
					ОписаниеОперации = Новый Структура;
					ОписаниеОперации.Вставить("ИмяМетода" , "market.restore");
					ОписаниеОперации.Вставить("Хеш" , ХешПолейНоменклатуры);
					
					ОписаниеОперацииВосстановления = Новый Структура;
					ОписаниеОперацииВосстановления.Вставить("owner_id", ОписаниеНоменклатуры.owner_id);
					ОписаниеОперацииВосстановления.Вставить("item_id", ОписаниеНоменклатуры.item_id);
					ОписаниеОперацииВосстановления.Вставить("uid_1c", ОписаниеНоменклатуры.uid_1c);
					
					ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеОперацииВосстановления));
					ОписаниеОперации.Вставить("Результат" , Неопределено);
					ОписаниеОперации.Вставить("Ошибка" , "");
					ОписаниеОперации.Вставить("Описание" , ОписаниеНоменклатуры);
					ОписаниеОперации.Вставить("Ссылка" , КлючЗначение.Ключ);
					
					МассивОпераций.Добавить(ОписаниеОперации);
					
				КонецЕсли;
				
			КонецЕсли;
			ОписаниеНоменклатуры.Удалить("Актуальна");
		КонецЕсли;
		
		Если ОписаниеНоменклатуры.Свойство("ХешПолейНоменклатуры") Тогда
			ХешПолейНоменклатуры = ОписаниеНоменклатуры.ХешПолейНоменклатуры;
			ОписаниеНоменклатуры.Удалить("ХешПолейНоменклатуры");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОписаниеНоменклатуры.Характеристика) Тогда
			МассивХарактеристик.Добавить(ОписаниеНоменклатуры.Характеристика);
		КонецЕсли;
		
		ОписаниеНоменклатуры.Удалить("Номенклатура");
		ОписаниеНоменклатуры.Удалить("Характеристика");
		
		ОписаниеОперации = Новый Структура;
		ОписаниеОперации.Вставить("ИмяМетода" , ИмяМетода);
		ОписаниеОперации.Вставить("Хеш" , ХешПолейНоменклатуры);
		
		ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеНоменклатуры));
		ОписаниеОперации.Вставить("Результат" , Неопределено);
		ОписаниеОперации.Вставить("Ошибка" , "");
		ОписаниеОперации.Вставить("Описание" , ОписаниеНоменклатуры);
		ОписаниеОперации.Вставить("Ссылка" , КлючЗначение.Ключ);
		
		МассивОпераций.Добавить(ОписаниеОперации);
		
		Если ТребуетсяУдаление Тогда
			ОписаниеОперации = Новый Структура;
			ОписаниеОперации.Вставить("ИмяМетода" , "market.delete");
			ОписаниеОперации.Вставить("Хеш" , ХешПолейНоменклатуры);
			
			ОписаниеОперацииУдаления = Новый Структура;
			ОписаниеОперацииУдаления.Вставить("owner_id", ОписаниеНоменклатуры.owner_id);
			ОписаниеОперацииУдаления.Вставить("item_id", ОписаниеНоменклатуры.item_id);
			ОписаниеОперацииУдаления.Вставить("uid_1c", ОписаниеНоменклатуры.uid_1c);
			
			ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеОперацииУдаления));
			ОписаниеОперации.Вставить("Результат" , Неопределено);
			ОписаниеОперации.Вставить("Ошибка" , "");
			ОписаниеОперации.Вставить("Описание" , ОписаниеНоменклатуры);
			ОписаниеОперации.Вставить("Ссылка" , КлючЗначение.Ключ);
			
			МассивОпераций.Добавить(ОписаниеОперации);
		КонецЕсли;
		
	КонецЦикла;
	
	РезультатВыполнения = ВыполнитьМассивОпераций(МассивОпераций, ОписаниеУзелОбмена);
	
	ЗарегистрироватьНоменклатуруКОбмену = Новый Массив;
	Если РезультатВыполнения <> Неопределено Тогда
		
		Если РезультатВыполнения.ЭтоКапча Тогда
			
			ПеременныеОперации = Новый Структура;
			ПеременныеОперации.Вставить("ТаблицаИзмененияСсылка" , ТаблицаИзмененияСсылка);
			ПеременныеОперации.Вставить("ТаблицаИзмененияРегистраЦена" , ТаблицаИзмененияРегистраЦена);
			ПеременныеОперации.Вставить("ТаблицаИзмененияРегистраТовары" , ТаблицаИзмененияРегистраТовары);
			ПеременныеОперации.Вставить("МассивХарактеристик" , МассивХарактеристик);
			ПеременныеОперации.Вставить("СпособОбменаСМагазином" , СпособОбменаСМагазином);
			ПеременныеОперации.Вставить("ЭтоПовтор" , ЭтоПовтор);
			
			ОписаниеОперацииСкрипта = Новый Структура;
			ОписаниеОперацииСкрипта.Вставить("ОперацияДляПодтверждения" , РезультатВыполнения.ОперацияДляПодтверждения);
			ОписаниеОперацииСкрипта.Вставить("МассивВсехОпераций" , РезультатВыполнения.МассивВсехОпераций);
			
			СохраненнаяОперация = Новый Структура;
			СохраненнаяОперация.Вставить("ОписаниеОперацииСкрипта", ОписаниеОперацииСкрипта);
			СохраненнаяОперация.Вставить("ПеременныеОперации", ПеременныеОперации);
			
			ДобавитьОтложеннуюОперацию("ВыгрузитьНоменклатуру", СохраненнаяОперация, РезультатВыполнения.Ошибка, ОписаниеУзелОбмена);
			
			Если ЗарегистрироватьНоменклатуруКОбмену.Количество() Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(ОписаниеУзелОбмена.Ссылка, ЗарегистрироватьНоменклатуруКОбмену);
			КонецЕсли;
			
			ДлительныеОперации.СообщитьПрогресс(80, "Отправка статусов заказов...ОК
			|Загрузка заказов...ОК
			|Проверка файлов номенклатур...ОК
			|Выгрузка изменений номенклатуры...ОК
			|	Сбор данных...ОК
			|	Обработка файлов...ОК
			|	Обработка номенклатуры...Капча
			|"); 
			
			Если ОписаниеУзелОбмена.ИспользоватьОповещения Тогда
				СоздатьОтправитьEmail(ОписаниеУзелОбмена,
				"Капча. " + ОписаниеУзелОбмена.Наименование,
				"Требуется ввод капчи. Обмен с Магазином ВКонтакте приостановлен!");
			КонецЕсли;
			
			Возврат Ложь;
		Иначе
			
			ЗарегистрироватьНоменклатуруКОбмену = РезультатВыполнения.ЗарегистрироватьНоменклатуруКОбмену;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УдалитьРегистрациюИзменений(ТаблицаИзмененияСсылка, ТаблицаИзмененияРегистраЦена,ТаблицаИзмененияРегистраТовары, ОписаниеУзелОбмена);
	
	Если МассивХарактеристик.Количество() Тогда
		// Объединяем в группы характеристику
		ПроверитьОбъединитьХарактеристикуВГруппы(МассивХарактеристик, ОписаниеУзелОбмена, СпособОбменаСМагазином);
	КонецЕсли;
	
	Если ЗарегистрироватьНоменклатуруКОбмену.Количество() Тогда
		ПланыОбмена.ЗарегистрироватьИзменения(ОписаниеУзелОбмена.Ссылка, ЗарегистрироватьНоменклатуруКОбмену);
		
		Если НЕ ЭтоПовтор Тогда
			
			Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен") Тогда
				СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения");
			КонецЕсли;
			
			ВыгрузитьНоменклатуру(ОписаниеУзелОбмена, СпособОбменаСМагазином, Истина);
			
		КонецЕсли;
	КонецЕсли; 
	
	ДлительныеОперации.СообщитьПрогресс(100, "Отправка статусов заказов...ОК
	|Загрузка заказов...ОК
	|Проверка файлов номенклатур...ОК
	|Выгрузка изменений номенклатуры...
	|	Сбор данных...ОК
	|	Обработка файлов...ОК
	|	Обработка номенклатуры...ОК
	|");
	
	Возврат Истина;
	
КонецФункции

Процедура ДобавитьОтложеннуюОперацию(ИмяОперации, СохраненнаяОперация, ПодтверждениеОперацииСтрокой, ОписаниеУзелОбмена)
	
	МЗ = РегистрыСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
	МЗ.УзелИнформационнойБазы = ОписаниеУзелОбмена.Ссылка;
	МЗ.ДатаОперации = ОписаниеУзелОбмена.ТекущаяДата;
	МЗ.ТребуетсяРучноеПодтверждение = Истина;
	МЗ.ПодтверждениеОперацииСтрокой = ПодтверждениеОперацииСтрокой;
	МЗ.ИмяОперации = ИмяОперации;
	МЗ.СохраненнаяОперацияСтрокой = ЗначениеВСтрокуВнутр(СохраненнаяОперация);
	МЗ.Записать(); 
	
	УдалитьРегламентноеЗаданиеОбмена(ОписаниеУзелОбмена.Ссылка);
	
КонецПроцедуры

Процедура ПродолжитьОтложеннуюОперациюВФоне(Параметры, АдресХранилища = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СохраненнаяОперацияСтрокой КАК СохраненнаяОперацияСтрокой,
	|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.ПодтверждениеОперацииСтрокой КАК ПодтверждениеОперацииСтрокой,
	|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.ИмяОперации КАК ИмяОперации
	|ИЗ
	|	РегистрСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей КАК ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей
	|ГДЕ
	|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.ТребуетсяРучноеПодтверждение";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", Параметры.СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		МЗ = РегистрыСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
		МЗ.УзелИнформационнойБазы = Параметры.СсылкаНаУзелОбмена;
		МЗ.Удалить();
		
		СоздатьРегламентноеЗаданиеОбмена(Параметры.СсылкаНаУзелОбмена);
		
		Возврат;
		
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	ОписаниеУзелОбмена = ПолучитьОписаниеУзлаОбмена(Параметры.СсылкаНаУзелОбмена);
	
	СохраненнаяОперация = ЗначениеИзСтрокиВнутр(ВыборкаДетальныеЗаписи.СохраненнаяОперацияСтрокой);
	ПодтверждениеОперацииСтрокой = ВыборкаДетальныеЗаписи.ПодтверждениеОперацииСтрокой;
	ИмяОперации = ВыборкаДетальныеЗаписи.ИмяОперации;
	
	СтрокаЗначениеСКартинки = Параметры.СтрокаЗначениеСКартинки;
	
	СоответствиеОтвет = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьСоответствиеИзJSON(ПодтверждениеОперацииСтрокой);
	ИдентификаторКапчи = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьЗначениеСоответствия(СоответствиеОтвет, "error.captcha_sid");
	
	ОписаниеОперацииСкрипта = СохраненнаяОперация.ОписаниеОперацииСкрипта;
	
	ОперацияДляПодтверждения = ОписаниеОперацииСкрипта.ОперацияДляПодтверждения;
	
	АдресРесурса = "/method/" + ОперацияДляПодтверждения.ИмяМетода;
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&captcha_sid=%1&captcha_key=%2", ИдентификаторКапчи, СтрокаЗначениеСКартинки);
	
	Для Каждого КлючЗначение Из ОперацияДляПодтверждения.Описание Цикл
		АдресРесурса = АдресРесурса + СтрШаблон("&%1=%2", КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	ОтветОперации = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса, 0, Ложь, Ложь);
	Если ОтветОперации = Неопределено Или ОтветОперации <> 1 Тогда
		
		ДлительныеОперации.СообщитьПрогресс(80, "Отправка статусов заказов...ОК
		|Загрузка заказов...ОК
		|Проверка файлов номенклатур...ОК
		|Выгрузка изменений номенклатуры...ОК
		|	Сбор данных...ОК
		|	Обработка файлов...ОК
		|	Обработка номенклатуры...Ошибка ввода капчи
		|");
		
		Если СтрНайти(СтруктураЗапросаHTTP.ТелоОтвета,"photo not found or already assigned to another item") <> 0 Тогда
			
			ПланыОбмена.ЗарегистрироватьИзменения(ОписаниеУзелОбмена.Ссылка, ОписаниеОперацииСкрипта.ОперацияДляПодтверждения.Ссылка);
			
			МассивИдентификаторовФайлов = Новый Массив;
			Если ОписаниеОперацииСкрипта.ОперацияДляПодтверждения.Описание.Свойство("photo_ids") Тогда
				МассивИдентификаторовФайлов = СтрРазделить(ОписаниеОперацииСкрипта.ОперацияДляПодтверждения.Описание.photo_ids,",");
			КонецЕсли;
			
			МассивИдентификаторовФайлов.Добавить(ОписаниеОперацииСкрипта.ОперацияДляПодтверждения.Описание.main_photo_id);
			
			УдалитьФайлыТовараПоИдентификаторам(МассивИдентификаторовФайлов, ОписаниеУзелОбмена.Ссылка);
			
		Иначе
			ОбработатьОшибку(ОписаниеУзелОбмена, СтруктураЗапросаHTTP.ТелоОтвета);
			ВызватьИсключение СтруктураЗапросаHTTP.ТелоОтвета;
		КонецЕсли;
		
	КонецЕсли;
	
	МассивОпераций = Новый Массив;
	ОперацияДляПодтверждения.Результат = ОтветОперации;
	МассивОпераций.Добавить(ОперацияДляПодтверждения); 
	
	ОбработатьРезультатМассиваОперация(МассивОпераций, ОписаниеУзелОбмена, СтруктураЗапросаHTTP);
	
	ПродолжитьОтложеннуюОперацию(ИмяОперации, ОписаниеОперацииСкрипта,СохраненнаяОперация.ПеременныеОперации, ОписаниеУзелОбмена);
	
	
КонецПроцедуры

Процедура ПродолжитьОтложеннуюОперацию(ИмяОперации, ОписаниеОперацииСкрипта, ПеременныеОперации, ОписаниеУзелОбмена) Экспорт
	
	МЗ = РегистрыСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
	МЗ.УзелИнформационнойБазы = ОписаниеУзелОбмена.Ссылка;
	МЗ.Удалить();
	
	РезультатОперации = Истина;
	Если ИмяОперации = "ВыгрузитьНоменклатуру" Тогда
		РезультатОперации = ПродолжитьОперациюВыгрузитьНоменклатуру(ОписаниеОперацииСкрипта, ПеременныеОперации, ОписаниеУзелОбмена);
	КонецЕсли; 
	
	Если РезультатОперации = Истина Тогда
		СоздатьРегламентноеЗаданиеОбмена(ОписаниеУзелОбмена.Ссылка);
		
		МЗ = РегистрыСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
		МЗ.УзелИнформационнойБазы = ОписаниеУзелОбмена.Ссылка;
		МЗ.ДатаОперации = ТекущаяДата();
		МЗ.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПродолжитьОперациюВыгрузитьНоменклатуру(ОписаниеОперацииСкрипта, ПеременныеОперации, ОписаниеУзелОбмена) Экспорт
	
	ДлительныеОперации.СообщитьПрогресс(80, "Отправка статусов заказов...ОК
	|Загрузка заказов...ОК
	|Проверка файлов номенклатур...ОК
	|Выгрузка изменений номенклатуры...ОК
	|	Сбор данных...ОК
	|	Обработка файлов...ОК
	|	Обработка номенклатуры...
	|");
	
	РезультатВыполнения = ВыполнитьМассивОпераций(ОписаниеОперацииСкрипта.МассивВсехОпераций, ОписаниеУзелОбмена);
	
	ЗарегистрироватьНоменклатуруКОбмену = Новый Массив;
	Если РезультатВыполнения <> Неопределено Тогда
		
		Если РезультатВыполнения.ЭтоКапча Тогда
			
			ОписаниеОперацииСкрипта = Новый Структура;
			ОписаниеОперацииСкрипта.Вставить("ОперацияДляПодтверждения" , РезультатВыполнения.ОперацияДляПодтверждения);
			ОписаниеОперацииСкрипта.Вставить("МассивВсехОпераций" , РезультатВыполнения.МассивВсехОпераций);
			
			СохраненнаяОперация = Новый Структура;
			СохраненнаяОперация.Вставить("ОписаниеОперацииСкрипта", ОписаниеОперацииСкрипта);
			СохраненнаяОперация.Вставить("ПеременныеОперации", ПеременныеОперации);
			
			ДобавитьОтложеннуюОперацию("ВыгрузитьНоменклатуру", СохраненнаяОперация, РезультатВыполнения.Ошибка, ОписаниеУзелОбмена);
			
			Если ЗарегистрироватьНоменклатуруКОбмену.Количество() Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(ОписаниеУзелОбмена.Ссылка, ЗарегистрироватьНоменклатуруКОбмену);
			КонецЕсли;
			
			ДлительныеОперации.СообщитьПрогресс(80, "Отправка статусов заказов...ОК
			|Загрузка заказов...ОК
			|Проверка файлов номенклатур...ОК
			|Выгрузка изменений номенклатуры...ОК
			|	Сбор данных...ОК
			|	Обработка файлов...ОК
			|	Обработка номенклатуры...Капча
			|");
			
			Возврат Ложь;
		Иначе
			
			ЗарегистрироватьНоменклатуруКОбмену = РезультатВыполнения.ЗарегистрироватьНоменклатуруКОбмену;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УдалитьРегистрациюИзменений(ПеременныеОперации.ТаблицаИзмененияСсылка, ПеременныеОперации.ТаблицаИзмененияРегистраЦена, ПеременныеОперации.ТаблицаИзмененияРегистраТовары, ОписаниеУзелОбмена);
	
	Если ПеременныеОперации.МассивХарактеристик.Количество() Тогда
		// Объединяем в группы характеристику
		ПроверитьОбъединитьХарактеристикуВГруппы(ПеременныеОперации.МассивХарактеристик, ОписаниеУзелОбмена, ПеременныеОперации.СпособОбменаСМагазином);
	КонецЕсли;
	
	Если ЗарегистрироватьНоменклатуруКОбмену.Количество() Тогда
		ПланыОбмена.ЗарегистрироватьИзменения(ОписаниеУзелОбмена.Ссылка, ЗарегистрироватьНоменклатуруКОбмену);
		
		Если НЕ ПеременныеОперации.ЭтоПовтор Тогда
			
			Если ПеременныеОперации.СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен") Тогда
				ПеременныеОперации.СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ВсеИзменения");
			КонецЕсли;
			
			ВыгрузитьНоменклатуру(ОписаниеУзелОбмена, ПеременныеОперации.СпособОбменаСМагазином, Истина);
			
		КонецЕсли;
	КонецЕсли;
	
	ДлительныеОперации.СообщитьПрогресс(100, "Отправка статусов заказов...ОК
	|Загрузка заказов...ОК
	|Проверка файлов номенклатур...ОК
	|Выгрузка изменений номенклатуры...ОК
	|	Сбор данных...ОК
	|	Обработка файлов...ОК
	|	Обработка номенклатуры...ОК
	|"); 
	
	Возврат истина;
	
КонецФункции

Процедура ОбработатьИдентификаторыТоваров(СоответствиеИдентификаторов, РезультатЗапросаСопоставленнаяНоменклатура, ОписаниеУзелОбмена, МассивНовыхХарактеристикДляАнализа, СпособОбменаСМагазином)
	
	ВыгружатьХарактеристики = ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик <>
	ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать");
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаСопоставленнаяНоменклатура.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
		
		ОписаниеНоменклатуры = Новый Структура;
		ОписаниеНоменклатуры.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		ОписаниеНоменклатуры.Вставить("Характеристика", ВыборкаДетальныеЗаписи.Характеристика);
		ОписаниеНоменклатуры.Вставить("owner_id", "-" + ОписаниеУзелОбмена.ИдентификаторГруппы);
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Идентификатор) Тогда
			ОписаниеНоменклатуры.Вставить("item_id", ВыборкаДетальныеЗаписи.Идентификатор);
		Иначе
			Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
				Продолжить;
			КонецЕсли;
			
			Если ВыгружатьХарактеристики И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика) Тогда
				МассивНовыхХарактеристикДляАнализа.Добавить(ВыборкаДетальныеЗаписи.Характеристика);
			КонецЕсли;
		КонецЕсли;
		
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьРегистрациюИзменений(ТаблицаИзмененияСсылка, ТаблицаИзмененияРегистраЦена, ТаблицаИзмененияРегистраТовары, ОписаниеУзелОбмена)
	
	МассивУдаленияИзменений = Новый Массив;
	Если ТаблицаИзмененияСсылка <> Неопределено Тогда
		Для Каждого ВыборкаИзменения Из ТаблицаИзмененияСсылка Цикл
			МассивУдаленияИзменений.Добавить(ВыборкаИзменения.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Если ТаблицаИзмененияРегистраЦена <> Неопределено Тогда
		Для Каждого ВыборкаИзменения Из ТаблицаИзмененияРегистраЦена Цикл
			
			НЗ = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			НЗ.Отбор.Период.Установить(ВыборкаИзменения.Период);
			НЗ.Отбор.ВидЦен.Установить(ВыборкаИзменения.ВидЦен);
			НЗ.Отбор.Номенклатура.Установить(ВыборкаИзменения.Номенклатура);
			НЗ.Отбор.Характеристика.Установить(ВыборкаИзменения.Характеристика);
			
			МассивУдаленияИзменений.Добавить(НЗ);
		КонецЦикла;
	КонецЕсли;
	
	Если ТаблицаИзмененияРегистраТовары <> Неопределено Тогда
		Для Каждого ВыборкаИзменения Из ТаблицаИзмененияРегистраТовары Цикл
			
			НЗ = РегистрыСведений.НоменклатураХарактеристикДляМагазинаСоцСетей.СоздатьНаборЗаписей();
			НЗ.Отбор.УзелИнформационнойБазы.Установить(ВыборкаИзменения.УзелИнформационнойБазы);
			НЗ.Отбор.Идентификатор.Установить(ВыборкаИзменения.Идентификатор);
			НЗ.Отбор.Номенклатура.Установить(ВыборкаИзменения.Номенклатура);
			НЗ.Отбор.Характеристика.Установить(ВыборкаИзменения.Характеристика);
			
			МассивУдаленияИзменений.Добавить(НЗ);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого СтрДанные Из МассивУдаленияИзменений Цикл
		ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, СтрДанные);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьТовары(СоответствиеИдентификаторов, РезультатЗапросаНоменклатура, ОписаниеУзелОбмена, МассивИсключенияНоменклатуры, СпособОбменаСМагазином)
	
	Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияБТС.Пауза(1);
	
	СтруктураЗапросаHTTP = ПолучитьСтруктураЗапросаHTTPДляФайлов();
	
	ВыгружатьХарактеристики = ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик <>
	ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать");
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаНоменклатура.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыгружатьХарактеристики И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика)
			И МассивИсключенияНоменклатуры.Найти(ВыборкаДетальныеЗаписи.Номенклатура) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеОсновныхПолей = Новый Структура;
		КлючТовара = ПолучитьКлючТовара(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		
		ИдентификаторФайлКартинки = ВыборкаДетальныеЗаписи.ИдентификаторФайлКартинки;
		Если Не ЗначениеЗаполнено(ИдентификаторФайлКартинки) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ФайлКартинки) Тогда
			
			Если ОписаниеНоменклатуры.Свойство("main_photo_id") Тогда
				ИдентификаторФайлКартинки = ОписаниеНоменклатуры.main_photo_id;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ИдентификаторФайлКартинки) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ФайлКартинки) Тогда
			
			ОписаниеФайла = Новый Структура;
			ОписаниеФайла.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.ФайлКартинки);
			ОписаниеФайла.Вставить("Расширение" , ВыборкаДетальныеЗаписи.ФайлКартинкиРасширение);
			ОписаниеФайла.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
			ОписаниеФайла.Вставить("Характеристика" , ВыборкаДетальныеЗаписи.Характеристика);
			ОписаниеФайла.Вставить("Высота" , ВыборкаДетальныеЗаписи.ФайлКартинкиВысота);
			ОписаниеФайла.Вставить("Ширина" , ВыборкаДетальныеЗаписи.ФайлКартинкиШирина);
			
			ИдентификаторФайлКартинки = ОбработатьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, Истина, СтруктураЗапросаHTTP);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ИдентификаторФайлКартинки) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторФайлКартинкиНоменклатура) Тогда
			ИдентификаторФайлКартинки = ВыборкаДетальныеЗаписи.ИдентификаторФайлКартинкиНоменклатура;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ИдентификаторФайлКартинки) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ФайлКартинкиНоменклатура) Тогда
			
			ОписаниеФайла = Новый Структура;
			ОписаниеФайла.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.ФайлКартинкиНоменклатура);
			ОписаниеФайла.Вставить("Расширение" , ВыборкаДетальныеЗаписи.ФайлКартинкиРасширениеНоменклатура);
			ОписаниеФайла.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
			ОписаниеФайла.Вставить("Характеристика" , ВыборкаДетальныеЗаписи.Характеристика);
			ОписаниеФайла.Вставить("Высота" , ВыборкаДетальныеЗаписи.ФайлКартинкиНоменклатураВысота);
			ОписаниеФайла.Вставить("Ширина" , ВыборкаДетальныеЗаписи.ФайлКартинкиНоменклатураШирина);
			
			ИдентификаторФайлКартинки = ОбработатьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, Истина, СтруктураЗапросаHTTP);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ИдентификаторФайлКартинки) 
			Или СтрДлина(XMLСтрока(СокрЛП(ВыборкаДетальныеЗаписи.Наименование))) < 4
			Или СтрДлина(XMLСтрока(СокрЛП(ВыборкаДетальныеЗаписи.Описание))) < 10 Тогда
			СоответствиеИдентификаторов.Удалить(КлючТовара);
			Продолжить;
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ОсновнойВариант <> NULL Тогда 
			ОписаниеОсновныхПолей.Вставить("is_main_variant", ?(ВыборкаДетальныеЗаписи.ОсновнойВариант = Истина , "1" , "0"));
		КонецЕсли;
		
		ОписаниеОсновныхПолей.Вставить("main_photo_id", ИдентификаторФайлКартинки);
		
		ОписаниеОсновныхПолей.Вставить("name", XMLСтрока(СокрЛП(ВыборкаДетальныеЗаписи.Наименование)));
		
		ОписаниеОсновныхПолей.Вставить("sku", XMLСтрока(ВыборкаДетальныеЗаписи.Артикул));
		ОписаниеОсновныхПолей.Вставить("description", XMLСтрока(СокрЛП(ВыборкаДетальныеЗаписи.Описание)));
		
		ОписаниеОсновныхПолей.Вставить("category_id", XMLСтрока(ВыборкаДетальныеЗаписи.ИдентификаторКатегории));
		ОписаниеОсновныхПолей.Вставить("url", "");
		ОписаниеОсновныхПолей.Вставить("deleted", ?(ВыборкаДетальныеЗаписи.ПометкаУдаления Или ВыборкаДетальныеЗаписи.Недействителен, "1", "0"));
		
		ОписаниеОсновныхПолей.Вставить("dimension_width", XMLСтрока(ВыборкаДетальныеЗаписи.Ширина));
		ОписаниеОсновныхПолей.Вставить("dimension_height", XMLСтрока(ВыборкаДетальныеЗаписи.Высота));
		ОписаниеОсновныхПолей.Вставить("dimension_length", XMLСтрока(ВыборкаДетальныеЗаписи.Длина));
		ОписаниеОсновныхПолей.Вставить("weight", XMLСтрока(ВыборкаДетальныеЗаписи.Вес));
		
		ХешПолейНоменклатуры = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьХешСтроки(ЗначениеВСтрокуВнутр(ОписаниеОсновныхПолей));
		
		Если ХешПолейНоменклатуры = ВыборкаДетальныеЗаписи.ХешПолейНоменклатуры
			И СпособОбменаСМагазином <> ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ПолныйОбмен") Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КлючЗначение Из ОписаниеОсновныхПолей Цикл
			ОписаниеНоменклатуры.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		ОписаниеНоменклатуры.Вставить("ХешПолейНоменклатуры", ХешПолейНоменклатуры);
		ОписаниеНоменклатуры.Вставить("Актуальна", ВыборкаДетальныеЗаписи.Актуальна);
		
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьФайлыНоменклатур(СоответствиеИдентификаторов, РезультатЗапросаФайлы, ОписаниеУзелОбмена, МассивИсключенияНоменклатуры, СпособОбменаСМагазином)
	
	Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияБТС.Пауза(1);
	
	СтруктураЗапросаHTTP = ПолучитьСтруктураЗапросаHTTPДляФайлов();
	
	ВыгружатьХарактеристики = ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик <>
	ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.НеВыгружать");
	
	ВыборкаФайл = РезультатЗапросаФайлы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФайл.Следующий() Цикл 
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаФайл.Номенклатура, ВыборкаФайл.Характеристика);
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		
		ОсновнойФайлУстановлен = Ложь;
		
		МассивИдентификаторовФайлов = Новый Массив;
		Если ОписаниеНоменклатуры <> Неопределено И ОписаниеНоменклатуры.Свойство("photo_ids") Тогда
			МассивИдентификаторовФайлов = СтрРазделить(ОписаниеНоменклатуры.photo_ids,",",Ложь);
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = ВыборкаФайл.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			
			Если МассивИдентификаторовФайлов.Количество() = ОписаниеУзелОбмена.КоличествоФотографийДляКарточки Тогда
				Прервать;
			КонецЕсли;
			
			ИдентификаторФайла = ВыборкаДетальныеЗаписи.ИдентификаторФайла;
			Если ВыборкаДетальныеЗаписи.ТребуетсяЗагрузка Тогда
				
				ОписаниеФайла = Новый Структура;
				ОписаниеФайла.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.ФайлКартинки);
				ОписаниеФайла.Вставить("Расширение" , ВыборкаДетальныеЗаписи.Расширение);
				ОписаниеФайла.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
				ОписаниеФайла.Вставить("Характеристика" , ВыборкаДетальныеЗаписи.Характеристика);
				ОписаниеФайла.Вставить("Высота" , ВыборкаДетальныеЗаписи.ФайлКартинкиВысота);
				ОписаниеФайла.Вставить("Ширина" , ВыборкаДетальныеЗаписи.ФайлКартинкиШирина);
				
				Если ВыгружатьХарактеристики И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика)
					И МассивИсключенияНоменклатуры.Найти(ВыборкаДетальныеЗаписи.Номенклатура) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ОписаниеУзелОбмена.ДобавлятьФайлыХарактеристикиИзНоменклатуры
					И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика) Тогда
					Продолжить;
				КонецЕсли;
				
				ИдентификаторФайла = ОбработатьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, ВыборкаДетальныеЗаписи.ЭтоОсновнойФайл, СтруктураЗапросаHTTP);
				Если ИдентификаторФайла = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.ЭтоОсновнойФайл И Не ОсновнойФайлУстановлен Тогда
				
				ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
				Если ОписаниеНоменклатуры = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ОписаниеНоменклатуры.Свойство("main_photo_id") Тогда
					ОписаниеНоменклатуры.Вставить("main_photo_id", ИдентификаторФайла);
					СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
					ОсновнойФайлУстановлен = Истина;
				КонецЕсли;
				
			Иначе
				МассивИдентификаторовФайлов.Добавить(ИдентификаторФайла);
			КонецЕсли;
			
		КонецЦикла;
		
		Если ВыгружатьХарактеристики И НЕ ЗначениеЗаполнено(ВыборкаФайл.Характеристика)
			И МассивИсключенияНоменклатуры.Найти(ВыборкаФайл.Номенклатура) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаФайл.Номенклатура, ВыборкаФайл.Характеристика);
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		ОписаниеНоменклатуры.Вставить("photo_ids", СтрСоединить(МассивИдентификаторовФайлов,","));
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьФайлыХарактеристик(СоответствиеИдентификаторов, РезультатЗапросаФайлыХарактеристик , ОписаниеУзелОбмена, СпособОбменаСМагазином)
	
	Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
		Возврат;
	КонецЕсли; 
	
	ОбщегоНазначенияБТС.Пауза(1);
	
	СтруктураЗапросаHTTP = ПолучитьСтруктураЗапросаHTTPДляФайлов();
	
	ВыборкаФайл = РезультатЗапросаФайлыХарактеристик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФайл.Следующий() Цикл 
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаФайл.Номенклатура, ВыборкаФайл.Характеристика);
		МассивИдентификаторовФайлов = Новый Массив;
		
		ОсновнойФайлУстановлен = Ложь;
		
		ВыборкаДетальныеЗаписи = ВыборкаФайл.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			
			Если МассивИдентификаторовФайлов.Количество() = ОписаниеУзелОбмена.КоличествоФотографийДляКарточки Тогда
				Прервать;
			КонецЕсли;
			
			ИдентификаторФайла = ВыборкаДетальныеЗаписи.ИдентификаторФайла;
			Если ВыборкаДетальныеЗаписи.ТребуетсяЗагрузка Тогда
				
				ОписаниеФайла = Новый Структура;
				ОписаниеФайла.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.ФайлКартинки);
				ОписаниеФайла.Вставить("Расширение" , ВыборкаДетальныеЗаписи.Расширение);
				ОписаниеФайла.Вставить("Высота" , ВыборкаДетальныеЗаписи.ФайлКартинкиВысота);
				ОписаниеФайла.Вставить("Ширина" , ВыборкаДетальныеЗаписи.ФайлКартинкиШирина);
				ОписаниеФайла.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
				ОписаниеФайла.Вставить("Характеристика" , ВыборкаДетальныеЗаписи.Характеристика);
				
				ИдентификаторФайла = ОбработатьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, ВыборкаДетальныеЗаписи.ЭтоОсновнойФайл, СтруктураЗапросаHTTP);
				Если ИдентификаторФайла = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ТребуетсяПауза = Истина;
				
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.ЭтоОсновнойФайл И Не ОсновнойФайлУстановлен Тогда
				
				ОсновнойФайлУстановлен = Истина;
				
				ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
				
				ОписаниеНоменклатуры.Вставить("main_photo_id", ИдентификаторФайла);
				СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
				
			Иначе
				МассивИдентификаторовФайлов.Добавить(ИдентификаторФайла);
			КонецЕсли;
			
		КонецЦикла;
		
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		
		ОписаниеНоменклатуры.Вставить("photo_ids", СтрСоединить(МассивИдентификаторовФайлов,","));
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьОстаткиТоваров(СоответствиеИдентификаторов, РезультатЗапросаОстаток)
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаОстаток.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		
		ОписаниеНоменклатуры.Вставить("stock_amount", XMLСтрока(ВыборкаДетальныеЗаписи.КоличествоОстаток));
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьЦеныТоваров(СоответствиеИдентификаторов, РезультатЗапросаЦена)
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаЦена.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОсновнаяЦена) Тогда
			ОписаниеНоменклатуры.Вставить("price", XMLСтрока(ВыборкаДетальныеЗаписи.ОсновнаяЦена));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СтараяЦена) Тогда
			ОписаниеНоменклатуры.Вставить("old_price", XMLСтрока(ВыборкаДетальныеЗаписи.СтараяЦена));
		КонецЕсли;
		
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьИдентификаторыВариантов(СоответствиеИдентификаторов, РезультатЗапросаВариантыХарактеристик, СпособОбменаСМагазином)
	
	Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаВариантыХарактеристик.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		КлючТовара = ПолучитьКлючТовара(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
		ОписаниеНоменклатуры = СоответствиеИдентификаторов.Получить(КлючТовара);
		
		ОписаниеНоменклатуры.Вставить("variant_ids", ВыборкаДетальныеЗаписи.Идентификатор);
		
		СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьНоменклатуруНаИсключение(СоответствиеИдентификаторов,ОписаниеУзелОбмена, МассивИсключенияНоменклатуры, МассивНовыхХарактеристикДляАнализа)
	
	Если МассивНовыхХарактеристикДляАнализа.Количество() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
		|	СопоставлениеИдентификаторовМагазинаНоменклатура.Идентификатор КАК ИдентификаторНоменклатура,
		|	СопоставлениеИдентификаторовМагазинаХарактеристика.Идентификатор КАК ИдентификаторХарактеристика
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазинаНоменклатура
		|		ПО ХарактеристикиНоменклатуры.Владелец = СопоставлениеИдентификаторовМагазинаНоменклатура.Ссылка
		|			И (СопоставлениеИдентификаторовМагазинаНоменклатура.УзелИнформационнойБазы = &УзелОбмена)
		|			И (СопоставлениеИдентификаторовМагазинаНоменклатура.ТипИдентификатора = ""item"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазинаХарактеристика
		|		ПО ХарактеристикиНоменклатуры.Ссылка = СопоставлениеИдентификаторовМагазинаХарактеристика.Ссылка
		|			И (СопоставлениеИдентификаторовМагазинаХарактеристика.УзелИнформационнойБазы = &УзелОбмена)
		|			И (СопоставлениеИдентификаторовМагазинаХарактеристика.ТипИдентификатора = ""item"")
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Владелец В
		|			(ВЫБРАТЬ
		|				ХарактеристикиНоменклатуры.Владелец КАК Владелец
		|			ИЗ
		|				Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ГДЕ
		|				ХарактеристикиНоменклатуры.Ссылка В (&МассивНовыхХарактеристикДляАнализа))
		|ИТОГИ ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("МассивНовыхХарактеристикДляАнализа", МассивНовыхХарактеристикДляАнализа);
		Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			МассивИсключенияНоменклатуры.Добавить(ВыборкаНоменклатура.Номенклатура);
			СоответствиеИдентификаторов.Удалить(ВыборкаНоменклатура.Номенклатура);
			
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторХарактеристика) И
					ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ИдентификаторНоменклатура) Тогда
					
					ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка,ВыборкаДетальныеЗаписи.Характеристика
					,ВыборкаДетальныеЗаписи.ИдентификаторНоменклатура,"item",ОписаниеУзелОбмена.ТекущаяДата);
					
					УдалитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка,ВыборкаДетальныеЗаписи.Номенклатура
					,ВыборкаДетальныеЗаписи.ИдентификаторНоменклатура,"item");
					
					КлючТовара = ПолучитьКлючТовара(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
					
					ОписаниеНоменклатуры = Новый Структура;
					ОписаниеНоменклатуры.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
					ОписаниеНоменклатуры.Вставить("Характеристика", ВыборкаДетальныеЗаписи.Характеристика);
					ОписаниеНоменклатуры.Вставить("owner_id", "-" + ОписаниеУзелОбмена.ИдентификаторГруппы);
					ОписаниеНоменклатуры.Вставить("item_id", ВыборкаДетальныеЗаписи.ИдентификаторНоменклатура);
					СоответствиеИдентификаторов.Вставить(КлючТовара, ОписаниеНоменклатуры);
					
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьОбъединитьХарактеристикуВГруппы(МассивХарактеристик, ОписаниеУзелОбмена, СпособОбменаСМагазином)
	
	Если СпособОбменаСМагазином = ПредопределенноеЗначение("Перечисление.СпособыОбменаСМагазиномСоцСетей.ТолькоЦеныИКоличество") Тогда 
		Возврат;
	КонецЕсли;
	
	Если ОписаниеУзелОбмена.ВариантВыгрузкиХарактеристик =
		ПредопределенноеЗначение("Перечисление.ВариантыВыгрузкиХарактеристикДляМагазинаСоцСетей.ВыгружатьХарактеристикуКакНаборСвойств") Тогда
		
		АдресРесурса = "/method/market.getById";
		ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
		
		СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Ссылка В(&МассивХарактеристик)
		|	И НЕ ХарактеристикиНоменклатуры.Владелец В
		|				(ВЫБРАТЬ
		|					ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей.Номенклатура КАК Номенклатура
		|				ИЗ
		|					РегистрСведений.ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей КАК ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей
		|				ГДЕ
		|					ХарактеристикаИсключеннаяИзНабораСвойствДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХарактеристикиНоменклатуры.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Характеристика КАК Характеристика,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор
		|ИЗ
		|	вт КАК вт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|		ПО вт.Характеристика = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
		|ГДЕ
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""";
		
		Запрос.УстановитьПараметр("МассивХарактеристик", МассивХарактеристик);
		Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		МассивОперация = Новый Массив;
		МассивСтрок = Новый Массив;
		МассивХарактеристикБлок = Новый Массив;
		НомерПоПорядку = 1;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			
			Если НомерПоПорядку > 50 Тогда
				ОписаниеОперации = Новый Структура("МассивСтрок,МассивХарактеристик", МассивСтрок, МассивХарактеристикБлок);
				МассивОперация.Добавить(ОписаниеОперации);
				МассивСтрок = Новый Массив;
				МассивХарактеристикБлок = Новый Массив;
			КонецЕсли;
			
			МассивСтрок.Добавить(СтрШаблон("-%1_%2" , ОписаниеУзелОбмена.ИдентификаторГруппы, ВыборкаДетальныеЗаписи.Идентификатор));
			МассивХарактеристикБлок.Добавить(ВыборкаДетальныеЗаписи.Характеристика);
			
			НомерПоПорядку = НомерПоПорядку + 1;
			
		КонецЦикла;
		
		Если МассивСтрок.Количество() Тогда 
			ОписаниеОперации = Новый Структура("МассивСтрок,МассивХарактеристик", МассивСтрок, МассивХарактеристикБлок);
			МассивОперация.Добавить(ОписаниеОперации);
		КонецЕсли;
		
		Для Каждого ОписаниеОперации Из МассивОперация Цикл
			
			АдресРесурса = АдресРесурса + СтрШаблон("&extended=1&item_ids=%1", СтрСоединить(ОписаниеОперации.МассивСтрок,","));
			МассивНоменклатурДляОбработки = ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
			
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
			Для Н = 0 По МассивНоменклатурДляОбработки.ВГраница() Цикл
				
				ИдентификаторГруппы = ПолучитьИдентификаторСтрокой(МассивНоменклатурДляОбработки[Н].Получить("variants_grouping_id"));
				Если Не ЗначениеЗаполнено(ИдентификаторГруппы) Тогда 
					ИдентификаторГруппы = "";
				КонецЕсли;
				
				ДобавитьЗначениеДополнительныхПолейОбъектовМагазина(ОписаниеУзелОбмена.Ссылка, ОписаниеОперации.МассивХарактеристик[Н], ИдентификаторГруппы
				, "item_group_id", ОписаниеУзелОбмена.ТекущаяДата);
				
			КонецЦикла;
			ЗафиксироватьТранзакцию();
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Владелец В
		|			(ВЫБРАТЬ
		|				ХарактеристикиНоменклатуры.Владелец КАК Владелец
		|			ИЗ
		|				Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ГДЕ
		|				ХарактеристикиНоменклатуры.Ссылка В (&МассивХарактеристик))
		|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
		|	И НЕ ХарактеристикиНоменклатуры.Недействителен
		|
		|СГРУППИРОВАТЬ ПО
		|	ХарактеристикиНоменклатуры.Ссылка,
		|	ХарактеристикиНоменклатуры.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Характеристика КАК Характеристика,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор,
		|	ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Значение КАК item_group_id,
		|	вт.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_Группа
		|ИЗ
		|	вт КАК вт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|		ПО вт.Характеристика = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей КАК ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей
		|		ПО вт.Характеристика = ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Ссылка
		|ГДЕ
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
		|	И ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена
		|	И ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.ИмяПоля = ""item_group_id""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Группа.Характеристика КАК Характеристика,
		|	ВТ_Группа.Идентификатор КАК Идентификатор,
		|	ВТ_Группа.item_group_id КАК item_group_id,
		|	ВТ_Группа.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТ_Группа КАК ВТ_Группа
		|ГДЕ
		|	ВТ_Группа.Номенклатура В
		|			(ВЫБРАТЬ
		|				ВТ_Группа.Номенклатура КАК Номенклатура
		|			ИЗ
		|				ВТ_Группа КАК ВТ_Группа
		|			ГДЕ
		|				ВТ_Группа.item_group_id = """")
		|	И ВТ_Группа.Номенклатура В
		|			(ВЫБРАТЬ
		|				ВТ_Группа.Номенклатура КАК Номенклатура
		|			ИЗ
		|				ВТ_Группа КАК ВТ_Группа
		|			СГРУППИРОВАТЬ ПО
		|				ВТ_Группа.Номенклатура
		|			ИМЕЮЩИЕ
		|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Группа.Характеристика) > 1)
		|ИТОГИ
		|	МАКСИМУМ(item_group_id)
		|ПО
		|	Номенклатура";
		Запрос.УстановитьПараметр("МассивХарактеристик", МассивХарактеристик);
		Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаГруппа = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		МассивОпераций = Новый Массив;
		Пока ВыборкаГруппа.Следующий() Цикл
			
			МассивХарактеристикБлок = Новый Массив;
			МассивСтрок = Новый Массив;
			
			ВыборкаДетальныеЗаписи = ВыборкаГруппа.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				МассивСтрок.Добавить(ВыборкаДетальныеЗаписи.Идентификатор);
				МассивХарактеристикБлок.Добавить(ВыборкаДетальныеЗаписи.Характеристика);
				
			КонецЦикла;
			
			Если МассивСтрок.Количество() > 1 Тогда
				ОписаниеПараметров = Новый Структура;
				ОписаниеПараметров.Вставить("group_id", ОписаниеУзелОбмена.ИдентификаторГруппы);
				ОписаниеПараметров.Вставить("item_ids", СтрСоединить(МассивСтрок,","));
				ОписаниеПараметров.Вставить("uid_1c", Строка(Новый УникальныйИдентификатор));
				
				Если ЗначениеЗаполнено(ВыборкаГруппа.item_group_id) Тогда
					ОписаниеПараметров.Вставить("item_group_id", ВыборкаГруппа.item_group_id);
				КонецЕсли;
				
				ОписаниеОперации = Новый Структура;
				ОписаниеОперации.Вставить("ИмяМетода" , "market.groupItems");
				
				ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеПараметров));
				ОписаниеОперации.Вставить("Результат" , Неопределено);
				ОписаниеОперации.Вставить("Ошибка" , "");
				ОписаниеОперации.Вставить("Описание" , ОписаниеПараметров);
				ОписаниеОперации.Вставить("Ссылка" , МассивХарактеристикБлок);
				МассивОпераций.Добавить(ОписаниеОперации);
				
				МассивСтрок = Новый Массив;
				МассивХарактеристикБлок = Новый Массив;
			КонецЕсли;
			
		КонецЦикла;
		
		ВыполнитьМассивОпераций(МассивОпераций, ОписаниеУзелОбмена);
		
	КонецЕсли;
	
КонецПроцедуры 

Функция ПолучитьКлючТовара(Номенклатура, Характеристика)
	
	Если ЗначениеЗаполнено(Характеристика) Тогда
		Возврат Характеристика;
	КонецЕсли;
	
	Возврат Номенклатура;
	
КонецФункции 

Процедура ДобавитьСопоставлениеФайлаМагазина(УзелИнформационнойБазы, Номенклатура, Характеристика, Файл, Идентификатор, ДатаЗагрузки)
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("УзелИнформационнойБазы", УзелИнформационнойБазы);
	СтруктураЗаписи.Вставить("Номенклатура", Номенклатура);
	СтруктураЗаписи.Вставить("Характеристика", Характеристика);
	СтруктураЗаписи.Вставить("Файл", Файл);
	СтруктураЗаписи.Вставить("Идентификатор", Идентификатор);
	СтруктураЗаписи.Вставить("ДатаЗагрузки", ДатаЗагрузки);
	
	РегистрыСведений.СопоставлениеФайловДляМагазинаСоцСетей.ДобавитьЗапись(СтруктураЗаписи);
	
КонецПроцедуры 

Процедура ДобавитьСопоставлениеИдентификаторовМагазина(УзелИнформационнойБазы, Ссылка, Идентификатор, ТипИдентификатора, ДатаЗагрузки) Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("УзелИнформационнойБазы", УзелИнформационнойБазы);
	СтруктураЗаписи.Вставить("Ссылка", Ссылка);
	СтруктураЗаписи.Вставить("Идентификатор", Идентификатор);
	СтруктураЗаписи.Вставить("ТипИдентификатора", ТипИдентификатора);
	СтруктураЗаписи.Вставить("ДатаЗагрузки", ДатаЗагрузки);
	
	РегистрыСведений.СопоставлениеИдентификаторовМагазиновСоцСетей.ДобавитьЗапись(СтруктураЗаписи);
	
КонецПроцедуры

Процедура УдалитьСопоставлениеИдентификаторовМагазина(УзелИнформационнойБазы, Ссылка, Идентификатор, ТипИдентификатора) Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("УзелИнформационнойБазы", УзелИнформационнойБазы);
	СтруктураЗаписи.Вставить("Ссылка", Ссылка);
	СтруктураЗаписи.Вставить("Идентификатор", Идентификатор);
	СтруктураЗаписи.Вставить("ТипИдентификатора", ТипИдентификатора);
	
	РегистрыСведений.СопоставлениеИдентификаторовМагазиновСоцСетей.УдалитьЗапись(СтруктураЗаписи);
	
КонецПроцедуры

Процедура УдалитьЗаписьУдаленияТовараВМагазине(УзелИнформационнойБазы, Ссылка) Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("УзелИнформационнойБазы", УзелИнформационнойБазы);
	СтруктураЗаписи.Вставить("Ссылка", Ссылка);
	
	РегистрыСведений.НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.УдалитьЗапись(СтруктураЗаписи);
	
КонецПроцедуры

Процедура УдалитьФайлыТовараПоИдентификаторам(МассивИдентификаторов, УзелИнформационнойБазы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Характеристика КАК Характеристика,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Файл
	|ИЗ
	|	РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|ГДЕ
	|	СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор В(&МассивИдентификаторов)";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", УзелИнформационнойБазы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.СопоставлениеФайловДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
		МЗ.УзелИнформационнойБазы = ВыборкаДетальныеЗаписи.УзелИнформационнойБазы;
		МЗ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		МЗ.Характеристика = ВыборкаДетальныеЗаписи.Характеристика;
		МЗ.Файл = ВыборкаДетальныеЗаписи.Файл;
		МЗ.Удалить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписьУдаленияТовараВМагазине(УзелИнформационнойБазы, Ссылка) Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("УзелИнформационнойБазы", УзелИнформационнойБазы);
	СтруктураЗаписи.Вставить("Ссылка", Ссылка);
	
	РегистрыСведений.НоменклатураХарактеристикаУдаленнаяИзОбменаДляМагазинаСоцСетей.ДобавитьЗапись(СтруктураЗаписи);
	
	// После удаления товара его идентификаторы очищаются в ВК.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Характеристика КАК Характеристика,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Файл
	|ИЗ
	|	РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|ГДЕ
	|	СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И (СопоставлениеФайловДляМагазинаСоцСетей.Номенклатура = &Ссылка
	|			ИЛИ СопоставлениеФайловДляМагазинаСоцСетей.Характеристика = &Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", УзелИнформационнойБазы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = РегистрыСведений.СопоставлениеФайловДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
		МЗ.УзелИнформационнойБазы = ВыборкаДетальныеЗаписи.УзелИнформационнойБазы;
		МЗ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		МЗ.Характеристика = ВыборкаДетальныеЗаписи.Характеристика;
		МЗ.Файл = ВыборкаДетальныеЗаписи.Файл;
		МЗ.Удалить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьХарактеристикаИсключеннаяИзНабораСвойствМагазина(УзелИнформационнойБазы, Номенклатура) Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("УзелИнформационнойБазы", УзелИнформационнойБазы);
	СтруктураЗаписи.Вставить("Номенклатура", Номенклатура);
	
	РегистрыСведений.СопоставлениеИдентификаторовМагазиновСоцСетей.ДобавитьЗапись(СтруктураЗаписи);
	
КонецПроцедуры

Процедура ДобавитьХешКонтролируемыхРеквизитовМагазина(УзелИнформационнойБазы, Ссылка, Хеш)
	
	МЗ = РегистрыСведений.ХешКонтролируемыхРеквизитовДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
	МЗ.УзелИнформационнойБазы = УзелИнформационнойБазы;
	МЗ.Ссылка = Ссылка;
	МЗ.Хеш = Хеш;
	МЗ.Записать();
	
КонецПроцедуры

Процедура ДобавитьОстаткиТоваровМагазина(УзелИнформационнойБазы, Номенклатура, Количество, Характеристика = Неопределено, СтруктурнаяЕдиница = Неопределено)
	
	МЗ = РегистрыСведений.ОстаткиТоваровМагазинаСоцСетей.СоздатьМенеджерЗаписи();
	МЗ.УзелИнформационнойБазы = УзелИнформационнойБазы;
	МЗ.Номенклатура = Номенклатура;
	МЗ.Характеристика = Характеристика;
	МЗ.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
	МЗ.Количество = Количество;
	МЗ.Записать();
	
КонецПроцедуры

Функция ОбработатьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, ЭтоОсновнойФайл = Ложь, СтруктураЗапросаHTTP) Экспорт 
	
	РезультатЗагрузкиьФайла = ЗагрузитьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, ЭтоОсновнойФайл, СтруктураЗапросаHTTP);
	Если РезультатЗагрузкиьФайла = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДобавитьСопоставлениеФайлаМагазина(ОписаниеУзелОбмена.Ссылка, ОписаниеФайла.Номенклатура, ОписаниеФайла.Характеристика
	, ОписаниеФайла.Ссылка, РезультатЗагрузкиьФайла.Идентификатор, ОписаниеУзелОбмена.ТекущаяДата);
	
	Возврат РезультатЗагрузкиьФайла.Идентификатор;
	
КонецФункции

Функция ОбработатьФайлПодборкиVK(ОписаниеУзелОбмена, ОписаниеФайла, СтруктураЗапросаHTTP) Экспорт 
	
	РезультатЗагрузкиьФайла = ЗагрузитьФайлПодборкиVK(ОписаниеУзелОбмена, ОписаниеФайла, СтруктураЗапросаHTTP);
	Если РезультатЗагрузкиьФайла = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, ОписаниеФайла.Ссылка, РезультатЗагрузкиьФайла.Идентификатор, "album_photo", ОписаниеУзелОбмена.ТекущаяДата);
	
	Возврат РезультатЗагрузкиьФайла.Идентификатор;
	
КонецФункции 

Функция ЗагрузитьФайлПодборкиVK(ОписаниеУзелОбмена, ОписаниеФайла, СтруктураЗапросаHTTPДляФайла) Экспорт
	
	ДвоичныеДанныеФайла = Неопределено;
	Если ОписаниеФайла.Высота = 0 И ОписаниеФайла.Ширина = 0 Тогда
		
		ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ОписаниеФайла.Ссылка);
		Картинка = Новый Картинка(ДвоичныеДанныеФайла);
		
		ОписаниеФайла.Вставить("Высота" , Картинка.Высота());
		ОписаниеФайла.Вставить("Ширина" , Картинка.Ширина());
		
		ДобавитьДополнительныеПоляФайлам(ОписаниеФайла.Ссылка, ОписаниеФайла.Высота, ОписаниеФайла.Ширина);
		
		Картинка = Неопределено;
	КонецЕсли;
	
	Если ОписаниеФайла.Высота < 720 Или ОписаниеФайла.Ширина < 1280 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	АдресСервераЗагрузкиФайловПодборок = СтруктураЗапросаHTTPДляФайла.ОбщийКэш.Получить("АдресСервераЗагрузкиФайловПодборок");
	
	Если АдресСервераЗагрузкиФайловПодборок = Неопределено Тогда
		АдресСервераЗагрузкиФайловПодборок = ПолучитьАдресСервераФайловПодборок(ОписаниеУзелОбмена, СтруктураЗапросаHTTPДляФайла);
		СтруктураЗапросаHTTPДляФайла.ОбщийКэш.Вставить("АдресСервераЗагрузкиФайловПодборок", АдресСервераЗагрузкиФайловПодборок);
	КонецЕсли;
	
	Если АдресСервераЗагрузкиФайловПодборок = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДвоичныеДанныеФайла = Неопределено Тогда
		ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ОписаниеФайла.Ссылка);
	КонецЕсли;
	
	ИмяФайлаДляЗагрузки = СтрШаблон("f_%1", СтрЗаменить(Строка(Новый УникальныйИдентификатор),"-",""));
	
	РезультатСообщение = СоздатьСообщениеMultipart(ДвоичныеДанныеФайла, "file", СтрШаблон("%1.%2",ИмяФайлаДляЗагрузки, ОписаниеФайла.Расширение));
	
	ДвоичныеДанныеФайла = Неопределено;
	
	СтруктураЗапросаHTTP = ИнтеграцияСМагазинамиСоцСетейСервер.ПодготовитьHTTPЗапрос();
	СтруктураЗапросаHTTP.Сервер = СтрЗаменить(АдресСервераЗагрузкиФайловПодборок, "https://", "");
	СтруктураЗапросаHTTP.АдресРесурса = "";
	СтруктураЗапросаHTTP.ТелоЗапроса = РезультатСообщение.Тело;
	СтруктураЗапросаHTTP.ИмяМетода = "post";
	СтруктураЗапросаHTTP.ТипТелоЗапроса = 2;
	СтруктураЗапросаHTTP.Заголовки = РезультатСообщение.Заголовки;
	СтруктураЗапросаHTTP.ТекстПроверкиДляПовторенияЗапроса = СтруктураЗапросаHTTPДляФайла.ТекстПроверкиДляПовторенияЗапроса;
	СтруктураЗапросаHTTP.ИнтервалОжиданияПередПовторением = СтруктураЗапросаHTTPДляФайла.ИнтервалОжиданияПередПовторением;
	СтруктураЗапросаHTTP.ОграничениеНаКоличествоВызововС = СтруктураЗапросаHTTPДляФайла.ОграничениеНаКоличествоВызововС;
	СтруктураЗапросаHTTP.СчетчикВызовов = СтруктураЗапросаHTTPДляФайла.СчетчикВызовов;
	
	ОтветСоответствие = ВыполнитьЗапросИПроверить(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, "");
	Если ОтветСоответствие = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураЗапросаHTTPДляФайла.ТекстПроверкиДляПовторенияЗапроса = СтруктураЗапросаHTTP.ТекстПроверкиДляПовторенияЗапроса;
	СтруктураЗапросаHTTPДляФайла.ИнтервалОжиданияПередПовторением = СтруктураЗапросаHTTP.ИнтервалОжиданияПередПовторением;
	СтруктураЗапросаHTTPДляФайла.ОграничениеНаКоличествоВызововС = СтруктураЗапросаHTTP.ОграничениеНаКоличествоВызововС;
	СтруктураЗапросаHTTPДляФайла.СчетчикВызовов = СтруктураЗапросаHTTP.СчетчикВызовов;
	
	АдресРесурса = "/method/photos.saveMarketAlbumPhoto";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&group_id=%1&hash=%2&photo=%3&server=%4"
	, ОписаниеУзелОбмена.ИдентификаторГруппы
	, ОтветСоответствие.Получить("hash")
	, ОтветСоответствие.Получить("photo")
	, XMLСтрока(ОтветСоответствие.Получить("server"))
	);
	
	Если ОтветСоответствие.Получить("crop_data") <> Неопределено Тогда
		АдресРесурса = АдресРесурса + СтрШаблон("%1&crop_data=%2", АдресРесурса, ОтветСоответствие.Получить("crop_data"));
	КонецЕсли;
	
	Если ОтветСоответствие.Получить("crop_hash") <> Неопределено Тогда
		АдресРесурса = АдресРесурса + СтрШаблон("%1&crop_hash=%2", АдресРесурса, ОтветСоответствие.Получить("crop_hash"));
	КонецЕсли;
	
	СтруктураЗапросаHTTPДляФайла.АдресРесурса = АдресРесурса;
	
	ОтветМассив = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTPДляФайла, СтруктураЗапросаHTTPДляФайла.АдресРесурса);
	Если ОтветСоответствие = Неопределено Или ТипЗнч(ОтветМассив) <> Тип("Массив") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ОтветМассив.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СоответствиеСсылок = Новый Соответствие;
	МаксРазмер = 0;
	Для Каждого Стр Из ОтветМассив[0].Получить("sizes") Цикл
		СоответствиеСсылок.Вставить(Стр.Получить("height"),Стр.Получить("url"));
		МаксРазмер = Макс(МаксРазмер, Стр.Получить("height"));
	КонецЦикла;
	
	ПубличнаяСсылка = СоответствиеСсылок.Получить(МаксРазмер);
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор" , ПолучитьИдентификаторСтрокой(ОтветМассив[0].Получить("id")));
	Результат.Вставить("ПубличнаяСсылка" , ПубличнаяСсылка);
	
	Возврат Результат;
	
КонецФункции

Функция ЗагрузитьФайлVK(ОписаниеУзелОбмена, ОписаниеФайла, ЭтоОсновнойФайл = Ложь, СтруктураЗапросаHTTPДляФайла) Экспорт
	
	ДвоичныеДанныеФайла = Неопределено;
	Если ОписаниеФайла.Высота = 0 И ОписаниеФайла.Ширина = 0 Тогда
		
		ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ОписаниеФайла.Ссылка);
		Картинка = Новый Картинка(ДвоичныеДанныеФайла);
		
		ОписаниеФайла.Вставить("Высота" , Картинка.Высота());
		ОписаниеФайла.Вставить("Ширина" , Картинка.Ширина());
		
		ДобавитьДополнительныеПоляФайлам(ОписаниеФайла.Ссылка, ОписаниеФайла.Высота, ОписаниеФайла.Ширина);
		
		Картинка = Неопределено;
	КонецЕсли;
	
	Если ОписаниеФайла.Высота < 400 Или ОписаниеФайла.Ширина < 400 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	АдресСервераЗагрузкиФайлов = СтруктураЗапросаHTTPДляФайла.ОбщийКэш.Получить("АдресСервераЗагрузкиФайлов" + ЭтоОсновнойФайл);
	
	Если АдресСервераЗагрузкиФайлов = Неопределено Тогда
		АдресСервераЗагрузкиФайлов = ПолучитьАдресСервераФайлов(ОписаниеУзелОбмена, ЭтоОсновнойФайл, СтруктураЗапросаHTTPДляФайла);
		СтруктураЗапросаHTTPДляФайла.ОбщийКэш.Вставить("АдресСервераЗагрузкиФайлов" + ЭтоОсновнойФайл, АдресСервераЗагрузкиФайлов);
	КонецЕсли;
	
	Если АдресСервераЗагрузкиФайлов = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДвоичныеДанныеФайла = Неопределено Тогда
		ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ОписаниеФайла.Ссылка);
	КонецЕсли;
	
	ИмяФайлаДляЗагрузки = СтрШаблон("f_%1", СтрЗаменить(Строка(Новый УникальныйИдентификатор),"-",""));
	
	РезультатСообщение = СоздатьСообщениеMultipart(ДвоичныеДанныеФайла, "file", СтрШаблон("%1.%2",ИмяФайлаДляЗагрузки, ОписаниеФайла.Расширение));
	
	ДвоичныеДанныеФайла = Неопределено;
	
	СтруктураЗапросаHTTP = ИнтеграцияСМагазинамиСоцСетейСервер.ПодготовитьHTTPЗапрос();
	СтруктураЗапросаHTTP.Сервер = СтрЗаменить(АдресСервераЗагрузкиФайлов, "https://", "");
	СтруктураЗапросаHTTP.АдресРесурса = "";
	СтруктураЗапросаHTTP.ТелоЗапроса = РезультатСообщение.Тело;
	СтруктураЗапросаHTTP.ИмяМетода = "post";
	СтруктураЗапросаHTTP.ТипТелоЗапроса = 2;
	СтруктураЗапросаHTTP.Заголовки = РезультатСообщение.Заголовки;
	СтруктураЗапросаHTTP.ТекстПроверкиДляПовторенияЗапроса = СтруктураЗапросаHTTPДляФайла.ТекстПроверкиДляПовторенияЗапроса;
	СтруктураЗапросаHTTP.ИнтервалОжиданияПередПовторением = СтруктураЗапросаHTTPДляФайла.ИнтервалОжиданияПередПовторением;
	СтруктураЗапросаHTTP.ОграничениеНаКоличествоВызововС = СтруктураЗапросаHTTPДляФайла.ОграничениеНаКоличествоВызововС;
	СтруктураЗапросаHTTP.СчетчикВызовов = СтруктураЗапросаHTTPДляФайла.СчетчикВызовов;
	
	ОтветСоответствие = ВыполнитьЗапросИПроверить(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, "");
	Если ОтветСоответствие = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураЗапросаHTTPДляФайла.ТекстПроверкиДляПовторенияЗапроса = СтруктураЗапросаHTTP.ТекстПроверкиДляПовторенияЗапроса;
	СтруктураЗапросаHTTPДляФайла.ИнтервалОжиданияПередПовторением = СтруктураЗапросаHTTP.ИнтервалОжиданияПередПовторением;
	СтруктураЗапросаHTTPДляФайла.ОграничениеНаКоличествоВызововС = СтруктураЗапросаHTTP.ОграничениеНаКоличествоВызововС;
	СтруктураЗапросаHTTPДляФайла.СчетчикВызовов = СтруктураЗапросаHTTP.СчетчикВызовов;
	
	АдресРесурса = "/method/photos.saveMarketPhoto";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&group_id=%1&hash=%2&photo=%3&server=%4"
	, ОписаниеУзелОбмена.ИдентификаторГруппы
	, ОтветСоответствие.Получить("hash")
	, ОтветСоответствие.Получить("photo")
	, XMLСтрока(ОтветСоответствие.Получить("server"))
	);
	
	Если ОтветСоответствие.Получить("crop_data") <> Неопределено Тогда
		АдресРесурса = АдресРесурса + СтрШаблон("%1&crop_data=%2", АдресРесурса, ОтветСоответствие.Получить("crop_data"));
	КонецЕсли;
	
	Если ОтветСоответствие.Получить("crop_hash") <> Неопределено Тогда
		АдресРесурса = АдресРесурса + СтрШаблон("%1&crop_hash=%2", АдресРесурса, ОтветСоответствие.Получить("crop_hash"));
	КонецЕсли;
	
	СтруктураЗапросаHTTPДляФайла.АдресРесурса = АдресРесурса;
	
	ОтветМассив = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTPДляФайла, СтруктураЗапросаHTTPДляФайла.АдресРесурса);
	Если ОтветСоответствие = Неопределено Или ТипЗнч(ОтветМассив) <> Тип("Массив") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ОтветМассив.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СоответствиеСсылок = Новый Соответствие;
	МаксРазмер = 0;
	Для Каждого Стр Из ОтветМассив[0].Получить("sizes") Цикл
		СоответствиеСсылок.Вставить(Стр.Получить("height"),Стр.Получить("url"));
		МаксРазмер = Макс(МаксРазмер, Стр.Получить("height"));
	КонецЦикла;
	
	ПубличнаяСсылка = СоответствиеСсылок.Получить(МаксРазмер);
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор" , ПолучитьИдентификаторСтрокой(ОтветМассив[0].Получить("id")));
	Результат.Вставить("ПубличнаяСсылка" , ПубличнаяСсылка);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьАдресСервераФайлов(ОписаниеУзелОбмена, ЭтоОсновнойФайл = Ложь, СтруктураЗапросаHTTPДляФайла) Экспорт
	
	АдресРесурса = "/method/photos.getMarketUploadServer";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&group_id=%1&main_photo=%2", ОписаниеУзелОбмена.ИдентификаторГруппы, ?(ЭтоОсновнойФайл,1,0));
	
	ОтветСоответствие = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTPДляФайла, АдресРесурса);
	Если ОтветСоответствие = Неопределено Тогда  
		Возврат Неопределено;
	КонецЕсли;
	
	АдресСервера = ОтветСоответствие.Получить("upload_url");
	Если АдресСервера = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат АдресСервера;
	
КонецФункции

Функция ПолучитьАдресСервераФайловПодборок(ОписаниеУзелОбмена, СтруктураЗапросаHTTPДляФайла) Экспорт
	
	АдресРесурса = "/method/photos.getMarketAlbumUploadServer";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&group_id=%1&", ОписаниеУзелОбмена.ИдентификаторГруппы);
	
	ОтветСоответствие = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTPДляФайла, АдресРесурса);
	Если ОтветСоответствие = Неопределено Тогда  
		Возврат Неопределено;
	КонецЕсли;
	
	АдресСервера = ОтветСоответствие.Получить("upload_url");
	Если АдресСервера = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат АдресСервера;
	
КонецФункции

Функция СоздатьСообщениеMultipart(ДД,ИмяСообщения = "file",ИмяФайла = "file1",ТипMITE = "")Экспорт
	
	ДвоичныеДанные = СоздатьСообщениеMultipart_ДвоичныеДанные(ИмяСообщения, ИмяФайла, ДД ,ТипMITE);
	
	Разделитель = "" + Новый УникальныйИдентификатор;
	
	Результат = Новый Структура();
	Заголовки = Новый Соответствие();
	ПотокТело = Новый ПотокВПамяти();
	
	ЗаписьДанных = Новый ЗаписьДанных(ПотокТело);
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("--%1", Разделитель));
	ЗаписьДанных.Записать(ДвоичныеДанные);
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("--%1--",Разделитель));
	ЗаписьДанных.Закрыть();
	
	ДвоичныеДанныеТело = ПотокТело.ЗакрытьИПолучитьДвоичныеДанные();
	
	Заголовки.Вставить("Content-Type", СтрШаблон("multipart/form-data;boundary=%1", Разделитель));
	Заголовки.Вставить("Content-Length", XMLСтрока(ДвоичныеДанныеТело.Размер()));
	
	Результат.Вставить("Тело", ДвоичныеДанныеТело);
	Результат.Вставить("Заголовки", Заголовки);
	
	Возврат Результат;
	
КонецФункции

Функция СоздатьСообщениеMultipart_ДвоичныеДанные(ИмяСообщения, ИмяФайла, ДД , ТипMITE = "")
	
	Поток = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(Поток);
	
	// Заголовки.
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("Content-Disposition: form-data;name=%1;filename=%2" , ИмяСообщения, ИмяФайла));
	Если ТипMITE <> "" Тогда
		ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("Content-Type: %1",ТипMITE));
	КонецЕсли;
	ЗаписьДанных.ЗаписатьСтроку("");
	ЗаписьДанных.Записать(ДД);
	ЗаписьДанных.ЗаписатьСтроку("");
	ЗаписьДанных.Закрыть();
	
	Возврат Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
КонецФункции

Функция ПолучитьКатегорийТоваров(ОписаниеУзелОбмена) Экспорт
	
	Результат = Новый Массив;
	
	АдресРесурса = "/method/market.getCategories";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	РезультатМассив = ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
	Для Каждого ОписаниеКатегорияТовара Из РезультатМассив Цикл 
		
		КатегорияТовара = Новый Структура;
		КатегорияТовара.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(ОписаниеКатегорияТовара.Получить("id")));
		КатегорияТовара.Вставить("Наименование", ОписаниеКатегорияТовара.Получить("name"));
		КатегорияТовара.Вставить("Строки", Новый Массив);
		
		МассивЭлементов = ОписаниеКатегорияТовара.Получить("children");
		Если МассивЭлементов <> Неопределено Тогда
			Для Каждого СтрЭлемент Из МассивЭлементов Цикл
				ЗаполнитьКатегорийТоваровРекурсивно(КатегорияТовара, СтрЭлемент);
			КонецЦикла;
		КонецЕсли;
		
		Результат.Добавить(КатегорияТовара);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьИспользуемыеКатегорииТоваров(ОписаниеУзелОбмена) Экспорт
	
	МассивТоваров = ПолучитьВсеТоварыИзМагазина(ОписаниеУзелОбмена, Ложь);
	
	СоответствиеКатегорий = Новый Соответствие;
	Для Каждого СтрТовар Из МассивТоваров Цикл
		
		СоответствиеКатегорий.Вставить(СтрТовар.ИдентификаторКатегории);
		
	КонецЦикла;
	
	МассивКатегорий = Новый Массив;
	Для Каждого КлючЗначение Из СоответствиеКатегорий Цикл
		МассивКатегорий.Добавить(ПолучитьИдентификаторСтрокой(КлючЗначение.Ключ));
	КонецЦикла;
	
	Возврат МассивКатегорий;
	
КонецФункции

Процедура ЗаполнитьКатегорийТоваровРекурсивно(КатегорияТовараРодитель, ОписаниеКатегорияТовара)
	
	КатегорияТовара = Новый Структура;
	КатегорияТовара.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(ОписаниеКатегорияТовара.Получить("id")));
	КатегорияТовара.Вставить("Наименование", ОписаниеКатегорияТовара.Получить("name"));
	КатегорияТовара.Вставить("Строки", Новый Массив);
	
	МассивЭлементов = ОписаниеКатегорияТовара.Получить("children");
	Если МассивЭлементов <> Неопределено Тогда
		Для Каждого СтрЭлемент Из МассивЭлементов Цикл
			ЗаполнитьКатегорийТоваровРекурсивно(КатегорияТовара, СтрЭлемент);
		КонецЦикла;
	КонецЕсли;
	
	КатегорияТовараРодитель.Строки.Добавить(КатегорияТовара);
КонецПроцедуры

Функция ПолучитьПодборкиТоваров(ОписаниеУзелОбмена) Экспорт
	
	Результат = Новый Массив;
	
	АдресРесурса = "/method/market.getAlbums";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&count=100&owner_id=-%1", ОписаниеУзелОбмена.ИдентификаторГруппы);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	РезультатМассив = ПолучитьОбщиеДанныеРерусивно(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
	
	Для Каждого ОписаниеПодборки Из РезультатМассив Цикл 
		
		Подборка = Новый Структура;
		Подборка.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(ОписаниеПодборки.Получить("id")));
		Подборка.Вставить("Наименование", ОписаниеПодборки.Получить("title"));
		Подборка.Вставить("КоличествоТоваров", ОписаниеПодборки.Получить("count"));
		Подборка.Вставить("ЭтоСкрытый", ОписаниеПодборки.Получить("is_hidden"));
		Подборка.Вставить("ЭтоОсновной", ОписаниеПодборки.Получить("is_main"));
		Подборка.Вставить("КоличествоТоваров", ОписаниеПодборки.Получить("count"));
		Подборка.Вставить("ДатаОбновления", ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьДатуИзUnixTS(ОписаниеПодборки.Получить("updated_time")));
		Подборка.Вставить("ФайлКартинки", Неопределено);
		
		МассивФайловОписаниеКартинок = Новый Массив(1);
		МассивФайловОписаниеКартинок[0] = ОписаниеПодборки.Получить("photo");
		
		МассивФайловКартинок = ПолучитьМассивФотографий(МассивФайловОписаниеКартинок);
		Если МассивФайловКартинок.Количество() Тогда
			Подборка.Вставить("ФайлКартинки", МассивФайловКартинок[0]);
		КонецЕсли;
		
		Результат.Добавить(Подборка);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

функция ПолучитьИдентификаторСтрокой(Идентификатор)
	Возврат XMLСтрока(Идентификатор);
КонецФункции 

Функция ИзменитьЗаказы(ОписаниеУзелОбмена) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяИзменения.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ИзмененияЗаказа
	|ИЗ
	|	Документ.ЗаказПокупателя.Изменения КАК ЗаказПокупателяИзменения
	|ГДЕ
	|	ЗаказПокупателяИзменения.Узел = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов.КодСтатуса КАК КодСтатуса,
	|	ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов.СостояниеЗаказаПокупателя КАК СостояниеЗаказаПокупателя
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.СтатусыЗаказов КАК ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов
	|ГДЕ
	|	&ОбмениватьсяСтатусамиЗаказа
	|			И ИнтеграцияСМагазинамиСоцСетейСтатусыЗаказов.Ссылка = &УзелОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияЗаказа.Ссылка КАК Заказ,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор,
	|	ВТ_Статусы.КодСтатуса КАК КодСтатусаМагазина,
	|	ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Значение КАК КодСтатусаМагазинаОтправленный
	|ИЗ
	|	ВТ_ИзмененияЗаказа КАК ВТ_ИзмененияЗаказа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|			ПО ЗаказПокупателя.СостояниеЗаказа = ВТ_Статусы.СостояниеЗаказаПокупателя
	|		ПО ВТ_ИзмененияЗаказа.Ссылка = ЗаказПокупателя.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей КАК ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей
	|		ПО ВТ_ИзмененияЗаказа.Ссылка = ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Ссылка
	|			И (ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.ИмяПоля = ""status"")
	|			И (ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВТ_ИзмененияЗаказа.Ссылка = СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелОбмена)
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""order"")
	|ГДЕ
	|	&ОбмениватьсяСтатусамиЗаказа
	|			И ЗначениеДополнительныхПолейОбъектовДляМагазинаСоцСетей.Значение <> ВТ_Статусы.КодСтатуса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИзмененияЗаказа.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_ИзмененияЗаказа КАК ВТ_ИзмененияЗаказа";
	
	Запрос.УстановитьПараметр("УзелОбмена", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("ОбмениватьсяСтатусамиЗаказа", ОписаниеУзелОбмена.ОбмениватьсяСтатусамиЗаказа);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВГраницаЗапроса = РезультатЗапроса.ВГраница();
	
	РезультатЗапросаЗаказ = РезультатЗапроса[ВГраницаЗапроса - 1];
	РезультатЗапросаИзмененияСсылка = РезультатЗапроса[ВГраницаЗапроса];
	
	Если ОписаниеУзелОбмена.ОбмениватьсяСтатусамиЗаказа Тогда
		
		МассивОпераций = Новый Массив;
		
		ВыборкаДетальныеЗаписи = РезультатЗапросаЗаказ.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			
			МассивСтрок = СтрРазделить(ВыборкаДетальныеЗаписи.Идентификатор,"-",Ложь);
			
			ОписаниеПараметров = Новый Структура;
			ОписаниеПараметров.Вставить("user_id" , МассивСтрок[0]);
			ОписаниеПараметров.Вставить("order_id" , МассивСтрок[1]);
			ОписаниеПараметров.Вставить("status" , ВыборкаДетальныеЗаписи.КодСтатусаМагазина);
			ОписаниеПараметров.Вставить("uid_1c", Строка(Новый УникальныйИдентификатор));
			
			ОписаниеОперации = Новый Структура;
			ОписаниеОперации.Вставить("ИмяМетода" , "market.editOrder");
			ОписаниеОперации.Вставить("Хеш" , Неопределено);
			
			ОписаниеОперации.Вставить("ПараметрыМетодаСтрокой" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(ОписаниеПараметров));
			ОписаниеОперации.Вставить("Результат" , Неопределено);
			ОписаниеОперации.Вставить("Ошибка" , "");
			ОписаниеОперации.Вставить("Описание" , ОписаниеПараметров);
			ОписаниеОперации.Вставить("Ссылка" , ВыборкаДетальныеЗаписи.Заказ);
			
			МассивОпераций.Добавить(ОписаниеОперации);
			
		КонецЦикла;
		
		ВыполнитьМассивОпераций(МассивОпераций, ОписаниеУзелОбмена);
		
	КонецЕсли;
	
	УдалитьРегистрациюИзменений(РезультатЗапросаИзмененияСсылка.Выгрузить(), Неопределено,Неопределено,ОписаниеУзелОбмена);
	
КонецФункции

// Загрузка заказов

Процедура ЗагрузитьЗаказы(ОписаниеУзелОбмена) Экспорт
	
	Если НЕ ОписаниеУзелОбмена.ЗагружатьЗаказы Тогда
		Возврат;
	КонецЕсли;
	
	АдресРесурса = "/method/market.getGroupOrders";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&extended=1&count=10&group_id=%1", ОписаниеУзелОбмена.ИдентификаторГруппы);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	РезультатМассив = ПолучитьОбщиеДанныеРерусивно(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
	
	СоответствиеВсехНоменклатур = Новый Соответствие;
	СоответствиеВсехЗаказов = Новый Соответствие;
	СоответствиеВсехКонтрагентов = Новый Соответствие;
	
	ТаблицаЗаказов = Новый ТаблицаЗначений;
	ТаблицаЗаказов.Колонки.Добавить("Идентификатор" ,Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
	ТаблицаЗаказов.Колонки.Добавить("Дата" ,Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Для Каждого ОписаниеЗаказа Из РезультатМассив Цикл
		
		СтруктураЗаказа = Новый Структура;
		СтруктураЗаказа.Вставить("Дата" , ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьДатуИзUnixTS(ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеЗаказа.Получить("date"),Тип("Число"),0)));
		
		Если ЗначениеЗаполнено(ОписаниеУзелОбмена.ДатаЗагрузкиЗаказов)
			И СтруктураЗаказа.Дата <= ОписаниеУзелОбмена.ДатаЗагрузкиЗаказов Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОписаниеЗаказа.Получить("preview_order_items") = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ВалютаДокумента = ОписаниеУзелОбмена.ВалютаПоУмолчанию;
		
		ТоварыУслуги = Новый Массив;
		СуммаТоваров = 0;
		Для Каждого ОписаниеСтроки Из ОписаниеЗаказа.Получить("preview_order_items") Цикл
			
			ОписаниеНоменклатуры = ОписаниеСтроки.Получить("item");
			МассивФото = Новый Массив(1);
			МассивФото[0] = ОписаниеСтроки.Получить("photo");
			ОписаниеНоменклатуры.Вставить("photos", МассивФото);
			ИдентификаторНоменклатуры = ПолучитьИдентификаторСтрокой(ОписаниеСтроки.Получить("item_id"));
			
			СоответствиеВсехНоменклатур.Вставить(ИдентификаторНоменклатуры, ОписаниеНоменклатуры);
			
			ОписаниеТовараУслуги = Новый Структура;
			ОписаниеТовараУслуги.Вставить("Идентификатор" , ИдентификаторНоменклатуры);
			ОписаниеТовараУслуги.Вставить("Количество" , ОписаниеСтроки.Получить("quantity"));
			
			ОписаниеЦеныВалюты = ПолучитьОписаниеЦеныВалюты(ОписаниеСтроки, ОписаниеУзелОбмена);
			ОписаниеТовараУслуги.Вставить("Цена" , ОписаниеЦеныВалюты.Цена);
			ОписаниеТовараУслуги.Вставить("Валюта" , ОписаниеЦеныВалюты.Валюта);
			
			СуммаТоваров = СуммаТоваров + (ОписаниеЦеныВалюты.Цена * ОписаниеТовараУслуги.Количество);
			
			ТоварыУслуги.Добавить(ОписаниеТовараУслуги);
			
		КонецЦикла;
		
		СтруктураЗаказа.Вставить("status" , ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеЗаказа.Получить("status"),Тип("Число"),0));
		СтруктураЗаказа.Вставить("Состояние" , ОписаниеУзелОбмена.СтатусыЗаказов.Получить(СтруктураЗаказа.status));
		СтруктураЗаказа.Вставить("Комментарий" , ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеЗаказа.Получить("comment"),Тип("Строка"),""));
		СтруктураЗаказа.Вставить("ВалютаДокумента" , ВалютаДокумента);
		СтруктураЗаказа.Вставить("ДатаОтгрузки" , ПолучитьДатуОбъектыПоПравилу(ОписаниеУзелОбмена, СтруктураЗаказа.Дата));
		СтруктураЗаказа.Вставить("Курс" , 1);
		СтруктураЗаказа.Вставить("Кратность" , 1);
		СтруктураЗаказа.Вставить("ВидЦен" , ОписаниеУзелОбмена.ВидЦеныНоменклатуры);
		СтруктураЗаказа.Вставить("СтруктурнаяЕдиницаПродажи" , ОписаниеУзелОбмена.ПодразделениеДляПодстановкиВЗаказы);
		СтруктураЗаказа.Вставить("Ответственный" , ОписаниеУзелОбмена.Ответственный);
		СтруктураЗаказа.Вставить("БанковскийСчет" , ОписаниеУзелОбмена.БанковскийСчет);
		СтруктураЗаказа.Вставить("Касса" , ОписаниеУзелОбмена.Касса);
		СтруктураЗаказа.Вставить("КраткийНомер" , ПолучитьИдентификаторСтрокой(ОписаниеЗаказа.Получить("id")));
		
		Если ВалютаДокумента <> ОписаниеУзелОбмена.ВалютаПоУмолчанию Тогда
			
			Отбор = Новый Структура("Валюта", ВалютаДокумента);
			СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(СтруктураЗаказа.Дата, Отбор);
			
			СтруктураЗаказа.Вставить("Курс" , СтруктураПоВалюте.Курс);
			СтруктураЗаказа.Вставить("Кратность" , СтруктураПоВалюте.Кратность);
		КонецЕсли;
		
		ОписаниеКонтагента = Новый Структура;
		ОписаниеКонтагента.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(ОписаниеЗаказа.Получить("user_id")));
		ОписаниеКонтагента.Вставить("КлючПоиска", ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьХешСтроки(ОписаниеЗаказа.Получить("recipient").Получить("display_text")));
		ОписаниеКонтагента.Вставить("Наименование", ОписаниеЗаказа.Получить("recipient").Получить("name"));
		ОписаниеКонтагента.Вставить("Телефон", ОписаниеЗаказа.Получить("recipient").Получить("phone"));
		СоответствиеВсехКонтрагентов.Вставить(ОписаниеКонтагента.КлючПоиска,ОписаниеКонтагента);
		
		СтруктураЗаказа.Вставить("ОписаниеКонтагента" , ОписаниеКонтагента);
		СтруктураЗаказа.Вставить("ТоварыУслуги" , ТоварыУслуги); 
		СтруктураЗаказа.Вставить("ПометкаУдаления" , Ложь);
		
		Если ОписаниеУзелОбмена.ИспользоватьДоставку Тогда
			
			ОписаниеДоставки = ОписаниеЗаказа.Получить("delivery");
			Если ОписаниеДоставки <> Неопределено Тогда
				
				//Доставка в пункт выдачи СДЭК
				СтруктураЗаказа.Вставить("АдресДоставки" , ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеДоставки.Получить("address"),Тип("Строка"),""));
				СтруктураЗаказа.Вставить("ТрекНомер" , ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеДоставки.Получить("track_number"),Тип("Строка"),""));
				СтруктураЗаказа.Вставить("СсылкаОтслеживания" , ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеДоставки.Получить("track_link"),Тип("Строка"),""));
				СтруктураЗаказа.Вставить("ИнформацияПВЗ" , ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеДоставки.Получить("delivery_point"),Тип("Строка"),""));
				СтруктураЗаказа.Вставить("СпособДоставки" , ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПустаяСсылка"));
				СтруктураЗаказа.Вставить("СлужбаДоставки" , ПредопределенноеЗначение("Справочник.СлужбыДоставки.ПустаяСсылка"));
				
				СуммаЗаказаСоответствие = ОписаниеЗаказа.Получить("total_price");
				Если СуммаЗаказаСоответствие <> Неопределено Тогда
					СуммаЗаказа = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(СуммаЗаказаСоответствие.Получить("amount"),Тип("Число"),0) / 100;
					СтоимостьДоставки = СуммаЗаказа - СуммаТоваров;
					СтруктураЗаказа.Вставить("СтоимостьДоставки" , СтоимостьДоставки);
				КонецЕсли;
				
				ТипДоставки = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеДоставки.Получить("type"),Тип("Строка"),"");
				
				ОписаниеСлужбаДоставки = ОписаниеУзелОбмена.СлужбыДоставки.Получить(ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьХешСтроки(ТипДоставки));
				Если ОписаниеСлужбаДоставки <> Неопределено Тогда
					СтруктураЗаказа.Вставить("СпособДоставки" , ОписаниеСлужбаДоставки.СпособДоставки);
					СтруктураЗаказа.Вставить("СлужбаДоставки" , ОписаниеСлужбаДоставки.СлужбаДоставки);
					СтруктураЗаказа.Вставить("НоменклатураДоставки" , ОписаниеСлужбаДоставки.НоменклатураДоставки);
					СтруктураЗаказа.Вставить("СтавкаНДСДоставки" , ОписаниеСлужбаДоставки.СтавкаНДСДоставки);
				КонецЕсли;
				
				МассивИнформацияПоДоставке = Новый Массив;;
				
				Если ЗначениеЗаполнено(ТипДоставки) Тогда 
					МассивИнформацияПоДоставке.Добавить(ТипДоставки);
				Иначе
					МассивИнформацияПоДоставке.Добавить("Без доставки");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтруктураЗаказа.АдресДоставки) Тогда 
					МассивИнформацияПоДоставке.Добавить(СтрШаблон("Адрес: %1" , СтруктураЗаказа.АдресДоставки));
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтруктураЗаказа.ТрекНомер) Тогда 
					МассивИнформацияПоДоставке.Добавить(СтрШаблон("Трек-номер: %1" , СтруктураЗаказа.ТрекНомер));
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтруктураЗаказа.СсылкаОтслеживания) Тогда 
					МассивИнформацияПоДоставке.Добавить(СтрШаблон("Ссылка отслеживания: %1" , СтруктураЗаказа.СсылкаОтслеживания));
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтруктураЗаказа.ИнформацияПВЗ) Тогда 
					МассивИнформацияПоДоставке.Добавить(СтрШаблон("ПВЗ: %1" , СтруктураЗаказа.ИнформацияПВЗ));
				КонецЕсли;
				
				СтруктураЗаказа.Вставить("ДополнительнаяИнформацияПоДоставке" , СтрСоединить(МассивИнформацияПоДоставке,Символы.ПС));
				
			КонецЕсли;
		КонецЕсли;
		
		ИдентификаторЗаказа = ПолучитьИдентификаторСтрокой(ОписаниеЗаказа.Получить("display_order_id"));
		
		СоответствиеВсехЗаказов.Вставить(ИдентификаторЗаказа , СтруктураЗаказа);
		
		НовСтр = ТаблицаЗаказов.Добавить();
		НовСтр.Идентификатор = ИдентификаторЗаказа;
		НовСтр.Дата = СтруктураЗаказа.Дата;
		
	КонецЦикла;
	
	Если СоответствиеВсехЗаказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивНоменклатурДляОбработки = Новый Массив;
	Для Каждого КлючЗначение Из СоответствиеВсехНоменклатур Цикл
		МассивНоменклатурДляОбработки.Добавить(КлючЗначение.Значение);
	КонецЦикла;
	
	МассивТоваров = ОбработатьТоварыИзМагазина(ОписаниеУзелОбмена, МассивНоменклатурДляОбработки, Истина);
	
	МассивИдентификаторов = Новый Массив;
	СоответствиеТоваровПослеОбработки = Новый Соответствие;
	Для Каждого СтрОписаниеТовара Из МассивТоваров Цикл
		МассивИдентификаторов.Добавить(СтрОписаниеТовара.Идентификатор);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Номенклатура,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор В(&МассивИдентификаторов)
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка Ссылка Справочник.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка.Владелец,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор В(&МассивИдентификаторов)
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка Ссылка Справочник.ХарактеристикиНоменклатуры";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОписаниеСтроки = Новый Структура;
		ОписаниеСтроки.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
		ОписаниеСтроки.Вставить("Характеристика" , ВыборкаДетальныеЗаписи.Характеристика);
		СоответствиеТоваровПослеОбработки.Вставить(ВыборкаДетальныеЗаписи.Идентификатор, ОписаниеСтроки);
	КонецЦикла;
	
	МассивСтрок = Новый Массив;
	Для Каждого СтрОписаниеТовара Из МассивТоваров Цикл
		Если СоответствиеТоваровПослеОбработки.Получить(СтрОписаниеТовара.Идентификатор) = Неопределено Тогда
			МассивСтрок.Добавить(СтрШаблон("-%1_%2" , ОписаниеУзелОбмена.ИдентификаторГруппы, СтрОписаниеТовара.Идентификатор));
		КонецЕсли;
	КонецЦикла;
	
	РезультатОбработкиНоменклатуры = Новый Соответствие;
	Если МассивСтрок.Количество() Тогда
		
		АдресРесурса = "/method/market.getById";
		ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
		
		АдресРесурса = АдресРесурса + СтрШаблон("&extended=1&item_ids=%1", СтрСоединить(МассивСтрок,","));
		
		СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
		
		МассивНоменклатурДляОбработки = ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
		МассивТоваров = ОбработатьТоварыИзМагазина(ОписаниеУзелОбмена, МассивНоменклатурДляОбработки, Истина);
		
		РезультатОбработкиНоменклатуры = ОбработатьНоменклатуру(МассивТоваров, ОписаниеУзелОбмена,Истина);
		
	КонецЕсли;
	
	Для Каждого КлючЗначение Из СоответствиеТоваровПослеОбработки Цикл
		РезультатОбработкиНоменклатуры.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	Для Каждого КлючЗначение Из СоответствиеВсехЗаказов Цикл
		Для Каждого ОписаниеСтроки Из КлючЗначение.Значение.ТоварыУслуги Цикл 
			
			НоменклатураХарактеристика = РезультатОбработкиНоменклатуры.Получить(ОписаниеСтроки.Идентификатор);
			
			Если НоменклатураХарактеристика = Неопределено Тогда
				КлючЗначение.Значение.Вставить("ПометкаУдаления" , Истина);
				Прервать;
			КонецЕсли;
			
			ОписаниеСтроки.Вставить("Номенклатура" , НоменклатураХарактеристика.Номенклатура);
			ОписаниеСтроки.Вставить("Характеристика" , НоменклатураХарактеристика.Характеристика);
			
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаПокупателей = Новый ТаблицаЗначений;
	ТаблицаПокупателей.Колонки.Добавить("КлючПоиска" ,Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
	ТаблицаПокупателей.Колонки.Добавить("Идентификатор" ,Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
	ТаблицаПокупателей.Колонки.Добавить("Наименование" ,Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
	ТаблицаПокупателей.Колонки.Добавить("Телефон" ,Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
	ТаблицаПокупателей.Колонки.Добавить("НомерТелефонаДляПоиска" ,Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
	
	Для Каждого КлючЗначение Из СоответствиеВсехКонтрагентов Цикл
		
		НовСтр = ТаблицаПокупателей.Добавить();
		НовСтр.КлючПоиска = КлючЗначение.Значение.КлючПоиска;
		НовСтр.Идентификатор = КлючЗначение.Значение.Идентификатор;
		НовСтр.Наименование = КлючЗначение.Значение.Наименование;
		НовСтр.Телефон = КлючЗначение.Значение.Телефон;
		НовСтр.НомерТелефонаДляПоиска = СтрЗаменить(НовСтр.Телефон, "+","");
		
	КонецЦикла;
	
	РезультатОбработкиПокупателей = ОбработатьПокупателей(ТаблицаПокупателей, ОписаниеУзелОбмена);
	СоответсвиеКонтрагентДоговор = Новый Соответствие;
	Для Каждого КлючЗначение Из СоответствиеВсехЗаказов Цикл
		КлючЗначение.Значение.Вставить("Контрагент" , РезультатОбработкиПокупателей.Получить(КлючЗначение.Значение.ОписаниеКонтагента.КлючПоиска));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗаказов.Идентификатор КАК Идентификатор,
	|	ТаблицаЗаказов.Дата КАК Дата
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	&ТаблицаЗаказов КАК ТаблицаЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Ссылка,
	|	вт.Идентификатор КАК Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка ЕСТЬ NULL КАК ТребуетсяСоздать,
	|	вт.Дата КАК Дата
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО вт.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""order"")
	|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаЗаказов", ТаблицаЗаказов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОписаниеЗаказа = СоответствиеВсехЗаказов.Получить(ВыборкаДетальныеЗаписи.Идентификатор);
		Если ОписаниеЗаказа.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		НомерДокумента = ПолучитьНомерДокументаВКонтакте(ОписаниеЗаказа.КраткийНомер, ОписаниеУзелОбмена.Организация);
		
		НайденныйЗаказ = Документы.ЗаказПокупателя.НайтиПоНомеру(НомерДокумента, ОписаниеУзелОбмена.ТекущаяДата);
		Если ЗначениеЗаполнено(НайденныйЗаказ) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Документы.ЗаказПокупателя.СоздатьДокумент();
		ДокументОбъект.Заполнить(Неопределено);
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ОписаниеЗаказа);
		Если ДокументОбъект.СостояниеЗаказа = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен") Тогда
			ДокументОбъект.ВариантЗавершения = ПредопределенноеЗначение("Перечисление.ВариантыЗавершенияЗаказа.Успешно");
		КонецЕсли;
		
		ДокументОбъект.Организация = ОписаниеУзелОбмена.Организация;
		ДокументОбъект.КонтактноеЛицо = ОписаниеЗаказа.ОписаниеКонтагента.Наименование;
		ДокументОбъект.КонтактныйТелефон = ОписаниеЗаказа.ОписаниеКонтагента.Телефон;
		ДокументОбъект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу");
		ДокументОбъект.НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(ДокументОбъект.Организация, , ДокументОбъект.Дата);
		ДокументОбъект.ПоложениеДатыОтгрузки = ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВШапке");
		
		Договор = СоответсвиеКонтрагентДоговор.Получить(ДокументОбъект.Контрагент);
		Если Договор = Неопределено Тогда
			Договор = ПолучитьДоговорПоУмолчанию(ДокументОбъект,ДокументОбъект.Контрагент,ДокументОбъект.Организация,ДокументОбъект.ВидОперации);
			СоответсвиеКонтрагентДоговор.Вставить(ДокументОбъект.Контрагент, Договор);
		КонецЕсли;
		ДокументОбъект.Договор = Договор;
		
		ДокументОбъект.СпособЗачетаПредоплаты = РасчетыРаботаСФормамиВызовСервера.ПолучитьСпособЗачетаДляДоговора(ДокументОбъект.Договор, ДокументОбъект.Контрагент, Истина);
		
		ЕстьПустаяЦенаИлиКоличество = Ложь;
		Для Каждого СтрТовары Из ОписаниеЗаказа.ТоварыУслуги Цикл 
			
			НовСтр = ДокументОбъект.Запасы.Добавить();
			НовСтр.ТипНоменклатурыЗапас = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас");
			НовСтр.Номенклатура = СтрТовары.Номенклатура;
			НовСтр.Характеристика = СтрТовары.Характеристика;
			
			СтруктураДанныеНоменклатуры = Новый Структура();
			СтруктураДанныеНоменклатуры.Вставить("Номенклатура", НовСтр.Номенклатура);
			СтруктураДанныеНоменклатуры.Вставить("Характеристика", НовСтр.Характеристика);
			СтруктураДанныеНоменклатуры.Вставить("ДатаОбработки", ДокументОбъект.Дата);
			СтруктураДанныеНоменклатуры.Вставить("Организация", ДокументОбъект.Организация);
			
			СтатусПартии = Новый СписокЗначений;
			СтатусПартии.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыПартий.СобственныеЗапасы"));
			СтатусПартии.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыПартий.ТоварыНаКомиссии"));
			СтруктураДанныеНоменклатуры.Вставить("СтатусПартии", СтатусПартии);
			
			СтруктураДанныеНоменклатуры =  ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанныеНоменклатуры);
			
			ЗаполнитьЗначенияСвойств(НовСтр , СтруктураДанныеНоменклатуры);
			
			НовСтр.Цена = СтрТовары.Цена;
			НовСтр.Количество = СтрТовары.Количество;
			НовСтр.Сумма = НовСтр.Цена * НовСтр.Количество;
			
			ПересчитатьСтрокуТабличнойЧасти(НовСтр , ДокументОбъект);
			
			Если Не ЗначениеЗаполнено(НовСтр.Сумма) Тогда
				ЕстьПустаяЦенаИлиКоличество = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ОписаниеУзелОбмена.ИспользоватьДоставку И ДокументОбъект.СтоимостьДоставки > 0 Тогда
			
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(ДокументОбъект.СтавкаНДСДоставки);
			
			Если ДокументОбъект.СуммаВключаетНДС Тогда
				ДокументОбъект.СуммаНДСДоставки = ДокументОбъект.СтоимостьДоставки - (ДокументОбъект.СтоимостьДоставки) / ((СтавкаНДС + 100) / 100);
			Иначе
				ДокументОбъект.СуммаНДСДоставки = ДокументОбъект.СтоимостьДоставки * СтавкаНДС / 100;
			КонецЕсли;
			
		КонецЕсли;
		
		ДокументОбъект.Номер = ПолучитьНомерДокументаВКонтакте(ОписаниеЗаказа.КраткийНомер, ДокументОбъект.Организация);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		СсылкаНаДокумент = ДокументОбъект.Ссылка;
		
		ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, СсылкаНаДокумент);
		
		ДобавитьЗначениеДополнительныхПолейОбъектовМагазина(ОписаниеУзелОбмена.Ссылка, СсылкаНаДокумент
		,ПолучитьИдентификаторСтрокой(ОписаниеЗаказа.status), "status", ОписаниеУзелОбмена.ТекущаяДата);
		
		ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, СсылкаНаДокумент
		,ВыборкаДетальныеЗаписи.Идентификатор, "order", ОписаниеУзелОбмена.ТекущаяДата);
		
		МассивСпособов = Новый Массив(1);
		МассивСпособов[0] = ПредопределенноеЗначение("Перечисление.СпособыУстановкиДатыДляМагазинаСоцСетей.ПустаяСсылка");
		
		Если МассивСпособов.Найти(ОписаниеУзелОбмена.СпособУстановкиДатыОтгрузкиЗаказа) = Неопределено
			И ЗначениеЗаполнено(ДокументОбъект.ДатаОтгрузки) И НЕ ЕстьПустаяЦенаИлиКоличество Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, СсылкаНаДокумент);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьНомерДокументаВКонтакте(Знач НомерВКонтакте, Организация)
	
	СтрокаДопустимыхСиволов = "1234567890";
	МассивУдаляемыхСимволов = Новый Массив;
	
	НомерВКонтакте = СокрЛП(НомерВКонтакте);
	Если СтрДлина(НомерВКонтакте) > 0 Тогда
		
		Для Сч = 1 По СтрДлина(НомерВКонтакте) Цикл
			
			Символ = НРег(Сред(НомерВКонтакте, Сч, 1));
			Если Не СтрНайти(СтрокаДопустимыхСиволов, Символ) Тогда
				МассивУдаляемыхСимволов.Добавить(Символ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого Символ Из МассивУдаляемыхСимволов Цикл
		НомерВКонтакте = СтрЗаменить(НомерВКонтакте, Символ, "");
	КонецЦикла;
	
	ПрефиксВКонтакте = "ВК";
	СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксВКонтакте, 2, "0", "Слева");
	
	ПрефиксОрганизации = "";
	
	ФункциональнаяОпцияИспользуется = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Организации");
	Если ФункциональнаяОпцияИспользуется = Истина Тогда
		
		ПрефиксОрганизации = Неопределено;
		ПрефиксацияОбъектовСобытия.ПриОпределенииПрефиксаОрганизации(Организация, ПрефиксОрганизации);
		
		// если задана пустая Ссылка на организацию
		Если ПрефиксОрганизации = Неопределено Тогда
			ПрефиксОрганизации = "";
		КонецЕсли;
		
		СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксОрганизации, 2, "0", "Слева");
	КонецЕсли;
	
	ПрефиксЗаказа = ПрефиксОрганизации + ПрефиксВКонтакте + "-";
	
	СимволовДополнить = 11 - СтрДлина(ПрефиксЗаказа);
	
	НомерЗаказа = ПрефиксЗаказа + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(НомерВКонтакте, СимволовДополнить, "0", "Слева");
	
	Возврат НомерЗаказа;
	
КонецФункции

Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	// Наборы
	Если НЕ СтруктураДанные.Свойство("ЕдиницаИзмерения") И ТипЗнч(СтруктураДанные.Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
		СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	КонецЕсли;
	Если НЕ СтруктураДанные.Свойство("Коэффициент") Тогда
		Если ТипЗнч(СтруктураДанные.ЕдиницаИзмерения)=Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
			СтруктураДанные.Вставить("Коэффициент", СтруктураДанные.ЕдиницаИзмерения.Коэффициент);
		Иначе
			СтруктураДанные.Вставить("Коэффициент", 1);
		КонецЕсли;
	КонецЕсли;
	// Конец Наборы
	
	СтруктураДанные.Вставить("ЭтоУслуга", СтруктураДанные.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
	СтруктураДанные.Вставить("ЭтоЗапас", (СтруктураДанные.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас")
	ИЛИ СтруктураДанные.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат")));
	
	Если СтруктураДанные.Свойство("НормаВремени") Тогда
		СтруктураДанные.НормаВремени = ЦенообразованиеСервер.ПолучитьНормуВремениРаботы(СтруктураДанные);
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("НалогообложениеНДС") 
		И НЕ СтруктураДанные.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС") Тогда
		
		Если СтруктураДанные.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.НеОблагаетсяНДС") Тогда
			СтруктураДанные.Вставить("СтавкаНДС", УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС());
		Иначе
			СтруктураДанные.Вставить("СтавкаНДС", УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль());
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(СтруктураДанные.Номенклатура.ВидСтавкиНДС) Тогда
		СтруктураДанные.Вставить("СтавкаНДС", Справочники.СтавкиНДС.СтавкаНДС(СтруктураДанные.Номенклатура.ВидСтавкиНДС, ?(ЗначениеЗаполнено(СтруктураДанные.ДатаОбработки), СтруктураДанные.ДатаОбработки, ТекущаяДатаСеанса())));
	Иначе
		СтруктураДанные.Вставить("СтавкаНДС", Справочники.СтавкиНДС.СтавкаНДС(СтруктураДанные.Организация.ВидСтавкиНДСПоУмолчанию, ?(ЗначениеЗаполнено(СтруктураДанные.ДатаОбработки), СтруктураДанные.ДатаОбработки, ТекущаяДатаСеанса())));
	КонецЕсли;
	
	// Характеристики
	СтруктураДанные.Вставить("ИспользоватьХарактеристики",Ложь);
	СтруктураДанные.Вставить("ПроверятьЗаполнениеХарактеристики",Ложь);
	
	Если ЗначениеЗаполнено(СтруктураДанные.Номенклатура) И СтруктураДанные.Номенклатура.ИспользоватьХарактеристики
		Тогда
		ЗначенияПоУмолчанию = НоменклатураВДокументахСервер.ЗначенияНоменклатурыПоУмолчанию(СтруктураДанные.Номенклатура);
		
		Если Не ЗначенияПоУмолчанию = Неопределено
			Тогда
			ХарактеристикаПоУмолчанию = ЗначенияПоУмолчанию;
		КонецЕсли;
		
		Если НЕ СтруктураДанные.Свойство("Характеристика") Тогда
			СтруктураДанные.Вставить("Характеристика",ХарактеристикаПоУмолчанию);
		Иначе
			СтруктураДанные.Характеристика = ?(ЗначениеЗаполнено(СтруктураДанные.Характеристика), СтруктураДанные.Характеристика, ХарактеристикаПоУмолчанию);
		КонецЕсли;
		
		СтруктураДанные.Вставить("ИспользоватьХарактеристики",Истина);
		СтруктураДанные.Вставить("ПроверятьЗаполнениеХарактеристики",СтруктураДанные.Номенклатура.ПроверятьЗаполнениеХарактеристики);
	КонецЕсли;
	// Конец Характеристики
	
	Если СтруктураДанные.Свойство("Цена") И ЗначениеЗаполнено(СтруктураДанные.Цена) Тогда
		// При подборе наборов расчет цены не требуется - используется цена, указанная в подборе
	ИначеЕсли СтруктураДанные.Свойство("ВидЦен") Тогда
		
		Если НЕ СтруктураДанные.Свойство("Характеристика") Тогда
			СтруктураДанные.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		КонецЕсли;
		
		Если СтруктураДанные.Свойство("ВидРабот") Тогда
			
			Если СтруктураДанные.Номенклатура.ФиксированнаяСтоимость Тогда
				
				Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
				СтруктураДанные.Вставить("Цена", Цена);
				
			Иначе
				
				СтруктураДанные.Номенклатура = СтруктураДанные.ВидРабот;
				СтруктураДанные.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
				СтруктураДанные.Вставить("Цена", Цена);
				
			КонецЕсли;
			
		Иначе
			
			Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
			СтруктураДанные.Вставить("Цена", Цена);
			
		КонецЕсли;
		
	Иначе
		
		СтруктураДанные.Вставить("Цена", 0);
		
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("ВидСкидкиНаценки") 
		И ЗначениеЗаполнено(СтруктураДанные.ВидСкидкиНаценки) Тогда
		СтруктураДанные.Вставить("ПроцентСкидкиНаценки", СтруктураДанные.ВидСкидкиНаценки.Процент);
	Иначе
		СтруктураДанные.Вставить("ПроцентСкидкиНаценки", 0);
	КонецЕсли;
	
	Если СтруктураДанные.Свойство("ПроцентСкидкиПоДисконтнойКарте") 
		И ЗначениеЗаполнено(СтруктураДанные.ДисконтнаяКарта) Тогда
		ТекПроцент = СтруктураДанные.ПроцентСкидкиНаценки;
		СтруктураДанные.Вставить("ПроцентСкидкиНаценки", ТекПроцент + СтруктураДанные.ПроцентСкидкиПоДисконтнойКарте);
	КонецЕсли;
	СтруктураДанные.Вставить("ВесЕдиницыТовара", СтруктураДанные.Номенклатура.Вес);
	СтруктураДанные.Вставить("ОбъемЕдиницыТовара", СтруктураДанные.Номенклатура.Объем);
	
	СтруктураДанные.Вставить("Склад", СтруктураДанные.Номенклатура.Склад);
	СтруктураДанные.Вставить("Ячейка", СтруктураДанные.Номенклатура.Ячейка);
	
	// Наборы
	НаборыСервер.ДобавитьИнформациюОНабореПриПолученииДанныхНоменклатуры(СтруктураДанные);
	
	//Партии
	СтруктураДанные.Вставить("ИспользоватьПартии",Ложь);
	СтруктураДанные.Вставить("ПроверятьЗаполнениеПартий",Ложь);
	
	Если НЕ СтруктураДанные.Свойство("Партия") Тогда
		СтруктураДанные.Вставить("Партия", Неопределено);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураДанные.Номенклатура) И СтруктураДанные.Номенклатура.ИспользоватьПартии
		Тогда
		
		Если СтруктураДанные.Свойство("СтатусПартии")
			Тогда
			ЗначенияПартииПоУмолчанию = НоменклатураВДокументахСервер.ЗначенияПартийНоменклатурыПоУмолчанию(СтруктураДанные.Номенклатура,СтруктураДанные.СтатусПартии);
		Иначе
			Если Не СтруктураДанные.Свойство("ВидОперации")
				Тогда
				ВидОперации = Неопределено
			Иначе
				ВидОперации = СтруктураДанные.ВидОперации
			КонецЕсли;
			
			СтатусПартии = НоменклатураВДокументахСервер.СоответствиеВидаОперацииИлиХозОперацииСтатусуПартии(, ВидОперации);
			ЗначенияПартииПоУмолчанию = НоменклатураВДокументахСервер.ЗначенияПартийНоменклатурыПоУмолчанию(СтруктураДанные.Номенклатура,СтатусПартии);
		КонецЕсли;
		
		ПартияПоУмолчанию = Справочники.ПартииНоменклатуры.ПустаяСсылка();
		
		Если Не ЗначенияПартииПоУмолчанию = Неопределено
			Тогда
			ПартияПоУмолчанию = ЗначенияПартииПоУмолчанию;
		КонецЕсли;
		
		СтруктураДанные.Партия = ?(ЗначениеЗаполнено(СтруктураДанные.Партия), СтруктураДанные.Партия, ПартияПоУмолчанию);
		
		СтруктураДанные.ПроверятьЗаполнениеПартий = СтруктураДанные.Номенклатура.ПроверятьЗаполнениеПартий;
		СтруктураДанные.ИспользоватьПартии = Истина;
		
	КонецЕсли;
	// Конец Партии
	
	ВключаяШаблоны = (СтруктураДанные.Свойство("ВключаяШаблоны") И СтруктураДанные.ВключаяШаблоны);
	Если СтруктураДанные.Свойство("Характеристика") Тогда
		СтруктураДанные.Вставить("Спецификация", Справочники.Спецификации.СпецификацияПоУмолчанию(
		СтруктураДанные.Номенклатура, СтруктураДанные.Характеристика, ВключаяШаблоны));
	Иначе
		СтруктураДанные.Вставить("Спецификация", Справочники.Спецификации.СпецификацияПоУмолчанию(
		СтруктураДанные.Номенклатура, , ВключаяШаблоны));
	КонецЕсли;
	
	СтруктураДанные = ПолучитьДанныеСпецификацияПриИзменении(СтруктураДанные);
	
	Если ЗначениеЗаполнено(СтруктураДанные.Номенклатура) И СтруктураДанные.Номенклатура.ИспользоватьСерииНоменклатуры Тогда
		СтруктураДанные.Вставить("СтатусыСерийНоменклатуры", СерииНоменклатурыУНФ.СтатусСерийНоменклатурыПриИзменении(СтруктураДанные));
	Иначе
		СтруктураДанные.Вставить("СтатусыСерийНоменклатуры", 0);
	КонецЕсли;
	
	Возврат СтруктураДанные;
	
КонецФункции

Функция ПолучитьДанныеСпецификацияПриИзменении(СтруктураДанные)
	
	// ПараметрическиеСпецификации
	Если ЗначениеЗаполнено(СтруктураДанные.Спецификация)
		И ТипЗнч(СтруктураДанные.Спецификация)=Тип("СправочникСсылка.Спецификации") Тогда
		СтруктураДанные.Вставить("ЭтоШаблонСпецификации", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураДанные.Спецификация, "ЭтоШаблон"));
		СтруктураДанные.Вставить("ЕстьДопРеквизитыСпецификации", ПроизводствоСервер.ЕстьДопРеквизитыСпецификации(СтруктураДанные.Спецификация));
	Иначе
		СтруктураДанные.Вставить("ЭтоШаблонСпецификации", Ложь);
		СтруктураДанные.Вставить("ЕстьДопРеквизитыСпецификации", Ложь);
	КонецЕсли;
	// Конец ПараметрическиеСпецификации
	
	Возврат СтруктураДанные;
	
КонецФункции

Функция ПолучитьДоговорПоУмолчанию(Документ, Контрагент, Организация, ВидОперации)
	
	Если Не Контрагент.ВестиРасчетыПоДоговорам Тогда
		Возврат Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(Контрагент);
	КонецЕсли;
	
	МенеджерСправочника = Справочники.ДоговорыКонтрагентов;
	
	СписокВидовДоговоров = МенеджерСправочника.ПолучитьСписокВидовДоговораДляДокумента(Документ, ВидОперации);
	ДоговорПоУмолчанию = МенеджерСправочника.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(Контрагент, Организация, СписокВидовДоговоров);
	
	Возврат ДоговорПоУмолчанию;
	
КонецФункции

Процедура ПересчитатьСтрокуТабличнойЧасти(СтрокаТабличнойЧасти, Документ)
	
	Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Цена)
		И ЗначениеЗаполнено(Документ.ВидЦен) Тогда
		
		СтруктураДанные = Новый Структура;
		
		СтруктураДанные.Вставить("ДатаОбработки", Документ.Дата);
		СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
		СтруктураДанные.Вставить("Характеристика", СтрокаТабличнойЧасти.Характеристика);
		СтруктураДанные.Вставить("ВалютаДокумента", Документ.ВалютаДокумента);
		СтруктураДанные.Вставить("СуммаВключаетНДС", Документ.СуммаВключаетНДС);
		СтруктураДанные.Вставить("СтавкаНДС", СтрокаТабличнойЧасти.СтавкаНДС);
		СтруктураДанные.Вставить("ВидЦен", Документ.ВидЦен);
		СтруктураДанные.Вставить("Коэффициент", 1);
		СтруктураДанные.Вставить("ВидСкидкиНаценки", Документ.ВидСкидкиНаценки);
		
		Цена = ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыПоВидуЦен(СтруктураДанные);
		СтрокаТабличнойЧасти.Цена = Цена;
		СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
		
	КонецЕсли;
	
	СуммаБезСкидки = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
	СуммаСкидки = СуммаБезСкидки - СтрокаТабличнойЧасти.Сумма;
	
	Если СуммаСкидки <> 0 Тогда
		СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = 100 * СуммаСкидки / СуммаБезСкидки;
	КонецЕсли;
	
	РассчитатьСуммуНДСЗаказа(СтрокаТабличнойЧасти, Документ);
	
КонецПроцедуры

Процедура РассчитатьСуммуНДСЗаказа(СтрокаТабличнойЧасти, Документ)
	
	Если Документ.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС") Тогда
		
		СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		
		СтрокаТабличнойЧасти.СуммаНДС = ?(Документ.СуммаВключаетНДС,
		СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
		СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
	Иначе
		СтрокаТабличнойЧасти.СуммаНДС = 0;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(Документ.СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
	
КонецПроцедуры

Функция ПолучитьДатуОбъектыПоПравилу(ОписаниеУзелОбмена, ДатаОбъекта)
	
	ДатаОтгрузки = Дата(1,1,1);
	
	Если ОписаниеУзелОбмена.СпособУстановкиДатыОтгрузкиЗаказа = ПредопределенноеЗначение("Перечисление.СпособыУстановкиДатыДляМагазинаСоцСетей.ТекущаяДата") Тогда
		
		ДатаОтгрузки = ТекущаяДата() + ОписаниеУзелОбмена.СпособУстановкиДатыОтгрузкиЗаказаКоличествоДней * 86400;
		
	ИначеЕсли ОписаниеУзелОбмена.СпособУстановкиДатыОтгрузкиЗаказа = ПредопределенноеЗначение("Перечисление.СпособыУстановкиДатыДляМагазинаСоцСетей.ПоДатеОбъекта") Тогда
		
		ДатаОтгрузки = ДатаОбъекта + ОписаниеУзелОбмена.СпособУстановкиДатыОтгрузкиЗаказаКоличествоДней * 86400;
		
	Иначе
		
		ДатаОтгрузки = Дата(1,1,1);
		
	КонецЕсли;
	
	Возврат ДатаОтгрузки;
	
КонецФункции

Функция ОбработатьПокупателей(ТаблицаПокупателей, ОписаниеУзелОбмена)
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПокупателей.Наименование КАК Наименование,
	|	ТаблицаПокупателей.Телефон КАК Телефон,
	|	ТаблицаПокупателей.Идентификатор КАК Идентификатор,
	|	ТаблицаПокупателей.КлючПоиска КАК КлючПоиска,
	|	ТаблицаПокупателей.НомерТелефонаДляПоиска КАК НомерТелефонаДляПоиска
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	&ТаблицаПокупателей КАК ТаблицаПокупателей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт.КлючПоиска КАК КлючПоиска,
	|	вт.Идентификатор КАК Идентификатор,
	|	вт.Наименование КАК Наименование,
	|	вт.Телефон КАК Телефон,
	|	МАКСИМУМ(Контрагенты.Ссылка) КАК Контрагент,
	|	МАКСИМУМ(Контрагенты.Ссылка ЕСТЬ NULL) КАК ТребуетсяСоздать
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО вт.Наименование = Контрагенты.Наименование
	|			И вт.НомерТелефонаДляПоиска = Контрагенты.НомерТелефонаДляПоиска
	|			И (Контрагенты.ПометкаУдаления = ЛОЖЬ)
	|			И (Контрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(перечисление.ВидыКонтрагентов.ФизическоеЛицо))
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.КлючПоиска,
	|	вт.Идентификатор,
	|	вт.Наименование,
	|	вт.Телефон";
	
	Запрос.УстановитьПараметр("ТаблицаПокупателей" , ТаблицаПокупателей);
	Запрос.УстановитьПараметр("УзелОбмена" , ОписаниеУзелОбмена.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		Если НЕ ВыборкаДетальныеЗаписи.ТребуетсяСоздать Тогда 
			Результат.Вставить(ВыборкаДетальныеЗаписи.КлючПоиска , ВыборкаДетальныеЗаписи.Контрагент);
			Продолжить;
		КонецЕсли;
		
		Контрагент = Результат.Получить(ВыборкаДетальныеЗаписи.КлючПоиска);
		Если ЗначениеЗаполнено(Контрагент) Тогда
			Результат.Вставить(ВыборкаДетальныеЗаписи.КлючПоиска , Контрагент);
			Продолжить;
		КонецЕсли;
		
		ОписаниеТелефон = Новый Структура;
		ОписаниеТелефон.Вставить("Вид" , ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента"));
		ОписаниеТелефон.Вставить("Тип" , ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
		ОписаниеТелефон.Вставить("Значение" , ВыборкаДетальныеЗаписи.Телефон);
		ОписаниеТелефон.Вставить("Представление" , "");
		
		ОписаниеСайт = Новый Структура;
		ОписаниеСайт.Вставить("Вид" , ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ВебСайтКонтрагента"));
		ОписаниеСайт.Вставить("Тип" , ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница"));
		ОписаниеСайт.Вставить("Значение" , СтрШаблон("https://vk.com/id%1", ВыборкаДетальныеЗаписи.Идентификатор));
		ОписаниеСайт.Вставить("Представление" , "ВКонтакте");
		
		МассивКонтактнойИнформации = Новый Массив;
		МассивКонтактнойИнформации.Добавить(ОписаниеТелефон);
		МассивКонтактнойИнформации.Добавить(ОписаниеСайт);
		
		Контрагент = СоздатьКонтрагента(ОписаниеУзелОбмена
		,ВыборкаДетальныеЗаписи.Наименование, МассивКонтактнойИнформации);
		
		Результат.Вставить(ВыборкаДетальныеЗаписи.КлючПоиска , Контрагент);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СоздатьКонтрагента(ОписаниеУзелОбмена, Наименование, МассивКонтактнойИнформации)
	
	НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
	
	НовыйКонтрагент.Наименование = Наименование;
	НовыйКонтрагент.НаименованиеПолное = НовыйКонтрагент.Наименование;
	
	НовыйКонтрагент.Родитель = ОписаниеУзелОбмена.ГруппаДляНовыхКонтрагентов;
	НовыйКонтрагент.ГруппаДоступа = ОписаниеУзелОбмена.ГруппаДоступаДляНовыхКонтрагентов;
	НовыйКонтрагент.Ответственный = ОписаниеУзелОбмена.Ответственный;
	
	// Значения по умолчанию.
	НовыйКонтрагент.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ФизическоеЛицо");
	НовыйКонтрагент.СчетУчетаРасчетовСПокупателем = ПланыСчетов.Управленческий.РасчетыСПокупателями;
	НовыйКонтрагент.СчетУчетаАвансовПокупателя = ПланыСчетов.Управленческий.РасчетыПоАвансамПолученным;
	НовыйКонтрагент.СчетУчетаРасчетовСПоставщиком = ПланыСчетов.Управленческий.РасчетыСПоставщиками;
	НовыйКонтрагент.СчетУчетаАвансовПоставщику = ПланыСчетов.Управленческий.РасчетыПоАвансамВыданным;
	НовыйКонтрагент.СтранаРегистрации = Справочники.СтраныМира.Россия;
	НовыйКонтрагент.Покупатель = Истина;
	НовыйКонтрагент.ВестиРасчетыПоДоговорам = Истина;
	НовыйКонтрагент.ВестиРасчетыПоДокументам = Истина;
	НовыйКонтрагент.ВестиРасчетыПоЗаказам = Истина;
	НовыйКонтрагент.ВестиУчетОплатыПоСчетам = Истина;
	
	Для Каждого СтрКонтактнаяИнформация Из МассивКонтактнойИнформации Цикл
		ДобавитьКонтактнуюИнформацию(НовыйКонтрагент
		, СтрКонтактнаяИнформация.Вид
		, СтрКонтактнаяИнформация.Тип
		, СтрКонтактнаяИнформация.Значение
		, СтрКонтактнаяИнформация.Представление);
	КонецЦикла;
	
	НовыйКонтрагент.Записать();
	
	Возврат НовыйКонтрагент.Ссылка;
	
КонецФункции

Процедура ДобавитьКонтактнуюИнформацию(ОбъектВладелец, ВидКИ, ТипКИ, ЗначениеКИ, ПредставлениеКИ = "")
	
	Если НЕ ПроверитьДублированиеКИ(ОбъектВладелец, ЗначениеКИ, ВидКИ, ТипКИ) Тогда
		ЗаписатьКИ(ОбъектВладелец, ВидКИ, ТипКИ, ЗначениеКИ, ПредставлениеКИ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьКИ(ОбъектВладелец, ВидКИ, ТипКИ, ЗначениеКИ, ПредставлениеКИ = "")
	
	Если НЕ ВидКИ.РазрешитьВводНесколькихЗначений Тогда
		объектКонтактнойИнформации = ВидКИ.ПолучитьОбъект();
		Попытка
			объектКонтактнойИнформации.Заблокировать();
			объектКонтактнойИнформации.РазрешитьВводНесколькихЗначений = Истина;
			объектКонтактнойИнформации.Записать();
		Исключение
		КонецПопытки;
	КонецЕсли; 
	
	Если ТипКИ = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
		
		КонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(СокрЛП(ЗначениеКИ), ВидКИ);
		
	Иначе
		
		КонтактнойИнформации = УправлениеКонтактнойИнформациейКлиентСервер.ОписаниеНовойКонтактнойИнформации(ТипКИ);
		КонтактнойИнформации.Value = ЗначениеКИ;
		КонтактнойИнформации.Comment = ПредставлениеКИ;
		
		КонтактнойИнформации = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьJSONИзДанных(КонтактнойИнформации);
		
	КонецЕсли; 
	
	УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(ОбъектВладелец, КонтактнойИнформации, ВидКИ, , Ложь);
	
КонецПроцедуры

Функция ПроверитьДублированиеКИ(КонтрагентОбъект, ПредставлениеКИ, ВидКИ, ТипКИ)
	
	ОтборКИ = Новый Структура("Вид,Тип", ВидКИ, ТипКИ);
	НайденныеСтрокиКИ = КонтрагентОбъект.КонтактнаяИнформация.НайтиСтроки(ОтборКИ);
	Для каждого СтрокаНайдена Из НайденныеСтрокиКИ Цикл
		Если СокрЛП(НРег(СтрокаНайдена.Представление)) = СокрЛП(НРег(ПредставлениеКИ)) Тогда
			// КИ найдена
			Возврат Истина;
		КонецЕсли;
		
		Если ТипКИ = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			ТелефонВЗаказе = КонтактнаяИнформацияУНФ.ПреобразоватьНомерДляКонтактнойИнформации(ПредставлениеКИ);
			ТелефонКонтрагента = КонтактнаяИнформацияУНФ.ПреобразоватьНомерДляКонтактнойИнформации(СтрокаНайдена.НомерТелефона);
			Если ТелефонВЗаказе<>"" И ТелефонКонтрагента = ТелефонВЗаказе Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипКИ = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты
			И СокрЛП(НРег(СтрокаНайдена.АдресЭП)) = СокрЛП(НРег(ПредставлениеКИ)) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрагентыКонтактнаяИнформация.НомерСтроки КАК НомерСтроки,
	|	КонтрагентыКонтактнаяИнформация.Представление КАК Представление
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Представление = &Представление
	|	И КонтрагентыКонтактнаяИнформация.Ссылка = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", КонтрагентОбъект.Ссылка);
	Запрос.УстановитьПараметр("Представление", ПредставлениеКИ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() > 3 Тогда
		// не более 3 одинаковых КИ любых типов в карточке
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьОписаниеЦеныВалюты(ОписаниеТовара, ОписаниеУзелОбмена)
	
	СоответствиеКодовВалюты = ОписаниеУзелОбмена.СоответствиеКодовВалюты;
	
	ОписаниеЦеныВалюты = Новый Структура;
	ОписаниеЦеныВалюты.Вставить("Цена", 0);
	ОписаниеЦеныВалюты.Вставить("ЦенаСтарая", 0);
	ОписаниеЦеныВалюты.Вставить("Валюта", ОписаниеУзелОбмена.ВалютаПоУмолчанию);
	
	Описаниеprice = ОписаниеТовара.Получить("price");
	Если Описаниеprice <> Неопределено Тогда 
		ОписаниеЦеныВалюты.Цена = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(Описаниеprice.Получить("amount"),Тип("Число"),0);
		ОписаниеЦеныВалюты.ЦенаСтарая = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(Описаниеprice.Получить("old_amount"),Тип("Число"),0);
		
		ОписаниеВалюта = Описаниеprice.Получить("currency");
		Если ОписаниеВалюта <> Неопределено Тогда 
			КодВалюты = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеВалюта.Получить("id"),Тип("Число"),643);
			
			Валюта = СоответствиеКодовВалюты.Получить(КодВалюты);
			Если Валюта = Неопределено Тогда 
				Валюта = Справочники.Валюты.НайтиПоКоду(КодВалюты);
				
				Если НЕ ЗначениеЗаполнено(Валюта) Тогда 
					Валюта = ОписаниеУзелОбмена.ВалютаПоУмолчанию;
				КонецЕсли;
				
				СоответствиеКодовВалюты.Вставить(КодВалюты, Валюта);
			КонецЕсли;
			
			ОписаниеЦеныВалюты.Вставить("Валюта", Валюта);
		КонецЕсли;
	КонецЕсли;
	
	Если ОписаниеЦеныВалюты.Цена <> 0 Тогда
		ОписаниеЦеныВалюты.Цена = ОписаниеЦеныВалюты.Цена / 100;
	КонецЕсли;
	
	Если ОписаниеЦеныВалюты.ЦенаСтарая <> 0 Тогда
		ОписаниеЦеныВалюты.ЦенаСтарая = ОписаниеЦеныВалюты.ЦенаСтарая / 100;
	КонецЕсли;
	
	Возврат ОписаниеЦеныВалюты;
	
КонецФункции

// Загрузка номенклатуры
Функция ЗагрузитьНоменклатуру(ПараметрыФоновогоЗадания, ФоновоеЗаданиеАдресХранилища = "") Экспорт
	
	ДлительныеОперации.СообщитьПрогресс(0, "Получение информации о товарах.");
	
	ОписаниеУзелОбмена = ПараметрыФоновогоЗадания.ОписаниеУзелОбмена;
	ПолучатьВсеДанные = ПараметрыФоновогоЗадания.ПолучатьВсеДанные;
	
	МассивНоменклатурДляОбработки = ПолучитьВсеТоварыИзМагазина(ОписаниеУзелОбмена, ПолучатьВсеДанные);
	
	Возврат ОбработатьНоменклатуру(МассивНоменклатурДляОбработки, ОписаниеУзелОбмена);
	
КонецФункции

Функция ПолучитьВсеТоварыИзМагазина(ОписаниеУзелОбмена, ПолучатьВсеДанные = Истина, КраткаяИнформация = Ложь, ПараметрыСтрокой = "") Экспорт
	
	АдресРесурса = "/method/market.get";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + СтрШаблон("&extended=%1&count=100&owner_id=-%2" + ПараметрыСтрокой, ?(ПолучатьВсеДанные,1,0), ОписаниеУзелОбмена.ИдентификаторГруппы);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	МассивНоменклатурДляОбработки = ПолучитьОбщиеДанныеРерусивно(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
	
	МассивВсехТоваров = ОбработатьТоварыИзМагазина(ОписаниеУзелОбмена, МассивНоменклатурДляОбработки, ПолучатьВсеДанные, КраткаяИнформация);
	
	Возврат МассивВсехТоваров;
	
КонецФункции

Функция ОбработатьТоварыИзМагазина(ОписаниеУзелОбмена, МассивНоменклатурДляОбработки, ПолучатьВсеДанные = Истина, КраткаяИнформация = Ложь) Экспорт
	
	СоответствиеХарактеристик = Новый Соответствие;
	МассивВсехТоваров = Новый Массив;
	
	Для Каждого ОписаниеТовара Из МассивНоменклатурДляОбработки Цикл
		
		ОписаниеНоменклатура = ОбработатьТовар(ОписаниеТовара, ОписаниеУзелОбмена, КраткаяИнформация);
		
		Если ОписаниеНоменклатура.ЕстьХарактеристики Тогда
			СоответствиеХарактеристик.Вставить(ОписаниеНоменклатура.Идентификатор, ОписаниеНоменклатура.МассивХарактеристик);
		КонецЕсли;
		
		МассивВсехТоваров.Добавить(ОписаниеНоменклатура);
		
	КонецЦикла; 
	
	Если СоответствиеХарактеристик.Количество() = 0 Тогда   
		Возврат МассивВсехТоваров;
	КонецЕсли;
	
	АдресРесурса = "/method/market.getById";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	Для Каждого КлючЗначение Из СоответствиеХарактеристик Цикл 
		
		МассивСтрок = Новый Массив;
		Для Каждого СтрИдентификатор Из КлючЗначение.Значение Цикл
			МассивСтрок.Добавить(СтрШаблон("-%1_%2" , ОписаниеУзелОбмена.ИдентификаторГруппы, СтрИдентификатор));
		КонецЦикла;
		
		АдресРесурса = АдресРесурса + СтрШаблон("&extended=1&item_ids=%1", СтрСоединить(МассивСтрок,","));
		
		МассивХарактеристикДляОбработки = ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса);
		Для Каждого ОписаниеТовара Из МассивХарактеристикДляОбработки Цикл
			ОписаниеНоменклатура = ОбработатьТовар(ОписаниеТовара, ОписаниеУзелОбмена, КраткаяИнформация, Истина);
			ОписаниеНоменклатура.Вставить("ИдентификаторНоменклатуры", КлючЗначение.Ключ);
			МассивВсехТоваров.Добавить(ОписаниеНоменклатура);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат МассивВсехТоваров;
	
КонецФункции

Функция ОбработатьТовар(ОписаниеТовара, ОписаниеУзелОбмена, КраткаяИнформация = Истина, ЭтоХарактеритика = Ложь) Экспорт
	
	СтатусНоменклатуры = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("availability"),Тип("Число"),0);
	
	ОписаниеНоменклатура = Новый Структура;
	ОписаниеНоменклатура.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(ОписаниеТовара.Получить("id")));
	ОписаниеНоменклатура.Вставить("Наименование", ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("title"),Тип("Строка"),""));
	ОписаниеНоменклатура.Вставить("Артикул", ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("sku"),Тип("Строка"),""));
	ОписаниеНоменклатура.Вставить("ИдентификаторКатегории", "");
	
	ОписаниеКатегории = ОписаниеТовара.Получить("category");
	Если ОписаниеКатегории <> Неопределено Тогда
		ОписаниеНоменклатура.Вставить("ИдентификаторКатегории", ПолучитьИдентификаторСтрокой(ОписаниеКатегории.Получить("id")));
	КонецЕсли;
	
	ОписаниеНоменклатура.Вставить("ЕстьХарактеристики", Ложь);
	ОписаниеНоменклатура.Вставить("ИдентификаторНоменклатуры", "");
	ОписаниеНоменклатура.Вставить("МассивХарактеристик", Новый Массив);
	ОписаниеНоменклатура.Вставить("МассивНаборов", Новый Массив);
	
	МассивВариантов = ОписаниеТовара.Получить("variants");
	Если НЕ ЭтоХарактеритика И МассивВариантов <> Неопределено Тогда
		ОписаниеНоменклатура.Вставить("ЕстьХарактеристики", Истина);
		
		Для Каждого СтрОписаниеВарианта Из МассивВариантов Цикл
			
			ИдентификаторВарианта = ПолучитьИдентификаторСтрокой(СтрОписаниеВарианта.Получить("item_id"));
			
			//Если ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(СтрОписаниеВарианта.Получить("is_main"),Тип("Булево"),Ложь) Тогда
			//	ОписаниеНоменклатура.Вставить("ИдентификаторНоменклатуры", ИдентификаторВарианта);
			//КонецЕсли;
			
			Если ИдентификаторВарианта <> ОписаниеНоменклатура.Идентификатор Тогда
				ОписаниеНоменклатура.МассивХарактеристик.Добавить(ИдентификаторВарианта);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	МассивНаборов = ОписаниеТовара.Получить("properties");
	Если МассивНаборов <> Неопределено Тогда
		Для Каждого СтрОписаниеНабора Из МассивНаборов Цикл
			
			
			ОписаниеНабора = Новый Структура;
			ОписаниеНабора.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(СтрОписаниеНабора.Получить("id")));
			ОписаниеНабора.Вставить("Наименование", СтрОписаниеНабора.Получить("title"));
			ОписаниеНабора.Вставить("Значения", Новый Массив);
			
			МассивНаборовВариантов = СтрОписаниеНабора.Получить("variants");
			Если МассивНаборовВариантов <> Неопределено Тогда
				Для Каждого СтрОписаниеНабораВариант Из МассивНаборовВариантов Цикл
					
					ОписаниеНабораВариант = Новый Структура; 
					ОписаниеНабораВариант.Вставить("Идентификатор", ПолучитьИдентификаторСтрокой(СтрОписаниеНабораВариант.Получить("id")));
					ОписаниеНабораВариант.Вставить("Наименование", СтрОписаниеНабораВариант.Получить("title"));
					ОписаниеНабора.Значения.Добавить(ОписаниеНабораВариант);
					
				КонецЦикла;
			КонецЕсли; 
			
			ОписаниеНоменклатура.МассивНаборов.Добавить(ОписаниеНабора);
			
		КонецЦикла;
	КонецЕсли;
	
	Если КраткаяИнформация Тогда
		Возврат ОписаниеНоменклатура;
	КонецЕсли;
	
	ОписаниеНоменклатура.Вставить("Описание", ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("description"),Тип("Строка"),""));
	ОписаниеНоменклатура.Вставить("ПометкаУдаления", СтатусНоменклатуры = 1);
	ОписаниеНоменклатура.Вставить("Недействителен", СтатусНоменклатуры = 2);
	ОписаниеНоменклатура.Вставить("Остаток", ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("stock_amount"),Тип("Число"),0));
	ОписаниеНоменклатура.Вставить("ДатаОбновления", ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьДатуИзUnixTS(ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("date"),Тип("Число"),0)));
	
	ОписаниеНоменклатура.Вставить("КатегорияНоменклатуры", ПредопределенноеЗначение("Справочник.КатегорииНоменклатуры.БезКатегории"));
	ОписаниеНоменклатура.Вставить("ГруппаНоменклатуры", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	
	ОписаниеКаталогов = ОписаниеУзелОбмена.СопоставлениеКаталоговДляМагазинаСоцСетей.Получить(ОписаниеНоменклатура.ИдентификаторКатегории);
	Если ОписаниеКаталогов <> Неопределено Тогда
		ОписаниеНоменклатура.Вставить("КатегорияНоменклатуры", ОписаниеКаталогов.КатегорияНоменклатуры);
		ОписаниеНоменклатура.Вставить("ГруппаНоменклатуры", ОписаниеКаталогов.ГруппаНоменклатуры);
	КонецЕсли;
	
	ОписаниеЦеныВалюты = ПолучитьОписаниеЦеныВалюты(ОписаниеТовара , ОписаниеУзелОбмена);
	ОписаниеНоменклатура.Вставить("Цена", ОписаниеЦеныВалюты.Цена);
	ОписаниеНоменклатура.Вставить("ЦенаСтарая", ОписаниеЦеныВалюты.ЦенаСтарая);
	ОписаниеНоменклатура.Вставить("Валюта", ОписаниеЦеныВалюты.Валюта);
	
	ОписаниеНоменклатура.Вставить("Высота", 0);
	ОписаниеНоменклатура.Вставить("Длина", 0);
	ОписаниеНоменклатура.Вставить("Ширина", 0);
	ОписаниеНоменклатура.Вставить("Вес", 0);
	
	Описаниеdimensions = ОписаниеТовара.Получить("dimensions");
	Если Описаниеdimensions <> Неопределено Тогда 
		ОписаниеНоменклатура.Ширина = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(Описаниеdimensions.Получить("width"),Тип("Число"),0) / 10;
		ОписаниеНоменклатура.Высота = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(Описаниеdimensions.Получить("height"),Тип("Число"),0) / 10;
		ОписаниеНоменклатура.Длина = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(Описаниеdimensions.Получить("length"),Тип("Число"),0) / 10;
	КонецЕсли;
	
	ОписаниеНоменклатура.Вес = ИнтеграцияСМагазинамиСоцСетейСервер.ПроверитьНаТипЗначение(ОписаниеТовара.Получить("weight"),Тип("Число"),0) / 1000;
	
	МассивФайловКартинок = Новый Массив;
	
	МассивФайловОписаниеКартинок = ОписаниеТовара.Получить("photos");
	Если МассивФайловОписаниеКартинок = Неопределено Тогда
		ОписаниеНоменклатура.Вставить("МассивФайловКартинок" , МассивФайловКартинок);
		Возврат ОписаниеНоменклатура;
	КонецЕсли;
	
	МассивФайловКартинок = ПолучитьМассивФотографий(МассивФайловОписаниеКартинок);
	
	ОписаниеНоменклатура.Вставить("МассивФайловКартинок" , МассивФайловКартинок);
	
	Возврат ОписаниеНоменклатура;
	
КонецФункции

Функция ПолучитьМассивФотографий(МассивФайловОписаниеКартинок)
	
	МассивФайловКартинок = Новый Массив;
	
	Для Каждого СтрФайлыКартинок Из МассивФайловОписаниеКартинок Цикл
		
		Если СтрФайлыКартинок = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СоответствиеСсылок = Новый Соответствие;
		МаксРазмер = 0;
		Для Каждого Стр Из СтрФайлыКартинок.Получить("sizes") Цикл
			СоответствиеСсылок.Вставить(Стр.Получить("height"),Стр.Получить("url"));
			МаксРазмер = Макс(МаксРазмер, Стр.Получить("height"));
		КонецЦикла;
		
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Идентификатор" , ПолучитьИдентификаторСтрокой(СтрФайлыКартинок.Получить("id")));
		ОписаниеФайла.Вставить("ПубличнаяСсылка" , СоответствиеСсылок.Получить(МаксРазмер));
		
		ПубличнаяСсылка = СтрЗаменить(ОписаниеФайла.ПубличнаяСсылка , "https:/", "");
		ПубличнаяСсылка = СтрЗаменить(ПубличнаяСсылка , "http:/", "");
		ОписаниеФайла.Вставить("Расширение" , ПолучитьРасширениеФайлаПоПубличнойСсылке(ОписаниеФайла.ПубличнаяСсылка));
		
		МассивФайловКартинок.Добавить(ОписаниеФайла);
		
	КонецЦикла;
	
	Возврат МассивФайловКартинок;
	
КонецФункции

Функция ОбработатьНоменклатуру(МассивНоменклатурДляОбработки, ОписаниеУзелОбмена, ЭтоЗагрузкаЗаказа = Ложь)
	
	Результат = Новый Соответствие;
	
	МассивИдентификаторовНоменклатур = Новый Массив;
	МассивИдентификаторовФайлов = Новый Массив;
	СоответствиеКодовВалюты = ОписаниеУзелОбмена.СоответствиеКодовВалюты;
	ВалютаПоУмолчанию = ОписаниеУзелОбмена.ВалютаПоУмолчанию;
	
	МассивКатегорий = Новый Массив;
	
	СоответствиеВсехНоменклатур = Новый Соответствие;
	Для Каждого ОписаниеНоменклатура Из МассивНоменклатурДляОбработки Цикл
		
		МассивКатегорий.Добавить(ОписаниеНоменклатура.КатегорияНоменклатуры);
		МассивИдентификаторовНоменклатур.Добавить(ОписаниеНоменклатура.Идентификатор);
		СоответствиеВсехНоменклатур.Вставить(ОписаниеНоменклатура.Идентификатор,ОписаниеНоменклатура);
		
		Для Каждого ОписаниеФайла Из ОписаниеНоменклатура.МассивФайловКартинок Цикл
			МассивИдентификаторовФайлов.Добавить(ОписаниеФайла.Идентификатор);
		КонецЦикла;
		
	КонецЦикла;
	
	Если СоответствиеВсехНоменклатур.Количество() = 0 Тогда 
		Возврат Новый Соответствие;
	КонецЕсли;
	
	МассивКатегорий = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивКатегорий);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Номенклатура,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор В(&МассивИдентификаторовНоменклатур)
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
	|	И ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.Номенклатура) Ссылка Справочник.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка.Владелец,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор В(&МассивИдентификаторовНоменклатур)
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
	|	И ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.ХарактеристикиНоменклатуры) Ссылка Справочник.ХарактеристикиНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КатегорииНоменклатуры.Ссылка КАК Ссылка,
	|	КатегорииНоменклатуры.ТипНоменклатурыПоУмолчанию КАК ТипНоменклатурыПоУмолчанию,
	|	КатегорииНоменклатуры.СчетУчетаДоходов КАК СчетУчетаДоходов,
	|	КатегорииНоменклатуры.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
	|	КатегорииНоменклатуры.СчетУчетаЗатрат КАК СчетУчетаЗатрат,
	|	КатегорииНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КатегорииНоменклатуры.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	КатегорииНоменклатуры.СпособПополнения КАК СпособПополнения,
	|	КатегорииНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КатегорииНоменклатуры.Производитель КАК Производитель,
	|	КатегорииНоменклатуры.ВидМаркировки КАК ВидМаркировки,
	|	КатегорииНоменклатуры.СрокИсполненияЗаказа КАК СрокИсполненияЗаказа,
	|	КатегорииНоменклатуры.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	КатегорииНоменклатуры.Склад КАК Склад,
	|	КатегорииНоменклатуры.МетодОценки КАК МетодОценки
	|ИЗ
	|	Справочник.КатегорииНоменклатуры КАК КатегорииНоменклатуры
	|ГДЕ
	|	КатегорииНоменклатуры.Ссылка В(&МассивКатегорий)";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("МассивИдентификаторовНоменклатур", МассивИдентификаторовНоменклатур);
	Запрос.УстановитьПараметр("МассивКатегорий", МассивКатегорий);
	Запрос.УстановитьПараметр("МассивИдентификаторовФайлов", МассивИдентификаторовФайлов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СоответствиеФайлов = Новый Соответствие;
	СоответствиеНоменклатураХарактеристика = Новый Соответствие;
	СоответствиеКатегорий = Новый Соответствие;
	ВыборкаДетальныеЗаписи = РезультатЗапроса[0].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоменклатураХарактеристика = Новый Структура;
		НоменклатураХарактеристика.Вставить("Номенклатура" , ВыборкаДетальныеЗаписи.Номенклатура);
		НоменклатураХарактеристика.Вставить("Характеристика" , ВыборкаДетальныеЗаписи.Характеристика);
		
		СоответствиеНоменклатураХарактеристика.Вставить(ВыборкаДетальныеЗаписи.Идентификатор, НоменклатураХарактеристика);
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОписаниеКатегорий = Новый Структура;
		ОписаниеКатегорий.Вставить("ТипНоменклатуры" , ВыборкаДетальныеЗаписи.ТипНоменклатурыПоУмолчанию);
		ОписаниеКатегорий.Вставить("СчетУчетаДоходов" , ВыборкаДетальныеЗаписи.СчетУчетаДоходов);
		ОписаниеКатегорий.Вставить("СчетУчетаЗапасов" , ВыборкаДетальныеЗаписи.СчетУчетаЗапасов);
		ОписаниеКатегорий.Вставить("СчетУчетаЗатрат" , ВыборкаДетальныеЗаписи.СчетУчетаЗатрат);
		ОписаниеКатегорий.Вставить("ЕдиницаИзмерения" , ВыборкаДетальныеЗаписи.ЕдиницаИзмерения);
		ОписаниеКатегорий.Вставить("ВидСтавкиНДС" , ВыборкаДетальныеЗаписи.ВидСтавкиНДС);
		ОписаниеКатегорий.Вставить("СпособПополнения" , ВыборкаДетальныеЗаписи.СпособПополнения);
		ОписаниеКатегорий.Вставить("СтранаПроисхождения" , ВыборкаДетальныеЗаписи.СтранаПроисхождения);
		ОписаниеКатегорий.Вставить("Производитель" , ВыборкаДетальныеЗаписи.Производитель);
		ОписаниеКатегорий.Вставить("ВидМаркировки" , ВыборкаДетальныеЗаписи.ВидМаркировки);
		ОписаниеКатегорий.Вставить("СрокИсполненияЗаказа" , ВыборкаДетальныеЗаписи.СрокИсполненияЗаказа);
		ОписаниеКатегорий.Вставить("СрокПополнения" , 0);
		ОписаниеКатегорий.Вставить("НаправлениеДеятельности" , ВыборкаДетальныеЗаписи.НаправлениеДеятельности);
		ОписаниеКатегорий.Вставить("Склад" , ВыборкаДетальныеЗаписи.Склад);
		ОписаниеКатегорий.Вставить("МетодОценки" , ВыборкаДетальныеЗаписи.МетодОценки);
		
		ПроверитьОписаниеКатегорий(ОписаниеКатегорий, ОписаниеУзелОбмена);
		
		СоответствиеКатегорий.Вставить(ВыборкаДетальныеЗаписи.Ссылка, ОписаниеКатегорий);
	КонецЦикла;
	
	// Создание номенклатуры
	ТаблицаФайловНоменклатур = Новый ТаблицаЗначений;
	ТаблицаФайловНоменклатур.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаФайловНоменклатур.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаФайловНоменклатур.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(50)));
	ТаблицаФайловНоменклатур.Колонки.Добавить("ЭтоОсновноеИзображение", Новый ОписаниеТипов("Булево"));
	ТаблицаФайловНоменклатур.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(6)));
	
	ДлительныеОперации.СообщитьПрогресс(25, "Обработка товаров.");
	
	НомерСтроки = 1;
	// Номенклатура
	Для Каждого КлючЗначение Из СоответствиеВсехНоменклатур Цикл 
		
		ОписаниеНоменклатура = КлючЗначение.Значение;
		
		Если ЗначениеЗаполнено(ОписаниеНоменклатура.ИдентификаторНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтоНовый = Ложь;
		
		НоменклатураХарактеристика = СоответствиеНоменклатураХарактеристика.Получить(КлючЗначение.Ключ);
		Если НоменклатураХарактеристика = Неопределено Тогда 
			
			НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
			
			ЗаполнитьЗначенияСвойств(НоменклатураОбъект, ОписаниеНоменклатура);
			
			НоменклатураОбъект.НаименованиеПолное = ОписаниеНоменклатура.Наименование;
			НоменклатураОбъект.Комментарий = ОписаниеНоменклатура.Описание;
			
			ОписаниеКатегории = СоответствиеКатегорий.Получить(НоменклатураОбъект.КатегорияНоменклатуры);
			Если ОписаниеКатегории <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(НоменклатураОбъект, ОписаниеКатегории);
			КонецЕсли;
			
			НоменклатураОбъект.Записать();
			
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, НоменклатураОбъект.Ссылка);
			
			ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, НоменклатураОбъект.Ссылка
			,КлючЗначение.Ключ, "item", ОписаниеУзелОбмена.ТекущаяДата);
			
			НоменклатураХарактеристика = Новый Структура;
			НоменклатураХарактеристика.Вставить("Номенклатура" , НоменклатураОбъект.Ссылка);
			НоменклатураХарактеристика.Вставить("Характеристика" , ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
			
			ЭтоНовый = Истина;
			
			ОписаниеНоменклатура.Вставить("ЕдиницаИзмерения" , НоменклатураОбъект.ЕдиницаИзмерения);
			
		КонецЕсли;
		
		СоответствиеНоменклатураХарактеристика.Вставить(КлючЗначение.Ключ, НоменклатураХарактеристика);
		ОписаниеНоменклатура.Вставить("Номенклатура" , НоменклатураХарактеристика.Номенклатура);
		ОписаниеНоменклатура.Вставить("Характеристика" , НоменклатураХарактеристика.Характеристика);
		ОписаниеНоменклатура.Вставить("ЭтоНовый" , ЭтоНовый);
		
		ОписаниеКатегории = СоответствиеКатегорий.Получить(ОписаниеНоменклатура.КатегорияНоменклатуры);
		Если ОписаниеКатегории <> Неопределено Тогда
			ОписаниеНоменклатура.Вставить("ЕдиницаИзмерения" , ОписаниеКатегории.ЕдиницаИзмерения);
		КонецЕсли;
		
		ЭтоОсновноеИзображение = Истина;
		Для Каждого ОписаниеФайла Из ОписаниеНоменклатура.МассивФайловКартинок Цикл
			
			НовСтр = ТаблицаФайловНоменклатур.Добавить();
			НовСтр.Номенклатура = НоменклатураХарактеристика.Номенклатура;
			НовСтр.Характеристика = НоменклатураХарактеристика.Характеристика;
			НовСтр.Идентификатор = ОписаниеФайла.Идентификатор;
			НовСтр.ЭтоОсновноеИзображение = ЭтоОсновноеИзображение;
			НовСтр.НомерСтроки = НомерСтроки;
			
			СоответствиеФайлов.Вставить(ОписаниеФайла.Идентификатор, ОписаниеФайла);
			
			ЭтоОсновноеИзображение = Ложь;
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		Результат.Вставить(КлючЗначение.Ключ , НоменклатураХарактеристика);
		
	КонецЦикла;
	
	// Характеристика
	Для Каждого КлючЗначение Из СоответствиеВсехНоменклатур Цикл 
		
		ОписаниеНоменклатура = КлючЗначение.Значение;
		
		Если НЕ ЗначениеЗаполнено(ОписаниеНоменклатура.ИдентификаторНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		
		НоменклатураХарактеристикаВладелец = СоответствиеНоменклатураХарактеристика.Получить(ОписаниеНоменклатура.ИдентификаторНоменклатуры);
		Если НоменклатураХарактеристикаВладелец = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтоНовый = Ложь;
		
		НоменклатураХарактеристика = СоответствиеНоменклатураХарактеристика.Получить(КлючЗначение.Ключ);
		Если НоменклатураХарактеристика = Неопределено Тогда 
			
			ХарактеристикаОбъект = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
			
			ЗаполнитьЗначенияСвойств(ХарактеристикаОбъект, ОписаниеНоменклатура);
			
			ХарактеристикаОбъект.НаименованиеДляПечати = ОписаниеНоменклатура.Наименование;
			//ХарактеристикаОбъект.Комментарий = ОписаниеНоменклатура.Описание;
			ХарактеристикаОбъект.Владелец = НоменклатураХарактеристикаВладелец.Номенклатура;
			ХарактеристикаОбъект.Записать();
			
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, ХарактеристикаОбъект.Ссылка);
			
			ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка, ХарактеристикаОбъект.Ссылка
			,КлючЗначение.Ключ, "item", ОписаниеУзелОбмена.ТекущаяДата);
			
			ДобавитьХарактеристикаИсключеннаяИзНабораСвойствМагазина(ОписаниеУзелОбмена.Ссылка, НоменклатураХарактеристикаВладелец.Номенклатура);
			
			НоменклатураХарактеристика = Новый Структура;
			НоменклатураХарактеристика.Вставить("Номенклатура" , НоменклатураХарактеристикаВладелец.Номенклатура);
			НоменклатураХарактеристика.Вставить("Характеристика" , ХарактеристикаОбъект.Ссылка);
			
			ЭтоНовый = Истина;
			
		КонецЕсли;
		
		СоответствиеНоменклатураХарактеристика.Вставить(КлючЗначение.Ключ, НоменклатураХарактеристика);
		ОписаниеНоменклатура.Вставить("Номенклатура" , НоменклатураХарактеристика.Номенклатура);
		ОписаниеНоменклатура.Вставить("Характеристика" , НоменклатураХарактеристика.Характеристика);
		ОписаниеНоменклатура.Вставить("ЭтоНовый" , ЭтоНовый);
		
		ОписаниеКатегории = СоответствиеКатегорий.Получить(ОписаниеНоменклатура.КатегорияНоменклатуры);
		Если ОписаниеКатегории <> Неопределено Тогда
			ОписаниеНоменклатура.Вставить("ЕдиницаИзмерения" , ОписаниеКатегории.ЕдиницаИзмерения);
		КонецЕсли;
		
		ЭтоОсновноеИзображение = Истина;
		Для Каждого ОписаниеФайла Из ОписаниеНоменклатура.МассивФайловКартинок Цикл
			
			НовСтр = ТаблицаФайловНоменклатур.Добавить();
			НовСтр.Номенклатура = НоменклатураХарактеристика.Номенклатура;
			НовСтр.Характеристика = НоменклатураХарактеристика.Характеристика;
			НовСтр.Идентификатор = ОписаниеФайла.Идентификатор;
			НовСтр.ЭтоОсновноеИзображение = ЭтоОсновноеИзображение;
			НовСтр.НомерСтроки = НомерСтроки;
			
			СоответствиеФайлов.Вставить(ОписаниеФайла.Идентификатор, ОписаниеФайла);
			
			ЭтоОсновноеИзображение = Ложь;
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		Результат.Вставить(КлючЗначение.Ключ , НоменклатураХарактеристика);
		
	КонецЦикла;
	
	ДлительныеОперации.СообщитьПрогресс(50, "Обработка цен и остатков товаров.");
	
	Если ОписаниеУзелОбмена.ЗагружатьЦены Тогда
		Для Каждого КлючЗначение Из СоответствиеВсехНоменклатур Цикл 
			ОписаниеНоменклатура = КлючЗначение.Значение;
			
			Если ЭтоЗагрузкаЗаказа И НЕ ОписаниеНоменклатура.ЭтоНовый Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ОписаниеНоменклатура.ЦенаСтарая)
				И ЗначениеЗаполнено(ОписаниеУзелОбмена.ВидЦеныНоменклатурыСтарая) Тогда
				
				МЗ = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
				МЗ.Период = ОписаниеУзелОбмена.ДатаУстановкиЦен;
				МЗ.Номенклатура = ОписаниеНоменклатура.Номенклатура;
				МЗ.Характеристика = ОписаниеНоменклатура.Характеристика;
				МЗ.ВидЦен = ОписаниеУзелОбмена.ВидЦеныНоменклатурыСтарая;
				МЗ.Цена = ОписаниеНоменклатура.ЦенаСтарая;
				МЗ.Актуальность = Истина;
				МЗ.Записать(); 
				
				НЗ = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
				НЗ.Отбор.Период.Установить(МЗ.Период);
				НЗ.Отбор.ВидЦен.Установить(МЗ.ВидЦен);
				НЗ.Отбор.Номенклатура.Установить(МЗ.Номенклатура);
				НЗ.Отбор.Характеристика.Установить(МЗ.Характеристика);
				
				ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, НЗ);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ОписаниеНоменклатура.Цена)
				И ЗначениеЗаполнено(ОписаниеУзелОбмена.ВидЦеныНоменклатуры) Тогда
				
				МЗ = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
				МЗ.Период = ОписаниеУзелОбмена.ДатаУстановкиЦен;
				МЗ.Номенклатура = ОписаниеНоменклатура.Номенклатура;
				МЗ.Характеристика = ОписаниеНоменклатура.Характеристика;
				МЗ.ВидЦен = ОписаниеУзелОбмена.ВидЦеныНоменклатуры;
				МЗ.Цена = ОписаниеНоменклатура.Цена;
				МЗ.Актуальность = Истина;
				МЗ.Записать();
				
				НЗ = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
				НЗ.Отбор.Период.Установить(МЗ.Период);
				НЗ.Отбор.ВидЦен.Установить(МЗ.ВидЦен);
				НЗ.Отбор.Номенклатура.Установить(МЗ.Номенклатура);
				НЗ.Отбор.Характеристика.Установить(МЗ.Характеристика);
				
				ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, НЗ);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ОписаниеУзелОбмена.ЗагружатьОстатки И Не ЭтоЗагрузкаЗаказа Тогда
		
		МассивОстатков = Новый Массив;
		Для Каждого КлючЗначение Из СоответствиеВсехНоменклатур Цикл 
			ОписаниеНоменклатура = КлючЗначение.Значение;
			
			Если ОписаниеНоменклатура.Остаток > 0 Тогда
				ОписаниеОстатка = Новый Структура;
				ОписаниеОстатка.Вставить("Номенклатура" , ОписаниеНоменклатура.Номенклатура);
				ОписаниеОстатка.Вставить("Характеристика" , ОписаниеНоменклатура.Характеристика);
				ОписаниеОстатка.Вставить("Количество" , ОписаниеНоменклатура.Остаток);
				ОписаниеОстатка.Вставить("ЕдиницаИзмерения" , ОписаниеНоменклатура.ЕдиницаИзмерения);
				Если ЗначениеЗаполнено(ОписаниеНоменклатура.Цена) Тогда
					ОписаниеОстатка.Вставить("Цена" , ОписаниеНоменклатура.Цена);
					ОписаниеОстатка.Вставить("Сумма" , ОписаниеНоменклатура.Цена * ОписаниеНоменклатура.Остаток);
				КонецЕсли;
				МассивОстатков.Добавить(ОписаниеОстатка);
			КонецЕсли;
		КонецЦикла;
		
		Если МассивОстатков.Количество() Тогда
			
			ДокументВводОстатков = Документы.ВводНачальныхОстатков.СоздатьДокумент();
			ДокументВводОстатков.Дата = ОписаниеУзелОбмена.ДатаЗагрузкиОстатков;
			ДокументВводОстатков.Автор = ОписаниеУзелОбмена.Ответственный;
			ДокументВводОстатков.Организация = ОписаниеУзелОбмена.Организация;
			ДокументВводОстатков.Комментарий = "Создан автоматически при загрузке товаров ВКонтакте.";
			ДокументВводОстатков.РазделУчета = "Запасы";
			ДокументВводОстатков.ХозяйственнаяОперация 
			= ПредопределенноеЗначение("Справочник.ХозяйственныеОперации.ВводНачальныхОстатков");
			
			ТабЧасть = ДокументВводОстатков.Запасы;
			
			Для Каждого СтрОстаток Из МассивОстатков Цикл
				
				НовСтр = ТабЧасть.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрОстаток);
				НовСтр.СтруктурнаяЕдиница = ОписаниеУзелОбмена.СкладДляПодстановкиВЗаказыИОстатков;
				
			КонецЦикла;
			
			ДокументВводОстатков.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ДлительныеОперации.СообщитьПрогресс(65, "Обработка файлов товаров.");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаФайловНоменклатур.Номенклатура КАК Номенклатура,
	|	ТаблицаФайловНоменклатур.Характеристика КАК Характеристика,
	|	ТаблицаФайловНоменклатур.Идентификатор КАК Идентификатор,
	|	ТаблицаФайловНоменклатур.НомерСтроки КАК НомерСтроки,
	|	ТаблицаФайловНоменклатур.ЭтоОсновноеИзображение КАК ЭтоОсновноеИзображение
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТаблицаФайловНоменклатур КАК ТаблицаФайловНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК ФайлКартинки,
	|	ВТ.Идентификатор КАК Идентификатор,
	|	ВТ.Номенклатура КАК Номенклатура,
	|	ВТ.ЭтоОсновноеИзображение
	|		И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ВТ.Номенклатура КАК Справочник.Номенклатура).ФайлКартинки = СопоставлениеФайловДляМагазинаСоцСетей.Файл, ЛОЖЬ) КАК ДляЗаписи,
	|	СопоставлениеФайловДляМагазинаСоцСетей.Файл ЕСТЬ NULL
	|		ИЛИ ЕСТЬNULL(ВТ.Номенклатура <> ВЫРАЗИТЬ(СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Справочник.НоменклатураПрисоединенныеФайлы).ВладелецФайла, ЛОЖЬ) КАК ТребуетсяСоздать,
	|	ВТ.НомерСтроки КАК НомерСтроки,
	|	ВТ.Характеристика КАК Характеристика,
	|	ИСТИНА КАК ЭтоНоменклатура
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|		ПО ВТ.Идентификатор = СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.Файл Ссылка Справочник.НоменклатураПрисоединенныеФайлы)
	|			И (НЕ ВЫРАЗИТЬ(СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Справочник.НоменклатураПрисоединенныеФайлы).ПометкаУдаления)
	|ГДЕ
	|	ВТ.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СопоставлениеФайловДляМагазинаСоцСетей.Файл,
	|	ВТ.Идентификатор,
	|	ВТ.Номенклатура,
	|	ВТ.ЭтоОсновноеИзображение
	|		И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ВТ.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).ФайлКартинки = СопоставлениеФайловДляМагазинаСоцСетей.Файл, ЛОЖЬ),
	|	СопоставлениеФайловДляМагазинаСоцСетей.Файл ЕСТЬ NULL
	|		ИЛИ ЕСТЬNULL(ВТ.Характеристика <> ВЫРАЗИТЬ(СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Справочник.ХарактеристикиНоменклатурыПрисоединенныеФайлы).ВладелецФайла, ЛОЖЬ),
	|	ВТ.НомерСтроки,
	|	ВТ.Характеристика,
	|	ЛОЖЬ
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеФайловДляМагазинаСоцСетей КАК СопоставлениеФайловДляМагазинаСоцСетей
	|		ПО ВТ.Идентификатор = СопоставлениеФайловДляМагазинаСоцСетей.Идентификатор
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
	|			И (СопоставлениеФайловДляМагазинаСоцСетей.Файл Ссылка Справочник.ХарактеристикиНоменклатурыПрисоединенныеФайлы)
	|			И (НЕ ВЫРАЗИТЬ(СопоставлениеФайловДляМагазинаСоцСетей.Файл КАК Справочник.ХарактеристикиНоменклатурыПрисоединенныеФайлы).ПометкаУдаления)
	|ГДЕ
	|	ВТ.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаФайловНоменклатур", ТаблицаФайловНоменклатур);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ФайлКартинки = ВыборкаДетальныеЗаписи.ФайлКартинки;
		
		СсылкаНаВладедьца = ВыборкаДетальныеЗаписи.Номенклатура;
		
		Если ВыборкаДетальныеЗаписи.ТребуетсяСоздать Тогда
			
			ОписаниеФайла = СоответствиеФайлов.Получить(ВыборкаДетальныеЗаписи.Идентификатор);
			Если ОписаниеФайла = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ФайлКартинки = СоздатьФайлИзВнешнейСистемы(ОписаниеУзелОбмена, ОписаниеФайла, ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Характеристика);
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, ФайлКартинки);
			
		КонецЕсли;
		
		Если НЕ ВыборкаДетальныеЗаписи.ДляЗаписи Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ЭтоНоменклатура Тогда
			
			НоменклатураОбъект = ВыборкаДетальныеЗаписи.Номенклатура.ПолучитьОбъект();
			НоменклатураОбъект.ФайлКартинки = ФайлКартинки;
			НоменклатураОбъект.ОбменДанными.Загрузка = Истина;
			НоменклатураОбъект.Записать();
			
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, НоменклатураОбъект.Ссылка);
			
		Иначе
			
			ХарактеристикаОбъект = ВыборкаДетальныеЗаписи.Характеристика.ПолучитьОбъект();
			ХарактеристикаОбъект.ФайлКартинки = ФайлКартинки;
			ХарактеристикаОбъект.ОбменДанными.Загрузка = Истина;
			ХарактеристикаОбъект.Записать();
			
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, ХарактеристикаОбъект.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДлительныеОперации.СообщитьПрогресс(80, "Загрузка подборок товаров.");
	
	Если ОписаниеУзелОбмена.ЗагружатьВиртуальныеКаталоги Тогда
		СоздатьПодборкиТоваров(ОписаниеУзелОбмена);
	КонецЕсли;
	
	ДлительныеОперации.СообщитьПрогресс(100, "Обработка завершена успешно.");
	
	Возврат Результат;
	
КонецФункции

Процедура СоздатьПодборкиТоваров(ОписаниеУзелОбмена)
	
	ПодборкиТоваров = ПолучитьПодборкиТоваров(ОписаниеУзелОбмена);
	
	Если ПодборкиТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивИдентификаторов = Новый Массив(ПодборкиТоваров.Количество());
	Для Н = 0 По ПодборкиТоваров.ВГраница() Цикл
		МассивИдентификаторов[Н] = ПодборкиТоваров[Н].Идентификатор;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Ссылка,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор В(&МассивИдентификаторов)
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""album""";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СоответствиеПодборок = Новый Соответствие;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СоответствиеПодборок.Вставить(ВыборкаДетальныеЗаписи.Идентификатор, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	ТаблицаСоставаВиртуальныхКаталогов = Новый ТаблицаЗначений;
	ТаблицаСоставаВиртуальныхКаталогов.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.ВиртуальныеКаталогиТоваровМагазиновСоцСетей"));
	ТаблицаСоставаВиртуальныхКаталогов.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(50)));
	
	Для Н = 0 По ПодборкиТоваров.ВГраница() Цикл
		ТекОписание = ПодборкиТоваров[Н];
		
		Если СоответствиеПодборок.Получить(ТекОписание.Идентификатор) = Неопределено Тогда
			
			ВиртуальныйКаталогОбъект = Справочники.ВиртуальныеКаталогиТоваровМагазиновСоцСетей.СоздатьЭлемент();
			ВиртуальныйКаталогОбъект.Владелец = ОписаниеУзелОбмена.Ссылка;
			ВиртуальныйКаталогОбъект.ЭтоОсновной = ТекОписание.ЭтоОсновной;
			ВиртуальныйКаталогОбъект.ЭтоСкрытый = ТекОписание.ЭтоСкрытый;
			ВиртуальныйКаталогОбъект.Наименование = ТекОписание.Наименование;
			ВиртуальныйКаталогОбъект.Записать();
			
			ВиртуальныйКаталог = ВиртуальныйКаталогОбъект.Ссылка;
			
			ФайлКартинки = СоздатьФайлИзВнешнейСистемы(ОписаниеУзелОбмена,
			ТекОписание.ФайлКартинки, ВиртуальныйКаталог, Неопределено, Истина);
			
			ВиртуальныйКаталогОбъект = ВиртуальныйКаталог.ПолучитьОбъект();
			ВиртуальныйКаталогОбъект.Логотип = ФайлКартинки;
			ВиртуальныйКаталогОбъект.Записать();
			
			ПланыОбмена.УдалитьРегистрациюИзменений(ОписаниеУзелОбмена.Ссылка, ВиртуальныйКаталог);
			
			СоответствиеПодборок.Вставить(ТекОписание.Идентификатор, ВиртуальныйКаталог);
			
			ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка,
			ВиртуальныйКаталог, ТекОписание.Идентификатор, "album", ОписаниеУзелОбмена.ТекущаяДата);
			
			Если ТекОписание.КоличествоТоваров > 0 Тогда
				ТоварыВиртуальногоКаталога = ПолучитьВсеТоварыИзМагазина(ОписаниеУзелОбмена, Ложь, Ложь,
				СтрШаблон("&album_id=%1", ТекОписание.Идентификатор));
				
				Для Каждого Стр Из ТоварыВиртуальногоКаталога Цикл
					НовСтр = ТаблицаСоставаВиртуальныхКаталогов.Добавить();
					НовСтр.Ссылка = ВиртуальныйКаталог;
					НовСтр.Идентификатор = Стр.Идентификатор;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТаблицаСоставаВиртуальныхКаталогов.Количество() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаСоставаВиртуальныхКаталогов.Ссылка КАК Ссылка,
		|	ТаблицаСоставаВиртуальныхКаталогов.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТаблицаСоставаВиртуальныхКаталогов КАК ТаблицаСоставаВиртуальныхКаталогов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК ВиртуальныйКаталог,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|		ПО ВТ.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
		|ГДЕ
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка Ссылка Справочник.Номенклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ.Ссылка,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка.Владелец,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|		ПО ВТ.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
		|ГДЕ
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка Ссылка Справочник.ХарактеристикиНоменклатуры";
		
		Запрос.УстановитьПараметр("ТаблицаСоставаВиртуальныхКаталогов", ТаблицаСоставаВиртуальныхКаталогов);
		Запрос.УстановитьПараметр("УзелИнформационнойБазы", ОписаниеУзелОбмена.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МЗ = РегистрыСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.СоздатьМенеджерЗаписи();
			МЗ.УзелИнформационнойБазы = ОписаниеУзелОбмена.Ссылка;
			МЗ.ВиртуальныйКаталог = ВыборкаДетальныеЗаписи.ВиртуальныйКаталог;
			МЗ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			МЗ.Характеристика = ВыборкаДетальныеЗаписи.Характеристика;
			МЗ.Записать();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьОписаниеКатегорий(ОписаниеКатегорий, ОписаниеУзелОбмена) 
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.ТипНоменклатуры) Тогда 
		ОписаниеКатегорий.Вставить("ТипНоменклатуры" , ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СчетУчетаДоходов) Тогда 
		ОписаниеКатегорий.Вставить("СчетУчетаДоходов" , ПредопределенноеЗначение("ПланСчетов.Управленческий.ПрочиеДоходы"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СчетУчетаЗапасов) Тогда 
		ОписаниеКатегорий.Вставить("СчетУчетаЗапасов" , ПредопределенноеЗначение("ПланСчетов.Управленческий.СырьеИМатериалы"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СчетУчетаЗатрат) Тогда 
		ОписаниеКатегорий.Вставить("СчетУчетаЗатрат" , ПредопределенноеЗначение("ПланСчетов.Управленческий.НезавершенноеПроизводство"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СчетУчетаЗатрат) Тогда 
		ОписаниеКатегорий.Вставить("ЕдиницаИзмерения" , ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.шт"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.ВидСтавкиНДС) Тогда 
		ОписаниеКатегорий.Вставить("ВидСтавкиНДС" , ОписаниеУзелОбмена.ВидСтавкиНДСПоУмолчанию);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СпособПополнения) Тогда 
		ОписаниеКатегорий.Вставить("СпособПополнения" , ПредопределенноеЗначение("Перечисление.СпособыПополненияЗапасов.Закупка"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.МетодОценки) Тогда 
		ОписаниеКатегорий.Вставить("МетодОценки" , ПредопределенноеЗначение("Перечисление.МетодОценкиЗапасов.ПоСредней"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СрокИсполненияЗаказа) Тогда 
		ОписаниеКатегорий.Вставить("СрокИсполненияЗаказа" , 1);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СрокПополнения) Тогда 
		ОписаниеКатегорий.Вставить("СрокПополнения" , 1);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.СтранаПроисхождения) Тогда 
		ОписаниеКатегорий.Вставить("СтранаПроисхождения" , ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.ВидМаркировки) Тогда 
		ОписаниеКатегорий.Вставить("ВидМаркировки" , ПредопределенноеЗначение("Перечисление.ВидыМаркировки.НеМаркируется"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.НаправлениеДеятельности) Тогда 
		ОписаниеКатегорий.Вставить("НаправлениеДеятельности" , ПредопределенноеЗначение("Справочник.НаправленияДеятельности.ОсновноеНаправление"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКатегорий.Склад) Тогда 
		ОписаниеКатегорий.Вставить("Склад" , ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ОсновнойСклад"));
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьФайлИзВнешнейСистемы(ОписаниеУзелОбмена, ОписаниеФайла, ВладелецФайлов, Характеристика = Неопределено, ЭтоФайлВиртуальногоКаталога = Ложь) Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ОписаниеФайла.Расширение);
	
	КопироватьФайл(ОписаниеФайла.ПубличнаяСсылка, ИмяВременногоФайла);
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	ИмяБезРасширения = ИнтеграцияСМагазинамиСоцСетейСервер.ПолучитьХешФайла(ДвоичныеДанные);
	
	ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
	ПараметрыФайла.ВладелецФайлов = ВладелецФайлов;
	
	Если ЗначениеЗаполнено(Характеристика) Тогда
		ПараметрыФайла.ВладелецФайлов = Характеристика;
	КонецЕсли;
	
	ПараметрыФайла.ИмяБезРасширения = ИмяБезРасширения;
	ПараметрыФайла.РасширениеБезТочки = СтрЗаменить(ОписаниеФайла.Расширение,".","");
	
	ФайлКартинки = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, ПоместитьВоВременноеХранилище(ДвоичныеДанные));
	
	Если ЭтоФайлВиртуальногоКаталога Тогда
		ДобавитьСопоставлениеИдентификаторовМагазина(ОписаниеУзелОбмена.Ссылка,
		ФайлКартинки, ОписаниеФайла.Идентификатор, "album_photo", ОписаниеУзелОбмена.ТекущаяДата);
	Иначе
		ДобавитьСопоставлениеФайлаМагазина(ОписаниеУзелОбмена.Ссылка, ВладелецФайлов, Характеристика, ФайлКартинки
		,ОписаниеФайла.Идентификатор, ОписаниеУзелОбмена.ТекущаяДата);
	КонецЕсли;
	
	Картинка = Новый Картинка(ДвоичныеДанные);
	
	ДобавитьДополнительныеПоляФайлам(ФайлКартинки, Картинка.Высота(), Картинка.Ширина());
	
	ДвоичныеДанные = Неопределено;
	Картинка = Неопределено;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат ФайлКартинки;
	
КонецФункции

Процедура ДобавитьДополнительныеПоляФайлам(Файл, Высота, Ширина) Экспорт
	
	МЗ = РегистрыСведений.ДополнительныеПоляФайловДляМагазинаСоцСетей.СоздатьМенеджерЗаписи();
	МЗ.Файл = Файл;
	МЗ.Высота = Высота;
	МЗ.Ширина = Ширина;
	МЗ.Записать();
	
КонецПроцедуры

Функция ПолучитьРасширениеФайлаПоПубличнойСсылке(знач ПубличнаяСсылка) Экспорт
	
	ПубличнаяСсылка = СтрЗаменить(ПубличнаяСсылка , "https:/", "");
	ПубличнаяСсылка = СтрЗаменить(ПубличнаяСсылка , "http:/", "");
	ФайлКартинки = Новый Файл(ПубличнаяСсылка);
	
	Возврат ФайлКартинки.Расширение;
	
КонецФункции

Функция ПолучитьОбщиеДанныеРерусивно(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса, знач Смещение = 0, знач ИспользоватьСмещение = Истина)
	
	Результат = Новый Массив;
	
	Пока Истина Цикл 
		
		РезультатДанные = ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса, Смещение, Истина);
		
		Если РезультатДанные = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		КоличествоДанных = РезультатДанные.Количество();
		
		Если КоличествоДанных = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Смещение = Смещение + КоличествоДанных;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, РезультатДанные);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОбщиеДанные(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса, Смещение = 0, ИспользоватьСмещение = Ложь) Экспорт
	
	ОтветСоответствие = ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса, Смещение, ИспользоватьСмещение);
	Если ОтветСоответствие = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СписокМассив = ОтветСоответствие.Получить("items");
	Если СписокМассив = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СписокМассив;
	
КонецФункции 

Функция ВыполнитьЗапросИПроверить(ОписаниеУзелОбмена,СтруктураЗапросаHTTP, АдресРесурса, Смещение = 0, ИспользоватьСмещение = Ложь, ОповещатьПользователя = Истина)
	
	СтруктураЗапросаHTTP.АдресРесурса = АдресРесурса + ?(ИспользоватьСмещение,СтрШаблон("&offset=%1", XMLСтрока(Смещение)),"");
	
	РезультатСоответствие = ИнтеграцияСМагазинамиСоцСетейСервер.ВыполнитьHTTPЗапросОбработатьJSON(СтруктураЗапросаHTTP);
	
	Если Не СтруктураЗапросаHTTP.ПрочтенУспешноJSON Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РезультатСоответствие = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОшибкаСоответствие = РезультатСоответствие.Получить("error");
	Если ОшибкаСоответствие <> Неопределено Тогда
		Если ОповещатьПользователя Тогда
			ОбработатьОшибку(ОписаниеУзелОбмена, СтруктураЗапросаHTTP.ТелоОтвета);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтруктураЗапросаHTTP.ТелоОтвета);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РезультатСоответствие;
	
КонецФункции 

Функция ВыполнитьЗапросИПроверить_ПолучитьОтвет(ОписаниеУзелОбмена,СтруктураЗапросаHTTP, АдресРесурса, Смещение = 0, ИспользоватьСмещение = Ложь, ОповещатьПользователя = Истина)
	
	РезультатСоответствие = ВыполнитьЗапросИПроверить(ОписаниеУзелОбмена, СтруктураЗапросаHTTP, АдресРесурса, Смещение, ИспользоватьСмещение, ОповещатьПользователя);
	Если РезультатСоответствие = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОтветСоответствие = РезультатСоответствие.Получить("response");
	Если ОтветСоответствие = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОтветСоответствие;
	
КонецФункции

Процедура ЗаполнитьОсновныеПараметры(АдресРесурса, ОписаниеУзелОбмена, ИспользоватьТокенСообщества = Ложь) Экспорт
	
	Если ИспользоватьТокенСообщества Тогда
		АдресРесурса = АдресРесурса + СтрШаблон("?v=%1&access_token=%2"
		, ПолучитьАктуальнуюВерсиюAPI(), ОписаниеУзелОбмена.ТокенДоступаСообщества);
	иначе
		АдресРесурса = АдресРесурса + СтрШаблон("?v=%1&access_token=%2"
		, ПолучитьАктуальнуюВерсиюAPI(), ОписаниеУзелОбмена.ТокенДоступа);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокГруппПользователя(ОписаниеУзелОбмена) Экспорт  
	
	АдресРесурса = "/method/groups.get";
	ЗаполнитьОсновныеПараметры(АдресРесурса,ОписаниеУзелОбмена);
	
	АдресРесурса = АдресРесурса + "&extended=1&filter=admin";
	
	СтруктураЗапросаHTTP = ПодготовитьHTTPЗапрос(АдресРесурса);
	
	РезультатСоответствие = ИнтеграцияСМагазинамиСоцСетейСервер.ВыполнитьHTTPЗапросОбработатьJSON(СтруктураЗапросаHTTP);
	
	Если Не СтруктураЗапросаHTTP.ПрочтенУспешноJSON Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОшибкаСоответствие = РезультатСоответствие.Получить("error");
	Если ОшибкаСоответствие <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОшибкаСоответствие.Получить("error_msg"));
		Возврат Неопределено;
	КонецЕсли;
	
	ОтветСоответствие = РезультатСоответствие.Получить("response");
	Если ОтветСоответствие = Неопределено Тогда
		Возврат Новый СписокЗначений;
	КонецЕсли;
	
	СписокМассив = ОтветСоответствие.Получить("items");
	Если СписокМассив = Неопределено Тогда
		Возврат Новый СписокЗначений;
	КонецЕсли;
	
	СписокЗначений = Новый СписокЗначений;
	Для каждого СтрОписаниеГруппы Из СписокМассив Цикл
		СписокЗначений.Добавить(ПолучитьИдентификаторСтрокой(СтрОписаниеГруппы.Получить("id")),СтрОписаниеГруппы.Получить("name"));
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

Функция ПодготовитьHTTPЗапрос(АдресРесурса , ИмяМетода = "get") Экспорт
	
	СтруктураЗапросаHTTP = ИнтеграцияСМагазинамиСоцСетейСервер.ПодготовитьHTTPЗапрос();
	СтруктураЗапросаHTTP.Сервер = "api.vk.com";
	СтруктураЗапросаHTTP.АдресРесурса = АдресРесурса;
	СтруктураЗапросаHTTP.ТекстПроверкиДляПовторенияЗапроса = "Too many requests per second";
	СтруктураЗапросаHTTP.ИнтервалОжиданияПередПовторением = 1.2;
	СтруктураЗапросаHTTP.ОграничениеНаКоличествоВызововС = 4;
	
	Возврат СтруктураЗапросаHTTP;
	
КонецФункции 

Процедура ДобавитьЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации, Комментарий) Экспорт
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации, , , Комментарий);
	
КонецПроцедуры

функция ПолучитьСоответствиеНаборов(МассивТоваров) Экспорт
	
	СоответствиеНаборов = Новый Соответствие;
	
	Для Каждого ОписаниеНоменклатура Из МассивТоваров Цикл
		
		Для Каждого СтрОписаниеНабора Из ОписаниеНоменклатура.МассивНаборов Цикл
			ОписаниеНабора = СоответствиеНаборов.Получить(СтрОписаниеНабора.Идентификатор);
			Если ОписаниеНабора = Неопределено Тогда
				ОписаниеНабора = Новый Структура;
				ОписаниеНабора.Вставить("Наименование" , СтрОписаниеНабора.Наименование);
				ОписаниеНабора.Вставить("Значения" , Новый Соответствие);
			КонецЕсли; 
			
			Для Каждого СтрОписаниеНабораВариант Из СтрОписаниеНабора.Значения Цикл
				ОписаниеНабора.Значения.Вставить(СтрОписаниеНабораВариант.Идентификатор, СтрОписаниеНабораВариант.Наименование);
			КонецЦикла;
			
			СоответствиеНаборов.Вставить(СтрОписаниеНабора.Идентификатор, ОписаниеНабора);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат СоответствиеНаборов;
	
КонецФункции

Процедура ЗаполнитьТаблицыНаборов(СсылкаНаУзелОбмена, МассивТоваров, ТаблицаДополнительныхРеквизитов, ТаблицаЗначенийДополнительныхРеквизитов) Экспорт
	
	СоответствиеНаборов = ПолучитьСоответствиеНаборов(МассивТоваров);
	
	Для Каждого КлючЗначение Из СоответствиеНаборов Цикл
		НовСтр = ТаблицаДополнительныхРеквизитов.Добавить();
		НовСтр.Идентификатор = КлючЗначение.Ключ;
		НовСтр.Наименование = КлючЗначение.Значение.Наименование;
		
		Для Каждого КлючЗначениеВариант Из КлючЗначение.Значение.Значения Цикл
			НовСтр = ТаблицаЗначенийДополнительныхРеквизитов.Добавить();
			НовСтр.ИдентификаторДополнительногоРеквизита = КлючЗначение.Ключ;
			НовСтр.Идентификатор = КлючЗначениеВариант.Ключ;
			НовСтр.Наименование = КлючЗначениеВариант.Значение;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДополнительныхРеквизитов.Идентификатор КАК Идентификатор,
	|	ТаблицаДополнительныхРеквизитов.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_ТаблицаДополнительныхРеквизитов
	|ИЗ
	|	&ТаблицаДополнительныхРеквизитов КАК ТаблицаДополнительныхРеквизитов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗначенийДополнительныхРеквизитов.ИдентификаторДополнительногоРеквизита КАК ИдентификаторДополнительногоРеквизита,
	|	ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор КАК Идентификатор,
	|	ТаблицаЗначенийДополнительныхРеквизитов.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_ТаблицаЗначенийДополнительныхРеквизитов
	|ИЗ
	|	&ТаблицаЗначенийДополнительныхРеквизитов КАК ТаблицаЗначенийДополнительныхРеквизитов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор КАК Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК ДополнительныйРеквизит
	|ПОМЕСТИТЬ ВТ_ДополнительныеРеквизиты
	|ИЗ
	|	ВТ_ТаблицаДополнительныхРеквизитов КАК ВТ_ТаблицаДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""property""
	|	И ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) Ссылка ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор КАК Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК ЗначениеДополнительногоРеквизита
	|ПОМЕСТИТЬ ВТ_ЗначенияДополнительныеРеквизиты
	|ИЗ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов КАК ВТ_ТаблицаЗначенийДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""variant""
	|	И ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.ЗначенияСвойствОбъектов) Ссылка Справочник.ЗначенияСвойствОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДополнительныеРеквизиты.Идентификатор КАК Идентификатор,
	|	ВТ_ДополнительныеРеквизиты.ДополнительныйРеквизит КАК ДополнительныйРеквизит,
	|	ВТ_ТаблицаДополнительныхРеквизитов.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_ДополнительныеРеквизитыВсе
	|ИЗ
	|	ВТ_ТаблицаДополнительныхРеквизитов КАК ВТ_ТаблицаДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДополнительныеРеквизиты КАК ВТ_ДополнительныеРеквизиты
	|		ПО ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор = ВТ_ДополнительныеРеквизиты.Идентификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор,
	|	МАКСИМУМ(ДополнительныеРеквизитыИСведения.Ссылка),
	|	ВТ_ТаблицаДополнительныхРеквизитов.Наименование
	|ИЗ
	|	ВТ_ТаблицаДополнительныхРеквизитов КАК ВТ_ТаблицаДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО (ВТ_ТаблицаДополнительныхРеквизитов.Наименование = ДополнительныеРеквизитыИСведения.Наименование
	|				ИЛИ ВТ_ТаблицаДополнительныхРеквизитов.Наименование = ДополнительныеРеквизитыИСведения.Заголовок
	|				ИЛИ ВТ_ТаблицаДополнительныхРеквизитов.Наименование = ДополнительныеРеквизитыИСведения.Имя)
	|ГДЕ
	|	НЕ ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ДополнительныеРеквизиты.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ДополнительныеРеквизиты КАК ВТ_ДополнительныеРеквизиты)
	|	И НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления
	|	И ДополнительныеРеквизитыИСведения.Доступен
	|	И НЕ ДополнительныеРеквизитыИСведения.ЭтоДополнительноеСведение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор,
	|	ВТ_ТаблицаДополнительныхРеквизитов.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.ИдентификаторДополнительногоРеквизита КАК ИдентификаторДополнительногоРеквизита,
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор КАК Идентификатор,
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Наименование КАК Наименование,
	|	ВТ_ДополнительныеРеквизитыВсе.ДополнительныйРеквизит КАК ДополнительныйРеквизит
	|ПОМЕСТИТЬ ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты
	|ИЗ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов КАК ВТ_ТаблицаЗначенийДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДополнительныеРеквизитыВсе КАК ВТ_ДополнительныеРеквизитыВсе
	|		ПО ВТ_ТаблицаЗначенийДополнительныхРеквизитов.ИдентификаторДополнительногоРеквизита = ВТ_ДополнительныеРеквизитыВсе.Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗначенияДополнительныеРеквизиты.Идентификатор КАК Идентификатор,
	|	ВТ_ЗначенияДополнительныеРеквизиты.ЗначениеДополнительногоРеквизита КАК ЗначениеДополнительногоРеквизита,
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.ИдентификаторДополнительногоРеквизита КАК ИдентификаторДополнительногоРеквизита,
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_ЗначенияДополнительныеРеквизитыВсе
	|ИЗ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов КАК ВТ_ТаблицаЗначенийДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначенияДополнительныеРеквизиты КАК ВТ_ЗначенияДополнительныеРеквизиты
	|		ПО ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор = ВТ_ЗначенияДополнительныеРеквизиты.Идентификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Идентификатор,
	|	МАКСИМУМ(ЗначенияСвойствОбъектов.Ссылка),
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.ИдентификаторДополнительногоРеквизита,
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Наименование
	|ИЗ
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты КАК ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.ДополнительныйРеквизит = ЗначенияСвойствОбъектов.Владелец
	|			И (ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Наименование = ЗначенияСвойствОбъектов.Наименование
	|				ИЛИ ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Наименование = (ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.ПолноеНаименование КАК СТРОКА(100))))
	|ГДЕ
	|	НЕ ЗначенияСвойствОбъектов.ПометкаУдаления
	|	И НЕ ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ЗначенияДополнительныеРеквизиты.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ЗначенияДополнительныеРеквизиты КАК ВТ_ЗначенияДополнительныеРеквизиты)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.ИдентификаторДополнительногоРеквизита,
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Наименование,
	|	ВТ_ЗначенияДополнительныеРеквизитыИРеквизиты.Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДополнительныеРеквизитыВсе.Идентификатор КАК Идентификатор,
	|	ВТ_ДополнительныеРеквизитыВсе.ДополнительныйРеквизит КАК ДополнительныйРеквизит,
	|	ВТ_ДополнительныеРеквизитыВсе.Наименование КАК Наименование
	|ИЗ
	|	ВТ_ДополнительныеРеквизитыВсе КАК ВТ_ДополнительныеРеквизитыВсе
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор,
	|	NULL,
	|	ВТ_ТаблицаДополнительныхРеквизитов.Наименование
	|ИЗ
	|	ВТ_ТаблицаДополнительныхРеквизитов КАК ВТ_ТаблицаДополнительныхРеквизитов
	|ГДЕ
	|	НЕ ВТ_ТаблицаДополнительныхРеквизитов.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ДополнительныеРеквизитыВсе.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ДополнительныеРеквизитыВсе КАК ВТ_ДополнительныеРеквизитыВсе)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗначенияДополнительныеРеквизитыВсе.Идентификатор КАК Идентификатор,
	|	ВТ_ЗначенияДополнительныеРеквизитыВсе.ЗначениеДополнительногоРеквизита КАК ЗначениеДополнительногоРеквизита,
	|	ВТ_ЗначенияДополнительныеРеквизитыВсе.ИдентификаторДополнительногоРеквизита КАК ИдентификаторДополнительногоРеквизита,
	|	ВТ_ЗначенияДополнительныеРеквизитыВсе.Наименование КАК Наименование
	|ИЗ
	|	ВТ_ЗначенияДополнительныеРеквизитыВсе КАК ВТ_ЗначенияДополнительныеРеквизитыВсе
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор,
	|	NULL,
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.ИдентификаторДополнительногоРеквизита,
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Наименование
	|ИЗ
	|	ВТ_ТаблицаЗначенийДополнительныхРеквизитов КАК ВТ_ТаблицаЗначенийДополнительныхРеквизитов
	|ГДЕ
	|	НЕ ВТ_ТаблицаЗначенийДополнительныхРеквизитов.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ЗначенияДополнительныеРеквизитыВсе.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ЗначенияДополнительныеРеквизитыВсе КАК ВТ_ЗначенияДополнительныеРеквизитыВсе)";
	
	Запрос.УстановитьПараметр("ТаблицаДополнительныхРеквизитов" , ТаблицаДополнительныхРеквизитов.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаЗначенийДополнительныхРеквизитов" , ТаблицаЗначенийДополнительныхРеквизитов.Выгрузить());
	Запрос.УстановитьПараметр("УзелИнформационнойБазы" , СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаДополнительныхРеквизитов = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить();
	ТаблицаЗначенийДополнительныхРеквизитов = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить();
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		ЕдинственнаяИнтегарция = ПолучитьЕдинственнуюИнтегарцию();
		
		Если ЕдинственнаяИнтегарция <> Неопределено Тогда
			ВыбраннаяФорма = "ФормаУзлаВКонтакте";
			Параметры.Вставить("Ключ", ЕдинственнаяИнтегарция);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЕдинственнуюИнтегарцию() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнтеграцияСМагазинамиСоцСетей.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.ИнтеграцияСМагазинамиСоцСетей КАК ИнтеграцияСМагазинамиСоцСетей
	|ГДЕ
	|	НЕ ИнтеграцияСМагазинамиСоцСетей.ПометкаУдаления
	|	И НЕ ИнтеграцияСМагазинамиСоцСетей.ЭтотУзел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ПредопределенноеЗначение("ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.ПустаяСсылка");
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() > 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
	
КонецФункции

#КонецЕсли

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНаУзелОбмена = Параметры.СсылкаНаУзелОбмена;
	ОтборКатегорииИерархияПереключатель
	= ПредопределенноеЗначение("Перечисление.ВидыОтборовНоменклатуры.КатегорииНоменклатуры");
	
	ОбновитьСписокВыбораНаСервере();
	ОбновитьВыбранныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПредставлениеВыбранныхКатегорий();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовЭлементовФормы 

&НаКлиенте
Процедура ОбновитьСписокВыбора(Команда)
	ОбновитьСписокВыбораНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтборКатегорииИерархияПереключательПриИзменении(Элемент)
	ОтборКатегорииИерархияПереключательПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСписокВыбранныхГруппНажатие(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияСписокВыбранныхГруппНажатиеЗавершение" , ЭтаФорма);
	
	МассивИспользуемыхВМагазине = Новый Массив;
	Для Каждого Стр Из ДеревоВыбранныхТоваров.ПолучитьЭлементы() Цикл
		МассивИспользуемыхВМагазине.Добавить(Стр.Идентификатор);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МассивИспользуемыхВМагазине", МассивИспользуемыхВМагазине);
	ПараметрыФормы.Вставить("СсылкаНаУзелОбмена", СсылкаНаУзелОбмена);
	
	ОткрытьФорму("ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.Форма.ФормаВыбораКатегорийВКонтакте", ПараметрыФормы, ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	
КонецПроцедуры

&НаКлиенте
Процедура Перенести1ВВыгрузку(Команда)
	
	ВыделенныеСтроки = Элементы.ДеревоТоваров.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоВыбранныхТоваров.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите хотя бы 1 категорию Магазина ВКонтакте для выгрузки!",,"ДекорацияСписокВыбранныхГрупп","ЭтаФорма");
		Возврат;
	КонецЕсли;
	
	ВыбраннаяКатегория = ТекущиеДанные.Идентификатор;
	
	МассивВыбранныхЭлементов = Новый Массив;
	Для Каждого СтрИндекс Из ВыделенныеСтроки Цикл 
		ТекущаяСтрока = ДеревоТоваров.НайтиПоИдентификатору(СтрИндекс);
		МассивВыбранныхЭлементов.Добавить(ТекущаяСтрока);
	КонецЦикла;
	
	ПеренестиВВыгрузку(ВыбраннаяКатегория, МассивВыбранныхЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбранныхТоваровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Удалить1ИзВыгрузки(Команда)
	
	ВыделенныеСтроки = Элементы.ДеревоВыбранныхТоваров.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивВыбранныхЭлементов = Новый Массив;
	Для Каждого СтрИндекс Из ВыделенныеСтроки Цикл
		ТекущаяСтрока = ДеревоВыбранныхТоваров.НайтиПоИдентификатору(СтрИндекс);
		МассивВыбранныхЭлементов.Добавить(ТекущаяСтрока);
	КонецЦикла;
	
	УдалитьИзВыгрузки(МассивВыбранныхЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаСервере();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		УдалитьИзВыгрузки(ПараметрыПеретаскивания.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбранныхТоваровПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле) 
	
	СтандартнаяОбработка = Ложь;
	
	Если Строка = Неопределено Тогда
		
		КоличествоКатегорий = ДеревоВыбранныхТоваров.ПолучитьЭлементы().Количество();
		
		Если КоличествоКатегорий = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите хотя бы 1 категорию Магазина ВКонтакте для выгрузки!",,"ДекорацияСписокВыбранныхГрупп","ЭтаФорма");
			Возврат;
		Иначе
			ТекущаяСтрока = ДеревоВыбранныхТоваров.ПолучитьЭлементы()[КоличествоКатегорий-1];
		КонецЕсли;
		
	Иначе
		ТекущаяСтрока = ДеревоВыбранныхТоваров.НайтиПоИдентификатору(Строка);
	КонецЕсли;
	
	ПеренестиВВыгрузку(ТекущаяСтрока.Идентификатор, ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекущиеДанные = Элементы.ДеревоВыбранныхТоваров.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Выполнение = Ложь;
	ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите хотя бы 1 категорию Магазина ВКонтакте для выгрузки!",,"ДекорацияСписокВыбранныхГрупп","ЭтаФорма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокВыбораНаСервере()
	
	ДеревоТоваров.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура_Спр.Ссылка КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	Номенклатура_Спр.Наименование КАК Наименование,
	|	ХарактеристикиНоменклатуры.Наименование КАК НаименованиеХарактеристика,
	|	Номенклатура_Спр.Родитель КАК Родитель,
	|	Номенклатура_Спр.КатегорияНоменклатуры КАК КатегорияНоменклатуры
	|ПОМЕСТИТЬ ВТ_Характеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура_Спр
	|		ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура_Спр.Ссылка
	|ГДЕ
	|	НЕ Номенклатура_Спр.ПометкаУдаления
	|	И НЕ Номенклатура_Спр.ЭтоГруппа
	|	И Номенклатура_Спр.ИспользоватьХарактеристики
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И НЕ ХарактеристикиНоменклатуры.Недействителен
	|	И НЕ Номенклатура_Спр.Недействителен
	|	И Номенклатура_Спр.ФайлКартинки <> ЗНАЧЕНИЕ(справочник.НоменклатураПрисоединенныеФайлы.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура_Спр.Ссылка КАК Номенклатура,
	|	Номенклатура_Спр.Наименование КАК Наименование,
	|	Номенклатура_Спр.Родитель КАК Родитель,
	|	Номенклатура_Спр.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	"""" КАК НаименованиеХарактеристики,
	|	ЛОЖЬ КАК ИспользоватьХарактеристики
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура_Спр
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|		ПО Номенклатура_Спр.Ссылка = НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура
	|			И (НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
	|			И (НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|ГДЕ
	|	НЕ Номенклатура_Спр.ПометкаУдаления
	|	И НЕ Номенклатура_Спр.ЭтоГруппа
	|	И НЕ Номенклатура_Спр.ИспользоватьХарактеристики
	|	И Номенклатура_Спр.ФайлКартинки <> ЗНАЧЕНИЕ(справочник.НоменклатураПрисоединенныеФайлы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Характеристики.Номенклатура,
	|	ВТ_Характеристики.Наименование,
	|	ВТ_Характеристики.Родитель,
	|	ВТ_Характеристики.КатегорияНоменклатуры,
	|	ВТ_Характеристики.Характеристика,
	|	ВТ_Характеристики.НаименованиеХарактеристика,
	|	ИСТИНА
	|ИЗ
	|	ВТ_Характеристики КАК ВТ_Характеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|		ПО ВТ_Характеристики.Номенклатура = НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура
	|			И ВТ_Характеристики.Характеристика = НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика
	|			И (НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	|	ВТ.Родитель КАК Группа,
	|	ВТ.Номенклатура КАК Номенклатура,
	|	ВТ.Наименование КАК Наименование,
	|	ВТ.Характеристика КАК Характеристика,
	|	ВТ.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	ВТ.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	НЕ &ПоГруппам
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ.КатегорияНоменклатуры.Наименование,
	|	Номенклатура,
	|	Характеристика
	|ИТОГИ ПО
	|	КатегорияНоменклатуры,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Родитель КАК Группа,
	|	ВТ.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	|	ВТ.Номенклатура КАК Номенклатура,
	|	ВТ.Наименование КАК Наименование,
	|	ВТ.Характеристика КАК Характеристика,
	|	ВТ.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	ВТ.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	&ПоГруппам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Группа,
	|	Наименование,
	|	НаименованиеХарактеристики
	|ИТОГИ ПО
	|	Группа ИЕРАРХИЯ,
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", СсылкаНаУзелОбмена);
	Запрос.УстановитьПараметр("ПоГруппам", ОтборКатегорииИерархияПереключатель
	= ПредопределенноеЗначение("Перечисление.ВидыОтборовНоменклатуры.ГруппыНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если ОтборКатегорииИерархияПереключатель
		= ПредопределенноеЗначение("Перечисление.ВидыОтборовНоменклатуры.ГруппыНоменклатуры") Тогда
		
		ДеревоТоваровПред = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		РекурсивноЗаполнитьСтрокиДерева(ДеревоТоваровПред.Строки, ДеревоТоваров);
		
	Иначе
		
		ВыборкаДетальныеЗаписиКатегории = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетальныеЗаписиКатегории.Следующий() Цикл
			
			СтрокаКатегория = ДеревоТоваров.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаКатегория, ВыборкаДетальныеЗаписиКатегории);
			СтрокаКатегория.Представление = ВыборкаДетальныеЗаписиКатегории.КатегорияНоменклатуры;
			СтрокаКатегория.НомерКартинки = 99;
			
			Если Не ЗначениеЗаполнено(СтрокаКатегория.Представление) Тогда
				СтрокаКатегория.Представление = "<Без категории>";
			КонецЕсли;
			
			ВыборкаДетальныеЗаписиНоменклатура = ВыборкаДетальныеЗаписиКатегории.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДетальныеЗаписиНоменклатура.Следующий() Цикл
				
				СтрокаНоменклатура = СтрокаКатегория.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ВыборкаДетальныеЗаписиНоменклатура);
				СтрокаНоменклатура.Представление = ВыборкаДетальныеЗаписиНоменклатура.Номенклатура;
				СтрокаНоменклатура.НомерКартинки = 0;
				
				ВыборкаДетальныеЗаписиХарактеристика = ВыборкаДетальныеЗаписиНоменклатура.Выбрать();
				Пока ВыборкаДетальныеЗаписиХарактеристика.Следующий() Цикл
					
					Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписиХарактеристика.Характеристика) Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаХарактеристика = СтрокаНоменклатура.ПолучитьЭлементы().Добавить(); 
					ЗаполнитьЗначенияСвойств(СтрокаХарактеристика, ВыборкаДетальныеЗаписиХарактеристика);
					СтрокаХарактеристика.Представление = ВыборкаДетальныеЗаписиХарактеристика.Характеристика;
					СтрокаХарактеристика.НомерКартинки = 0;
					СтрокаНоменклатура.НомерКартинки = 1;
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыбранныеНаСервере()
	
	ДеревоВыбранныхТоваров.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Идентификатор КАК Идентификатор,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Сортировка КАК Сортировка,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика КАК Характеристика,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка
	|ИТОГИ
	|	МАКСИМУМ(Наименование)
	|ПО
	|	Идентификатор,
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписиКатегории = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДетальныеЗаписиКатегории.Следующий() Цикл
		
		СтрокаКатегория = ДеревоВыбранныхТоваров.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКатегория, ВыборкаДетальныеЗаписиКатегории);
		СтрокаКатегория.Наименование = ВыборкаДетальныеЗаписиКатегории.Наименование;
		СтрокаКатегория.НомерКартинки = 99;
		
		ВыборкаДетальныеЗаписиНоменклатура = ВыборкаДетальныеЗаписиКатегории.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетальныеЗаписиНоменклатура.Следующий() Цикл
			
			СтрокаНоменклатура = СтрокаКатегория.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ВыборкаДетальныеЗаписиНоменклатура);
			СтрокаНоменклатура.Наименование = ВыборкаДетальныеЗаписиНоменклатура.Номенклатура;
			СтрокаНоменклатура.НомерКартинки = 0;
			
			ВыборкаДетальныеЗаписиХарактеристика = ВыборкаДетальныеЗаписиНоменклатура.Выбрать();
			Пока ВыборкаДетальныеЗаписиХарактеристика.Следующий() Цикл
				
				Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписиХарактеристика.Характеристика) Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаХарактеристика = СтрокаНоменклатура.ПолучитьЭлементы().Добавить(); 
				ЗаполнитьЗначенияСвойств(СтрокаХарактеристика, ВыборкаДетальныеЗаписиХарактеристика);
				СтрокаХарактеристика.Наименование = ВыборкаДетальныеЗаписиХарактеристика.Характеристика;
				СтрокаХарактеристика.НомерКартинки = 0;
				СтрокаНоменклатура.НомерКартинки = 1;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВыбранныхКатегорий()
	
	МассивНаименований = Новый Массив;
	Для Каждого Стр из ДеревоВыбранныхТоваров.ПолучитьЭлементы() Цикл
		МассивНаименований.Добавить(Стр.Наименование);
	КонецЦикла;
	
	Если МассивНаименований.Количество() = 0 Тогда
		Элементы.ДекорацияСписокВыбранныхГрупп.Заголовок = "<Выберите категории ВКонтакте>";
	ИначеЕсли МассивНаименований.Количество() = 1 Тогда
		Элементы.ДекорацияСписокВыбранныхГрупп.Заголовок = МассивНаименований[0];
	ИначеЕсли МассивНаименований.Количество() = 2 Тогда
		Элементы.ДекорацияСписокВыбранныхГрупп.Заголовок = "" + МассивНаименований[0] + "; " + МассивНаименований[1] + "";
	Иначе 
		Элементы.ДекорацияСписокВыбранныхГрупп.Заголовок = "" + МассивНаименований[0] + "; " + МассивНаименований[1] + "...";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РекурсивноЗаполнитьСтрокиДерева(Строки, СтрокаДеревоТоваров)
	
	Если Строки.Количество() Тогда
		
		Для Каждого Стр Из Строки Цикл
			
			Если ТипЗнч(СтрокаДеревоТоваров) <> Тип("ДанныеФормыДерево") 
				И Стр.Характеристика = СтрокаДеревоТоваров.Характеристика
				И ЗначениеЗаполнено(СтрокаДеревоТоваров.Характеристика) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(СтрокаДеревоТоваров) <> Тип("ДанныеФормыДерево") И Стр.Номенклатура = СтрокаДеревоТоваров.Номенклатура
				И ЗначениеЗаполнено(Стр.Номенклатура)
				И НЕ ЗначениеЗаполнено(Стр.Характеристика) Тогда
				НоваяСтрокаДеревоТоваров = СтрокаДеревоТоваров;
			ИначеЕсли ТипЗнч(СтрокаДеревоТоваров) <> Тип("ДанныеФормыДерево") И Стр.Группа = СтрокаДеревоТоваров.Группа 
				И НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
				НоваяСтрокаДеревоТоваров = СтрокаДеревоТоваров;
			Иначе
				НоваяСтрокаДеревоТоваров = СтрокаДеревоТоваров.ПолучитьЭлементы().Добавить();
			КонецЕсли;
			
			//НоваяСтрокаДеревоТоваров = СтрокаДеревоТоваров.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДеревоТоваров, Стр);
			РекурсивноЗаполнитьСтрокиДерева(Стр.Строки, НоваяСтрокаДеревоТоваров);
			
			Если ЗначениеЗаполнено(Стр.Характеристика) Тогда
				НоваяСтрокаДеревоТоваров.Представление = Стр.Характеристика;
				НоваяСтрокаДеревоТоваров.НомерКартинки = 0;
				
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
				НоваяСтрокаДеревоТоваров.Представление = Стр.Номенклатура;
				НоваяСтрокаДеревоТоваров.НомерКартинки = ?(НоваяСтрокаДеревоТоваров.ПолучитьЭлементы().Количество() = 0, 0, 1);
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаДеревоТоваров.Представление = Стр.Группа;
			НоваяСтрокаДеревоТоваров.НомерКартинки = 24;
			Если Не ЗначениеЗаполнено(НоваяСтрокаДеревоТоваров.Представление) Тогда
				НоваяСтрокаДеревоТоваров.Представление = "<Без группы>";
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтборКатегорииИерархияПереключательПриИзмененииНаСервере()
	
	ОбновитьСписокВыбораНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСписокВыбранныхГруппНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДеревоВыбранныхТоваров.ПолучитьЭлементы().Количество() Тогда
		
		МассивИспользуемых = Новый Массив;
		Для Каждого СтрОписание Из Результат Цикл
			МассивИспользуемых.Добавить(СтрОписание.Идентификатор);
		КонецЦикла;
		
		МассивВыбранных = Новый Массив;
		МассивДляУдаления = Новый Массив;
		Для Каждого Стр Из ДеревоВыбранныхТоваров.ПолучитьЭлементы() Цикл
			Если МассивИспользуемых.Найти(Стр.Идентификатор) = Неопределено Тогда
				МассивДляУдаления.Добавить(Стр);
			КонецЕсли;
			
			МассивВыбранных.Добавить(Стр.Идентификатор);
			
		КонецЦикла;
		
		Для Каждого Стр Из МассивДляУдаления Цикл
			ДеревоВыбранныхТоваров.ПолучитьЭлементы().Удалить(Стр);
		КонецЦикла;
		
		Для Каждого СтрОписание Из Результат Цикл
			Если МассивВыбранных.Найти(СтрОписание.Идентификатор) = Неопределено Тогда
				НовСтр = ДеревоВыбранныхТоваров.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрОписание);
				НовСтр.НомерКартинки = 99;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Для Каждого СтрОписание Из Результат Цикл
			НовСтр = ДеревоВыбранныхТоваров.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтрОписание);
			НовСтр.НомерКартинки = 99;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновитьПредставлениеВыбранныхКатегорий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВВыгрузку(ВыбраннаяКатегория, МассивВыбранныхЭлементов)
	
	Для Каждого ТекущаяСтрока Из МассивВыбранныхЭлементов Цикл
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) Тогда
			НайтиДобавитьХарактеристику(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Характеристика, ВыбраннаяКатегория);
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			
			НайтиДобавитьНоменклатуру(ТекущаяСтрока.Номенклатура, ВыбраннаяКатегория);
			
			Для Каждого СтрокаХарактеристика Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
				НайтиДобавитьХарактеристику(СтрокаХарактеристика.Номенклатура, СтрокаХарактеристика.Характеристика, ВыбраннаяКатегория);
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		МассивСтрок = Новый Массив;
		РекурсивноПолучитьМассивСтрок(ТекущаяСтрока, МассивСтрок); 
		
		Для Каждого Стр Из МассивСтрок Цикл
			Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
				
				НайтиДобавитьНоменклатуру(Стр.Номенклатура, ВыбраннаяКатегория);
				
				Для Каждого СтрокаХарактеристика Из Стр.ПолучитьЭлементы() Цикл
					НайтиДобавитьХарактеристику(СтрокаХарактеристика.Номенклатура, СтрокаХарактеристика.Характеристика, ВыбраннаяКатегория);
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РекурсивноПолучитьМассивСтрок(СтрокаРодитель,МассивСтрок)
	
	Для Каждого ТекущаяСтрока Из СтрокаРодитель.ПолучитьЭлементы() Цикл
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			МассивСтрок.Добавить(ТекущаяСтрока);
		Иначе
			РекурсивноПолучитьМассивСтрок(ТекущаяСтрока,МассивСтрок);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиДобавитьНоменклатуру(Номенклатура, ВыбраннаяКатегория)
	
	СтрокаКатегория = Неопределено;
	ЕстьВхождение = Ложь;
	Для Каждого СтрКатегория Из ДеревоВыбранныхТоваров.ПолучитьЭлементы() Цикл
		
		Если СтрКатегория.Идентификатор <> ВыбраннаяКатегория Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКатегория = СтрКатегория;
		
		Для Каждого СтрНоменклатура Из СтрКатегория.ПолучитьЭлементы() Цикл
			
			Если СтрНоменклатура.Номенклатура = Номенклатура Тогда
				ЕстьВхождение = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьВхождение Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаКатегория = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаНоменклатуры = СтрокаКатегория.ПолучитьЭлементы().Добавить();
	СтрокаНоменклатуры.Идентификатор = ВыбраннаяКатегория;
	СтрокаНоменклатуры.Номенклатура = Номенклатура;
	СтрокаНоменклатуры.Наименование = Номенклатура;
	СтрокаНоменклатуры.НомерКартинки = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиДобавитьХарактеристику(Номенклатура, Характеристика, ВыбраннаяКатегория)
	
	СтрокаКатегория = Неопределено;
	СтрокаНоменклатуры = Неопределено;
	ЕстьВхождение = Ложь;
	Для Каждого СтрКатегория Из ДеревоВыбранныхТоваров.ПолучитьЭлементы() Цикл
		
		Если СтрКатегория.Идентификатор <> ВыбраннаяКатегория Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКатегория = СтрКатегория;
		
		Для Каждого СтрНоменклатура Из СтрКатегория.ПолучитьЭлементы() Цикл
			
			Если СтрНоменклатура.Номенклатура <> Номенклатура Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаНоменклатуры = СтрНоменклатура;
			
			Для Каждого СтрХарактеристика Из СтрНоменклатура.ПолучитьЭлементы() Цикл
				Если СтрХарактеристика.Характеристика = Характеристика Тогда
					ЕстьВхождение = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьВхождение Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаКатегория = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаНоменклатуры = Неопределено Тогда
		СтрокаНоменклатуры = СтрокаКатегория.ПолучитьЭлементы().Добавить();
		СтрокаНоменклатуры.Идентификатор = ВыбраннаяКатегория;
		СтрокаНоменклатуры.Номенклатура = Номенклатура;
		СтрокаНоменклатуры.Наименование = Номенклатура;
		СтрокаНоменклатуры.НомерКартинки = 1;
	КонецЕсли;
	
	СтрокаНоменклатуры.НомерКартинки = 1;
	СтрокаХарактеристика = СтрокаНоменклатуры.ПолучитьЭлементы().Добавить();
	СтрокаХарактеристика.Идентификатор = ВыбраннаяКатегория;
	СтрокаХарактеристика.Номенклатура = Номенклатура;
	СтрокаХарактеристика.Характеристика = Характеристика;
	СтрокаХарактеристика.Наименование = Характеристика;
	СтрокаХарактеристика.НомерКартинки = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзВыгрузки(МассивВыбранныхЭлементов)
	
	Для Каждого ТекущаяСтрока Из МассивВыбранныхЭлементов Цикл
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) 
			Или ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			
			СтрокаРодителя = ТекущаяСтрока.ПолучитьРодителя();
			СтрокаРодителя.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		Иначе
			ДеревоВыбранныхТоваров.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()

	НЗ = РегистрыСведений.НоменклатураХарактеристикДляМагазинаСоцСетей.СоздатьНаборЗаписей();
	НЗ.Отбор.УзелИнформационнойБазы.Установить(СсылкаНаУзелОбмена);
	
	Сортировка = 0;
	
	Для Каждого СтрКатегория Из ДеревоВыбранныхТоваров.ПолучитьЭлементы() Цикл
		Для Каждого СтрНоменклатура Из СтрКатегория.ПолучитьЭлементы() Цикл
			
			Если СтрНоменклатура.ПолучитьЭлементы().Количество() Тогда
				
				Для Каждого СтрХарактеристика Из СтрНоменклатура.ПолучитьЭлементы() Цикл
					
					НовЗап = НЗ.Добавить();
					НовЗап.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
					НовЗап.Номенклатура = СтрХарактеристика.Номенклатура;
					НовЗап.Характеристика = СтрХарактеристика.Характеристика;
					НовЗап.Идентификатор = СтрКатегория.Идентификатор;
					НовЗап.Наименование = СтрКатегория.Наименование;
					НовЗап.Сортировка = Сортировка;
					
					Сортировка = Сортировка + 1;
				КонецЦикла;
				
			Иначе
				
				НовЗап = НЗ.Добавить();
				НовЗап.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
				НовЗап.Номенклатура = СтрНоменклатура.Номенклатура;
				НовЗап.Идентификатор = СтрКатегория.Идентификатор;
				НовЗап.Наименование = СтрКатегория.Наименование;
				НовЗап.Сортировка = Сортировка;
				
				Сортировка = Сортировка + 1;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

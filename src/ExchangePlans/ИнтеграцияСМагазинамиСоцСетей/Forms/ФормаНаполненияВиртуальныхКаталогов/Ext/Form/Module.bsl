
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СсылкаНаУзелОбмена = Параметры.СсылкаНаУзелОбмена;
	
	ОбновитьВыбранныеНаСервере();
	ОбновитьВиртуальныеКаталогиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовЭлементовФормы 

&НаКлиенте
Процедура Перенести1ВВыгрузку(Команда)
	
	ВыделенныеСтроки = Элементы.ДеревоВыбранныхТоваров.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоВиртуальныхКаталогов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите хотя бы 1 категорию Магазина ВКонтакте для выгрузки!",,"ДекорацияСписокВыбранныхГрупп","ЭтаФорма");
		Возврат;
	КонецЕсли;
	
	ВыбраннаяКатегория = ТекущиеДанные.Идентификатор;
	
	МассивВыбранныхЭлементов = Новый Массив;
	Для Каждого СтрИндекс Из ВыделенныеСтроки Цикл 
		ТекущаяСтрока = ДеревоВыбранныхТоваров.НайтиПоИдентификатору(СтрИндекс);
		МассивВыбранныхЭлементов.Добавить(ТекущаяСтрока);
	КонецЦикла;
	
	ПеренестиВВыгрузку(ВыбраннаяКатегория, МассивВыбранныхЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить1ИзВыгрузки(Команда)
	
	ВыделенныеСтроки = Элементы.ДеревоВиртуальныхКаталогов.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивВыбранныхЭлементов = Новый Массив;
	Для Каждого СтрИндекс Из ВыделенныеСтроки Цикл
		ТекущаяСтрока = ДеревоВиртуальныхКаталогов.НайтиПоИдентификатору(СтрИндекс);
		МассивВыбранныхЭлементов.Добавить(ТекущаяСтрока);
	КонецЦикла;
	
	УдалитьИзВыгрузки(МассивВыбранныхЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаСервере();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборки(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПодборкиЗавершение", ЭтаФорма);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Владелец", СсылкаНаУзелОбмена);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Форма.ФормаСписка",ПараметрыФормы,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	МассивКаталогов = ПолучитьМассивИспользуемыхКаталогов(СсылкаНаУзелОбмена);
	
	Если ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Количество() Тогда
		
		МассивИспользуемых = Новый Массив;
		Для Каждого СтрОписание Из МассивКаталогов Цикл
			МассивИспользуемых.Добавить(СтрОписание.Идентификатор);
		КонецЦикла;
		
		МассивВыбранных = Новый Массив;
		МассивДляУдаления = Новый Массив;
		Для Каждого Стр Из ДеревоВиртуальныхКаталогов.ПолучитьЭлементы() Цикл
			Если МассивИспользуемых.Найти(Стр.Идентификатор) = Неопределено Тогда
				МассивДляУдаления.Добавить(Стр);
			КонецЕсли;
			
			МассивВыбранных.Добавить(Стр.Идентификатор);
			
		КонецЦикла;
		
		Для Каждого Стр Из МассивДляУдаления Цикл
			ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Удалить(Стр);
		КонецЦикла;
		
		Для Каждого СтрОписание Из МассивКаталогов Цикл
			Если МассивВыбранных.Найти(СтрОписание.Идентификатор) = Неопределено Тогда
				НовСтр = ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрОписание);
				НовСтр.НомерКартинки = 99;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Для Каждого СтрОписание Из МассивКаталогов Цикл
			НовСтр = ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтрОписание);
			НовСтр.НомерКартинки = 99;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВиртуальныхКаталоговПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле) 
	
	СтандартнаяОбработка = Ложь;
	
	Если Строка = Неопределено Тогда
		
		КоличествоКатегорий = ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Количество();
		
		Если КоличествоКатегорий = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите хотя бы 1 категорию Магазина ВКонтакте для выгрузки!",,"ДекорацияСписокВыбранныхГрупп","ЭтаФорма");
			Возврат;
		Иначе
			ТекущаяСтрока = ДеревоВиртуальныхКаталогов.ПолучитьЭлементы()[КоличествоКатегорий-1];
		КонецЕсли;
		
	Иначе
		ТекущаяСтрока = ДеревоВиртуальныхКаталогов.НайтиПоИдентификатору(Строка);
	КонецЕсли;
	
	ПеренестиВВыгрузку(ТекущаяСтрока.Идентификатор, ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВиртуальныхКаталоговПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВиртуальныхКаталоговНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекущиеДанные = Элементы.ДеревоВиртуальныхКаталогов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Выполнение = Ложь;
	ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите хотя бы 1 подборку Магазина ВКонтакте для выгрузки!");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВыбранныеНаСервере()
	
	ДеревоВыбранныхТоваров.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""123456"" КАК Идентификатор,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Сортировка КАК Сортировка,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.Характеристика КАК Характеристика,
	|	""Товары к выгрузке"" КАК Наименование
	|ИЗ
	|	РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетей КАК НоменклатураХарактеристикДляМагазинаСоцСетей
	|ГДЕ
	|	НоменклатураХарактеристикДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка
	|ИТОГИ
	|	МАКСИМУМ(Наименование)
	|ПО
	|	Идентификатор,
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписиКатегории = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДетальныеЗаписиКатегории.Следующий() Цикл
		
		СтрокаКатегория = ДеревоВыбранныхТоваров.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКатегория, ВыборкаДетальныеЗаписиКатегории);
		СтрокаКатегория.Наименование = ВыборкаДетальныеЗаписиКатегории.Наименование;
		СтрокаКатегория.НомерКартинки = 99;
		
		ВыборкаДетальныеЗаписиНоменклатура = ВыборкаДетальныеЗаписиКатегории.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетальныеЗаписиНоменклатура.Следующий() Цикл
			
			СтрокаНоменклатура = СтрокаКатегория.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ВыборкаДетальныеЗаписиНоменклатура);
			СтрокаНоменклатура.Наименование = ВыборкаДетальныеЗаписиНоменклатура.Номенклатура;
			СтрокаНоменклатура.НомерКартинки = 0;
			
			ВыборкаДетальныеЗаписиХарактеристика = ВыборкаДетальныеЗаписиНоменклатура.Выбрать();
			Пока ВыборкаДетальныеЗаписиХарактеристика.Следующий() Цикл
				
				Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписиХарактеристика.Характеристика) Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаХарактеристика = СтрокаНоменклатура.ПолучитьЭлементы().Добавить(); 
				ЗаполнитьЗначенияСвойств(СтрокаХарактеристика, ВыборкаДетальныеЗаписиХарактеристика);
				СтрокаХарактеристика.Наименование = ВыборкаДетальныеЗаписиХарактеристика.Характеристика;
				СтрокаХарактеристика.НомерКартинки = 0;
				СтрокаНоменклатура.НомерКартинки = 1;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВиртуальныеКаталогиНаСервере()
	
	ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка КАК Идентификатор,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Номенклатура КАК Номенклатура,
	|	НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.Характеристика КАК Характеристика,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Наименование КАК Наименование,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ЭтоОсновной КАК ЭтоОсновной,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ЭтоСкрытый КАК ЭтоСкрытый
	|ИЗ
	|	Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетей КАК ВиртуальныеКаталогиТоваровМагазиновСоцСетей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги КАК НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги
	|		ПО (НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.ВиртуальныйКаталог = ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка)
	|ГДЕ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = &УзелИнформационнойБазы
	|	И НЕ ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоОсновной УБЫВ,
	|	ЭтоСкрытый,
	|	Наименование,
	|	Номенклатура,
	|	Характеристика
	|ИТОГИ
	|	МАКСИМУМ(Наименование),
	|	МАКСИМУМ(ЭтоОсновной),
	|	МАКСИМУМ(ЭтоСкрытый)
	|ПО
	|	Идентификатор,
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("УзелИнформационнойБазы", СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписиКатегории = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДетальныеЗаписиКатегории.Следующий() Цикл
		
		СтрокаКатегория = ДеревоВиртуальныхКаталогов.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКатегория, ВыборкаДетальныеЗаписиКатегории);
		СтрокаКатегория.Наименование = ВыборкаДетальныеЗаписиКатегории.Наименование;
		СтрокаКатегория.НомерКартинки = 99;
		
		ВыборкаДетальныеЗаписиНоменклатура = ВыборкаДетальныеЗаписиКатегории.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетальныеЗаписиНоменклатура.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписиНоменклатура.Номенклатура) Тогда
				Прервать;
			КонецЕсли;
			
			СтрокаНоменклатура = СтрокаКатегория.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ВыборкаДетальныеЗаписиНоменклатура);
			СтрокаНоменклатура.Наименование = ВыборкаДетальныеЗаписиНоменклатура.Номенклатура;
			СтрокаНоменклатура.НомерКартинки = 0;
			СтрокаНоменклатура.ЭтоОсновной = Ложь;
			СтрокаНоменклатура.ЭтоСкрытый = ВыборкаДетальныеЗаписиНоменклатура.ЭтоСкрытый;
			
			ВыборкаДетальныеЗаписиХарактеристика = ВыборкаДетальныеЗаписиНоменклатура.Выбрать();
			Пока ВыборкаДетальныеЗаписиХарактеристика.Следующий() Цикл
				
				Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписиХарактеристика.Характеристика) Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаХарактеристика = СтрокаНоменклатура.ПолучитьЭлементы().Добавить(); 
				ЗаполнитьЗначенияСвойств(СтрокаХарактеристика, ВыборкаДетальныеЗаписиХарактеристика);
				СтрокаХарактеристика.Наименование = ВыборкаДетальныеЗаписиХарактеристика.Характеристика;
				СтрокаХарактеристика.НомерКартинки = 0;
				СтрокаХарактеристика.ЭтоОсновной = Ложь;
				СтрокаХарактеристика.ЭтоСкрытый = ВыборкаДетальныеЗаписиХарактеристика.ЭтоСкрытый;
				СтрокаНоменклатура.НомерКартинки = 1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВВыгрузку(ВыбраннаяКатегория, МассивВыбранныхЭлементов)
	
	Для Каждого ТекущаяСтрока Из МассивВыбранныхЭлементов Цикл
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) Тогда
			НайтиДобавитьХарактеристику(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Характеристика, ВыбраннаяКатегория);
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			
			НайтиДобавитьНоменклатуру(ТекущаяСтрока.Номенклатура, ВыбраннаяКатегория);
			
			Для Каждого СтрокаХарактеристика Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
				НайтиДобавитьХарактеристику(СтрокаХарактеристика.Номенклатура, СтрокаХарактеристика.Характеристика, ВыбраннаяКатегория);
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		МассивСтрок = Новый Массив;
		РекурсивноПолучитьМассивСтрок(ТекущаяСтрока, МассивСтрок); 
		
		Для Каждого Стр Из МассивСтрок Цикл
			Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
				
				НайтиДобавитьНоменклатуру(Стр.Номенклатура, ВыбраннаяКатегория);
				
				Для Каждого СтрокаХарактеристика Из Стр.ПолучитьЭлементы() Цикл
					НайтиДобавитьХарактеристику(СтрокаХарактеристика.Номенклатура, СтрокаХарактеристика.Характеристика, ВыбраннаяКатегория);
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РекурсивноПолучитьМассивСтрок(СтрокаРодитель,МассивСтрок)
	
	Для Каждого ТекущаяСтрока Из СтрокаРодитель.ПолучитьЭлементы() Цикл
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			МассивСтрок.Добавить(ТекущаяСтрока);
		Иначе
			РекурсивноПолучитьМассивСтрок(ТекущаяСтрока,МассивСтрок);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиДобавитьНоменклатуру(Номенклатура, ВыбраннаяКатегория)
	
	СтрокаКатегория = Неопределено;
	ЕстьВхождение = Ложь;
	Для Каждого СтрКатегория Из ДеревоВиртуальныхКаталогов.ПолучитьЭлементы() Цикл
		
		Если СтрКатегория.Идентификатор <> ВыбраннаяКатегория Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКатегория = СтрКатегория;
		
		Для Каждого СтрНоменклатура Из СтрКатегория.ПолучитьЭлементы() Цикл
			
			Если СтрНоменклатура.Номенклатура = Номенклатура Тогда
				ЕстьВхождение = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьВхождение Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаКатегория = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаНоменклатуры = СтрокаКатегория.ПолучитьЭлементы().Добавить();
	СтрокаНоменклатуры.Идентификатор = ВыбраннаяКатегория;
	СтрокаНоменклатуры.Номенклатура = Номенклатура;
	СтрокаНоменклатуры.Наименование = Номенклатура;
	СтрокаНоменклатуры.НомерКартинки = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиДобавитьХарактеристику(Номенклатура, Характеристика, ВыбраннаяКатегория)
	
	СтрокаКатегория = Неопределено;
	СтрокаНоменклатуры = Неопределено;
	ЕстьВхождение = Ложь;
	Для Каждого СтрКатегория Из ДеревоВиртуальныхКаталогов.ПолучитьЭлементы() Цикл
		
		Если СтрКатегория.Идентификатор <> ВыбраннаяКатегория Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКатегория = СтрКатегория;
		
		Для Каждого СтрНоменклатура Из СтрКатегория.ПолучитьЭлементы() Цикл
			
			Если СтрНоменклатура.Номенклатура <> Номенклатура Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаНоменклатуры = СтрНоменклатура;
			
			Для Каждого СтрХарактеристика Из СтрНоменклатура.ПолучитьЭлементы() Цикл
				Если СтрХарактеристика.Характеристика = Характеристика Тогда
					ЕстьВхождение = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если ЕстьВхождение Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаКатегория = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаНоменклатуры = Неопределено Тогда
		СтрокаНоменклатуры = СтрокаКатегория.ПолучитьЭлементы().Добавить();
		СтрокаНоменклатуры.Идентификатор = ВыбраннаяКатегория;
		СтрокаНоменклатуры.Номенклатура = Номенклатура;
		СтрокаНоменклатуры.Наименование = Номенклатура;
		СтрокаНоменклатуры.НомерКартинки = 1;
	КонецЕсли;
	
	СтрокаНоменклатуры.НомерКартинки = 1;
	СтрокаХарактеристика = СтрокаНоменклатуры.ПолучитьЭлементы().Добавить();
	СтрокаХарактеристика.Идентификатор = ВыбраннаяКатегория;
	СтрокаХарактеристика.Номенклатура = Номенклатура;
	СтрокаХарактеристика.Характеристика = Характеристика;
	СтрокаХарактеристика.Наименование = Характеристика;
	СтрокаХарактеристика.НомерКартинки = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзВыгрузки(МассивВыбранныхЭлементов)
	
	Для Каждого ТекущаяСтрока Из МассивВыбранныхЭлементов Цикл
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) 
			Или ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			
			СтрокаРодителя = ТекущаяСтрока.ПолучитьРодителя();
			СтрокаРодителя.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		Иначе
			ТекущаяСтрока.ПолучитьЭлементы().Очистить();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()

	НЗ = РегистрыСведений.НоменклатураХарактеристикДляМагазинаСоцСетейВиртуальныеКаталоги.СоздатьНаборЗаписей();
	НЗ.Отбор.УзелИнформационнойБазы.Установить(СсылкаНаУзелОбмена);
	
	Сортировка = 0;
	
	Для Каждого СтрКатегория Из ДеревоВиртуальныхКаталогов.ПолучитьЭлементы() Цикл
		Для Каждого СтрНоменклатура Из СтрКатегория.ПолучитьЭлементы() Цикл
			
			Если СтрНоменклатура.ПолучитьЭлементы().Количество() Тогда
				
				Для Каждого СтрХарактеристика Из СтрНоменклатура.ПолучитьЭлементы() Цикл
					
					НовЗап = НЗ.Добавить();
					НовЗап.ВиртуальныйКаталог = СтрКатегория.Идентификатор;
					НовЗап.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
					НовЗап.Номенклатура = СтрХарактеристика.Номенклатура;
					НовЗап.Характеристика = СтрХарактеристика.Характеристика;
					
				КонецЦикла;
				
			Иначе
				
				НовЗап = НЗ.Добавить();
				НовЗап.ВиртуальныйКаталог = СтрКатегория.Идентификатор;
				НовЗап.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
				НовЗап.Номенклатура = СтрНоменклатура.Номенклатура;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
функция ПолучитьМассивИспользуемыхКаталогов(СсылкаНаУзелОбмена)
	
	МассивИспользуемыхВМагазине = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Ссылка КАК Ссылка,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Наименование КАК Наименование,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ЭтоОсновной КАК ЭтоОсновной,
	|	ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ЭтоСкрытый КАК ЭтоСкрытый
	|ИЗ
	|	Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетей КАК ВиртуальныеКаталогиТоваровМагазиновСоцСетей
	|ГДЕ
	|	НЕ ВиртуальныеКаталогиТоваровМагазиновСоцСетей.ПометкаУдаления
	|	И ВиртуальныеКаталогиТоваровМагазиновСоцСетей.Владелец = &СсылкаНаУзелОбмена";
	
	Запрос.УстановитьПараметр("СсылкаНаУзелОбмена", СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Описание = Новый Структура;
		Описание.Вставить("Идентификатор" , ВыборкаДетальныеЗаписи.Ссылка);
		Описание.Вставить("Наименование" , ВыборкаДетальныеЗаписи.Наименование);
		Описание.Вставить("ЭтоОсновной" , ВыборкаДетальныеЗаписи.ЭтоОсновной);
		Описание.Вставить("ЭтоСкрытый" , ВыборкаДетальныеЗаписи.ЭтоСкрытый);
		МассивИспользуемыхВМагазине.Добавить(Описание);
	КонецЦикла;
	
	Возврат МассивИспользуемыхВМагазине;
	
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗапуститьОперациюВФоне(ПолныйОбмен);
	Элементы.СтраницыТело.ТекущаяСтраница = Элементы.СтраницаХодВыполнения;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьРезультатВыполненияЗадания(Результат)
	
	Элементы.СтраницыТело.ТекущаяСтраница = Элементы.СтраницаРезультатВыполнения;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		Если СтрНайти(СтрокаЛогЗагрузкиССайта, "Капча") <> 0
			Или СтрНайти(СтрокаЛогЗагрузкиССайта, "Ошибка ввода капчи") <> 0 Тогда
			
			Закрыть("Капча");
			
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПредставлениеОшибки = Результат.КраткоеПредставлениеОшибки + " " + Результат.ПодробноеПредставлениеОшибки; 
		
		СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + Символы.ПС + ПредставлениеОшибки;
		
		Если СтрНайти(ПредставлениеОшибки, "Captcha needed") = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ПредставлениеОшибки);
		Иначе
			Закрыть("Капча");
			Оповестить("НеКорректныйВводКапчи");
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Отменено" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Отменено пользователем");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьОперациюВФонеСервер(ПолныйОбмен = Ложь)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("СсылкаНаУзелОбмена", СсылкаНаУзелОбмена);
	ПараметрыЗадания.Вставить("ЭтоПолныйОбмен", ПолныйОбмен);
	
	ИмяФоновогоЗадания = "ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ВыполнитьОбменИзФормы";
	
	Если ТребуетсяРучноеПодтверждение Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.СохраненнаяОперацияСтрокой КАК СохраненнаяОперацияСтрокой,
		|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.ПодтверждениеОперацииСтрокой КАК ПодтверждениеОперацииСтрокой,
		|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.ИмяОперации КАК ИмяОперации
		|ИЗ
		|	РегистрСведений.ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей КАК ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей
		|ГДЕ
		|	ПоследняяУспешнаяОперацияОбменаДляМагазинаСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы";
		
		Запрос.УстановитьПараметр("УзелИнформационнойБазы", СсылкаНаУзелОбмена);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			ВыборкаДетальныеЗаписи.Следующий();
			
			ПараметрыЗадания.Вставить("СтрокаЗначениеСКартинки", СтрокаЗначениеСКартинки);
			
			ИмяФоновогоЗадания = "ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПродолжитьОтложеннуюОперациюВФоне";
			
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеФоновойОперации(ПолныйОбмен);
	ПараметрыВыполнения.ЗапуститьНеВФоне = Ложь;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Попытка
		Возврат ДлительныеОперации.ВыполнитьВФоне(
		ИмяФоновогоЗадания,
		ПараметрыЗадания,
		ПараметрыВыполнения);
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение ПредставлениеОшибки;
	КонецПопытки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НаименованиеФоновойОперации(ПолныйОбмен = Ложь) Экспорт
	
	#Если Клиент Тогда
		КодОсновногоЯзыка = ОбщегоНазначенияКлиент.КодОсновногоЯзыка();
	#Иначе
		КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	#КонецЕсли 
	
	Если ПолныйОбмен Тогда
		СтрТекст = "ru = 'Интеграция ВКонтакте.Первичная загрузка'";
	Иначе
		СтрТекст = "ru = 'Интеграция ВКонтакте.Первичная загрузка'";
	КонецЕсли;
	
	Возврат НСтр(СтрТекст, КодОсновногоЯзыка);
	
КонецФункции

&НаКлиенте
Процедура ЗапуститьОперациюВФоне(ПолныйОбмен = Ложь)
	
	ДлительнаяОперация = ЗапуститьОперациюВФонеСервер(ПолныйОбмен);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ОбработатьРезультатВыполненияЗадания(ДлительнаяОперация);
		Возврат;
	КонецЕсли;
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ВыполнитьДействиеПрогрессВыполнения", ЭтотОбъект);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьДействиеЗавершение", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НаименованиеФоновойОперации(ПолныйОбмен);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда  // отменено пользователем
		Возврат;
	КонецЕсли;
	
	ОбработатьРезультатВыполненияЗадания(Результат);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьДействиеПрогрессВыполнения(Прогресс, ДополнительныеПараметры) Экспорт
	
	Если Прогресс.Сообщения <> Неопределено Тогда
		Для каждого СообщениеПользователю Из Прогресс.Сообщения Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс.Прогресс) = Тип("Структура") Тогда
		
		ПроцентПрогресса = Прогресс.Прогресс.Процент;
		СтрокаЛогЗагрузкиССайта = Прогресс.Прогресс.Текст;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНаУзелОбмена = Параметры.СсылкаНаУзелОбмена;
	ПолныйОбмен = Параметры.ПолныйОбмен;
	ТребуетсяРучноеПодтверждение = Параметры.ТребуетсяРучноеПодтверждение;
	СтрокаЗначениеСКартинки = Параметры.СтрокаЗначениеСКартинки;
КонецПроцедуры

#КонецОбласти

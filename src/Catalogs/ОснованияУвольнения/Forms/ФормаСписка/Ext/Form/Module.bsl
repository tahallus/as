#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РежимВыбора Тогда
		
		Элементы.Список.РежимВыбора = Истина;
		
	КонецЕсли;
	
	ПредставленияОснованийУвольненияПриСозданииНаСервереФормыСписка(ЭтотОбъект, "Список", "ОснованияУвольнения");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВосстановитьНачальныеЗначения(Команда)
	
	ВосстановитьНачальныеЗначенияСлужебный(ЭтаФорма, "Справочник.ОснованияУвольнения");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПредставленияОснованийУвольненияПриСозданииНаСервереФормыСписка(Форма, ИмяСписка, ИмяТаблицы) Экспорт
	
	Если ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СправочникОснованияУвольнения.Ссылка КАК Ссылка,
		|	СправочникОснованияУвольнения.ПометкаУдаления КАК ПометкаУдаления,
		|	ВЫБОР
		|		КОГДА ПредставленияОснованийУвольнения.Использовать
		|			ТОГДА ПредставленияОснованийУвольнения.Наименование
		|		ИНАЧЕ СправочникОснованияУвольнения.Наименование
		|	КОНЕЦ КАК Наименование,
		|	ВЫБОР
		|		КОГДА ПредставленияОснованийУвольнения.Использовать
		|			ТОГДА ПредставленияОснованийУвольнения.ТекстОснования
		|		ИНАЧЕ СправочникОснованияУвольнения.ТекстОснования
		|	КОНЕЦ КАК ТекстОснования
		|ИЗ
		|	#ОснованияУвольнения КАК СправочникОснованияУвольнения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредставленияОснованийУвольнения КАК ПредставленияОснованийУвольнения
		|		ПО (ПредставленияОснованийУвольнения.Объект = СправочникОснованияУвольнения.Ссылка)";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СправочникОснованияУвольнения.Ссылка КАК Ссылка,
		|	СправочникОснованияУвольнения.ПометкаУдаления КАК ПометкаУдаления,
		|	СправочникОснованияУвольнения.Наименование КАК Наименование,
		|	СправочникОснованияУвольнения.ТекстОснования КАК ТекстОснования
		|ИЗ
		|	#ОснованияУвольнения КАК СправочникОснованияУвольнения";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОснованияУвольнения", "Справочник." + ИмяТаблицы);
	
	Форма[ИмяСписка].ТекстЗапроса = ТекстЗапроса;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНачальныеЗначенияСлужебный(Форма, ИменаОбъектовМетаданных, ОповещениеЗавершения = Неопределено, ТекстВопроса = "")
	Контекст = Новый Структура("Форма, ИменаОбъектовМетаданных, ОповещениеЗавершения", Форма, ИменаОбъектовМетаданных, ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ВосстановитьНачальныеЗначенияПослеОтветаНаВопрос", ЭтотОбъект, Контекст);
	
	Если ТекстВопроса = "" Тогда
		Если ИменаОбъектовМетаданных = "" Тогда
			ТекстВопроса = НСтр("ru='При восстановлении начальных значений, в справочниках будет произведен поиск и пометка на удаление
				|задвоенных элементов, замена ссылок помеченных на удаление элементов, создание недостающих элементов, выполнена очистка
				|записей регистров сведений и произведено заполнение регистров заново.
				|
				|Восстановить начальные значения?'");
		ИначеЕсли СтрНачинаетсяС(ИменаОбъектовМетаданных, "Справочник.") Тогда
			ТекстВопроса = НСтр("ru='При восстановлении начальных значений будет произведен поиск и пометка на удаление
				|задвоенных элементов, замена ссылок помеченных на удаление элементов, создание недостающих элементов.
				|
				|Восстановить начальные значения?'");
		ИначеЕсли СтрНачинаетсяС(ИменаОбъектовМетаданных, "РегистрСведений.") Тогда
			ТекстВопроса = НСтр("ru='При восстановлении начальных значений будет выполнена очистка записей регистра
				|и произведено заполнение регистра заново.
				|
				|Восстановить начальные значения?'");
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

#КонецОбласти


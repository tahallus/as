#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Организация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Данные.Организация) Тогда
		Представление = Строка(Данные.Организация);
	Иначе
		Представление = "<для всех организаций>";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Получает настройки текущего пользователя для актуализации токенов авторизации.
// 
// Возвращаемое значение:
//  Массив - из Структура:
//   * Организация - ОпределяемыйТип.Организация - Организация.
//   * ВремяОповещения - Число - время в секундах, за которое необходимо оповестить ответственного об окончании срока действия токена.
//
Функция НастройкиОтветственногоЗаАктуализациюТокеновАвторизации() Экспорт
	
	Настройки = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ответственный", Пользователи.АвторизованныйПользователь());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ответственные.Ссылка.Организация КАК Организация,
	|	МАКСИМУМ(Ответственные.ВремяВСекундах) КАК ВремяВСекундах
	|ИЗ
	|	Справочник.ОтветственныеЗаАктуализациюТокеновАвторизацииИСМП.Ответственные КАК Ответственные
	|ГДЕ
	|	Ответственные.Ответственный = &Ответственный
	|	И НЕ Ответственные.Ссылка.ПометкаУдаления
	|СГРУППИРОВАТЬ ПО
	|	Ответственные.Ссылка.Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат Настройки;
	КонецЕсли;
	
	ВремяОповещенияПоВсемОрганизациям = 0;
	
	ОрганизацииПоОтветственному = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Организация) Тогда
			ВремяОповещенияПоВсемОрганизациям = Выборка.ВремяВСекундах;
			Продолжить;
		КонецЕсли;
		ОрганизацииПоОтветственному.Вставить(Выборка.Организация, Выборка.ВремяВСекундах);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Организации = ИнтеграцияИСМП.ДоступныеОрганизации();
	
	УстановитьПривилегированныйРежим(Истина);
	
	СертификатыДляПодписанияНаСервере = ИнтерфейсАвторизацииИСМПСлужебный.СертификатыДляПодписанияНаСервере();
	
	Для Каждого ЭлементСписка Из Организации Цикл
		Организация = ЭлементСписка.Значение;
		Если СертификатыДляПодписанияНаСервере <> Неопределено
			И СертификатыДляПодписанияНаСервере.Сертификаты.Найти(Организация, "Организация") <> Неопределено Тогда
			ВремяОповещения = 0;
		ИначеЕсли ОрганизацииПоОтветственному[Организация] = Неопределено Тогда
			ВремяОповещения = ВремяОповещенияПоВсемОрганизациям;
		Иначе
			ВремяОповещения = ОрганизацииПоОтветственному[Организация];
		КонецЕсли;
		Настройка = Новый Структура;
		Настройка.Вставить("Организация",     Организация);
		Настройка.Вставить("ВремяОповещения", ВремяОповещения);
		Настройки.Добавить(Настройка);
	КонецЦикла;
	
	Возврат Настройки;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем ЗаписьНового;

#КонецОбласти 

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	// При записи первой спецификации по связке номенклатура-характеристика устанавливаем ее основной
	Если НЕ ПометкаУдаления И НЕ Недействителен И ЗаписьНового = Истина Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	КомплектацииНоменклатуры.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КомплектацииНоменклатуры КАК КомплектацииНоменклатуры
		|ГДЕ
		|	КомплектацииНоменклатуры.Ссылка <> &Ссылка
		|	И КомплектацииНоменклатуры.Владелец = &Владелец
		|	И КомплектацииНоменклатуры.Характеристика = &Характеристика";
		Если Запрос.Выполнить().Пустой() Тогда
			Запись = РегистрыСведений.КомплектацииПоУмолчанию.СоздатьМенеджерЗаписи();
			Запись.Номенклатура = Владелец;
			Запись.Характеристика = Характеристика;
			Запись.Комплектация = Ссылка;
			Запись.Записать(Истина);
		КонецЕсли; 
	КонецЕсли;
	
	// Удаление старых данных об основной спецификации при изменении номенклатуры / характеристики спецификации
	Если ЗаписьНового <> Истина Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КомплектацииПоУмолчанию.Номенклатура КАК Номенклатура,
		|	КомплектацииПоУмолчанию.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.КомплектацииПоУмолчанию КАК КомплектацииПоУмолчанию
		|ГДЕ
		|	КомплектацииПоУмолчанию.Комплектация = &Ссылка
		|	И (КомплектацииПоУмолчанию.Номенклатура <> &Владелец
		|			ИЛИ КомплектацииПоУмолчанию.Характеристика <> &Характеристика
		|			ИЛИ КомплектацииПоУмолчанию.Комплектация.Недействителен)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.КомплектацииПоУмолчанию.СоздатьМенеджерЗаписи();
			Запись.Номенклатура = Выборка.Номенклатура;
			Запись.Характеристика = Выборка.Характеристика;
			Запись.Удалить();	
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Снятие признака основной для помеченных на удаление и недействительных спецификаций
	Если (ПометкаУдаления ИЛИ Недействителен) И НЕ Ссылка.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КомплектацииПоУмолчанию.Комплектация КАК Комплектация,
		|	КомплектацииПоУмолчанию.Номенклатура КАК Номенклатура,
		|	КомплектацииПоУмолчанию.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.КомплектацииПоУмолчанию КАК КомплектацииПоУмолчанию
		|ГДЕ
		|	КомплектацииПоУмолчанию.Комплектация = &Ссылка
		|	И НЕ КомплектацииПоУмолчанию.Комплектация.ПометкаУдаления";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Попытка
			Пока Выборка.Следующий() Цикл
				Запись = РегистрыСведений.СпецификацииПоУмолчанию.СоздатьМенеджерЗаписи();
				Запись.Номенклатура = Выборка.Номенклатура;
				Запись.Характеристика = Выборка.Характеристика;
				Запись.Спецификация = Выборка.Спецификация;
				Запись.Удалить();
			КонецЦикла;
			Если Выборка.Количество() > 0 Тогда
				ТекстСообщения = НСтр("ru = 'Комплектация %1 недействительна или помечена на удаление. Признак <основная> снят.'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Наименование);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли; 
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось снять признак основной для комплектации %1.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Наименование);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;

	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьНового = ЭтоНовый();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Состав.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен состав комплектации'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Состав", , Отказ);
	КонецЕсли; 
	
	// Проверка зацикливания
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Номенклатура", Владелец);
	СтруктураОтбора.Вставить("Характеристика", Характеристика);
	НайденныеСтроки = Состав.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаТабличнойЧасти = НайденныеСтроки[0];
		ТекстСообщения = НСтр("ru='В состав комплектации не может входить сам комплект.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
		ЭтотОбъект,
		ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Состав", СтрокаТабличнойЧасти.НомерСтроки, "Номенклатура"),
		,
		Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 


#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = УправлениеСвойствамиУНФ.ЗаполнитьДополнительныеПараметры(Объект, "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Список доступных статусов.
	УстановитьСписокСтатусовПартий();
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	Если Не Параметры.Ключ.Пустая() И Параметры.Свойство("ИспользоватьПартии") 
		Тогда
		ТолькоПросмотр = НЕ Параметры.ИспользоватьПартии;
		Элементы.СоздатьНовыйДопРеквизит.Доступность = Параметры.ИспользоватьПартии;
		Элементы.ФормаСкопировать.Доступность = Параметры.ИспользоватьПартии;
	КонецЕсли;
	
	Элементы.ФормаЗаписатьИЗакрыть.Доступность = Не ТолькоПросмотр;
	Элементы.ФормаЗаписать.Доступность = Не ТолькоПросмотр;
	Элементы.СоздатьНовыйДопРеквизит.Доступность = Не ТолькоПросмотр;
	
	// ВЕТИС
	ВЕТИСПриСозданииНаСервере();
	// Конец ВЕТИС
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры // ОбработкаОповещения()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтотОбъект, Отказ, ЗавершениеРаботы, Объект.Ссылка);
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	//
	// Тут описать другую логику, которая должна выполняться перед закрытием формы документа
	//
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик механизма "Свойства".
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры // ПередЗаписьюНаСервере()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
	Параметр = Новый Структура;
	Параметр.Вставить("Ссылка", Объект.Ссылка);
	Параметр.Вставить("Статус", Объект.Статус);
	Параметр.Вставить("ЭтоНовый", ЭтоНовый);
	Параметр.Вставить("Недействителен", Объект.Недействителен);
	Оповестить("ПартияЗаписана", Параметр, Объект.Владелец);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры // ОбработкаПроверкиЗаполненияНаСервере()

&НаКлиенте
Процедура НедействителенПриИзменении(Элемент)
	
	Если Не Объект.Недействителен Тогда Возврат КонецЕсли;
	
	Если ЭлементОсновной() Тогда
		ПараметрыОповещения = Новый Структура();
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияПредупрежденияНедействителен", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьПредупреждение(ОповещениеОЗакрытии, НСтр("ru = 'Для установки ""Недействителен"" необходимо снять свойство ""Основной"".'"), , НСтр("ru = 'Элемент выбран основным'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупрежденияНедействителен(Параметры) Экспорт
	Объект.Недействителен = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьНовыйДопРеквизит(Команда)
	ПараметрыФормы = ПараметрыСозданияДопРеквизита();
	ОткрытьФорму(
	"ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
	ПараметрыФормы,,,,,,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыОповещения = Новый Структура();
	ПараметрыОповещения.Вставить("Закрыть", Истина);
	
	Если ЗапретНаИзменениеОсновнойПартии() Тогда
		ЗадатьВопросПоУдалениюПризнакаОсновнойПартии(ПараметрыОповещения)
	Иначе
		
		Если Записать(ПараметрыОповещения) Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЭлемент(Команда)
	
	ПараметрыОповещения = Новый Структура();
	ПараметрыОповещения.Вставить("Закрыть", Ложь);
	
	Если ЗапретНаИзменениеОсновнойПартии() Тогда
		ЗадатьВопросПоУдалениюПризнакаОсновнойПартии(ПараметрыОповещения)
	Иначе
		Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДополнительныйРеквизит(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ПартииНоменклатуры"));
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Ложь);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта", ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЭлементОсновной()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииКонтрагентов.Партия КАК Партия
	|ИЗ
	|	РегистрСведений.ПартииКонтрагентов КАК ПартииКонтрагентов
	|ГДЕ
	|	ПартииКонтрагентов.Партия = &Ссылка";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
// Процедура формирует список доступных статусов партий в зависимости от ФО и переданных параметров.
//
Процедура УстановитьСписокСтатусовПартий()
	
	Список = Элементы.Статус.СписокВыбора;
	Список.Очистить();
	
	ИспользованиеСтатусов = Новый Соответствие;
	ИспользованиеСтатусов.Вставить(Перечисления.СтатусыПартий.СобственныеЗапасы, Истина);
	ИспользованиеСтатусов.Вставить(Перечисления.СтатусыПартий.ТоварыНаКомиссии, Константы.ФункциональнаяОпцияПриемТоваровНаКомиссию.Получить());
	ИспользованиеСтатусов.Вставить(Перечисления.СтатусыПартий.ДавальческоеСырье, Константы.ФункциональнаяОпцияПереработкаДавальческогоСырья.Получить());
	ИспользованиеСтатусов.Вставить(Перечисления.СтатусыПартий.ОтветственноеХранение, Константы.ФункциональнаяОпцияПриемЗапасовНаОтветХранение.Получить());
	
	ОграничениеСтатусаПартий = Неопределено;
	Если НЕ Параметры.ЗначенияЗаполнения.Свойство("МассивСтатусов", ОграничениеСтатусаПартий) Тогда
		Параметры.ДополнительныеПараметры.Свойство("ОграничениеСтатуса", ОграничениеСтатусаПартий);
	КонецЕсли;
	
	Если ОграничениеСтатусаПартий = Неопределено ИЛИ (ТипЗнч(ОграничениеСтатусаПартий) = Тип("Массив") И НЕ ОграничениеСтатусаПартий.Количество()) Тогда
		
		Для Каждого КлючИЗначение Из ИспользованиеСтатусов Цикл
			Если КлючИЗначение.Значение = Истина Тогда
				Список.Добавить(КлючИЗначение.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Если (ТипЗнч(ОграничениеСтатусаПартий) = Тип("Массив") Или ТипЗнч(ОграничениеСтатусаПартий) = Тип("ФиксированныйМассив")) 
			И ОграничениеСтатусаПартий.Количество() > 0 Тогда
			
			Для Каждого Тип Из ОграничениеСтатусаПартий Цикл
				Если ИспользованиеСтатусов.Получить(Тип) <> Ложь Тогда
					Список.Добавить(Тип);
					Объект.Статус = Тип;
				КонецЕсли;
			КонецЦикла;

			
		ИначеЕсли ТипЗнч(ОграничениеСтатусаПартий) = Тип("ПеречислениеСсылка.СтатусыПартий") Тогда
			
			Если ИспользованиеСтатусов.Получить(ОграничениеСтатусаПартий) <> Ложь Тогда
				Список.Добавить(ОграничениеСтатусаПартий);
				Объект.Статус = ОграничениеСтатусаПартий;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьСписокСтатусовПартий()

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры // Подключаемый_РедактироватьСоставСвойств()

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры // ОбновитьЭлементыДополнительныхРеквизитов()

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства
Функция ПараметрыСозданияДопРеквизита()
	
	ПараметрыФормы = Новый Структура;
	
	ТекущийНаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ПартииНоменклатуры;
	
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Ложь);
	
	Возврат ПараметрыФормы;
	
КонецФункции

// Проверяет является ли партия Основной и возможно ли изменять ее реквизиты
//
&НаСервере
Функция ЗапретНаИзменениеОсновнойПартии()
	
		Если Не Параметры.Ключ.Пустая() Тогда
			УстановленноеЗначениеПоУмолчаниюСУчетомИзменений = НоменклатураВДокументахСервер.ЗначенияПартийНоменклатурыПоУмолчанию(Объект.Владелец,Объект.Статус, Объект.ВладелецПартии);
		
			Если НоменклатураВДокументахСервер.ПартияУстановленаПоУмолчанию(Объект.Ссылка)
				И ((ЗначениеЗаполнено(УстановленноеЗначениеПоУмолчаниюСУчетомИзменений) И Не Объект.Ссылка = УстановленноеЗначениеПоУмолчаниюСУчетомИзменений)
				ИЛИ (Не Объект.Статус = Объект.Ссылка.Статус  ИЛИ Не Объект.ВладелецПартии = Объект.Ссылка.ВладелецПартии)) Тогда
				
				Возврат Истина;
				
			КонецЕсли;
		КонецЕсли;
		
		Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ЗадатьВопросПоУдалениюПризнакаОсновнойПартии(ПараметрыОповещения)
	
	ОповещениеВопроса = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыОповещения);
	
	ПоказатьВопрос(ОповещениеВопроса,"Партия является <основной>. После записи признак <основная партия> будет удален. Продолжить?",РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		
		Если УдалитьПризнакОсновнойПартии() Тогда
			
			Если Записать(Параметры) Тогда
				Если Параметры.Закрыть Тогда
					Закрыть();
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

// Удаляет значение основной партии
//
&НаСервере
Функция УдалитьПризнакОсновнойПартии()
	
	НаборЗаписей = РегистрыСведений.ПартииКонтрагентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Объект.Владелец);
	НаборЗаписей.Отбор.Статус.Установить(Объект.Ссылка.Статус);
	НаборЗаписей.Отбор.Контрагент.Установить(Объект.Ссылка.ВладелецПартии);
	
	Попытка
		НаборЗаписей.Записать();
		Возврат Истина
	Исключение
		ТекстСообщения = НСтр("ru = 'При записи партии произошла ошибка!
		|Дополнительное описание: %ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат Ложь
	КонецПопытки;
	
КонецФункции

#Область ВетИС

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если НЕ ЭтоВЕТИС Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеРеквизитов = Новый Структура();
	ЗначениеРеквизитов.Вставить("ДатаПроизводства", Объект.ДатаПроизводства);
	ЗначениеРеквизитов.Вставить("ГоденДо", Объект.ГоденДо);
	ЗначениеРеквизитов.Вставить("ПроизводительВЕТИС", Объект.ПроизводительВЕТИС);
	ЗначениеРеквизитов.Вставить("ЗаписьСкладскогоЖурналаВЕТИС", Объект.ЗаписьСкладскогоЖурналаВЕТИС);
	ЗначениеРеквизитов.Вставить("ИдентификаторПартииВЕТИС", Объект.ИдентификаторПартииВЕТИС);
	
	//
	НаименованиеВЕТИС = ПолучитьНаименованиеВЕТИС(ЗначениеРеквизитов);
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	Если Не ПустаяСтрока(НаименованиеВЕТИС) Тогда
		ДанныеВыбора.Добавить(НаименованиеВЕТИС);
	Иначе
		ДанныеВыбора.Добавить("", НСтр("ru = '<нет данных для заполнения>'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВЕТИСПриСозданииНаСервере();
	
	Элементы.ГруппаВЕТИС.Видимость = Ложь;
	Элементы.Наименование.КнопкаВыпадающегоСписка = Ложь;
	ЭтоВЕТИС = Ложь;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПодконтрольныхТоваровВЕТИС") Тогда
	
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("ПодконтрольнаяПродукцияВЕТИС");
		СтруктураРеквизитов.Вставить("ИспользоватьПроизводителяВЕТИСПартии");
		СтруктураРеквизитов.Вставить("ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии");
		СтруктураРеквизитов.Вставить("ИспользоватьИдентификаторПартииВЕТИСПартии");
		СтруктураРеквизитов.Вставить("ИспользоватьДатуПроизводстваПартии");
		СтруктураРеквизитов.Вставить("ИспользоватьСрокГодностиПартии");
		
		ПараметрыВЕТИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец,СтруктураРеквизитов);
		
		Если ПараметрыВЕТИС.ПодконтрольнаяПродукцияВЕТИС Тогда
			ЭтоВЕТИС = Истина;
			Элементы.Наименование.КнопкаВыпадающегоСписка		= Истина;
			Элементы.ГруппаВЕТИС.Видимость						= Истина;
			Элементы.ПроизводительВЕТИС.Видимость				= ПараметрыВЕТИС.ИспользоватьПроизводителяВЕТИСПартии;
			Элементы.ЗаписьСкладскогоЖурналаВЕТИС.Видимость		= ПараметрыВЕТИС.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии;
			Элементы.ИдентификаторПартииВЕТИС.Видимость			= ПараметрыВЕТИС.ИспользоватьИдентификаторПартииВЕТИСПартии;
			Элементы.ДатаПроизводства.Видимость					= ПараметрыВЕТИС.ИспользоватьДатуПроизводстваПартии;
			Элементы.ГоденДо.Видимость							= ПараметрыВЕТИС.ИспользоватьСрокГодностиПартии;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНаименованиеВЕТИС(ЗначениеРеквизитов)
	
	Возврат Справочники.ПартииНоменклатуры.ПредставлениеПартии(ЗначениеРеквизитов);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

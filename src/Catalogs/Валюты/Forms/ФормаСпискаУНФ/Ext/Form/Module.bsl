
#Область ОписаниеПеременных

#Область ПеременныеФормы

&НаКлиенте
Перем ВыполняетсяЗаданиеЗагрузкиВалют;

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаКурса = НачалоДня(ТекущаяДатаСеанса());
	Список.Параметры.УстановитьЗначениеПараметра ("КонецПериода", ДатаКурса);
	
	Элементы.Валюты.РежимВыбора = Параметры.РежимВыбора;
	
	// УНФ
	НастроитьФормуДляЗагрузкиКурсовВалют();
	// Конец УНФ
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыполняетсяЗаданиеЗагрузкиВалют = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если Не ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(РезультатВыбора) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Валюты.Обновить();
	Элементы.Валюты.ТекущаяСтрока = РезультатВыбора[РезультатВыбора.ВГраница()].Валюта;
	
	Если ЗагружатьКурсыВалютВФоне Тогда
		ПодключитьОбработчикОжидания("ЗагрузитьКурсыВалютВФоне", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КурсыВалют"
		Или ИмяСобытия = "Запись_ЗагрузкаКурсовВалют" Тогда
		Элементы.Валюты.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВалюты

&НаКлиенте
Процедура ВалютыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ОткрытьФорму("Справочник.Валюты.Форма.ПодборВалютИзКлассификатора", , ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборИзОКВ(Команда)
	
	ОткрытьФорму("Справочник.Валюты.Форма.ПодборВалютИзКлассификатора",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКурсыВалют(Команда)
	
	ПараметрыФормы = Новый Структура("ОткрытиеИзСписка");
	ОткрытьФорму("Обработка.ЗагрузкаКурсовВалют.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВалюту(Команда)
	
	Элементы.Валюты.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИПП(Команда)
	
	ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
	Новый ОписаниеОповещения("ОбработатьПодключениеИПП", ЭтотОбъект),
	ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуДляЗагрузкиКурсовВалют()
	
	Элементы.ГруппаЗагрузитьКурсыВалют.Видимость = Пользователи.РолиДоступны("ДобавлениеИзменениеКурсовВалют");
	Если Не Элементы.ГруппаЗагрузитьКурсыВалют.Видимость Тогда
		ЗагружатьКурсыВалютВФоне = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Элементы.ФормаЗагрузитьКурсыВалют.Видимость = Ложь;
		Элементы.ФормаПодключитьИПП.Видимость = Ложь;
		ЗагружатьКурсыВалютВФоне = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ТребуетсяНастройкаАвторизацияИнтернетПоддержки() Тогда
		Элементы.ФормаЗагрузитьКурсыВалют.Видимость = Ложь;
		Элементы.ФормаПодключитьИПП.Видимость = Истина;
		ЗагружатьКурсыВалютВФоне = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаЗагрузитьКурсыВалют.Видимость = Истина;
	Элементы.ФормаПодключитьИПП.Видимость = Ложь;
	ЗагружатьКурсыВалютВФоне = Истина;
	
КонецПроцедуры

&НаСервере
Функция ТребуетсяНастройкаАвторизацияИнтернетПоддержки()
	
	УстановитьПривилегированныйРежим(Истина);
	ИспользоватьАльтернативныйСервер = Константы.ИспользоватьАльтернативныйСерверДляЗагрузкиКурсовВалют.Получить();
	
	Если ИспользоватьАльтернативныйСервер Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МодульИнтернетПоддержкаПользователей = ОбщегоНазначения.ОбщийМодуль("ИнтернетПоддержкаПользователей");
	ДанныеАутентификации = МодульИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	Возврат Не (ДанныеАутентификации <> Неопределено
	И ЗначениеЗаполнено(ДанныеАутентификации.Логин)
	И ЗначениеЗаполнено(ДанныеАутентификации.Пароль));
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьКурсыВалютВФоне()
	
	Если ВыполняетсяЗаданиеЗагрузкиВалют Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	Задание = ЗагрузитьКурсыВалютВФонеНаСервере();
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполняетсяЗаданиеЗагрузкиВалют = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
	Задание,
	Новый ОписаниеОповещения("ОбработатьЗагрузкуКурсовВалют", ЭтотОбъект),
	ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьКурсыВалютВФонеНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалют.Валюта
	|ПОМЕСТИТЬ ВТ_Курсы
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период >= &НачалоПериодаЗагрузки
	|	И КурсыВалют.Валюта.ЗагружаетсяИзИнтернета
	|
	|СГРУППИРОВАТЬ ПО
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Валюты.Код КАК КодВалюты,
	|	Валюты.Ссылка КАК Валюта
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Курсы КАК ВТ_Курсы
	|		ПО (ВТ_Курсы.Валюта = Валюты.Ссылка)
	|ГДЕ
	|	Валюты.ЗагружаетсяИзИнтернета
	|	И ВТ_Курсы.Валюта ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("НачалоПериодаЗагрузки", ДобавитьМесяц(НачалоМесяца(ТекущаяДатаСеанса()), -3));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("СписокВалют", РезультатЗапроса.Выгрузить());
	ПараметрыЗагрузки.Вставить("НачалоПериода", ДобавитьМесяц(НачалоМесяца(ТекущаяДатаСеанса()), -3));
	ПараметрыЗагрузки.Вставить("КонецПериода", КонецДня(ТекущаяДатаСеанса()) + 1);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
	"РаботаСКурсамиВалют.ЗагрузитьАктуальныйКурс",
	ПараметрыЗагрузки,
	ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьЗагрузкуКурсовВалют(Результат, Параметры) Экспорт
	
	ВыполняетсяЗаданиеЗагрузкиВалют = Ложь;
	Элементы.Валюты.Обновить();
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Результат.Свойство("Статус") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПодключениеИПП(Результат, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		НастроитьФормуДляЗагрузкиКурсовВалют();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

// Функция - Получить кассу по умолчанию
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации	 - Используется для получения кассы указанной в организации. Необязательный параметр
// 
// Возвращаемое значение:
//  СправочникСсылка.Кассы - касса из настроек текущего пользователя, или из указанной организации, или любая первая имеющаяся
//
Функция ПолучитьКассуПоУмолчанию(Организация = Неопределено) Экспорт

	// В карточке организации может быть назначена основная касса,
	// но каждый пользователь может работать с какой-то своей кассой, которая
	// указана у него в настройках.
	// Касса из настроек более приоритетная.
	// Если касса в настройках не указана, а основная касса организации не доступна
	// по правам доступа, то берём первую доступную кассу, если она в базе всего одна.
	
	КассаПоУмолчанию = Справочники.Кассы.ПустаяСсылка();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПользовательскаяНастройкаОсновнойКассы = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.АвторизованныйПользователь(), "ОсновнаяКасса");
	Если ЗначениеЗаполнено(ПользовательскаяНастройкаОсновнойКассы) И НЕ ПользовательскаяНастройкаОсновнойКассы.ПометкаУдаления Тогда
		КассаПоУмолчанию = ПользовательскаяНастройкаОсновнойКассы;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если НЕ КассаПоУмолчанию.Пустая() Тогда
		
		// Проверим, есть ли у пользователя право с этой кассой работать.
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Кассы.Ссылка КАК КассаПоУмолчанию
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	Кассы.Ссылка = &КассаПоУмолчанию";
		
		Запрос.УстановитьПараметр("КассаПоУмолчанию", КассаПоУмолчанию);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			КассаПоУмолчанию = Выборка.КассаПоУмолчанию;
		Иначе
			КассаПоУмолчанию = Справочники.Кассы.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	Если КассаПоУмолчанию.Пустая() И Организация <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Кассы.Ссылка КАК КассаПоУмолчанию
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Кассы КАК Кассы
		|		ПО Организации.КассаПоУмолчанию = Кассы.Ссылка
		|ГДЕ
		|	Организации.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Организация);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			КассаПоУмолчанию = Выборка.КассаПоУмолчанию;
		КонецЕсли;
		
	КонецЕсли;
	
	Если КассаПоУмолчанию.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	Кассы.Ссылка КАК КассаПоУмолчанию
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	НЕ Кассы.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
			КассаПоУмолчанию = Выборка.КассаПоУмолчанию;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КассаПоУмолчанию;

КонецФункции

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьКассуСУчетомПравДоступаНаУровнеЗаписей(Касса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Кассы.Ссылка
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	Кассы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Касса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Касса;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецЕсли


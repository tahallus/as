#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Рассчитывает максимальный номер серии который уже используется для вида номенклатуры
// или уже указан в ТаблицеЗначений "ТаблицаСерий"
//
// Параметры
//	ВидНоменклатуры - СправочникСсылка.ВидыНоменклатуры - вид номенклатуры, для которого ищется номер серии    
//  ТаблицаСерий  - ТаблицаЗначений - таблица значений содержащая номера серий использованных на форме
//
// Возвращаемое значение:
//   ЗначениеКодаЧислом - Число - номер серии 
//
Функция ВычислитьМаксимальныйНомерСерии(Владелец, ШаблонСерииНоменклатуры=Неопределено)  Экспорт 
	
	СтрокаШаблона = "";
	Если ШаблонСерииНоменклатуры=Неопределено ИЛИ НЕ ЗначениеЗаполнено(ШаблонСерииНоменклатуры) Тогда
		// 8 цифр
		СтрокаШаблона = "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]";
		ШаблонСерииНоменклатурыСтрокой = "########";
	Иначе	
		Для н=1 По СтрДлина(ШаблонСерииНоменклатуры) Цикл
			Символ = Сред(ШаблонСерииНоменклатуры, н, 1);
			Если Символ=СерииНоменклатурыУНФКлиентСервер.СимволЧисла() Тогда
				СтрокаШаблона = СтрокаШаблона + "[0-9]";
			Иначе
				СтрокаШаблона = СтрокаШаблона + "_";
			КонецЕсли;
		КонецЦикла;
		ШаблонСерииНоменклатурыСтрокой = Строка(ШаблонСерииНоменклатуры);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СерииНоменклатуры.Наименование
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.Владелец = &Владелец И
	|	СерииНоменклатуры.ПометкаУдаления = ЛОЖЬ
	|	И СерииНоменклатуры.Наименование ПОДОБНО """+СтрокаШаблона+"""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование УБЫВ";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Выборка.Количество()=0 Тогда
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(8, 0, ДопустимыйЗнак.Неотрицательный));
		ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Наименование);
	Иначе
		ЗначениеКодаЧислом = СерияЧислоПоШаблону(Выборка.Наименование, ШаблонСерииНоменклатурыСтрокой);
	КонецЕсли; 
	
	Возврат ЗначениеКодаЧислом;
	
КонецФункции

Функция СерияИзЧислаПоШаблону(СерияЧисло, ШаблонСерииНоменклатурыСтрокой, ДлинаЧисловойЧасти) Экспорт
	
	СерияДополнитьНулями = Строка(СерияЧисло);
	Для н=1 По ДлинаЧисловойЧасти - СтрДлина(СерияЧисло) Цикл
		СерияДополнитьНулями = "0"+СерияДополнитьНулями;
	КонецЦикла;
	
	СерияПоШаблону = "";
	НомерСимволаЧисла = 1;
	Для н=1 По СтрДлина(ШаблонСерииНоменклатурыСтрокой) Цикл
		Символ = Сред(ШаблонСерииНоменклатурыСтрокой, н, 1);
		Если Символ=СерииНоменклатурыУНФКлиентСервер.СимволЧисла() Тогда
			СерияПоШаблону = СерияПоШаблону + Сред(СерияДополнитьНулями,НомерСимволаЧисла,1);
			НомерСимволаЧисла = НомерСимволаЧисла+1;
		Иначе
			СерияПоШаблону = СерияПоШаблону + Сред(ШаблонСерииНоменклатурыСтрокой,н,1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СерияПоШаблону;
	
КонецФункции

Функция СерияЧислоПоШаблону(Серия, ШаблонСерииНоменклатурыСтрокой) Экспорт
	
	СерияИзЦифр = "";
	Для н=1 По СтрДлина(ШаблонСерииНоменклатурыСтрокой) Цикл
		Символ = Сред(ШаблонСерииНоменклатурыСтрокой,н,1);
		Если Символ=СерииНоменклатурыУНФКлиентСервер.СимволЧисла() Тогда
			СерияИзЦифр = СерияИзЦифр+Сред(Серия,н,1);
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	Возврат ОписаниеТипаЧисла.ПривестиЗначение(СерияИзЦифр);
	
КонецФункции

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов
//
//	Возвращаемое значение:
//		Массив - массив имен реквизитов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("Номер");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

Функция СрокДействияГарантии(Серия, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СерииНоменклатурыГарантии.Регистратор КАК Регистратор,
	|	Товары.ГарантийныйСрок КАК ГарантийныйСрокМесяцев,
	|	СерииНоменклатурыГарантии.ДатаСобытия КАК ДатаПродажи,
	|	РАЗНОСТЬДАТ(СерииНоменклатурыГарантии.ДатаСобытия, &ДатаПроверки, МЕСЯЦ) КАК ПрошлоМесяцев,
	|	ДОБАВИТЬКДАТЕ(СерииНоменклатурыГарантии.ДатаСобытия, МЕСЯЦ, Товары.ГарантийныйСрок) КАК ГарантияДо,
	|	Товары.ВыписыватьГарантийныйТалон КАК ВыписыватьГарантийныйТалон
	|ИЗ
	|	РегистрСведений.СерииНоменклатурыГарантии КАК СерииНоменклатурыГарантии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
	|		ПО СерииНоменклатурыГарантии.Номенклатура = Товары.Ссылка
	|ГДЕ
	|	СерииНоменклатурыГарантии.Серия = &Серия
	|	И СерииНоменклатурыГарантии.Операция = &Операция
	|	И НЕ ТИПЗНАЧЕНИЯ(СерииНоменклатурыГарантии.Регистратор) = ТИП(Документ.ПриемИПередачаВРемонт)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СерииНоменклатурыГарантии.ДатаСобытия УБЫВ";
	
	Запрос.УстановитьПараметр("Серия", Серия);
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииСерийНоменклатуры.Расход);
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураВозврата = Новый Структура;
	Если Выборка.Следующий() Тогда
		Если Выборка.ГарантийныйСрокМесяцев > Выборка.ПрошлоМесяцев Тогда
			СтруктураВозврата.Вставить("Гарантия", Истина);
		Иначе
			СтруктураВозврата.Вставить("Гарантия", Ложь);
		КонецЕсли;
		СтруктураВозврата.Вставить("СрокДействияГарантии",Выборка.ГарантияДо);
		//СтруктураВозврата.Вставить("НомерГарантии",Выборка.НомерДокументаПродажи);
		СтруктураВозврата.Вставить("ДокументПродажи",Выборка.Регистратор);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура обработчик события ОбработкаПолученияДанныхВыбора.
//
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец")
		И ЗначениеЗаполнено(Параметры.Отбор.Владелец)
		И НЕ Параметры.Отбор.Владелец.ИспользоватьСерииНоменклатуры Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Для номенклатуры не ведется учет по сериям'");
		Сообщение.Сообщить();
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПолученияДанныхВыбора()

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ТипЗнч(Данные) = Тип("Структура") 
		И Данные.Свойство("Ссылка") Тогда
		
		Ссылка = Данные.Ссылка;
		
		ДатаПроизводства = "";
		ГоденДо = "";
		
		Если ЗначениеЗаполнено(Ссылка.ДатаПроизводства) Тогда
			ДатаПроизводства = Формат(Ссылка.ДатаПроизводства, "ДФ=дд.ММ.гггг")
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Ссылка.ГоденДо) Тогда
			ГоденДо = Формат(Ссылка.ГоденДо, "ДФ=дд.ММ.гггг");
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		Если ЗначениеЗаполнено(ДатаПроизводства) И ЗначениеЗаполнено(ГоденДо) Тогда
			Представление = СтрШаблон(НСтр("ru='%1 от %2 до %3'"), Ссылка.Наименование, ДатаПроизводства, ГоденДо);
		ИначеЕсли ЗначениеЗаполнено(ДатаПроизводства) Тогда
			Представление = СтрШаблон(НСтр("ru='%1 от %2'"), Ссылка.Наименование, ДатаПроизводства);
		ИначеЕсли ЗначениеЗаполнено(ГоденДо) Тогда
			Представление = СтрШаблон(НСтр("ru='%1 до %2'"), Ссылка.Наименование, ГоденДо);
		Иначе
			Представление = СтрШаблон(НСтр("ru='%1'"), Ссылка.Наименование);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МобильныйКлиентУНФ.НастроитьВспомогательнуюФормуМобильныйКлиент(ЭтотОбъект);
	
	ВыделенныеКонтрагентыМассив = Новый Массив;
	Параметры.Свойство("ВыделенныеКонтрагенты",ВыделенныеКонтрагентыМассив);
	ЗаполнитьТаблицуКонтактныхЛиц(ВыделенныеКонтрагентыМассив);
	
	Если ВыделенныеКонтрагентыМассив <> Неопределено И ВыделенныеКонтрагентыМассив.Количество()> 0 Тогда
		Для Каждого Контрагент Из ВыделенныеКонтрагентыМассив Цикл
			НовыйКонтрагент = ВыделенныеКонтрагенты.Добавить();
			НовыйКонтрагент.Контрагент = Контрагент.Ссылка;
		КонецЦикла;
		Заголовок = НСтр("ru='Контакты'");
	КонецЕсли;
	Если ВыделенныеКонтрагенты.Количество()> 1 Тогда
		Заголовок = НСтр("ru='Общие контакты'");
	КонецЕсли;
	ОбновитьЭлементыКонтактныхЛиц();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Выбор_КонтактноеЛицо" Тогда
		Если Источник.ВладелецФормы = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Если Источник.ВладелецФормы = ЭтотОбъект Тогда
			ДанныеКонтактныхЛиц[ИндексВыбранногоКонтактногоЛица].КонтактноеЛицо = Параметр.Контакт;
			Строки = НедействительныеСвязиКонтактныеЛица.НайтиСтроки(Новый Структура("КонтактноеЛицо",Параметр.Контакт));
			Если Строки.Количество()>0 Тогда
				Для Каждого Строка Из Строки Цикл
					НедействительныеСвязиКонтактныеЛица.Удалить(НедействительныеСвязиКонтактныеЛица.Индекс(Строка));
				КонецЦикла;
			КонецЕсли;
			Модифицированность = Истина;
			ОбновитьЭлементыКонтактныхЛиц();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаименованиеКонтактНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ИндексВыбранногоКонтактногоЛица = Число(Сред(Элемент.Имя, СтрДлина("НаименованиеКонтакт_")+1));
	ПараметрыФормы.Вставить("ОткрытиеИзФормыКонтрагента",Истина);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ОткрытьФорму("Справочник.КонтактныеЛица.ФормаСписка",ПараметрыФормы,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеКонтактОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		СтандартнаяОбработка = Ложь;
		ИндексВыбранногоКонтактногоЛица = Число(Сред(Элемент.Имя, СтрДлина("НаименованиеКонтакт_")+1));
		ДанныеКонтактныхЛиц[ИндексВыбранногоКонтактногоЛица].КонтактноеЛицо = ВыбранноеЗначение;
		Строки = НедействительныеСвязиКонтактныеЛица.НайтиСтроки(Новый Структура("КонтактноеЛицо",ВыбранноеЗначение));
		Если Строки.Количество()>0 Тогда
			Для Каждого Строка Из Строки Цикл
				НедействительныеСвязиКонтактныеЛица.Удалить(НедействительныеСвязиКонтактныеЛица.Индекс(Строка));
			КонецЦикла;
		КонецЕсли;
		Модифицированность = Истина;
		ОбновитьЭлементыКонтактныхЛиц();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСвязь(Команда)
	ИндексВыбранногоКонтактногоЛица = Число(Сред(Команда.Имя, СтрДлина("КомандаУстановитьСвязь_")+1));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОткрытиеИзФормыКонтрагента",Истина);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ОткрытьФорму("Справочник.КонтактныеЛица.ФормаСписка",ПараметрыФормы,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура РазорватьСвязь(Команда)
	
	ИндексВыбранногоКонтактногоЛица = Число(Сред(Команда.Имя, СтрДлина("КомандаРазорватьСвязь_")+1));
	ДанныеКонтактногоЛица = ДанныеКонтактныхЛиц[ИндексВыбранногоКонтактногоЛица];
	Оповещение = Новый ОписаниеОповещения("ОбработатьВопросОсновноеКЛРазрывСвязи", ЭтотОбъект);
	ПроверитьКонтактНаОсновнойИПодписанта(ДанныеКонтактногоЛица,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоляКонтактногоЛица(Команда)
	ДанныеКонтактныхЛиц.Добавить();
	ОбновитьЭлементыКонтактныхЛиц();
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если Модифицированность = Ложь Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанныеПоСвязямВРегистр();
	
	Если ИзмененыСвязиСКонтактами Тогда
		
		СтрокаСЧислом = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';контрагента;;контрагентов;контрагентов;контрагентов'"),
			ВыделенныеКонтрагенты.Количество());
		
		ПоказатьОповещениеПользователя(
		НСтр("ru='Изменение связей с контактами'"),
		,
		СтрШаблон(НСтр("ru='Связи изменены для 
			|%1'"), СтрокаСЧислом),
		БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(ВыделенныеКонтрагенты[0].Контрагент);
		Оповестить("ИзменениеСвязейСКонтактами_Контрагент");
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуКонтактныхЛиц(ВыделенныеКонтрагентыМассив)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контакты.Ссылка КАК Контакт,
	|	СвязиКонтрагентКонтактСрезПоследних.Контрагент.КонтактноеЛицо КАК КонтрагентКонтактноеЛицо,
	|	СвязиКонтрагентКонтактСрезПоследних.Контрагент.КонтактноеЛицоПодписант КАК КонтрагентКонтактноеЛицоПодписант,
	|	КОЛИЧЕСТВО(СвязиКонтрагентКонтактСрезПоследних.Контакт) КАК КоличествоКонтактов
	|ИЗ
	|	РегистрСведений.СвязиКонтрагентКонтакт.СрезПоследних КАК СвязиКонтрагентКонтактСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛица КАК Контакты
	|		ПО СвязиКонтрагентКонтактСрезПоследних.Контакт = Контакты.Ссылка
	|ГДЕ
	|	СвязиКонтрагентКонтактСрезПоследних.Контрагент В(&СписокКонтрагентов)
	|	И СвязиКонтрагентКонтактСрезПоследних.СвязьНедействительна = ЛОЖЬ
	|	И Контакты.Недействителен = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	Контакты.Ссылка,
	|	СвязиКонтрагентКонтактСрезПоследних.Контрагент.КонтактноеЛицо,
	|	СвязиКонтрагентКонтактСрезПоследних.Контрагент.КонтактноеЛицоПодписант
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(СвязиКонтрагентКонтактСрезПоследних.Контакт) = &КоличествоКонтактов";
	
	Запрос.УстановитьПараметр("СписокКонтрагентов", ВыделенныеКонтрагентыМассив);
	Запрос.УстановитьПараметр("КоличествоКонтактов", ВыделенныеКонтрагентыМассив.Количество());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ДанныеКонтактныхЛиц.Добавить();
		Возврат;
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		
		НовыйКонтакт = ДанныеКонтактныхЛиц.Добавить();
		НовыйКонтакт.КонтактноеЛицо = Выборка.Контакт;
		
		Если НовыйКонтакт.КонтактноеЛицо = Выборка.КонтрагентКонтактноеЛицо Тогда
			НовыйКонтакт.ЭтоОсновноеКЛ = Истина;
		КонецЕсли;
		Если НовыйКонтакт.КонтактноеЛицо = Выборка.КонтрагентКонтактноеЛицоПодписант Тогда
			НовыйКонтакт.ЭтоПодписант = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыКонтактныхЛиц()
	Элементы.Переместить(Элементы.ДобавитьПоляКонтактногоЛица, Элементы.КомандыДобавленияКонтакт_0);
	Элементы.Переместить(Элементы.КомандыДобавленияРастяжение, Элементы.КомандыДобавленияКонтакт_0,Элементы.ДобавитьПоляКонтактногоЛица);
	
	УдаляемыеЭлементы = Новый Массив;
	УдаляемыеКоманды = Новый Массив;
	// Группа первого контактного лица создана в конфигураторе
	Для ИндексГруппы = 1 По Элементы.ВсеКонтакты.ПодчиненныеЭлементы.Количество()-1 Цикл
		УдаляемыеЭлементы.Добавить(Элементы.ВсеКонтакты.ПодчиненныеЭлементы[ИндексГруппы]);
		УдаляемыеКоманды.Добавить(Команды.Найти("КомандаУстановитьСвязь_"+ИндексГруппы));
		УдаляемыеКоманды.Добавить(Команды.Найти("КомандаРазорватьСвязь_"+ИндексГруппы));
	КонецЦикла;
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	Для Каждого УдаляемаяКоманда Из УдаляемыеКоманды Цикл
		Команды.Удалить(УдаляемаяКоманда);
	КонецЦикла;

	Для Каждого ДанныеКонтактногоЛица Из ДанныеКонтактныхЛиц Цикл
		ИндексКонтакта = ДанныеКонтактныхЛиц.Индекс(ДанныеКонтактногоЛица);
		
		// Для первого контактного лица элементы формы созданы в конфигураторе
		Если ИндексКонтакта > 0 Тогда
			
			ГруппаКонтактногоЛица = Элементы.Добавить("Контакт_" + ИндексКонтакта, Тип("ГруппаФормы"), Элементы.ВсеКонтакты);
			ГруппаКонтактногоЛица.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаКонтактногоЛица.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаКонтактногоЛица.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ГруппаКонтактногоЛица.ОтображатьЗаголовок = Ложь;
	
			ГруппаНаименованиеКонтактногоЛица = Элементы.Добавить("ГруппаНаименованиеКонтактногоЛица_" + ИндексКонтакта, Тип("ГруппаФормы"), ГруппаКонтактногоЛица);
			ГруппаНаименованиеКонтактногоЛица.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаНаименованиеКонтактногоЛица.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаНаименованиеКонтактногоЛица.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			
			ГруппаНаименованиеКонтактногоЛица.ОтображатьЗаголовок = Ложь;
			
			ПолеНаименование = Элементы.Добавить("НаименованиеКонтакт_" + ИндексКонтакта, Тип("ПолеФормы"), ГруппаНаименованиеКонтактногоЛица);
			ПолеНаименование.Вид = ВидПоляФормы.ПолеВвода;
			ПолеНаименование.ПутьКДанным = "ДанныеКонтактныхЛиц[" + ИндексКонтакта + "].КонтактноеЛицо";
			ПолеНаименование.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			ПолеНаименование.ПодсказкаВвода = НСтр("ru='Имя Фамилия'");

			ПолеНаименование.УстановитьДействие("ОбработкаВыбора", "НаименованиеКонтактОбработкаВыбора");
			ПолеНаименование.УстановитьДействие("НачалоВыбора", "НаименованиеКонтактНачалоВыбора");
			
			ПолеНаименование.Ширина = Элементы.НаименованиеКонтакт_0.Ширина;
			ПолеНаименование.КнопкаВыбора = Ложь;
			ПолеНаименование.КнопкаВыпадающегоСписка = Ложь;
			ПолеНаименование.КнопкаСоздания = Ложь;
			ПолеНаименование.КнопкаОткрытия = Истина;
			ПолеНаименование.ТолькоПросмотр = ЗначениеЗаполнено(ДанныеКонтактногоЛица.КонтактноеЛицо);
			
			КомандыСвязей = Элементы.Добавить("КоманднаяПанельСвязей_" + ИндексКонтакта, Тип("ГруппаФормы"), ГруппаНаименованиеКонтактногоЛица);
			КомандыСвязей.Вид = ВидГруппыФормы.КоманднаяПанель;
			КомандыСвязей.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
			КомандыСвязей.РастягиватьПоГоризонтали = Ложь;

			ГруппаКомандСвязейСКонтактнымЛицом = Элементы.Добавить("КомандыСвязейСКонтрагентом_" + ИндексКонтакта, Тип("ГруппаФормы"), КомандыСвязей);
			ГруппаКомандСвязейСКонтактнымЛицом.Вид = ВидГруппыФормы.ГруппаКнопок;
			ГруппаКомандСвязейСКонтактнымЛицом.Отображение = ОтображениеГруппыКнопок.Компактное;
			ГруппаКомандСвязейСКонтактнымЛицом.РастягиватьПоГоризонтали = Элементы.КоманднаяПанельСвязей_0.РастягиватьПоГоризонтали;
			
			КнопкаУстановитьСвязь = Элементы.Добавить("УстановитьСвязь_" + ИндексКонтакта, Тип("КнопкаФормы"),ГруппаКомандСвязейСКонтактнымЛицом);
			КомандаУстановитьСвязь = ЭтаФорма.Команды.Добавить("КомандаУстановитьСвязь_" + ИндексКонтакта);
			КомандаУстановитьСвязь.Действие = "УстановитьСвязь";
			КомандаУстановитьСвязь.Подсказка = НСтр("ru = 'Установить связь с контактом'");
			
			КнопкаУстановитьСвязь.ИмяКоманды = КомандаУстановитьСвязь.Имя;
			КнопкаУстановитьСвязь.АвтоМаксимальнаяШирина = Элементы.УстановитьСвязь_0.АвтоМаксимальнаяШирина;
			КнопкаУстановитьСвязь.МаксимальнаяШирина = 3;
			КнопкаУстановитьСвязь.Картинка = БиблиотекаКартинок.УстановитьСвязь;
			КнопкаУстановитьСвязь.Отображение = ОтображениеКнопки.Картинка;
			КнопкаУстановитьСвязь.ТолькоВоВсехДействиях = Ложь;
			КнопкаУстановитьСвязь.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
			КнопкаУстановитьСвязь.РастягиватьПоГоризонтали = Ложь;
			
			КнопкаРазорватьСвязь = Элементы.Добавить("РазорватьСвязь_" + ИндексКонтакта, Тип("КнопкаФормы"),ГруппаКомандСвязейСКонтактнымЛицом);
			КомандаРазорватьСвязь = ЭтаФорма.Команды.Добавить("КомандаРазорватьСвязь_" + ИндексКонтакта);
			КомандаРазорватьСвязь.Действие = "РазорватьСвязь";
			КомандаРазорватьСвязь.Подсказка = НСтр("ru = 'Разорвать связь с контактом'");
			
			КнопкаРазорватьСвязь.ИмяКоманды = КомандаРазорватьСвязь.Имя;
			КнопкаРазорватьСвязь.АвтоМаксимальнаяШирина = Элементы.РазорватьСвязь_0.АвтоМаксимальнаяШирина;
			КнопкаРазорватьСвязь.МаксимальнаяШирина = 3;

			КнопкаРазорватьСвязь.Картинка = БиблиотекаКартинок.РазорватьСвязь;
			КнопкаРазорватьСвязь.Отображение = ОтображениеКнопки.Картинка;
			КнопкаРазорватьСвязь.ТолькоВоВсехДействиях = Ложь;
			КнопкаРазорватьСвязь.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
			КнопкаРазорватьСвязь.РастягиватьПоГоризонтали = Ложь;
			
			КнопкаУстановитьСвязь.Доступность = НЕ ЗначениеЗаполнено(ДанныеКонтактногоЛица.КонтактноеЛицо);
			КнопкаРазорватьСвязь.Доступность = ЗначениеЗаполнено(ДанныеКонтактногоЛица.КонтактноеЛицо);
			
			ГруппаДобавление = Элементы.Добавить("КомандыДобавленияКонтакт_" + ИндексКонтакта, Тип("ГруппаФормы"), ГруппаКонтактногоЛица);
			ГруппаДобавление.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаДобавление.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаДобавление.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			ГруппаДобавление.ОтображатьЗаголовок = Ложь;
			
		Иначе
			
			ПолеНаименование = Элементы["НаименованиеКонтакт_0"];
			Элементы.УстановитьСвязь_0.Доступность = НЕ ЗначениеЗаполнено(ДанныеКонтактногоЛица.КонтактноеЛицо);
			Элементы.РазорватьСвязь_0.Доступность = ЗначениеЗаполнено(ДанныеКонтактногоЛица.КонтактноеЛицо);
			ПолеНаименование.ТолькоПросмотр = ЗначениеЗаполнено(ДанныеКонтактногоЛица.КонтактноеЛицо);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ИндексПоследнегоКЛ = ДанныеКонтактныхЛиц.Количество()-1;
	КомандаДобавленияКИ = Элементы["КомандыДобавленияКонтакт_" + ИндексПоследнегоКЛ];
	Элементы.Переместить(Элементы.ДобавитьПоляКонтактногоЛица, КомандаДобавленияКИ);
	Элементы.Переместить(Элементы.КомандыДобавленияРастяжение, КомандаДобавленияКИ,Элементы.ДобавитьПоляКонтактногоЛица);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПоСвязямВРегистр()
	
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	Для Каждого Контрагент Из ВыделенныеКонтрагенты Цикл
		// Установить связи с контактами
		Для Каждого Контакт Из ДанныеКонтактныхЛиц Цикл
			Если Не ЗначениеЗаполнено(Контакт.КонтактноеЛицо) Тогда
				Продолжить;
			КонецЕсли;
			РегистрыСведений.СвязиКонтрагентКонтакт.НоваяСвязь(
				Контрагент.Контрагент, 
				Контакт.КонтактноеЛицо,
				,
				ТекущийПользователь,
				);
			ИзмененыСвязиСКонтактами = Истина;
		КонецЦикла;
		// Разорвать связи с контактами
	КонецЦикла;
	Для Каждого Контакт Из НедействительныеСвязиКонтактныеЛица Цикл
		
		Если Не ЗначениеЗаполнено(Контакт.КонтактноеЛицо) Тогда
			Продолжить;
		КонецЕсли;
		
		РегистрыСведений.СвязиКонтрагентКонтакт.УстановитьНедействительной(Контакт.Контрагент, Контакт.КонтактноеЛицо);
		ИзмененыСвязиСКонтактами = Истина;
		
		ИзменяемыйКонтрагент = ИзменяемыеКонтрагенты.НайтиСтроки(Новый Структура("Контрагент", Контакт.Контрагент));
		Если ИзменяемыйКонтрагент.Количество() = 0 Тогда
			НоваяСтрока = ИзменяемыеКонтрагенты.Добавить();
			НоваяСтрока.Контрагент = Контакт.Контрагент;
			Если Контакт.Контрагент.КонтактноеЛицо = Контакт.КонтактноеЛицо И Контакт.ЭтоОсновноеКЛ Тогда
				НоваяСтрока.ИзменитьОсновной = Контакт.ЭтоОсновноеКЛ;
			КонецЕсли;
			Если Контакт.Контрагент.КонтактноеЛицоПодписант = Контакт.КонтактноеЛицо И Контакт.ЭтоПодписант Тогда
				НоваяСтрока.ИзменитьПодписанта = Контакт.ЭтоПодписант;
			КонецЕсли;
		Иначе
			НоваяСтрока = ИзменяемыйКонтрагент[0];
			Если НЕ НоваяСтрока.ИзменитьОсновной И Контакт.Контрагент.КонтактноеЛицо = Контакт.КонтактноеЛицо Тогда
				НоваяСтрока.ИзменитьОсновной = Контакт.ЭтоОсновноеКЛ;
			КонецЕсли;
			Если НЕ НоваяСтрока.ИзменитьПодписанта И Контакт.Контрагент.КонтактноеЛицоПодписант = Контакт.КонтактноеЛицо Тогда
				НоваяСтрока.ИзменитьПодписанта = Контакт.ЭтоПодписант;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Контрагент Из ИзменяемыеКонтрагенты Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			КонтрагентОбъект = Контрагент.Контрагент.ПолучитьОбъект();
			
			Если НЕ Контрагент.ИзменитьОсновной И НЕ Контрагент.ИзменитьПодписанта Тогда
				Продолжить;
			КонецЕсли;
			
			Если Контрагент.ИзменитьОсновной Тогда
				КонтрагентОбъект.КонтактноеЛицо = Неопределено;
			КонецЕсли;
			
			Если Контрагент.ИзменитьПодписанта Тогда
				КонтрагентОбъект.КонтактноеЛицоПодписант = Неопределено;
			КонецЕсли;
			
			КонтрагентОбъект.Записать();
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
		КонецПопытки;
		
	КонецЦикла;
	
	НедействительныеСвязиКонтактныеЛица.Очистить();
	ИзменяемыеКонтрагенты.Очистить();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ОбработатьВопросСохранениеИзменений",ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросСохранениеИзменений(Результат,ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьДанныеПоСвязямВРегистр();
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РазорватьСвязьНаСервере()
	
	ДанныеКонтактногоЛица = ДанныеКонтактныхЛиц[ИндексВыбранногоКонтактногоЛица];
	
	Для Каждого Контрагент Из ВыделенныеКонтрагенты Цикл
		НедействительнаяСвязьСКонтрагентом = НедействительныеСвязиКонтактныеЛица.Добавить();
		НедействительнаяСвязьСКонтрагентом.КонтактноеЛицо = ДанныеКонтактногоЛица.КонтактноеЛицо;
		НедействительнаяСвязьСКонтрагентом.Контрагент = Контрагент.Контрагент;
		ОсновноеКЛКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент.Контрагент,"КонтактноеЛицо");
		Если ДанныеКонтактногоЛица.КонтактноеЛицо = ОсновноеКЛКонтрагента Тогда
			НедействительнаяСвязьСКонтрагентом.ЭтоОсновноеКЛ = Истина;
		КонецЕсли;
		ПодписантКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент.Контрагент,"КонтактноеЛицоПодписант");
		Если ДанныеКонтактногоЛица.КонтактноеЛицо = ПодписантКонтрагента Тогда
			НедействительнаяСвязьСКонтрагентом.ЭтоПодписант = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеКонтактныхЛиц.Удалить(ИндексВыбранногоКонтактногоЛица);
	Если ДанныеКонтактныхЛиц.Количество() = 0 Тогда
		ДанныеКонтактныхЛиц.Добавить();
	КонецЕсли;
	ОбновитьЭлементыКонтактныхЛиц();
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКонтактНаОсновнойИПодписанта(ДанныеКонтактногоЛица,Оповещение)
	
	КонтактОсновноеКЛ = ДанныеКонтактногоЛица.ЭтоОсновноеКЛ;
	КонтактПодписант = ДанныеКонтактногоЛица.ЭтоПодписант;
	
	Если НЕ КонтактОсновноеКЛ И НЕ КонтактПодписант Тогда
		РазорватьСвязьНаСервере();
		Возврат;
	КонецЕсли;
	
	Если КонтактОсновноеКЛ И КонтактПодписант Тогда
		
		Если ВыделенныеКонтрагенты.Количество() > 1 Тогда
			ТекстВопроса = СтрШаблон(НСтр("ru = 'Контакт используется как основной и подписант для некоторых контрагентов"+Символы.ПС+
			"При записи данные признаки контрагента станут незаполненными'"));
		Иначе
			ТекстВопроса = НСтр("ru = 'Контакт используется как основной/подписант для контрагента" + Символы.ПС+
			"При записи данные признаки станут незаполненными'");
		КонецЕсли;
	ИначеЕсли КонтактОсновноеКЛ Тогда
		
		Если ВыделенныеКонтрагенты.Количество() > 1 Тогда
			ТекстВопроса = НСтр("ru = 'Контакт используется как основной для некоторых контрагентов"+Символы.ПС+
				"При записи данный признак станет незаполненным'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Контакт используется как основной для контрагента"+Символы.ПС+
				"При записи данный признак станет незаполненным'");
		КонецЕсли;

	ИначеЕсли КонтактПодписант Тогда
		Если ВыделенныеКонтрагенты.Количество() > 1 Тогда
			ТекстВопроса = НСтр("ru = 'Контакт используется как подписант для некоторых контрагентов"+Символы.ПС+
				"При записи данный признак станет незаполненным'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Контакт используется как подписант для контрагента"+Символы.ПС+
				"При записи данный признак станет незаполненным'");
		КонецЕсли;
	КонецЕсли;
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросОсновноеКЛРазрывСвязи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		
		РазорватьСвязьНаСервере();
		Модифицированность = Истина;
		ОбновитьЭлементыКонтактныхЛиц();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

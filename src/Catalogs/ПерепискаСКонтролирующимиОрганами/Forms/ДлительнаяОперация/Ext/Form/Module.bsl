#Область ОписаниеПеременных

&НаКлиенте
Перем ВсеДействия;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = НСтр("ru = 'Подождите, пожалуйста ...'");
	ТолькоОдноДействие = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ТолькоОдноДействие", Ложь);
	ИмяПиктограммы = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ИмяПиктограммы", "ДлительнаяОперация48");
	Заголовок = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ЗаголовокФормы", Заголовок);
	ОтменаОперации = Ложь;
	
	КлючСохраненияПоложенияОкна = "ДлительнаяОперация";
	
	Если Метаданные.ОбщиеКартинки.Найти(ИмяПиктограммы) <> Неопределено Тогда
		Элементы.ДекорацияОжидание.Картинка = БиблиотекаКартинок[ИмяПиктограммы];
	КонецЕсли;
	
	ДобавитьДополнительныеКоманды(Параметры.СписокКоманд);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КлючУникальности = "ДлительнаяОперация";
	
	Если ВсеДействия = Неопределено Тогда
		ВсеДействия = Новый Структура;
		СписокОпераций = Новый Структура;
	КонецЕсли;
	
	Отказ = ВсеДействия.Количество() = 0;
	
	Если НЕ Отказ Тогда
		ПодключитьОбработчикОжидания("Подключаемый_СменаРазмеров", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ОтменаОперации И НЕ ЗавершениеРаботы Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НажатиеКнопки(Команда)
	
	ЗакрытьФорму(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Для Каждого СтрокаКлюча Из ВсеДействия Цикл
		Если СтрокаКлюча.Значение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(СтрокаКлюча.Значение, Ложь);
		КонецЕсли;
	КонецЦикла;
	
	ЗакрытьФорму(КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	ОтменитьОперацию(Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнтерфейсВзаимодействия

// Добавляет новую группу элементов для отображения состояния выполнения операции
//
// Параметры:
//	НоваяОперация - Структура - см. ОписаниеОперации()
//
// Возвращаемое значение:
//	Булево - Истина, если элементо добавлен
//
&НаКлиенте
Функция ДобавитьОперацию(НоваяОперация) Экспорт
	
	ДобавляемОперацию = ОписаниеОперации();
	ЗаполнитьЗначенияСвойств(ДобавляемОперацию, НоваяОперация);
	Результат = НЕ СписокОпераций.Свойство(ДобавляемОперацию.ИдентификаторОперации);
	
	Если Результат Тогда
		ПустоеОповещение = ДобавляемОперацию.ОповещениеЗавершения = Неопределено;
		ВсеДействия.Вставить(ДобавляемОперацию.ИдентификаторОперации, ДобавляемОперацию.ОповещениеЗавершения);
		ДобавляемОперацию.ОповещениеЗавершения = Неопределено;
		СписокОпераций.Вставить(ДобавляемОперацию.ИдентификаторОперации, ДобавляемОперацию);
		ОтменаОперации = ОтменаОперации ИЛИ ДобавляемОперацию.ПрерыватьОперацию;
		РазместитьНовуюОперацию(ДобавляемОперацию, ПустоеОповещение);
		ОтобразитьСостояниеОперацииСервер(ДобавляемОперацию.ИдентификаторОперации);
	КонецЕсли;
	
	ПроверитьФорму();
	
	Возврат Результат;
	
КонецФункции

// Меняет оформление элементов связанных с ранее добавленной операцией
//
// Параметры:
//	ИдентификаторОперации 	- Строка
//	ТекущееСостояние		- Строка
//	Завершено				- Булево - меняет статус операции, при возможности форма закрываается автоматически
//	Индикатор				- Число - текущее значение индикатора прогресса
//
&НаКлиенте
Процедура СтатусОперации(ИдентификаторОперации, ТекущееСостояние, Завершено = Ложь, Индикатор = 0) Экспорт
	
	Если СписокОпераций.Свойство(ИдентификаторОперации) Тогда
		СписокОпераций[ИдентификаторОперации].Индикатор = Индикатор;
		СписокОпераций[ИдентификаторОперации].ТекущееСостояние = ТекущееСостояние;
		СписокОпераций[ИдентификаторОперации].Завершено = Завершено;
		ОтобразитьСостояниеОперации(ИдентификаторОперации);
	КонецЕсли;
	
	ПроверитьФорму();
	
КонецПроцедуры

// Сбрасывает все ранее настройки и удаляет описания всех операций
//
// Параметры:
//	ОдноДействие - Булево - отображается только одна операция
//
&НаКлиенте
Процедура Инициализировать(ОдноДействие = Истина) Экспорт
	
	ИнициализироватьСервер();
	ВсеДействия = Новый Структура;
	СписокОпераций = Новый Структура;
	ТолькоОдноДействие = ОдноДействие;
	
КонецПроцедуры

// Закрывает форму
//
// Параметры:
//	РезультатВыбора - Произвольный - результат возвращаемый закрытии формы
//
&НаКлиенте
Процедура ЗакрытьФорму(РезультатВыбора = "") Экспорт
	
	ОтменаОперации = Истина;
	Если Открыта() Тогда
		Закрыть(РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтменитьОперацию(ИмяКоманды)
	
	ИдентификаторОперации = СтрЗаменить(ИмяКоманды, "Отменить", "");
	ОповещениеЗавершения = Неопределено;
	
	Если СписокОпераций.Свойство(ИдентификаторОперации) Тогда
		СписокОпераций[ИдентификаторОперации].ОтменаОперации = Истина;
		СписокОпераций[ИдентификаторОперации].Завершено = Истина;
		ОповещениеЗавершения = ВсеДействия[ИдентификаторОперации];
		ВсеДействия.Вставить(ИдентификаторОперации, Неопределено);
	КонецЕсли;
	
	Если ОповещениеЗавершения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Ложь);
	КонецЕсли;
	
	ОтобразитьСостояниеОперации(ИдентификаторОперации);
	ПроверитьФорму();
	
КонецПроцедуры

// Описывает информацию об операции
//
// Возвращаемое значение:
//	ИдентификаторОперации 	- Строка
//	Наименование			- Строка
//	ТекущееСостояние		- Строка
//	ПрерыватьОперацию		- Булево - возможность прервать операцию пользователем
//	ОтменаОперации			- Булево - служебное
//	ТипИндикатора			- Число - тип индикатора, 0 - не выводить, 1 - процент, 2 - количество
//	Индикатор				- Число - текущее значение индикатора
//	ВсегоИндикатор			- Число - конечное значение индикатора
//	Завершено				- Булево - статус окончания операции
//	ОповещениеЗавершения	- ОписаниеОповещения - вызывается в случае прерывания операции
//
&НаКлиенте
Функция ОписаниеОперации()
	
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторОперации", "");
	Результат.Вставить("Наименование", "");
	Результат.Вставить("ТекущееСостояние", "");
	Результат.Вставить("ПрерыватьОперацию", Истина);
	Результат.Вставить("ОтменаОперации", Ложь);
	Результат.Вставить("ТипИндикатора", 0); // 0 - не выводить, 1 - процент, 2 - количество
	Результат.Вставить("Индикатор", 0);
	Результат.Вставить("ВсегоИндикатор", 100);
	Результат.Вставить("ОповещениеЗавершения", Неопределено);
	Результат.Вставить("Завершено", Ложь);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтобразитьСостояниеОперации(ИдентификаторОперации)
	
	ОтобразитьСостояниеОперацииСервер(ИдентификаторОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФорму()
	
	Завершено = Истина;
	
	Для Каждого СтрокаКлюча Из СписокОпераций Цикл
		Завершено = Завершено И СтрокаКлюча.Значение.Завершено;
	КонецЦикла;
	
	Если Завершено Тогда
		ЗакрытьФорму(КодВозвратаДиалога.ОК);
		
	Иначе
		Если НЕ Открыта() Тогда
			Открыть();
		КонецЕсли;
		
		Активизировать();
		
		Элементы.Закрыть.Видимость = ОтменаОперации;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СменаРазмеров()
	
	ИмяЭлемента = "ДекорацияОжидание";
	Элементы[ИмяЭлемента].Видимость = НЕ Элементы[ИмяЭлемента].Видимость;
	Элементы[ИмяЭлемента].Видимость = НЕ Элементы[ИмяЭлемента].Видимость;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДополнительныеКоманды(СписокКоманд)
	
	ПервыйЭлемент = Неопределено;
	
	НовыеЭлементы = Новый Массив;
	Для Счетчик = 1 По СписокКоманд.Количество() Цикл
		СтрокаКоманды = СписокКоманд[Счетчик - 1];
		ИмяКоманды = СтрокаКоманды.Значение;
		
		НоваяКоманда = Команды.Добавить(ИмяКоманды);
		НоваяКоманда.Действие = "НажатиеКнопки"; 
		НоваяКоманда.Заголовок = СтрокаКоманды.Представление;
		Если ЗначениеЗаполнено(СтрокаКоманды.Картинка) Тогда
			НоваяКоманда.Картинка = СтрокаКоманды.Картинка;
		КонецЕсли;
		
		НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ГруппаВопросы);
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.АвтоМаксимальнаяВысота = Ложь;
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		
		Если ПервыйЭлемент = Неопределено ИЛИ СтрокаКоманды.Пометка Тогда
			ПервыйЭлемент = НовыйЭлемент;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПервыйЭлемент <> Неопределено Тогда
		ПервыйЭлемент.КнопкаПоУмолчанию = Истина;
		КлючСохраненияПоложенияОкна = "ФормаДиалога";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПредставлениеОперации(ТекущаяОперация)
	
	Результат = ТекущаяОперация.Наименование;
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		СимволРазделителя = "";
	ИначеЕсли ТекущаяОперация.ТипИндикатора = 0 Тогда
		СимволРазделителя = Символы.ПС;
	Иначе
		СимволРазделителя = ": ";
	КонецЕсли;
	
	Если ТекущаяОперация.ОтменаОперации Тогда
		Результат = Результат + СимволРазделителя + НСтр("ru = 'Отменено'");
	ИначеЕсли ЗначениеЗаполнено(ТекущаяОперация.ТекущееСостояние) Тогда
		Результат = Результат + СимволРазделителя + ТекущаяОперация.ТекущееСостояние;
	КонецЕсли;
		
	Результат = Результат + РассчитьДолюВыполнения(ТекущаяОперация);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РассчитьДолюВыполнения(ТекущаяОперация)
	
	Результат = "";
	
	Если ТекущаяОперация.Завершено 
		ИЛИ ТекущаяОперация.ОтменаОперации
		ИЛИ ТекущаяОперация.ТипИндикатора = 1 Тогда
		Результат = "";
	ИначеЕсли ТекущаяОперация.ВсегоИндикатор = 100 И ЗначениеЗаполнено(ТекущаяОперация.Индикатор) Тогда
		Результат = " " + СтрШаблон("(%1%%)", ТекущаяОперация.Индикатор);
	ИначеЕсли ЗначениеЗаполнено(ТекущаяОперация.ВсегоИндикатор) И ЗначениеЗаполнено(ТекущаяОперация.Индикатор) Тогда
		Результат = " " + СтрШаблон("(%1 из %2)", ТекущаяОперация.Индикатор, ТекущаяОперация.ВсегоИндикатор);
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОтобразитьСостояниеОперацииСервер(ИдентификаторОперации)
	
	ТекущаяОперация = СписокОпераций[ИдентификаторОперации];
	
	Если ТекущаяОперация.ОтменаОперации Тогда
		Элементы["Отменить" + ИдентификаторОперации].Видимость = Ложь;
	КонецЕсли;	
	ЭтотОбъект["Индикатор" + ИдентификаторОперации] = ТекущаяОперация.Индикатор;
	Элементы["Состояние" + ИдентификаторОперации].Заголовок = ПредставлениеОперации(ТекущаяОперация);
	Элементы.Закрыть.Видимость = ОтменаОперации;
	
	Если СписокОпераций.Количество() > 1 Тогда
		
		ЦветВыделения = ЦветаСтиля.ЦветФонаУдачнойОтправки;
		ЦветОбычный = Новый Цвет();
		
		Для Каждого СтрокаКлюча Из СписокОпераций Цикл
			ИмяГруппы = "Группа" + СтрокаКлюча.Значение.ИдентификаторОперации;
			Если ТолькоОдноДействие И СтрокаКлюча.Значение.ИдентификаторОперации = ИдентификаторОперации Тогда
				Элементы[ИмяГруппы].Видимость = Истина;
			ИначеЕсли ТолькоОдноДействие Тогда
				Элементы[ИмяГруппы].Видимость = Ложь;
			ИначеЕсли СтрокаКлюча.Значение.ИдентификаторОперации = ИдентификаторОперации Тогда
				Элементы[ИмяГруппы].ЦветФона = ЦветВыделения;
			Иначе
				Элементы[ИмяГруппы].ЦветФона = ЦветОбычный;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазместитьНовуюОперацию(ТекущаяОперация, ПустоеОповещение)
	
	ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеОперации = ТекущаяОперация.Наименование + ?(ПустаяСтрока(ТекущаяОперация.ТекущееСостояние), "", ": " + ТекущаяОперация.ТекущееСостояние);
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить(Новый РеквизитФормы("Индикатор" + ТекущаяОперация.ИдентификаторОперации, ТипЧисло));
	
	ИзменитьРеквизиты(НовыеРеквизиты, );
	
	НоваяКоманда = Команды.Добавить("Отменить" + ТекущаяОперация.ИдентификаторОперации);
	НоваяКоманда.Действие = "Отменить"; 
	НоваяКоманда.Заголовок = "";
	НоваяКоманда.Отображение = ОтображениеКнопки.Картинка;
	НоваяКоманда.Картинка = БиблиотекаКартинок.Остановить;
	
	ОбщаяГруппа = Элементы.Добавить("Группа" + ТекущаяОперация.ИдентификаторОперации, Тип("ГруппаФормы"), Элементы.ГруппаПраваяКолонка); 
	ОбщаяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ОбщаяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ОбщаяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
	ОбщаяГруппа.ОтображатьЗаголовок = Ложь;
	
	НовыйЭлемент = Элементы.Добавить("Состояние" + ТекущаяОперация.ИдентификаторОперации, Тип("ДекорацияФормы"), ОбщаяГруппа);
	НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
	НовыйЭлемент.Заголовок = ПредставлениеОперации(ТекущаяОперация);
	НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
	НовыйЭлемент.РастягиватьПоГоризонтали = Истина;
	
	ГруппаИндикатора = Элементы.Добавить("ГруппаИндикатор" + ТекущаяОперация.ИдентификаторОперации, Тип("ГруппаФормы"), ОбщаяГруппа); 
	ГруппаИндикатора.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаИндикатора.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаИндикатора.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаИндикатора.ОтображатьЗаголовок = Ложь;
	
	НовыйЭлемент = Элементы.Добавить("Индикатор" + ТекущаяОперация.ИдентификаторОперации, Тип("ПолеФормы"), ГруппаИндикатора);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеИндикатора;
	НовыйЭлемент.ОтображатьПроценты = ТекущаяОперация.ТипИндикатора = 1;
	НовыйЭлемент.МаксимальноеЗначение = ТекущаяОперация.ВсегоИндикатор;
	НовыйЭлемент.ПутьКДанным = "Индикатор" + ТекущаяОперация.ИдентификаторОперации;
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
	НовыйЭлемент = Элементы.Добавить("Отменить" + ТекущаяОперация.ИдентификаторОперации, Тип("КнопкаФормы"), ГруппаИндикатора);
	НовыйЭлемент.ИмяКоманды = "Отменить" + ТекущаяОперация.ИдентификаторОперации;
	НовыйЭлемент.Видимость = НЕ ПустоеОповещение И ТекущаяОперация.ПрерыватьОперацию;
	
	ГруппаИндикатора.Видимость = ТекущаяОперация.ТипИндикатора <> 0;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСервер()
	
	МассивУдаления = Новый Массив;
	
	Для Каждого СтрокаКлюча Из СписокОпераций Цикл
		ИмяГруппы = "Группа" + СтрокаКлюча.Ключ;
		Элементы.Удалить(ИмяГруппы);
		МассивУдаления.Добавить("Индикатор" + СтрокаКлюча.Ключ);
	КонецЦикла;
	
	ИзменитьРеквизиты(, МассивУдаления);
	ОтменаОперации = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДлительнаяОперации

&НаКлиенте
// Стартовый метод синхронизации данных справочника с классификатором
//
Процедура ИнициализироватьОбновлениеИзКлассификатора()
	
	Результат = РезультатОбновленияДанныхИзКлассификатора(СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая);
	Если Результат.Статус <> "Выполняется" Тогда 
		
		ПослеОбновленияСправочникаБанковНаКлиенте(Результат, Неопределено);
		Возврат;
		
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПослеОбновленияСправочникаБанковНаКлиенте", ЭтотОбъект, Истина);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru ='Обновление справочника БАНКИ по данным классификатора.'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат, Обработчик, ПараметрыОжидания);
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеОбновленияСправочникаБанковНаКлиенте(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПроверитьРезультатВыполнениеЗадания(Результат);
	
	Если Результат.Свойство("УспешноОбновлены") Тогда
		
		ТекстОповещения = НСтр("ru = 'Банки успешно обновлены из классификатора'");
		ПоказатьОповещениеПользователя("Обновление",, ТекстОповещения);
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
	Оповестить("ОбновитьПослеДобавления");
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьРезультатВыполнениеЗадания(Результат)
	
	Если Результат = Неопределено Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(ФоновоеЗаданиеАдресРезультата);
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если СтруктураДанных.Свойство("УспешноОбновлены") Тогда
		
		Результат.Вставить("УспешноОбновлены", СтруктураДанных.УспешноОбновлены);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатОбновленияДанныхИзКлассификатора(Непосредственно)
	
	ПараметрыФормирования = Новый Структура;
	
	Если ЗначениеЗаполнено(ФоновоеЗаданиеИдентификатор) Тогда
		
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ФоновоеЗаданиеИдентификатор);
		ФоновоеЗаданиеИдентификатор = Неопределено;
		
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление справочника БАНКИ по данным классификатора...'");
	ПараметрыВыполнения.ЗапуститьНеВФоне = Непосредственно;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Справочники.Банки.ОбновитьБанкиИзКлассификатора", ПараметрыФормирования, ПараметрыВыполнения);
	
	ФоновоеЗаданиеИдентификатор = Результат.ИдентификаторЗадания;
	ФоновоеЗаданиеАдресРезультата = Результат.АдресРезультата;
	
	Если Результат.Статус <> "Выполняется" Тогда
		
		ПроверитьРезультатВыполнениеЗадания(Результат);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ Справочник.Банки КАК Банки ГДЕ Банки.РучноеИзменение <> 2");
	РезультатВыполненияЗапроса = Запрос.Выполнить();
	
	БанкиОбновлялисьИзКлассификатора = НЕ РезультатВыполненияЗапроса.Пустой();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьПослеДобавления" Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ТекстВопроса = НСтр("ru = 'Есть возможность подобрать банк из классификатора.
		|Подобрать?'");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоГруппа", Группа);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОпределитьНеобходимостьПодбораБанкаИзКлассификатора", ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьНеобходимостьПодбораБанкаИзКлассификатора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		
		ПараметрыФормы = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе, МножественныйВыбор", Истина, Истина, Истина);
		ОткрытьФорму("Справочник.КлассификаторБанков.ФормаВыбора", ПараметрыФормы, ЭтотОбъект);
		
	Иначе
		
		Если ДополнительныеПараметры.ЭтоГруппа Тогда
			
			ОткрытьФорму("Справочник.Банки.ФормаГруппы", Новый Структура("ЭтоГруппа",Истина), ЭтотОбъект);
			
		Иначе
			
			ОткрытьФорму("Справочник.Банки.ФормаОбъекта");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьИзКлассификатора(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор", Ложь, Истина);
	ОткрытьФорму("Справочник.КлассификаторБанков.ФормаВыбора", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзКлассификатора(Команда)
	
	Если НЕ БанкиОбновлялисьИзКлассификатора Тогда
		
		ТекстВопроса = НСтр("ru = 'ВНИМАНИЕ!
		|Произойдет обновление всех банков из классификатора. Если данные банков изменялись вручную, то изменения могут быть утеряны.
		|В дальнейшем, для исключения банка из автоматического обновления, необходимо включить признак ручного изменения (команда ""Изменить"").
		|Продолжить?'");
		
		Ответ = Неопределено;
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбновитьИзКлассификатораЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0 , КодВозвратаДиалога.Нет);
		Возврат;
		
	КонецЕсли;
	
	ИнициализироватьОбновлениеИзКлассификатора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзКлассификатораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИнициализироватьОбновлениеИзКлассификатора();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

#КонецОбласти



#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Доступно = ?(Объект.ТолькоДляАвтора, 0, 1);
	
	УправлениеФормой();
	ЗаполнитьРеквизиты();
	УстановитьДоступностьКнопок();
	
	ЭтоНовый = НЕ ЗначениеЗаполнено(Объект.Ссылка);
	
	ФильтрФайлов = ШаблоныПечатиОфисныхДокументов.ФильтрВыбираемыхФайловИзКаталога();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ТолькоДляАвтора = ?(Доступно = 1, Ложь, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ДобавитьИзмененныеФорматыВОбъект(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФайлами.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Параметры);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЭтоНовый Тогда
		Оповестить("Запись_ШаблоныПечатиОфисныхДокументов", Новый Структура("ЭтоНовый,Назначение", Истина, Объект.Назначение));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Если Параметр.Свойство("ЭтоНовый") И Параметр.ЭтоНовый
			И Параметр.Свойство("ВладелецФайла") И Параметр.ВладелецФайла = Объект.Ссылка Тогда
			
			Если ТипЗнч(Источник) = Тип("СправочникСсылка.ШаблоныПечатиОфисныхДокументовПрисоединенныеФайлы") Тогда
				ФайлПодходящегоФормата = ФайлПодходящегоФормата(Источник);
				ФайлШаблон = Источник;
			ИначеЕсли ТипЗнч(Источник) = Тип("Массив") И Источник.Количество() <> 0 Тогда
				ФайлПодходящегоФормата = ФайлПодходящегоФормата(Источник[0]);
				ФайлШаблон = Источник[0];
			КонецЕсли;
			
			Если ФайлПодходящегоФормата Тогда
				Объект.ФайлШаблон = ФайлШаблон;
				Модифицированность = Истина;
				УправлениеФормой();
				ЗаполнитьРеквизиты();
			КонецЕсли;
			
		КонецЕсли;
		
		Если (ТипЗнч(Источник) = Тип("Массив") И Источник.Найти(Объект.ФайлШаблон) <> Неопределено
			ИЛИ Источник = Объект.ФайлШаблон) Тогда
			УстановитьДоступностьКнопок();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтотОбъект, Отказ, ЗавершениеРаботы, Объект.Ссылка);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НазначениеПриИзменении(Элемент)
	
	ЗаполнитьРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыборФайлаНажатие(Элемент)
	
	Продолжение = Новый ОписаниеОповещения("ДобавлениеФайлаЗавершение", ЭтотОбъект);
	НачатьДобавлениеФайла(Продолжение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыборФайлаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыборФайлаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Продолжение = Новый ОписаниеОповещения("ПеретаскиваниеФайлаЗавершение", ЭтотОбъект, ПараметрыПеретаскивания);
	НачатьДобавлениеФайла(Продолжение);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлШаблонПриИзменении(Элемент)
	УправлениеФормой();
	ЗаполнитьРеквизиты();
КонецПроцедуры

&НаКлиенте
Процедура ФайлШаблонОткрытие(Элемент, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ОткрытьФормуФайла(Объект.ФайлШаблон, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлШаблонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияДляОтбора = Новый Массив;
	ЗначенияДляОтбора.Добавить("docx");
	ЗначенияДляОтбора.Добавить("odt");
	ЗначениеОтбора = Новый Структура("Расширение", Новый ФиксированныйМассив(ЗначенияДляОтбора));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ВладелецФайла", Объект.Ссылка);
	ПараметрыФормы.Вставить("Отбор", ЗначениеОтбора);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьФайл(Команда)
	
	ДанныеФайла = ДанныеФайла(Объект.ФайлШаблон, УникальныйИдентификатор);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, ФайлРедактируетсяТекущимПользователем());
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФайл(Команда)
	
	ДанныеФайла = ДанныеФайла(Объект.ФайлШаблон, УникальныйИдентификатор);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Истина);
	УстановитьДоступностьКнопок(ДанныеФайла.Редактирует);
	
	ОповеститьОбИзменении(Объект.ФайлШаблон);
	Оповестить("Запись_Файл", Новый Структура, Объект.ФайлШаблон);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактированиеФайла(Команда)
	
	Если НЕ ФайлРедактируетсяТекущимПользователем() Тогда
		Возврат;
	КонецЕсли;
	
	ПослеПомещенияФайла = Новый ОписаниеОповещения("ЗакончитьРедактированиеВыполненоПомещение", ЭтотОбъект);
	РаботаСФайламиКлиент.ПоместитьПрисоединенныйФайл(ПослеПомещенияФайла, Объект.ФайлШаблон, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактированиеВыполненоПомещение(ИнформацияОФайле, ДополнительныеПараметры) Экспорт
	
	ОповеститьОбИзменении(Объект.ФайлШаблон);
	Оповестить("Запись_Файл", Новый Структура, Объект.ФайлШаблон);
	
	УстановитьДоступностьКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступВсемПользователямПриИзменении(Элемент)
	Доступно = 1;
КонецПроцедуры

&НаКлиенте
Процедура ДоступТолькоАвторуПриИзменении(Элемент)
	Доступно = 0;
КонецПроцедуры

&НаКлиенте
Процедура АвторПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.Автор) Тогда
		Объект.Автор = ПользователиКлиент.АвторизованныйПользователь();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПриАктивизацииСтроки(Элемент)
	
	Элементы.РеквизитыФормат.СписокВыбора.Очистить();
	
	ДанныеСтроки = Элементы.Реквизиты.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеСтроки.ДопустимыеФорматы, Элементы.РеквизитыФормат.СписокВыбора);
	
	Элементы.РеквизитыФормат.КнопкаВыпадающегоСписка = ДанныеСтроки.ДопустимыеФорматы.Количество() <> 0;
	Элементы.РеквизитыФормат.КнопкаВыбора = ДанныеСтроки.ОписаниеТипов.Типы().Количество() <> 0;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Реквизиты.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеСтроки.ЕстьВозможностьВыбораФормата Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.ДопустимыеФорматы.Количество() <> 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КлючПараметра", ДанныеСтроки.Имя);
	ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ВыбраннаяСтрока);
	ДополнительныеПараметры.Вставить("СтарыйФормат", ДанныеСтроки.Формат);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьНовыйФорматПараметра", ЭтотОбъект, ДополнительныеПараметры);
	
	Конструктор = Новый КонструкторФорматнойСтроки(ДанныеСтроки.Формат);
	Конструктор.ДоступныеТипы = ДанныеСтроки.ОписаниеТипов;
	Конструктор.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваПараметровШаблонаФорматНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элементы.Реквизиты.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.ОписаниеТипов.Типы().Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КлючПараметра", ДанныеСтроки.Имя);
	ДополнительныеПараметры.Вставить("ИдентификаторСтроки", Элементы.Реквизиты.ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("СтарыйФормат", ДанныеСтроки.Формат);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьНовыйФорматПараметра", ЭтотОбъект, ДополнительныеПараметры);
	
	Конструктор = Новый КонструкторФорматнойСтроки(ДанныеСтроки.Формат);
	Конструктор.ДоступныеТипы = ДанныеСтроки.ОписаниеТипов;
	Конструктор.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыФорматОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элементы.Реквизиты.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КлючПараметра", ДанныеСтроки.Имя);
	ДополнительныеПараметры.Вставить("ИдентификаторСтроки", Элементы.Реквизиты.ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("СтарыйФормат", ДанныеСтроки.Формат);
	
	ВыбратьНовыйФорматПараметра(ВыбранноеЗначение, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНовыйФорматПараметра(НовыйФормат, ДополнительныеПараметры) Экспорт
	
	Если НовыйФормат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Реквизиты.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФорматИзменен = ДополнительныеПараметры.СтарыйФормат <> НовыйФормат;
	
	Если НЕ ФорматИзменен Тогда
		Возврат;
	КонецЕсли;
	
	ЗаблокироватьДанныеФормыДляРедактирования();
	Модифицированность = ФорматИзменен;
	
	ДанныеСтроки.ФорматИзменен = ФорматИзменен;
	ДанныеСтроки.Формат = НовыйФормат;
	
	НоваяСтрока = ИзмененныеФорматы.Добавить();
	НоваяСтрока.Ключ = ДанныеСтроки.Имя;
	НоваяСтрока.Формат = НовыйФормат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПараметрыВФайл(Команда)
	
	ОчиститьСообщения();
	Результат = ДобавитьПараметрыВФайлСервер();
	
	Если Результат = Истина Тогда
		ПоказатьОповещениеПользователя(,, НСтр("ru='Выбранные параметры успешно добавлены в файл.'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ДекорацияВыборФайла.Видимость = НЕ ЗначениеЗаполнено(Объект.ФайлШаблон);
	Элементы.ГруппаФайлШаблон.Видимость = ЗначениеЗаполнено(Объект.ФайлШаблон);
	
	РасширениеВыбранногоФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ФайлШаблон, "Расширение");
	
	Элементы.ДекорацияФайлODT.Видимость = РасширениеВыбранногоФайла = "odt";
	Элементы.ДекорацияФайлDOCX.Видимость = РасширениеВыбранногоФайла = "docx";
	
	Элементы.НеВыделятьПоляДокументаЦветом.Видимость = РасширениеВыбранногоФайла = "docx";
	
	Элементы.РеквизитыДобавитьПараметрыВФайл.Доступность = ЗначениеЗаполнено(Объект.ФайлШаблон);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизиты()
	
	ДеревоРеквизитов = ДанныеФормыВЗначение(Реквизиты, Тип("ДеревоЗначений"));
	ДеревоРеквизитов.Строки.Очистить();
	
	Если НЕ ЗначениеЗаполнено(Объект.Назначение) Тогда
		ЗначениеВДанныеФормы(ДеревоРеквизитов, Реквизиты);
		Возврат;
	КонецЕсли;
	
	ОписаниеПараметров = ШаблоныПечатиОфисныхДокументов.ОписаниеПараметровШаблонаПоНазначению(Объект.Назначение, Объект.Ссылка);
	СобратьДеревоИзПараметровРекурсивно(ДеревоРеквизитов.Строки, ОписаниеПараметров);
	ЗначениеВДанныеФормы(ДеревоРеквизитов, Реквизиты);
	
	ОписаниеПараметровСсылка = ПоместитьВоВременноеХранилище(ОписаниеПараметров, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СобратьДеревоИзПараметровРекурсивно(СтрокиДерева, ОписаниеПараметров)
	
	Для каждого ОписаниеПараметра Из ОписаниеПараметров Цикл
		
		Если ОписаниеПараметра.Элементы <> Неопределено Тогда
			
			НоваяСтрока = СтрокиДерева.Добавить();
			НоваяСтрока.Представление = ОписаниеПараметра.Представление;
			СобратьДеревоИзПараметровРекурсивно(НоваяСтрока.Строки, ОписаниеПараметра.Элементы);
			
		Иначе
			
			Если ОписаниеПараметра.Вид = ШаблоныПечатиОфисныхДокументов.ВидПараметраИзображение() И НЕ ДобавлятьИзображения() Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = СтрокиДерева.Добавить();
			НоваяСтрока.ЭтоПараметр   = Истина;
			НоваяСтрока.ЭтоПараметрТЧ = ОписаниеПараметра.ТаблицаВладелец <> Неопределено;
			НоваяСтрока.Имя           = ОписаниеПараметра.Ключ;
			НоваяСтрока.Представление = ОписаниеПараметра.Представление;
			НоваяСтрока.Формат        = ОписаниеПараметра.Формат;
			НоваяСтрока.Вид           = ОписаниеПараметра.Вид;
			НоваяСтрока.ОписаниеТипов = ОписаниеПараметра.ОписаниеТипов;
			
			Если ОписаниеПараметра.ДопустимыеФорматы <> Неопределено Тогда
				НоваяСтрока.ДопустимыеФорматы = ОписаниеПараметра.ДопустимыеФорматы;
			КонецЕсли;
			
			НоваяСтрока.ЕстьВозможностьВыбораФормата = НоваяСтрока.ДопустимыеФорматы.Количество() <> 0 ИЛИ НоваяСтрока.ОписаниеТипов.Типы().Количество() <> 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизита(Ссылка, ИмяРеквизита)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

&НаКлиенте
Функция ФайлПодходящегоФормата(Файл)
	
	РасширениеФайла = "";
	
	Если ТипЗнч(Файл) = Тип("СправочникСсылка.ШаблоныПечатиОфисныхДокументовПрисоединенныеФайлы") Тогда
		РасширениеФайла = РасширениеПрисоединенногоФайла(Файл);
	ИначеЕсли ТипЗНЧ(Файл) = Тип("Файл") Тогда
		РасширениеФайла = Файл.Расширение;
	КонецЕсли;
	
	Если СтрНачинаетсяС(РасширениеФайла, ".") Тогда
		РасширениеФайла =  ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(РасширениеФайла);
	КонецЕсли;
	
	Возврат (РасширениеФайла = "docx" ИЛИ РасширениеФайла = "odt");
	
КонецФункции

&НаКлиенте
Функция ПроверитьФайлПодходящегоФормата(Файл)
	
	ФайлПодходящегоФормата = ФайлПодходящегоФормата(Файл);
	
	Если Не ФайлПодходящегоФормата Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выбран файл неподходящего формата.'"));
	КонецЕсли;
	
	Возврат ФайлПодходящегоФормата;
	
КонецФункции

&НаСервере
Процедура НайтиДобавляемыеПараметры(ДобавляемыеПараметрыДокумента, ДобавляемыеПараметрыТаблицыДокумента, ДобавляемыеКартинкиДокумента, СписокПараметров = Неопределено)
	
	Если СписокПараметров = Неопределено Тогда
		СписокПараметров = Реквизиты.ПолучитьЭлементы();
	КонецЕсли;
	
	Для каждого Параметр Из СписокПараметров Цикл
		
		Если Параметр.Добавить И Параметр.ЭтоПараметр Тогда
			
			Если Параметр.ЭтоПараметрТЧ Тогда
				ДобавляемыеПараметрыТаблицыДокумента.Добавить(Параметр.Имя, Параметр.Представление);
			Иначе
				ДобавляемыеПараметрыДокумента.Добавить(Параметр.Имя, Параметр.Представление);
			КонецЕсли;
			
			Если Параметр.Вид = ШаблоныПечатиОфисныхДокументов.ВидПараметраИзображение() Тогда
				ДобавляемыеКартинкиДокумента.Добавить(Параметр.Имя, Параметр.Представление);
			КонецЕсли;
			
		КонецЕсли;
		
		НайтиДобавляемыеПараметры(ДобавляемыеПараметрыДокумента, ДобавляемыеПараметрыТаблицыДокумента, ДобавляемыеКартинкиДокумента, Параметр.ПолучитьЭлементы());
		
		Параметр.Добавить = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьПараметрыВФайлСервер()
	
	ДанныеФайла = ДанныеФайла(Объект.ФайлШаблон, УникальныйИдентификатор, Ложь);
	
	Если ДанныеФайла.ФайлРедактируетТекущийПользователь Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Для добавления параметров необходимо завершить редактирование этого файла.'"));
		Возврат Ложь;
	ИначеЕсли ЗначениеЗаполнено(ДанныеФайла.Редактирует) Тогда
		ДатаЗаема = ?(ЗначениеЗаполнено(ДанныеФайла.ДатаЗаема), 
			" " + НСтр("ru='с'") + " " + Формат(ДанныеФайла.ДатаЗаема, "ДЛФ=ДВ"), "");
		
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'Файл ""%1""
					|уже занят для редактирования пользователем
					|""%2""%3.'"),
				Строка(ДанныеФайла.Ссылка), Строка(ДанныеФайла.Редактирует), ДатаЗаема));
		Возврат Ложь;
	КонецЕсли;
	
	СписокДобавляемыхПараметровДокумента = Новый СписокЗначений;
	СписокДобавляемыхПараметровТаблицыДокумента = Новый СписокЗначений;
	СписокДобавляемыхКартинокДокумента = Новый СписокЗначений;
	НайтиДобавляемыеПараметры(СписокДобавляемыхПараметровДокумента, СписокДобавляемыхПараметровТаблицыДокумента, СписокДобавляемыхКартинокДокумента);
	
	Если СписокДобавляемыхПараметровДокумента.Количество() = 0
		И СписокДобавляемыхПараметровТаблицыДокумента.Количество() = 0
		И СписокДобавляемыхКартинокДокумента.Количество() = 0 Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Не выбрано ни одного параметра для добавления.'"));
		Возврат Ложь;
	КонецЕсли;
	
	ОписаниеПараметров = ПолучитьИзВременногоХранилища(ОписаниеПараметровСсылка);
	ДобавляемыеПараметры = Новый Структура;
	ДобавляемыеПараметры.Вставить("ПараметрыДокумента", СписокДобавляемыхПараметровДокумента);
	ДобавляемыеПараметры.Вставить("ПараметрыТаблицы", СписокДобавляемыхПараметровТаблицыДокумента);
	ДобавляемыеПараметры.Вставить("ПараметрыКартинки", СписокДобавляемыхКартинокДокумента);
	
	ШаблоныПечатиОфисныхДокументов.ДобавитьПараметрыВШаблон(Объект.ФайлШаблон, ОписаниеПараметров, ДобавляемыеПараметры, УникальныйИдентификатор);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьКнопок(РедактируетФайл = Неопределено)
	
	Если РедактируетФайл = Неопределено Тогда
		РедактируетФайл = ЗначениеРеквизита(Объект.ФайлШаблон, "Редактирует");
	КонецЕсли;
	
	Элементы.РедактироватьФайл.Доступность = НЕ (ЗначениеЗаполнено(РедактируетФайл) И РедактируетФайл <> ТекущийПользователь);
	Элементы.ЗавершитьРедактированиеФайла.Доступность = ЗначениеЗаполнено(РедактируетФайл) И РедактируетФайл = ТекущийПользователь;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзмененныеФорматыВОбъект(ТекущийОбъект)
	
	Для каждого ИзмененныйФормат Из ИзмененныеФорматы Цикл
		
		Строка = ТекущийОбъект.СвойстваПараметровШаблона.Найти(ИзмененныйФормат.Ключ, "Параметр");
		
		Если Строка = Неопределено Тогда
			Строка = ТекущийОбъект.СвойстваПараметровШаблона.Добавить();
			Строка.Параметр = ИзмененныйФормат.Ключ;
		КонецЕсли;
		
		Строка.Формат = ИзмененныйФормат.Формат;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДобавлятьИзображения()
	
	Возврат РасширениеВыбранногоФайла = "docx";
	
КонецФункции

#Область РаботаСФайлами

&НаКлиенте
Процедура НачатьДобавлениеФайла(Продолжение)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВыполнитьОбработкуОповещения(Продолжение);
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
		|Добавление файла возможно только после записи данных.
		|Данные будут записаны.'");
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьДобавлениеФайлаПродолжение", ЭтотОбъект, Продолжение);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьДобавлениеФайлаПродолжение(Результат, Продолжение) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	ВыполнитьОбработкуОповещения(Продолжение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, УникальныйИдентификатор, ФильтрФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеретаскиваниеФайлаЗавершение(Результат, ПараметрыПеретаскивания) Экспорт
	
	МассивИменФайлов = Новый Массив;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Файл")
		И ПараметрыПеретаскивания.Значение.ЭтоФайл() Тогда
		ПеретаскиваемыйФайл = ПараметрыПеретаскивания.Значение;
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Если ПараметрыПеретаскивания.Значение.Количество() = 1
			И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Файл")
			И ПараметрыПеретаскивания.Значение[0].ЭтоФайл() Тогда
			ПеретаскиваемыйФайл = ПараметрыПеретаскивания.Значение[0];
		КонецЕсли;
	Иначе
		ПеретаскиваемыйФайл = Неопределено;
	КонецЕсли;
	
	Если ПеретаскиваемыйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьФайлПодходящегоФормата(ПеретаскиваемыйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменФайлов.Добавить(ПеретаскиваемыйФайл.ПолноеИмя);
	РаботаСФайламиСлужебныйКлиент.ДобавитьФайлыПеретаскиванием(Объект.Ссылка, УникальныйИдентификатор, МассивИменФайлов);
	
КонецПроцедуры

&НаСервере
Функция ФайлРедактируетсяТекущимПользователем()
	
	РедактируетФайл = ЗначениеРеквизита(Объект.ФайлШаблон, "Редактирует");
	Возврат ЗначениеЗаполнено(РедактируетФайл) И РедактируетФайл = ТекущийПользователь;
	
КонецФункции

&НаСервере
Функция РасширениеПрисоединенногоФайла(ПрисоединенныйФайл)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПрисоединенныйФайл, "Расширение");
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеФайла(ПрисоединенныйФайл, УникальныйИдентификатор, ПолучатьСсылкуНаДвоичныеДанные = Истина)
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ИдентификаторФормы = УникальныйИдентификатор;
	ДополнительныеПараметры.ПолучатьСсылкуНаДвоичныеДанные = ПолучатьСсылкуНаДвоичныеДанные;
	
	Возврат РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл, ДополнительныеПараметры);
	
КонецФункции

#КонецОбласти

#КонецОбласти

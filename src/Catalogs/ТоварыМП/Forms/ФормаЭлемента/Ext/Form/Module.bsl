
#Область ОбщегоНазначения

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	АвтоЗаголовок = Ложь;
	
	Если Объект.Вид = Перечисления.ВидыТоваровМП.Услуга Тогда
		Если Объект.Ссылка.Пустая() Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Услуга (новый)';en='Service (new)'");
		ИначеЕсли Объект.ПометкаУдаления Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Услуга (к удалению)';en='Service (removed)'");
		Иначе
			ЭтаФорма.Заголовок = НСтр("ru='Услуга';en='Service'");
		КонецЕсли;
	Иначе
		Если Объект.Ссылка.Пустая() Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Товар (новый)';en='Item (new)'");
		ИначеЕсли Объект.ПометкаУдаления Тогда
			ЭтаФорма.Заголовок = НСтр("ru='Товар (к удалению)';en='Item (removed)'");
		Иначе
			ЭтаФорма.Заголовок = НСтр("ru='Товар';en='Item'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОстатка()
	
	Если Объект.Ссылка.Пустая()
		ИЛИ Объект.Вид = Перечисления.ВидыТоваровМП.Услуга Тогда
		Элементы.ТекущийОстаток.Видимость = Ложь;
	Иначе
		Элементы.ТекущийОстаток.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРеквизитовНалога()
	
	Если Справочники.ТоварыМП.ИспользуетсяНовыйВариантУказанияСтавкиНалога() Тогда
		Элементы.СтавкаНДС.Видимость = Ложь;
		Элементы.СтавкаНалога.Видимость = Истина;
		НазваниеНалога = ОбщегоНазначенияМПСервер.НазваниеНалога();
		Элементы.СтавкаНалога.Заголовок = НазваниеНалога + " (%)";
	Иначе
		Элементы.СтавкаНДС.Видимость = Истина;
		Элементы.СтавкаНалога.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики
	
	УстановитьПараметрыФото();
	УстановитьЗаголовокФормы();
	
	#Если МобильноеПриложениеСервер Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульОбменМобильноеПриложениеВызовСервера = Вычислить("ОбменМобильноеПриложениеВызовСервера");
		// АПК:488-вкл
		Если ТипЗнч(МодульОбменМобильноеПриложениеВызовСервера) = Тип("ОбщийМодуль") Тогда
			ЭтоМногопользовательскийРежим = МодульОбменМобильноеПриложениеВызовСервера.ЭтоМногопользовательскийРежим();
		КонецЕсли;
	#Иначе
		ЭтоМногопользовательскийРежим = Истина;
	#КонецЕсли
	
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.ЦенаЗакупки.Видимость = Ложь;
	Иначе
		ТекущийОстаток = РегистрыНакопления.ОстаткиТоваровМП.ПолучитьКоличествоОстаткаТовара(Объект.Ссылка);
		ЦенаПродажи = РегистрыСведений.ЦеныТоваровМП.ПолучитьЦенуТовара(Объект.Ссылка);
		Если ЭтоМногопользовательскийРежим Тогда
			Элементы.ЦенаЗакупки.Видимость = Ложь;
		Иначе
			ЦенаЗакупки = РегистрыСведений.ЦеныПоставщиковМП.ПолучитьПоследнююЦенуЗакупки(Объект.Ссылка);
			Если ЦенаЗакупки = 0 Тогда 
				Элементы.ЦенаЗакупки.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьОстатка();
	УстановитьВидимостьРеквизитовНалога();
	
	ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	// Ролей пока нет
	// Если ТекущийПользователь.Роли.Содержит(Метаданные.Роли.НоменклатураТолькоПросмотрМП) Тогда
	// 	Элементы.ЦенаПродажи.Доступность = Ложь;
	// КонецЕсли;
	//
	// Если ТекущийПользователь.Роли.Содержит(Метаданные.Роли.НоменклатураПросмотрИРедактированиеМП) Тогда
	// 	Элементы.ЦенаПродажи.Доступность = Истина;
	// КонецЕсли;
	
	// Меняем оформление под веб клиент
	#Если НЕ МобильноеПриложениеСервер Тогда
		Элементы.ОтсканироватьШтрихкод.Видимость = Ложь;
		ЭтаФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		Элементы.ЦенаПродажи.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		Элементы.СтавкаНДС.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		Элементы.ТекущийОстаток.РастягиватьПоГоризонтали = Ложь;
		Элементы.ТекущийОстаток.Ширина = 4;
		Элементы.ЦенаПродажи.Ширина = 39;
		Элементы.КартинкаСсылка.РастягиватьПоГоризонтали = Ложь;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЦенаПродажиСтарая = РегистрыСведений.ЦеныТоваровМП.ПолучитьЦенуТовара(Объект.Ссылка);
	Если ЦенаПродажи <> ЦенаПродажиСтарая Тогда
		НоваяЗапись = РегистрыСведений.ЦеныТоваровМП.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.Товар = Объект.Ссылка;
		НоваяЗапись.Цена = ЦенаПродажи;
		НоваяЗапись.Записать(Истина);
	КонецЕсли;
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Если ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмойНаМобильном") Тогда
			Возврат;
		КонецЕсли;
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульСинхронизацияПушУведомленияМПУНФ = Вычислить("СинхронизацияПушУведомленияМПУНФ");
		// АПК:488-вкл
		Если ТипЗнч(МодульСинхронизацияПушУведомленияМПУНФ) = Тип("ОбщийМодуль") Тогда
			МодульСинхронизацияПушУведомленияМПУНФ.ОтправитьПушУведомление("001");
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьЗаголовокФормы();
	УстановитьВидимостьОстатка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Объект.НужноПолучитьКартинкуССервера Тогда
			Элементы.ДекорацияФото.Видимость = Ложь;
			Элементы.КартинкаСсылка.Видимость = Ложь;
			Элементы.ДекорацияЗагрузка.Видимость = Истина;
			
			ПодключитьОбработчикОжидания(
			"Подключаемый_ПолучитьКартинкуССервера", 0.5, Истина
			);
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ДекорацияФотоНажатие(Элемент)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + "." + Элемент.Имя + ".Нажатие");
	// Конец Сбор статистики
	
	СтандартнаяОбработка = Ложь;
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("TakeAPhoto", НСтр("ru='Сфотографировать';en='Take a photo'"));
		Кнопки.Добавить("ChooseFromPhotos", НСтр("ru='Выбрать из галереи';en='Choose from photos'"));
		Кнопки.Добавить("Cancel", НСтр("ru='Отмена';en='Cancel'"));
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, "" , Кнопки, 0, "Cancel",ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
		
	#Иначе
		
		Оповещение = Новый ОписаниеОповещения("ДобавитьФото", ЭтотОбъект);
		НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияФотоНажатиеЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ВыборФайла = ДополнительныеПараметры.ВыборФайла;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		//ИнформацияОФайле = ПоместитьФайлВХранилище(ВыборФайла.ПолноеИмяФайла, УникальныйИдентификатор);
		ПоместитьФайлВХранилище(ВыборФайла.ПолноеИмяФайла, УникальныйИдентификатор);
		//ЗаполнитьКартинкуНаСервере(ИнформацияОФайле.АдресФайлаВоВременномХранилище);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	
	Номенклатура = ОбщегоНазначенияМПСервер.ПолучитьНоменклатуруПоШтрихкоду(Объект.Штрихкод);
	Если НЕ ЗначениеЗаполнено(Номенклатура)
		ИЛИ Номенклатура = Объект.Ссылка Тогда
	Иначе
		Объект.Штрихкод = "";
		ПоказатьВопросОткрытьНоменклатуру(Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, НСтр("ru='Элемент справочника еще не записан.';en='The element of the directory has not been recorded yet.'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьФото(Подключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ Подключено Тогда
		Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстСообщения = НСтр("ru = 'Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	// Вызов диалога выбора файлов.
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru = 'Выберите файл'");
	Диалог.МножественныйВыбор = Ложь;
	Фильтр = РаботаСФайламиУНФКлиентСервер.ФильтрФайловИзображений();
	Диалог.Фильтр = Фильтр;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоместитьФотоСРасширениемОповещение", ЭтотОбъект);
	НачатьПомещениеФайлов(ОписаниеОповещения,, Диалог, Истина, УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура НачатьУстановкуРасширенияРаботыСФайламиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		НачатьУстановкуРасширенияРаботыСФайлами();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПоместитьФотоСРасширениемОповещение(ВыбранныеФайлы, ОбработчикЗавершения) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмя = ВыбранныеФайлы.Получить(0).ПолноеИмя;
	ПолноеИмяФайла = ?(ПустаяСтрока(ПолноеИмя), ВыбранныеФайлы.Получить(0).Имя, ПолноеИмя);
	АдресХранилища = ВыбранныеФайлы.Получить(0).Хранение;
	
	ЗаполнитьКартинкуНаСервере(АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/razdel-tovary/spisok-tovarov/");
	// АПК:534-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	УдалитьФото();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтсканироватьШтрихкод(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	#Если МобильноеПриложениеКлиент Тогда
		ОбщегоНазначенияМПКлиент.ОтсканироватьШтрихкод(Новый ОписаниеОповещения("ОбработатьШтрихкод", ЭтаФорма), ЭтаФорма);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Результат = "ChooseFromPhotos" Тогда
			
			Если ОбщегоНазначенияМПВызовСервера.ВерсияОС() = "iOS" Тогда
				ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
				Фильтр = НСтр("ru = 'Картинка jpg (.jpg)|*.jpg|Картинка png (.png)|*.png'|Картинка (*.bmp)|*.bmp;"
				"en = 'Image jpg (.jpg)|*.jpg|Image png (.png)|*.png|Image (*.bmp)|*.bmp'");
				ДиалогВыбораФайла.Фильтр = Фильтр;
				ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите изображение'; en = Select image");
				ДиалогВыбораФайла.ПредварительныйПросмотр = Истина;
				ДиалогВыбораФайла.ИндексФильтра = 0;
				Если ДиалогВыбораФайла.Выбрать() Тогда
					ВыбранныеФайлы = ДиалогВыбораФайла.ВыбранныеФайлы;
					Если ВыбранныеФайлы.Количество() > 0 Тогда
						ИмяФайла = ВыбранныеФайлы[0];
						// ФайлИнфо = ПоместитьФайлВХранилище(ИмяФайла, УникальныйИдентификатор);
						ПоместитьФайлВХранилище(ИмяФайла, УникальныйИдентификатор);
						// Если ФайлИнфо.ФайлПомещенВХранилище Тогда
						//	 ЗаполнитьКартинкуНаСервере(ФайлИнфо.АдресФайлаВоВременномХранилище);
						// КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Запуск = Новый ЗапускПриложенияМобильногоУстройства();
				Запуск.Действие = "android.intent.action.GET_CONTENT";
				Запуск.Тип = "image/*";
				Запуск.ДополнительныеДанные.Добавить("LOCAL_ONLY", True);
				Результат = Запуск.Запустить(Истина);
				Если Результат <> -1 Тогда
					Возврат;
				КонецЕсли;
				ПутьКФото = Запуск.Данные;
				Если ПутьКФото <> Неопределено Тогда
					// ФайлИнфо = ПоместитьФайлВХранилище(ПутьКФото, УникальныйИдентификатор);
					ПоместитьФайлВХранилище(ПутьКФото, УникальныйИдентификатор);
					// Если ФайлИнфо.ФайлПомещенВХранилище Тогда
					// 	ЗаполнитьКартинкуНаСервере(ФайлИнфо.АдресФайлаВоВременномХранилище);
					// КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли Результат = "TakeAPhoto" Тогда
			Фото = СредстваМультимедиа.СделатьФотоснимок(, Новый РазрешениеКамерыУстройства(640, 480));
			Если Фото <> Неопределено Тогда
				АдресФайлаВоВременномХранилище = ПоместитьВоВременноеХранилище(Фото.ПолучитьДвоичныеДанные());
				ЗаполнитьКартинкуНаСервере(АдресФайлаВоВременномХранилище);
			КонецЕсли;
		КонецЕсли;
		
	#EndIf
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКартинкуНаСервере(АдресФайлаВоВременномХранилище)
	
	Если АдресФайлаВоВременномХранилище <> Ложь Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);
	КонецЕсли;
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.Картинка = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
	ТекОбъект.ДополнительныеСвойства.Вставить("ЗапретитьПовторныйЗапускОбмена", Истина);
	ТекОбъект.ДополнительныеСвойства.Вставить("ЗапретитьСинхронизациюОбъекта", Истина);
	ТекОбъект.Записать();
	Если АдресФайлаВоВременномХранилище <> Ложь Тогда
		ТекОбъект.КартинкаСсылка = ПолучитьНавигационнуюСсылку(ТекОбъект, "Картинка");
	КонецЕсли;
	ТекОбъект.ДополнительныеСвойства.Вставить("ЗапретитьПовторныйЗапускОбмена", Истина);
	ТекОбъект.ДополнительныеСвойства.Вставить("ЗапретитьСинхронизациюОбъекта", Истина);
	ТекОбъект.Записать();
	ЗначениеВДанныеФормы(ТекОбъект, Объект);
	
	УстановитьПараметрыФото();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьФайлВХранилище(Знач ПутьКФайлу, Знач ИдентификаторФормы) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ФайлПомещенВХранилище", Ложь);
	
	Файл = Новый Файл(ПутьКФайлу);
	
	ПомещаемыеФайлы = Новый Массив;
	ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ПутьКФайлу));
	ПомещенныеФайлы = Новый Массив;
	
	НачатьПомещениеФайлов(Новый ОписаниеОповещения("ПоместитьФайлВХранилищеЗавершение", ЭтотОбъект, Новый Структура("ПомещенныеФайлы, ПутьКФайлу, Результат, Файл", ПомещенныеФайлы, ПутьКФайлу, Результат, Файл)), ПомещаемыеФайлы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьФайлВХранилищеЗавершение(ПомещенныеФайлы1, ДополнительныеПараметры) Экспорт
	
	ПомещенныеФайлы = ДополнительныеПараметры.ПомещенныеФайлы;
	ПутьКФайлу = ДополнительныеПараметры.ПутьКФайлу;
	Результат = ДополнительныеПараметры.Результат;
	Файл = ДополнительныеПараметры.Файл;
	
	// Если НЕ ПомещенныеФайлы1 Тогда
	// 	ОбщегоНазначенияМПКлиентСервер.СообщитьПользователю(
	// 	ОбщегоНазначенияМПКлиентСервер.ПодставитьПараметрыВСтроку(
	// 	НСтр("ru='Ошибка при помещении файла"
	// 	"""%1"""
	// 	"во временное хранилище.';en='Error when putting files"
	// 	"""% 1"""
	// 	"to temporary storage.'"),
	// 	ПутьКФайлу) );
	// 	//Возврат Результат;
	// КонецЕсли;
	
	Результат.Вставить("ФайлПомещенВХранилище", Истина);
	// Результат.Вставить("ДатаМодификацииУниверсальная",   Файл.ПолучитьУниверсальноеВремяИзменения());
	Результат.Вставить("АдресФайлаВоВременномХранилище", ПомещенныеФайлы1[0].Хранение);
	Результат.Вставить("Расширение",                     Прав(Файл.Расширение, СтрДлина(Файл.Расширение)-1));
	Результат.Вставить("Имя", Файл.Имя);
	Результат.Вставить("ИмяБезРасширения", Файл.ИмяБезРасширения);
	// Возврат Результат;

	ЗаполнитьКартинкуНаСервере(Результат.АдресФайлаВоВременномХранилище);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыФото()
	
	Если ЗначениеЗаполнено(Объект.КартинкаСсылка) Тогда
		Элементы.ДекорацияФото.Видимость = Ложь;
		Элементы.КартинкаСсылка.Видимость = Истина;
	Иначе
		Элементы.ДекорацияФото.Видимость = Истина;
		Элементы.КартинкаСсылка.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УдалитьФото()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.Картинка = Неопределено;
	ТекОбъект.КартинкаСсылка = "";
	ТекОбъект.ДополнительныеСвойства.Вставить("ЗапретитьПовторныйЗапускОбмена", Истина);
	ТекОбъект.Записать();
	ЗначениеВДанныеФормы(ТекОбъект, Объект);
	
	УстановитьПараметрыФото();
	
КонецФункции

&НаКлиенте
Процедура ПолученШтрихкод(Штрихкод) Экспорт
	
	ОбработатьШтрихкод(Штрихкод, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод, Результат, Сообщение = "", ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат Тогда
		
		#Если МобильноеПриложениеКлиент Тогда
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		#КонецЕсли
		
		Номенклатура = ОбщегоНазначенияМПСервер.ПолучитьНоменклатуруПоШтрихкоду(Штрихкод);
		Если НЕ ЗначениеЗаполнено(Номенклатура) ИЛИ Номенклатура = Объект.Ссылка Тогда
			Объект.Штрихкод = Штрихкод;
			Модифицированность = Истина;
			ОбновитьОтображениеДанных();
		Иначе
			ПоказатьВопросОткрытьНоменклатуру(Номенклатура);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОткрытьНоменклатуру(Номенклатура)
	
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(НСтр("ru='Открыть';en='Open'"));
	СписокКнопок.Добавить(НСтр("ru='Отмена';en='Cancel'"));
	
	ОчиститьСообщения();
	Текст = НСтр("ru='Этот штрихкод уже присвоен номенклатуре ""';en='This bar code is already assigned to the nomenclature ""'") + Номенклатура + НСтр("ru='"". Открыть?';en='"". Open?'");
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Номенклатура", Номенклатура);
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросОткрытьНоменклатуруЗавершение", ЭтотОбъект,ДополнительныеПараметры);
	ПоказатьВопрос(Оповещение, Текст, СписокКнопок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОткрытьНоменклатуруЗавершение(Результат, Параметры) Экспорт 
	
	Если Результат = НСтр("ru='Открыть';en='Open'") Тогда
		
		ПараметрыОтбора = Новый Структура("Ключ", Параметры.Номенклатура);
		ОткрытьФорму("Справочник.ТоварыМП.ФормаОбъекта", ПараметрыОтбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолучитьКартинкуССервера()
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ПолучитьКартинкуССервераНаСервере();
		
	#КонецЕсли

КонецПроцедуры

&НаСервере
Процедура ПолучитьКартинкуССервераНаСервере()
	
	#Если МобильноеПриложениеСервер Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		СоединениеСЦБУстановлено = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СинхронизацияВключенаМП");
		
		ЕстьОшибки = Ложь;
		Если НЕ СоединениеСЦБУстановлено Тогда
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		Если НЕ ЕстьОшибки Тогда
			
			// АдресФотоВоВременномХранилище = Справочники.Товары.ПолучитьФотоССервера(Объект.Ссылка);
			АдресФотоВоВременномХранилище = Справочники.ТоварыМП.ПолучитьКартинкуССервера(Объект.Ссылка);
			
			Если АдресФотоВоВременномХранилище = Неопределено Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			Если АдресФотоВоВременномХранилище = Ложь Тогда
				Объект.НужноПолучитьКартинкуССервера = Ложь;
				Объект.КартинкаСсылка = "";
				Элементы.ДекорацияЗагрузка.Видимость = Ложь;
				ЗаполнитьКартинкуНаСервере(АдресФотоВоВременномХранилище);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.ДекорацияЗагрузка.Видимость = Ложь;
		УстановитьПараметрыФото();
		
		Если НЕ ЕстьОшибки Тогда
			Объект.НужноПолучитьКартинкуССервера = Ложь;
			ЗаполнитьКартинкуНаСервере(АдресФотоВоВременномХранилище);
		КонецЕсли;
		
	#КонецЕсли

	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияСоздание(Элемент, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, НСтр("ru='Элемент справочника еще не записан.';en='The element of the directory has not been recorded yet.'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
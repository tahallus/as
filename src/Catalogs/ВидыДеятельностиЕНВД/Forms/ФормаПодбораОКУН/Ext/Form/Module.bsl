
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗакрыватьПриВыборе = Истина;
	
	Если Параметры.МассивОКУНОВ <> Неопределено Тогда
		Для Каждого ТекущаяСтрока Из Параметры.МассивОКУНОВ Цикл
			ВыбранныеОКУН.Добавить().ОКУНЗначение = ТекущаяСтрока;
		КонецЦикла;
	КонецЕсли;
	
	КлассификаторОКУН.Параметры.УстановитьЗначениеПараметра("ПараметрКОД", Параметры.КодПД);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ВыбранныеОКУН.НайтиСтроки(Новый Структура("ОКУНЗначение", ВыбранноеЗначение));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Такой код уже выбран'"));
	Иначе
		НоваяСтрока = ВыбранныеОКУН.Добавить();
		НоваяСтрока.ОКУНЗначение = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыбранныеОКУН

&НаКлиенте
Процедура ВыбранныеОКУНВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Исключить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеОКУНПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеОКУНПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Добавить(Элемент);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКлассификаторОКУН

&НаКлиенте
Процедура КлассификаторОКУНВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Элементы.КлассификаторОКУН.ТекущиеДанные.Ссылка;
	
	НайденныеСтроки = ВыбранныеОКУН.НайтиСтроки(Новый Структура("ОКУНЗначение", ВыбранноеЗначение));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Такой код уже выбран'"));
	Иначе
		НоваяСтрока = ВыбранныеОКУН.Добавить();
		НоваяСтрока.ОКУНЗначение = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторОКУНПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторОКУНПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Исключить(Элемент);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Добавить(Команда)
	Для Каждого ТекущаяСтрока Из Элементы.КлассификаторОКУН.ВыделенныеСтроки Цикл
		НайденныеСтроки = ВыбранныеОКУН.НайтиСтроки(Новый Структура("ОКУНЗначение", ТекущаяСтрока));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
		Иначе
			НоваяСтрока = ВыбранныеОКУН.Добавить();
			НоваяСтрока.ОКУНЗначение = ТекущаяСтрока;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Исключить(Команда)
	
	Для Каждого ТекущаяСтрока Из Элементы.ВыбранныеОКУН.ВыделенныеСтроки Цикл
		ВыбранныеОКУН.Удалить(ВыбранныеОКУН.НайтиПоИдентификатору(ТекущаяСтрока));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	МассивУдаляемых = Новый Массив;
	
	Для Каждого Строка Из ВыбранныеОКУН Цикл
		Если НЕ ЗначениеЗаполнено(Строка.ОКУНЗначение) Тогда
			МассивУдаляемых.Добавить(строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из МассивУдаляемых Цикл
		ВыбранныеОКУН.Удалить(Строка);
	КонецЦикла;
	
	Если ВыбранныеОКУН.Количество() > 0 Тогда
		Результат = Новый Массив;
		
		Для Каждого Строка Из ВыбранныеОКУН Цикл
			Результат.Добавить(Строка.ОКУНЗначение);
		КонецЦикла;
	Иначе
		Результат = Новый Массив;
	КонецЕсли;
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

#КонецОбласти

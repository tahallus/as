
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Параметры.Свойство("ВидКарточки") Тогда
			Объект.ВидКарточки = Параметры.ВидКарточки;
		Иначе
			Объект.ВидКарточки = Перечисления.ВидыКарточекАнализаБизнеса.КонтрольПоказателей;
		КонецЕсли;
		
	КонецЕсли;
	
	НастроитьВидимостьЭлементовФормы();
	ВосстановитьФорматированныйТекстИзХранилища();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПериодичностьПоПериоду();
	УстановитьОтборФормыВыбораПоказателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		Объект.Наименование = Объект.ПерваяСтрокаЗаголовка + "_" + Объект.ВтораяСтрокаЗаголовка + "_" + Строка(Объект.ПоказательБизнеса);
		
		Если ПроверитьЗаполнение() Тогда
			ЗаписатьИЗакрытьФорму();
		Иначе
			Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемПродолжение", ЭтотОбъект, Отказ);
			ТекстВопроса = НСтр("ru = 'Для сохранения необходимо заполнить все обязательные поля. Продолжить заполнение карточки?'");
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемПродолжение(РезультатДиалога, Отказ) Экспорт
	
	Если РезультатДиалога = КодВозвратаДиалога.Нет Тогда
		ЭтаФорма.Модифицированность = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьФорму()
	
	Записать();
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Ссылка", Объект.Ссылка);
		ПараметрыОповещения.Вставить("ВидКарточки", Объект.ВидКарточки);
		Оповестить("ЗаписьКарточкиАнализаБизнеса", ПараметрыОповещения);
	КонецЕсли;
	
	ЭтаФорма.Модифицированность = Ложь;
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьФорматированныйТекстВХранилище(ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантПроверкиПриИзменении(Элемент)
	
	Если Объект.ВариантПроверки = ПредопределенноеЗначение("Перечисление.ВариантыПроверокАнализаБизнеса.Динамика") Тогда
		
		Элементы.ГруппаВидНастройкиСравнение.Видимость = Ложь;
		Элементы.ГруппаНастройкиДинамики.Видимость = Истина;
		Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.Видимость = Ложь;
		Объект.ЗначениеДляСравнения = Неопределено;
		
	ИначеЕсли Объект.ВариантПроверки = ПредопределенноеЗначение("Перечисление.ВариантыПроверокАнализаБизнеса.СравнениеСПоказателем") Тогда
		
		Элементы.ГруппаВидНастройкиСравнение.Видимость = Истина;
		Элементы.ГруппаНастройкиДинамики.Видимость = Ложь;
		Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.Видимость = Истина;
		Объект.ЗначениеДляСравнения = ПредопределенноеЗначение("Справочник.ПоказателиБизнеса.ПустаяСсылка");
		
		УстановитьОтборФормыВыбораПоказателя();
		
	Иначе // Сравнение с числом
		
		Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.Видимость = Ложь;
		Элементы.ГруппаВидНастройкиСравнение.Видимость = Истина;
		Элементы.ГруппаНастройкиДинамики.Видимость = Ложь;
		Объект.ЗначениеДляСравнения = 0;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	
	УстановитьОтборФормыВыбораПоказателя();
	
	Если ЗначениеЗаполнено(Объект.ЗначениеДляСравнения) 
		И ВидОтчетаПоказателя(Объект.ПоказательБизнеса) <> ВидОтчетаПоказателя(Объект.ЗначениеДляСравнения) Тогда
		
		Объект.ЗначениеДляСравнения = ПредопределенноеЗначение("Справочник.ПоказателиБизнеса.ПустаяСсылка");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОткрытьФормуРедактированияОписание(Команда)
	
	ИмяРеквизитаФормы = "ТекстОписанияПроверки";
	ОткрытьФормуРедактированияФорматированногоТекста(ИмяРеквизитаФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФормуРедактированияПлохойРезультат(Команда)
	
	ИмяРеквизитаФормы = "ТекстПлохойРезультат";
	ОткрытьФормуРедактированияФорматированногоТекста(ИмяРеквизитаФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФормуРедактированияХорошийРезультат(Команда)
	
	ИмяРеквизитаФормы = "ТекстХорошийРезультат";
	ОткрытьФормуРедактированияФорматированногоТекста(ИмяРеквизитаФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьВидимостьЭлементовФормы()
	
	Если Объект.ВидКарточки = Перечисления.ВидыКарточекАнализаБизнеса.КонтрольПоказателей Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Я помогу настроить карточку удобного для контроля показателя.'");
		ТекущаяСтраница = Элементы.ГруппаНастройкаПроверка;
		
		Если Объект.ВариантПроверки = Перечисления.ВариантыПроверокАнализаБизнеса.Динамика Тогда
			Элементы.ГруппаВидНастройкиСравнение.Видимость = Ложь;
			Элементы.ГруппаНастройкиДинамики.Видимость = Истина;
			Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.Видимость = Ложь;
		ИначеЕсли Объект.ВариантПроверки = Перечисления.ВариантыПроверокАнализаБизнеса.СравнениеСФиксированнымЗначением Тогда
			Элементы.ГруппаВидНастройкиСравнение.Видимость = Истина;
			Элементы.ГруппаНастройкиДинамики.Видимость = Ложь;
			Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.Видимость = Ложь;
			Элементы.ПерваяСтрокаЗаголовка.Заголовок = НСтр("ru = '4. Заполнить заголовок карточки'");
			Элементы.ПерваяСтрокаЗаголовка.ПодсказкаВвода = НСтр("ru = '20 символов'");
			Элементы.ПерваяСтрокаЗаголовка.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20));
		Иначе // Сравнение с показателем
			Элементы.ГруппаВидНастройкиСравнение.Видимость = Истина;
			Элементы.ГруппаНастройкиДинамики.Видимость = Ложь;
			Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.Видимость = Истина;
			Элементы.ВтораяСтрокаЗаголовкаСравнениеСПоказателем.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20));
			Элементы.ПерваяСтрокаЗаголовка.Заголовок = НСтр("ru = '4. Заполнить заголовки карточки'");
			Элементы.ПерваяСтрокаЗаголовка.ПодсказкаВвода = НСтр("ru = '15 символов'");
			Элементы.ПерваяСтрокаЗаголовка.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(15));
		КонецЕсли;
		
	Иначе // Цели бизнеса
		ТекстЗаголовка = НСтр("ru = 'Я помогу настроить карточку цели, чтобы было удобнее следить за ее выполнением.'");
		ТекущаяСтраница = Элементы.ГруппаНастройкаЦель;
		Элементы.ГруппаНастройкаПроверка.Видимость = Ложь;
		Элементы.ГруппаВидНастройкиСравнение.Видимость = Истина;
		Элементы.ГруппаНастройкиДинамики.Видимость = Ложь;
		Элементы.ПерваяСтрокаЗаголовкаЦель.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10));
		Элементы.ВтораяСтрокаЗаголовка.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10));
	КонецЕсли;
	
	 Элементы.ЗаголовокНастройкиКарточки.Заголовок = ТекстЗаголовка;
	 Элементы.ГруппаВариантыОтображения.ТекущаяСтраница = ТекущаяСтраница;
	 
КонецПроцедуры

&НаСервере
Процедура ВосстановитьФорматированныйТекстИзХранилища()
	
	Если Объект.ВидКарточки <> Перечисления.ВидыКарточекАнализаБизнеса.КонтрольПоказателей Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектСправочника = РеквизитФормыВЗначение("Объект");
	
	ТекстОписаниеПроверкиИзХранилища = ОбъектСправочника.ТекстОписаниеПроверки.Получить();
	Если ТипЗнч(ТекстОписаниеПроверкиИзХранилища) = Тип("ФорматированныйДокумент") Тогда
		ТекстОписанияПроверки = ТекстОписаниеПроверкиИзХранилища;
	КонецЕсли;
	
	ТекстПоложительныйРезультат = ОбъектСправочника.ТекстПоложительныйРезультат.Получить();
	Если ТипЗнч(ТекстПоложительныйРезультат) = Тип("ФорматированныйДокумент") Тогда
		ТекстХорошийРезультат = ТекстПоложительныйРезультат;
	КонецЕсли;
	
	ТекстОтрицательныйРезультат = ОбъектСправочника.ТекстОтрицательныйРезультат.Получить();
	Если ТипЗнч(ТекстОтрицательныйРезультат) = Тип("ФорматированныйДокумент") Тогда
		ТекстПлохойРезультат = ТекстОтрицательныйРезультат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьФорматированныйТекстВХранилище(ТекущийОбъект)
	
	Если Объект.ВидКарточки <> Перечисления.ВидыКарточекАнализаБизнеса.КонтрольПоказателей Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект.ТекстОписаниеПроверки 	  = Новый ХранилищеЗначения(ТекстОписанияПроверки);
	ТекущийОбъект.ТекстПоложительныйРезультат = Новый ХранилищеЗначения(ТекстХорошийРезультат);
	ТекущийОбъект.ТекстОтрицательныйРезультат = Новый ХранилищеЗначения(ТекстПлохойРезультат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОбновитьПериодичностьПоПериоду();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПериодичностьПоПериоду()
	
	Если Объект.ВариантПроверки = ПредопределенноеЗначение("Перечисление.ВариантыПроверокАнализаБизнеса.Динамика") Тогда
		
		Элементы.Периодичность.СписокВыбора.Очистить();
		
		Если Объект.Период = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал") Тогда
			Элементы.Периодичность.ТолькоПросмотр = Истина;
			Элементы.Периодичность.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Периодичность.Месяц"));
			Объект.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц");
		ИначеЕсли Объект.Период = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Полугодие") Тогда
			Элементы.Периодичность.ТолькоПросмотр = Ложь;
			Элементы.Периодичность.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Периодичность.Квартал"));
			Элементы.Периодичность.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Периодичность.Месяц"));
		Иначе // Года
			Элементы.Периодичность.ТолькоПросмотр = Ложь;
			Элементы.Периодичность.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие"));
			Элементы.Периодичность.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Периодичность.Квартал"));
			Элементы.Периодичность.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.Периодичность.Месяц"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияФорматированногоТекста(ИмяРеквизитаФормы)
	
	АдресТекста = ПоместитьВоВременноеХранилище(ЭтаФорма[ИмяРеквизитаФормы], Новый УникальныйИдентификатор);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяРеквизитаФормы", ИмяРеквизитаФормы);
	ПараметрыОткрытия.Вставить("АдресТекста", АдресТекста);
	
	ИмяФормыРедактирования = "Справочник.КарточкиАнализаБизнеса.Форма.ФормаРедактированияФорматированногоТекста";
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыРедактированияФорматированногоТекста", ЭтотОбъект);
	
	ОткрытьФорму(ИмяФормыРедактирования, ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыРедактированияФорматированногоТекста(ПараметрЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ПараметрЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизитаФормы = ПараметрЗакрытия.ИмяРеквизитаФормы;
	ЭтаФорма[ИмяРеквизитаФормы] = ПолучитьИзВременногоХранилища(ПараметрЗакрытия.АдресТекста);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборФормыВыбораПоказателя()
	
	ВременныйМассив = Новый Массив;
	
	Если Объект.ВариантПроверки = ПредопределенноеЗначение("Перечисление.ВариантыПроверокАнализаБизнеса.СравнениеСПоказателем") 
		И ЗначениеЗаполнено(Объект.ПоказательБизнеса) Тогда
		ВременныйМассив.Добавить(Новый ПараметрВыбора("Отбор.ВидОтчета", ВидОтчетаПоказателя(Объект.ПоказательБизнеса)));
	КонецЕсли;
	
	Элементы.ЗначениеДляСравнения.ПараметрыВыбора = Новый ФиксированныйМассив(ВременныйМассив);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидОтчетаПоказателя(Показатель)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Показатель, "ВидОтчета");
КонецФункции

#КонецОбласти



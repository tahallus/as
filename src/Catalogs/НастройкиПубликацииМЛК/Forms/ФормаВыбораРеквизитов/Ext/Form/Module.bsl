
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокРеквизитов(Параметры.НастройкиВыгрузкиРеквизитов, Параметры.ВыбраннаяНоменклатура);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокРеквизитовПриИзменении(Элемент)
	
	СортироватьПоПометке();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ВыбранныеРеквизиты = Новый Структура;
	
	Для каждого Реквизит Из СписокРеквизитов Цикл
		
		Если Реквизит.Пометка Тогда
			ВыбранныеРеквизиты.Вставить(Реквизит.ИмяРеквизита, Реквизит.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Закрыть(ВыбранныеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаполнитьСписокРеквизитов(НастройкиВыгрузкиРеквизитов, ВыбраннаяНоменклатура)
	
	ДоступныеРеквизиты = ПолучитьСписокДоступныхРеквизитов();
	ДополнительныеРеквизиты = ПолучитьСписокДополнительныхРеквизитов(ВыбраннаяНоменклатура);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеРеквизиты, ДополнительныеРеквизиты, Истина);
	
	Если ЗначениеЗаполнено(НастройкиВыгрузкиРеквизитов) Тогда
		СписокВыбранныхРеквизитов = КонструкторМобильногоПриложения.ЧтениеJSONВСтруктуру(НастройкиВыгрузкиРеквизитов);
	Иначе
		СписокВыбранныхРеквизитов = Новый Структура;
	КонецЕсли;
	
	Для каждого ТекущийРеквизит Из ДоступныеРеквизиты Цикл
		
		СвойстваРеквизитаСписка = Неопределено;
		// АПК:1036-выкл проверка орфографии не требуется
		ИмяРеквизита = УбратьЗапрещенныеСимволы(ТекущийРеквизит.ИмяРеквизита, "йцукенгшщзхъфывапролджэячсмитьбю_qwertyuiopasdfghjklzxcvbnm01234567890");
		// АПК:1036-вкл
		ЕстьРеквизит = СписокВыбранныхРеквизитов.Свойство(ИмяРеквизита, СвойстваРеквизитаСписка);
		
		Если ЕстьРеквизит Тогда
			ПредставлениеРеквизита = ?(ЗначениеЗаполнено(СвойстваРеквизитаСписка),
				СвойстваРеквизитаСписка, ТекущийРеквизит.Представление);
			Пометка = Истина;
		Иначе
			ПредставлениеРеквизита = ТекущийРеквизит.Представление;
			Пометка = Ложь;
		КонецЕсли;
		
		НовСтр = СписокРеквизитов.Добавить();
		НовСтр.ИмяРеквизита = ИмяРеквизита;
		НовСтр.Значение = ТекущийРеквизит.Значение;
		НовСтр.Представление = ПредставлениеРеквизита;
		НовСтр.Пометка = Пометка;
		
	КонецЦикла;
	
	СортироватьПоПометке();
	
КонецФункции

&НаСервере
Процедура СортироватьПоПометке()
	
	ТЗРеквизитов = РеквизитФормыВЗначение("СписокРеквизитов");
	ТЗРеквизитов.Сортировать("Пометка Убыв, Значение Возр");
	
	ЗначениеВРеквизитФормы(ТЗРеквизитов, "СписокРеквизитов");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокДоступныхРеквизитов()
	
	МассивРеквизитов = Новый Массив;
	МассивИменРеквизитов = Новый Массив;
	
	МассивИменРеквизитов.Добавить("Вес");
	МассивИменРеквизитов.Добавить("Высота");
	МассивИменРеквизитов.Добавить("ГарантийныйСрок");
	МассивИменРеквизитов.Добавить("Артикул");
	МассивИменРеквизитов.Добавить("Весовой");
	МассивИменРеквизитов.Добавить("Длина");
	МассивИменРеквизитов.Добавить("ЕдиницаИзмерения");
	МассивИменРеквизитов.Добавить("НаименованиеПолное");
	МассивИменРеквизитов.Добавить("Объем");
	МассивИменРеквизитов.Добавить("Поставщик");
	МассивИменРеквизитов.Добавить("Производитель");
	МассивИменРеквизитов.Добавить("Склад");
	МассивИменРеквизитов.Добавить("СтранаПроисхождения");
	МассивИменРеквизитов.Добавить("Ширина");
	МассивИменРеквизитов.Добавить("ЭтоНабор");
	МассивИменРеквизитов.Добавить("ЭтоНовинка");
	
	Для каждого ИмяРеквизита Из МассивИменРеквизитов Цикл
		СтруктураРеквизита = Новый Структура("Значение,ИмяРеквизита,Представление");
		СтруктураРеквизита.Значение = ИмяРеквизита;
		СтруктураРеквизита.ИмяРеквизита = ИмяРеквизита;
		СтруктураРеквизита.Представление = ИмяРеквизита;
		МассивРеквизитов.Добавить(СтруктураРеквизита);
	КонецЦикла;
	
	Возврат МассивРеквизитов;
	
КонецФункции

&НаСервере
Функция ПолучитьСписокДополнительныхРеквизитов(ВыбраннаяНоменклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.КатегорияНоменклатуры.НаборСвойств КАК НаборСвойств
		|ПОМЕСТИТЬ ИспользуемыеНаборыСвойств
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&ВыбраннаяНоменклатура)
		|
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура.КатегорияНоменклатуры.НаборСвойств
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИспользуемыеНаборыСвойств.НаборСвойств КАК НаборСвойств,
		|	ДополнительныеРеквизитыИСведения.Наименование КАК Значение,
		|	ДополнительныеРеквизитыИСведения.Представление КАК Представление,
		|	ДополнительныеРеквизитыИСведения.Имя КАК ИмяРеквизита
		|ИЗ
		|	ИспользуемыеНаборыСвойств КАК ИспользуемыеНаборыСвойств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|		ПО ИспользуемыеНаборыСвойств.НаборСвойств = ДополнительныеРеквизитыИСведения.НаборСвойств";
	
	Запрос.УстановитьПараметр("ВыбраннаяНоменклатура", ВыбраннаяНоменклатура);
	
	ВыборкаРеквизитов = Запрос.Выполнить().Выбрать();
	
	МассивРеквизитов = Новый Массив;
	
	Пока ВыборкаРеквизитов.Следующий() Цикл
		СтруктураРеквизита = Новый Структура("Значение,ИмяРеквизита,Представление");
		ЗаполнитьЗначенияСвойств(СтруктураРеквизита, ВыборкаРеквизитов);
		МассивРеквизитов.Добавить(СтруктураРеквизита);
	КонецЦикла; 
	
	Возврат МассивРеквизитов;
	
КонецФункции

&НаСервере
Функция УбратьЗапрещенныеСимволы(Текст, Разрешенные)
	
	Результат = Текст;
	Для Сч = 1 По СтрДлина(Текст) Цикл
		ТекСимвол = Сред(Текст, Сч, 1);
		Если СтрНайти(Разрешенные, НРег(ТекСимвол))=0 Тогда
			Результат = СтрЗаменить(Результат, ТекСимвол,"");
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

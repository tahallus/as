#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ОтправитьДанныеВПриложениеКабинетКлиента() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	НастройкиКабинетКлиента = Справочники.НастройкиПубликацииМЛК.НастройкиИнтеграцииКабинетКлиента(Ссылка);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если НастройкиКабинетКлиента = Неопределено Тогда
		ТекстОшибки = НСтр("ru='Отсутствуют настройки приложения ""Кабинет клиента"".'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	СервисУстановкаНастроек = "hs/mobclient/setup";
	Авторизация = ОтправкаЗапросов.СтрокаBasicАутентификации(
		НастройкиКабинетКлиента.Пользователь,
		НастройкиКабинетКлиента.Пароль);
	
	ПараметрыОтправки = ОтправкаЗапросов.НовыйПараметрыОтправки();
	ПараметрыОтправки.ТелоЗапроса = СФормироватьНастройкиДляОтправки();
	ПараметрыОтправки.Url = НастройкиКабинетКлиента.АдресПриложения + "/" + СервисУстановкаНастроек;
	ПараметрыОтправки.Заголовки.Вставить("Authorization", Авторизация);
	Ответ = ОтправкаЗапросов.ОтправитьЗапрос(ПараметрыОтправки);
	
	Если Ответ.КодСостояния <> 200 Тогда
		ТекстОшибки = СтрШаблон(
			НСтр("ru='Ошибка при отправке настроек.
			|Код ответа: %1
			|%2'"),
			Ответ.КодСостояния,
			Ответ.ПолучитьТелоКакСтроку());
		ВызватьИсключение ТекстОшибки;
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		РегистрыСведений.НовостиМЛКДляОтправки.ОчиститьРегистрСведенийПослеУспешнойОтправки();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СФормироватьНастройкиДляОтправки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыборкаДетальныеЗаписи = ПолучитьНастройкиПубликации();
	
	СтруктураПакетОтправки = Новый Структура;
	
	СтруктураОсновныеДанные = Новый Структура;
	СтруктураОНас = Новый Структура;
	СтруктураЗаказТоваров = Новый Структура;
	СтруктураОнлайнЗапись = Новый Структура;
	
	ОрганизацияОтбор = Справочники.Организации.ПустаяСсылка();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// ОСНОВНЫЕ ДАННЫЕ
		СтруктураОсновныеДанные.Вставить("УИНастроек", ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор());
		СтруктураОсновныеДанные.Вставить("Наименование", ВыборкаДетальныеЗаписи.Наименование);
		СтруктураОсновныеДанные.Вставить("Логотип", ВыборкаДетальныеЗаписи.Логотип);
		
		// О НАС
		СтруктураОНас.Вставить("ИспользоватьОНас", ВыборкаДетальныеЗаписи.ИспользоватьОНас);
		Если ВыборкаДетальныеЗаписи.ИспользоватьОНас Тогда
			СтруктураОНас.Вставить("Сайт", ВыборкаДетальныеЗаписи.Сайт);
			СтруктураОНас.Вставить("Почта", ВыборкаДетальныеЗаписи.Почта);
			СтруктураОНас.Вставить("Телефон", ВыборкаДетальныеЗаписи.Телефон);
			СтруктураОНас.Вставить("Адрес", ВыборкаДетальныеЗаписи.Адрес);
			СтруктураОНас.Вставить("СсылкаНаИнстаграм", ВыборкаДетальныеЗаписи.СсылкаНаИнстаграм);
			СтруктураОНас.Вставить("СсылкаНаФейсбук", ВыборкаДетальныеЗаписи.СсылкаНаФейсбук);
			СтруктураОНас.Вставить("СсылкаНаВКонтакте", ВыборкаДетальныеЗаписи.СсылкаНаВКонтакте);
			СтруктураОНас.Вставить("СсылкаНаЮтуб", ВыборкаДетальныеЗаписи.СсылкаНаЮтуб);
			СтруктураОНас.Вставить("HTMLСтраница", ВыборкаДетальныеЗаписи.HTMLДляМЛК);
			ЮридическаяИнформацияВЦБ = ВыборкаДетальныеЗаписи.ЮридическаяИнформация.Выгрузить();
			СтруктураОНас.Вставить("ЮридическаяИнформация", Новый ХранилищеЗначения(ЮридическаяИнформацияВЦБ,Новый СжатиеДанных(9)));
		КонецЕсли;
		
		// ЗАКАЗ ТОВАРОВ
		СтруктураЗаказТоваров.Вставить("ИспользоватьЗаказТоваров", ВыборкаДетальныеЗаписи.ИспользоватьЗаказТоваров);
		Если ВыборкаДетальныеЗаписи.ИспользоватьЗаказТоваров Тогда
			
			// Доставка курьером
			СтруктураЗаказТоваров.Вставить("ИспользоватьДоставкуКурьером", ВыборкаДетальныеЗаписи.ИспользоватьДоставкуКурьером);
			Если ВыборкаДетальныеЗаписи.ИспользоватьДоставкуКурьером Тогда
				СтруктураЗаказТоваров.Вставить("СтоимостьДоставкиКурьером", ВыборкаДетальныеЗаписи.СтоимостьДоставкиКурьером);
				СтруктураЗаказТоваров.Вставить("ИспользоватьБесплатнуюДоставкуКурьеромОт", ВыборкаДетальныеЗаписи.ИспользоватьБесплатнуюДоставкуКурьеромОт);
				СтруктураЗаказТоваров.Вставить("БесплатнаяДоставкаКурьеромОт", ВыборкаДетальныеЗаписи.БесплатнаяДоставкаКурьеромОт);
				СтруктураЗаказТоваров.Вставить("УсловияДоставкиКурьером", ВыборкаДетальныеЗаписи.УсловияДоставкиКурьером);
			КонецЕсли;
			
			// Доставка по почте
			СтруктураЗаказТоваров.Вставить("ИспользоватьДоставкуПоПочте", ВыборкаДетальныеЗаписи.ИспользоватьДоставкуПоПочте);
			Если ВыборкаДетальныеЗаписи.ИспользоватьДоставкуПоПочте Тогда
				СтруктураЗаказТоваров.Вставить("СтоимостьДоставкиПоПочте", ВыборкаДетальныеЗаписи.СтоимостьДоставкиПоПочте);
				СтруктураЗаказТоваров.Вставить("УсловияДоставкиПоПочте", ВыборкаДетальныеЗаписи.УсловияДоставкиПоПочте);
			КонецЕсли;
			
			// Доставка в пункты выдачи заказа
			СтруктураЗаказТоваров.Вставить("ИспользоватьДоставкуВПунктыВыдачиЗаказа", ВыборкаДетальныеЗаписи.ИспользоватьДоставкуВПунктыВыдачиЗаказа);
			Если ВыборкаДетальныеЗаписи.ИспользоватьДоставкуВПунктыВыдачиЗаказа Тогда
				СтруктураЗаказТоваров.Вставить("ПунктыВыдачиЗаказа", ВыборкаДетальныеЗаписи.ПунктыВыдачиЗаказа); //Таблица значений
				СтруктураЗаказТоваров.Вставить("УсловияДоставкиВПунктыВыдачи", ВыборкаДетальныеЗаписи.УсловияДоставкиВПунктыВыдачи);
			КонецЕсли;
			
			СтруктураЗаказТоваров.Вставить("СуммаМинимальногоЗаказа", ВыборкаДетальныеЗаписи.СуммаМинимальногоЗаказа);
			СтруктураЗаказТоваров.Вставить("ИспользоватьЯндексКассу", ВыборкаДетальныеЗаписи.ИспользоватьЯндексКассу);
			СтруктураЗаказТоваров.Вставить("ОбязательнаяОплатаКартой", ВыборкаДетальныеЗаписи.ОбязательнаяОплатаКартой);
			СтруктураЗаказТоваров.Вставить("ИспользоватьКартинкиТоваров", ВыборкаДетальныеЗаписи.ИспользоватьКартинкиТоваров);
			СтруктураЗаказТоваров.Вставить("ИспользоватьКартинкиКатегорий", ВыборкаДетальныеЗаписи.ИспользоватьКартинкиКатегорий);
			СтруктураЗаказТоваров.Вставить("НастройкиВыгрузкиРеквизитов", ВыборкаДетальныеЗаписи.НастройкиВыгрузкиРеквизитов);
			СтруктураЗаказТоваров.Вставить("МассивСУИВыгружаемойНоменклатуры", Новый ХранилищеЗначения(Неопределено));
			СтруктураЗаказТоваров.Вставить("ВидЦенТоваров", Строка(ВыборкаДетальныеЗаписи.ВидЦенТоваров.УникальныйИдентификатор()));
			СтруктураЗаказТоваров.Вставить("ОтборГруппыКатегорииНоменклатуры", ВыборкаДетальныеЗаписи.ОтборГруппыКатегорииНоменклатуры);
			СтруктураЗаказТоваров.Вставить("Организация", Строка(ВыборкаДетальныеЗаписи.Организация.УникальныйИдентификатор()));
			
			// Версия 2.0.8
			СтруктураЗаказТоваров.Вставить("ВариантОтображенияКартинок", ВыборкаДетальныеЗаписи.ВариантОтображенияКартинок);
			
			// Версия 2.0.6
			СтруктураЗаказТоваров.Вставить("СтруктураКаталога", Новый ХранилищеЗначения(ОбработатьТаблицуЗначений(ВыборкаДетальныеЗаписи.КаталогТоваров.Получить()),Новый СжатиеДанных(9)));
			
			// Версия 2.0.4
			СтруктураЗаказТоваров.Вставить("ИспользоватьОстатки", ВыборкаДетальныеЗаписи.ИспользоватьОстатки);
			СтруктураЗаказТоваров.Вставить("ИспользоватьХарактеристики", ВыборкаДетальныеЗаписи.ИспользоватьХарактеристики);
			СтруктураЗаказТоваров.Вставить("СкрыватьТоварыКоторыхНетВНаличии", ВыборкаДетальныеЗаписи.СкрыватьТоварыКоторыхНетВНаличии);
			СтруктураЗаказТоваров.Вставить("ОрганизацияДляОстатков", Строка(ВыборкаДетальныеЗаписи.ОрганизацияДляОстатков.УникальныйИдентификатор()));
			
			// Версия 2.0.4
			МассивСУИСкладов = Новый Массив;
			ВыбранныеСклады = ВыборкаДетальныеЗаписи.Склады.Выгрузить();
			Для каждого Строка Из ВыбранныеСклады Цикл
				МассивСУИСкладов.Добавить(Строка(Строка.Склад.УникальныйИдентификатор()));
			КонецЦикла;
			СтруктураЗаказТоваров.Вставить("МассивСУИСкладов", Новый ХранилищеЗначения(МассивСУИСкладов, Новый СжатиеДанных(9)));
			
			ОрганизацияОтбор = ВыборкаДетальныеЗаписи.Организация;
			
			// Версия 2.2.0
			ИндивидуальныеЦеныТЗ = ПолучитьИндивидуальныеЦены();
			СтруктураЗаказТоваров.Вставить("ИндивидуальныеЦены", Новый ХранилищеЗначения(ИндивидуальныеЦеныТЗ, Новый СжатиеДанных(9)));
			
			// Данные по настройкам Яндекс.Кассы
			Если ВыборкаДетальныеЗаписи.ИспользоватьЯндексКассу Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	НастройкиЯндексКассы.Организация КАК Организация,
				|	НастройкиЯндексКассы.СДоговором КАК СДоговором,
				|	НастройкиЯндексКассы.ИдентификаторМагазина КАК ИдентификаторМагазина,
				|	НастройкиЯндексКассы.ИдентификаторВитрины КАК ИдентификаторВитрины,
				|	НастройкиЯндексКассы.ОтправкаЧековЧерезЯндекс КАК ОтправкаЧековЧерезЯндекс
				|ИЗ
				|	Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
				|ГДЕ
				|	НЕ НастройкиЯндексКассы.Недействительна
				|	И НастройкиЯндексКассы.Организация = &Организация";
				
				Запрос.УстановитьПараметр("Организация", ОрганизацияОтбор);
				ВыборкаНастроек = Запрос.Выполнить().Выбрать();
				
				Пока ВыборкаНастроек.Следующий() Цикл
					СтруктураЗаказТоваров.Вставить("ЯндексКассаСДоговором", ВыборкаНастроек.СДоговором);
					СтруктураЗаказТоваров.Вставить("ЯндексКассаИдентификаторМагазина", ВыборкаНастроек.ИдентификаторМагазина);
					СтруктураЗаказТоваров.Вставить("ЯндексКассаИдентификаторВитрины", ВыборкаНастроек.ИдентификаторВитрины);
					СтруктураЗаказТоваров.Вставить("ЯндексКассаОтправкаЧековЧерезЯндекс", ВыборкаНастроек.ОтправкаЧековЧерезЯндекс);
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// ОНЛАЙН-ЗАПИСЬ
		Если ОбщегоНазначения.РазделениеВключено() Тогда
			СтруктураОнлайнЗапись.Вставить("ИспользоватьОнлайнЗапись", ВыборкаДетальныеЗаписи.ИспользоватьОнлайнЗапись);
			Если ВыборкаДетальныеЗаписи.ИспользоватьОнлайнЗапись Тогда
				СтруктураОнлайнЗапись.Вставить("ПакетСРесурсами", ВыборкаДетальныеЗаписи.ПакетСРесурсами);
				СтруктураОнлайнЗапись.Вставить("ПакетСУслугами", ВыборкаДетальныеЗаписи.ПакетСУслугами);
				СтруктураОнлайнЗапись.Вставить("ПакетСРесурсамиИУслугами", ВыборкаДетальныеЗаписи.ПакетСРесурсамиИУслугами);
				СтруктураОнлайнЗапись.Вставить("НаименованиеРесурса", ВыборкаДетальныеЗаписи.НаименованиеРесурса);
				СтруктураОнлайнЗапись.Вставить("НаименованиеРесурсаВВинительномПадеже", ВыборкаДетальныеЗаписи.НаименованиеРесурсаВВинительномПадеже);
				СтруктураОнлайнЗапись.Вставить("НаименованиеРесурсаВДательномПадеже", ВыборкаДетальныеЗаписи.НаименованиеРесурсаВДательномПадеже);
				СтруктураОнлайнЗапись.Вставить("НаименованиеРесурсаВРодительномПадеже", ВыборкаДетальныеЗаписи.НаименованиеРесурсаВРодительномПадеже);
				СтруктураОнлайнЗапись.Вставить("ИспользоватьКартинкиРесурсов", ВыборкаДетальныеЗаписи.ИспользоватьКартинкиРесурсов);
				СтруктураОнлайнЗапись.Вставить("ИспользоватьКартинкиУслуг", ВыборкаДетальныеЗаписи.ИспользоватьКартинкиУслуг);
				СтруктураОнлайнЗапись.Вставить("РежимПодтвержденияЗаписи", ВыборкаДетальныеЗаписи.РежимПодтвержденияЗаписи);
				СтруктураОнлайнЗапись.Вставить("ПорядокЗаписи", ВыборкаДетальныеЗаписи.ПорядокЗаписи);
				СтруктураОнлайнЗапись.Вставить("ИспользоватьВыборРесурса", ВыборкаДетальныеЗаписи.ИспользоватьВыборРесурса);
				СтруктураОнлайнЗапись.Вставить("ВариантЗаписиНаУслуги", ВыборкаДетальныеЗаписи.ВариантЗаписиНаУслуги);
				СтруктураОнлайнЗапись.Вставить("РазрешитьЗагрузкуИсторииЗаписей", ВыборкаДетальныеЗаписи.РазрешитьЗагрузкуИсторииЗаписей);
				СтруктураОнлайнЗапись.Вставить("ТребоватьПодтвержденияДляНовогоКлиента", ВыборкаДетальныеЗаписи.ТребоватьПодтвержденияДляНовогоКлиента);
				СтруктураОнлайнЗапись.Вставить("ВариантПодтвержденияНовогоКлиента", ВыборкаДетальныеЗаписи.ВариантПодтвержденияНовогоКлиента);
				СтруктураОнлайнЗапись.Вставить("ВариантОтбораУслуг", ВыборкаДетальныеЗаписи.ВариантОтбораУслуг);
			КонецЕсли;
		Иначе
			СтруктураОнлайнЗапись.Вставить("ИспользоватьОнлайнЗапись", Ложь);
		КонецЕсли;
		
	КонецЦикла;
	
	// НОВОСТНОЙ ЦЕНТР
	СтруктураПакетОтправки.Вставить("Новости", ПолучитьАктуальныеНовости());
	СтруктураПакетОтправки.Вставить("Баннеры", ВыборкаДетальныеЗаписи.Баннеры);
	
	// ПРОЧИЕ НАСТРОЙКИ
	СтруктураПакетОтправки.Вставить("ИдентификаторИнформационнойБазы", Константы.ИдентификаторИнформационнойБазы.Получить());
	СтруктураПакетОтправки.Вставить("ВерсияКонструктора", КонструкторМобильногоПриложения.ВерсияМЛК());
	СтруктураПакетОтправки.Вставить("АдресОсновнойБазы", ПолучитьНавигационнуюСсылкуИнформационнойБазы());
	
	НастройкиКабинетКлиента = Справочники.НастройкиПубликацииМЛК.НастройкиИнтеграцииКабинетКлиента(ВыборкаДетальныеЗаписи.Ссылка);
	СтруктураПакетОтправки.Вставить("ТокенДоступа", НастройкиКабинетКлиента.ТокенДоступа);
	
	НастройкиУведомлений = НастройкиУведомлений();
	Если НастройкиУведомлений <> Неопределено Тогда
		СтруктураПакетОтправки.Вставить("ОтправкаУведомленийАдрес", НастройкиУведомлений.URL);
	КонецЕсли;
	
	СтруктураПакетОтправки.Вставить("ОсновныеДанные", СтруктураОсновныеДанные);
	СтруктураПакетОтправки.Вставить("ОНас", СтруктураОНас);
	СтруктураПакетОтправки.Вставить("ЗаказТоваров", СтруктураЗаказТоваров);
	СтруктураПакетОтправки.Вставить("ОнлайнЗапись", СтруктураОнлайнЗапись);
	
	СтруктураПакетОтправки.Вставить("РазделениеВключено", ОбщегоНазначения.РазделениеВключено());
	
	Возврат СформироватьСтрокуОтправки(СтруктураПакетОтправки);
	
КонецФункции

Функция ПолучитьНастройкиПубликации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиПубликацииМЛК.Ссылка КАК Ссылка,
	|	НастройкиПубликацииМЛК.Наименование КАК Наименование,
	|	НастройкиПубликацииМЛК.Сайт КАК Сайт,
	|	НастройкиПубликацииМЛК.Почта КАК Почта,
	|	НастройкиПубликацииМЛК.Телефон КАК Телефон,
	|	НастройкиПубликацииМЛК.Адрес КАК Адрес,
	|	НастройкиПубликацииМЛК.СсылкаНаИнстаграм КАК СсылкаНаИнстаграм,
	|	НастройкиПубликацииМЛК.СсылкаНаФейсбук КАК СсылкаНаФейсбук,
	|	НастройкиПубликацииМЛК.СсылкаНаВКонтакте КАК СсылкаНаВКонтакте,
	|	НастройкиПубликацииМЛК.СсылкаНаЮтуб КАК СсылкаНаЮтуб,
	|	НастройкиПубликацииМЛК.HTMLДляМЛК КАК HTMLДляМЛК,
	|	НастройкиПубликацииМЛК.Логотип КАК Логотип,
	|	НастройкиПубликацииМЛК.ИспользоватьОНас КАК ИспользоватьОНас,
	|	НастройкиПубликацииМЛК.ИспользоватьЗаказТоваров КАК ИспользоватьЗаказТоваров,
	|	НастройкиПубликацииМЛК.ИспользоватьКартинкиТоваров КАК ИспользоватьКартинкиТоваров,
	|	НастройкиПубликацииМЛК.ИспользоватьКартинкиКатегорий КАК ИспользоватьКартинкиКатегорий,
	|	НастройкиПубликацииМЛК.ИспользоватьДоставкуКурьером КАК ИспользоватьДоставкуКурьером,
	|	НастройкиПубликацииМЛК.СтоимостьДоставкиКурьером КАК СтоимостьДоставкиКурьером,
	|	НастройкиПубликацииМЛК.БесплатнаяДоставкаКурьеромОт КАК БесплатнаяДоставкаКурьеромОт,
	|	НастройкиПубликацииМЛК.ИспользоватьБесплатнуюДоставкуКурьеромОт КАК ИспользоватьБесплатнуюДоставкуКурьеромОт,
	|	НастройкиПубликацииМЛК.УсловияДоставкиКурьером КАК УсловияДоставкиКурьером,
	|	НастройкиПубликацииМЛК.ИспользоватьДоставкуПоПочте КАК ИспользоватьДоставкуПоПочте,
	|	НастройкиПубликацииМЛК.СтоимостьДоставкиПоПочте КАК СтоимостьДоставкиПоПочте,
	|	НастройкиПубликацииМЛК.УсловияДоставкиПоПочте КАК УсловияДоставкиПоПочте,
	|	НастройкиПубликацииМЛК.ИспользоватьДоставкуВПунктыВыдачиЗаказа КАК ИспользоватьДоставкуВПунктыВыдачиЗаказа,
	|	НастройкиПубликацииМЛК.ПунктыВыдачиЗаказа КАК ПунктыВыдачиЗаказа,
	|	НастройкиПубликацииМЛК.ИспользоватьЯндексКассу КАК ИспользоватьЯндексКассу,
	|	НастройкиПубликацииМЛК.ОбязательнаяОплатаКартой КАК ОбязательнаяОплатаКартой,
	|	НастройкиПубликацииМЛК.СуммаМинимальногоЗаказа КАК СуммаМинимальногоЗаказа,
	|	НастройкиПубликацииМЛК.УсловияДоставкиВПунктыВыдачи КАК УсловияДоставкиВПунктыВыдачи,
	|	НастройкиПубликацииМЛК.ПакетСРесурсами КАК ПакетСРесурсами,
	|	НастройкиПубликацииМЛК.ПакетСУслугами КАК ПакетСУслугами,
	|	НастройкиПубликацииМЛК.ПакетСРесурсамиИУслугами КАК ПакетСРесурсамиИУслугами,
	|	НастройкиПубликацииМЛК.НаименованиеРесурса КАК НаименованиеРесурса,
	|	НастройкиПубликацииМЛК.НаименованиеРесурсаВВинительномПадеже КАК НаименованиеРесурсаВВинительномПадеже,
	|	НастройкиПубликацииМЛК.НаименованиеРесурсаВДательномПадеже КАК НаименованиеРесурсаВДательномПадеже,
	|	НастройкиПубликацииМЛК.НаименованиеРесурсаВРодительномПадеже КАК НаименованиеРесурсаВРодительномПадеже,
	|	НастройкиПубликацииМЛК.ИспользоватьКартинкиРесурсов КАК ИспользоватьКартинкиРесурсов,
	|	НастройкиПубликацииМЛК.ИспользоватьКартинкиУслуг КАК ИспользоватьКартинкиУслуг,
	|	НастройкиПубликацииМЛК.РежимПодтвержденияЗаписи КАК РежимПодтвержденияЗаписи,
	|	НастройкиПубликацииМЛК.ПорядокЗаписи КАК ПорядокЗаписи,
	|	НастройкиПубликацииМЛК.ИспользоватьВыборРесурса КАК ИспользоватьВыборРесурса,
	|	НастройкиПубликацииМЛК.ВариантЗаписиНаУслуги КАК ВариантЗаписиНаУслуги,
	|	НастройкиПубликацииМЛК.РазрешитьЗагрузкуИсторииЗаписей КАК РазрешитьЗагрузкуИсторииЗаписей,
	|	НастройкиПубликацииМЛК.ТребоватьПодтвержденияДляНовогоКлиента КАК ТребоватьПодтвержденияДляНовогоКлиента,
	|	НастройкиПубликацииМЛК.ВариантПодтвержденияНовогоКлиента КАК ВариантПодтвержденияНовогоКлиента,
	|	НастройкиПубликацииМЛК.ВариантОтбораУслуг КАК ВариантОтбораУслуг,
	|	НастройкиПубликацииМЛК.ИспользоватьОнлайнЗапись КАК ИспользоватьОнлайнЗапись,
	|	НастройкиПубликацииМЛК.КаталогТоваров КАК КаталогТоваров,
	|	НастройкиПубликацииМЛК.НастройкиВыгрузкиРеквизитов КАК НастройкиВыгрузкиРеквизитов,
	|	НастройкиПубликацииМЛК.ВидЦенТоваров КАК ВидЦенТоваров,
	|	НастройкиПубликацииМЛК.ОтборГруппыКатегорииНоменклатуры КАК ОтборГруппыКатегорииНоменклатуры,
	|	НастройкиПубликацииМЛК.Организация КАК Организация,
	|	НастройкиПубликацииМЛК.ЮридическаяИнформация.(
	|		ИмяФайла КАК ИмяФайла,
	|		Расширение КАК Расширение,
	|		Файл КАК Файл
	|	) КАК ЮридическаяИнформация,
	|	НастройкиПубликацииМЛК.ИспользоватьОстатки КАК ИспользоватьОстатки,
	|	НастройкиПубликацииМЛК.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики,
	|	НастройкиПубликацииМЛК.СкрыватьТоварыКоторыхНетВНаличии КАК СкрыватьТоварыКоторыхНетВНаличии,
	|	НастройкиПубликацииМЛК.Склады.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Склад КАК Склад
	|	) КАК Склады,
	|	НастройкиПубликацииМЛК.ОрганизацияДляОстатков КАК ОрганизацияДляОстатков,
	|	НастройкиПубликацииМЛК.Баннеры КАК Баннеры,
	|	НастройкиПубликацииМЛК.ВариантОтображенияКартинок КАК ВариантОтображенияКартинок
	|ИЗ
	|	Справочник.НастройкиПубликацииМЛК КАК НастройкиПубликацииМЛК";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Возврат ВыборкаДетальныеЗаписи
	
КонецФункции

Функция СформироватьСтрокуОтправки(СтруктураОтвета)
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета, НазначениеТипаXML.Явное);
	СтрокаОтправки = ЗаписьJSON.Закрыть();
	
	Возврат СтрокаОтправки
	
КонецФункции

Функция ОбработатьТаблицуЗначений(ТЗ)
	
	МассивСУИВыгружаемойНоменклатуры = Новый Массив;
	
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
		
		ТЗ.Колонки.Удалить("Номенклатура");
		ТЗ.Колонки.Удалить("РодительГруппа");
		ТЗ.Колонки.Удалить("РодительКатегория");
		
	КонецЕсли;
	
	Возврат ТЗ
	
КонецФункции

Функция АдресСервисаУведомлений(Знач НавигационнаяСсылкаБазы)
	
	Если СтрЗаканчиваетсяНа(НавигационнаяСсылкаБазы, "/") Тогда
		НавигационнаяСсылкаБазы = СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(НавигационнаяСсылкаБазы);
	КонецЕсли;
	
	ШаблонСтрокиПодключения = "[НавигационнаяСсылкаБазы]/hs/[АдресСервисаУведомлений]";
	
	СервисОбменКабинетКлиента = Метаданные.HTTPСервисы.ОбменКабинетКлиента;
	АдресСервисаУведомлений = СервисОбменКабинетКлиента.КорневойURL + СервисОбменКабинетКлиента.ШаблоныURL.Notification.Шаблон;
	
	ПараметрыСтроки = Новый Структура;
	ПараметрыСтроки.Вставить("НавигационнаяСсылкаБазы", НавигационнаяСсылкаБазы);
	ПараметрыСтроки.Вставить("АдресСервисаУведомлений", АдресСервисаУведомлений);
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ШаблонСтрокиПодключения, ПараметрыСтроки);
	
КонецФункции

Функция НастройкиУведомлений()
	
	Если НЕ РаботаВМоделиСервиса.РазделениеВключено() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НавигационнаяСсылкаБазы = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
	
	ЭтоПодключениеКВебСерверу = СтрНачинаетсяС(НавигационнаяСсылкаБазы, "http://")
		ИЛИ СтрНачинаетсяС(НавигационнаяСсылкаБазы, "https://");
	
	Если НЕ ЭтоПодключениеКВебСерверу Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НастройкиУведомлений = Новый Структура;
	НастройкиУведомлений.Вставить("URL", АдресСервисаУведомлений(НавигационнаяСсылкаБазы));
	
	Возврат НастройкиУведомлений;
	
КонецФункции

Функция ПолучитьАктуальныеНовости()
	
	Новости = Новый ТаблицаЗначений;
	Новости.Колонки.Добавить("Идентификатор");
	Новости.Колонки.Добавить("Заголовок");
	Новости.Колонки.Добавить("Сообщение");
	Новости.Колонки.Добавить("СтраницаДляМЛК");
	//Новости.Колонки.Добавить("ДатаИВремяОтправкиPushУведомления");
	Новости.Колонки.Добавить("РазницаВоВремени");
	Новости.Колонки.Добавить("Получатели");
	Новости.Колонки.Добавить("НужноУдалить");
	Новости.Колонки.Добавить("ОтправлятьPush");
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НовостиМЛКДляОтправки.Идентификатор КАК Идентификатор,
		|	НовостиМЛКДляОтправки.ДатаИзменения КАК ДатаИзменения
		|ИЗ
		|	РегистрСведений.НовостиМЛКДляОтправки КАК НовостиМЛКДляОтправки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НовостьСсылка = Справочники.НовостиМЛК.ПолучитьСсылку(ВыборкаДетальныеЗаписи.Идентификатор); 
		
		Если НовостьСсылка = Неопределено Или НЕ ОбщегоНазначения.СсылкаСуществует(НовостьСсылка) Или НовостьСсылка.ПометкаУдаления Тогда
			НоваяСтр = Новости.Добавить();
			НоваяСтр.Идентификатор = ВыборкаДетальныеЗаписи.Идентификатор;
			НоваяСтр.НужноУдалить = Истина;
			Продолжить;
		КонецЕсли;
		
		СтруктураСРеквизитами = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НовостьСсылка, "Наименование, Сообщение, СтраницаДляМЛК, ДатаИВремяОтправкиPushУведомления, Получатели");
		
		НоваяСтр = Новости.Добавить();
		НоваяСтр.Идентификатор = ВыборкаДетальныеЗаписи.Идентификатор;
		НоваяСтр.Заголовок = СтруктураСРеквизитами.Наименование;
		НоваяСтр.Сообщение = СтруктураСРеквизитами.Сообщение;
		НоваяСтр.СтраницаДляМЛК = СтруктураСРеквизитами.СтраницаДляМЛК;
		//НоваяСтр.ДатаИВремяОтправкиPushУведомления = СтруктураСРеквизитами.ДатаИВремяОтправкиPushУведомления;

		НоваяСтр.РазницаВоВремени = СтруктураСРеквизитами.ДатаИВремяОтправкиPushУведомления - ТекущаяДата;
		НоваяСтр.Получатели = СтруктураСРеквизитами.Получатели;
		НоваяСтр.НужноУдалить = Ложь;
		
		НоваяСтр.ОтправлятьPush = СтруктураСРеквизитами.ДатаИВремяОтправкиPushУведомления <> Дата(1,1,1);
		
	КонецЦикла;
	
	
	Возврат Новости
	
КонецФункции

Функция ПолучитьИндивидуальныеЦены()
	
	ИндивидуальныеЦеныТЗ = Новый ТаблицаЗначений;
	ИндивидуальныеЦеныТЗ.Колонки.Добавить("КонтрагентИдентификатор", Новый ОписаниеТипов("Строка"));
	ИндивидуальныеЦеныТЗ.Колонки.Добавить("ВидЦенИдентификатор", Новый ОписаниеТипов("Строка"));
	ИндивидуальныеЦеныТЗ.Колонки.Добавить("ДоговорИдентификатор", Новый ОписаниеТипов("Строка"));
	ИндивидуальныеЦеныТЗ.Колонки.Добавить("КодКлиента", Новый ОписаниеТипов("Строка"));
	ИндивидуальныеЦеныТЗ.Колонки.Добавить("Используется", Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПубликацииМЛКИндивидуальныеЦены.Контрагент КАК Контрагент,
		|	НастройкиПубликацииМЛКИндивидуальныеЦены.ВидЦен КАК ВидЦен,
		|	НастройкиПубликацииМЛКИндивидуальныеЦены.КодКлиента КАК КодКлиента,
		|	НастройкиПубликацииМЛКИндивидуальныеЦены.Используется КАК Используется,
		|	НастройкиПубликацииМЛКИндивидуальныеЦены.Договор КАК Договор
		|ИЗ
		|	Справочник.НастройкиПубликацииМЛК.ИндивидуальныеЦены КАК НастройкиПубликацииМЛКИндивидуальныеЦены";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ИндивидуальныеЦеныТЗ.Добавить();
		НоваяСтрока.КонтрагентИдентификатор = Строка(ВыборкаДетальныеЗаписи.Контрагент.УникальныйИдентификатор());
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ВидЦен) Тогда
			НоваяСтрока.ВидЦенИдентификатор = Строка(ВыборкаДетальныеЗаписи.ВидЦен.УникальныйИдентификатор());
		Иначе
			НоваяСтрока.ВидЦенИдентификатор = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Договор) Тогда
			НоваяСтрока.ДоговорИдентификатор = Строка(ВыборкаДетальныеЗаписи.Договор.УникальныйИдентификатор());
		Иначе
			НоваяСтрока.ДоговорИдентификатор = "";
		КонецЕсли;
		НоваяСтрока.КодКлиента = ВыборкаДетальныеЗаписи.КодКлиента;
		НоваяСтрока.Используется = ВыборкаДетальныеЗаписи.Используется;
		
	КонецЦикла;
	
	Возврат ИндивидуальныеЦеныТЗ
	
КонецФункции // ()

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
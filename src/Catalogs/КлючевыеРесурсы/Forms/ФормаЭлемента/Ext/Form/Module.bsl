
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Объект.КратностьПланирования = ?(Параметры.Ключ.Пустая(), Элементы.КратностьПланирования.СписокВыбора[0].Значение, Объект.КратностьПланирования);
	
	Если Параметры.Свойство("ВидРесурса") Тогда
		ВидРесурса = Параметры.ВидРесурса;
	КонецЕсли;
	
	ДобавитьПросмотрИзображений();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		ЭтоВебКлиент = Истина;
	#Иначе
		ЭтоВебКлиент = Ложь;
	#КонецЕсли
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьРасшифровкуКратности();
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ВидРесурса) Тогда
		НаборЗаписей = РегистрыСведений.ВидыРесурсовПредприятия.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.РесурсПредприятия.Установить(ТекущийОбъект.Ссылка);
		НаборЗаписей.Отбор.ВидРесурсаПредприятия.Установить(ВидРесурса);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ВидРесурсаПредприятия = ВидРесурса;
		НоваяЗапись.РесурсПредприятия = ТекущийОбъект.Ссылка;
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
	Оповестить("Запись_КлючевыеРесурсы");
	
КонецПроцедуры // ПослеЗаписи()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура КратностьПланированияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КратностьПланирования = Объект.КратностьПланирования;
	
	Объект.КратностьПланирования = ?(Направление>0, КратностьПланирования+5, КратностьПланирования-5);
	
	ОбновитьРасшифровкуКратности();
	
КонецПроцедуры

&НаКлиенте
Процедура КратностьПланированияПриИзменении(Элемент)
	
	ОстатокОтДеления = Объект.КратностьПланирования%5;
	
	Если Не ОстатокОтДеления%5 = 0 Тогда
			Объект.КратностьПланирования = Объект.КратностьПланирования + (5-ОстатокОтДеления);
	КонецЕсли;
	
	ОбновитьРасшифровкуКратности();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРасшифровкуКратности()
	
	Если Не ЭтаФорма.ТолькоПросмотр Тогда
		Объект.КратностьПланирования = ?(Объект.КратностьПланирования > 1440, 1440, Объект.КратностьПланирования);
	КонецЕсли;
	
	Если Объект.КратностьПланирования >= 60 И Объект.КратностьПланирования < 1440 Тогда
		
		КоличествоЧасов = Цел(Объект.КратностьПланирования/60);
		КоличествоМинут = Объект.КратностьПланирования - КоличествоЧасов*60;
		
		Элементы.ДекорацияПодсказкаВремени.Заголовок = "("+Строка(КоличествоЧасов)+ " ч. "+ Строка(КоличествоМинут)+ " мин."+")";
		
	ИначеЕсли Объект.КратностьПланирования >= 1440 Тогда
		
		КоличествоДней = Цел(Объект.КратностьПланирования/1440);
		КоличествоЧасов = Цел((Объект.КратностьПланирования - (КоличествоДней*1440))/60);
		КоличествоМинут = Объект.КратностьПланирования - (КоличествоДней*1440+КоличествоЧасов*60);
		
		Элементы.ДекорацияПодсказкаВремени.Заголовок = "("+Строка(КоличествоДней)+" д. " + Строка(КоличествоЧасов)+ " ч. "+ Строка(КоличествоМинут)+ " мин."+")";
		
	Иначе
		Элементы.ДекорацияПодсказкаВремени.Заголовок = "";
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПрокруткаИзображенийВправоНажатие(Элемент)
	
	СдвигИзображения(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПрокруткаИзображенийВлевоНажатие(Элемент)
	
	СдвигИзображения(-1);
	
КонецПроцедуры

#КонецОбласти

#Область Изображение

// Процедура - обработчик события Нажатие поля АдресКартинки.
//
&НаКлиенте
Процедура Подключаемый_АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТекущееИзображение >= 0 Тогда
		ПросмотретьПрисоединенныйФайл();
	Иначе
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры // АдресКартинкиНажатие()

&НаСервере
Функция ОтображатьФайлНаФорме(ПрисоединенныйФайл, ПроверятьПометкуУдаления = Истина)
	
	ДопустимыеРасширения = Новый Массив;
	ДопустимыеРасширения.Добавить("png");
	ДопустимыеРасширения.Добавить("jpeg");
	ДопустимыеРасширения.Добавить("jpg");
	
	СвойстваФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПрисоединенныйФайл, "ВладелецФайла,ПометкаУдаления,Расширение");
	
	Если ПроверятьПометкуУдаления И СвойстваФайла.ПометкаУдаления
		ИЛИ СвойстваФайла.ВладелецФайла <> Объект.Ссылка
		ИЛИ ДопустимыеРасширения.Найти(СвойстваФайла.Расширение) = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Вызывается при изменении присоединенного файла.
//
&НаСервере
Процедура ОбновитьПросмотрИзображений(Знач ИзмененныеФайлы = Неопределено)
	
	ОбновитьПросмотрИзображений = (ИзмененныеФайлы = Неопределено);
	
	Если ИзмененныеФайлы <> Неопределено Тогда
		Если ТипЗнч(ИзмененныеФайлы) <> Тип("Массив") Тогда
			ИзмененныеФайлы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИзмененныеФайлы);
		КонецЕсли;
		
		Для каждого Файл Из ИзмененныеФайлы Цикл
			ОбновитьПросмотрИзображений = ОтображатьФайлНаФорме(Файл, Ложь);
			Если ОбновитьПросмотрИзображений Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ОбновитьПросмотрИзображений Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененоОсновноеИзображение = Ложь;
	Если ЗначениеЗаполнено(Объект.ФайлКартинки)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ФайлКартинки, "ПометкаУдаления") Тогда
		Объект.ФайлКартинки = Неопределено;
		Модифицированность = Истина;
	КонецЕсли;
	
	ДобавитьПросмотрИзображений();
	СдвигИзображения(0);
	
КонецПроцедуры

// Выводит на форму картинки из присоединенных файлов.
//
&НаСервере
Процедура ДобавитьПросмотрИзображений()
	
	Изображения.Очистить();
	
	// Присоединенный файл записанный в Объект.ФайлКартинки показываем первым.
	Если НЕ Объект.ФайлКартинки.Пустая() Тогда
		ДвоичныеДанныеКартинки = РаботаСФайламиУНФ.СсылкаНаДвоичныеДанныеФайла(Объект.ФайлКартинки, УникальныйИдентификатор);
		Если ДвоичныеДанныеКартинки <> Неопределено Тогда
			НоваяСтрока = Изображения.Вставить(0);
			НоваяСтрока.Ссылка = Объект.ФайлКартинки;
			НоваяСтрока.Адрес = ДвоичныеДанныеКартинки;
		КонецЕсли;
	КонецЕсли;
	
	// После присоединенного файла из Объект.ФайлКартинки показываем все остальные подходящие.
	Файлы = Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(Объект.Ссылка, Файлы);
	Для каждого Файл Из Файлы Цикл
		
		Если НЕ ОтображатьФайлНаФорме(Файл)
			ИЛИ Файл = Объект.ФайлКартинки Тогда
			Продолжить;
		КонецЕсли;
		ДвоичныеДанныеКартинки = РаботаСФайламиУНФ.СсылкаНаДвоичныеДанныеФайла(Файл, УникальныйИдентификатор);
		Если ДвоичныеДанныеКартинки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Изображения.Добавить();
		НоваяСтрока.Ссылка = Файл;
		НоваяСтрока.Адрес = ДвоичныеДанныеКартинки;
	КонецЦикла;
	
	КоличествоИзображений = Элементы.Изображение.ПодчиненныеЭлементы.Количество();
	ОтображаемоеИзображение = Элементы.Изображение.ПодчиненныеЭлементы[КоличествоИзображений - 1];
	ОтображаемоеИзображение.ТекстНевыбраннойКартинки = Элементы.АдресКартинки.ТекстНевыбраннойКартинки;
	Если Изображения.Количество() = 0 Тогда
		ТекущееИзображение = -1;
		ОтображаемоеИзображение.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);
	Иначе
		ТекущееИзображение = 0;
		ОтображаемоеИзображение.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	КонецЕсли;
	
	УстановитьПрокруткуИзображения();
	ИзображениеВидимостьКоманднойПанели();
	
КонецПроцедуры

// Показывает соседнее с текущим изображение.
// 
// Параметры:
//  Направление - Число - Если = -1 - сдвиг влево; Если = 1 - сдвиг вправо.
//
&НаСервере
Процедура СдвигИзображения(Направление)
	
	НомерЭлемента = ТекущееИзображение + Направление;
	Если НомерЭлемента < 0 ИЛИ НомерЭлемента >= Изображения.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКДанным = СтрШаблон("Изображения[%1].Адрес", НомерЭлемента);
	
	КоличествоИзображений = Элементы.Изображение.ПодчиненныеЭлементы.Количество();
	Если КоличествоИзображений = 1 Тогда
		ПредыдущееИзображение = Элементы.АдресКартинки;
		НовоеИзображениеНомер = 1;
	Иначе
		ПредыдущееИзображение = Элементы.Изображение.ПодчиненныеЭлементы[КоличествоИзображений - 1];
		НовоеИзображениеНомер = Число(СтрЗаменить(ПредыдущееИзображение.Имя, "АдресКартинки", "")) + 1;
	КонецЕсли;
	
	НовоеИзображение = Элементы.Добавить("АдресКартинки" + НовоеИзображениеНомер, Тип("ПолеФормы"), Элементы.Изображение);
	ЗаполнитьЗначенияСвойств(НовоеИзображение, Элементы.АдресКартинки,, "Видимость,Рамка,ПутьКДанным");
	НовоеИзображение.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	НовоеИзображение.ПутьКДанным = ПутьКДанным;
	НовоеИзображение.УстановитьДействие("Нажатие", "Подключаемый_АдресКартинкиНажатие");
	ТекущееИзображение = НомерЭлемента;
	
	Элементы.Переместить(ПредыдущееИзображение.КонтекстноеМеню.ПодчиненныеЭлементы["АдресКартинкиКонтекстноеМенюПросмотретьИзображение"],
	                     НовоеИзображение.КонтекстноеМеню);
	Элементы.Переместить(ПредыдущееИзображение.КонтекстноеМеню.ПодчиненныеЭлементы["АдресКартинкиКонтекстноеМенюУдалитьИзображение"],
	                     НовоеИзображение.КонтекстноеМеню, НовоеИзображение.КонтекстноеМеню.ПодчиненныеЭлементы[0]);
	Элементы.Переместить(ПредыдущееИзображение.КонтекстноеМеню.ПодчиненныеЭлементы["АдресКартинкиКонтекстноеМенюУстановитьИзображениеОсновным"],
	                     НовоеИзображение.КонтекстноеМеню, НовоеИзображение.КонтекстноеМеню.ПодчиненныеЭлементы[0]);
	Элементы.Переместить(ПредыдущееИзображение.КонтекстноеМеню.ПодчиненныеЭлементы["АдресКартинкиКонтекстноеМенюДобавитьИзображение"],
	                     НовоеИзображение.КонтекстноеМеню, НовоеИзображение.КонтекстноеМеню.ПодчиненныеЭлементы[0]);
	
	Если КоличествоИзображений = 1 Тогда
		ПредыдущееИзображение.Видимость = Ложь;
	Иначе
		Элементы.Удалить(ПредыдущееИзображение);
	КонецЕсли;
	УстановитьПрокруткуИзображения();
	ИзображениеВидимостьКоманднойПанели();
	
КонецПроцедуры

// Процедура просмотра картинки
//
&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	
	ОчиститьСообщения();
	
	Файл = Изображения[ТекущееИзображение].Ссылка;
	ДанныеФайла = ПолучитьДанныеФайла(Файл, УникальныйИдентификатор);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры // ПросмотретьПрисоединенныйФайл()

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

// Устанавливает основным выбранное изображение (будет показываться первым).
//
&НаКлиенте
Процедура УстановитьИзображениеОсновным(Команда)
	
	Если ТекущееИзображение < 0 Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьИзображениеОсновнымСервер(Изображения[ТекущееИзображение].Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзображение(Команда)
	
	ПрисоединенныйФайл = Изображения[ТекущееИзображение].Ссылка;
	Если НЕ ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	ПометитьНаУдалениеПрисоединенныйФайл(ПрисоединенныйФайл);
	
	ОповеститьОбИзменении(ПрисоединенныйФайл);
	Оповестить("Запись_Файл", Новый Структура, ПрисоединенныйФайл);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл();
	
КонецПроцедуры // ПросмотретьИзображение()

&НаСервере
Процедура ПометитьНаУдалениеПрисоединенныйФайл(ПрисоединенныйФайл)
	
	Если НЕ ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	ПрисоединенныйФайлОбъект = ПрисоединенныйФайл.ПолучитьОбъект();
	ПрисоединенныйФайлОбъект.УстановитьПометкуУдаления(Истина);
	ПрисоединенныйФайлОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		Ответ = Неопределено;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеНаКлиентеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ДобавитьИзображениеНаКлиентеФрагмент();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	Иначе
		Возврат;
	КонецЕсли;
	
	ДобавитьИзображениеНаКлиентеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеФрагмент()
	
	Перем ИдентификаторФайла, Фильтр;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		
		Фильтр = РаботаСФайламиУНФКлиентСервер.ФильтрФайловИзображений();
		
		РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, Фильтр);
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьИзображениеНаКлиенте()

// Устанавливает видимость и доступность кнопок перелистывания изображения.
//
&НаСервере
Процедура УстановитьПрокруткуИзображения()
	
	Если Изображения.Количество() <= 1 Тогда
		Элементы.ДекорацияПрокруткаИзображенийВлево.Видимость = Ложь;
		Элементы.ДекорацияПрокруткаИзображенийВправо.Видимость = Ложь;
		Элементы.ДекорацияПрокруткаИзображенийВлевоОтступ.Видимость = Истина;
		Элементы.ДекорацияПрокруткаИзображенийВправоОтступ.Видимость = Истина;
		Возврат;
	Иначе
		Элементы.ДекорацияПрокруткаИзображенийВлево.Видимость = Истина;
		Элементы.ДекорацияПрокруткаИзображенийВправо.Видимость = Истина;
		Элементы.ДекорацияПрокруткаИзображенийВлевоОтступ.Видимость = Ложь;
		Элементы.ДекорацияПрокруткаИзображенийВправоОтступ.Видимость = Ложь;
	КонецЕсли;
	
	Если ТекущееИзображение = 0 Тогда
		Элементы.ДекорацияПрокруткаИзображенийВлево.Доступность = Ложь;
		Элементы.ДекорацияПрокруткаИзображенийВправо.Доступность = Истина;
	ИначеЕсли ТекущееИзображение = Изображения.Количество() - 1 Тогда
		Элементы.ДекорацияПрокруткаИзображенийВлево.Доступность = Истина;
		Элементы.ДекорацияПрокруткаИзображенийВправо.Доступность = Ложь;
	Иначе
		Элементы.ДекорацияПрокруткаИзображенийВлево.Доступность = Истина;
		Элементы.ДекорацияПрокруткаИзображенийВправо.Доступность = Истина
	КонецЕсли;
	
	ЭлементАдресКартинки = Элементы.Найти("АдресКартинки1");
	Если ЭлементАдресКартинки <> Неопределено Тогда
		ТекущийЭлемент = ЭлементАдресКартинки;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает видимость кнопок контекстного меню изображения.
//
&НаСервере
Процедура ИзображениеВидимостьКоманднойПанели()
	
	ЕстьИзображения = Изображения.Количество();
	Элементы.АдресКартинкиКонтекстноеМенюУстановитьИзображениеОсновным.Видимость = ЕстьИзображения;
	Элементы.АдресКартинкиКонтекстноеМенюУдалитьИзображение.Видимость = ЕстьИзображения;
	Элементы.АдресКартинкиКонтекстноеМенюПросмотретьИзображение.Видимость = ЕстьИзображения;
	ЭтоОсновноеИзображение = Ложь;
	Если ЕстьИзображения Тогда
		ЭтоОсновноеИзображение = (Изображения[ТекущееИзображение].Ссылка = Объект.ФайлКартинки);
	КонецЕсли;
	
	Элементы.АдресКартинкиКонтекстноеМенюУстановитьИзображениеОсновным.Пометка = ЭтоОсновноеИзображение;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИзображениеОсновнымСервер(ПрисоединенныйФайл)
	
	ФайлКартинки = Неопределено;
	
	Если ТипЗнч(ПрисоединенныйФайл) = Тип("Массив") Тогда
		Для каждого Эл Из ПрисоединенныйФайл Цикл
			Если ОтображатьФайлНаФорме(Эл, Ложь) Тогда
				ФайлКартинки = Эл;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ОтображатьФайлНаФорме(ПрисоединенныйФайл, Ложь) Тогда
		ФайлКартинки = ПрисоединенныйФайл;
	КонецЕсли;
	
	Если ФайлКартинки = Неопределено ИЛИ Объект.ФайлКартинки = ФайлКартинки Тогда
		Объект.ФайлКартинки = Неопределено;
	Иначе
		Объект.ФайлКартинки = ФайлКартинки;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ИзображениеВидимостьКоманднойПанели();
	
КонецПроцедуры

// Функция возвращает данные файла
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор)
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ИдентификаторФормы = УникальныйИдентификатор;
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ДополнительныеПараметры);
	
КонецФункции // ПолучитьДанныеФайла()

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРесурсаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.ЗначениеРесурса) = Тип("СправочникСсылка.Бригады") Тогда
		Элементы.ИспользоватьГрафикРесурса.Доступность = Ложь;
		Объект.ИспользоватьГрафикСотрудника = Ложь;
	ИначеЕсли ТипЗнч(Объект.ЗначениеРесурса) = Тип("СправочникСсылка.Сотрудники") Тогда
		Элементы.ИспользоватьГрафикРесурса.Доступность = Истина;
	Иначе
		Элементы.ИспользоватьГрафикРесурса.Доступность = Ложь;
		Объект.ИспользоватьГрафикСотрудника = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Если Параметр.Свойство("ВладелецФайла") И Параметр.ВладелецФайла = Объект.Ссылка
			ИЛИ НЕ Параметр.Свойство("ВладелецФайла") Тогда
			
			ОбновитьПросмотрИзображений(Источник);
			
			Если Параметр.Свойство("ЭтоНовый") И Параметр.ЭтоНовый
				И НЕ ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
				
				Если ТипЗнч(Источник) = Тип("Массив") Тогда
					ИзображениеДляПроверки = Источник[0];
				Иначе
					ИзображениеДляПроверки = Источник;
				КонецЕсли;
				Строки = Изображения.НайтиСтроки(Новый Структура("Ссылка", ИзображениеДляПроверки));
				Если Строки.Количество() <> 0 Тогда
					УстановитьИзображениеОсновнымСервер(ИзображениеДляПроверки);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

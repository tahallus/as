
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НесколькоВидовЗаказов = ПолучитьФункциональнуюОпцию("ИспользоватьВидыЗаказовПокупателей");
	Если НЕ НесколькоВидовЗаказов И Объект.НеИспользоватьДоставку Тогда
		Объект.НеИспользоватьДоставку = Ложь;
	КонецЕсли; 
	
	СостоянияЗаказов.УстановитьУсловноеОформлениеСостоянияЗавершен(
		УсловноеОформление,
		ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен"),
		"Объект.ПорядокСостояний.Состояние",
		"ПорядокСостояний"
	);
	
	УстановитьУсловноеОформлениеПоЦветамСостоянийСервер();
	УправлениеФормой(ЭтотОбъект);
	
	Если Параметры.Свойство("Страница") 
		И НЕ ПустаяСтрока(Параметры.Страница) 
		И НЕ Элементы.Найти(Параметры.Страница)=Неопределено Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы[Параметры.Страница];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_СостоянияЗаказовПокупателей" Тогда
		УстановитьУсловноеОформлениеПоЦветамСостоянийСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВидыЗаказовПокупателей", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПорядокСостоянийПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандВверхВниз();
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСостоянийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		
		ОткрытьФорму("Справочник.СостоянияЗаказовПокупателей.ФормаВыбора", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСостоянийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Если Объект.ПорядокСостояний.НайтиСтроки(Новый Структура("Состояние", ВыбранноеЗначение)).Количество() > 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если Элемент.ТекущаяСтрока = Неопределено Или ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен") Тогда
			НоваяСтрока = Объект.ПорядокСостояний.Добавить();
		Иначе
			НоваяСтрока = Объект.ПорядокСостояний.Вставить(Объект.ПорядокСостояний.НайтиПоИдентификатору(Элемент.ТекущаяСтрока).НомерСтроки-1);
		КонецЕсли;
		НоваяСтрока.Состояние = ВыбранноеЗначение;
		
		Элемент.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСостоянийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ЗапрещеноИзменениеПорядка = Ложь;
	
	СтрокаПорядкаСостояний = Объект.ПорядокСостояний.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
	Если СтрокаПорядкаСостояний <> Неопределено
		И СтрокаПорядкаСостояний.Состояние = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен") Тогда
		
		ЗапрещеноИзменениеПорядка = Истина;
	КонецЕсли;
	
	Если Не ЗапрещеноИзменениеПорядка И Строка <> Неопределено Тогда
		СтрокаПорядкаСостояний = Объект.ПорядокСостояний.НайтиПоИдентификатору(Строка);
		Если СтрокаПорядкаСостояний <> Неопределено
			И СтрокаПорядкаСостояний.Состояние = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен") Тогда
			
			ЗапрещеноИзменениеПорядка = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗапрещеноИзменениеПорядка Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеАвтоподбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	Для каждого СтрокаТабличнойЧасти Из Объект.ПорядокСостояний Цикл
		ДанныеВыбора.Добавить(СтрокаТабличнойЧасти.Состояние);
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура НеИспользоватьДоставкуПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	Если Объект.НеИспользоватьДоставку Тогда
		Объект.СостояниеОжидаетОтгрузки = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.ПустаяСсылка");
		Объект.СостояниеОтгружен = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.ПустаяСсылка");
		Объект.СостояниеДоставлен = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.ПустаяСсылка");
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВсе(Команда)
	
	ДобавитьВсеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ПереместитьСтрокуТЧ(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ПереместитьСтрокуТЧ(1);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НеИспользоватьДоставку", "Видимость", Форма.НесколькоВидовЗаказов);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаДоставка", "Доступность", НЕ Объект.НеИспользоватьДоставку);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеПоЦветамСостоянийСервер()
	
	СостоянияЗаказов.УстановитьУсловноеОформлениеПоЦветамСостояний(
		УсловноеОформление,
		Метаданные.Справочники.СостоянияЗаказовПокупателей.ПолноеИмя(),
		"Объект.ПорядокСостояний.Состояние",
		"ПорядокСостояний"
	);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВсеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостоянияЗаказовПокупателей.Ссылка КАК Состояние,
		|	ВЫБОР
		|		КОГДА СостоянияЗаказовПокупателей.Ссылка = ЗНАЧЕНИЕ(Справочник.СостоянияЗаказовПокупателей.Завершен)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Порядок
		|ИЗ
		|	Справочник.СостоянияЗаказовПокупателей КАК СостоянияЗаказовПокупателей
		|ГДЕ
		|	СостоянияЗаказовПокупателей.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	СостоянияЗаказовПокупателей.Наименование";
	
	Состояния = Запрос.Выполнить().Выгрузить();
	
	Объект.ПорядокСостояний.Загрузить(Состояния);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьСтрокуТЧ(Смещение)
	
	Если Элементы.ПорядокСостояний.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПорядка = Объект.ПорядокСостояний.НайтиПоИдентификатору(Элементы.ПорядокСостояний.ТекущаяСтрока);
	Если СтрокаПорядка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаПорядка.НомерСтроки + Смещение = 0
		Или СтрокаПорядка.НомерСтроки + Смещение > Объект.ПорядокСостояний.Количество()
		Или Объект.ПорядокСостояний[СтрокаПорядка.НомерСтроки+Смещение-1].Состояние = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен") Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ПорядокСостояний.Сдвинуть(СтрокаПорядка.НомерСтроки-1, Смещение);
	УстановитьДоступностьКомандВверхВниз();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандВверхВниз()
	
	Данные = Элементы.ПорядокСостояний.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоЗавершен = Данные.Состояние = ПредопределенноеЗначение("Справочник.СостоянияЗаказовПокупателей.Завершен");
	
	Элементы.ПорядокСостояний.ИзменятьПорядокСтрок			= Не ЭтоЗавершен;
	Элементы.ПорядокСостоянийПереместитьВниз.Доступность	= Не ЭтоЗавершен;
	Элементы.ПорядокСостоянийПереместитьВверх.Доступность	= Не ЭтоЗавершен;
	
КонецПроцедуры

#КонецОбласти

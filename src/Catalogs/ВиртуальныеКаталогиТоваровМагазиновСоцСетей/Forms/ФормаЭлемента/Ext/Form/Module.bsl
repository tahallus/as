
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьПросмотрИзображений();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

// Процедура - обработчик события Нажатие поля АдресКартинки.
//
&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(АдресКартинки) Тогда
		ПросмотретьПрисоединенныйФайл();
	ИначеЕсли Не ЭтаФорма.ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры // АдресКартинкиНажатие()

// Процедура просмотра картинки
//
&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	
	ОчиститьСообщения();
	
	ДанныеФайла = ПолучитьДанныеФайла(Объект.Логотип, УникальныйИдентификатор);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры // ПросмотретьПрисоединенныйФайл()

&НаСервере
Процедура ПометитьНаУдалениеПрисоединенныйФайл(ПрисоединенныйФайл)
	
	Если НЕ ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	ПрисоединенныйФайлОбъект = ПрисоединенныйФайл.ПолучитьОбъект();
	ПрисоединенныйФайлОбъект.УстановитьПометкуУдаления(Истина);
	ПрисоединенныйФайлОбъект.Записать();
	
КонецПроцедуры

// Процедура добавления изображения для номенклатуры
//
&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		Ответ = Неопределено;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеНаКлиентеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ДобавитьИзображениеНаКлиентеФрагмент();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	Иначе
		Возврат;
	КонецЕсли;
	
	ДобавитьИзображениеНаКлиентеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеФрагмент()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		
		Фильтр = РаботаСФайламиУНФКлиентСервер.ФильтрФайловИзображений();
		
		РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, Фильтр); 
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьИзображениеНаКлиенте()

// Функция возвращает данные файла
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор)
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ИдентификаторФормы = УникальныйИдентификатор;
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ДополнительныеПараметры);
	
КонецФункции // ПолучитьДанныеФайла()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзображение(Команда)
	
	ПрисоединенныйФайл = Объект.Логотип;
	Если НЕ ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	ПометитьНаУдалениеПрисоединенныйФайл(ПрисоединенныйФайл);
	ОповеститьОбИзменении(ПрисоединенныйФайл);
	
	Оповестить("Запись_Файл", Новый Структура,
	ПредопределенноеЗначение("Справочник.ВиртуальныеКаталогиТоваровМагазиновСоцСетейПрисоединенныеФайлы.ПустаяСсылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл();
	
КонецПроцедуры // ПросмотретьИзображение()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Если Параметр.Свойство("ВладелецФайла") И Параметр.ВладелецФайла = Объект.Ссылка
			ИЛИ НЕ Параметр.Свойство("ВладелецФайла") Тогда
			
			Если ТипЗнч(Источник) = Тип("Массив") Тогда
				ИзображениеДляПроверки = Источник[0];
			Иначе
				ИзображениеДляПроверки = Источник;
			КонецЕсли;
			
			Если ПроверкаФайлаУспешноПройдена(ИзображениеДляПроверки) Тогда
				Объект.Логотип = ИзображениеДляПроверки;
				Элементы.ДекорацияПодсказка.Видимость = Ложь;
			Иначе
				
				Объект.Логотип = Неопределено;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Минимальный размер фотографии — 1280x720 пикселей."
				,,"АдресКартинки","Объект");
				
				Элементы.ДекорацияПодсказка.Видимость = Истина;
				
				ПометитьНаУдалениеПрисоединенныйФайл(ИзображениеДляПроверки);
				ОповеститьОбИзменении(ИзображениеДляПроверки);
				
			КонецЕсли;
			
			Модифицированность = Истина;
			
			ОбновитьПросмотрИзображений();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаФайлаУспешноПройдена(ИзображениеДляПроверки)
	
	Если Не ЗначениеЗаполнено(ИзображениеДляПроверки) Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	// Минимальный размер фотографии — 1280x720 пикселей.
	ДвоичныеДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ИзображениеДляПроверки);
	Картинка = Новый Картинка(ДвоичныеДанныеФайла);
	
	Если Картинка.Ширина() < 1280 Или Картинка.Высота() < 720 Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПросмотрИзображений()
	
	АдресКартинки = "";
	
	Если НЕ Объект.Логотип.Пустая() Тогда
		АдресКартинки = РаботаСФайламиУНФ.СсылкаНаДвоичныеДанныеФайла(Объект.Логотип, УникальныйИдентификатор);
		Элементы.ДекорацияПодсказка.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

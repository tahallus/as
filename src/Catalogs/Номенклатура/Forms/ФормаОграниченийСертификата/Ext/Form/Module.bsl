#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НоменклатураГруппыЦеновыеГруппы") Тогда
		НоменклатураГруппыЦеновыеГруппы.Загрузить(Параметры.НоменклатураГруппыЦеновыеГруппы.Выгрузить());
	КонецЕсли;
	
	Если Параметры.Свойство("ВариантОграниченияСертификата") Тогда
		ВариантОграниченияСертификата = Параметры.ВариантОграниченияСертификата;
	Иначе
		ВариантОграниченияСертификата = Перечисления.ВариантыОграниченийСкидокПоНоменклатуре.ПоНоменклатуре;
	КонецЕсли;
	
	Если Параметры.Свойство("СпособОграниченияСертификата") Тогда
		СпособОграниченияСертификата = Параметры.СпособОграниченияСертификата;
	Иначе
		СпособОграниченияСертификата = Перечисления.СпособыОграниченияПодарочныхСертификатов.НеОграничен;
	КонецЕсли;
	
	ВариантОграниченияСертификатаДоИзменения = ВариантОграниченияСертификата;
	
	УправлениеВидимостьюНаСервере();
	
	// МобильныйКлиент
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаЗакрыть", "Отображение",
			ОтображениеКнопки.Картинка);
	КонецЕсли;
	// Конец МобильныйКлиент
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОграниченияСертификатаПриИзменении(Элемент)
	Если НоменклатураГруппыЦеновыеГруппы.Количество() > 0 Тогда
		Описание = Новый ОписаниеОповещения("ВариантОграниченияПоНоменклатуреПриИзмененииЗаврешение", ЭтотОбъект);
		ПоказатьВопрос(Описание, НСтр("ru = 'Таблица ограничений будет очищена. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Изменение варианта уточнения'"));
	Иначе
		ВариантОграниченияСертификатаДоИзменения = ВариантОграниченияСертификата;
		УправлениеВидимостьюНаСервере();
	КонецЕсли;

	Модифицированность = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)

	Закрыть(ЗаписатьНастройкиВХранилище());

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуНоменклатуры(Команда)

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ДобавитьГруппуНоменклатурыКатегорийЗавершение", ЭтотОбъект);
	Если ВариантОграниченияСертификата = ПредопределенноеЗначение(
		"Перечисление.ВариантыОграниченийСкидокПоНоменклатуре.ПоНоменклатуре") Тогда
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбораГруппы", , ЭтотОбъект, , , , ОповещениеОЗакрытии);
	ИначеЕсли ВариантОграниченияСертификата = ПредопределенноеЗначение(
		"Перечисление.ВариантыОграниченийСкидокПоНоменклатуре.ПоКатегориям") Тогда
		ПараметрыОткрытия = Новый Структура("");
		ОткрытьФорму("Справочник.КатегорииНоменклатуры.ФормаВыбораГруппы", ПараметрыОткрытия, ЭтотОбъект, , , ,
			ОповещениеОЗакрытии);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВариантОграниченияПоНоменклатуреПриИзмененииЗаврешение(РезультатОтвета, ДополнительныеПараметры) Экспорт

	Если РезультатОтвета <> КодВозвратаДиалога.Да Тогда
		ВариантОграниченияСертификата = ВариантОграниченияСертификатаДоИзменения;
		Возврат;
	КонецЕсли;
	
	ВариантОграниченияСертификатаДоИзменения = ВариантОграниченияСертификата;
	УправлениеВидимостьюНаСервере();
	НоменклатураГруппыЦеновыеГруппы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюНаСервере()

	Заголовок = ПодарочныйСертификат.Наименование;
	
	Если СпособОграниченияСертификата = Перечисления.СпособыОграниченияПодарочныхСертификатов.НеОграничен Тогда
		Элементы.ВариантОграниченияСертификата.Доступность = Ложь;
		Элементы.НоменклатураГруппыЦеновыеГруппы.Доступность = Ложь;
	Иначе
		Элементы.ВариантОграниченияСертификата.Доступность = Истина;
		Элементы.НоменклатураГруппыЦеновыеГруппы.Доступность = Истина;
	КонецЕсли;
	
	Если ВариантОграниченияСертификата = Перечисления.ВариантыОграниченийСкидокПоНоменклатуре.ПоНоменклатуре Тогда
		
		Элементы.НоменклатураГруппыЦеновыеГруппыЗначениеУточнения.Заголовок = НСтр("ru = 'Номенклатура'");
		Элементы.НоменклатураГруппыЦеновыеГруппыЗначениеУточнения.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");

		Элементы.ДекорацияПодсказкаУточнения.Заголовок = НСтр(
			"ru = 'Заполните уточнения, если требуется, чтобы сертификат действовал,
			|либо не действовал при оплате определенных товаров или групп товаров.
			|Если список не заполнен, то оплата сертификатом возможна для всех позиций номенклатуры.'");

		Элементы.НоменклатураГруппыЦеновыеГруппыХарактеристика.Видимость = Истина;
		Элементы.НоменклатураГруппыЦеновыеГруппыДобавитьГруппу.Видимость = Истина;
		Элементы.НоменклатураГруппыЦеновыеГруппыДобавитьГруппу.Заголовок = НСтр("ru = 'Добавить группу номенклатуры'");
		
	ИначеЕсли ВариантОграниченияСертификата = Перечисления.ВариантыОграниченийСкидокПоНоменклатуре.ПоКатегориям Тогда
		
		Элементы.НоменклатураГруппыЦеновыеГруппыЗначениеУточнения.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.КатегорииНоменклатуры");
		Элементы.НоменклатураГруппыЦеновыеГруппыЗначениеУточнения.Заголовок = НСтр("ru = 'Категория номенклатуры'");
		
		Элементы.ДекорацияПодсказкаУточнения.Заголовок = НСтр(
			"ru = 'Заполните уточнения, если требуется, чтобы сертификат действовал,
			|либо не действовал при оплате товаров определенных категорий.
			|Если список не заполнен, то оплата сертификатом возможна для всех категорий.'");
		
		Элементы.НоменклатураГруппыЦеновыеГруппыХарактеристика.Видимость = Ложь;
		Элементы.НоменклатураГруппыЦеновыеГруппыДобавитьГруппу.Видимость = Истина;
		Элементы.НоменклатураГруппыЦеновыеГруппыДобавитьГруппу.Заголовок = НСтр("ru = 'Добавить группу категорий'");
		
	ИначеЕсли ВариантОграниченияСертификата = Перечисления.ВариантыОграниченийСкидокПоНоменклатуре.ПоЦеновымГруппам Тогда
		
		Элементы.НоменклатураГруппыЦеновыеГруппыЗначениеУточнения.Заголовок = НСтр("ru = 'Ценовая группа'");
		Элементы.НоменклатураГруппыЦеновыеГруппыЗначениеУточнения.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ЦеновыеГруппы");
		
		Элементы.ДекорацияПодсказкаУточнения.Заголовок = НСтр(
			"ru = 'Заполните уточнения, если требуется, чтобы сертификат действовал,
			|либо не действовал при оплате товаров определенных ценовых групп.
			|Если список не заполнен, то оплата сертификатом возможна для всех ценовых групп.'");
		
		Элементы.НоменклатураГруппыЦеновыеГруппыХарактеристика.Видимость = Ложь;
		Элементы.НоменклатураГруппыЦеновыеГруппыДобавитьГруппу.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуНоменклатурыКатегорийЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		НоваяСтрока = НоменклатураГруппыЦеновыеГруппы.Добавить();
		НоваяСтрока.ЗначениеУточнения = РезультатЗакрытия;
		Элементы.НоменклатураГруппыЦеновыеГруппы.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаписатьНастройкиВХранилище()

	АдресВХранилище = ПоместитьВоВременноеХранилище(НоменклатураГруппыЦеновыеГруппы.Выгрузить());

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВариантОграниченияСертификата", ВариантОграниченияСертификата);
	СтруктураПараметров.Вставить("СпособОграниченияСертификата", СпособОграниченияСертификата);
	СтруктураПараметров.Вставить("АдресВХранилище", АдресВХранилище);

	Возврат СтруктураПараметров;

КонецФункции

&НаКлиенте
Процедура СпособОграниченияСертификатаПриИзменении(Элемент)
	
	УправлениеВидимостьюНаСервере();
	
КонецПроцедуры

#КонецОбласти

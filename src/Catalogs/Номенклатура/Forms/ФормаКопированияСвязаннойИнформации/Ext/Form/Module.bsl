
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьНастройкиОтображенияПодсказок();
	
	Параметры.Свойство("Номенклатура", Номенклатура);
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, 
		"КатегорияНоменклатуры, ТипНоменклатуры, ИспользоватьХарактеристики");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	
	Если Параметры.Свойство("КопироватьЕдиницыИзмерения", КопироватьЕдиницыИзмерения)
		ИЛИ Параметры.Свойство("КопироватьХарактеристики", КопироватьХарактеристики)
		ИЛИ Параметры.Свойство("КопироватьСпецификации", КопироватьСпецификации)
		ИЛИ Параметры.Свойство("КопироватьКомплектации", КопироватьКомплектации)
		ИЛИ Параметры.Свойство("КопироватьСоставНаборов", КопироватьСоставНаборов) Тогда
		ПредставленияОбъектов = Новый Массив;
		Если КопироватьЕдиницыИзмерения Тогда
			ПредставленияОбъектов.Добавить(НСтр("ru = 'единиц измерения'"));
		КонецЕсли; 
		Если КопироватьХарактеристики Тогда
			ПредставленияОбъектов.Добавить(НСтр("ru = 'характеристик'"));
		КонецЕсли; 
		Если КопироватьСпецификации Тогда
			ПредставленияОбъектов.Добавить(НСтр("ru = 'спецификаций'"));
		КонецЕсли; 
		Если КопироватьКомплектации Тогда
			ПредставленияОбъектов.Добавить(НСтр("ru = 'комплектаций'"));
		КонецЕсли; 
		Если КопироватьСоставНаборов Тогда
			ПредставленияОбъектов.Добавить(НСтр("ru = 'состава наборов'"));
		КонецЕсли;
		ОбъектыСтрокой = СтрСоединить(ПредставленияОбъектов, ", ");
		Заголовок = СтрШаблон(НСтр("ru = 'Копирование %1'"), ОбъектыСтрокой);
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("КопироватьИзВыбранных", КопироватьИзВыбранных) Тогда
		ОпределитьРежим();
	КонецЕсли; 
	НастройкаРежима();
	Если НЕ КопироватьИзВыбранных Тогда
		Если Параметры.Свойство("ВыбранныеЗначения") И ТипЗнч(Параметры.ВыбранныеЗначения) = Тип("Массив") Тогда
			ВыбранныеЗначения = Параметры.ВыбранныеЗначения;
		Иначе
			ВыбранныеЗначения = Новый Массив;
		КонецЕсли; 
		ОбновитьСписокКопирования(ВыбранныеЗначения);
		Если Значения.Количество() = 0 Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	УправлениеФормой(ЭтотОбъект);
	
	Если КопироватьИзВыбранных Тогда
		Элементы.Скопировать.Заголовок = НСтр("ru = 'Скопировать и закрыть'");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.Номенклатура") ИЛИ НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Значение", ВыбранноеЗначение);
	Если ВыбранныеОбъекты.НайтиСтроки(СтруктураОтбора).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = ВыбранныеОбъекты.Добавить();
	НоваяСтрока.Значение = ВыбранноеЗначение;
	НоваяСтрока.Пометка = Истина;
	Если КопироватьИзВыбранных Тогда
		ОбновитьСписокКопирования();	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыбранныеОбъектыЗначениеПриИзменении(Элемент)
	
	ОбновитьСписокКопирования();	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеОбъектыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ КопироватьИзВыбранных Тогда
		ТекСтр = Элементы.ВыбранныеОбъекты.ТекущиеДанные;
		ТекСтр.Пометка = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВыбранныеОбъектыСообщение" Тогда
		СтандартнаяОбработка = Ложь;
		СтрокаТабличнойЧасти = ВыбранныеОбъекты.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если КопироватьЕдиницыИзмерения Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Отбор", Новый Структура);
			ПараметрыОткрытия.Отбор.Вставить("Владелец", СтрокаТабличнойЧасти.Значение);
			ОткрытьФорму("Справочник.ЕдиницыИзмерения.ФормаСписка", ПараметрыОткрытия, 
				ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли КопироватьХарактеристики Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("СкрытьРеквизиты", Истина);
			ПараметрыОткрытия.Вставить("Отбор", Новый Структура);
			ПараметрыОткрытия.Отбор.Вставить("Владелец", СтрокаТабличнойЧасти.Значение);
			ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.ФормаСписка", ПараметрыОткрытия, 
				ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли КопироватьСпецификации Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Отбор", Новый Структура);
			ПараметрыОткрытия.Отбор.Вставить("Владелец", СтрокаТабличнойЧасти.Значение);
			ОткрытьФорму("Справочник.Спецификации.ФормаСписка", ПараметрыОткрытия, 
				ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли КопироватьКомплектации Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Отбор", Новый Структура);
			ПараметрыОткрытия.Отбор.Вставить("Владелец", СтрокаТабличнойЧасти.Значение);
			ОткрытьФорму("Справочник.КомплектацииНоменклатуры.ФормаСписка", ПараметрыОткрытия, 
				ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли КопироватьСоставНаборов Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("НоменклатураНабора", СтрокаТабличнойЧасти.Значение);
			ЗначенияРеквизитов = ЗначенияРеквизитов(СтрокаТабличнойЧасти.Значение, 
				"СпособРасчетаЦеныНабора, ИспользоватьХарактеристики");
			ПараметрыОткрытия.Вставить("СпособРасчетаЦеныНабора", ЗначенияРеквизитов.СпособРасчетаЦеныНабора);
			ПараметрыОткрытия.Вставить("ИспользоватьХарактеристики", ЗначенияРеквизитов.ИспользоватьХарактеристики);
			ОткрытьФорму("РегистрСведений.СоставНаборов.Форма.ФормаРедактированияСостава", ПараметрыОткрытия, 
				ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеОбъектыПослеУдаления(Элемент)
	
	ОбновитьСписокКопирования();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗакрытьПредупреждениеНажатие(Элемент)
	
	// Закрытие подсказки
	Если ТекущаяПодсказка = "СозданиеХарактеристик" Тогда
		УстановитьСвойство(НастройкиОтображенияПодсказок, "СкрытьПодсказкуСозданияХарактеристик", Истина);
		СохранитьНастройкиОтображенияПодсказок();
	ИначеЕсли ТекущаяПодсказка = "ОтсутствиеХарактеристик" Тогда
		УстановитьСвойство(НастройкиОтображенияПодсказок, "СкрытьПодсказкуОтсутствияХарактеристик", Истина);
		СохранитьНастройкиОтображенияПодсказок();
	КонецЕсли;
	ТекущаяПодсказка = "";
	Элементы.Предупреждение.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	Для каждого СтрокаТабличнойЧасти Из Значения Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла; 	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для каждого СтрокаТабличнойЧасти Из Значения Цикл
		СтрокаТабличнойЧасти.Пометка = Ложь;
	КонецЦикла; 	
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	СтруктураОтбора = Новый Структура;
	Для каждого ПараметрВыбора Из Элементы.ВыбранныеОбъектыЗначение.ПараметрыВыбора Цикл
		ИмяРеквизита = СтрЗаменить(ПараметрВыбора.Имя, "Отбор.", "");
		ЗначениеОтбора = ?(ТипЗнч(ПараметрВыбора.Значение) = Тип("ФиксированныйМассив"), 
			Новый Массив(ПараметрВыбора.Значение), ПараметрВыбора.Значение);
		
		Если ИмяРеквизита = "Дополнительно.ЭтоКопирование" Тогда
			Продолжить 
		КонецЕсли;
		
		СтруктураОтбора.Вставить(ИмяРеквизита, ЗначениеОтбора);
	КонецЦикла;
	СтруктураОткрытия = Новый Структура;
	СтруктураОткрытия.Вставить("Отбор", СтруктураОтбора);
	СтруктураОткрытия.Вставить("РежимВыбора", Истина);
	СтруктураОткрытия.Вставить("ЭтоКопирование", Истина); 
	СтруктураОткрытия.Вставить("ЗакрыватьПриВыборе", Ложь);
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", СтруктураОткрытия, 
		ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Копировать(Команда)
	
	Отказ = Ложь;
	Ошибки = Неопределено;
	Для Каждого СтрокаТабличнойЧасти Из ВыбранныеОбъекты Цикл
		Индекс = ВыбранныеОбъекты.Индекс(СтрокаТабличнойЧасти);
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Значение) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ВыбранныеОбъекты[%1].Значение", 
				НСтр("ru = 'Не выбран объект копирования'"), "ВыбранныеОбъекты.Значение", Индекс, 
				НСтр("ru = 'Не выбран объект копирования в строке %1'"));
		КонецЕсли; 
	КонецЦикла;
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	ВыполнитьКопированиеДанных();
	
	Если КопироватьИзВыбранных Тогда
		ИмяСобытия = "";
		Если КопироватьСоставНаборов Тогда
			ИмяСобытия = "КопированиеСоставаНабора";
		ИначеЕсли КопироватьХарактеристики Тогда
			ИмяСобытия = "КопированиеХарактеристик";
		ИначеЕсли КопироватьСпецификации Тогда
			ИмяСобытия = "КопированиеСпецификаций";
		ИначеЕсли КопироватьКомплектации Тогда
			ИмяСобытия = "КопированиеКомплектаций";
		ИначеЕсли КопироватьЕдиницыИзмерения Тогда
			ИмяСобытия = "КопированиеЕдиницИзмерения";
		КонецЕсли;
		Если НЕ ПустаяСтрока(ИмяСобытия) Тогда
			Оповестить(ИмяСобытия, Номенклатура, ЭтотОбъект);
		КонецЕсли; 
	КонецЕсли; 
	
	Если КопироватьИзВыбранных Тогда
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();		
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	// Текст предупреждения
	Если Форма.ЕстьСвязьСХарактеристиками 
		И Форма.КопироватьСоставНаборов 
		И ПолучитьСвойство(Форма.НастройкиОтображенияПодсказок, "СкрытьПодсказкуСозданияХарактеристик", Ложь) = Ложь Тогда
		Форма.ТекущаяПодсказка = "СозданиеХарактеристик";
	ИначеЕсли Форма.ЕстьСвязьСХарактеристиками 
		И (Форма.КопироватьСпецификации ИЛИ Форма.КопироватьКомплектации)
		И ПолучитьСвойство(Форма.НастройкиОтображенияПодсказок, "СкрытьПодсказкуОтсутствияХарактеристик", Ложь) = Ложь Тогда
		Форма.ТекущаяПодсказка = "ОтсутствиеХарактеристик";
	Иначе
		Форма.ТекущаяПодсказка = "";
	КонецЕсли;
	ОтобразитьПодсказку(Форма);
	
	Элементы.ВыбранныеОбъектыПометка.Видимость = НЕ Форма.КопироватьИзВыбранных;
	Элементы.ВыбранныеОбъектыСообщение.Видимость = НЕ Форма.КопироватьИзВыбранных И Форма.КопированиеВыполнено;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьРежим()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("КопироватьЕдиницыИзмерения", КопироватьЕдиницыИзмерения);
	Запрос.УстановитьПараметр("КопироватьХарактеристики", КопироватьХарактеристики);
	Запрос.УстановитьПараметр("КопироватьСпецификации", КопироватьСпецификации);
	Запрос.УстановитьПараметр("КопироватьКомплектации", КопироватьКомплектации);
	Запрос.УстановитьПараметр("КопироватьСоставНаборов", КопироватьСоставНаборов);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец = &Номенклатура
	|	И &КопироватьЕдиницыИзмерения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Номенклатура
	|	И &КопироватьХарактеристики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спецификации.Ссылка
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|ГДЕ
	|	Спецификации.Владелец = &Номенклатура
	|	И &КопироватьСпецификации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	КомплектацииНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.КомплектацииНоменклатуры КАК КомплектацииНоменклатуры
	|ГДЕ
	|	КомплектацииНоменклатуры.Владелец = &Номенклатура
	|	И &КопироватьКомплектации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоставНаборов.НоменклатураНабора
	|ИЗ
	|	РегистрСведений.СоставНаборов КАК СоставНаборов
	|ГДЕ
	|	СоставНаборов.НоменклатураНабора = &Номенклатура
	|	И &КопироватьСоставНаборов";
	КопироватьИзВыбранных = Запрос.Выполнить().Пустой();		
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокКопирования(ВыбранныеЗначения = Неопределено)
	
	МассивНоменклатуры = Новый Массив;
	Если КопироватьИзВыбранных Тогда
		Для каждого СтрокаТабличнойЧасти Из ВыбранныеОбъекты Цикл
			МассивНоменклатуры.Добавить(СтрокаТабличнойЧасти.Значение);
		КонецЦикла; 
	Иначе
		МассивНоменклатуры.Добавить(Номенклатура);
	КонецЕсли;
	
	Если МассивНоменклатуры.Количество() = 0 Тогда
		Если КопироватьИзВыбранных Тогда
			Значения.Очистить();
		КонецЕсли; 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("НесколькоИсточников", КопироватьИзВыбранных И ВыбранныеОбъекты.Количество()>1);
	Запрос.УстановитьПараметр("КопироватьЕдиницыИзмерения", КопироватьЕдиницыИзмерения);
	Запрос.УстановитьПараметр("КопироватьХарактеристики", КопироватьХарактеристики);
	Запрос.УстановитьПараметр("КопироватьСпецификации", КопироватьСпецификации);
	Запрос.УстановитьПараметр("КопироватьКомплектации", КопироватьКомплектации);
	Запрос.УстановитьПараметр("КопироватьСоставНаборов", КопироватьСоставНаборов);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", ?(КопироватьИзВыбранных, ИспользоватьХарактеристики, Неопределено));
	Запрос.УстановитьПараметр("ВыбранныеЗначения", Значения.Выгрузить(Новый Структура("Пометка", Истина), "Значение, ТипЗначения, Пометка"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыбранныеЗначения.Значение КАК Значение,
	|	ВыбранныеЗначения.ТипЗначения КАК ТипЗначения,
	|	ВыбранныеЗначения.Пометка КАК Пометка
	|ПОМЕСТИТЬ ВыбранныеЗначения
	|ИЗ
	|	&ВыбранныеЗначения КАК ВыбранныеЗначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕдиницыИзмерения.Ссылка КАК Значение,
	|	ЕдиницыИзмерения.Наименование + ВЫБОР
	|		КОГДА &НесколькоИсточников
	|			ТОГДА "" ("" + ЕдиницыИзмерения.Владелец.Наименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Представление,
	|	""ЕдиницыИзмерения"" КАК ТипЗначения,
	|	ЕСТЬNULL(ВыбранныеЗначения.Пометка, ИСТИНА) КАК Пометка,
	|	1 КАК Порядок,
	|	ЛОЖЬ КАК ИспользоватьХарактеристики,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЕдиницыИзмерения.Владелец КАК Номенклатура
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеЗначения КАК ВыбранныеЗначения
	|		ПО ЕдиницыИзмерения.Ссылка = ВыбранныеЗначения.Значение
	|			И (ВыбранныеЗначения.ТипЗначения = ""ЕдиницыИзмерения"")
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец В(&МассивНоменклатуры)
	|	И НЕ ЕдиницыИзмерения.ПометкаУдаления
	|	И &КопироватьЕдиницыИзмерения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	ХарактеристикиНоменклатуры.Наименование + ВЫБОР
	|		КОГДА &НесколькоИсточников
	|			ТОГДА "" ("" + ХарактеристикиНоменклатуры.Владелец.Наименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	""ХарактеристикиНоменклатуры"",
	|	ЕСТЬNULL(ВыбранныеЗначения.Пометка, ИСТИНА),
	|	2,
	|	ЛОЖЬ,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ХарактеристикиНоменклатуры.Владелец
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеЗначения КАК ВыбранныеЗначения
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ВыбранныеЗначения.Значение
	|			И (ВыбранныеЗначения.ТипЗначения = ""ХарактеристикиНоменклатуры"")
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец В(&МассивНоменклатуры)
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И НЕ ХарактеристикиНоменклатуры.Недействителен
	|	И &КопироватьХарактеристики
	|	И НЕ &ИспользоватьХарактеристики = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Спецификации.Ссылка,
	|	Спецификации.Наименование + ВЫБОР
	|		КОГДА &НесколькоИсточников
	|			ТОГДА "" ("" + Спецификации.Владелец.Наименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	""Спецификации"",
	|	ЕСТЬNULL(ВыбранныеЗначения.Пометка, ИСТИНА),
	|	3,
	|	ВЫБОР
	|		КОГДА Спецификации.ХарактеристикаПродукции <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Спецификации.ХарактеристикаПродукции,
	|	Спецификации.Владелец
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеЗначения КАК ВыбранныеЗначения
	|		ПО Спецификации.Ссылка = ВыбранныеЗначения.Значение
	|			И (ВыбранныеЗначения.ТипЗначения = ""Спецификации"")
	|ГДЕ
	|	Спецификации.Владелец В(&МассивНоменклатуры)
	|	И НЕ Спецификации.ПометкаУдаления
	|	И НЕ Спецификации.Недействителен
	|	И Спецификации.Заказ В (ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|	И &КопироватьСпецификации
	|	И ВЫБОР
	|			КОГДА &ИспользоватьХарактеристики = ЛОЖЬ
	|				ТОГДА Спецификации.ХарактеристикаПродукции = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомплектацииНоменклатуры.Ссылка,
	|	КомплектацииНоменклатуры.Наименование + ВЫБОР
	|		КОГДА &НесколькоИсточников
	|			ТОГДА "" ("" + КомплектацииНоменклатуры.Владелец.Наименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	""Комплектации"",
	|	ЕСТЬNULL(ВыбранныеЗначения.Пометка, ИСТИНА),
	|	3,
	|	ВЫБОР
	|		КОГДА КомплектацииНоменклатуры.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	КомплектацииНоменклатуры.Характеристика,
	|	КомплектацииНоменклатуры.Владелец
	|ИЗ
	|	Справочник.КомплектацииНоменклатуры КАК КомплектацииНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеЗначения КАК ВыбранныеЗначения
	|		ПО КомплектацииНоменклатуры.Ссылка = ВыбранныеЗначения.Значение
	|			И (ВыбранныеЗначения.ТипЗначения = ""Комплектации"")
	|ГДЕ
	|	КомплектацииНоменклатуры.Владелец В(&МассивНоменклатуры)
	|	И НЕ КомплектацииНоменклатуры.ПометкаУдаления
	|	И НЕ КомплектацииНоменклатуры.Недействителен
	|	И &КопироватьКомплектации
	|	И ВЫБОР
	|			КОГДА &ИспользоватьХарактеристики = ЛОЖЬ
	|				ТОГДА КомплектацииНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА СоставНаборов.НоменклатураНабора.Наименование + "" (Общий состав для всех характеристик)""
	|		КОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СоставНаборов.НоменклатураНабора.Наименование + "" (Состав набора)""
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора.Наименование + ВЫБОР
	|				КОГДА &НесколькоИсточников
	|					ТОГДА "" ("" + СоставНаборов.НоменклатураНабора.Наименование + "")""
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	""СоставНаборов"",
	|	ЕСТЬNULL(ВыбранныеЗначения.Пометка, ИСТИНА),
	|	4,
	|	ВЫБОР
	|		КОГДА СоставНаборов.ХарактеристикаНабора <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И НЕ СоставНаборов.Общий
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|	КОНЕЦ,
	|	СоставНаборов.НоменклатураНабора
	|ИЗ
	|	РегистрСведений.СоставНаборов КАК СоставНаборов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеЗначения КАК ВыбранныеЗначения
	|		ПО (ВЫБОР
	|				КОГДА СоставНаборов.Общий
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|			КОНЕЦ = ВыбранныеЗначения.Значение)
	|			И (ВыбранныеЗначения.ТипЗначения = ""СоставНаборов"")
	|ГДЕ
	|	СоставНаборов.НоменклатураНабора В(&МассивНоменклатуры)
	|	И &КопироватьСоставНаборов
	|	И ВЫБОР
	|			КОГДА &ИспользоватьХарактеристики = ЛОЖЬ
	|				ТОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						И НЕ СоставНаборов.Общий
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА СоставНаборов.НоменклатураНабора.Наименование + "" (Общий состав для всех характеристик)""
	|		КОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СоставНаборов.НоменклатураНабора.Наименование + "" (Состав набора)""
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора.Наименование + ВЫБОР
	|				КОГДА &НесколькоИсточников
	|					ТОГДА "" ("" + СоставНаборов.НоменклатураНабора.Наименование + "")""
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВыбранныеЗначения.Пометка, ИСТИНА),
	|	ВЫБОР
	|		КОГДА СоставНаборов.ХарактеристикаНабора <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И НЕ СоставНаборов.Общий
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|	КОНЕЦ,
	|	СоставНаборов.НоменклатураНабора
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Номенклатура,
	|	Значение";
	
	Значения.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если КопироватьСпецификации ИЛИ КопироватьКомплектации Тогда
		ТабПроверки = Значения.Выгрузить();
		ТабПроверки.Свернуть("Характеристика");
		Если ТабПроверки.Количество() > 1 Тогда
			// Если копируются спецификации или комплектации с разными характеристкиами - отображаем их в списке
			Для каждого СтрокаКопирования Из Значения Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаКопирования.Характеристика) Тогда
					Продолжить;
				КонецЕсли; 
				Если Прав(СтрокаКопирования.Представление, 1) = ")" Тогда
					СтрокаКопирования.Представление = СтрШаблон("%1, %2)", 
						Лев(СтрокаКопирования.Представление, СтрДлина(СтрокаКопирования.Представление) - 1), 
						Строка(СтрокаКопирования.Характеристика));
				Иначе
					СтрокаКопирования.Представление = СтрШаблон("%1 (%2)", 
						СтрокаКопирования.Представление, Строка(СтрокаКопирования.Характеристика));
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли; 
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НастройкаРежима()
	
	Если КопироватьИзВыбранных Тогда
		Элементы.ГруппаВыбранныеОбъекты.Заголовок = НСтр("ru = 'Скопировать из'");
		Если Элементы.Колонки.ПодчиненныеЭлементы.Индекс(Элементы.КолонкаЗначения) = 0 Тогда
			 Элементы.Переместить(Элементы.КолонкаЗначения, Элементы.Колонки);
		КонецЕсли; 
	Иначе
		Элементы.ГруппаВыбранныеОбъекты.Заголовок = НСтр("ru = 'Скопировать в'");
		Если Элементы.Колонки.ПодчиненныеЭлементы.Индекс(Элементы.КолонкаОбъекты) = 0 Тогда
			 Элементы.Переместить(Элементы.КолонкаОбъекты, Элементы.Колонки);
		КонецЕсли; 
	КонецЕсли;
	
	ЗаполнитьПараметрыВыбора();
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьПараметрыВыбора()
	
	ПараметрыВыбора = Новый Массив;
	
	ЕстьСвязьСХарактеристиками = (КопироватьСпецификации ИЛИ КопироватьКомплектации ИЛИ КопироватьСоставНаборов) 
		И ИспользоватьХарактеристики;
	ТребуетсяКопированиеХарактеристик = КопироватьХарактеристики ИЛИ ЕстьСвязьСХарактеристиками;
	
	// Копирование характеристик, спецификаций и комплектаций ограничено той же категорией номенклатуры
	Если ЗначениеЗаполнено(Номенклатура) 
		И (ТребуетсяКопированиеХарактеристик ИЛИ КопироватьСпецификации ИЛИ КопироватьКомплектации) Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.КатегорияНоменклатуры", КатегорияНоменклатуры));
	КонецЕсли;
	
	Если КопироватьЕдиницыИзмерения Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЭтоНабор", Ложь));
	КонецЕсли; 
	Если КопироватьХарактеристики Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ИспользоватьХарактеристики", Истина));
	КонецЕсли; 
	Если КопироватьСпецификации ИЛИ КопироватьКомплектации Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЭтоНабор", Ложь));
	КонецЕсли; 
	Если КопироватьСоставНаборов Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЭтоНабор", Истина));
	КонецЕсли;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.НоменклатураИсточник", Номенклатура));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Дополнительно.ЭтоКопирование", Истина));
	
	// Если номенклатура-источник использует характеристики, то для получателей тоже можно использовать 
	// 	только номенклатуру, использующую характеристики
	Если НЕ КопироватьИзВыбранных И ИспользоватьХарактеристики 
		И (КопироватьСпецификации ИЛИ КопироватьКомплектации ИЛИ КопироватьСоставНаборов) Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ИспользоватьХарактеристики", Истина));
	КонецЕсли;
	
	Элементы.ВыбранныеОбъектыЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКопированиеДанных()
	
	Если КопироватьИзВыбранных Тогда
		Владельцы = Новый Массив;
		Владельцы.Добавить(Номенклатура);
	Иначе
		Владельцы = Новый Массив;
		Для каждого СтрокаТабличнойЧасти Из ВыбранныеОбъекты Цикл
			Если НЕ СтрокаТабличнойЧасти.Пометка Тогда
				Продолжить;
			КонецЕсли;
			Владельцы.Добавить(СтрокаТабличнойЧасти.Значение);
		КонецЦикла; 
	КонецЕсли;
	Если Владельцы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КопироватьСпецификации ИЛИ КопироватьКомплектации ИЛИ КопироватьСоставНаборов Тогда
		МассивНоменклатуры = Новый Массив;
		Для каждого СтрокаТабличнойЧасти Из ВыбранныеОбъекты Цикл
			МассивНоменклатуры.Добавить(СтрокаТабличнойЧасти.Значение);
		КонецЦикла; 
		СоответствиеХарактеристик = СуществующиеХарактеристики(Номенклатура, МассивНоменклатуры, КопироватьИзВыбранных);
	Иначе
		СоответствиеХарактеристик = Новый Соответствие;
	КонецЕсли; 
	
	НачатьТранзакцию();
	Скопировано = 0;
	Для каждого СтрокаТабличнойЧасти Из Значения Цикл
		Если НЕ СтрокаТабличнойЧасти.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Скопировано = Скопировано+1;
		Если СтрокаТабличнойЧасти.ТипЗначения = "ЕдиницыИзмерения" Тогда
			КопироватьЕдиницуИзмерения(СтрокаТабличнойЧасти.Значение, Владельцы, СтрокаТабличнойЧасти.Номенклатура);
		КонецЕсли; 
		Если СтрокаТабличнойЧасти.ТипЗначения = "ХарактеристикиНоменклатуры" Тогда
			КопироватьХарактеристику(СтрокаТабличнойЧасти.Значение, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных);
		КонецЕсли; 
		Если СтрокаТабличнойЧасти.ТипЗначения = "Спецификации" Тогда
			КопироватьСпецификацию(СтрокаТабличнойЧасти.Значение, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных);
		КонецЕсли; 
		Если СтрокаТабличнойЧасти.ТипЗначения = "Комплектации" Тогда
			КопироватьКомплектацию(СтрокаТабличнойЧасти.Значение, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных);
		КонецЕсли; 
		Если СтрокаТабличнойЧасти.ТипЗначения = "СоставНаборов" Тогда
			КопироватьСоставНаборов(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.Характеристика, 
				(СтрокаТабличнойЧасти.Значение = Неопределено), Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных);
		КонецЕсли; 
	КонецЦикла;
	
	Попытка
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Копирование связанной информации.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.Номенклатура, Номенклатура, ТекстСообщения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецПопытки;  
	
	Если НЕ КопироватьИзВыбранных Тогда
		Для каждого СтрокаТабличнойЧасти Из ВыбранныеОбъекты Цикл
			СтрокаТабличнойЧасти.Сообщение = "";
			СтрокаТабличнойЧасти.Пометка = Ложь;
		КонецЦикла;
		Если КопироватьЕдиницыИзмерения Тогда
			ТекстСообщения = НСтр("ru = 'Скопированы единицы (%1)'");
		ИначеЕсли КопироватьХарактеристики Тогда
			ТекстСообщения = НСтр("ru = 'Скопированы характеристики (%1)'");
		ИначеЕсли КопироватьСпецификации Тогда
			ТекстСообщения = НСтр("ru = 'Скопированы спецификации (%1)'");
		ИначеЕсли КопироватьКомплектации Тогда
			ТекстСообщения = НСтр("ru = 'Скопированы комплектации (%1)'");
		ИначеЕсли КопироватьСоставНаборов Тогда
			ТекстСообщения = НСтр("ru = 'Скопированы наборы (%1)'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Скопированы элементы (%1)'");
		КонецЕсли; 
		Для каждого Владелец Из Владельцы Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Значение", Владелец);
			Строки = ВыбранныеОбъекты.НайтиСтроки(СтруктураОтбора);
			Если Строки.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТабличнойЧасти = Строки[0];
			СтрокаТабличнойЧасти.Сообщение = СтрШаблон(ТекстСообщения, Скопировано);
		КонецЦикла; 
		КопированиеВыполнено = Истина;
		УправлениеФормой(ЭтотОбъект);
		Элементы.Отмена.Заголовок = НСтр("ru = 'Закрыть'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуществующиеХарактеристики(Номенклатура, ВыбранныеОбъекты, КопироватьИзВыбранных)
	
	Результат = Новый Соответствие;
	Для каждого Объект Из ВыбранныеОбъекты Цикл
		Результат.Вставить(Объект, Новый Соответствие);
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ВыбранныеОбъекты", ВыбранныеОбъекты);
	Если КопироватьИзВыбранных Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КопируемыеХарактеристики.Владелец КАК Номенклатура,
		|	КопируемыеХарактеристики.Ссылка КАК Характеристика,
		|	СуществующиеХарактеристики.Ссылка КАК СуществующаяХарактеристика
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК КопируемыеХарактеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СуществующиеХарактеристики
		|		ПО КопируемыеХарактеристики.Наименование = СуществующиеХарактеристики.Наименование
		|			И (СуществующиеХарактеристики.Владелец = &Номенклатура)
		|ГДЕ
		|	КопируемыеХарактеристики.Владелец В(&ВыбранныеОбъекты)
		|	И НЕ СуществующиеХарактеристики.Ссылка ЕСТЬ NULL";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СуществующиеХарактеристики.Владелец КАК Номенклатура,
		|	КопируемыеХарактеристики.Ссылка КАК Характеристика,
		|	СуществующиеХарактеристики.Ссылка КАК СуществующаяХарактеристика
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК КопируемыеХарактеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СуществующиеХарактеристики
		|		ПО КопируемыеХарактеристики.Наименование = СуществующиеХарактеристики.Наименование
		|			И (СуществующиеХарактеристики.Владелец В (&ВыбранныеОбъекты))
		|ГДЕ
		|	КопируемыеХарактеристики.Владелец = &Номенклатура
		|	И НЕ СуществующиеХарактеристики.Ссылка ЕСТЬ NULL";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.Номенклатура].Вставить(Выборка.Характеристика, Выборка.СуществующаяХарактеристика);	
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура КопироватьЕдиницуИзмерения(ЕдиницаИзмерения, Владельцы, Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВесИОбъемЕдиницТоваров.Вес КАК Вес,
	|	ВесИОбъемЕдиницТоваров.Объем КАК Объем
	|ИЗ
	|	РегистрСведений.ВесИОбъемЕдиницТоваров КАК ВесИОбъемЕдиницТоваров
	|ГДЕ
	|	ВесИОбъемЕдиницТоваров.ЕдиницаИзмерения = &ЕдиницаИзмерения
	|	И ВесИОбъемЕдиницТоваров.Номенклатура = &Номенклатура";
	ВыборкаВесОбъем = Запрос.Выполнить().Выбрать();
	СохранятьВесОбъем = ВыборкаВесОбъем.Следующий();
	
	Для каждого Владелец Из Владельцы Цикл
		НовыйЭлемент = ЕдиницаИзмерения.Скопировать();
		НовыйЭлемент.Владелец = Владелец;
		НовыйЭлемент.Записать();
		Если СохранятьВесОбъем Тогда
			Запись = РегистрыСведений.ВесИОбъемЕдиницТоваров.СоздатьМенеджерЗаписи();
			Запись.Номенклатура = Владелец;
			Запись.ЕдиницаИзмерения = НовыйЭлемент.Ссылка;
			Запись.Вес = ВыборкаВесОбъем.Вес;
			Запись.Объем = ВыборкаВесОбъем.Объем;
			Запись.Записать(Истина);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура КопироватьХарактеристику(Характеристика, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных)
	
	Для каждого Владелец Из Владельцы Цикл
		НовыйЭлемент = Характеристика.Скопировать();
		СтарыйВладелец = НовыйЭлемент.Владелец;
		Если ТипЗнч(СтарыйВладелец) = Тип("СправочникСсылка.КатегорииНоменклатуры") Тогда
			Продолжить;
		КонецЕсли; 
		НовыйЭлемент.Владелец = Владелец;
		НовыйЭлемент.Записать();
		НоменклатураСоответствия = ?(КопироватьИзВыбранных, СтарыйВладелец, Владелец);
		Если СоответствиеХарактеристик.Получить(НоменклатураСоответствия) = Неопределено Тогда
			СоответствиеХарактеристик.Вставить(НоменклатураСоответствия, Новый Соответствие);
		КонецЕсли; 
		СоответствиеХарактеристик[НоменклатураСоответствия].Вставить(Характеристика, НовыйЭлемент.Ссылка);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура КопироватьСпецификацию(Спецификация, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных)
	
	Для каждого Владелец Из Владельцы Цикл
		НовыйЭлемент = Спецификация.Скопировать();
		СтарыйВладелец = НовыйЭлемент.Владелец;
		НовыйЭлемент.Владелец = Владелец;
		Если ЗначениеЗаполнено(НовыйЭлемент.ХарактеристикаПродукции) Тогда
			НоменклатураСоответствия = ?(КопироватьИзВыбранных, СтарыйВладелец, Владелец);
			НоваяХарактеристика = СоответствиеХарактеристик.Получить(НоменклатураСоответствия).Получить(НовыйЭлемент.ХарактеристикаПродукции);
			Если ЗначениеЗаполнено(НоваяХарактеристика) Тогда
				НовыйЭлемент.ХарактеристикаПродукции = НоваяХарактеристика;
			КонецЕсли;
			Если ЗначениеЗаполнено(НовыйЭлемент.ХарактеристикаПродукции) Тогда
				ВладелецХарактеристики = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НовыйЭлемент.ХарактеристикаПродукции, "Владелец");
				Если ВладелецХарактеристики<>Владелец И ТипЗнч(ВладелецХарактеристики) <> Тип("СправочникСсылка.КатегорииНоменклатуры") Тогда
					НовыйЭлемент.ХарактеристикаПродукции = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		НовыйЭлемент.Записать();
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура КопироватьКомплектацию(Комплектация, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных)
	
	Для каждого Владелец Из Владельцы Цикл
		НовыйЭлемент = Комплектация.Скопировать();
		СтарыйВладелец = НовыйЭлемент.Владелец;
		НовыйЭлемент.Владелец = Владелец;
		Если ЗначениеЗаполнено(НовыйЭлемент.Характеристика) Тогда
			НоменклатураСоответствия = ?(КопироватьИзВыбранных, СтарыйВладелец, Владелец);
			НоваяХарактеристика = СоответствиеХарактеристик.Получить(НоменклатураСоответствия).Получить(НовыйЭлемент.Характеристика);
			Если ЗначениеЗаполнено(НоваяХарактеристика) Тогда
				НовыйЭлемент.Характеристика = НоваяХарактеристика;
			КонецЕсли;
			Если ЗначениеЗаполнено(НовыйЭлемент.Характеристика) Тогда
				ВладелецХарактеристики = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НовыйЭлемент.Характеристика, "Владелец");
				Если ВладелецХарактеристики <> Владелец И ТипЗнч(ВладелецХарактеристики) <> Тип("СправочникСсылка.КатегорииНоменклатуры") Тогда
					НовыйЭлемент.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		НовыйЭлемент.Записать();
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура КопироватьСоставНаборов(Номенклатура, Характеристика, Общий, Владельцы, СоответствиеХарактеристик, КопироватьИзВыбранных)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НоменклатураНабора", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНабора", Характеристика);
	Запрос.УстановитьПараметр("Общий", Общий);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоставНаборов.НоменклатураНабора КАК НоменклатураНабора,
	|	СоставНаборов.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	СоставНаборов.Номенклатура КАК Номенклатура,
	|	СоставНаборов.Характеристика КАК Характеристика,
	|	СоставНаборов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СоставНаборов.Общий КАК Общий,
	|	СоставНаборов.Количество КАК Количество,
	|	СоставНаборов.ДоляСтоимости КАК ДоляСтоимости,
	|	СоставНаборов.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.СоставНаборов КАК СоставНаборов
	|ГДЕ
	|	СоставНаборов.НоменклатураНабора = &НоменклатураНабора
	|	И СоставНаборов.ХарактеристикаНабора = &ХарактеристикаНабора
	|	И СоставНаборов.Общий = &Общий";
	
	Для каждого Владелец Из Владельцы Цикл
		
		НоваяХарактеристика = Неопределено;
		Если ЗначениеЗаполнено(Характеристика) Тогда
			НоменклатураСоответствия = ?(КопироватьИзВыбранных, Номенклатура, Владелец);
			Если СоответствиеХарактеристик.Получить(НоменклатураСоответствия) = Неопределено Тогда
				СоответствиеХарактеристик.Вставить(НоменклатураСоответствия, Новый Соответствие);
			КонецЕсли; 
			НоваяХарактеристика = СоответствиеХарактеристик.Получить(НоменклатураСоответствия).Получить(Характеристика);
			Если НЕ ЗначениеЗаполнено(НоваяХарактеристика) Тогда
				ВладельцыХарактеристики = Новый Массив;
				ВладельцыХарактеристики.Добавить(Владелец);
				КопироватьХарактеристику(Характеристика, ВладельцыХарактеристики, СоответствиеХарактеристик, КопироватьИзВыбранных);
				НоваяХарактеристика = СоответствиеХарактеристик.Получить(НоменклатураСоответствия).Получить(Характеристика);
			КонецЕсли; 
		КонецЕсли; 
		
		Набор = РегистрыСведений.СоставНаборов.СоздатьНаборЗаписей();
		Набор.Отбор.НоменклатураНабора.Установить(Владелец);
		Если ЗначениеЗаполнено(НоваяХарактеристика) Тогда
			Набор.Отбор.ХарактеристикаНабора.Установить(НоваяХарактеристика);
		Иначе
			Набор.Отбор.ХарактеристикаНабора.Установить(Характеристика);
		КонецЕсли; 
		Набор.Отбор.Общий.Установить(Общий);
		Набор.Загрузить(Запрос.Выполнить().Выгрузить());
		Для каждого Запись Из Набор Цикл
			Запись.НоменклатураНабора = Владелец;
			Если ЗначениеЗаполнено(НоваяХарактеристика) Тогда
				Запись.ХарактеристикаНабора = НоваяХарактеристика;
			Иначе
				Запись.ХарактеристикаНабора = Характеристика;
			КонецЕсли; 
		КонецЦикла; 
		Набор.Записать(Истина);
	КонецЦикла; 
	
КонецПроцедуры

#Область Подсказки

&НаСервере
Процедура ЗагрузитьНастройкиОтображенияПодсказок()
	
	НастройкиОтображенияПодсказок = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить(
		"КопированиеСвязаннойИнформации", "НастройкиОтображенияПодсказок", Новый Структура);
	ПроверитьСвойство(НастройкиОтображенияПодсказок, "СкрытьПодсказкуСозданияХарактеристик", Ложь);
	ПроверитьСвойство(НастройкиОтображенияПодсказок, "СкрытьПодсказкуОтсутствияХарактеристик", Ложь);
	
КонецПроцедуры
 
&НаСервере
Процедура СохранитьНастройкиОтображенияПодсказок()
	
	ОбщегоНазначения.ХранилищеСистемныхНастроекСохранить("КопированиеСвязаннойИнформации", "НастройкиОтображенияПодсказок", 
		НастройкиОтображенияПодсказок);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьПодсказку(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоПодсказкаСозданиеХарактеристик = (Форма.ТекущаяПодсказка = "СозданиеХарактеристик");
	ЭтоПодсказкаОтсутствиеХарактеристик = (Форма.ТекущаяПодсказка = "ОтсутствиеХарактеристик");
	
	Если Форма.КопироватьСпецификации Тогда
		ТекстЗначения = НСтр("ru = 'спецификаций'");
	ИначеЕсли Форма.КопироватьКомплектации Тогда
		ТекстЗначения = НСтр("ru = 'комплектаций'");
	ИначеЕсли Форма.КопироватьСоставНаборов Тогда
		ТекстЗначения = НСтр("ru = 'состава наборов'");
	ИначеЕсли Форма.КопироватьХарактеристики Тогда
		ТекстЗначения = НСтр("ru = 'характеристик'");
	ИначеЕсли Форма.КопироватьЕдиницыИзмерения Тогда
		ТекстЗначения = НСтр("ru = 'единиц измерения'");
	КонецЕсли;
	
	ТекстПредупреждения = "";
	Если ЭтоПодсказкаСозданиеХарактеристик Тогда
		ТекстПредупреждения = НСтр("ru = 'При копировании %1 могут быть созданы недостающие характеристики%2'");
	ИначеЕсли ЭтоПодсказкаОтсутствиеХарактеристик Тогда
		ТекстПредупреждения = НСтр("ru = 'При копировании %1 могут отсутствовать характеристики%2'");
	КонецЕсли;
	
	Если ЭтоПодсказкаСозданиеХарактеристик ИЛИ ЭтоПодсказкаОтсутствиеХарактеристик Тогда
		Если Форма.КопироватьИзВыбранных Тогда
			ТекстНоменклатура = СтрШаблон(НСтр("ru = ' у номенклатуры %1'", Форма.Номенклатура));
		Иначе
			ТекстНоменклатура = "";
		КонецЕсли;
		ТекстПредупреждения = СтрШаблон(ТекстПредупреждения, ТекстЗначения, ТекстНоменклатура);
		Элементы.НадписьПредупреждение.Заголовок = ТекстПредупреждения;
		Элементы.Предупреждение.Видимость = Истина;	
	Иначе
		Элементы.Предупреждение.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьСвойство(Структура, Свойство, ЗначениеПоУмолчанию)
	
	Если ТипЗнч(Структура) <> Тип("Структура") Тогда
		Структура  = Новый Структура;
	КонецЕсли; 	
	
	Если Структура.Свойство(Свойство) Тогда
		Возврат;
	КонецЕсли; 
	
	Структура.Вставить(Свойство, ЗначениеПоУмолчанию);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСвойство(Структура, Свойство, ЗначениеПоУмолчанию)
	
	Если ТипЗнч(Структура) <> Тип("Структура") Тогда
		Структура  = Новый Структура;
	КонецЕсли; 	
	
	Значение = Неопределено;
	Если Структура.Свойство(Свойство, Значение) Тогда
		Возврат Значение;
	Иначе
		Структура.Вставить(Свойство, ЗначениеПоУмолчанию);
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли; 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойство(Структура, Свойство, Значение)
	
	Если ТипЗнч(Структура) <> Тип("Структура") Тогда
		Структура  = Новый Структура;
	КонецЕсли; 	
	
	Структура.Вставить(Свойство, Значение);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияРеквизитов(Объект, Реквизиты)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, Реквизиты);	
	
КонецФункции

#КонецОбласти 

#КонецОбласти
 

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Параметры.Свойство("ЕстьЕдиницыИзмеренияВОбъектеКопирования", ЕстьЕдиницыИзмеренияВОбъектеКопирования); 
	Параметры.Свойство("ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования", ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования); 
	Параметры.Свойство("ЕстьСпецификацииВОбъектеКопирования", ЕстьСпецификацииВОбъектеКопирования); 
	Параметры.Свойство("ЕстьКомплектацииВОбъектеКопирования", ЕстьКомплектацииВОбъектеКопирования); 
	Параметры.Свойство("ЕстьСоставыНаборовВОбъектеКопирования", ЕстьСоставыНаборовВОбъектеКопирования); 
	Параметры.Свойство("ИсточникКопирования", ИсточникКопирования);
	
	Если ЕстьЕдиницыИзмеренияВОбъектеКопирования Тогда
		РежимКопированияЕдиницИзмерения = 1;
	КонецЕсли; 
	Если ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования Тогда
		РежимКопированияХарактеристик = 1;
	КонецЕсли; 
	Если ЕстьСпецификацииВОбъектеКопирования Тогда
		РежимКопированияСпецификаций = 1;
	КонецЕсли; 
	Если ЕстьКомплектацииВОбъектеКопирования Тогда
		РежимКопированияКомплектаций = 1;
	КонецЕсли; 
	Если ЕстьСоставыНаборовВОбъектеКопирования Тогда
		РежимКопированияСоставаНаборов = 1;
	КонецЕсли; 
	
	ЗаполнитьСписки();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РежимКопированияЕдиницИзмеренияПриИзменении(Элемент)
	
	Для каждого СтрокаТабличнойЧасти Из ЕдиницыИзмерения Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла; 
	
	УправлениеФормой(ЭтотОбъект, "ЕдиницыИзмерения");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимКопированияХарактеристикПриИзменении(Элемент)
	
	Для каждого СтрокаТабличнойЧасти Из Характеристики Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла;
	
	ПроверитьПереносСвязанныхДанных();
	
	УправлениеФормой(ЭтотОбъект, "Характеристики");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимКопированияСпецификацийПриИзменении(Элемент)
	
	Для каждого СтрокаТабличнойЧасти Из Спецификации Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла; 
	
	ПроверитьПереносСвязанныхДанных(Истина);
	
	УправлениеФормой(ЭтотОбъект, "Спецификации");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимКопированияКомплектацийПриИзменении(Элемент)
	
	Для каждого СтрокаТабличнойЧасти Из Комплектации Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла; 
	
	ПроверитьПереносСвязанныхДанных(Истина);
	
	УправлениеФормой(ЭтотОбъект, "Комплектации");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимКопированияСоставаНаборовПриИзменении(Элемент)
	
	Для каждого СтрокаТабличнойЧасти Из СоставНаборов Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла; 
	
	ПроверитьПереносСвязанныхДанных(Истина);
	
	УправлениеФормой(ЭтотОбъект, "СоставНаборов");
	
КонецПроцедуры
 
&НаКлиенте
Процедура ХарактеристикиПометкаПриИзменении(Элемент)
	
	ПроверитьПереносСвязанныхДанных();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Копировать(Команда)
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураВозврата.Вставить("КопироватьЕдиницыИзмерения", РежимКопированияЕдиницИзмерения <> 0);
	СтруктураВозврата.Вставить("КопироватьХарактеристики", РежимКопированияХарактеристик <> 0);
	СтруктураВозврата.Вставить("КопироватьСпецификации", РежимКопированияСпецификаций <> 0);
	СтруктураВозврата.Вставить("КопироватьКомплектации", РежимКопированияКомплектаций <> 0);
	СтруктураВозврата.Вставить("КопироватьСоставНаборов", РежимКопированияСоставаНаборов <> 0);
	
	Если РежимКопированияЕдиницИзмерения <> 0 Тогда
		СтруктураВозврата.Вставить("ЕдиницыИзмерения", МассивОтмеченных(ЕдиницыИзмерения));
	Иначе
		СтруктураВозврата.Вставить("ЕдиницыИзмерения", Новый Массив);
	КонецЕсли; 
	Если РежимКопированияХарактеристик <> 0 Тогда
		СтруктураВозврата.Вставить("Характеристики", МассивОтмеченных(Характеристики));
	Иначе
		СтруктураВозврата.Вставить("Характеристики", Новый Массив);
	КонецЕсли; 
	Если РежимКопированияСпецификаций <> 0 Тогда
		СтруктураВозврата.Вставить("Спецификации", МассивОтмеченных(Спецификации));
	Иначе
		СтруктураВозврата.Вставить("Спецификации", Новый Массив);
	КонецЕсли; 
	Если РежимКопированияКомплектаций <> 0 Тогда
		СтруктураВозврата.Вставить("Комплектации", МассивОтмеченных(Комплектации));
	Иначе
		СтруктураВозврата.Вставить("Комплектации", Новый Массив);
	КонецЕсли; 
	Если РежимКопированияСоставаНаборов <> 0 Тогда
		СтруктураВозврата.Вставить("СоставНаборов", МассивОтмеченных(СоставНаборов));
	Иначе
		СтруктураВозврата.Вставить("СоставНаборов", Новый Массив);
	КонецЕсли; 
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураВозврата.Вставить("КопироватьЕдиницыИзмерения", Ложь);
	СтруктураВозврата.Вставить("КопироватьХарактеристики", Ложь);
	СтруктураВозврата.Вставить("КопироватьСпецификации", Ложь);
	СтруктураВозврата.Вставить("КопироватьКомплектации", Ложь);
	СтруктураВозврата.Вставить("КопироватьСоставНаборов", Ложь);
	СтруктураВозврата.Вставить("ЕдиницыИзмерения", Новый Массив);
	СтруктураВозврата.Вставить("Характеристики", Новый Массив);
	СтруктураВозврата.Вставить("Спецификации", Новый Массив);
	СтруктураВозврата.Вставить("Комплектации", Новый Массив);
	СтруктураВозврата.Вставить("СоставНаборов", Новый Массив);
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	УсловноеОформление.Элементы.Очистить();
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Спецификации.Недоступно", Истина);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "Спецификации");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, 
		"ТолькоПросмотр", Истина);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, 
		"ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Комплектации.Недоступно", Истина);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "Комплектации");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, 
		"ТолькоПросмотр", Истина);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, 
		"ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
	
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "СоставНаборов.Недоступно", Истина);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "СоставНаборов");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, 
		"ТолькоПросмотр", Истина);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, 
		"ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма, ИмяСписка = "")
	
	Элементы = Форма.Элементы;
	
	Если ПустаяСтрока(ИмяСписка) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ГруппаЕдиницыИзмерения", "Видимость", Форма.ЕстьЕдиницыИзмеренияВОбъектеКопирования);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ГруппаХарактеристики", "Видимость", Форма.ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ГруппаСпецификации", "Видимость", Форма.ЕстьСпецификацииВОбъектеКопирования);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ГруппаКомплектации", "Видимость", Форма.ЕстьКомплектацииВОбъектеКопирования);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ГруппаСоставНаборов", "Видимость", Форма.ЕстьСоставыНаборовВОбъектеКопирования);
	КонецЕсли; 
	
	Если ПустаяСтрока(ИмяСписка) ИЛИ ИмяСписка = "ЕдиницыИзмерения" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ЕдиницыИзмеренияПометка", "ТолькоПросмотр", Форма.РежимКопированияЕдиницИзмерения <> 2);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ЕдиницыИзмерения", "Доступность", Форма.РежимКопированияЕдиницИзмерения <> 0);
	КонецЕсли;
	Если ПустаяСтрока(ИмяСписка) ИЛИ ИмяСписка = "Характеристики" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"ХарактеристикиПометка", "ТолькоПросмотр", Форма.РежимКопированияХарактеристик <> 2);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"Характеристики", "Доступность", Форма.РежимКопированияХарактеристик <> 0);
	КонецЕсли; 
	Если ПустаяСтрока(ИмяСписка) ИЛИ ИмяСписка = "Спецификации" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"СпецификацииПометка", "ТолькоПросмотр", Форма.РежимКопированияСпецификаций <> 2);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"Спецификации", "Доступность", Форма.РежимКопированияСпецификаций <> 0);
	КонецЕсли; 
	Если ПустаяСтрока(ИмяСписка) ИЛИ ИмяСписка = "Комплектации" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"КомплектацииПометка", "ТолькоПросмотр", Форма.РежимКопированияКомплектаций <> 2);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"Комплектации", "Доступность", Форма.РежимКопированияКомплектаций <> 0);
	КонецЕсли; 
	Если ПустаяСтрока(ИмяСписка) ИЛИ ИмяСписка = "СоставНаборов" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"СоставНаборовПометка", "ТолькоПросмотр", Форма.РежимКопированияСоставаНаборов <> 2);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
			"СоставНаборов", "Доступность", Форма.РежимКопированияСоставаНаборов <> 0);
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьСписки()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсточникКопирования", ИсточникКопирования);
	Запрос.УстановитьПараметр("ЕстьЕдиницыИзмеренияВОбъектеКопирования", ЕстьЕдиницыИзмеренияВОбъектеКопирования);
	Запрос.УстановитьПараметр("ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования", ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования);
	Запрос.УстановитьПараметр("ЕстьСпецификацииВОбъектеКопирования", ЕстьСпецификацииВОбъектеКопирования);
	Запрос.УстановитьПараметр("ЕстьКомплектацииВОбъектеКопирования", ЕстьКомплектацииВОбъектеКопирования);
	Запрос.УстановитьПараметр("ЕстьСоставыНаборовВОбъектеКопирования", ЕстьСоставыНаборовВОбъектеКопирования);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ЕдиницыИзмерения.Ссылка КАК Значение
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец = &ИсточникКопирования
	|	И &ЕстьЕдиницыИзмеренияВОбъектеКопирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЕдиницыИзмерения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Значение
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &ИсточникКопирования
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И НЕ ХарактеристикиНоменклатуры.Недействителен
	|	И &ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХарактеристикиНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	Спецификации.Ссылка КАК Значение,
	|	Спецификации.ХарактеристикаПродукции КАК Характеристика
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|ГДЕ
	|	Спецификации.Владелец = &ИсточникКопирования
	|	И НЕ Спецификации.ПометкаУдаления
	|	И НЕ Спецификации.Недействителен
	|	И Спецификации.Заказ В (ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|	И &ЕстьСпецификацииВОбъектеКопирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	Спецификации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	КомплектацииНоменклатуры.Ссылка КАК Значение,
	|	КомплектацииНоменклатуры.Характеристика КАК Характеристика
	|ИЗ
	|	Справочник.КомплектацииНоменклатуры КАК КомплектацииНоменклатуры
	|ГДЕ
	|	КомплектацииНоменклатуры.Владелец = &ИсточникКопирования
	|	И НЕ КомплектацииНоменклатуры.ПометкаУдаления
	|	И НЕ КомплектацииНоменклатуры.Недействителен
	|	И &ЕстьКомплектацииВОбъектеКопирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	КомплектацииНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|	КОНЕЦ КАК Значение,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА ""Общий состав набора для всех характеристик""
	|		КОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СоставНаборов.НоменклатураНабора.Наименование + "" без характеристик""
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора.Наименование
	|	КОНЕЦ КАК Представление
	|ИЗ
	|	РегистрСведений.СоставНаборов КАК СоставНаборов
	|ГДЕ
	|	СоставНаборов.НоменклатураНабора = &ИсточникКопирования
	|	И &ЕстьСоставыНаборовВОбъектеКопирования
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА ""Общий состав набора для всех характеристик""
	|		КОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СоставНаборов.НоменклатураНабора.Наименование + "" без характеристик""
	|		ИНАЧЕ СоставНаборов.ХарактеристикаНабора.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И НЕ СоставНаборов.Общий
	|			ТОГДА 1
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВЫБОР
	|		КОГДА СоставНаборов.ХарактеристикаНабора = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И НЕ СоставНаборов.Общий
	|			ТОГДА 1
	|		КОГДА СоставНаборов.Общий
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ,
	|	Представление";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ЕдиницыИзмерения.Загрузить(Результат.Получить(0).Выгрузить());
	Характеристики.Загрузить(Результат.Получить(1).Выгрузить());
	Спецификации.Загрузить(Результат.Получить(2).Выгрузить());
	Комплектации.Загрузить(Результат.Получить(3).Выгрузить());
	СоставНаборов.Загрузить(Результат.Получить(4).Выгрузить());
	
	ОбновитьВысотуФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВысотуФормы()
	
	ВысотаФормы = 1;
	Если ЕстьЕдиницыИзмеренияВОбъектеКопирования Тогда
		ВысотаФормы = ВысотаФормы + 1 + ?(ЕдиницыИзмерения.Количество() >= 5, 5, ЕдиницыИзмерения.Количество());
	КонецЕсли; 
	Если ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования Тогда
		ВысотаФормы = ВысотаФормы + 1 + ?(Характеристики.Количество() >= 5, 5, Характеристики.Количество());
	КонецЕсли; 
	Если ЕстьСпецификацииВОбъектеКопирования Тогда
		ВысотаФормы = ВысотаФормы + 1 + ?(Спецификации.Количество() >= 5, 5, Спецификации.Количество());
	КонецЕсли; 
	Если ЕстьКомплектацииВОбъектеКопирования Тогда
		ВысотаФормы = ВысотаФормы + 1 + ?(Комплектации.Количество() >= 5, 5, Комплектации.Количество());
	КонецЕсли; 
	Если ЕстьСоставыНаборовВОбъектеКопирования Тогда
		ВысотаФормы = ВысотаФормы + 1 + ?(СоставНаборов.Количество() >= 5, 5, СоставНаборов.Количество());
	КонецЕсли;
	Высота = ВысотаФормы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МассивОтмеченных(Таблица)
	
	Результат = Новый Массив;
	Для каждого СтрокаТабличнойЧасти Из Таблица Цикл
		Если НЕ СтрокаТабличнойЧасти.Пометка Тогда
			Продолжить;
		КонецЕсли; 
		Результат.Добавить(СтрокаТабличнойЧасти.Значение);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПереносСвязанныхДанных(ВыводитьСообщения = Ложь)
	
	Если НЕ ЕстьИндивидуальныеХарактеристикиВОбъектеКопирования Тогда
		Возврат;
	КонецЕсли; 
	
	ТребуетсяОбновлениеСпецификаций = Ложь;
	ТребуетсяОбновлениеКомплектаций = Ложь;
	ТребуетсяОбновлениеСоставаНаборов = Ложь;
	
	// Часть спецификаций, комплектаций и состава наборов может быть недоступна для копирования, если не копируется характеристика-владелец
	Если РежимКопированияХарактеристик = 0 Тогда
		// Характеристики не копируются
		Если ЕстьСпецификацииВОбъектеКопирования И РежимКопированияСпецификаций > 0 Тогда
			Если РежимКопированияСпецификаций = 1 Тогда
				РежимКопированияСпецификаций = 2;
				ТребуетсяОбновлениеСпецификаций = Истина;
			КонецЕсли; 
			Для каждого СтрокаТабличнойЧасти Из Спецификации Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Характеристика) Тогда
					СтрокаТабличнойЧасти.Недоступно = Ложь;
					Продолжить;
				КонецЕсли;
				СнятьПометку("Спецификации", СтрокаТабличнойЧасти, ВыводитьСообщения);
			КонецЦикла;
		КонецЕсли;
		Если ЕстьКомплектацииВОбъектеКопирования И РежимКопированияКомплектаций > 0 Тогда
			Если РежимКопированияКомплектаций = 1 Тогда
				РежимКопированияКомплектаций = 2;
				ТребуетсяОбновлениеКомплектаций = Истина;
			КонецЕсли; 
			Для каждого СтрокаТабличнойЧасти Из Комплектации Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Характеристика) Тогда
					СтрокаТабличнойЧасти.Недоступно = Ложь;
					Продолжить;
				КонецЕсли;
				СнятьПометку("Комплектации", СтрокаТабличнойЧасти, ВыводитьСообщения);
			КонецЦикла;
		КонецЕсли;
		Если ЕстьСоставыНаборовВОбъектеКопирования И РежимКопированияСоставаНаборов > 0 Тогда
			Если РежимКопированияСоставаНаборов = 1 Тогда
				РежимКопированияСоставаНаборов = 2;
				ТребуетсяОбновлениеСоставаНаборов = Истина;
			КонецЕсли; 
			Для каждого СтрокаТабличнойЧасти Из СоставНаборов Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Значение) Тогда
					СтрокаТабличнойЧасти.Недоступно = Ложь;
					Продолжить;
				КонецЕсли; 
				СнятьПометку("СоставНаборов", СтрокаТабличнойЧасти, ВыводитьСообщения);
			КонецЦикла;
		КонецЕсли; 
	ИначеЕсли РежимКопированияХарактеристик = 2 Тогда
		// Характеристики копируются частично
		НекопируемыеЗначения = Новый Массив;
		Для каждого СтрокаТабличнойЧасти Из Характеристики Цикл
			Если СтрокаТабличнойЧасти.Пометка Тогда
				Продолжить;
			КонецЕсли; 
			НекопируемыеЗначения.Добавить(СтрокаТабличнойЧасти.Значение);
		КонецЦикла;
		Если НекопируемыеЗначения.Количество() = 0 Тогда
			// Копируются все характеристики
			Для каждого СтрокаТабличнойЧасти Из Спецификации Цикл
				СтрокаТабличнойЧасти.Недоступно = Ложь;
			КонецЦикла;
			Для каждого СтрокаТабличнойЧасти Из Комплектации Цикл
				СтрокаТабличнойЧасти.Недоступно = Ложь;
			КонецЦикла;
			Для каждого СтрокаТабличнойЧасти Из СоставНаборов Цикл
				СтрокаТабличнойЧасти.Недоступно = Ложь;
			КонецЦикла; 
		КонецЕсли; 
		Если ЕстьСпецификацииВОбъектеКопирования И РежимКопированияСпецификаций > 0 
			И НекопируемыеЗначения.Количество() > 0 Тогда
			Если РежимКопированияСпецификаций = 1 Тогда
				РежимКопированияСпецификаций = 2;
				ТребуетсяОбновлениеСпецификаций = Истина;
			КонецЕсли; 
			Для каждого СтрокаТабличнойЧасти Из Спецификации Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Характеристика) 
					ИЛИ НекопируемыеЗначения.Найти(СтрокаТабличнойЧасти.Характеристика) = Неопределено Тогда
					СтрокаТабличнойЧасти.Недоступно = Ложь;
					Продолжить;
				КонецЕсли; 
				СнятьПометку("Спецификации", СтрокаТабличнойЧасти, ВыводитьСообщения);
			КонецЦикла;
		КонецЕсли;
		Если ЕстьКомплектацииВОбъектеКопирования И РежимКопированияКомплектаций > 0 
			И НекопируемыеЗначения.Количество() > 0 Тогда
			Если РежимКопированияКомплектаций = 1 Тогда
				РежимКопированияКомплектаций = 2;
				ТребуетсяОбновлениеКомплектаций = Истина;
			КонецЕсли; 
			Для каждого СтрокаТабличнойЧасти Из Комплектации Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Характеристика) 
					ИЛИ НекопируемыеЗначения.Найти(СтрокаТабличнойЧасти.Характеристика) = Неопределено Тогда
					СтрокаТабличнойЧасти.Недоступно = Ложь;
					Продолжить;
				КонецЕсли; 
				СнятьПометку("Комплектации", СтрокаТабличнойЧасти, ВыводитьСообщения);
			КонецЦикла;
		КонецЕсли;
		Если ЕстьСоставыНаборовВОбъектеКопирования И РежимКопированияСоставаНаборов > 0 
			И НекопируемыеЗначения.Количество() > 0 Тогда
			Если РежимКопированияСоставаНаборов = 1 Тогда
				РежимКопированияСоставаНаборов = 2;
				ТребуетсяОбновлениеСоставаНаборов = Истина;
			КонецЕсли; 
			Для каждого СтрокаТабличнойЧасти Из СоставНаборов Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Значение) 
					ИЛИ НекопируемыеЗначения.Найти(СтрокаТабличнойЧасти.Значение) = Неопределено Тогда
					СтрокаТабличнойЧасти.Недоступно = Ложь;
					Продолжить;
				КонецЕсли; 
				СнятьПометку("СоставНаборов", СтрокаТабличнойЧасти, ВыводитьСообщения);
			КонецЦикла;
		КонецЕсли; 
	Иначе
		// Копируются все характеристики
		Для каждого СтрокаТабличнойЧасти Из Спецификации Цикл
			СтрокаТабличнойЧасти.Недоступно = Ложь;
		КонецЦикла;
		Для каждого СтрокаТабличнойЧасти Из Комплектации Цикл
			СтрокаТабличнойЧасти.Недоступно = Ложь;
		КонецЦикла;
		Для каждого СтрокаТабличнойЧасти Из СоставНаборов Цикл
			СтрокаТабличнойЧасти.Недоступно = Ложь;
		КонецЦикла; 
	КонецЕсли;
	
	Если ТребуетсяОбновлениеСпецификаций Тогда
		УправлениеФормой(ЭтотОбъект, "Спецификации");
	КонецЕсли; 
	Если ТребуетсяОбновлениеКомплектаций Тогда
		УправлениеФормой(ЭтотОбъект, "Комплектации");
	КонецЕсли; 
	Если ТребуетсяОбновлениеСоставаНаборов Тогда
		УправлениеФормой(ЭтотОбъект, "СоставНаборов");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(ИмяТаблицы, СтрокаТабличнойЧасти, ВыводитьСообщения)
	
	Если СтрокаТабличнойЧасти.Пометка Тогда
		СтрокаТабличнойЧасти.Пометка = Ложь;
		Если ВыводитьСообщения Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Отметка не установлена, так как не копируется соответствующая характеристика'"), , 
			СтрШаблон("%1[%2].Пометка", ИмяТаблицы, Формат(ЭтотОбъект[ИмяТаблицы].Индекс(СтрокаТабличнойЧасти), "ЧГ=0")));
		КонецЕсли; 
	КонецЕсли; 
	СтрокаТабличнойЧасти.Недоступно = Истина;
	
КонецПроцедуры
 
#КонецОбласти
 

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Возвращает форматную строку представления срока годности.
//
// Параметры:
//  ТочностьУказанияСрокаГодности - Перечисления.ТочностиУказанияСрокаГодности - точность сроков годности.
//
// Возвращаемое значение:
//  Строка - форматная строка.
//
Функция ФорматнаяСтрокаСрокаГодности(ТочностьУказанияСрокаГодности)Экспорт
	
	Если ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов Тогда
		ФорматнаяСтрока = "ДФ='dd.MM.yy HH:00'";
	Иначе
		ФорматнаяСтрока = "ДФ=dd.MM.yy";
	КонецЕсли;
	
	Возврат ФорматнаяСтрока;
	
КонецФункции

// Формирует дерево настроек политик учета.
//
// Параметры:
//  ОбъектНастройки - Справочник объект "Политика учета серий"
//
Процедура ЗаполнитьДеревоНастроек(ОбъектНастройки) Экспорт
	
	ТаблицаТипов = Новый ТаблицаЗначений;
	ТаблицаТипов.Колонки.Добавить("Показатель");
	ТаблицаТипов.Колонки.Добавить("ТипДокумента");
	ТаблицаТипов.Колонки.Добавить("Операция");
	ТаблицаТипов.Колонки.Добавить("НеПоказыватьНастройку");
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "Продажа");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "Розница");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
		
	ТаблицаТипов.Очистить();

	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "Закупка");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "Склад");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "Производство");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "ПередачаНаКомиссию");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();

	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "ПриемНаКомиссию");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "ПередачаВПереработку");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "ПереработкаДавальческогоСырья");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "ПередачаНаОтветственноеХранение");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "ПриемНаОтветственноеХранение");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
	ТаблицаТипов.Очистить();
	
	ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, "Прочее");
	
	Для Каждого ТипДокумента Из ТаблицаТипов Цикл
		СтрокаТипДокумента = ОбъектНастройки.НастройкиПолитики.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТипДокумента, ТипДокумента);
		СтрокаТипДокумента.ТипПолитики = ОбъектНастройки.ТипПолитики;
	КонецЦикла;
	
КонецПроцедуры

// Формирует таблицу типов документов в зависимости от раздела учета.
//
// Параметры:
//  ТаблицаТипов - Таблица значений типов документов
//  РазделУчета - Строка - раздел учета
//  СтруктураТаблицНастроек - Структура - Структура дополнительных настроек для заполнения по типу политики
//
Процедура ЗаполнитьТаблицуТиповДокументовПоРазделуУчета(ТаблицаТипов, РазделУчета, СтруктураТаблицНастроек = Неопределено) Экспорт
	
	ТаблицаНастроекАвторасчет = Неопределено;
	
	Если Не СтруктураТаблицНастроек = Неопределено Тогда
		Если СтруктураТаблицНастроек.Свойство("ТаблицаНастроекПолитикиАвторасчетОстатковСерий") Тогда
			ТаблицаНастроекАвторасчет = СтруктураТаблицНастроек.ТаблицаНастроекПолитикиАвторасчетОстатковСерий;
		КонецЕсли;
	КонецЕсли;
	
	Если РазделУчета = "Продажа" Тогда
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ЗаказПокупателя"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = НСтр("ru='Заказ-наряд'");
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуРаботы") Тогда
			НоваяСтрока.НеПоказыватьНастройку = Истина;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходныйОрдер"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад") Тогда
			НоваяСтрока.НеПоказыватьНастройку = Истина;
		КонецЕсли;
		
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		Если Не ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
			НоваяСтрока.НеПоказыватьНастройку = Истина;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
	КонецЕсли;
	
	Если РазделУчета = "Розница" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("УчетРозничныхПродаж");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОтчетОРозничныхПродажах"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ЧекККМ"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ЧекККМВозврат"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "Закупка" Тогда
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ПоступлениеОтПоставщика;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходныйОрдер"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныйСклад") Тогда
			НоваяСтрока.НеПоказыватьНастройку = Истина;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику;
		
		
	КонецЕсли;
	
	Если РазделУчета = "Склад" Тогда
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПеремещениеЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПеремещениеПоЯчейкам"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		Если Не ПолучитьФункциональнуюОпцию("УчетПоЯчейкам") Тогда
			НоваяСтрока.НеПоказыватьНастройку = Истина;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ИнвентаризацияЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОприходованиеЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.СписаниеЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПересортицаЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.КомплектацияЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
	КонецЕсли;
	
	Если РазделУчета = "Производство" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуПроизводство");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.СборкаЗапасов"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РаспределениеЗатрат"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "ПередачаНаКомиссию" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ПередачаТоваровНаКомиссию");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаНаКомиссию;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОтчетКомиссионера"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОтчетКомиссионераОСписании"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтКомиссионера;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "ПриемНаКомиссию" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ПриемТоваровНаКомиссию");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаКомиссию;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОтчетКомитенту"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратКомитенту;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "ПередачаВПереработку" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ПередачаСырьяВПереработку");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаВПереработку;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОтчетПереработчика"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратОтПереработчика;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "ПереработкаДавальческогоСырья" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ПереработкаДавальческогоСырья");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ЗаказПокупателя"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемВПереработку;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ОтчетОПереработке"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратИзПереработки;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "ПередачаНаОтветственноеХранение" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ПередачаЗапасовНаОтветХранение");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаНаОтветХранение;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ВозвратСОтветХранения;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "ПриемНаОтветственноеХранение" Тогда
		
		НеПоказыватьНастройку = Не ПолучитьФункциональнуюОпцию("ПриемЗапасовНаОтветХранение");
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ПриходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийПриходнаяНакладная.ПриемНаОтветХранение;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.РасходнаяНакладная"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		НоваяСтрока.Операция = Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратСОтветХранения;
		НоваяСтрока.НеПоказыватьНастройку = НеПоказыватьНастройку;
		
	КонецЕсли;
	
	Если РазделУчета = "Прочее" Тогда
		
		НоваяСтрока = ТаблицаТипов.Добавить();
		НоваяСтрока.Показатель = Строка(Тип("ДокументСсылка.ВводНачальныхОстатков"));
		НоваяСтрока.ТипДокумента = НоваяСтрока.Показатель;
		ДобавитьСтрокуВТаблицу(ТаблицаНастроекАвторасчет, НоваяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСтрокуВТаблицу(ТаблицаДляДобавления, СтрокаДобавления)
	
	Если ТаблицаДляДобавления = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	НоваяСтрока = ТаблицаДляДобавления.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДобавления);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
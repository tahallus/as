#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураПодробнаяНовость = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ПодробнаяНовость, СтраницаДляМЛК");
	
	ИспользоватьПодробнуюНовость = СтруктураПодробнаяНовость.СтраницаДляМЛК.Получить() <> "";
	Элементы.ГруппаНастройкаПодробнойНовости.Видимость = ИспользоватьПодробнуюНовость;
	
	Если ИспользоватьПодробнуюНовость Тогда
		
		ДанныеФорматированногоДокумента = СтруктураПодробнаяНовость.ПодробнаяНовость.Получить();
		
		ПодробнаяНовость.УстановитьHTML(ДанныеФорматированногоДокумента.СтрокаHTML, ДанныеФорматированногоДокумента.Вложение);
		
	КонецЕсли;
	
	ИспользоватьОтправкуPushУведомления = ЗначениеЗаполнено(Объект.ДатаИВремяОтправкиPushУведомления);
	Элементы.ДатаИВремяОтправкиPushУведомления.Видимость = ИспользоватьОтправкуPushУведомления;
	
	УстановитьПредставлениеКомандыПолучатели();
	
	
	
	ЭтаФорма.Заголовок = Объект.Наименование;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура УведомлениеИспользоватьHTMLСтраницуПриИзменении(Элемент)
	
	Элементы.ГруппаНастройкаПодробнойНовости.Видимость = ИспользоватьПодробнуюНовость;
	
КонецПроцедуры

&НаКлиенте
Процедура УведомлениеЗаголовокПриИзменении(Элемент)
	УстановитьЦветИДоступностьКнопкиОпубликоватьНовость();
КонецПроцедуры

&НаКлиенте
Процедура УведомлениеСообщениеПриИзменении(Элемент)
	УстановитьЦветИДоступностьКнопкиОпубликоватьНовость();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтправкуPushУведомленияПриИзменении(Элемент)
	
	Элементы.ДатаИВремяОтправкиPushУведомления.Видимость = ИспользоватьОтправкуPushУведомления;
	
	УстановитьЦветИДоступностьКнопкиОпубликоватьНовость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИВремяОтправкиPushУведомленияПриИзменении(Элемент)
	УстановитьЦветИДоступностьКнопкиОпубликоватьНовость();
	
	ТекущаяДатаИВремя = ПолучитьТекущуюДату();
	
	Если ТекущаяДатаИВремя > Объект.ДатаИВремяОтправкиPushУведомления Тогда
		Объект.ДатаИВремяОтправкиPushУведомления = ТекущаяДатаИВремя;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВставитьКартинку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьКартинкуДляНовости", ЭтотОбъект);
	НачатьПомещениеФайла(ОписаниеОповещения);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПолучателей(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияФормыСВыборомПолучателей", ЭтотОбъект);
	ОткрытьФорму("Справочник.НовостиМЛК.Форма.ФормаВыбораПолучателейУведомления",Новый Структура("Ссылка, АдресСпискаПолучателей", Объект.Ссылка, АдресСпискаПолучателей),,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЭтаФорма.Модифицированность = Ложь;
	НовостьИзменена = Ложь;
	ЗаписатьЕслиНужно(НовостьИзменена);
	Закрыть(НовостьИзменена);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьКартинкуДляНовости(Результат, Адрес, ИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		
		АдресВременногоХранилища= Адрес;
		ИмяВыбранногоФайла 		= ИмяФайла;
		Расширение 				= ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяВыбранногоФайла));
		
		Если Расширение = "bmp"
			ИЛИ Расширение = "gif"
			ИЛИ Расширение = "png"
			ИЛИ Расширение = "jpeg"
			ИЛИ Расширение = "dib"
			ИЛИ Расширение = "rle"
			ИЛИ Расширение = "tif"
			ИЛИ Расширение = "jpg"
			ИЛИ Расширение = "ico"
			ИЛИ Расширение = "wmf"
			ИЛИ Расширение = "emf" Тогда
			
			ПоместитьКартинкуДляНовостиСРасширениемОповещениеФрагмент(АдресВременногоХранилища);
			
		Иначе
			
			ТекстПредупреждения = НСтр("ru ='Данный формат не поддерживается.'");
			ПоказатьПредупреждение(, ТекстПредупреждения); 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьКартинкуДляНовостиСРасширениемОповещениеФрагмент(Знач ПолноеИмяФайла)
	
	ВставитьПараметрДляНовости("%img%");
	
	Если ПодробнаяНовость.НайтиТекст("%img%") <> Неопределено Тогда 
		
		ЗакладкаНачала = ПодробнаяНовость.НайтиТекст("%img%").ЗакладкаНачала;
		ЗакладкаКонца = ПодробнаяНовость.НайтиТекст("%img%").ЗакладкаКонца;
		
		ПодробнаяНовость.Удалить(ЗакладкаНачала, ЗакладкаКонца);
		ВставкаКартинкиНовостиВДокумент(ПолноеИмяФайла, ЗакладкаНачала);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВставкаКартинкиНовостиВДокумент(Адрес, Закладка)
	
	Картинка = ПолучитьИзВременногоХранилища(Адрес);
	ПодробнаяНовость.Вставить(Закладка, Картинка, Тип("КартинкаФорматированногоДокумента"));
	
КонецПроцедуры

&НаСервере
Процедура ВставитьПараметрДляНовости(Значение)
	
	ЗакладкаНачала = 0;
	ЗакладкаОкончания = 0;
	Элементы.ПодробнаяНовость.ПолучитьГраницыВыделения(ЗакладкаНачала, ЗакладкаОкончания);
	Попытка
		ПозицияНачала = ПодробнаяНовость.ПолучитьПозициюПоЗакладке(ЗакладкаНачала);
		ПозицияОкончания = ПодробнаяНовость.ПолучитьПозициюПоЗакладке(ЗакладкаОкончания);
		
		Если ЗакладкаНачала <> ЗакладкаОкончания Тогда 
			ПодробнаяНовость.Удалить(ЗакладкаНачала, ЗакладкаОкончания);
			Элементы.ПодробнаяНовость.УстановитьГраницыВыделения(ЗакладкаНачала, ЗакладкаНачала);
		КонецЕсли;
		ПодробнаяНовость.Вставить(ЗакладкаНачала, Значение);
		
		ПозицияОкончания = ПозицияНачала + СтрДлина(Значение);
		ЗакладкаОкончания = ПодробнаяНовость.ПолучитьЗакладкуПоПозиции(ПозицияОкончания);
		Элементы.ПодробнаяНовость.УстановитьГраницыВыделения(ЗакладкаНачала, ЗакладкаОкончания);
		
		ЭтаФорма.Модифицированность = Истина;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция НовостьЗаполнена()
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Сообщение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Элементы.Получатели.Заголовок = ПредставлениеПолучателиНовости() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ИспользоватьОтправкуPushУведомления И НЕ ЗначениеЗаполнено(Объект.ДатаИВремяОтправкиPushУведомления) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ()

&НаКлиенте
Процедура УстановитьЦветИДоступностьКнопкиОпубликоватьНовость()
	
	Если НовостьЗаполнена() Тогда
		Элементы.ФормаСохранитьНовость.Доступность = Истина;
		Элементы.ФормаСохранитьНовость.ЦветФона = Новый Цвет(255, 225, 0);
	Иначе
		Элементы.ФормаСохранитьНовость.Доступность = Ложь;
		Элементы.ФормаСохранитьНовость.ЦветФона = Новый Цвет(160, 160, 160);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыСВыборомПолучателей(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		УстановитьЦветИДоступностьКнопкиОпубликоватьНовость();
		Возврат;
	КонецЕсли;
	
	Результат.Удалить("ПодсказкаБылаЗакрыта");
	
	АдресСпискаПолучателей = Результат.АдресСпискаПолучателей;
	
	Элементы.Получатели.Заголовок = ПолучитьПредставлениеКоманды();
	УстановитьЦветИДоступностьКнопкиОпубликоватьНовость();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеКомандыПолучатели()
	
	ПолучателиНовостей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "Получатели").Получить();
	
	АдресСпискаПолучателей = ПоместитьВоВременноеХранилище(ПолучателиНовостей, УникальныйИдентификатор);
	
	Элементы.Получатели.Заголовок = ПолучитьПредставлениеКоманды();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеПолучателиНовости()
	Возврат НСтр("ru = 'Получатели новости'");
КонецФункции

&НаСервере
Функция ПолучитьПредставлениеКоманды()
	
	ПредставлениеКоманды = ПредставлениеПолучателиНовости();
	
	Если ЗначениеЗаполнено(АдресСпискаПолучателей) Тогда
		
		СтруктураВозврата = ПолучитьИзВременногоХранилища(АдресСпискаПолучателей);
		
		Если ТипЗнч(СтруктураВозврата) = Тип("Структура") И (СтруктураВозврата.ВыбранныеПолучатели.Количество() > 0 Или СтруктураВозврата.ОтправитьНеподтвержденнымПользователям) Тогда
			
			Итератор = 0;
			ПредставлениеКоманды = "";
			
			Для каждого СтрокаТовара Из СтруктураВозврата.ВыбранныеПолучатели Цикл
				
				ПредставлениеКоманды = ПредставлениеКоманды + Строка(СтрокаТовара);
				
				Если Итератор >= 2 ИЛИ СтруктураВозврата.ВыбранныеПолучатели.Количество() = Итератор + 1 Тогда
					Прервать;
				КонецЕсли;
				
				ПредставлениеКоманды = ПредставлениеКоманды + ", ";
				Итератор = Итератор + 1;
				
			КонецЦикла;
			
			Если СтруктураВозврата.ОтправитьНеподтвержденнымПользователям Тогда
				Если ПредставлениеКоманды = "" Тогда
					ПредставлениеКоманды = НСтр("ru='неподтвержденные пользователи'");
				Иначе
					ПредставлениеКоманды = ПредставлениеКоманды + ", " + НСтр("ru='неподтвержденные пользователи'");
				КонецЕсли;
			КонецЕсли;
			
			Если СтрДлина(ПредставлениеКоманды) > 90 Тогда
				ПредставлениеКоманды = Прав(ПредставлениеКоманды, 90);
			КонецЕсли;
			
			ПредставлениеКоманды = СтрЗаменить(ПредставлениеКоманды, " ", Символы.НПП);
			ПредставлениеКоманды = ПредставлениеКоманды +  "...";
			ПредставлениеКоманды = СтрШаблон("%1: %2", ПредставлениеПолучателиНовости(), ПредставлениеКоманды);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПредставлениеКоманды;
	
	
КонецФункции

&НаСервере
Функция ПреобразоватьHTML(СтрокаHTML, Вложение)
	
	Для каждого Картинка Из Вложение Цикл
		
		КартинкаВДвоичномФормате = Картинка.Значение.ПолучитьДвоичныеДанные();
		ИмяКартинки = Картинка.Ключ;
		Формат = Строка(Картинка.Значение.Формат());
		
		СтрокаИсточника = "data:image/" + Формат + ";base64," + Base64Строка(КартинкаВДвоичномФормате);
		
		СтрокаHTML = СтрЗаменить(СтрокаHTML, ИмяКартинки, СтрокаИсточника);
		
	КонецЦикла;
	
	Возврат СтрокаHTML;
	
КонецФункции

&НаСервере
Процедура ЗаписатьЕслиНужно(НовостьИзменена)
	
	ПодробнаяНовостьСтруктура = Новый Структура;
	
	СтрокаHTML = "";
	Вложение = Новый Структура;
	
	ПодробнаяНовость.ПолучитьHTML(СтрокаHTML, Вложение);
	
	ПодробнаяНовостьСтруктура.Вставить("СтрокаHTML", СтрокаHTML);
	ПодробнаяНовостьСтруктура.Вставить("Вложение", Вложение);
	
	Если НЕ ИспользоватьПодробнуюНовость Тогда
		СтраницаДляМЛК = "";
	ИначеЕсли Вложение.Количество() > 0 Тогда
		СтраницаДляМЛК = ПреобразоватьHTML(СтрокаHTML, Вложение);
	Иначе
		СтраницаДляМЛК = СтрокаHTML;
	КонецЕсли;
	
	СтруктураСПолучателями = ПолучитьИзВременногоХранилища(АдресСпискаПолучателей);
	
	Если ОбъектыОтличаются(СтраницаДляМЛК, СтруктураСПолучателями) Тогда
		
		Справочники.НовостиМЛК.СоздатьИзменитьНовость(
		Объект.Ссылка,
		Объект.Наименование,
		Объект.Сообщение, 
		СтруктураСПолучателями,
		СтраницаДляМЛК,
		?(ИспользоватьОтправкуPushУведомления, Объект.ДатаИВремяОтправкиPushУведомления, Неопределено), 
		ПодробнаяНовостьСтруктура);
		
		НовостьИзменена = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ОбъектыОтличаются(СтраницаДляМЛК, СтруктураСПолучателями)
	
	СтруктураСТекущимиДанными = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "Наименование, ДатаИВремяОтправкиPushУведомления, Сообщение, СтраницаДляМЛК, Получатели");
	
	Если Объект.Наименование <> СтруктураСТекущимиДанными.Наименование Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ?(ИспользоватьОтправкуPushУведомления, Объект.ДатаИВремяОтправкиPushУведомления, Дата(1,1,1)) <> СтруктураСТекущимиДанными.ДатаИВремяОтправкиPushУведомления Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Объект.Сообщение <> СтруктураСТекущимиДанными.Сообщение Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтраницаДляМЛК <> СтруктураСТекущимиДанными.СтраницаДляМЛК.Получить() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЗначениеВСтрокуВнутр(СтруктураСТекущимиДанными.Получатели.Получить()) <> ЗначениеВСтрокуВнутр(СтруктураСПолучателями) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ()

&НаСервере
Функция ПолучитьТекущуюДату()
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции // ()

#КонецОбласти

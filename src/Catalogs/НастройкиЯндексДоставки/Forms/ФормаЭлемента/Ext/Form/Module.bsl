
#Область ОписаниеПеременных

#Область ПеременныеФормы

&НаКлиенте
Перем КэшВыборСостояний, КэшДобавленныеСостояния;

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ПриСозданииПриЧтенииНаСервере(ТекущийОбъектИзРеквизитаФормы());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииПриЧтенииНаСервере(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ВидыЗаказовПокупателей"
		Или ИмяСобытия = "Запись_СостоянияЗаказовПокупателей" Тогда
		КэшВыборСостояний = Новый Соответствие;
		ДополнитьКэшДобавленныеСостояния(Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Перем Ошибки;
	
	ПроверитьСоответствиеМагазинов(Ошибки);
	ПроверитьСоответствиеСкладов(Ошибки);
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТЧСостояния();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Расписание = Новый ХранилищеЗначения(Расписание);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьВидыЗаказаПокупателя(ТекущийОбъект.Состояния);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	КэшВыборСостояний = Новый Соответствие;
	Оповестить("Запись_НастройкиЯндексДоставки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИдентификаторыПриИзменении(Элемент)
	
	Идентификаторы = ПрочитатьИдентификаторыИзJSON(Объект.Идентификаторы);
	ЗаполнитьТЧМагазины(Идентификаторы);
	ЗаполнитьТЧСклады(Идентификаторы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	ДиалогНастройкиРасписания = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ДиалогНастройкиРасписания.Показать(Новый ОписаниеОповещения("ОбработатьИзменениеРасписания", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаказыИзЯндексДоставки(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	Элементы.ГруппаВыполнениеЗадания.ТекущаяСтраница = Элементы.ГруппаИндикатор;
	ПодключитьОбработчикОжидания("ЗапуститьОбновлениеЗаказовИзЯндексДоставки", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыМагазины

&НаКлиенте
Процедура МагазиныСтруктурнаяЕдиницаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОчиститьДублирующиесяЗначения(ВыбранноеЗначение, "Магазины");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСклады

&НаКлиенте
Процедура СкладыСтруктурнаяЕдиницаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОчиститьДублирующиесяЗначения(ВыбранноеЗначение, "Склады");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСостояния

&НаКлиенте
Процедура Подключаемый_ВидЗаказаПриИзменении(Элемент)
	
	Элементы.АвтообновлениеПояснение.Видимость = ВидимостьАвтообновлениеПояснение(
	ЭтотОбъект.СтатусыСостояния,
	ЭтотОбъект.ВидыЗаказаПокупателя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВидЗаказаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(КэшВыборСостояний) Тогда
		КэшВыборСостояний = Новый Соответствие;
	КонецЕсли;
	
	Для Каждого ТекСтрокаВидЗаказа Из ВидыЗаказаПокупателя Цикл
		
		Если Элемент.Имя <> ТекСтрокаВидЗаказа.ИмяКолонки Тогда
			Продолжить;
		КонецЕсли;
		
		Если КэшВыборСостояний[ТекСтрокаВидЗаказа.ВидЗаказа] <> Неопределено Тогда
			Результат = КэшВыборСостояний[ТекСтрокаВидЗаказа.ВидЗаказа];
			Прервать;
		КонецЕсли;
		
		КэшВыборСостояний[ТекСтрокаВидЗаказа.ВидЗаказа] = СписокВыбораСостоянияПоВидуЗаказаНаСервере(ТекСтрокаВидЗаказа.ВидЗаказа);
		Результат = КэшВыборСостояний[ТекСтрокаВидЗаказа.ВидЗаказа];
		Прервать;
		
	КонецЦикла;
	
	ДанныеВыбора = ДанныеВыбораИДобавленныеСостояния(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТекущийОбъектИзРеквизитаФормы()
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Результат = Параметры.ЗначениеКопирования.ПолучитьОбъект();
	Иначе
		Результат = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПрочитатьИдентификаторыИзJSON(ИдентификаторыСтрока)
	
	ЧтениеJSON_IDs = Новый ЧтениеJSON;
	ЧтениеJSON_IDs.УстановитьСтроку(ИдентификаторыСтрока);
	
	Возврат ПрочитатьJSON(ЧтениеJSON_IDs, Истина);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТЧМагазины(Идентификаторы)
	
	Объект.Магазины.Очистить();
	
	Для Каждого ТекЗапись Из Идентификаторы["senders"] Цикл
		СтрокаМагазин = Объект.Магазины.Добавить();
		СтрокаМагазин.Идентификатор = ТекЗапись["id"];
		СтрокаМагазин.Наименование = ТекЗапись["name"];
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧСклады(Идентификаторы)
	
	Объект.Склады.Очистить();
	
	Для Каждого ТекЗапись Из Идентификаторы["warehouses"] Цикл
		СтрокаСклад = Объект.Склады.Добавить();
		СтрокаСклад.Идентификатор = ТекЗапись["id"];
		СтрокаСклад.Наименование = ТекЗапись["name"];
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧСостояния()
	
	Объект.Состояния.Очистить();
	Для Каждого ТекСтрокаСтатусыСостояния Из ЭтотОбъект.СтатусыСостояния Цикл
		Для Каждого ТекСтрокаВидЗаказа Из ВидыЗаказаПокупателя Цикл
			ТекСостояниеЗаказаПокупателя = ТекСтрокаСтатусыСостояния[ТекСтрокаВидЗаказа.ИмяКолонки];
			Если ЗначениеЗаполнено(ТекСостояниеЗаказаПокупателя) Тогда
				НоваяСтрокаСостояния = Объект.Состояния.Добавить();
				НоваяСтрокаСостояния.ВидЗаказаПокупателя = ТекСтрокаВидЗаказа.ВидЗаказа;
				НоваяСтрокаСостояния.СтатусЯндексДоставки = ТекСтрокаСтатусыСостояния.СтатусЯндексДоставки;
				НоваяСтрокаСостояния.СостояниеЗаказаПокупателя = ТекСостояниеЗаказаПокупателя;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДублирующиесяЗначения(Знач ВыбранноеЗначение, Знач ИмяТаблицы)
	
	Для Каждого ТекСтрокаТаблицы Из Объект[ИмяТаблицы] Цикл
		Если ТекСтрокаТаблицы.ПолучитьИдентификатор() = Элементы[ИмяТаблицы].ТекущаяСтрока Тогда
			Продолжить;
		КонецЕсли;
		Если ТекСтрокаТаблицы.СтруктурнаяЕдиница = ВыбранноеЗначение Тогда
			ТекСтрокаТаблицы.СтруктурнаяЕдиница = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииПриЧтенииНаСервере(ТекущийОбъект)
	
	УдаляемыеРеквизиты = УдаляемыеРеквизиты();
	
	ЗаполнитьВидыЗаказаПокупателя();
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты(), УдаляемыеРеквизиты);
	
	ЗаполнитьСтатусыСостояния();
	
	ПересоздатьЭлементыСтатусыСостояния();
	
	ПрочитанноеРасписание = ТекущийОбъект.Расписание.Получить();
	Если ТипЗнч(ПрочитанноеРасписание) = Тип("РасписаниеРегламентногоЗадания") Тогда
		Расписание = ПрочитанноеРасписание;
	Иначе
		Расписание = ЯндексДоставка.РасписаниеПоУмолчанию();
	КонецЕсли;
	
	ОбновитьЗаголовокРасписания();
	
	Элементы.АвтообновлениеПояснение.Видимость = ВидимостьАвтообновлениеПояснение(
	ЭтотОбъект.СтатусыСостояния,
	ЭтотОбъект.ВидыЗаказаПокупателя);
	
КонецПроцедуры

&НаСервере
Функция УдаляемыеРеквизиты()
	
	Результат = Новый Массив;
	
	Для Каждого ТекРеквизит Из ПолучитьРеквизиты() Цикл
		Если ТекРеквизит.Имя = "СтатусыСостояния" Тогда
			Результат.Добавить("СтатусыСостояния");
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьВидыЗаказаПокупателя()
	
	ВидыЗаказаПокупателя.Очистить();
	
	СтрокаОсновной = ВидыЗаказаПокупателя.Добавить();
	СтрокаОсновной.ВидЗаказа = Справочники.ВидыЗаказовПокупателей.Основной;
	СтрокаОсновной.Представление = Справочники.ВидыЗаказовПокупателей.Основной.Наименование;
	СтрокаОсновной.ИмяКолонки = ИмяКолонкиВидЗаказа(СтрокаОсновной.ВидЗаказа);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВидыЗаказовПокупателей") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВидыЗаказовПокупателей.Ссылка,
	|	ВидыЗаказовПокупателей.Наименование
	|ИЗ
	|	Справочник.ВидыЗаказовПокупателей КАК ВидыЗаказовПокупателей
	|ГДЕ
	|	НЕ ВидыЗаказовПокупателей.ПометкаУдаления
	|	И НЕ ВидыЗаказовПокупателей.Предопределенный
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыЗаказовПокупателей.Наименование");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаВидЗаказа = ВидыЗаказаПокупателя.Добавить();
		СтрокаВидЗаказа.ВидЗаказа = Выборка.Ссылка;
		СтрокаВидЗаказа.Представление = Выборка.Наименование;
		СтрокаВидЗаказа.ИмяКолонки = ИмяКолонкиВидЗаказа(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДобавляемыеРеквизиты()
	
	Результат = Новый Массив;
	
	Результат.Добавить(
	Новый РеквизитФормы(
	"СтатусыСостояния",
	Новый ОписаниеТипов("ТаблицаЗначений"),,,
	Истина));
	
	Результат.Добавить(
	Новый РеквизитФормы(
	"СтатусЯндексДоставки",
	Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЯндексДоставки"),
	"СтатусыСостояния",
	НСтр("ru = 'Статус в Яндекс.Доставке'"),
	Истина));
	
	Для Каждого ТекСтрокаВидЗаказа Из ВидыЗаказаПокупателя Цикл
		Результат.Добавить(Новый РеквизитФормы(
		ТекСтрокаВидЗаказа.ИмяКолонки,
		Новый ОписаниеТипов("СправочникСсылка.СостоянияЗаказовПокупателей"),
		"СтатусыСостояния",
		ТекСтрокаВидЗаказа.Представление,
		Истина));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяКолонкиВидЗаказа(ВидЗаказа)
	
	Возврат СтрШаблон("ВидЗаказа%1",
	СтрЗаменить(ВидЗаказа.УникальныйИдентификатор(), "-", ""));
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтатусыСостояния()
	
	ЭтотОбъект.СтатусыСостояния.Очистить();
	Для Каждого ТекСтатус Из Перечисления.СтатусыЯндексДоставки Цикл
		НоваяСтрока = ЭтотОбъект.СтатусыСостояния.Добавить();
		НоваяСтрока.СтатусЯндексДоставки = ТекСтатус;
		Для Каждого ТекСтрокаВидЗаказа Из ВидыЗаказаПокупателя Цикл
			ОтборВидЗаказаСтатус = Новый Структура;
			ОтборВидЗаказаСтатус.Вставить("СтатусЯндексДоставки", ТекСтатус);
			ОтборВидЗаказаСтатус.Вставить("ВидЗаказаПокупателя", ТекСтрокаВидЗаказа.ВидЗаказа);
			СостоянияПоВидуЗаказа = Объект.Состояния.НайтиСтроки(ОтборВидЗаказаСтатус);
			Для Каждого ТекСтрокаПривязанныеСостояния Из СостоянияПоВидуЗаказа Цикл
				НоваяСтрока[ТекСтрокаВидЗаказа.ИмяКолонки] = ТекСтрокаПривязанныеСостояния.СостояниеЗаказаПокупателя;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПересоздатьЭлементыСтатусыСостояния()
	
	НайденныйЭлемент = Элементы.Найти("СтатусыСостояния");
	Если НайденныйЭлемент <> Неопределено Тогда
		Элементы.Удалить(НайденныйЭлемент);
	КонецЕсли;
	
	ЭлементСтатусыСостояния = Элементы.Добавить("СтатусыСостояния", Тип("ТаблицаФормы"), Элементы.ГруппаСостоянияЗаказов);
	ЭлементСтатусыСостояния.ПутьКДанным = "СтатусыСостояния";
	ЭлементСтатусыСостояния.ИзменятьСоставСтрок = Ложь;
	ЭлементСтатусыСостояния.ИзменятьПорядокСтрок = Ложь;
	ЭлементСтатусыСостояния.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	ЭлементСтатусЯндексДоставки = Элементы.Добавить("СтатусЯндексДоставки", Тип("ПолеФормы"), ЭлементСтатусыСостояния);
	ЭлементСтатусЯндексДоставки.ПутьКДанным = "СтатусыСостояния.СтатусЯндексДоставки";
	ЭлементСтатусЯндексДоставки.Ширина = 35;
	
	Для Каждого ТекСтрокаВидЗаказа Из ВидыЗаказаПокупателя Цикл
		
		ЭлементВидЗаказа = Элементы.Добавить(
		ТекСтрокаВидЗаказа.ИмяКолонки,
		Тип("ПолеФормы"),
		ЭлементСтатусыСостояния);
		ЭлементВидЗаказа.ПутьКДанным = СтрШаблон("СтатусыСостояния.%1", ТекСтрокаВидЗаказа.ИмяКолонки);
		ЭлементВидЗаказа.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементВидЗаказа.КнопкаОткрытия = Ложь;
		Если ВидыЗаказаПокупателя.Количество() > 1 Тогда
			ЭлементВидЗаказа.КнопкаСоздания = Ложь;
		КонецЕсли;
		ЭлементВидЗаказа.УстановитьДействие("ПриИзменении", "Подключаемый_ВидЗаказаПриИзменении");
		ЭлементВидЗаказа.УстановитьДействие("АвтоПодбор", "Подключаемый_ВидЗаказаАвтоПодбор");
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРасписания(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("РасписаниеРегламентногоЗадания") Тогда
		ОбработатьИзменениеРасписанияНаСервере(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеРасписанияНаСервере(Знач НовоеРасписание) Экспорт
	
	Расписание = НовоеРасписание;
	
	Расписание.ДетальныеРасписанияДня = Новый Массив;
	
	Если ЗначениеЗаполнено(Расписание.ПериодПовтораВТечениеДня)
		И Расписание.ПериодПовтораВТечениеДня < 60 * 60 Тогда
		Расписание.ПериодПовтораВТечениеДня = 60 * 60;
	КонецЕсли;
	
	ОбновитьЗаголовокРасписания();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокРасписания()
	
	Элементы.НастроитьРасписание.Заголовок = Строка(Расписание);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидимостьАвтообновлениеПояснение(Знач СтатусыСостояния, Знач ВидыЗаказаПокупателя)
	
	Для Каждого ТекСтрокаСтатусыСостояния Из СтатусыСостояния Цикл
		Для Каждого ТекСтрокаВидЗаказа Из ВидыЗаказаПокупателя Цикл
			Если ЗначениеЗаполнено(ТекСтрокаСтатусыСостояния[ТекСтрокаВидЗаказа.ИмяКолонки]) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция СписокВыбораСостоянияПоВидуЗаказаНаСервере(Знач ВидЗаказа)
	
	Возврат Справочники.СостоянияЗаказовПокупателей.ПолучитьДанныеВыбора(
	Новый Структура("ВидЗаказа", ВидЗаказа));
	
КонецФункции

&НаКлиенте
Процедура ДополнитьКэшДобавленныеСостояния(СостояниеЗаказаПокупателя)
	
	Если ТипЗнч(СостояниеЗаказаПокупателя) <> Тип("СправочникСсылка.СостоянияЗаказовПокупателей") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КэшДобавленныеСостояния) Тогда
		КэшДобавленныеСостояния = Новый Соответствие;
	КонецЕсли;
	
	КэшДобавленныеСостояния[СостояниеЗаказаПокупателя] = Строка(СостояниеЗаказаПокупателя);
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеВыбораИДобавленныеСостояния(Параметр)
	
	Результат = Новый СписокЗначений;
	
	Для Каждого ТекЗначение Из Параметр Цикл
		ЗаполнитьЗначенияСвойств(Результат.Добавить(), ТекЗначение);
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(КэшДобавленныеСостояния) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого ТекДобавленноеСостояние Из КэшДобавленныеСостояния Цикл
		Если Результат.НайтиПоЗначению(ТекДобавленноеСостояние.Ключ) = Неопределено Тогда
			Результат.Добавить(ТекДобавленноеСостояние.Ключ, ТекДобавленноеСостояние.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьВидыЗаказаПокупателя(Знач ТаблицаСостояния)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСостояния.ВидЗаказаПокупателя КАК ВидЗаказаПокупателя,
	|	ТаблицаСостояния.СостояниеЗаказаПокупателя КАК СостояниеЗаказаПокупателя
	|ПОМЕСТИТЬ ВТ_Состояния
	|ИЗ
	|	&ТаблицаСостояния КАК ТаблицаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Состояния.ВидЗаказаПокупателя,
	|	ВТ_Состояния.СостояниеЗаказаПокупателя,
	|	ВидыЗаказовПокупателейПорядокСостояний.Ссылка,
	|	ВидыЗаказовПокупателейПорядокСостояний.Состояние
	|ИЗ
	|	ВТ_Состояния КАК ВТ_Состояния
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказовПокупателей.ПорядокСостояний КАК ВидыЗаказовПокупателейПорядокСостояний
	|		ПО ВТ_Состояния.ВидЗаказаПокупателя = ВидыЗаказовПокупателейПорядокСостояний.Ссылка
	|			И ВТ_Состояния.СостояниеЗаказаПокупателя = ВидыЗаказовПокупателейПорядокСостояний.Состояние");
	Запрос.УстановитьПараметр("ТаблицаСостояния", ТаблицаСостояния);
	
	ВидыЗаказаПокупателяДляЗаписи = Новый Соответствие;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ВидыЗаказаПокупателяДляЗаписи[Выборка.ВидЗаказаПокупателя] = Неопределено Тогда
			ВидыЗаказаПокупателяДляЗаписи[Выборка.ВидЗаказаПокупателя] = Новый Массив;
		КонецЕсли;
		
		ВидыЗаказаПокупателяДляЗаписи[Выборка.ВидЗаказаПокупателя].Добавить(Выборка.СостояниеЗаказаПокупателя);
		
	КонецЦикла;
	
	Для Каждого ТекВидЗаказаПокупателя Из ВидыЗаказаПокупателяДляЗаписи Цикл
		ВидЗаказаОбъект = ТекВидЗаказаПокупателя.Ключ.ПолучитьОбъект();
		Для Каждого ТекСостояние Из ТекВидЗаказаПокупателя.Значение Цикл
			Если ВидЗаказаОбъект.ПорядокСостояний.Найти(ТекСостояние) = Неопределено Тогда
				НоваяСтрока = ВидЗаказаОбъект.ПорядокСостояний.Добавить();
				НоваяСтрока.Состояние = ТекСостояние;
			КонецЕсли;
		КонецЦикла;
		Если ВидЗаказаОбъект.Модифицированность() Тогда
			ВидЗаказаОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоответствиеМагазинов(Ошибки)
	
	Для Каждого ТекСтрокаМагазины Из Объект.Магазины Цикл
		Если ЗначениеЗаполнено(ТекСтрокаМагазины.СтруктурнаяЕдиница) Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
	Ошибки,
	"Объект.Магазины",
	НСтр("ru = 'Установите соответствие магазинов и подразделений.'"),
	"Объект.Магазины");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоответствиеСкладов(Ошибки)
	
	Для Каждого ТекСтрокаСклады Из Объект.Склады Цикл
		Если ЗначениеЗаполнено(ТекСтрокаСклады.СтруктурнаяЕдиница) Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
	Ошибки,
	"Объект.Склады",
	НСтр("ru = 'Установите соответствие складов.'"),
	"Объект.Склады");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбновлениеЗаказовИзЯндексДоставки()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	Задание = ЗаданиеОбновлениеЗаказовИзЯндексДоставки(УникальныйИдентификатор, Объект.Ссылка);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
	Задание,
	Новый ОписаниеОповещения("ОбработатьЗавершениеЗадания", ЭтотОбъект),
	ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеОбновлениеЗаказовИзЯндексДоставки(ИдентификаторФормы, СсылкаНаОбъект)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
	"ЯндексДоставка.ЗаданиеЗагрузкаДанныхИзЯндексДоставки",
	Строка(СсылкаНаОбъект.УникальныйИдентификатор()),
	ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьЗавершениеЗадания(Результат, Параметры) Экспорт
	
	Элементы.ГруппаВыполнениеЗадания.ТекущаяСтраница = Элементы.ГруппаЗапуск;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ОтобразитьОбновленныеЗаказы(Результат.АдресРезультата);
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьОбновленныеЗаказы(АдресРезультата)
	
	Если Не ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновленныеЗаказы = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(ОбновленныеЗаказы) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоЗаказов = ОбновленныеЗаказы.Количество();
	
	ОбновленПрописью	= СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(";Обновлен;;Обновлено;Обновлено;Обновлено",	КоличествоЗаказов);
	ЗаказПрописью		= СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(";%1 заказ;;%1 заказа;%1 заказов;%1 заказа",	КоличествоЗаказов);
	
	ТекстОповещения = СтрШаблон("%1 %2", ОбновленПрописью, ЗаказПрописью);
	ПоказатьОповещениеПользователя(ТекстОповещения);
	
КонецПроцедуры

#КонецОбласти
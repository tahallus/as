
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Если  ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
			Объект.Организация = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				Пользователи.ТекущийПользователь(),
				"ОсновнаяОрганизация");
		Иначе
			Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	Если Объект.Ссылка.Пустая() Тогда
		ОбновитьДанныеПубликацииТорговыхПредложений();
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	ПоВсемКонтрагентам = Объект.Контрагенты.Количество()= 0;
	Элементы.Контрагенты.Доступность = Не ПоВсемКонтрагентам;
	
	ПоВсемТоварам = Объект.Товары.Количество()= 0;
	Элементы.Товары.Доступность = Не ПоВсемТоварам;
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	ТорговыеПредложения.ПриСозданииПодсказокФормы(ЭтотОбъект, Элементы.ПодсказкиБизнесСеть);
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
	Если Объект.СрокПоставки = 0 Тогда
		Срок = НСтр("ru = 'В наличии'");
	Иначе
		Срок = НСтр("ru = '"+СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(";%1 день;;%1 дня;%1 дней;%1 дня", Объект.СрокПоставки)+"'");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	ТорговыеПредложенияКлиент.ОбновитьПодсказкуФормы(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
	СформироватьПредставлениеМинимальнойСуммыЗаказа();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	ТорговыеПредложения.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект, Объект.Организация, Элементы.ГруппаУправленияТорговымиПредложениями, Отказ);
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	ТорговыеПредложения.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, Объект.Организация, Элементы.ГруппаУправленияТорговымиПредложениями);
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	ТорговыеПредложенияКлиент.ПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи);
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	Если ИмяСобытия = "ТорговыеПредложения_ИзменениеСинхронизации"
		И (Параметр = Неопределено ИЛИ Параметр = Объект.Ссылка) Тогда
		ОбновитьДанныеПубликацииТорговыхПредложений();
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения
	ОбновитьДанныеПубликацииТорговыхПредложений();
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		
		Объект.Валюта = ВалютаВидаЦены(Объект.ВидЦен);
		
		СформироватьПредставлениеМинимальнойСуммыЗаказа();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничениеПоКонтрагентамПриИзменении(Элемент)
	Элементы.Контрагенты.Доступность = Не ПоВсемКонтрагентам;
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемТоварамПриИзменении(Элемент)
	Элементы.Товары.Доступность = Не ПоВсемТоварам;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияДействияПриИзменении(Элемент)
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = "Торг.предложение ("+Формат(Объект.ДатаНачалаДействия, "ДФ=dd.MM.yyyy") + "-" + Формат(Объект.ДатаОкончанияДействия, "ДФ=dd.MM.yyyy")+","+Объект.ВидЦен+")";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзГруппы(Команда)
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьИзГруппыНоменклатурыЗавершение", ЭтаФорма);
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбораГруппы",,,,,,Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура СрокНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеВводаЧисла = Новый ОписаниеОповещения("СрокЗавершение", ЭтотОбъект);
	ПоказатьВводЧисла(ОписаниеВводаЧисла, Объект.СрокПоставки, НСтр("ru = 'Введите срок поставки в днях'"), 3);
КонецПроцедуры

&НаКлиенте
Процедура СрокЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат <= 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Количество должно быть больше нуля'"));
		
		Возврат;
	КонецЕсли;
	
	Объект.СрокПоставки = Результат;
	Если Результат = 0 Тогда
		Срок = НСтр("ru = 'В наличии'");
	Иначе
		Срок = НСтр("ru = '"+СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(";%1 день;;%1 дня;%1 дней;%1 дня", Объект.СрокПоставки)+"'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальнаяСуммаЗаказаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("МинимальнаяСуммаЗаказаЗавершение", ЭтотОбъект);
	
	ПоказатьВводЧисла(Оповещение, Объект.МинимальнаяСуммаЗаказа,
		НСтр("ru = 'Введите минимальную суму заказа'"), 15, 2);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ЭлектронноеВзаимодействие.ТорговыеПредложения

&НаКлиенте
Процедура Подключаемый_ПриИзменении_ПубликоватьТорговыеПредложения (Элемент, СтандартнаяОбработка)
	
	ТорговыеПредложенияКлиент.ПриИзмененииПубликоватьТорговыеПредложения(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Нажатие_ГиперссылкиТорговыхПредложений(Элемент, СтандартнаяОбработка)
	
	ТорговыеПредложенияКлиент.ТорговыеПредложенияНажатиеГиперссылки(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура МинимальнаяСуммаЗаказаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.МинимальнаяСуммаЗаказа = Результат;
	
	СформироватьПредставлениеМинимальнойСуммыЗаказа();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеМинимальнойСуммыЗаказа()
	
	Если ЗначениеЗаполнено(Объект.МинимальнаяСуммаЗаказа) Тогда
		МинимальнаяСуммаЗаказа = СтрШаблон("%1 %2", Формат(Объект.МинимальнаяСуммаЗаказа, "ЧДЦ=2"), Объект.Валюта);
	Иначе
		МинимальнаяСуммаЗаказа = НСтр("ru = 'Любая'");
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВалютаВидаЦены(ВидЦены)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЦены, "ВалютаЦены");
	
КонецФункции

// Процедура обрабатывает выбор группы номенклатуры и заполняет табличную часть Товары элементами это группы.
//
&НаКлиенте
Процедура ЗаполнитьИзГруппыНоменклатурыЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		ЗаполнитьПоГруппеНоменклатурыНаСервере(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть БыстрыеТовары элементами группы номенклатуры.
//
&НаСервере
Процедура ЗаполнитьПоГруппеНоменклатурыНаСервере(ГруппаНоменклатуры)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БыстрыеТовары.Номенклатура
		|ПОМЕСТИТЬ БыстрыеТовары
		|ИЗ
		|	&БыстрыеТовары КАК БыстрыеТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураСправочник.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК НоменклатураСправочник
		|		ЛЕВОЕ СОЕДИНЕНИЕ БыстрыеТовары КАК БыстрыеТовары
		|		ПО (БыстрыеТовары.Номенклатура = НоменклатураСправочник.Ссылка)
		|ГДЕ
		|	БыстрыеТовары.Номенклатура ЕСТЬ NULL 
		|	И НЕ НоменклатураСправочник.ЭтоГруппа
		|	И НЕ НоменклатураСправочник.ПометкаУдаления
		|	И НоменклатураСправочник.Ссылка В ИЕРАРХИИ(&ГруппаНоменклатуры)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НоменклатураСправочник.Наименование";
	
	Запрос.УстановитьПараметр("ГруппаНоменклатуры", ГруппаНоменклатуры);
	Запрос.УстановитьПараметр("БыстрыеТовары", Объект.Товары.Выгрузить(, "Номенклатура"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Ссылка;
	КонецЦикла;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = НСтр("ru = 'Заполнение завершилось.'");
	Сообщение.Сообщить();
	
КонецПроцедуры

// ЭлектронноеВзаимодействие.ТорговыеПредложения
&НаСервере
Процедура ОбновитьДанныеПубликацииТорговыхПредложений()
	
	ТорговыеПредложения.ИнициализацияЭлементовФормы(ЭтотОбъект, Элементы.ГруппаУправленияТорговымиПредложениями);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПодсказкиБизнесСетьНажатие(Элемент)
	ТорговыеПредложенияКлиент.ОткрытьФормуПодсказок(ЭтотОбъект);
КонецПроцедуры
// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ЗаполнитьПоСтруктурнойЕдинице(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтруктурнаяЕдиница = ДанныеЗаполнения;
		
	Если ЗначениеЗаполнено(ДанныеЗаполнения.Родитель) 
		И ДанныеЗаполнения.Родитель.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		Подразделение = ДанныеЗаполнения.Родитель;
	КонецЕсли;
		
	Если ДанныеЗаполнения.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение
		Или ДанныеЗаполнения.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.МагазинГруппаСкладов Тогда
		ВызватьИсключение НСтр("ru = 'Ввод Кассы ККМ на основании структурной единицы с данным типом недоступен'");
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Не ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("СтруктурнаяЕдиница") Тогда
			ЗаполнитьПоСтруктурнойЕдинице(ДанныеЗаполнения.СтруктурнаяЕдиница, СтандартнаяОбработка)
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		
		ЗаполнитьПоСтруктурнойЕдинице(ДанныеЗаполнения, СтандартнаяОбработка);
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
		|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = &ТипСтруктурнойЕдиницы
		|	И (НЕ СтруктурныеЕдиницы.ПометкаУдаления)";
		
		Запрос.УстановитьПараметр("ТипСтруктурнойЕдиницы", Перечисления.ТипыСтруктурныхЕдиниц.Розница);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
		КонецЕсли;
		
	КонецЕсли;

	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(НЕ Организации.ПометкаУдаления)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Владелец = Выборка.Организация;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипКассы = Перечисления.ТипыКассККМ.АвтономнаяККМ
		ИЛИ ТипКассы = Перечисления.ТипыКассККМ.ККМED
		ИЛИ (ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор И ИспользоватьБезПодключенияОборудования) Тогда
		
		УдаляемыйРеквизит = ПроверяемыеРеквизиты.Найти("ПодключаемоеОборудование");
		Если УдаляемыйРеквизит <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ПодключаемоеОборудование"));
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипКассы <> Перечисления.ТипыКассККМ.ФискальныйРегистратор Или Не СоздаватьПоступлениеВКассу Тогда
		
		УдаляемыйРеквизит = ПроверяемыеРеквизиты.Найти("КассаДляРозничнойВыручки");
		Если УдаляемыйРеквизит <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("КассаДляРозничнойВыручки"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипКассы = Перечисления.ТипыКассККМ.ККМED Тогда
		
		СоздаватьВыемку 						= Истина;
		МинимальныйОстатокВКассеККМ 			= 0;
		СоздаватьПоступлениеВКассу 				= Ложь;
		КассаДляРозничнойВыручки 				= Справочники.Кассы.ПустаяСсылка();
		
		ИспользоватьБезПодключенияОборудования 	= Ложь;
		ПодключаемоеОборудование 				= Неопределено;
		
		ИсточникФИОКассираВЧеке 				= Перечисления.ИсточникиФИОКассираВЧекеККМ.Ответственный;
		
	ИначеЕсли ТипКассы <> Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
		СоздаватьВыемку = Ложь;
		СоздаватьПоступлениеВКассу = Ложь;
		МинимальныйОстатокВКассеККМ = 0;
		КассаДляРозничнойВыручки = Справочники.Кассы.ПустаяСсылка();
		
		Если ТипКассы = Перечисления.ТипыКассККМ.АвтономнаяККМ Тогда
			ИспользоватьБезПодключенияОборудования = Ложь;
			ПодключаемоеОборудование = Неопределено;
		КонецЕсли;
		
	ИначеЕсли СоздаватьВыемку = Ложь Тогда
		СоздаватьПоступлениеВКассу = Ложь;
		МинимальныйОстатокВКассеККМ = 0;
		КассаДляРозничнойВыручки = Справочники.Кассы.ПустаяСсылка();
	КонецЕсли;
	
	Если ИспользоватьБезПодключенияОборудования Тогда
		ПодключаемоеОборудование = Неопределено;
	КонецЕсли;
	
	Если ПодключаемоеОборудование = Неопределено Тогда
		ЭлектронныйЧекSMSПередаютсяПрограммой1С = Ложь;
		ЭлектронныйЧекEmailПередаютсяПрограммой1С = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодключаемоеОборудование)
		И НЕ ПометкаУдаления Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КассыККМ.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|ГДЕ
		|	КассыККМ.ПодключаемоеОборудование = &ПодключаемоеОборудование
		|	И КассыККМ.Ссылка <> &Ссылка";
		
		Запрос.УстановитьПараметр("ПодключаемоеОборудование", ПодключаемоеОборудование);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Указанное оборудование уже используется в другой кассе ККМ.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Константы.ИспользоватьОбменСКассойMinikassir.Получить() Тогда
		Отказ = НЕ ИнтеграцияОбменШтрихМ.ОтменаРегистрацииКассыНаСервереТарификации(Ссылка);
		РегистрационныйНомер = ИнтеграцияОбменШтрихМ.ПолучитьРеквизитыКассыШтрихМ(Ссылка).РегистрационныйНомер;
		ОбменСКассовымСерверомШтрихМ.УдалитьЗарегистрированнуюКассу(РегистрационныйНомер, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПечатьПрайсЛиста",							"Доступность", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИерархияСодержимого",						"Доступность", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоставРеквизитов",							"Доступность", Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЦены",								"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКолонки",								"ТолькоПросмотр", Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "МаксимальнаяЦена",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "МинимальнаяЦена",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УсловнаяЦена",								"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЦенаПоУсловию",						"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НоменклатураБезЦен",						"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормироватьПоНаличию",						"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидЦенСравнить",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаУсловиеСравнения",					"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НастройкиОтбораНоменклатурыНастройкиОтбор",	"ТолькоПросмотр", Истина);
	
	ИнициализироватьНастройкиСКД();
	УстановитьЗначенияОтбораНоменклатуры();
	
	ЗаголовкиКолонокСЦенами = (Объект.НазваниеЦеныПредставлением = 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьПредставлениеНоменклатуры();
	ЗаполнитьОбразецПрайсЛиста();
	
	УсловнаяЦенаУсловиеПриИзменении(Элементы.УсловнаяЦенаУсловие);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПечатьПрайсЛистаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Полотно"),		НСтр("ru ='Полотно'"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.ДвеКолонки"),	НСтр("ru ='Две колонки'"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Диафильм"),		НСтр("ru ='Диафильм'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораНовогоВариантыПрайсЛиста", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru ='Укажите новый вариант'"), СписокЗначений, 20, , НСтр("ru ='Вариант прайс-листа'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНовогоВариантыПрайсЛиста(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат)
		ИЛИ Результат = Объект.ПечатьПрайсЛиста Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Объект.ПечатьПрайсЛиста = Результат;
	ПриИзмененииВариантаПечатиПрайсЛиста();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияСодержимогоНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ИерархияПрайсЛистов.ИерархияНоменклатуры"),			НСтр("ru ='Номенклатура'"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ИерархияПрайсЛистов.ИерархияКатегорийНоменклатуры"),	НСтр("ru ='Категории'"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ИерархияПрайсЛистов.ИерархияЦеновыхГрупп"),			НСтр("ru ='Ценовые группы'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораНовойИерархииПрайсЛиста", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru ='Укажите новую иерархию'"), СписокЗначений, 20, , НСтр("ru ='Иерархия прайс-листа'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНовойИерархииПрайсЛиста(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат)
		ИЛИ Результат = Объект.ИерархияСодержимого Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Объект.ИерархияСодержимого = Результат;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовкиКолонокСЦенамиПриИзменении(Элемент)
	
	Объект.НазваниеЦеныПредставлением = (ЗаголовкиКолонокСЦенами = 1);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловнаяЦенаУсловиеПриИзменении(Элемент)
	
	УсловияСИнтервалами = Новый Массив(2);
	УсловияСИнтервалами[0] = ПредопределенноеЗначение("Перечисление.ВидСравненияЗначений.ВИнтервале");
	УсловияСИнтервалами[1] = ПредопределенноеЗначение("Перечисление.ВидСравненияЗначений.ВИнтервалеВключая");
	
	ЭтоУсловиеСИнтервалом = (УсловияСИнтервалами.Найти(Объект.УсловнаяЦенаУсловие) <> Неопределено);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УсловнаяЦенаЗначениеДо", "Видимость", ЭтоУсловиеСИнтервалом);
	
КонецПроцедуры

&НаКлиенте
Процедура НедействителенПриИзменении(Элемент)
	
	Если Не Объект.Недействителен Тогда Возврат КонецЕсли;
	
	Если ЭлементОсновной() Тогда
		ПараметрыОповещения = Новый Структура();
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияПредупрежденияНедействителен", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьПредупреждение(ОповещениеОЗакрытии, НСтр("ru = 'Для установки ""Недействителен"" необходимо выбрать основным другой элемент справочника.'"), , НСтр("ru = 'Элемент выбран основным'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупрежденияНедействителен(Параметры) Экспорт
	Объект.Недействителен = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоставРеквизитовНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ПредставлениеНоменклатуры",	Объект.ПредставлениеНоменклатуры);
	ПараметрыОткрытияФормы.Вставить("ПечатьПрайсЛиста",				Объект.ПечатьПрайсЛиста);
	
	ПараметрыОткрытияФормы.Вставить("КоличествоКолонок",			Объект.КоличествоКолонок);
	ПараметрыОткрытияФормы.Вставить("КартинкаШирина",				Объект.КартинкаШирина);
	ПараметрыОткрытияФормы.Вставить("КартинкаВысота",				Объект.КартинкаВысота);
	ПараметрыОткрытияФормы.Вставить("ИзменятьРазмерПропорционально",Объект.ИзменятьРазмерПропорционально);
	
	ПараметрыОткрытияФормы.Вставить("ОтборОрганизация",				Объект.ОтборОрганизация);
	ПараметрыОткрытияФормы.Вставить("ОтборСклад",					Объект.ОтборСклад);
	
	ПараметрыОткрытияФормы.Вставить("ПредставлениеОстатков",					Объект.ПредставлениеОстатков);
	ПараметрыОткрытияФормы.Вставить("ТекстовоеПредставлениеОстатковМало",		Объект.ТекстовоеПредставлениеОстатковМало);
	ПараметрыОткрытияФормы.Вставить("ТекстовоеПредставлениеОстатковДостаточно",	Объект.ТекстовоеПредставлениеОстатковДостаточно);
	ПараметрыОткрытияФормы.Вставить("ТекстовоеПредставлениеОстатковМного",		Объект.ТекстовоеПредставлениеОстатковМного);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоставРеквизитовПослеРедактирования", ЭтотОбъект);
	
	ИмяФормыРедактированияПредставления = ?(Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Полотно"), "ФормаСоставРеквизитов", "ФормаСоставРеквизитовДвеКолонки");
	ИмяФормыРедактированияПредставления = СтрШаблон("Справочник.ПрайсЛисты.Форма.%1", ИмяФормыРедактированияПредставления);
	
	ОткрытьФорму(ИмяФормыРедактированияПредставления, ПараметрыОткрытияФормы, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставРеквизитовПослеРедактирования(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) <> Тип("Структура")
		ИЛИ РезультатЗакрытия.РезультатЗакрытия <> КодВозвратаДиалога.ОК Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Объект.ПредставлениеНоменклатуры.Очистить();
	Для каждого Строка Из РезультатЗакрытия.ПредставлениеНоменклатуры Цикл
		
		ЗаполнитьЗначенияСвойств(Объект.ПредставлениеНоменклатуры.Добавить(), Строка);
		
	КонецЦикла;
	
	Объект.КоличествоКолонок				= РезультатЗакрытия.КоличествоКолонок;
	Объект.КартинкаШирина					= РезультатЗакрытия.КартинкаШирина;
	Объект.КартинкаВысота					= РезультатЗакрытия.КартинкаВысота;
	Объект.ИзменятьРазмерПропорционально	= РезультатЗакрытия.ИзменятьРазмерПропорционально;
	Объект.ПредставлениеОстатков			= РезультатЗакрытия.ПредставлениеОстатков;
	
	Объект.ОтборОрганизация					= РезультатЗакрытия.ОтборОрганизация;
	Объект.ОтборСклад						= РезультатЗакрытия.ОтборСклад;
	
	Объект.ТекстовоеПредставлениеОстатковМало		= РезультатЗакрытия.ТекстовоеПредставлениеОстатковМало;
	Объект.ТекстовоеПредставлениеОстатковДостаточно	= РезультатЗакрытия.ТекстовоеПредставлениеОстатковДостаточно;
	Объект.ТекстовоеПредставлениеОстатковМного		= РезультатЗакрытия.ТекстовоеПредставлениеОстатковМного;
	
	Модифицированность						= Истина;
	
	ЗаполнитьПредставлениеНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСведенияОДокументеНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Автор",						Объект.Автор);
	ПараметрыОткрытия.Вставить("ВыводитьДатуФормирования",	Объект.ВыводитьДатуФормирования);
	ПараметрыОткрытия.Вставить("ДатаФормирования",			Объект.ДатаФормирования);
	ПараметрыОткрытия.Вставить("ВариантыСортировки",		Объект.ВариантыСортировки);
	ПараметрыОткрытия.Вставить("Организация",				Объект.Организация);
	ПараметрыОткрытия.Вставить("Описание",					Объект.Описание);
	
	ПараметрыОткрытия.Вставить("ОтключитьРедактированиеСведений", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОткрытияФормыСведенияОДокументе", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ПрайсЛисты.Форма.ФормаОДокументе", ПараметрыОткрытия, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФормыСведенияОДокументе(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Результат.Свойство("ВыводитьДатуФормирования",	Объект.ВыводитьДатуФормирования);
	Результат.Свойство("ДатаФормирования",			Объект.ДатаФормирования);
	Результат.Свойство("ВариантыСортировки",		Объект.ВариантыСортировки);
	Результат.Свойство("Организация",				Объект.Организация);
	Результат.Свойство("Описание",					Объект.Описание);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЭлементОсновной()
	
	Настройка = ПланыВидовХарактеристик.НастройкиПользователей["РабочийПрайсЛистОрганизации"];
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());
	Запрос.УстановитьПараметр("Настройка", Настройка);
	Запрос.УстановитьПараметр("Значение", Объект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователей.Пользователь КАК Пользователь,
	|	НастройкиПользователей.Настройка КАК Настройка,
	|	НастройкиПользователей.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.Пользователь = &Пользователь
	|	И НастройкиПользователей.Настройка = &Настройка
	|	И НастройкиПользователей.Значение = &Значение";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПредставлениеНоменклатуры()
	Перем ПараметрыКартинки;
	
	Если Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Диафильм") Тогда
		
		ПараметрыКартинки = Новый Структура;
		ПараметрыКартинки.Вставить("КоличествоКолонок", Объект.КоличествоКолонок);
		ПараметрыКартинки.Вставить("КартинкаШирина", Объект.КартинкаШирина);
		ПараметрыКартинки.Вставить("КартинкаВысота", Объект.КартинкаВысота);
		
	КонецЕсли;
	
	СоставРеквизитов = ЦенообразованиеКлиент.ПредставлениеНоменклатурыСтрокой(Объект.ПредставлениеНоменклатуры, ПараметрыКартинки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОбразецПрайсЛиста()
	
	Если Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Полотно") Тогда
		
		Элементы.ДекорацияОбразецПрайсЛиста.Картинка = БиблиотекаКартинок.ВариантПрайсЛистаПолотно;
		
	ИначеЕсли Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.ДвеКолонки") Тогда
		
		Элементы.ДекорацияОбразецПрайсЛиста.Картинка = БиблиотекаКартинок.ВариантПрайсЛистаКолонки;
		
	ИначеЕсли Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Диафильм") Тогда
		
		Элементы.ДекорацияОбразецПрайсЛиста.Картинка = БиблиотекаКартинок.ВариантПрайсЛистаДиафильм;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВариантаПечатиПрайсЛиста()
	
	ДополнительныеПараметры = Новый Структура;
	
	ЦенообразованиеКлиент.ИзменитьВариантПечатиПрайсЛистаОрганизация(Объект, ДополнительныеПараметры);
	
	ЗаполнитьОбразецПрайсЛиста();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНастройкиСКД()
	
	СсылкаВоВременномХранилище = ПрайсЛистыСлужебный.ИнициализироватьНастройкиОтбораНоменклатуры(УникальныйИдентификатор);
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СсылкаВоВременномХранилище);
	НастройкиОтбораНоменклатуры.Инициализировать(ИсточникНастроек);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияОтбораНоменклатуры()
	
	ПрайсЛистыСлужебный.СКДОтборНоменклатурыИзТабличнойЧасти(НастройкиОтбораНоменклатуры, Объект.ОтборНоменклатуры);
	
КонецПроцедуры

#КонецОбласти


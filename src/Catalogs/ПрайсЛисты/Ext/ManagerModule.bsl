#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция КоличествоПрайсЛистовПользователя(ПользовательСсылка = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПользовательСсылка) Тогда
		
		ПользовательСсылка = Пользователи.АвторизованныйПользователь();
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ Количество(1) КАК КоличествоПрайсЛистов ИЗ Справочник.ПрайсЛисты КАК Прайсы ГДЕ Прайсы.Автор = &ТекущийПользователь ИЛИ НЕ Прайсы.Индивидуальный");
	Запрос.УстановитьПараметр("ТекущийПользователь", ПользовательСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.КоличествоПрайсЛистов, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//   Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ПредставлениеНоменклатуры

Процедура СоздатьНовуюТаблицуРеквизитов(ДоступныеПоля)
	
	ДоступныеПоля = Новый ТаблицаЗначений;
	ДоступныеПоля.Колонки.Добавить("Использование");
	ДоступныеПоля.Колонки.Добавить("РеквизитНоменклатуры");
	ДоступныеПоля.Колонки.Добавить("РеквизитПредставление");
	ДоступныеПоля.Колонки.Добавить("ПараметрРасшифровки");
	ДоступныеПоля.Колонки.Добавить("Ширина");
	ДоступныеПоля.Колонки.Добавить("СлужебныйУправлениеВидимостью");
	
КонецПроцедуры

Процедура ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Использование, РеквизитНоменклатуры, РеквизитПредставление, ПараметрРасшифровки = "", Ширина, СлужебныйУправлениеВидимостью = Истина)
	
	НоваяСтрока							= ДоступныеПоля.Добавить();
	НоваяСтрока.Использование			= Использование;
	НоваяСтрока.РеквизитНоменклатуры	= РеквизитНоменклатуры;
	НоваяСтрока.РеквизитПредставление	= РеквизитПредставление;
	НоваяСтрока.ПараметрРасшифровки		= ПараметрРасшифровки;
	НоваяСтрока.Ширина					= Ширина;
	НоваяСтрока.СлужебныйУправлениеВидимостью = СлужебныйУправлениеВидимостью;
	
КонецПроцедуры

Процедура ДоступныеПоляНоменклатуры(ДоступныеПоля) Экспорт
	
	СоздатьНовуюТаблицуРеквизитов(ДоступныеПоля);
	
	ИспользованиеХарактеристик = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "Картинка",				"Картинка",				"НоменклатураСсылка",			8);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "Код",					"Код",					"НоменклатураСсылка",			11);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "Артикул",				"Артикул",				"НоменклатураСсылка",			11);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "Штрихкод",				"Штрихкод",				"НоменклатураСсылка",			11);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "Наименование",			"Наименование",			"НоменклатураСсылка",			30);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "НаименованиеПолное",	"Полное наименование",	"НоменклатураСсылка",			30);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "Комментарий",			"Описание",				"НоменклатураСсылка",			30);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, ИспользованиеХарактеристик, "Характеристика", "Характеристика", "РасшифровкаХарактеристика", 14, ИспользованиеХарактеристик);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Истина, "СтранаПроисхождения",	"Страна",				"НоменклатураСсылка",			7);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Ложь,	"СвободныйОстаток",		"Свободный остаток",	"НоменклатураСсылка",			10);
	ДобавитьСтрокуВТаблицуРеквизитов(ДоступныеПоля, Ложь,	"ПризнакНовинка",		"Признак ""Новинка""",	"НоменклатураСсылка",			10);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// См. АвтоподборКонтактовКлиент.Подключаемый_АвтоПодбор
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВыборГруппИЭлементов") И Параметры.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Группы Тогда
		
		Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
			Параметры.Отбор.Вставить("Недействителен", Ложь);
		КонецЕсли;
		
	Иначе
		
		Для Каждого КлючИЗначение Из Параметры.Отбор Цикл
			НайденныйРеквизит = Метаданные.Справочники.Контрагенты.Реквизиты.Найти(КлючИЗначение.Ключ);
			Если НайденныйРеквизит = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НайденныйРеквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				Параметры.Отбор.Удалить(КлючИЗначение.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
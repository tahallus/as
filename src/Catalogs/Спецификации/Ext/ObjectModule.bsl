#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем ЗаписьНового;

#КонецОбласти 

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("ХарактеристикаПродукции", ХарактеристикаПродукции);
	
	// При записи первой спецификации по связке номенклатура-характеристика устанавливаем ее основной
	Если НЕ ПометкаУдаления И НЕ Недействителен И НЕ ЗначениеЗаполнено(Заказ) И ЗаписьНового = Истина Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Спецификации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Спецификации КАК Спецификации
		|ГДЕ
		|	Спецификации.Ссылка <> &Ссылка
		|	И Спецификации.Владелец = &Владелец
		|	И Спецификации.ХарактеристикаПродукции = &ХарактеристикаПродукции";
		Если Запрос.Выполнить().Пустой() Тогда
			Запись = РегистрыСведений.СпецификацииПоУмолчанию.СоздатьМенеджерЗаписи();
			Запись.Номенклатура = Владелец;
			Запись.Характеристика = ХарактеристикаПродукции;
			Запись.Спецификация = Ссылка;
			Запись.Записать(Истина);
		КонецЕсли; 
	КонецЕсли;
	
	// Удаление старых данных об основной спецификации при изменении номенклатуры / характеристики спецификации
	Если ЗаписьНового <> Истина Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпецификацииПоУмолчанию.Номенклатура КАК Номенклатура,
		|	СпецификацииПоУмолчанию.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.СпецификацииПоУмолчанию КАК СпецификацииПоУмолчанию
		|ГДЕ
		|	СпецификацииПоУмолчанию.Спецификация = &Ссылка
		|	И (СпецификацииПоУмолчанию.Номенклатура <> &Владелец
		|			ИЛИ СпецификацииПоУмолчанию.Характеристика <> &ХарактеристикаПродукции
		|			ИЛИ СпецификацииПоУмолчанию.Спецификация.Недействителен)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.СпецификацииПоУмолчанию.СоздатьМенеджерЗаписи();
			Запись.Номенклатура = Выборка.Номенклатура;
			Запись.Характеристика = Выборка.Характеристика;
			Запись.Удалить();	
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Снятие признака основной для помеченных на удаление и недействительных спецификаций
	Если (ПометкаУдаления ИЛИ Недействителен ИЛИ ЗначениеЗаполнено(Заказ)) И НЕ Ссылка.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпецификацииПоУмолчанию.Спецификация КАК Спецификация,
		|	СпецификацииПоУмолчанию.Номенклатура КАК Номенклатура,
		|	СпецификацииПоУмолчанию.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.СпецификацииПоУмолчанию КАК СпецификацииПоУмолчанию
		|ГДЕ
		|	СпецификацииПоУмолчанию.Спецификация = &Ссылка
		|	И НЕ СпецификацииПоУмолчанию.Спецификация.ПометкаУдаления";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Попытка
			Пока Выборка.Следующий() Цикл
				Запись = РегистрыСведений.СпецификацииПоУмолчанию.СоздатьМенеджерЗаписи();
				Запись.Номенклатура = Выборка.Номенклатура;
				Запись.Характеристика = Выборка.Характеристика;
				Запись.Спецификация = Выборка.Спецификация;
				Запись.Удалить();
			КонецЦикла;
			Если Выборка.Количество()>0 Тогда
				ТекстСообщения = НСтр("ru = 'Спецификация %1 недействительна или помечена на удаление. Признак <основная> снят.'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Наименование);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли; 
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось снять признак основной для спецификации %1.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Наименование);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;

	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидПроизводства) Тогда
		Для каждого СтрокаТабличнойЧасти Из Состав Цикл
			СтрокаТабличнойЧасти.Этап = Справочники.ЭтапыПроизводства.ПустаяСсылка();
		КонецЦикла; 
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			СтрокаТабличнойЧасти.Этап = Справочники.ЭтапыПроизводства.ПустаяСсылка();
		КонецЦикла;
	Иначе
		Для каждого СтрокаТабличнойЧасти Из Состав Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Этап) Тогда
				СтрокаТабличнойЧасти.Этап = Справочники.ЭтапыПроизводства.ЗавершениеПроизводства;
			КонецЕсли; 
		КонецЦикла; 
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Этап) Тогда
				СтрокаТабличнойЧасти.Этап = Справочники.ЭтапыПроизводства.ЗавершениеПроизводства;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	ЗаписьНового = ЭтоНовый();
	
	Если НЕ ЗначениеЗаполнено(Заказ) Тогда
		Заказ = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Состав.Количество() = 0 И Операции.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен состав спецификации'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Состав", , Отказ);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ВидПроизводства) Тогда
		ПроверяемыеРеквизиты.Добавить("Состав.Этап");
		ПроверяемыеРеквизиты.Добавить("Операции.Этап");
	КонецЕсли;
	
	ПроверкаЗаполненияНоменклатурыИФормул(Отказ);
	ПроверитьЗаполнениеОпераций(Отказ);
	
	// ЭтапыПроизводства
	ПроверитьДублированиеЭтапов(Отказ);
	ПроверкаИспользованияПоэтапнойСпецификации(Отказ);
	// Конец ЭтапыПроизводства
	
	// Проверка зацикливания
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Номенклатура", Владелец);
	СтруктураОтбора.Вставить("Характеристика", ХарактеристикаПродукции);
	НайденныеСтроки = Состав.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаТабличнойЧасти = НайденныеСтроки[0];
		ТекстСообщения = НСтр("ru='В состав спецификации не может входить сама продукция.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
		ЭтотОбъект,
		ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Состав", СтрокаТабличнойЧасти.НомерСтроки, "Номенклатура"),
		,
		Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ПроверкаЗаполненияНоменклатурыИФормул(Отказ)
	
	ИспользоватьПараметрическиеСпецификации = ПолучитьФункциональнуюОпцию("ИспользоватьПараметрическиеСпецификации");
	Для каждого СтрокаТабличнойЧасти Из Состав Цикл
		Если ИспользоватьПараметрическиеСпецификации И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) 
			И ПустаяСтрока(СтрокаТабличнойЧасти.ФормулаНоменклатура)  Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указана номенклатура или формула ее определения в строке %1'"), 
				СтрокаТабличнойЧасти.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Состав", СтрокаТабличнойЧасти.НомерСтроки,
				"Номенклатура"), , Отказ);
		ИначеЕсли НЕ ИспользоватьПараметрическиеСпецификации 
			И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда 
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указана номенклатура в строке %1'"), 
				СтрокаТабличнойЧасти.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Состав", СтрокаТабличнойЧасти.НомерСтроки,
				"Номенклатура"), , Отказ);
		КонецЕсли;
		Если НЕ ИспользоватьПараметрическиеСпецификации И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) 
			И ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения") Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указана единица измерения в строке %1'"), 
				СтрокаТабличнойЧасти.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Состав", СтрокаТабличнойЧасти.НомерСтроки,
				"ЕдиницаИзмерения"), , Отказ);
		КонецЕсли;
		Если СтрокаТабличнойЧасти.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел 
			И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указана спецификация узла в строке %1'"), 
				СтрокаТабличнойЧасти.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Состав", СтрокаТабличнойЧасти.НомерСтроки,
				"Спецификация"), , Отказ);
		КонецЕсли;
	КонецЦикла;
	 
КонецПроцедуры

Процедура ПроверитьЗаполнениеОпераций(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Операции", Операции.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Операции.Операция КАК Справочник.Номенклатура) КАК Операция,
	|	Операции.НормаВремени КАК НормаВремени,
	|	Операции.Количество КАК Количество,
	|	Операции.ФормулаНормаВремени КАК ФормулаНормаВремени,
	|	Операции.ФормулаКоличество КАК ФормулаКоличество
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	&Операции КАК Операции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Операции КАК Операции
	|ГДЕ
	|	НЕ Операции.Операция.ФиксированнаяСтоимость
	|	И Операции.НормаВремени = 0
	|	И ПОДСТРОКА(Операции.ФормулаНормаВремени, 1, 1) = """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Операции КАК Операции
	|ГДЕ
	|	Операции.Операция.ФиксированнаяСтоимость
	|	И Операции.Количество = 0
	|	И ПОДСТРОКА(Операции.ФормулаКоличество, 1, 1) = """"";
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат.Получить(1).Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'Не заполнена норма времени'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
		ЭтотОбъект,
		ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Операции", Выборка.НомерСтроки, "НормаВремени"),
		,
		Отказ);
	КонецЦикла; 
	
	Выборка = Результат.Получить(2).Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'Не заполнено количество операций'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
		ЭтотОбъект,
		ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Операции", Выборка.НомерСтроки, "Количество"),
		,
		Отказ);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПроверитьДублированиеЭтапов(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидПроизводства", ВидПроизводства);
	Запрос.УстановитьПараметр("Состав", Состав.Выгрузить());
	Запрос.УстановитьПараметр("Операции", Операции.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыПроизводстваЭтапы.НомерСтроки КАК НомерСтроки,
	|	ВидыПроизводстваЭтапы.Этап КАК Этап,
	|	1 КАК Количество
	|ПОМЕСТИТЬ Этапы
	|ИЗ
	|	Справочник.ВидыПроизводства.Этапы КАК ВидыПроизводстваЭтапы
	|ГДЕ
	|	ВидыПроизводстваЭтапы.Ссылка = &ВидПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.НомерСтроки КАК НомерСтроки,
	|	Состав.Этап КАК Этап
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&Состав КАК Состав
	|ГДЕ
	|	Состав.Этап <> ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.Этап КАК Этап
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	&Операции КАК Операции
	|ГДЕ
	|	Операции.Этап <> ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.НомерСтроки КАК НомерСтроки,
	|	Состав.Этап КАК Этап,
	|	""Состав"" КАК ИмяТабличнойЧасти
	|ИЗ
	|	Состав КАК Состав
	|ГДЕ
	|	НЕ Состав.Этап В
	|				(ВЫБРАТЬ
	|					Этапы.Этап
	|				ИЗ
	|					Этапы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операции.НомерСтроки,
	|	Операции.Этап,
	|	""Операции""
	|ИЗ
	|	Операции КАК Операции
	|ГДЕ
	|	НЕ Операции.Этап В
	|				(ВЫБРАТЬ
	|					Этапы.Этап
	|				ИЗ
	|					Этапы)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Используется незапланированный этап: %1'"), Выборка.Этап);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
		ЭтотОбъект,
		ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(Выборка.ИмяТабличнойЧасти, Выборка.НомерСтроки, "Этап"),
		,
		Отказ);
	КонецЦикла; 

КонецПроцедуры

Процедура ПроверкаИспользованияПоэтапнойСпецификации(Отказ)

	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	Если ВидПроизводства = Ссылка.ВидПроизводства Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказНаПроизводствоПродукция.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|ГДЕ
	|	ЗаказНаПроизводствоПродукция.Спецификация = &Спецификация
	|	И ЗаказНаПроизводствоПродукция.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СборкаЗапасовПродукция.Ссылка
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|ГДЕ
	|	СборкаЗапасовПродукция.Спецификация = &Спецификация
	|	И СборкаЗапасовПродукция.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СдельныйНарядОперации.Ссылка
	|ИЗ
	|	Документ.СдельныйНаряд.Операции КАК СдельныйНарядОперации
	|ГДЕ
	|	СдельныйНарядОперации.Спецификация = &Спецификация
	|	И СдельныйНарядОперации.Ссылка.Проведен";
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'Спецификация используется в документах. Изменение вида производства запрещено'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
		ЭтотОбъект,
		"ВидПроизводства",
		,
		Отказ);
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
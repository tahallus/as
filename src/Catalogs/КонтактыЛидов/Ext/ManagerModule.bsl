#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Список контактов лида
//
// Параметры:
//  Лид - СправочникСсылка.Лиды
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//
Функция КонтактыЛида(Лид) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактыЛидов.Ссылка КАК Ссылка,
	|	КонтактыЛидов.Наименование КАК Наименование,
	|	КонтактыЛидов.КонтактнаяИнформация.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Тип КАК Тип,
	|		Вид КАК Вид,
	|		Представление КАК Представление,
	|		ЗначенияПолей КАК ЗначенияПолей,
	|		Страна КАК Страна,
	|		Регион КАК Регион,
	|		Город КАК Город,
	|		АдресЭП КАК АдресЭП,
	|		ДоменноеИмяСервера КАК ДоменноеИмяСервера,
	|		НомерТелефона КАК НомерТелефона,
	|		НомерТелефонаБезКодов КАК НомерТелефонаБезКодов,
	|		Значение КАК Значение
	|	) КАК КонтактнаяИнформация
	|ИЗ
	|	Справочник.КонтактыЛидов КАК КонтактыЛидов
	|ГДЕ
	|	КонтактыЛидов.Владелец = &Лид";
	
	Запрос.УстановитьПараметр("Лид", Лид.Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

// Владелец контакта лида
//
// Параметры:
//  Контакт - СправочникСсылка.КонтактыЛидов
// 
// Возвращаемое значение:
//   - СправочникСсылка.Лиды
//
Функция ВладелецКонтакта(Контакт) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтактыЛидов.Владелец КАК Владелец
	|ИЗ
	|	Справочник.КонтактыЛидов КАК КонтактыЛидов
	|ГДЕ
	|	КонтактыЛидов.Ссылка = &Контакт";
	
	Запрос.УстановитьПараметр("Контакт", Контакт);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Владелец;
	КонецЦикла;
	
	Возврат Справочники.Лиды.ПустаяСсылка();
	
КонецФункции

// Вид контактной информации соответствующий виду ки лида
//
// Параметры:
//  Вид - СправочникСсылка.ВидыКонтактнойИнформации
// 
// Возвращаемое значение:
//   - СправочникСсылка.ВидыКонтактнойИнформации
//
Функция ВидКИКонтактаПоВидуЛида(Вид) Экспорт
	
	Если Вид = Справочники.ВидыКонтактнойИнформации.УдалитьEmailЛида Тогда
		
		Возврат Справочники.ВидыКонтактнойИнформации.EmailКонтактаЛида;
		
	ИначеЕсли Вид = Справочники.ВидыКонтактнойИнформации.УдалитьSkypeЛида Тогда
		
		Возврат Справочники.ВидыКонтактнойИнформации.SkypeКонтактаЛида;
		
	ИначеЕсли Вид = Справочники.ВидыКонтактнойИнформации.УдалитьМессенджерЛида Тогда
		
		Возврат Справочники.ВидыКонтактнойИнформации.МессенджерКонтактаЛида;
		
	ИначеЕсли Вид = Справочники.ВидыКонтактнойИнформации.УдалитьСоциальнаяСетьЛида Тогда
		
		Возврат Справочники.ВидыКонтактнойИнформации.СоциальнаяСетьКонтактаЛида;
		
	ИначеЕсли Вид = Справочники.ВидыКонтактнойИнформации.УдалитьТелефонЛида Тогда
		
		Возврат Справочники.ВидыКонтактнойИнформации.ТелефонКонтактаЛида;
		
	Иначе
		Возврат Вид;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Ключ") Тогда
		СтандартнаяОбработка = Ложь;
		Параметры.Ключ = Параметры.Ключ.Владелец;
		ВыбраннаяФорма = "Справочник.Лиды.ФормаОбъекта";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция КлассификаторВидовРабочегоВремени()
	
	КлассификаторВидовРабочегоВремени = Новый Соответствие;
	КлассификаторВидовРабочегоВремени["01"] = НСтр("ru ='Продолжительность работы в дневное время'");																// Я
	КлассификаторВидовРабочегоВремени["02"] = НСтр("ru ='Продолжительность работы в ночное время'");																// Н
	КлассификаторВидовРабочегоВремени["03"] = НСтр("ru ='Продолжительность работы в выходные и нерабочие праздничные дни'");										// РВ
	КлассификаторВидовРабочегоВремени["04"] = НСтр("ru ='Продолжительность сверхурочной работы'");																	// С
	КлассификаторВидовРабочегоВремени["05"] = НСтр("ru ='Продолжительность работы вахтовым методом'");																// ВМ
	КлассификаторВидовРабочегоВремени["06"] = НСтр("ru ='Служебная командировка'");																					// К
	КлассификаторВидовРабочегоВремени["07"] = НСтр("ru ='Повышение квалификации с отрывом от работы'");																// ПК
	КлассификаторВидовРабочегоВремени["08"] = НСтр("ru ='Повышение квалификации с отрывом от работы в другой местности'");											// ПМ
	КлассификаторВидовРабочегоВремени["09"] = НСтр("ru ='Ежегодный основной оплачиваемый отпуск'");																	// ОТ
	КлассификаторВидовРабочегоВремени["10"] = НСтр("ru ='Ежегодный дополнительный оплачиваемый отпуск'");															// ОД
	КлассификаторВидовРабочегоВремени["11"] = НСтр("ru ='Дополнительный отпуск в связи с обучением с сохранением среднего заработка работникам,совмещающим работу с обучением'"); // У
	КлассификаторВидовРабочегоВремени["12"] = НСтр("ru ='Сокращенная продолжительность рабочего времени для обучающихся без отрыва от производства с частичным сохранением заработной платы'"); // УВ
	КлассификаторВидовРабочегоВремени["13"] = НСтр("ru ='Дополнительный отпуск в связи с обучением без сохранения заработной платы'");								// УД
	КлассификаторВидовРабочегоВремени["14"] = НСтр("ru ='Отпуск по беременности и родам (отпуск в связи с усыновлением новорожденного ребенка)'");					// Р
	КлассификаторВидовРабочегоВремени["15"] = НСтр("ru ='Отпуск по уходу за ребенком до достижения им возраста трех лет'");											// ОЖ
	КлассификаторВидовРабочегоВремени["16"] = НСтр("ru ='Отпуск без сохранения заработной платы, предоставляемый работнику по разрешению работодателя'");			// ДО
	КлассификаторВидовРабочегоВремени["17"] = НСтр("ru ='Отпуск без сохранения заработной платы при условиях, предусмотренных действующим законодательством Российской Федерации '"); // ОЗ
	КлассификаторВидовРабочегоВремени["18"] = НСтр("ru ='Ежегодный дополнительный отпуск без сохранения заработной платы'");										// ДБ
	КлассификаторВидовРабочегоВремени["19"] = НСтр("ru ='Временная нетрудоспособность (кроме случаев, предусмотренных кодом ""Т"") с назначением пособия согласно законодательству'"); // Б
	КлассификаторВидовРабочегоВремени["20"] = НСтр("ru ='Временная нетрудоспособность без назначения пособия в случаях, предусмотренных законодательством '");		// Т
	КлассификаторВидовРабочегоВремени["21"] = НСтр("ru ='Сокращенная продолжительность рабочего времени против нормальной продолжительности рабочего дня в случаях, предусмотренных законодательством'"); // ЛЧ
	КлассификаторВидовРабочегоВремени["22"] = НСтр("ru ='Время вынужденного прогула в случае признания увольнения, перевода на другую работу или отстранения от работы незаконными с восстановлением на прежней работе'"); // ПВ
	КлассификаторВидовРабочегоВремени["23"] = НСтр("ru ='Невыходы на время исполнения государственных или общественных обязанностей согласно законодательству'");	// Г
	КлассификаторВидовРабочегоВремени["24"] = НСтр("ru ='Прогулы (отсутствие на рабочем месте без уважительных причин в течение времени, установленного законодательством)'"); // ПР
	КлассификаторВидовРабочегоВремени["25"] = НСтр("ru ='Продолжительность работы в режиме неполного рабочего времени по инициативе работодателя в случаях, предусмотренных законодательством'"); // НС
	КлассификаторВидовРабочегоВремени["26"] = НСтр("ru ='Выходные дни (еженедельный отпуск) и  нерабочие праздничные дни'");										// В
	КлассификаторВидовРабочегоВремени["27"] = НСтр("ru ='Дополнительные выходные дни (оплачиваемые)'");																// ОВ
	КлассификаторВидовРабочегоВремени["28"] = НСтр("ru ='Дополнительные выходные дни (без сохранения заработной платы'");											// НВ
	КлассификаторВидовРабочегоВремени["29"] = НСтр("ru ='Забастовка (при условиях и в порядке, предусмотренных законом)'");											// ЗБ
	КлассификаторВидовРабочегоВремени["30"] = НСтр("ru ='Неявки по невыясненным причинам (до выяснения обстоятельств)'");											// НН
	КлассификаторВидовРабочегоВремени["31"] = НСтр("ru ='Время простоя по вине работодателя'");																		// РП
	КлассификаторВидовРабочегоВремени["32"] = НСтр("ru ='Время простоя по причинам, не зависящим от работодателя и работника '");									// НП
	КлассификаторВидовРабочегоВремени["33"] = НСтр("ru ='Время простоя по вине работника'");																		// ВП
	КлассификаторВидовРабочегоВремени["34"] = НСтр("ru ='Отстранение от работы (недопущение к работе) с оплатой (пособием) в соответствии с законодательством '");	// НО
	КлассификаторВидовРабочегоВремени["35"] = НСтр("ru ='Отстранение от работы (недопущение к работе) по причинам, предусмотренным законодательством, без начисления заработной платы'"); // НБ
	КлассификаторВидовРабочегоВремени["36"] = НСтр("ru ='Время приостановки работы в случае задержки выплаты заработной платы'");									// НЗ
	
	// Устарело.
	КлассификаторВидовРабочегоВремени["99"] = НСтр("ru ='Устарело. Продолжительность работы в вечернее время'");													// ВЧ
	
	Возврат КлассификаторВидовРабочегоВремени;
	
КонецФункции

Процедура ЗаписатьОбновитьЭлементКлассификатора(ПолноеИмяПредопределенного, Знач КодВидаВремени)
	
	Если ТипЗнч(КодВидаВремени) = Тип("Число") Тогда
		
		КодВидаВремени = Формат(КодВидаВремени, "ЧЦ=2; ЧВН=");
		
	КонецЕсли;
	
	ВидыРабочегоВремениСсылка = ОбщегоНазначения.ПредопределенныйЭлемент(ПолноеИмяПредопределенного);
	Если ТипЗнч(ВидыРабочегоВремениСсылка) = Тип("СправочникСсылка.ВидыРабочегоВремени")
		И НЕ ВидыРабочегоВремениСсылка.Пустая() Тогда
		
		ПолноеНаименование = КлассификаторВидовРабочегоВремени().Получить(КодВидаВремени);
		Если ПолноеНаименование <> Неопределено Тогда
			
			ВидыРабочегоВремениОбъект						= ВидыРабочегоВремениСсылка.ПолучитьОбъект();
			ВидыРабочегоВремениОбъект.Код					= КодВидаВремени;
			ВидыРабочегоВремениОбъект.ПолноеНаименование	= ПолноеНаименование;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидыРабочегоВремениОбъект, Ложь, Ложь);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКлассификаторИспользованияРабочегоВремени() Экспорт
	
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Работа", 01);											//	Я
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.РаботаНочныеЧасы", 02);								//	Н
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Праздники", 03);										//	РВ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Сверхурочные", 04);									//	С
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Вахта", 05);											//	ВМ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Командировка", 06);									//	К
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ПовышениеКвалификации", 07);							//	ПК
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ПовышениеКвалификацииВДругойМестности", 08);			//	ПМ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОсновнойОтпуск", 09);									//	ОТ
	
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ДополнительныйОтпуск", 10);							//	ОД
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОтпускНаОбучение", 11);								//	У
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.СокращенныйДеньОбучающегося", 12);					//	УВ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый", 13);					//	УД
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОтпускПоБеременностиИРодам", 14);						//	Р
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОтпускПоУходуЗаРебенком", 15);						//	ОЖ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя", 16);	//	ДО
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству", 17);			//	ОЗ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск", 18);				//	ДБ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Болезнь", 19);										//	Б
	
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.БолезньБезОплаты", 20);								//	Т
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.СокращенныйДеньПоЗаконодательству", 21);				//	ЛЧ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ВынужденныйПрогул", 22);								//	ПВ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ГосударственныеОбязанности", 23);						//	Г
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Прогулы", 24);										//	ПР
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.НеполныйРабочийДеньПоРаботодателю", 25);				//	НС
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ВыходныеДни", 26);									//	В
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ДополнительныеВыходныеДниОплачиваемые", 27);			//	ОВ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ДополнительныеВыходныеДниНеОплачиваемые", 28);		//	НВ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Забастовка", 29);										//	ЗБ
	
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.НеявкиПоНевыясненнымПричинам", 30);					//	НН
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ПростойПоВинеРаботодателя", 31);						//	РП
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.Простой", 32);										//	НП
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ПростойПоВинеРаботника", 33);							//	ВП
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОтстранениеОтРаботыСОплатой", 34);					//	НО
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ОтстранениеОтРаботыБезОплаты", 35);					//	НБ
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.ЗадержкаВыплатыЗаработнойПлаты", 36);					//	НЗ
	
	// Устарело.
	ЗаписатьОбновитьЭлементКлассификатора("Справочник.ВидыРабочегоВремени.РаботаВечерниеЧасы", 99);								//	ВЧ
	
КонецПроцедуры // ЗаполнитьКлассификаторИспользованияРабочегоВремени()

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если НЕ (Параметры.Свойство("СтрокаПоиска") И ЗначениеЗаполнено(Параметры.СтрокаПоиска)) Тогда
		Возврат
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	МассивЗначений = Новый Массив;
	
	Для Счетчик = 1 По 5 Цикл
		Если Параметры.Свойство("ВидВремени" + Счетчик) И ЗначениеЗаполнено(Параметры["ВидВремени" + Счетчик]) Тогда		
			МассивЗначений.Добавить(Параметры["ВидВремени" + Счетчик]);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
				  |	ВидыРабочегоВремени.Ссылка
				  |ИЗ
				  |	Справочник.ВидыРабочегоВремени КАК ВидыРабочегоВремени
				  |ГДЕ
				  |	НЕ (ВидыРабочегоВремени.Ссылка В(&МассивЗначений))
				  |
				  |СГРУППИРОВАТЬ ПО
				  |	ВидыРабочегоВремени.Ссылка
				  |
				  |ИМЕЮЩИЕ
				  |	ПОДСТРОКА(ВидыРабочегоВремени.Наименование, 1, &ДлинаПодстроки) ПОДОБНО &СтрокаПоиска
				  |
				  |УПОРЯДОЧИТЬ ПО
				  |	ВидыРабочегоВремени.Наименование");
				  
	Запрос.УстановитьПараметр("МассивЗначений", МассивЗначений);
	Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска);
	Запрос.УстановитьПараметр("ДлинаПодстроки", СтрДлина(Параметры.СтрокаПоиска));
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ДанныеВыбора = Новый СписокЗначений;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеВыбора.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПолученияДанныхВыбора()

#КонецОбласти

#КонецЕсли
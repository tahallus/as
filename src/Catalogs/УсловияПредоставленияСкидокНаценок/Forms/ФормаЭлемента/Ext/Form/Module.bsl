
#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазрешеноРедактированиеЦенДокументов = УправлениеДоступомУНФ.РазрешеноРедактированиеЦенДокументов();
	ЭтаФорма.ТолькоПросмотр = НЕ РазрешеноРедактированиеЦенДокументов;
	ИспользуютсяСегментыНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСегментыНоменклатуры");
	ВариантПоСегменту = Перечисления.ВариантПредоставленияСкидкиПоНоменклатуре.ПоСегментуНоменклатуры;
	ВариантПоНоменклатуре = Перечисления.ВариантПредоставленияСкидкиПоНоменклатуре.ПоНоменклатуре;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	ПолучитьОграниченияКонфигурации();
	
	СкидкиНаценкиСерверПереопределяемый.ПолучитьСписокЗначенийУсловийПредоставленияСкидки(Элементы.УсловиеПредоставления.СписокВыбора);
	
	ВариантОграниченияПоНоменклатуреДоИзменения = Объект.ВариантПредоставленияСкидкиПоНоменклатуре;
	
	УсловиеПредоставленияПриИзмененииНаСервере();
	ВариантПредоставленияСкидкиПриИзменении();
	КритерийПримененияЗаОбъемПродажПриИзмененииНаСервере();
	ВидПериодаПриИзмененииНаСервере();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаСервере();
	Иначе
		СформироватьАвтоНаименованиеНаСервере();
	КонецЕсли;
	
	ЗаполнитьПризнакиВТЧ();
	
	Для каждого ВариантНаименования Из Элементы.Наименование.СписокВыбора Цикл
		Если Объект.Наименование = ВариантНаименования.Значение Тогда
			ИспользуетсяАвтоНаименование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Ложь;
	
	РаботаСФормойКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.ГруппаДополнительно, Объект.Комментарий);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// Процедура - обработчик события ПриЧтенииНаСервере.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьПризнакиВТЧ();
	
	ТипПолучателяСкидкиПредыдущий = ТипПолучателяСкидки;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// Процедура заполняет значения реквизитов ХарактеристикиИспользуются и ЭтоГруппа (добавлены в форме)
//
&НаСервере
Процедура ЗаполнитьПризнакиВТЧ()

	Для Каждого ТекущаяСтрока Из Объект.КомплектПокупки Цикл
		ТекущаяСтрока.ХарактеристикиИспользуются = ТекущаяСтрока.Номенклатура.ИспользоватьХарактеристики;
		ТекущаяСтрока.ЭтоГруппа = ТекущаяСтрока.Номенклатура.ЭтоГруппа;
	КонецЦикла;
	Для Каждого ТекущаяСтрока Из Объект.ОтборПродажПоНоменклатуре Цикл
		ТекущаяСтрока.ХарактеристикиИспользуются = ТекущаяСтрока.Номенклатура.ИспользоватьХарактеристики;
		ТекущаяСтрока.ЭтоГруппа = ТекущаяСтрока.Номенклатура.ЭтоГруппа;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик события ПередЗаписью.
//
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбновитьАвтонаименование(Модифицированность);
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписиНаСервере.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьПризнакиВТЧ();
	
КонецПроцедуры

// Процедура - обработчик события ПослеЗаписи.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("УсловиеПредоставления_Запись");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении элемента ВалютаОграничения.
//
&НаКлиенте
Процедура ВалютаОграниченияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении элемента ЗначениеУсловияПредоставления.
//
&НаКлиенте
Процедура ЗначениеУсловияПредоставленияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

// Процедура - обработчик события АвтоПодбор элемента Наименование.
//
&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если Ожидание = 0 Тогда
		СформироватьАвтоНаименованиеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении элемента Наименование.
//
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеИзмененоПользователем = Истина;
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении элемента ОбластьОграничения.
//
&НаКлиенте
Процедура ОбластьОграниченияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении элемента ТипСравнения.
//
&НаКлиенте
Процедура ТипСравненияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

// Процедура - обработчик события ПриИзменении элемента УсловиеПредоставления формы.
//
&НаКлиенте
Процедура УсловиеПредоставленияПриИзменении(Элемент)
	
	УсловиеПредоставленияПриИзмененииНаСервере();
	Объект.Наименование = "";
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

// Серверная часть процедура УсловиеПредоставленияПриИзменении - обработчика события ПриИзменении элемента
// УсловиеПредоставления формы.
//
&НаСервере
Процедура УсловиеПредоставленияПриИзмененииНаСервере()
	
	Элементы.ЗаОбъемПродаж.Видимость					= (Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж
													   ИЛИ Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж);
	Элементы.ОбластьОграничения.Видимость				= (Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж);
	Элементы.ГруппаПерваяСтрока_Накопление.Видимость	= (Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж);
	Элементы.ЗаКомплектПокупки.Видимость				= (Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаКомплектПокупки);
	Элементы.ЗаДисконтнуюКарту.Видимость				= (Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаДисконтнуюКарту);
	Элементы.ЗаДеньРождения.Видимость					= (Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаДеньРождения);
	
	Элементы.ОбластьОграничения.Доступность = Истина;
	Элементы.ВариантПредоставленияСкидкиПоНоменклатуре.Видимость = ИспользуютсяСегментыНоменклатуры;
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении элемента КритерийОграниченияПримененияЗаОбъемПродаж формы.
//
&НаКлиенте
Процедура КритерийПримененияЗаОбъемПродажПриИзменении(Элемент)
	
	КритерийПримененияЗаОбъемПродажПриИзмененииНаСервере();
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

// Серверная часть процедура КритерийПримененияЗаОбъемПродажПриИзменении - обработчика события ПриИзменении элемента
// КритерийОграниченияПримененияЗаОбъемПродаж формы.
//
&НаСервере
Процедура КритерийПримененияЗаОбъемПродажПриИзмененииНаСервере()
	
	Если Объект.КритерийОграниченияПримененияЗаОбъемПродаж = Перечисления.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество Тогда
		
		Элементы.ВалютаОграничения.Видимость = Ложь;
		Элементы.ЗначениеУсловияПредоставления.ФорматРедактирования = Формат("ЧДЦ=3");
		
	Иначе
		
		Элементы.ВалютаОграничения.Видимость = ИспользуютсяВалюты;
		Элементы.ЗначениеУсловияПредоставления.ФорматРедактирования = Формат("ЧДЦ=2");
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении поля ввода Комментарий.
//
&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры // КомментарийПриИзменении()

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	
	РаботаСФормойКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.ГруппаДополнительно, Объект.Комментарий);
	
КонецПроцедуры

&НаСервере
Процедура ВидПериодаПриИзмененииНаСервере()
	
	Элементы.Периодичность.Видимость = (Объект.ВидПериода <> ПредопределенноеЗначение("Перечисление.ВидыПериодовДляНакопительныхСкидок.ВесьПериод"));
	Если Не ЗначениеЗаполнено(Объект.Периодичность) И Элементы.Периодичность.Видимость Тогда
		Объект.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	ВидПериодаПриИзмененииНаСервере();
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДисконтнойКартыПриИзменении(Элемент)
	
	Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПредоставленияСкидкиПоНоменклатуреПриИзменении(Элемент)
	
	Если (Объект.ОтборПродажПоНоменклатуре.Количество() > 0 
		И Объект.ВариантПредоставленияСкидкиПоНоменклатуре = ВариантПоСегменту)
		ИЛИ (Объект.ОтборПродажПоСегменту.Количество()> 0 
		И Объект.ВариантПредоставленияСкидкиПоНоменклатуре = ВариантПоНоменклатуре) Тогда
		
		Описание = Новый ОписаниеОповещения("ВариантПредоставленияСкидкиПоНоменклатуреПриИзмененииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Описание, НСтр("ru = 'Таблица уточнений будет очищена. Продолжить?'"), 
			РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет, НСтр("ru = 'Изменение варианта уточнения'"));
	Иначе
		ВариантОграниченияПоНоменклатуреДоИзменения = Объект.ВариантПредоставленияСкидкиПоНоменклатуре;
		ВариантПредоставленияСкидкиПриИзменении();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКомплектПокупки

// Процедура - обработчик события ПриИзменении в колонке Номенклатура ТЧ КомплектПокупки формы.
//
&НаКлиенте
Процедура КомплектПокупкиНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.КомплектПокупки.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", СтрокаТабличнойЧасти.Характеристика);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Количество = 1;
	СтрокаТабличнойЧасти.ХарактеристикиИспользуются = СтруктураДанные.ХарактеристикиИспользуются;
	СтрокаТабличнойЧасти.ЭтоГруппа = СтруктураДанные.ЭтоГруппа;
	
КонецПроцедуры

// Процедура - обработчик события ПослеУдаления ТЧ КомплектПокупки формы.
//
&НаКлиенте
Процедура КомплектПокупкиПослеУдаления(Элемент)
	
	Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
	
КонецПроцедуры

// Процедура - обработчик события ПриОкончанииРедактирования ТЧ КомплектПокупки формы.
//
&НаКлиенте
Процедура КомплектПокупкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыОтборПродажПоНоменклатуре

// Процедура - обработчик события ПриОкончанииРедактирования ТЧ ОтборПродажПоНоменклатуре формы.
//
&НаКлиенте
Процедура ОтборПродажПоНоменклатуреПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
	
КонецПроцедуры

// Процедура - обработчик события ПослеУдаления ТЧ ОтборПродажПоНоменклатуре формы.
//
&НаКлиенте
Процедура ОтборПродажПоНоменклатуреПослеУдаления(Элемент)
	
	Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
	
КонецПроцедуры

// Процедура - обработчик события ПриИзменении в колонке Номенклатура ТЧ ОтборПродажПоНоменклатуре формы.
//
&НаКлиенте
Процедура ОтборПродажПоНоменклатуреНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ОтборПродажПоНоменклатуре.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", СтрокаТабличнойЧасти.Характеристика);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.ХарактеристикиИспользуются = СтруктураДанные.ХарактеристикиИспользуются;
	СтрокаТабличнойЧасти.ЭтоГруппа = СтруктураДанные.ЭтоГруппа;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьГруппу(Команда)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ДобавитьГруппуНоменклатурыЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбораГруппы",, ЭтотОбъект,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВариантПредоставленияСкидкиПоНоменклатуреПриИзмененииЗавершение(РезультатОтвета, ДополнительныеПараметры) Экспорт

	Если РезультатОтвета <> КодВозвратаДиалога.Да Тогда
		Объект.ВариантПредоставленияСкидкиПоНоменклатуре = ВариантОграниченияПоНоменклатуреДоИзменения;
		Возврат;
	КонецЕсли;
	
	ВариантОграниченияПоНоменклатуреДоИзменения = Объект.ВариантПредоставленияСкидкиПоНоменклатуре;
	
	ВариантПредоставленияСкидкиПриИзменении();
	
	Если ВариантОграниченияПоНоменклатуреДоИзменения = ВариантПоСегменту Тогда
		Объект.ОтборПродажПоНоменклатуре.Очистить();
	Иначе
		Объект.ОтборПродажПоСегменту.Очистить();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ВариантПредоставленияСкидкиПриИзменении()
	
	Если Объект.ВариантПредоставленияСкидкиПоНоменклатуре = Перечисления.ВариантПредоставленияСкидкиПоНоменклатуре.ПоСегментуНоменклатуры Тогда
		Элементы.ПодсказкаОтборПродажПоНоменклатуре.Заголовок = НСтр("ru = 'Заполните список сегментов, если требуется учитывать объем продаж только определенного сегмента номенклатуры. Если список не заполнен, то объем продаж рассчитывается без ограничения по сегменту.'");
		Элементы.СтраницыОтбораПоНоменклатуре.ТекущаяСтраница = Элементы.СтраницаОтборПоСегментуНоменклатуры;
	Иначе
		Элементы.ПодсказкаОтборПродажПоНоменклатуре.Заголовок = НСтр("ru = 'Заполните список номенклатуры, если требуется учитывать объем продаж только определенного списка номенклатуры 
		|или групп номенклатуры. Если список не заполнен, то объем продаж рассчитывается без ограничения по номенклатуре.'");
		Элементы.СтраницыОтбораПоНоменклатуре.ТекущаяСтраница = Элементы.СтраницаОтборПоНоменклатуре;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуНоменклатурыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		НоваяСтрока = Объект.ОтборПродажПоНоменклатуре.Добавить();
		НоваяСтрока.Номенклатура = РезультатЗакрытия;
		Элементы.ОтборПродажПоНоменклатуре.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

// Процедура определят использование валют.
//
&НаСервере
Процедура ПолучитьОграниченияКонфигурации()

	ИспользуютсяВалюты = ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций");

КонецПроцедуры

// Функция возвращает краткий состав табличной части в виде строки.
//
&НаКлиенте
Функция ОписаниеТабличнойЧастиКлиент(ИмяТаблицы, ИмяРеквизита, КоличествоЭлементов = 0)

	ОписаниеТаблицы = "";
	
	НомерЭлемента = 0;
	Для каждого ЭлементТаблицы Из Объект[ИмяТаблицы] Цикл
		
		НомерЭлемента = НомерЭлемента + 1;
		Если Не КоличествоЭлементов = 0 И (КоличествоЭлементов + 1) = НомерЭлемента Тогда
			ОписаниеТаблицы = ОписаниеТаблицы + "... ,";
		ИначеЕсли Не КоличествоЭлементов = 0 И (КоличествоЭлементов + 1) < НомерЭлемента Тогда
			Прервать;
		Иначе
			ОписаниеТаблицы = ОписаниеТаблицы + Строка(ЭлементТаблицы[ИмяРеквизита]) + ", ";
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ОписаниеТаблицы = "" Тогда
	
		ОписаниеТаблицы = Лев(ОписаниеТаблицы, СтрДлина(ОписаниеТаблицы) - 2);
	
	КонецЕсли;
	
	Возврат ОписаниеТаблицы;

КонецФункции

// Функция возвращает краткий состав табличной части в виде строки.
//
&НаСервере
Функция ОписаниеТабличнойЧастиСервер(ИмяТаблицы, ИмяРеквизита, КоличествоЭлементов = 0)

	ОписаниеТаблицы = "";
	
	НомерЭлемента = 0;
	Для каждого ЭлементТаблицы Из Объект[ИмяТаблицы] Цикл
		
		НомерЭлемента = НомерЭлемента + 1;
		Если Не КоличествоЭлементов = 0 И (КоличествоЭлементов + 1) = НомерЭлемента Тогда
			ОписаниеТаблицы = ОписаниеТаблицы + "... ,";
		ИначеЕсли Не КоличествоЭлементов = 0 И (КоличествоЭлементов + 1) < НомерЭлемента Тогда
			Прервать;
		Иначе
			ОписаниеТаблицы = ОписаниеТаблицы + Строка(ЭлементТаблицы[ИмяРеквизита]) + " ,";
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ОписаниеТаблицы = "" Тогда
	
		ОписаниеТаблицы = Лев(ОписаниеТаблицы, СтрДлина(ОписаниеТаблицы) - 2);
	
	КонецЕсли;
	
	Возврат ОписаниеТаблицы;

КонецФункции

// Процедура обновляет наименование, если пользователь не менял его вручную.
//
&НаКлиенте
Процедура ОбновитьАвтонаименование(Обновить = Истина)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) ИЛИ (Обновить И ИспользуетсяАвтоНаименование И Не НаименованиеИзмененоПользователем) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
		ИспользуетсяАвтоНаименование = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает сформированное автонаименование.
//
&НаКлиенте
Функция СформироватьАвтоНаименованиеНаКлиенте()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж") Тогда
		СтрокаНаименования = ""+?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество"), "Кол-во", Объект.КритерийОграниченияПримененияЗаОбъемПродаж) + " " + 
		?(Объект.ОбластьОграничения = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),НСтр("ru = 'в документе'"),НСтр("ru = 'в строке'")) + " "+Объект.ТипСравнения + " "+Объект.ЗначениеУсловияОграничения + 
		?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество"), НСтр("ru = ' ед.'"), " "+Объект.ВалютаОграничения);
		Если Объект.ОтборПродажПоНоменклатуре.Количество() > 0 Тогда
			СтрокаНаименования = СтрокаНаименования + ": " + ОписаниеТабличнойЧастиКлиент("ОтборПродажПоНоменклатуре", "Номенклатура");
		КонецЕсли;
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж") Тогда
		СтрокаНаименования = ""+?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество"), "Кол-во", Объект.КритерийОграниченияПримененияЗаОбъемПродаж) + " за " + 
		Объект.ВидПериода + " " + ?(Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.ВидыПериодовДляНакопительныхСкидок.ВесьПериод"), "", Объект.Периодичность) + " " + Объект.ТипСравнения + " "+Объект.ЗначениеУсловияОграничения + 
		?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество"), НСтр("ru = ' ед.'"), " "+Объект.ВалютаОграничения);
		Если Объект.ОтборПродажПоНоменклатуре.Количество() > 0 Тогда
			СтрокаНаименования = СтрокаНаименования + ": " + ОписаниеТабличнойЧастиКлиент("ОтборПродажПоНоменклатуре", "Номенклатура");
		КонецЕсли;
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаКомплектПокупки") Тогда
		СтрокаНаименования = НСтр("ru = 'Комплект:'");
		СтрокаНаименования = СтрокаНаименования + " " + ОписаниеТабличнойЧастиКлиент("КомплектПокупки", "Номенклатура");
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаДисконтнуюКарту") Тогда
		СтрокаНаименования = НСтр("ru = 'Предъявлена дисконтная карта'");
		Если ЗначениеЗаполнено(Объект.ВидДисконтнойКарты) Тогда
			СтрокаНаименования = СтрокаНаименования + ": " + Объект.ВидДисконтнойКарты;
		КонецЕсли;
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаДеньРождения") Тогда
		СтрокаНаименования = НСтр("ru = 'За покупку в день рождения'");
		Если ЗначениеЗаполнено(Объект.ДнейПередДнемРождения) Тогда
			СтрокаНаименования = СтрокаНаименования + " (" + Объект.ДнейПередДнемРождения + НСтр("ru = 'д. перед'");
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДнейПослеДняРождения) Тогда
			СтрокаНаименования = СтрокаНаименования + ?(ЗначениеЗаполнено(Объект.ДнейПередДнемРождения), ", ", " (");
			СтрокаНаименования = СтрокаНаименования + Объект.ДнейПослеДняРождения + НСтр("ru = 'д. после)'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции

// Функция возвращает сформированное автонаименование.
//
&НаСервере
Функция СформироватьАвтоНаименованиеНаСервере()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж Тогда
		СтрокаНаименования = ""+?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = Перечисления.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество, "Кол-во", Объект.КритерийОграниченияПримененияЗаОбъемПродаж) + " " + 
		?(Объект.ОбластьОграничения = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,НСтр("ru = 'в документе'"),НСтр("ru = 'в строке'")) + " "+Объект.ТипСравнения + " "+Объект.ЗначениеУсловияОграничения + 
		?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = Перечисления.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество, НСтр("ru = ' ед.'"), " "+Объект.ВалютаОграничения);
		Если Объект.ОтборПродажПоНоменклатуре.Количество() > 0 Тогда
			СтрокаНаименования = СтрокаНаименования + ": " + ОписаниеТабличнойЧастиСервер("ОтборПродажПоНоменклатуре", "Номенклатура");
		КонецЕсли;
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж") Тогда
		СтрокаНаименования = ""+?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество"), "Кол-во", Объект.КритерийОграниченияПримененияЗаОбъемПродаж) + " за " + 
		Объект.ВидПериода + " " + ?(Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.ВидыПериодовДляНакопительныхСкидок.ВесьПериод"), "", Объект.Периодичность) + " " + Объект.ТипСравнения + " "+Объект.ЗначениеУсловияОграничения + 
		?(Объект.КритерийОграниченияПримененияЗаОбъемПродаж = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество"), НСтр("ru = ' ед.'"), " "+Объект.ВалютаОграничения);
		Если Объект.ОтборПродажПоНоменклатуре.Количество() > 0 Тогда
			СтрокаНаименования = СтрокаНаименования + ": " + ОписаниеТабличнойЧастиСервер("ОтборПродажПоНоменклатуре", "Номенклатура");
		КонецЕсли;
	ИначеЕсли Объект.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаКомплектПокупки Тогда
		СтрокаНаименования = НСтр("ru = 'Комплект:'");
		СтрокаНаименования = СтрокаНаименования + " " + ОписаниеТабличнойЧастиСервер("КомплектПокупки", "Номенклатура");
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаДисконтнуюКарту") Тогда
		СтрокаНаименования = НСтр("ru = 'Предъявлена дисконтная карта'");
		Если ЗначениеЗаполнено(Объект.ВидДисконтнойКарты) Тогда
			СтрокаНаименования = СтрокаНаименования + ": " + Объект.ВидДисконтнойКарты;
		КонецЕсли;
	ИначеЕсли Объект.УсловиеПредоставления = ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаДеньРождения") Тогда
		СтрокаНаименования = НСтр("ru = 'За покупку в день рождения'");
		Если ЗначениеЗаполнено(Объект.ДнейПередДнемРождения) Тогда
			СтрокаНаименования = СтрокаНаименования + " (" + Объект.ДнейПередДнемРождения + НСтр("ru = 'д. перед'");
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДнейПослеДняРождения) Тогда
			СтрокаНаименования = СтрокаНаименования + ?(ЗначениеЗаполнено(Объект.ДнейПередДнемРождения), ", ", " (");
			СтрокаНаименования = СтрокаНаименования + Объект.ДнейПослеДняРождения + НСтр("ru = 'д. после)'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

// Получает набор данных с сервера для процедуры НоменклатураПриИзменении.
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	СтруктураДанные.Вставить("ХарактеристикиИспользуются", СтруктураДанные.Номенклатура.ИспользоватьХарактеристики);
	СтруктураДанные.Вставить("ЭтоГруппа", СтруктураДанные.Номенклатура.ЭтоГруппа);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

#КонецОбласти
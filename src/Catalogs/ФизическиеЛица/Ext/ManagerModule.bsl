#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйИнтерфейс

// Процедура заполняет массив документов физ. лиц
//
Функция ДокументФизЛицаПоВиду(Период, ФизическоеЛицо, ВидДокумента = Неопределено) Экспорт
	
	ДокументыФизическихЛиц = Новый Массив;
	ДанныеДокумента = Новый Структура("ФизическоеЛицо, ВидДокумента, Серия, Номер, ДатаВыдачи, СрокДействия, КемВыдан, КодПодразделения, ЯвляетсяДокументомУдостоверяющимЛичность, Представление");
	
	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		
		Возврат ДокументыФизическихЛиц;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		
		Период = ТекущаяДатаСеанса();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК ФизическоеЛицо
	|	,ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента
	|	,ДокументыФизическихЛицСрезПоследних.Серия КАК Серия
	|	,ДокументыФизическихЛицСрезПоследних.Номер КАК Номер
	|	,ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи
	|	,ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия
	|	,ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан
	|	,ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения
	|	,ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность КАК ЯвляетсяДокументомУдостоверяющимЛичность
	|	,ДокументыФизическихЛицСрезПоследних.Представление КАК Представление
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&Период, ФизЛицо = &ФизЛицо И &УсловиеПоискаПоВидуДокумента) КАК ДокументыФизическихЛицСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыдачи УБЫВ";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ФизЛицо", ФизическоеЛицо);
	
	Если ЗначениеЗаполнено(ВидДокумента) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоискаПоВидуДокумента", "ВидДокумента = &ВидДокумента");
		Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
		
	Иначе
		
		Запрос.УстановитьПараметр("УсловиеПоискаПоВидуДокумента", Истина); // выберем все документы
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДанныеДокумента, Выборка);
		ДокументыФизическихЛиц.Добавить(ДанныеДокумента);
		
	КонецЦикла;
	
	Возврат ДокументыФизическихЛиц;
	
КонецФункции // ДокументФизЛицаПоВиду()

// Возвращает список физлиц с похожим наименованием.
// Параметры:
//		ФизическоеЛицоСсылка - СправочникСсылка.ФизическиеЛица, ссылка на физлицо
//								которое уже сопоставлено.
//
Функция ПодобратьСписокФизЛиц(Фамилия, Имя = "", Отчество = "", ФизическоеЛицоСсылка = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛиц.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
		|ГДЕ
		|	ФИОФизЛиц.ФизЛицо <> &ФизЛицо
		|	И ФИОФизЛиц.Фамилия ПОДОБНО &Фамилия";
	
	Запрос.УстановитьПараметр("ФизЛицо", ФизическоеЛицоСсылка);
	Запрос.УстановитьПараметр("Фамилия", Фамилия + "%");
	
	Если Не ПустаяСтрока(Имя) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ФИОФизЛиц.Имя = &Имя";
		Запрос.УстановитьПараметр("Имя", Имя + "%");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Отчество) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ФИОФизЛиц.Отчество = &Отчество";
		Запрос.УстановитьПараметр("Отчество", Отчество + "%");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо");
	
КонецФункции

// Функция возвращает совокупность данных о физическом лице в виде структуры, 
// В совокупность данных входит ФИО, должность в заданной организации, 
// паспортные данные и др.
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, по которой
//                 определяется должность и подразделение работника
//  ФизЛицо      - СправочникСсылка.ФизическиеЛица - физическое лицо,
//                 по которому возвращается совокупность данных
//  ДатаСреза    - Дата - дата, на которую считываются данные
//  ФИОКратко    - Булево - если Истина (по умолчанию), Представление физ.лица
//                 включает фамилию и инициалы, если Ложь - фамилию и полностью
//                 имя и отчество.
//
// Возвращаемое значение:
//  Структура    - Структура с совокупностью данных о физическом лице:
//                 "Фамилия",
//                 "Имя"
//                 "Отчество"
//                 "Представление (Фамилия И.О.)"
//                 "Подразделение"
//                 "ДокументВид"
//                 "ДокументСерия"
//                 "ДокументНомер"
//                 "ДокументДатаВыдачи"
//                 "ДокументКемВыдан"
//                 "ДокументКодПодразделения".
//
Функция ДанныеФизЛица(Организация, ФизЛицо, ДатаСреза, ФИОКратко = Истина) Экспорт
	
	ЗапросПоЛицам = Новый Запрос();
	ЗапросПоЛицам.УстановитьПараметр("ДатаСреза", ДатаСреза);
	ЗапросПоЛицам.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	ЗапросПоЛицам.УстановитьПараметр("ФизЛицо", ФизЛицо);
	ЗапросПоЛицам.Текст =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	Сотрудники.Подразделение,
	|	Сотрудники.ТабельныйНомер,
	|	Сотрудники.Должность,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ДокументВид,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК ДокументСерия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК ДокументНомер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДокументДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК ДокументКемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК ДокументКодПодразделения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФизическиеЛица.Ссылка КАК ФизЛицо
	|	ИЗ
	|		Справочник.ФизическиеЛица КАК ФизическиеЛица
	|	ГДЕ
	|		ФизическиеЛица.Ссылка = &ФизЛицо) КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаСреза, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО ФизЛица.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	|				&ДатаСреза,
	|				Физлицо = &ФизЛицо
	|					И ЯвляетсяДокументомУдостоверяющимЛичность) КАК ДокументыФизическихЛицСрезПоследних
	|		ПО ФизЛица.ФизЛицо = ДокументыФизическихЛицСрезПоследних.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			Сотрудники.Сотрудник.Код КАК ТабельныйНомер,
	|			Сотрудники.Сотрудник.Физлицо КАК ФизЛицо,
	|			Сотрудники.Должность КАК Должность,
	|			Сотрудники.СтруктурнаяЕдиница КАК Подразделение
	|		ИЗ
	|			РегистрСведений.Сотрудники.СрезПоследних(
	|					&ДатаСреза,
	|					Сотрудник.Физлицо = &ФизЛицо
	|						И Организация = &Организация
	|						И Сотрудник.ТипЗанятости = ЗНАЧЕНИЕ(Перечисление.ТипыЗанятости.ОсновноеМестоРаботы)) КАК Сотрудники
	|		ГДЕ
	|			Сотрудники.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			Сотрудники.Сотрудник.ТипЗанятости.Порядок УБЫВ) КАК Сотрудники
	|		ПО ФизЛица.ФизЛицо = Сотрудники.ФизЛицо";
	
	Данные = ЗапросПоЛицам.Выполнить().Выбрать();
	Данные.Следующий();
	
	Результат = Новый Структура("Фамилия, Имя, Отчество, Представление, 
								|ТабельныйНомер, Должность, Подразделение, 
								|ДокументВид, ДокументСерия, ДокументНомер,  
								|ДокументДатаВыдачи, ДокументКемВыдан, ДокументКодПодразделения, 
								|ПредставлениеДокумента");

	ЗаполнитьЗначенияСвойств(Результат, Данные);

	Результат.Представление = ПолучитьФамилиюИмяОтчество(Данные.Фамилия, Данные.Имя, Данные.Отчество, ФИОКратко);
	Результат.ПредставлениеДокумента = ПолучитьПредставлениеДокументаФизЛица(Данные);
	
	Возврат Результат;
	
КонецФункции // ДанныеФизЛица()

Функция ДолжностиФизическогоЛица(Организация, ФизическоеЛицо) Экспорт
	
	// Сортировка строк в результирующей таблице:
	// - должности из регистра подписантов;
	// - должности с основного места работы;
	// - должности по совместительству;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодписиДокументов.ФизическоеЛицо
	|	,Значение(Перечисление.ТипыЗанятости.ОсновноеМестоРаботы) КАК ТипЗанятости
	|	,Неопределено КАК Подразделение
	|	,ПодписиДокументов.Должность
	|	,Истина КАК СведенияИзПодписантов
	|ПОМЕСТИТЬ ДанныеПодписанта
	|ИЗ Справочник.Подписи КАК ПодписиДокументов
	|ГДЕ НЕ ПодписиДокументов.ПравоОтозвано И ПодписиДокументов.Организация = &Организация И ПодписиДокументов.ФизическоеЛицо = &ФизическоеЛицо
	|
	|;Выбрать
	|	СпрСотрудники.Ссылка КАК Сотрудник
	|	,СпрСотрудники.Физлицо КАК ФизическоеЛицо
	|	,СпрСотрудники.ТипЗанятости
	|ПОМЕСТИТЬ СотрудникиФизическогоЛица
	|ИЗ Справочник.Сотрудники КАК СпрСотрудники
	|ГДЕ СпрСотрудники.Физлицо = &ФизическоеЛицо
	|
	|;Выбрать
	|	СотрудникиФизическогоЛица.ФизическоеЛицо
	|	,СотрудникиФизическогоЛица.ТипЗанятости
	|	,РегистрСведенийОСотрудниках.СтруктурнаяЕдиница КАК Подразделение
	|	,РегистрСведенийОСотрудниках.Должность
	|	,Ложь КАК СведенияИзПодписантов
	|ПОМЕСТИТЬ ДанныеОПриемеНаРаботу
	|ИЗ СотрудникиФизическогоЛица КАК СотрудникиФизическогоЛица
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Сотрудники.СрезПоследних(, Организация = &Организация) КАК РегистрСведенийОСотрудниках
	|ПО СотрудникиФизическогоЛица.Сотрудник = РегистрСведенийОСотрудниках.Сотрудник
	|	И РегистрСведенийОСотрудниках.Организация = &Организация
	|
	|;Выбрать
	|	ДанныеПодписанта.ФизическоеЛицо, ДанныеПодписанта.ТипЗанятости, ДанныеПодписанта.Подразделение, ДанныеПодписанта.Должность, ДанныеПодписанта.СведенияИзПодписантов
	|ИЗ ДанныеПодписанта КАК ДанныеПодписанта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОПриемеНаРаботу.ФизическоеЛицо, ДанныеОПриемеНаРаботу.ТипЗанятости, ДанныеОПриемеНаРаботу.Подразделение, ДанныеОПриемеНаРаботу.Должность, ДанныеОПриемеНаРаботу.СведенияИзПодписантов
	|ИЗ ДанныеОПриемеНаРаботу КАК ДанныеОПриемеНаРаботу
	|УПОРЯДОЧИТЬ ПО СведенияИзПодписантов Убыв, ТипЗанятости ВОЗР";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получение представления для документа, удостоверяющего личность.
//
// Параметры
//  ДанныеФизЛица - Коллекция данных физ. лица (структура, строка таблицы, ...),
//                 содержащая значения: ДокументВид, ДокументСерия,
//                 ДокументНомер, ДокументДатаВыдачи, ДокументКемВыдан.  
//
// Возвращаемое значение:
//   Строка - Представление документа, удостоверяющего личность.
//
Функция ПолучитьПредставлениеДокументаФизЛица(ДанныеФизЛица)
	
	Возврат Строка(ДанныеФизЛица.ДокументВид) + " серия " +
			ДанныеФизЛица.ДокументСерия       + ", номер " +
			ДанныеФизЛица.ДокументНомер       + ", выданный " +
			Формат(ДанныеФизЛица.ДокументДатаВыдачи, "ДФ=dd.MM.yyyy")  + " " +
			ДанныеФизЛица.ДокументКемВыдан;
			
КонецФункции // ПолучитьПредставлениеДокументаФизЛица()

// Функция формирует фамилию, имя и отчество одной строкой.
//
// Параметры
//  Фамилия      - фамилия физ. лица
//  Имя          - имя физ. лица
//  Отчество     - отчество физ. лица
//  ФИОКратко    - Булево - если Истина (по умолчанию), Представление физ.лица
//                 включает фамилию и инициалы, если Ложь - фамилию и полностью
//                 имя и отчество.
//
// Возвращаемое значение 
//  Фамилия, имя, отчество одной строкой.
//
Функция ПолучитьФамилиюИмяОтчество(Фамилия = " ", Имя = " ", Отчество = " ", ФИОКратко = Истина)
	
	Если ФИОКратко Тогда
		Возврат ?(НЕ ПустаяСтрока(Фамилия), Фамилия + ?(НЕ ПустаяСтрока(Имя)," " + Лев(Имя,1) + "." + 
				?(НЕ ПустаяСтрока(Отчество) , 
				Лев(Отчество,1)+".", ""), ""), "");
	Иначе
		Возврат ?(НЕ ПустаяСтрока(Фамилия), Фамилия + ?(НЕ ПустаяСтрока(Имя)," " + Имя + 
				?(НЕ ПустаяСтрока(Отчество) , " " + Отчество, ""), ""), "");
	КонецЕсли;

КонецФункции // ПолучитьФамилиюИмяОтчество()

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЗащитаПерсональныхДанных") Тогда
		МодульЗащитаПерсональныхДанных = ОбщегоНазначения.ОбщийМодуль("ЗащитаПерсональныхДанных");
		МодульЗащитаПерсональныхДанных.ДобавитьКомандуПечатиСогласияНаОбработкуПерсональныхДанных(КомандыПечати);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область КонтактнаяИнформацияУНФ

Процедура ЗаполнитьДанныеПанелиКонтактнаяИнформация(ВладелецКИ, ДанныеПанелиКонтактнойИнформации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка,
	|	ФизическиеЛицаКонтактнаяИнформация.Тип КАК Тип,
	|	ФизическиеЛицаКонтактнаяИнформация.Вид КАК Вид,
	|	ФизическиеЛицаКонтактнаяИнформация.Представление КАК Представление,
	|	ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
	|	ФизическиеЛицаКонтактнаяИнформация.Значение КАК Значение
	|ИЗ
	|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|ГДЕ
	|	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &ФизЛицо";
	
	Запрос.УстановитьПараметр("ФизЛицо", ВладелецКИ);
	ДанныеКИ = Запрос.Выполнить().Выбрать();
	
	Пока ДанныеКИ.Следующий() Цикл
		НоваяСтрока = Новый Структура;
		Комментарий = УправлениеКонтактнойИнформацией.КомментарийКонтактнойИнформации(ДанныеКИ.Значение);
		НоваяСтрока.Вставить("Отображение", Строка(ДанныеКИ.Вид) + ": " + ДанныеКИ.Представление + ?(ПустаяСтрока(Комментарий), "", ", " + Комментарий));
		НоваяСтрока.Вставить("ИндексПиктограммы", КонтактнаяИнформацияПанельУНФ.ИндексПиктограммыПоТипу(ДанныеКИ.Тип));
		НоваяСтрока.Вставить("ТипОтображаемыхДанных", "ЗначениеКИ");
		НоваяСтрока.Вставить("ВладелецКИ", ВладелецКИ);
		НоваяСтрока.Вставить("ПредставлениеКИ", ДанныеКИ.Представление);
		НоваяСтрока.Вставить("ТипКИ", ДанныеКИ.Тип);
		ДанныеПанелиКонтактнойИнформации.Добавить(НоваяСтрока);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область Служебные

&НаКлиенте
Процедура ЕстьПравоИзменитьПодпись()
	
	Если НЕ КэшЗначений.ЕстьПравоИзменятьПодпись Тогда
		
		ВызватьИсключение НСтр("ru ='Недостаточно прав, обратитесь к администратору.'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКартинкуПослеЗамены(ИнформацияОФайле, СтрокаОписанияРедактируемогоИзображения) Экспорт
	
	Если ИнформацияОФайле = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИзображениеСсылка = СтрокаОписанияРедактируемогоИзображения.Ссылка;
	ИзменитьИзображениеЗавершениеНаСервере(ИнформацияОФайле, ИзображениеСсылка);
	
	СтрокаОписанияРедактируемогоИзображения.Адрес = ИнформацияОФайле.АдресФайлаВоВременномХранилище;
	ЭтотОбъект[СтрокаОписанияРедактируемогоИзображения.ИмяРеквизита] = ИнформацияОФайле.АдресФайлаВоВременномХранилище;
	ФаксимилеПодписи = ИнформацияОФайле.АдресФайлаВоВременномХранилище;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьИзображениеЗавершениеНаСервере(ИнформацияОФайле, ИзображениеСсылка)
	
	РаботаСФайлами.ОбновитьФайл(ИзображениеСсылка, ИнформацияОФайле);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаименование()
	
	Объект.Наименование = Строка(Объект.Должность) + ", " + Объект.РасшифровкаПодписи;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидПоляПредставленияФизическогоЛица()
	
	ВидПоля = ?(Элементы.РасшифровкаПодписи.Вид = ВидПоляФормы.ПолеНадписи, ВидПоляФормы.ПолеВвода, ВидПоляФормы.ПолеНадписи);
	ШиринаПоля = ?(ВидПоля = ВидПоляФормы.ПолеВвода, 36, 37);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РасшифровкаПодписи", "Вид", ВидПоля);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РасшифровкаПодписи", "АвтоМаксимальнаяШирина", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РасшифровкаПодписи", "МаксимальнаяШирина", ШиринаПоля);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РасшифровкаПодписи", "ЦветТекста", КэшЗначений.ЦветаСтиляВыделенногоЦвета);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	РедактированиеДоступно = Истина;
	Если Объект.ПравоОтозвано Тогда
		
		РедактированиеДоступно = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПравоОтозвано", "Видимость", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОтозватьПравоПодписи", "Доступность", Ложь);
		
	ИначеЕсли ПодписьУжеИспользуется() Тогда
		
		РедактированиеДоступно = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПодписьУжеИспользуется", "Видимость", Истина);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаЗаписатьИЗакрыть", "Доступность", РедактированиеДоступно);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПериод", "Доступность", РедактированиеДоступно);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОграничениеИспользования", "Доступность", РедактированиеДоступно);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПодписант", "Доступность", РедактированиеДоступно);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасшифровкуПодписиНаСервере()
	Перем РасшифровкаПодписи;
	
	Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
		
		Период = ?(ЗначениеЗаполнено(Объект.ДатаНазначения), Объект.ДатаНазначения, ТекущаяДатаСеанса());
		
		РасшифровкаПодписи = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(Период, Объект.ФизическоеЛицо);
		Если НЕ ЗначениеЗаполнено(РасшифровкаПодписи) Тогда
			
			РасшифровкаПодписи = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ФизическоеЛицо, "Наименование"));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РасшифровкаПодписи)
		И ЗначениеЗаполнено(Объект.Делегирование) Тогда
		
		ШаблонСтроки = НСтр("ru ='%1 (%2)'");
		РасшифровкаПодписи = СтрШаблон(ШаблонСтроки, РасшифровкаПодписи, Объект.Делегирование);
		
	КонецЕсли;
	
	Объект.РасшифровкаПодписи = РасшифровкаПодписи;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииФизическогоЛицаНаСервере()
	
	ЗаполнитьРасшифровкуПодписиНаСервере();
	
	ДобавитьИзображенияФизическогоЛицаНаСервере();
	ПролистатьПлашки(+1);
	
КонецПроцедуры

&НаСервере
Функция ПодписьУжеИспользуется()
	
	Возврат (Справочники.Подписи.ПодписьИспользуетсяВДокументах(Объект.Ссылка) = Истина);
	
КонецФункции

#Область СлужебныеИзображения

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	Перем ИдентификаторФайла, Фильтр;
	
	ЕстьПравоИзменитьПодпись();
	
	Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
		
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		
		Фильтр = РаботаСФайламиУНФКлиентСервер.ФильтрФайловИзображений();
		
		РаботаСФайламиКлиент.ДобавитьФайлы(Объект.ФизическоеЛицо, ИдентификаторФайла, Фильтр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Элемент)
	
	ОчиститьСообщения();
	
	СтрокаИзображенияТекущиеПлашки = НайтиТекущуюСтрокуВТаблицеИзображенийНаКлиенте(Элемент.Имя);
	Если СтрокаИзображенияТекущиеПлашки <> Неопределено Тогда
		
		ДанныеФайла = ПолучитьДанныеФайла(СтрокаИзображенияТекущиеПлашки.Ссылка, УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиТекущуюСтрокуВТаблицеИзображенийНаКлиенте(ИмяЭлемента)
	
	МассивСтрокИзображений = Изображения.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяЭлемента));
	Если МассивСтрокИзображений.Количество() > 0 Тогда
		
		Возврат МассивСтрокИзображений[0]
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьРамкиЭлементовФормы(Элемент)
	
	ВсеПлашки = Новый Массив;
	ВсеПлашки.Добавить(Элементы.Плашка1);
	ВсеПлашки.Добавить(Элементы.Плашка2);
	ВсеПлашки.Добавить(Элементы.Плашка3);
	
	Для каждого Плашка Из ВсеПлашки Цикл
		
		Плашка.Рамка = ?(Плашка = Элемент, КэшЗначений.РамкаДвойная, КэшЗначений.РамкаОдинарная);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеПлашки(Элемент)
	
	Если Элемент.Рамка = КэшЗначений.РамкаДвойная Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЕстьПравоИзменитьПодпись();
	
	СтрокаИзображенияТекущиеПлашки = НайтиТекущуюСтрокуВТаблицеИзображенийНаКлиенте(Элемент.Имя);
	Если СтрокаИзображенияТекущиеПлашки = Неопределено Тогда
		
		Если ЗначениеЗаполнено(ФаксимилеПодписи) Тогда
			
			ОчиститьФаксимилеПодписи();
			
		Иначе
			
			ЗаблокироватьДанныеФормыДляРедактирования();
			ДобавитьИзображениеНаКлиенте();
			
		КонецЕсли;
		
	Иначе
		
		СменитьТекущуюФаксимилеПодписиНаСервере(Изображения.Индекс(СтрокаИзображенияТекущиеПлашки));
		ОбновитьРамкиЭлементовФормы(Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФаксимилеПодписи()
	
	ФаксимилеПодписи = Неопределено;
	Объект.Факсимиле = Неопределено;
	
	МассивСтрок = Изображения.НайтиСтроки(Новый Структура("ТекущаяФаксимиле", Истина));
	Для каждого СтрокаТаблицы Из МассивСтрок Цикл
		
		СтрокаТаблицы.ТекущаяФаксимиле = Ложь;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура СменитьТекущуюФаксимилеПодписиНаСервере(ИндексСтрокиИзображенияТекущиеПлашки)
	
	СтрокаИзображенияТекущиеПлашки = Изображения.Получить(ИндексСтрокиИзображенияТекущиеПлашки);
	Для каждого СтрокаТаблицы Из Изображения Цикл
		
		Если СтрокаТаблицы = СтрокаИзображенияТекущиеПлашки Тогда
			
			ФаксимилеПодписи				= СтрокаТаблицы.Адрес;
			Объект.Факсимиле 				= СтрокаТаблицы.Ссылка;
			СтрокаТаблицы.ТекущаяФаксимиле	= Истина;
			Модифицированность				= Истина;
			
		ИначеЕсли СтрокаТаблицы.ТекущаяФаксимиле Тогда
			
			СтрокаТаблицы.ТекущаяФаксимиле	= Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуТаблицыИзображенийФизическогоЛица(СсылкаНаПрисоединенныйФайл, НомерФайла, ЭтоТекущаяФаксимиле)
	
	ДвоичныеДанныеКартинки = РаботаСФайламиУНФ.СсылкаНаДвоичныеДанныеФайла(СсылкаНаПрисоединенныйФайл, УникальныйИдентификатор);
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		
		НоваяСтрока					= Изображения.Вставить(0);
		НоваяСтрока.Ссылка			= СсылкаНаПрисоединенныйФайл;
		НоваяСтрока.Адрес			= ДвоичныеДанныеКартинки;
		НоваяСтрока.ТекущаяФаксимиле= ЭтоТекущаяФаксимиле;
		НоваяСтрока.Тройка			= ЦенообразованиеФормулыСервер.ОкруглитьЧислоПоПравилу(НомерФайла/3, Истина, Перечисления.ПорядкиОкругления.Окр1);
		
		Если ЭтоТекущаяФаксимиле Тогда
			
			ФаксимилеПодписи = ДвоичныеДанныеКартинки;
			
		КонецЕсли;
		
		КэшЗначений.МаксимальнаяТройка = НоваяСтрока.Тройка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзображенияФизическогоЛицаНаСервере()
	
	Изображения.Очистить();
	КэшЗначений.Тройка = 0;
	КэшЗначений.МаксимальнаяТройка = 0;
	
	ДопустимыеРасширенияФайлов = Новый Массив;
	ДопустимыеРасширенияФайлов.Добавить("png");
	ДопустимыеРасширенияФайлов.Добавить("jpeg");
	ДопустимыеРасширенияФайлов.Добавить("jpg");
	
	НомерФайла	= 0;
	Файлы		= Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(Объект.ФизическоеЛицо, Файлы);
	Для каждого Файл Из Файлы Цикл
		
		Если ДопустимыеРасширенияФайлов.Найти(Файл.Расширение) = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НомерФайла				= НомерФайла + 1;
		ЭтоТекущаяФаксимиле		= (Файл = Объект.Факсимиле);
		
		ДобавитьСтрокуТаблицыИзображенийФизическогоЛица(Файл, НомерФайла, ЭтоТекущаяФаксимиле);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПролистатьПлашки(Шаг)
	
	ЗаполнитьПлашкиНаСервере(Шаг);
	
КонецПроцедуры

&НаСервере
Процедура ПодставитьИзображенияТройкиВПлашки(Тройка)
	Перем НомерПлашки;
	
	МассивСтрокОписанийИзображений = Изображения.НайтиСтроки(Новый Структура("Тройка", Тройка));
	Для НомерПлашки = 1 По 3 Цикл
		
		ИмяЭлемента = "Плашка" + НомерПлашки;
		
		Если НомерПлашки > МассивСтрокОписанийИзображений.Количество() Тогда
			
			ЭтотОбъект[ИмяЭлемента]		= Неопределено;
			Элементы[ИмяЭлемента].Рамка = КэшЗначений.РамкаОдинарная;
			
		Иначе
			
			СтрокаОписания = МассивСтрокОписанийИзображений[НомерПлашки - 1];
			
			ЭтотОбъект[ИмяЭлемента]		= СтрокаОписания.Адрес;
			Элементы[ИмяЭлемента].Рамка	= ?(СтрокаОписания.ТекущаяФаксимиле, КэшЗначений.РамкаДвойная, КэшЗначений.РамкаОдинарная);
			СтрокаОписания.ИмяРеквизита = ИмяЭлемента;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьИменаРеквизитовТройки(Тройка)
	
	МассивСтрокОписанийИзображений = Изображения.НайтиСтроки(Новый Структура("Тройка", Тройка));
	Для каждого СтрокаОписания Из МассивСтрокОписанийИзображений Цикл
		
		СтрокаОписания.ИмяРеквизита = "";
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПлашкиНаСервере(Шаг)
	
	НоваяТройка = КэшЗначений.Тройка + Шаг;
	Если НоваяТройка < 1
		ИЛИ НоваяТройка > КэшЗначений.МаксимальнаяТройка + 1 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПодставитьИзображенияТройкиВПлашки(НоваяТройка);
	ОчиститьИменаРеквизитовТройки(КэшЗначений.Тройка);
	
	КэшЗначений.Тройка = НоваяТройка;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор)
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ИдентификаторФормы = УникальныйИдентификатор;
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ДополнительныеПараметры);
	
КонецФункции

&НаСервере
Процедура ВставитьВТаблицуИзображенийДобавленныеФаксимиле(Источник)
	
	Если ТипЗнч(Источник) = Тип("Массив") И ЗначениеЗаполнено(Источник) Тогда
		
		СсылкаНаПрисоединенныйФайл = Источник[0];
		
	ИначеЕсли ТипЗнч(Источник) = Тип("СправочникСсылка.ФизическиеЛицаПрисоединенныеФайлы") Тогда
		
		СсылкаНаПрисоединенныйФайл = Источник;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ДвоичныеДанныеФайла				= РаботаСФайламиУНФ.СсылкаНаДвоичныеДанныеФайла(СсылкаНаПрисоединенныйФайл, УникальныйИдентификатор);
	
	НоваяСтрока						= Изображения.Добавить();
	НоваяСтрока.Адрес				= ДвоичныеДанныеФайла;
	НоваяСтрока.Ссылка				= СсылкаНаПрисоединенныйФайл;
	НоваяСтрока.ТекущаяФаксимиле	= Истина;
	
	НомерФайла						= Изображения.Индекс(НоваяСтрока) + 1;
	НоваяСтрока.Тройка				= ЦенообразованиеФормулыСервер.ОкруглитьЧислоПоПравилу(НомерФайла/3, Истина, Перечисления.ПорядкиОкругления.Окр1);
	
	Если НоваяСтрока.Тройка > КэшЗначений.МаксимальнаяТройка Тогда
		
		КэшЗначений.МаксимальнаяТройка = НоваяСтрока.Тройка;
		
	КонецЕсли;
	
	ФаксимилеПодписи = НоваяСтрока.Адрес;
	Объект.Факсимиле = НоваяСтрока.Ссылка;
	
	ПодставитьИзображенияТройкиВПлашки(КэшЗначений.МаксимальнаяТройка);
	ОчиститьИменаРеквизитовТройки(КэшЗначений.Тройка);
	
	КэшЗначений.Тройка = КэшЗначений.МаксимальнаяТройка;
	
КонецПроцедуры

&НаСервере
Функция РазрешеноИзменениеИзображения(Изображение)
	
	Если Изображение.Зашифрован
		ИЛИ Изображение.ПодписанЭП
		ИЛИ ЗначениеЗаполнено(Изображение.Редактирует) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЗаменитьФаксимилеПодписиНаКлиенте(СсылкаНаФаксимиле)
	
	ЕстьПравоИзменитьПодпись();
	
	НайденноеИзображения = Изображения.НайтиСтроки(Новый Структура("Адрес", СсылкаНаФаксимиле));
	Если НайденноеИзображения.Количество() < 1
		ИЛИ НЕ РазрешеноИзменениеИзображения(НайденноеИзображения[0].Ссылка) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ДанныеФайла = ПолучитьДанныеФайла(НайденноеИзображения[0].Ссылка, УникальныйИдентификатор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьКартинкуПослеЗамены", ЭтотОбъект, НайденноеИзображения[0]);
	РаботаСФайламиСлужебныйКлиент.ОбновитьИзФайлаНаДискеСОповещением(ОписаниеОповещения, ДанныеФайла, УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	КэшЗначений = Новый Структура;
	КэшЗначений.Вставить("ЭтоНовыйЭлемент",							НЕ ЗначениеЗаполнено(Объект.Ссылка));
	КэшЗначений.Вставить("НовыйАвтор",								Неопределено);
	КэшЗначений.Вставить("ДоступныОсобыеПравилаПодписи",			Неопределено);
	КэшЗначений.Вставить("Тройка",									0);
	КэшЗначений.Вставить("МаксимальнаяТройка",						0);
	КэшЗначений.Вставить("РамкаДвойная",							Новый Рамка(ТипРамкиЭлементаУправления.Двойная));
	КэшЗначений.Вставить("РамкаОдинарная",							Новый Рамка(ТипРамкиЭлементаУправления.Одинарная));
	КэшЗначений.Вставить("ЦветаСтиляВыделенногоЦвета",				ЦветаСтиля.ВидДняПроизводственногоКалендаряСубботаЦвет);
	КэшЗначений.Вставить("ЕстьПравоИзменятьПодпись",				ПравоДоступа("Изменение", Метаданные.Справочники.Подписи));
	
	Если КэшЗначений.ЭтоНовыйЭлемент Тогда
		
		КэшЗначений.НовыйАвтор = Пользователи.АвторизованныйПользователь();
		
	Иначе
		
		ФаксимилеПодписи = Объект.Факсимиле;
		
		ДобавитьИзображенияФизическогоЛицаНаСервере();
		ПролистатьПлашки(+1);
		
	КонецЕсли;
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Модифицированность = Истина;
		ВставитьВТаблицуИзображенийДобавленныеФаксимиле(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Модифицированность Тогда
		
		Если ЗначениеЗаполнено(КэшЗначений.НовыйАвтор) Тогда
			
			ТекущийОбъект.Автор = КэшЗначений.НовыйАвтор;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Реквизиты

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ПриИзмененииФизическогоЛицаНаСервере();
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПодписиПриИзменении(Элемент)
	
	ИзменитьВидПоляПредставленияФизическогоЛица();
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПриИзменении(Элемент)
	
	ОбновитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДелегированиеПриИзменении(Элемент)
	
	ЗаполнитьРасшифровкуПодписиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ДекорацияПредыдущиеКартинкиНажатие(Элемент)
	
	ПролистатьПлашки(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСледующиеКартинкиНажатие(Элемент)
	
	ПролистатьПлашки(+1);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредварительно1Нажатие(Элемент)
	
	ПросмотретьИзображение(Элементы.Плашка1);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредварительно2Нажатие(Элемент)
	
	ПросмотретьИзображение(Элементы.Плашка2);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредварительно3Нажатие(Элемент)
	
	ПросмотретьИзображение(Элементы.Плашка3);
	
КонецПроцедуры

&НаКлиенте
Процедура Плашка1Нажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьНажатиеПлашки(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Плашка2Нажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьНажатиеПлашки(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Плашка3Нажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьНажатиеПлашки(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФаксимилеПодписиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(ФаксимилеПодписи) Тогда
		
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтозватьПравоПодписи(Команда)
	
	ЕстьПравоИзменитьПодпись();
	
	Объект.ПравоОтозвано = Истина;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПравоОтозвано", "Видимость", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПодписьУжеИспользуется", "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОтозватьПравоПодписи", "Доступность", Ложь);
	
	Записать();
	
	ЭтотОбъект.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФаксимилеПодписи(Команда)
	
	Если ПустаяСтрока(ФаксимилеПодписи) Тогда
		
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
		
	Иначе
		
		ЗаменитьФаксимилеПодписиНаКлиенте(ФаксимилеПодписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПредставление(Команда)
	
	ИзменитьВидПоляПредставленияФизическогоЛица();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодписьУжеИспользуетсяРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭтотОбъект.ТолькоПросмотр = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПодписьУжеИспользуется", "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаЗаписатьИЗакрыть", "Доступность", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПериод", "Доступность", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОграничениеИспользования", "Доступность", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПодписант", "Доступность", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики
	
	// Установим настройки формы для случая открытия в режиме выбора
	Элементы.Список.РежимВыбора = Параметры.РежимВыбора;
	Если Параметры.РежимВыбора Тогда
		КлючНазначенияИспользования = "ВыборПодбор";
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Иначе
		КлючНазначенияИспользования = "Список";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ДекорацияСинхронизация.Видимость = Ложь;
	Элементы.ДекорацияНетСоединения.Видимость = Ложь;
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если НЕ ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СоединениеСЦБУстановленоМП") Тогда
			Оповестить("ПрошелОбмен");
			Возврат;
		КонецЕсли;
		
		ОжиданиеВыполненияОбмена();
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	#Если МобильноеПриложениеКлиент Тогда
		ОтключитьОбработчикОжидания("ОжиданиеВыполненияОбмена");
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПрошелОбмен" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/razdel-kontragenty/spisok-kontragentov/");
	
КонецПроцедуры

#КонецОбласти

#Область Синхронизация

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	
	Оповестить("ПрошелОбмен");
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Элементы.ДекорацияСинхронизация.Видимость Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СоединениеСЦБУстановленоМП") Тогда
			Возврат;
		КонецЕсли;
		
		
		Если ИнформацияОбИнтернетСоединении.ПолучитьТипСоединения() = ТипИнтернетСоединения.НетСоединения Тогда
			Элементы.ДекорацияНетСоединения.Видимость = Истина;
			ПодключитьОбработчикОжидания("ОтключитьОповещениеОбОтсутствииИнтернета", 3, Истина);
			Возврат;
		КонецЕсли;
		
		
		Элементы.ДекорацияСинхронизация.Видимость = Истина;
		
		ОбщегоНазначенияМПВызовСервера.УстановитьЗначениеКонстанты("СинхронизацияВыполняется", Истина);
		ОбщегоНазначенияМПВызовСервера.УстановитьЗначениеКонстанты("НачатьСинхронизацию", Истина);
		
		ПодключитьОбработчикОжидания("ОжиданиеВыполненияОбмена", 0.1, Истина);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеВыполненияОбмена()
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ОбменВыполняется = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СинхронизацияВыполняется");
		Если ОбменВыполняется Тогда
			Элементы.ДекорацияСинхронизация.Видимость = Истина;
			ПодключитьОбработчикОжидания("ОжиданиеВыполненияОбмена", 3, Истина);
		ИначеЕсли Элементы.ДекорацияСинхронизация.Видимость Тогда
			Элементы.ДекорацияСинхронизация.Видимость = Ложь;
			Если ИнформацияОбИнтернетСоединении.ПолучитьТипСоединения() = ТипИнтернетСоединения.НетСоединения Тогда
				Элементы.ДекорацияНетСоединения.Видимость = Истина;
				ПодключитьОбработчикОжидания("ОтключитьОповещениеОбОтсутствииИнтернета", 3, Истина);
				Возврат;
			КонецЕсли;
			Оповестить("ПрошелОбмен");
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОповещениеОбОтсутствииИнтернета()
	
	#Если МобильноеПриложениеКлиент Тогда
		Элементы.ДекорацияНетСоединения.Видимость = Ложь;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти
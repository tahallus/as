#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(СтруктурнаяЕдиница)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//   Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПриходныйОрдер, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПриходныйОрдерЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ПриходныйОрдерЗапасы.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ПриходныйОрдерЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА ПриходныйОрдерЗапасы.Ссылка.Ячейка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Ячейка,
	|	ПриходныйОрдерЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПриходныйОрдерЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПриходныйОрдерЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПриходныйОрдерЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПриходныйОрдерЗапасы.Количество
	|		ИНАЧЕ ПриходныйОрдерЗапасы.Количество * ПриходныйОрдерЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ПриходныйОрдерЗапасы
	|ГДЕ
	|	ПриходныйОрдерЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Ссылка.Дата КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Приход) КАК Операция,
	|	ТаблицаСерииНоменклатуры.Серия КАК Серия,
	|	&Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ТаблицаСерииНоменклатуры.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаСерииНоменклатуры.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаЗапасы.Номенклатура.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|						ТОГДА &ОстаткиСерийНоменклатуры
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТаблицаЗапасы.Номенклатура.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|					ТОГДА &ОстаткиСерийНоменклатуры
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаткиСерийНоменклатуры
	|ИЗ
	|	Документ.ПриходныйОрдер.Запасы КАК ТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдер.СерииНоменклатуры КАК ТаблицаСерииНоменклатуры
	|		ПО ТаблицаЗапасы.Ссылка = ТаблицаСерииНоменклатуры.Ссылка
	|			И ТаблицаЗапасы.КлючСвязи = ТаблицаСерииНоменклатуры.КлючСвязи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО ТаблицаЗапасы.Номенклатура = ПолитикиУчетаСерий.Владелец
	|			И (&Организация = ПолитикиУчетаСерий.Организация)
	|			И (&СтруктурнаяЕдиница = ПолитикиУчетаСерий.СтруктурнаяЕдиница)
	|ГДЕ
	|	ТаблицаСерииНоменклатуры.Ссылка = &Ссылка
	|	И &ИспользоватьСерииНоменклатуры
	|	И ТаблицаЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходныйОрдер);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	
	Запрос.УстановитьПараметр("ИспользоватьСерииНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерииНоменклатуры);
	Запрос.УстановитьПараметр("ОстаткиСерийНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийНоменклатуры);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ДокументСсылкаПриходныйОрдер.СтруктурнаяЕдиница);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаЗапасыНаСкладах = МассивРезультатов[0].Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", ТаблицаЗапасыНаСкладах);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", ТаблицаЗапасыНаСкладах);
	
	// Серии номенклатуры
	ТаблицаСерииНоменклатуры = МассивРезультатов[1].Выгрузить();
		
	Если Не СтруктураДополнительныеСвойства.УчетнаяПолитика.МиграцияСерийНоменклатурыВыполнена Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", ТаблицаСерииНоменклатуры);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", Новый ТаблицаЗначений);
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", ТаблицаСерииНоменклатуры);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", Новый ТаблицаЗначений);
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("ОстаткиСерийНоменклатуры", Истина);
	
	ОстаткиСерийНоменклатурыСтроки = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатуры", ТаблицаСерииНоменклатуры.Скопировать(ОстаткиСерийНоменклатурыСтроки));
	
	ОстаткиСерийНоменклатурыСтроки = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыКПоступлению", ТаблицаСерииНоменклатуры.Скопировать(ОстаткиСерийНоменклатурыСтроки));
	
	// Формирование проводок документа.
	ПроведениеДокументовУНФ.СформироватьТаблицуПроводок(ДокументСсылкаПриходныйОрдер, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПриходныйОрдер, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если ПроведениеДокументовУНФ.КонтрольОстатковВыключен() Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыНаСкладахИзменение", "ДвиженияЗапасыИзменение"
	// содержат записи, необходимо выполнить контроль реализации товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Ячейка) КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ДокументОбъектПриходныйОрдер = ДокументСсылкаПриходныйОрдер.ПолучитьОбъект();
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			КонтрольОстатковУНФ.ЗапасыНаСкладах(ДокументОбъектПриходныйОрдер, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ВыполнитьКонтроль()

#Область ИнтерфейсПечати

Функция ОписатьПравилаЗаполненияПодписей() Экспорт
	
	РеквизитыОбъекта = Новый Соответствие;
	
	РеквизитыОбъекта.Вставить("ПодписьРуководителя", "Организация.ПодписьРуководителя");
	РеквизитыОбъекта.Вставить("ПодписьКладовщика", "СтруктурнаяЕдиница.ПодписьМОЛ");
	РеквизитыОбъекта.Вставить("Комиссия", "ЭтоКомиссия");
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

Функция ДанныеБланкаТоварногоНаполнения(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходныйОрдер.Ссылка КАК Ссылка
	|	,""Приходный ордер"" КАК ПредставлениеРегистратора
	|	,ПриходныйОрдер.Дата КАК ДатаДокумента
	|	,ПриходныйОрдер.СтруктурнаяЕдиница КАК ПредставлениеСклада
	|	,ПриходныйОрдер.Номер
	|	,ПриходныйОрдер.Ячейка КАК ПредставлениеЯчейки
	|	,ПриходныйОрдер.Организация.Префикс КАК Префикс
	|	,""Запасы"" КАК ТипНоменклатурыТаблицы
	|	,ПриходныйОрдер.Запасы.(
	|		НомерСтроки КАК НомерСтроки
	|		,Номенклатура.Склад КАК Склад
	|		,Номенклатура.Ячейка КАК Ячейка
	|		,Неопределено КАК Содержание
	|		,Выбор КОГДА ВЫРАЗИТЬ(ПриходныйОрдер.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100)) = """"
	|			ТОГДА ПриходныйОрдер.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ПриходныйОрдер.Запасы.Номенклатура.НаименованиеПолное КОНЕЦ КАК ПредставлениеНоменклатуры
	|		,Номенклатура.Артикул КАК Артикул
	|		,Номенклатура.Штрихкод КАК Штрихкод
	|		,Номенклатура.Код КАК Код
	|		,ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения
	|		,Количество КАК Количество
	|		,Характеристика
	|		,Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|		,КлючСвязи
	|	) КАК ТаблицаЗапасы
	|	,ПриходныйОрдер.СерииНоменклатуры.(
	|		Серия,
	|		КлючСвязи
	|	) КАК ТаблицаСерииНоменклатуры
	|ИЗ Документ.ПриходныйОрдер КАК ПриходныйОрдер
	|ГДЕ ПриходныйОрдер.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Функция формирует печатную форму документа по указанному макету.
//
// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент в который будет выводится печатная
//				   форма.
//  ИмяМакета    - Строка, имя макета печатной формы.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	Перем Ошибки;
	
	ПараметрыНоменклатуры = Новый Структура;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПриходныйОрдер";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ИмяМакета = "ПриходныйОрдер" Тогда
		
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента
			|	,ПриходныйОрдер.Номер
			|	,ПриходныйОрдер.Организация КАК Организация
			|	,ПриходныйОрдер.Организация.Префикс КАК Префикс
			|	,ПриходныйОрдер.ПодписьКладовщика.Должность КАК ДолжностьКладовщика
			|	,ПриходныйОрдер.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика
			|
			|	,ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки
			|		,Номенклатура.НаименованиеПолное КАК Запас
			|		,Номенклатура.Код КАК Код
			|		,Номенклатура.Артикул КАК Артикул
			|		,Номенклатура.Штрихкод КАК Штрихкод
			|		,ЕдиницаИзмерения КАК ЕдиницаХранения
			|		,Количество КАК Количество
			|		,Характеристика
			|		,КлючСвязи
			|	)
			|
			|	,ПриходныйОрдер.СерииНоменклатуры.(
			|		ПРЕДСТАВЛЕНИЕ(ПриходныйОрдер.СерииНоменклатуры.Серия) КАК Серия
			|		,КлючСвязи
			|	)
			|ИЗ Документ.ПриходныйОрдер КАК ПриходныйОрдер
			|ГДЕ ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|УПОРЯДОЧИТЬ ПО НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			ВыборкаСтрокСерииНоменклатуры = Шапка.СерииНоменклатуры.Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_ПриходныйОрдер";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_ПриходныйОрдер");
			СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);
			
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента,
				Шапка.Номер, Шапка.Префикс);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Приходный ордер № %1 от %2'"),
				НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
			ОбластьМакета.Параметры.ПредставлениеПоставщика = ПечатьДокументовУНФ.ОписаниеОрганизации(
				СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Количество = 0;
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(
					ВыборкаСтрокСерииНоменклатуры, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул,
					СтрокаСерииНоменклатуры);
				
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокЗапасы.Артикул);
				ОбластьМакета.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(
					ПараметрыНоменклатуры);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Количество = Количество + 1;
				
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "М4" Тогда
		
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента,
			|	ПриходныйОрдер.Организация КАК Организация,
			|	ПриходныйОрдер.СтруктурнаяЕдиница.Наименование КАК СкладНаименование,
			|	ПриходныйОрдер.Номер,
			|	ПриходныйОрдер.Организация.Префикс КАК Префикс,
			|	ПриходныйОрдер.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
			|	ПриходныйОрдер.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
			|	ПриходныйОрдер.ПодписьСдающегоЗапасы.Должность КАК ДолжностьСдал,
			|	ПриходныйОрдер.ПодписьСдающегоЗапасы.РасшифровкаПодписи КАК РасшифровкаПодписиСдал,
			|	ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.НаименованиеПолное КАК Запас,
			|		Номенклатура.Код КАК Код,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Штрихкод КАК Штрихкод,
			|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		Количество КАК Количество,
			|		Характеристика,
			|		ЕдиницаИзмерения.Код
			|	)
			|ИЗ
			|	Документ.ПриходныйОрдер КАК ПриходныйОрдер
			|ГДЕ
			|	ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_М4";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_М4");
			СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);
			
			ОбластьМакетаШапка              = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаЗаголовокДокумента = Макет.ПолучитьОбласть("ЗаголовокДокумента");
			ОбластьМакетаЗаголовокТаблицы   = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакетаСтрока             = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаПодвалСтрок        = Макет.ПолучитьОбласть("ПодвалСтрок");
			ОбластьМакетаИтого              = Макет.ПолучитьОбласть("Итого");
			ОбластьМакетаПодвал             = Макет.ПолучитьОбласть("Подвал");
			
			// Выводим общие реквизиты шапки
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
			
			ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакетаШапка.Параметры.НомерДокумента           = НомерДокумента;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
			
			// Выводим заголовок документа
			ОбластьМакетаЗаголовокДокумента.Параметры.Заполнить(Шапка);
			ОбластьМакетаЗаголовокДокумента.Параметры.ДатаСоставления = Шапка.ДатаДокумента;
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокДокумента);
			
			// Выводим заголовок таблицы
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			
			// Инициализация итогов в документе
			ИтогоКоличествоПринято = 0;
			Ном                    = 0;
			
			// Инициализация счетчиков страниц и строк
			НомерСтраницы   = 1;
			НомерСтроки     = 0;
			КоличествоСтрок = Шапка.Запасы.Выгрузить().Количество();
			
			// Выводим многострочную часть документа
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				ОбластьМакетаСтрока.Параметры.ТоварНаименование = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
				
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокЗапасы.Артикул);
				ОбластьМакетаСтрока.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
				
				// Проверим вывод
				СтрокаСПодвалом = Новый Массив;
				Если НомерСтроки = 1 Тогда
					СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
				КонецЕсли;                                                   // помещаться заголовок
				
				СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
				Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
					СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);  // помещаться и подвал документа
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
				Иначе                                              // иначе - только подвал строк
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвалСтрок);
				КонецЕсли;
				
				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Выведем заголовок таблицы
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				ИтогоКоличествоПринято = ИтогоКоличествоПринято + ВыборкаСтрокЗапасы.Количество;
				
			КонецЦикла;
			
			// Выводим итоги по документу
			ОбластьМакетаИтого.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
			ТабличныйДокумент.Вывести(ОбластьМакетаИтого);
			
			// Выводим итоги по документу
			ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			
		ИначеЕсли ИмяМакета = "ТОРГ4" Тогда
			
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриходныйОрдер.Дата КАК ДатаДокумента,
			|	ПриходныйОрдер.Организация КАК Организация,
			|	ПриходныйОрдер.СтруктурнаяЕдиница.Наименование КАК СкладНаименование,
			|	ПриходныйОрдер.Номер КАК Номер,
			|	ПриходныйОрдер.Организация.Префикс КАК Префикс,
			|	ПриходныйОрдер.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
			|	ПриходныйОрдер.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
			|	ПриходныйОрдер.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
			|	ПриходныйОрдер.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
			|	ПриходныйОрдер.Запасы.(
			|		НомерСтроки КАК НомерСтроки,
			|		Номенклатура.НаименованиеПолное КАК Запас,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Штрихкод КАК Штрихкод,
			|		Номенклатура.Код КАК Код,
			|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|		ВЫБОР
			|			КОГДА ПриходныйОрдер.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|					И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|					И ПриходныйОрдер.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|				ТОГДА 1
			|			КОГДА ПриходныйОрдер.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.КлассификаторЕдиницИзмерения
			|				ТОГДА 1
			|			ИНАЧЕ ПриходныйОрдер.Запасы.ЕдиницаИзмерения.Коэффициент
			|		КОНЕЦ КАК КоличествоВОдномМесте,
			|		ВЫБОР
			|			КОГДА ПриходныйОрдер.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				ТОГДА ПриходныйОрдер.Запасы.Количество * ПриходныйОрдер.Запасы.ЕдиницаИзмерения.Коэффициент
			|			ИНАЧЕ ПриходныйОрдер.Запасы.Количество
			|		КОНЕЦ КАК КоличествоШтук,
			|		Количество КАК Количество,
			|		Характеристика КАК Характеристика
			|	) КАК Запасы,
			|	ПриходныйОрдер.Комиссия.ПодписиКомиссии.(
			|		ПодписьЧленаКомиссии.Должность КАК Должность,
			|		ПодписьЧленаКомиссии.РасшифровкаПодписи КАК РасшифровкаПодписи
			|	) КАК ПодписиКомиссии
			|ИЗ
			|	Документ.ПриходныйОрдер КАК ПриходныйОрдер,
			|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
			|ГДЕ
			|	ПриходныйОрдер.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
			ВыборкаКомиссия = Шапка.ПодписиКомиссии.Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдер_ТОРГ4";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриходныйОрдер.ПФ_MXL_ТОРГ4");
			
			ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, ,);
			
			ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьМакетаВсего = Макет.ПолучитьОбласть("Всего");
			ОбластьМакетаШапкаКомиссии = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ШапкаКомиссия", "", Ошибки);
			ОбластьМакетаЧленКомиссии = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ЧленКомиссии", "", Ошибки);
			ОбластьМакетаПодписьКладовщика = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ПодписьКладовщика", "", Ошибки);
			
			
			// Выводим общие реквизиты шапки
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
			
			ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакетаШапка.Параметры.НомерДокумента           = НомерДокумента;
			ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
			
			// Инициализация счетчика страниц
			НомерСтраницы = 1;
			
			// Инициализация счетчика строк
			НомерСтроки     = 0;
			КоличествоСтрок = Шапка.Запасы.Выгрузить().Количество();
			
			// инициализация итогов по странице
			ИтогоШтукПоСтранице     = 0;
			ИтогоПоСтранице        	= 0;
			
			// инициализация итогов по документу
			ИтогоШтук        = 0;
			Итого	         = 0;
			Ном              = 0;
			
			// Выводим многострочную часть документа
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				ОбластьМакетаСтрока.Параметры.ЗапасНаименование = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
				
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокЗапасы.Артикул);
				ОбластьМакетаСтрока.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
				
				// Проверим вывод
				СтрокаСПодвалом = Новый Массив;
				Если НомерСтроки = 1 Тогда
					
					СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
				СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
				СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					
					СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);
					Если ОбластьМакетаШапкаКомиссии <> Неопределено Тогда
						
						СтрокаСПодвалом.Добавить(ОбластьМакетаШапкаКомиссии);
						
					КонецЕсли;
					
					Если ОбластьМакетаЧленКомиссии <> Неопределено Тогда
						
						СтрокаСПодвалом.Добавить(ОбластьМакетаЧленКомиссии);
						СтрокаСПодвалом.Добавить(ОбластьМакетаЧленКомиссии);
						СтрокаСПодвалом.Добавить(ОбластьМакетаЧленКомиссии);
						
					КонецЕсли;
					
					Если ОбластьМакетаПодписьКладовщика <> Неопределено Тогда
						
						СтрокаСПодвалом.Добавить(ОбластьМакетаПодписьКладовщика);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
					
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоШтукПоСтранице = ИтогоШтукПоСтранице;
					ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоПоСтранице = ИтогоПоСтранице;
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Очистим итоги по странице
					ИтогоШтукПоСтранице = 0;
					ИтогоПоСтранице = 0;
					
					// Выведем заголовок таблицы
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				ИначеЕсли НомерСтроки = 1 Тогда // первая срока, все помещается
					
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				
				// Обновим итоги по странице
				ИтогоШтукПоСтранице = ИтогоШтукПоСтранице + ВыборкаСтрокЗапасы.КоличествоШтук;
				ИтогоПоСтранице = ИтогоПоСтранице + ВыборкаСтрокЗапасы.Количество;
				
				// Обновим итогов по документу
				ИтогоШтук = ИтогоШтук + ВыборкаСтрокЗапасы.КоличествоШтук;
				Итого = Итого + ВыборкаСтрокЗапасы.Количество;
				
			КонецЦикла;
			
			// Выводим итоги по документу
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоШтукПоСтранице = ИтогоШтукПоСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоПоСтранице = ИтогоПоСтранице;
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
			
			// Выводим итоги по документу
			ОбластьМакетаВсего.Параметры.ИтогоШтук        = ИтогоШтук;
			ОбластьМакетаВсего.Параметры.Итого        = Итого;
			ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
			
			// Выводим подписи
			Если ОбластьМакетаШапкаКомиссии <> Неопределено Тогда
				
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаКомиссии);
				
			КонецЕсли;
			
			ДанныеПечати = Новый Структура;
			
			Если ОбластьМакетаЧленКомиссии <> Неопределено Тогда
				
				КоличествоВыведенныхСтрок = 1;
				Пока ВыборкаКомиссия.Следующий() Цикл
					
					ДанныеПечати.Вставить("ДолжностьЧленаКомиссии", ВыборкаКомиссия.Должность);
					ДанныеПечати.Вставить("РасшифровкаПодписиЧленаКомиссии", ВыборкаКомиссия.РасшифровкаПодписи);
					
					ОбластьМакетаЧленКомиссии.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаЧленКомиссии);
					
					КоличествоВыведенныхСтрок = КоличествоВыведенныхСтрок + 1;
					
				КонецЦикла;
				
				ДанныеПечати.Вставить("ДолжностьЧленаКомиссии", Неопределено);
				ДанныеПечати.Вставить("РасшифровкаПодписиЧленаКомиссии", Неопределено);
				
				Пока КоличествоВыведенныхСтрок < 4 Цикл
					
					ОбластьМакетаЧленКомиссии.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаЧленКомиссии);
					
					КоличествоВыведенныхСтрок = КоличествоВыведенныхСтрок + 1;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ОбластьМакетаПодписьКладовщика <> Неопределено Тогда
			
				ОбластьМакетаПодписьКладовщика.Параметры.Заполнить(Шапка);
				ТабличныйДокумент.Вывести(ОбластьМакетаПодписьКладовщика);
				
			КонецЕсли;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриходныйОрдер") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриходныйОрдер", "Приходный ордер", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ПриходныйОрдер"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М4", "М-4", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "М4"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ4", "Т-4", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ТОРГ4"));
		
	КонецЕсли;
	
	ОписаниеПечатнойФормы = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "БланкТоварногоНаполнения");
	Если ОписаниеПечатнойФормы <> Неопределено Тогда
		
		ОписаниеПечатнойФормы.ТабличныйДокумент = Новый ТабличныйДокумент;
		ОписаниеПечатнойФормы.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьБланкТоварногоНаполнения.КлючПараметровПечати();
		ОписаниеПечатнойФормы.ПолныйПутьКМакету = Обработки.ПечатьБланкТоварногоНаполнения.ПолныйПутьКМакету();
		ОписаниеПечатнойФормы.СинонимМакета = Обработки.ПечатьБланкТоварногоНаполнения.ПредставлениеПФ();
		
		ДанныеОбъектовПечати = ДанныеБланкаТоварногоНаполнения(МассивОбъектов, ОбъектыПечати);
		Обработки.ПечатьБланкТоварногоНаполнения.СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'М4 (Приходный ордер)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ4";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ4 (Акт о приемке товара)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриходныйОрдер";
	КомандаПечати.Представление = НСтр("ru = 'Приходный ордер'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполнения";
	КомандаПечати.Представление = Обработки.ПечатьБланкТоварногоНаполнения.ПредставлениеПФ();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
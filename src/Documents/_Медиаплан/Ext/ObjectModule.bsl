
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка._ЗаявкаКлиента") Тогда
		// Заполнение шапки
		Автор = ДанныеЗаполнения.Автор;
		ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
		ВидСкидкиНаценки = ДанныеЗаполнения.ВидСкидкиНаценки;
		ВидЦен = ДанныеЗаполнения.ВидЦен;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения._ДанныеБронированияПлощадок.Записывать = Истина;
	Движения._ДанныеПредварительногоБронированияПлощадок.Записывать = Истина;
	
	Если Статус = Перечисления._СтатусыМедиаПланов.Бронь Тогда 
		РегистрДвижений = Движения._ДанныеБронированияПлощадок;
	ИначеЕсли Статус = Перечисления._СтатусыМедиаПланов.Расчет Тогда
		РегистрДвижений = Движения._ДанныеПредварительногоБронированияПлощадок;
	Иначе 
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Проведение возможно в статусе <Расчет> или <Бронь>";
		Сообщение.Поле = "Статус";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТаблицаБронирования = ПолучитьТаблицуБронирования();
	
	Для Каждого СтрокаТаблицыБоронирования Из ТаблицаБронирования Цикл
		Движение = РегистрДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицыБоронирования);
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьТаблицуБронирования()

	
	Запрос = Новый Запрос;
	
	//Установка значений параметров
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	_МедиапланСтрокиМедиаплана.Номенклатура КАК Номенклатура,
	|	_МедиапланСтрокиМедиапланаРасшифровка.Количество + _МедиапланСтрокиМедиапланаРасшифровка.БонусКоличество КАК Количество,
	|	_МедиапланСтрокиМедиапланаРасшифровка.ДатаНачала КАК ДатаНачала,
	|	_МедиапланСтрокиМедиапланаРасшифровка.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_СтрокиДокумента
	|ИЗ
	|	Документ._Медиаплан.СтрокиМедиаплана КАК _МедиапланСтрокиМедиаплана
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ._Медиаплан.СтрокиМедиапланаРасшифровка КАК _МедиапланСтрокиМедиапланаРасшифровка
	|		ПО _МедиапланСтрокиМедиаплана.Ссылка = _МедиапланСтрокиМедиапланаРасшифровка.Ссылка
	|			И _МедиапланСтрокиМедиаплана.КлючСвязи = _МедиапланСтрокиМедиапланаРасшифровка.КлючСвязи
	|ГДЕ
	|	_МедиапланСтрокиМедиаплана.Ссылка = &Ссылка
	|	И _МедиапланСтрокиМедиапланаРасшифровка.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата КАК Период,
	|	ВТ_СтрокиДокумента.Номенклатура КАК Номенклатура,
	|	Номенклатура_Состав.Площадка КАК Площадка,
	|	ВЫРАЗИТЬ(Номенклатура_Состав.Коэффициент * ВТ_СтрокиДокумента.Количество / (РАЗНОСТЬДАТ(ВТ_СтрокиДокумента.ДатаНачала, ВТ_СтрокиДокумента.ДатаОкончания, ДЕНЬ) + 1) КАК ЧИСЛО(15, 0)) КАК Показы
	|ИЗ
	|	ВТ_СтрокиДокумента КАК ВТ_СтрокиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура._Состав КАК Номенклатура_Состав
	|		ПО ВТ_СтрокиДокумента.Номенклатура = Номенклатура_Состав.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО ВТ_СтрокиДокумента.ДатаНачала <= ДанныеПроизводственногоКалендаря.Дата
	|			И ВТ_СтрокиДокумента.ДатаОкончания >= ДанныеПроизводственногоКалендаря.Дата";
	
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
	
КонецФункции
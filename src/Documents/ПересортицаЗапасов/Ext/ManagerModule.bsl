#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(СтруктурнаяЕдиница)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
//@skip-warning
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасы(ДокументСсылкаСписаниеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.Списание
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		Если СтрНайти(КолонкаРезультатЗапроса.Имя, "Оприходование") = 0 Тогда
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
		КонецЕсли;
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|		СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &ПериодКонтроля) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСписаниеЗапасов);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	ТаблицаЗапасыОстатки.Индексы.Добавить("Организация,СтруктурнаяЕдиница,СчетУчета,Номенклатура,Характеристика,Партия");
	
	КоличествоСтрок = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Количество() - 1;
	
	Для н = 0 По КоличествоСтрок Цикл
		
		СтрокаТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы[н];
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицаЗапасы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицаЗапасы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицаЗапасы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицаЗапасы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицаЗапасы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицаЗапасы.Партия);
		
		КоличествоТребуется = СтрокаТаблицаЗапасы.Количество;
		
		Если КоличествоТребуется > 0 Тогда
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуется Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуется / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуется;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуется Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				СуммаКСписанию = 0;	
			КонецЕсли;
	
			СтрокаТаблицаЗапасы.Сумма = СуммаКСписанию;
			СтрокаТаблицаЗапасы.Количество = КоличествоТребуется;
					
		КонецЕсли;
		
		// Сформируем проводки.
		Если Окр(СтрокаТаблицаЗапасы.Сумма, 2, 1) <> 0 Тогда
			СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
			
			Если ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетДтОприходование;
			КонецЕсли;
		КонецЕсли;
		
		// Данные для корректировки А.
		Если ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания Тогда
			СтрокаТаблицаЗапасы.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчетаОприходование;
			СтрокаТаблицаЗапасы.КоррНоменклатура = СтрокаТаблицаЗапасы.НоменклатураОприходование;
			СтрокаТаблицаЗапасы.КоррХарактеристика = СтрокаТаблицаЗапасы.ХарактеристикаОприходование;
			СтрокаТаблицаЗапасы.КоррПартия = СтрокаТаблицаЗапасы.ПартияОприходование;
			СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
		КонецЕсли;
		
		// Строка оприходования
		НоваяСтрокаОприходование = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОприходование, СтрокаТаблицаЗапасы);
		НоваяСтрокаОприходование.СчетУчета = СтрокаТаблицаЗапасы.СчетУчетаОприходование;
		НоваяСтрокаОприходование.Номенклатура = СтрокаТаблицаЗапасы.НоменклатураОприходование;
		НоваяСтрокаОприходование.Характеристика = СтрокаТаблицаЗапасы.ХарактеристикаОприходование;
		НоваяСтрокаОприходование.Партия = СтрокаТаблицаЗапасы.ПартияОприходование;
		Если НЕ ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания Тогда
			НоваяСтрокаОприходование.Сумма = СтрокаТаблицаЗапасы.СуммаОприходование;
		КонецЕсли;
		НоваяСтрокаОприходование.ВидДвижения = ВидДвиженияНакопления.Приход;
		
		// Сформируем проводки.
		Если НЕ ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания И Окр(НоваяСтрокаОприходование.Сумма, 2, 1) <> 0 Тогда
			СтрокаТаблицаУправленческийОприходование = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческийОприходование, НоваяСтрокаОприходование);
			СтрокаТаблицаУправленческийОприходование.СчетДт = СтрокаТаблицаЗапасы.СчетДтОприходование;
			СтрокаТаблицаУправленческийОприходование.СчетКт = СтрокаТаблицаЗапасы.СчетКтОприходование;
		КонецЕсли;
		
		// Данные для корректировки Б.
		НоваяСтрокаОприходование.ДокументПродажи = Неопределено;
		Если ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания Тогда
			НоваяСтрокаОприходование.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
			НоваяСтрокаОприходование.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
			НоваяСтрокаОприходование.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
			НоваяСтрокаОприходование.КоррПартия = СтрокаТаблицаЗапасы.Партия;
			НоваяСтрокаОприходование.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
		Иначе
			НоваяСтрокаОприходование.ФиксированнаяСтоимость = Истина;
		КонецЕсли;
		НоваяСтрокаОприходование.СодержаниеПроводки = СтрокаТаблицаЗапасы.СодержаниеПроводкиОприходование;
		
		// Для подсчета итоговых сумма доходов и расходов
		СтрокаТаблицаЗапасы.СуммаРасход = СтрокаТаблицаЗапасы.Сумма;
		СтрокаТаблицаЗапасы.СуммаПриход = 0;
		
		НоваяСтрокаОприходование.СуммаРасход = 0;
		НоваяСтрокаОприходование.СуммаПриход = НоваяСтрокаОприходование.Сумма;
		
		Если ПроведениеДокументовУНФ.КонтрольОстатковВыключен()
			И ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания
			И НоваяСтрокаОприходование.Сумма <= 0 Тогда
			
			ЗаголовокОшибки = НСтр("ru = 'Ошибка:'");
			ШаблонЗаголовкаСообщения = ЗаголовокОшибки + Символы.ПС + НСтр(
				"ru = 'Попытка оприходовать номенклатуру с нулевой стоимостью.'");
			
			ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаПартия%'");
			
			ПредставлениеНоменклатуры = Справочники.Номенклатура.Представление(
				НоваяСтрокаОприходование.Номенклатура.Наименование,
				НоваяСтрокаОприходование.Характеристика.Наименование,
				НоваяСтрокаОприходование.Партия.Наименование);
				
			ТекстСообщения = ШаблонЗаголовкаСообщения + Символы.ПС + СтрЗаменить(ШаблонСообщения,
				"%НоменклатураХарактеристикаПартия%", ПредставлениеНоменклатуры);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументСсылкаСписаниеЗапасов, "Запасы");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаЗапасов()

Процедура СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаЗапасыНаСкладах.ВидДвижения КАК ВидДвижения,
	|	ТаблицаЗапасыНаСкладах.Период КАК Период,
	|	ТаблицаЗапасыНаСкладах.Организация КАК Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия КАК Партия,
	|	ТаблицаЗапасыНаСкладах.НомерГТД КАК НомерГТД,
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И ТаблицаЗапасыНаСкладах.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.НомерГТД,
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения,
	|	ТаблицаЗапасыНаСкладах.ВидДвижения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаСписаниеЗапасов, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПересортицаЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПересортицаЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ПересортицаЗапасовЗапасы.Ссылка КАК Ссылка,
	|	ПересортицаЗапасовЗапасы.Ссылка.Дата КАК Период,
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПересортицаЗапасовЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	ПересортицаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов КАК СчетУчета,
	|	ПересортицаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПересортицаЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПересортицаЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПересортицаЗапасовЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПересортицаЗапасовЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПересортицаЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПересортицаЗапасовЗапасы.Количество
	|		ИНАЧЕ ПересортицаЗапасовЗапасы.Количество * ПересортицаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	0 КАК Сумма,
	|	ПересортицаЗапасовЗапасы.Ссылка.Корреспонденция КАК СчетДт,
	|	ПересортицаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов КАК СчетКт,
	|	&СписаниеЗапасов КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвиженияОрдерныйСклад,
	|	ИСТИНА КАК Списание,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ПересортицаЗапасовЗапасы.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ПересортицаЗапасовЗапасы.ПартияОприходование КАК ПартияОприходование,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование.СчетУчетаЗапасов КАК СчетУчетаОприходование,
	|	ПересортицаЗапасовЗапасы.Сумма КАК СуммаОприходование,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование.СчетУчетаЗапасов КАК СчетДтОприходование,
	|	ПересортицаЗапасовЗапасы.Ссылка.КорреспонденцияОприходование КАК СчетКтОприходование,
	|	&ОприходованиеЗапасов КАК СодержаниеПроводкиОприходование,
	|	ПересортицаЗапасовЗапасы.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходоватьТоварыПоСебестоимостиСписания,
	|	ЕСТЬNULL(ПолитикиУчетаСерийРасход.ПолитикаУчетаСерий, ПересортицаЗапасовЗапасы.Номенклатура.ПолитикаУчетаСерий) КАК ПолитикаУчетаСерий
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийРасход
	|		ПО ПересортицаЗапасовЗапасы.Номенклатура = ПолитикиУчетаСерийРасход.Владелец
	|			И (&Организация = ПолитикиУчетаСерийРасход.Организация)
	|			И (&СтруктурнаяЕдиница = ПолитикиУчетаСерийРасход.СтруктурнаяЕдиница)
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПересортицаЗапасовЗапасы.НомерСтроки,
	|	ПересортицаЗапасовЗапасы.КлючСвязи,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ПересортицаЗапасовЗапасы.Ссылка,
	|	ПересортицаЗапасовЗапасы.Ссылка.Дата,
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ПересортицаЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница,
	|	ПересортицаЗапасовЗапасы.Ссылка.Ячейка,
	|	ПересортицаЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование,
	|	ПересортицаЗапасовЗапасы.СтранаПроисхожденияОприходование,
	|	ПересортицаЗапасовЗапасы.НомерГТДОприходование,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПересортицаЗапасовЗапасы.ХарактеристикаОприходование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПересортицаЗапасовЗапасы.ПартияОприходование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПересортицаЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПересортицаЗапасовЗапасы.Количество
	|		ИНАЧЕ ПересортицаЗапасовЗапасы.Количество * ПересортицаЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ,
	|	ПересортицаЗапасовЗапасы.Сумма,
	|	ПересортицаЗапасовЗапасы.НоменклатураОприходование.СчетУчетаЗапасов,
	|	ПересортицаЗапасовЗапасы.Ссылка.КорреспонденцияОприходование,
	|	&ОприходованиеЗапасов,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ПересортицаЗапасовЗапасы.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания,
	|	ЕСТЬNULL(ПолитикиУчетаСерийПриход.ПолитикаУчетаСерий, ПересортицаЗапасовЗапасы.Номенклатура.ПолитикаУчетаСерий)
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПриход
	|		ПО ПересортицаЗапасовЗапасы.Номенклатура = ПолитикиУчетаСерийПриход.Владелец
	|			И (&СтруктурнаяЕдиница = ПолитикиУчетаСерийПриход.СтруктурнаяЕдиница)
	|			И (&Организация = ПолитикиУчетаСерийПриход.Организация)
	|ГДЕ
	|	ПересортицаЗапасовЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаЗапасы.ВидДвижения КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СценарийПланирования КАК СценарийПланирования,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.Списание
	|				И НЕ ТаблицаЗапасы.ПриходоватьТоварыПоСебестоимостиСписания
	|			ТОГДА ТаблицаЗапасы.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПересортицаЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ДокументПродажи,
	|	ТаблицаЗапасы.СчетДт КАК СчетДт,
	|	ТаблицаЗапасы.СчетКт КАК СчетКт,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК СодержаниеПроводки,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК Содержание,
	|	СУММА(ТаблицаЗапасы.Количество) КАК Количество,
	|	СУММА(ТаблицаЗапасы.Сумма) КАК Сумма,
	|	ТаблицаЗапасы.Списание КАК Списание,
	|	ТаблицаЗапасы.СуммаОприходование КАК СуммаОприходование,
	|	ТаблицаЗапасы.СчетДтОприходование КАК СчетДтОприходование,
	|	ТаблицаЗапасы.СчетКтОприходование КАК СчетКтОприходование,
	|	0 КАК СуммаПриход,
	|	0 КАК СуммаРасход,
	|	ТаблицаЗапасы.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаЗапасы.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаЗапасы.ПартияОприходование КАК ПартияОприходование,
	|	ТаблицаЗапасы.СчетУчетаОприходование КАК СчетУчетаОприходование,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК КоррСчетУчета,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК КоррНоменклатура,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК КоррХарактеристика,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СодержаниеПроводкиОприходование КАК СодержаниеПроводкиОприходование,
	|	ЛОЖЬ КАК ФиксированнаяСтоимость
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.Списание
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.ВидДвижения,
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СценарийПланирования,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.СодержаниеПроводки,
	|	ТаблицаЗапасы.СчетДт,
	|	ТаблицаЗапасы.СчетКт,
	|	ТаблицаЗапасы.Списание,
	|	ТаблицаЗапасы.СуммаОприходование,
	|	ТаблицаЗапасы.СчетДтОприходование,
	|	ТаблицаЗапасы.СчетКтОприходование,
	|	ТаблицаЗапасы.НоменклатураОприходование,
	|	ТаблицаЗапасы.ХарактеристикаОприходование,
	|	ТаблицаЗапасы.ПартияОприходование,
	|	ТаблицаЗапасы.СчетУчетаОприходование,
	|	ТаблицаЗапасы.СодержаниеПроводкиОприходование,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.Списание
	|				И НЕ ТаблицаЗапасы.ПриходоватьТоварыПоСебестоимостиСписания
	|			ТОГДА ТаблицаЗапасы.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПересортицаЗапасов.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаЗапасы.СодержаниеПроводки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ТаблицаЗапасы.Списание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаЗапасы.ВидДвижения КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.ОрдерныйСклад = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаЗапасы.ВидДвиженияОрдерныйСклад КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.ОрдерныйСклад = ИСТИНА
	|	И ТаблицаЗапасы.Списание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.Ссылка.Дата КАК Период,
	|	ТаблицаЗапасы.ВидДвижения КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Расход) КАК Операция,
	|	ТаблицаСерииНоменклатуры.Серия КАК Серия,
	|	&Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ТаблицаСерииНоменклатуры.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаСерииНоменклатуры.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|			ТОГДА &ОстаткиСерийНоменклатуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаЗапасы.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаткиСерийНоменклатуры
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаЗапасов.СерииНоменклатуры КАК ТаблицаСерииНоменклатуры
	|		ПО ТаблицаЗапасы.Ссылка = ТаблицаСерииНоменклатуры.Ссылка
	|			И ТаблицаЗапасы.КлючСвязи = ТаблицаСерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	ТаблицаСерииНоменклатуры.Ссылка = &Ссылка
	|	И ТаблицаЗапасы.Ссылка = &Ссылка
	|	И &ИспользоватьСерииНоменклатуры
	|	И НЕ ТаблицаЗапасы.ОрдерныйСклад
	|	И ТаблицаЗапасы.Списание
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.Ссылка.Дата,
	|	ТаблицаЗапасы.ВидДвижения,
	|	ТаблицаЗапасы.Период,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Приход),
	|	ПересортицаЗапасовСерииНоменклатурыОприходование.Серия,
	|	&Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ячейка,
	|	ВЫБОР
	|		КОГДА ПересортицаЗапасовСерииНоменклатурыОприходование.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ПересортицаЗапасовСерииНоменклатурыОприходование.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|			ТОГДА &ОстаткиСерийНоменклатуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаЗапасы.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаЗапасов.СерииНоменклатурыОприходование КАК ПересортицаЗапасовСерииНоменклатурыОприходование
	|		ПО ТаблицаЗапасы.Ссылка = ПересортицаЗапасовСерииНоменклатурыОприходование.Ссылка
	|			И ТаблицаЗапасы.КлючСвязи = ПересортицаЗапасовСерииНоменклатурыОприходование.КлючСвязи
	|ГДЕ
	|	ПересортицаЗапасовСерииНоменклатурыОприходование.Ссылка = &Ссылка
	|	И ТаблицаЗапасы.Ссылка = &Ссылка
	|	И &ИспользоватьСерииНоменклатуры
	|	И НЕ ТаблицаЗапасы.ОрдерныйСклад
	|	И НЕ ТаблицаЗапасы.Списание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПересортицаЗапасов.Дата КАК Дата,
	|	ПересортицаЗапасов.Корреспонденция КАК Корреспонденция,
	|	ПересортицаЗапасов.КорреспонденцияОприходование КАК КорреспонденцияОприходование
	|ПОМЕСТИТЬ ВременнаяТаблицаРеквизитыШапки
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК ПересортицаЗапасов
	|ГДЕ
	|	ПересортицаЗапасов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаЗапасы.ВидДвиженияОрдерныйСклад КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.ОрдерныйСклад = ИСТИНА
	|	И НЕ ТаблицаЗапасы.Списание";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСписаниеЗапасов);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	
	Запрос.УстановитьПараметр("ИспользоватьСерииНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерииНоменклатуры);
	Запрос.УстановитьПараметр("ОстаткиСерийНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийНоменклатуры);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ДокументСсылкаСписаниеЗапасов.СтруктурнаяЕдиница);
	
	Запрос.УстановитьПараметр("СписаниеЗапасов", НСтр("ru = 'Списание запасов'"));
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", МассивРезультатов[1].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКРасходуСоСкладов", МассивРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", МассивРезультатов[6].Выгрузить());
	
	// Серии номенклатуры
	РезультатЗапроса4 = МассивРезультатов[4].Выгрузить();
	
	Если Не СтруктураДополнительныеСвойства.УчетнаяПолитика.МиграцияСерийНоменклатурыВыполнена Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", РезультатЗапроса4);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", Новый ТаблицаЗначений);
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", РезультатЗапроса4);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", Новый ТаблицаЗначений);
	КонецЕсли;

	ПараметрыОтбора = Новый Структура("ОстаткиСерийНоменклатуры", Истина);
	ОстаткиСерийНоменклатурыСтроки = РезультатЗапроса4.НайтиСтроки(ПараметрыОтбора);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатуры", РезультатЗапроса4.Скопировать(ОстаткиСерийНоменклатурыСтроки));;
	
	// Сформируем пустую таблицу проводок.
	ПроведениеДокументовУНФ.СформироватьТаблицуПроводок(ДокументСсылкаСписаниеЗапасов, СтруктураДополнительныеСвойства);
	
	// Расчет стоимости списания запасов.
	СформироватьТаблицаЗапасы(ДокументСсылкаСписаниеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВременнаяТаблицаДвиженийЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаДвиженийЗапасы.СуммаРасход КАК СуммаРасход,
	|	ВременнаяТаблицаДвиженийЗапасы.СуммаПриход КАК СуммаПриход
	|ПОМЕСТИТЬ ВременнаяТаблицаДвиженийЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ВременнаяТаблицаДвиженийЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРеквизитыШапки.Дата КАК Дата,
	|	ВременнаяТаблицаДвиженийЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаДвиженийЗапасы.СуммаРасход КАК СуммаРасход,
	|	ВременнаяТаблицаДвиженийЗапасы.СуммаПриход КАК СуммаПриход,
	|	ВЫРАЗИТЬ(ВременнаяТаблицаРеквизитыШапки.Корреспонденция КАК ПланСчетов.Управленческий) КАК Корреспонденция,
	|	ВЫРАЗИТЬ(ВременнаяТаблицаРеквизитыШапки.КорреспонденцияОприходование КАК ПланСчетов.Управленческий) КАК КорреспонденцияОприходование
	|ПОМЕСТИТЬ ВременнаяТаблицаДанные
	|ИЗ
	|	ВременнаяТаблицаДвиженийЗапасы КАК ВременнаяТаблицаДвиженийЗапасы,
	|	ВременнаяТаблицаРеквизитыШапки КАК ВременнаяТаблицаРеквизитыШапки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеЗапасовЗапасы.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельности,
	|	СУММА(СписаниеЗапасовЗапасы.СуммаРасход) КАК СуммаРасходов,
	|	СУММА(СписаниеЗапасовЗапасы.СуммаРасход) КАК Сумма,
	|	СписаниеЗапасовЗапасы.Корреспонденция КАК СчетУчета,
	|	СписаниеЗапасовЗапасы.Номенклатура КАК Аналитика,
	|	&ПоступлениеРасходов КАК СодержаниеПроводки,
	|	СУММА(0) КАК СуммаДоходов
	|ИЗ
	|	ВременнаяТаблицаДанные КАК СписаниеЗапасовЗапасы
	|ГДЕ
	|	СписаниеЗапасовЗапасы.СуммаРасход > 0
	|	И СписаниеЗапасовЗапасы.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы)
	|	И НЕ &ПриходоватьТоварыПоСебестоимостиСписания
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеЗапасовЗапасы.Корреспонденция,
	|	СписаниеЗапасовЗапасы.Дата,
	|	СписаниеЗапасовЗапасы.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеЗапасовЗапасы.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	СУММА(0),
	|	СУММА(СписаниеЗапасовЗапасы.СуммаПриход),
	|	СписаниеЗапасовЗапасы.КорреспонденцияОприходование,
	|	СписаниеЗапасовЗапасы.Номенклатура,
	|	&ПоступлениеДоходов,
	|	СУММА(СписаниеЗапасовЗапасы.СуммаПриход)
	|ИЗ
	|	ВременнаяТаблицаДанные КАК СписаниеЗапасовЗапасы
	|ГДЕ
	|	СписаниеЗапасовЗапасы.СуммаПриход > 0
	|	И СписаниеЗапасовЗапасы.КорреспонденцияОприходование.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеДоходы)
	|	И НЕ &ПриходоватьТоварыПоСебестоимостиСписания
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеЗапасовЗапасы.Дата,
	|	СписаниеЗапасовЗапасы.Номенклатура,
	|	СписаниеЗапасовЗапасы.КорреспонденцияОприходование");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСписаниеЗапасов);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ТаблицаЗапасы", СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы);
	Запрос.УстановитьПараметр("ПриходоватьТоварыПоСебестоимостиСписания", ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания);
	
	Запрос.УстановитьПараметр("ПоступлениеРасходов", НСтр("ru = 'Прочие расходы'"));
	Запрос.УстановитьПараметр("ПоступлениеДоходов", НСтр("ru = 'Поступление прочих доходов'"));
	
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", МассивРезультатов[2].Выгрузить());

КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаСписаниеЗапасов, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если ПроведениеДокументовУНФ.КонтрольОстатковВыключен() Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыНаСкладахИзменение", "ДвиженияЗапасыИзменение"
	// содержат записи, необходимо выполнить контроль реализации товаров.
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСерииНоменклатурыИзменение
		Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Ячейка) КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СчетУчета) КАК СчетУчетаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО ДвиженияЗапасыИзменение.Организация = ЗапасыОстатки.Организация
		|			И ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСерииНоменклатурыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСерииНоменклатурыИзменение.Серия КАК СерияПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Ячейка КАК ЯчейкаПредставление,
		|	СерииНоменклатурыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	СерииНоменклатурыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияСерииНоменклатурыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияСерииНоменклатурыИзменение КАК ДвиженияСерииНоменклатурыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатуры.Остатки(&МоментКонтроля, ) КАК СерииНоменклатурыОстатки
		|		ПО ДвиженияСерииНоменклатурыИзменение.СтруктурнаяЕдиница = СерииНоменклатурыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияСерииНоменклатурыИзменение.Номенклатура = СерииНоменклатурыОстатки.Номенклатура
		|			И ДвиженияСерииНоменклатурыИзменение.Характеристика = СерииНоменклатурыОстатки.Характеристика
		|			И ДвиженияСерииНоменклатурыИзменение.Партия = СерииНоменклатурыОстатки.Партия
		|			И ДвиженияСерииНоменклатурыИзменение.Серия = СерииНоменклатурыОстатки.Серия
		|			И ДвиженияСерииНоменклатурыИзменение.Ячейка = СерииНоменклатурыОстатки.Ячейка
		|			И (ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасы.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.СчетУчета) КАК СчетУчетаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ДвиженияЗапасы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасы.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ДвиженияЗапасы.Сумма КАК СуммаОстатокЗапасы
		|ИЗ
		|	РегистрНакопления.Запасы КАК ДвиженияЗапасы
		|ГДЕ
		|	ДвиженияЗапасы.Регистратор = &Ссылка
		|	И ЕСТЬNULL(ДвиженияЗапасы.Сумма, 0) <= 0
		|	И &ПриходоватьТоварыПоСебестоимостиСписания
		|	И ДвиженияЗапасы.ВидДвижения = Значение(ВидДвиженияНакопления.Приход)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		Запрос.УстановитьПараметр("ПриходоватьТоварыПоСебестоимостиСписания", ДокументСсылкаСписаниеЗапасов.ПриходоватьТоварыПоСебестоимостиСписания);
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСписаниеЗапасов);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			Тогда
			
			ДокументОбъектСписаниеЗапасов = ДокументСсылкаСписаниеЗапасов.ПолучитьОбъект()
			
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			КонтрольОстатковУНФ.ЗапасыНаСкладах(ДокументОбъектСписаниеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета запасов и затрат.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			КонтрольОстатковУНФ.Запасы(ДокументОбъектСписаниеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета серийных номеров.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			КонтрольОстатковУНФ.СерииНоменклатуры(ДокументОбъектСписаниеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по остаткам запасов в разрезе номеров ГТД.
		Если Константы.КонтролироватьОстаткиПоНомерамГТД.Получить()
			И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			КонтрольОстатковУНФ.ЗапасыВРазрезеГТД(ДокументОбъектСписаниеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
		// Оприходование товаров с нулевой стоимостью.
		Если НЕ МассивРезультатов[4].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			КонтрольОстатковУНФ.ЗапасыОприходование(ДокументОбъектСписаниеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#Область ИнтерфейсПечати

Процедура СформироватьАктПересортицыТоваров(ТабДокумент, ТекущийДокумент)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыводитьДопКолонку = (Константы.ПредставлениеКодовВПечатныхФормах.Получить() <> Перечисления.КодыНоменклатурыВДокументах.ПустоеЗначение);
	ПараметрыНоменклатуры = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.СтруктурнаяЕдиница КАК Склад,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.СтруктурнаяЕдиница) КАК СкладПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Автор КАК Ответственный,
	|	Документ.ДокументОснование КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование) КАК ОснованиеПредставление
	|ИЗ
	|	Документ.ПересортицаЗапасов КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК НоменклатураСписание,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураСписаниеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаСписаниеПредставление,
	|	ТаблицаТовары.Номенклатура.Код КАК КодСписываемой,
	|	ТаблицаТовары.Номенклатура.Артикул КАК АртикулСписываемой,
	|	ТаблицаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаТовары.НоменклатураОприходование.Код КАК КодОприходование,
	|	ТаблицаТовары.НоменклатураОприходование.Артикул КАК АртикулОприходование,
	|	ТаблицаТовары.НоменклатураОприходование.НаименованиеПолное КАК НоменклатураОприходованиеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.ХарактеристикаОприходование) КАК ХарактеристикаОприходованиеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияСписаниеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияОприходованиеПредставление,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.Запасы КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	СерииНоменклатуры.Ссылка КАК Ссылка,
	|	СерииНоменклатуры.Серия,
	|	СерииНоменклатуры.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.Ссылка = &ТекущийДокумент
	|	И СерииНоменклатуры.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыОприходование.НомерСтроки КАК НомерСтроки,
	|	СерииНоменклатурыОприходование.Ссылка КАК Ссылка,
	|	СерииНоменклатурыОприходование.Серия,
	|	СерииНоменклатурыОприходование.КлючСвязи
	|ИЗ
	|	Документ.ПересортицаЗапасов.СерииНоменклатурыОприходование КАК СерииНоменклатурыОприходование
	|ГДЕ
	|	СерииНоменклатурыОприходование.Ссылка = &ТекущийДокумент
	|	И СерииНоменклатурыОприходование.Ссылка.Проведен";
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПересортицаЗапасов_АктОПересортицеТоваров";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПересортицаЗапасов.ПФ_MXL_АктОПересортицеТоваров");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");
	
	ОбластьНомераШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовСписаниеШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовСписание");
	ОбластьКодовОприходованиеШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовОприходование");
	ОбластьТоварСписаниеШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварСписание");
	ОбластьТоварОприходованиеШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварОприходование");
	ОбластьЕдиницаСписаниеШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияСписание");
	ОбластьЕдиницаОприходованиеШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияОприходование");
	ОбластьДанныеШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	
	Если Не ВыводитьДопКолонку Тогда
		
		Макет.Область("ТоварСписание").ШиринаКолонки = Макет.Область("ТоварСписание").ШиринаКолонки
		+ Макет.Область("КолонкаКодовСписание").ШиринаКолонки;
		Макет.Область("ТоварОприходование").ШиринаКолонки = Макет.Область("ТоварОприходование").ШиринаКолонки
		+ Макет.Область("КолонкаКодовОприходование").ШиринаКолонки;
		
	КонецЕсли;
	
	ОбластьНомераСтрока              = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовСписаниеСтрока       = Макет.ПолучитьОбласть("Строка|КолонкаКодовСписание");
	ОбластьКодовОприходованиеСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодовОприходование");
	ОбластьТоварСписаниеСтрока       = Макет.ПолучитьОбласть("Строка|ТоварСписание");
	ОбластьТоварОприходованиеСтрока  = Макет.ПолучитьОбласть("Строка|ТоварОприходование");
	ОбластьЕдиницаСписаниеСтрока       = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияСписание");
	ОбластьЕдиницаОприходованиеСтрока  = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияОприходование");
	ОбластьДанныхСтрока              = Макет.ПолучитьОбласть("Строка|Данные");
	
	ОбластьПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодписи        = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаСтрокСерииНоменклатуры = РезультатыЗапроса[2].Выбрать();
	ВыборкаСтрокСерииНоменклатурыОприходование = РезультатыЗапроса[3].Выбрать();
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(РеквизитыДокумента.Дата,
			РеквизитыДокумента.Номер, РеквизитыДокумента.Префикс);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Пересортица запасов № %1 от %2'"),
			НомерДокумента, Формат(РеквизитыДокумента.Дата, "ДЛФ=DD"));
		
		ОрганизацияПредставление = ПечатьДокументовУНФ.ОписаниеОрганизации(ПечатьДокументовУНФ.СведенияОЮрФизЛице(
			ВыборкаДокументы.Организация, ВыборкаДокументы.Дата), "ПолноеНаименование,");
		
		ОбластьЗаголовок.Параметры.ОрганизацияПредставление = ОрганизацияПредставление;
		
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		Если ЗначениеЗаполнено(ВыборкаДокументы.ДокументОснование) Тогда
			ОбластьОснование.Параметры.ОснованиеПредставление = ВыборкаДокументы.ОснованиеПредставление;
			ТабДокумент.Вывести(ОбластьОснование);
		КонецЕсли;
		
		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);
		
		Если ВыводитьДопКолонку Тогда
			
			ТабДокумент.Присоединить(ОбластьКодовСписаниеШапка);
			
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварСписаниеШапка);
		ТабДокумент.Присоединить(ОбластьЕдиницаСписаниеШапка);
		
		Если ВыводитьДопКолонку Тогда
			
			ТабДокумент.Присоединить(ОбластьКодовОприходованиеШапка);
			
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварОприходованиеШапка);
		ТабДокумент.Присоединить(ОбластьЕдиницаОприходованиеШапка);
		
		ТабДокумент.Присоединить(ОбластьДанныеШапка);
		
		ВсегоНаименований = 0;
		
		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Если ВыборкаПоТабличнымЧастям.Количество() > 0 Тогда
			Пока ВыборкаПоСтрокам.Следующий() Цикл
				
				ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Вывести(ОбластьНомераСтрока);
				
				Если ВыводитьДопКолонку Тогда
					
					ПараметрыНоменклатуры.Очистить();
					ПараметрыНоменклатуры.Вставить("Код", ВыборкаПоСтрокам.КодСписываемой);
					ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаПоСтрокам.АртикулСписываемой);
					
					ОбластьКодовСписаниеСтрока.Параметры.ДопКолонкаСписание = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
					ТабДокумент.Присоединить(ОбластьКодовСписаниеСтрока);
					
				КонецЕсли;
				
				// Номенклатура.
				ОбластьТоварСписаниеСтрока.Параметры.НоменклатураСписание = ВыборкаПоСтрокам.НоменклатураСписание;
				
				СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСтрокСерииНоменклатуры, ВыборкаПоСтрокам.КлючСвязи);
				ОбластьТоварСписаниеСтрока.Параметры.НоменклатураСписаниеПредставление = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураСписаниеПредставление,
				ВыборкаПоСтрокам.ХарактеристикаСписаниеПредставление,
				,
				СтрокаСерииНоменклатуры);
				
				ТабДокумент.Присоединить(ОбластьТоварСписаниеСтрока);
				
				ОбластьЕдиницаСписаниеСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьЕдиницаСписаниеСтрока);
				
				
				Если ВыводитьДопКолонку Тогда
					
					ПараметрыНоменклатуры.Очистить();
					ПараметрыНоменклатуры.Вставить("Код", ВыборкаПоСтрокам.КодОприходование);
					ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаПоСтрокам.АртикулОприходование);
					
					ОбластьКодовОприходованиеСтрока.Параметры.ДопКолонкаОприходование = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
					ТабДокумент.Присоединить(ОбластьКодовОприходованиеСтрока);
					
				КонецЕсли;
				
				// Номенклатура.
				СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСтрокСерииНоменклатурыОприходование, ВыборкаПоСтрокам.КлючСвязи);
				ОбластьТоварОприходованиеСтрока.Параметры.НоменклатураОприходование = ВыборкаПоСтрокам.НоменклатураОприходование;
				ОбластьТоварОприходованиеСтрока.Параметры.НоменклатураОприходованиеПредставление = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураОприходованиеПредставление,
				ВыборкаПоСтрокам.ХарактеристикаОприходованиеПредставление,
				,
				СтрокаСерииНоменклатуры
				);
				
				
				ТабДокумент.Присоединить(ОбластьТоварОприходованиеСтрока);
				
				ОбластьЕдиницаОприходованиеСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьЕдиницаОприходованиеСтрока);
				
				// Данные количестве.
				ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				
				ТабДокумент.Присоединить(ОбластьДанныхСтрока);
				
				ВсегоНаименований = ВсегоНаименований + 1;
				
			КонецЦикла;
			
			// Вывод подвала.
			ТабДокумент.Вывести(ОбластьПодвалТаблицы);
			// Вывод Суммы прописью.
			
		Иначе
			
			// Вывод подвала.
			ТабДокумент.Вывести(ОбластьПодвалТаблицы);
			// Вывод Суммы прописью.
			
			ОбластьНомераСтрокаПусто              = Макет.ПолучитьОбласть("СтрокаПусто|НомерСтроки");
			ОбластьКодовСписаниеСтрокаПусто       = Макет.ПолучитьОбласть("СтрокаПусто|КолонкаКодовСписание");
			ОбластьКодовОприходованиеСтрокаПусто  = Макет.ПолучитьОбласть("СтрокаПусто|КолонкаКодовОприходование");
			ОбластьТоварСписаниеСтрокаПусто       = Макет.ПолучитьОбласть("СтрокаПусто|ТоварСписание");
			ОбластьТоварОприходованиеСтрокаПусто  = Макет.ПолучитьОбласть("СтрокаПусто|ТоварОприходование");
			ОбластьЕдиницаСписаниеСтрокаПусто       = Макет.ПолучитьОбласть("СтрокаПусто|ЕдиницаИзмеренияСписание");
			ОбластьЕдиницаОприходованиеСтрокаПусто  = Макет.ПолучитьОбласть("СтрокаПусто|ЕдиницаИзмеренияОприходование");
			ОбластьДанныхСтрокаПусто              = Макет.ПолучитьОбласть("СтрокаПусто|Данные");
			
			ТабДокумент.Вывести(ОбластьНомераСтрокаПусто);
			Если ВыводитьДопКолонку Тогда
				ТабДокумент.Присоединить(ОбластьКодовСписаниеСтрокаПусто);
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьТоварСписаниеСтрокаПусто);
			ТабДокумент.Присоединить(ОбластьЕдиницаСписаниеСтрокаПусто);
			Если ВыводитьДопКолонку Тогда
				ТабДокумент.Присоединить(ОбластьКодовОприходованиеСтрокаПусто);
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьТоварОприходованиеСтрокаПусто);
			ТабДокумент.Присоединить(ОбластьЕдиницаОприходованиеСтрокаПусто);
			ТабДокумент.Присоединить(ОбластьДанныхСтрокаПусто);
			
		КонецЕсли;
		
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		
		ТабДокумент.Вывести(ОбластьСуммаПрописью);
		
		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ВыборкаДокументы.Ответственный;
		ТабДокумент.Вывести(ОбластьПодписи);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПересортицаЗапасов";

	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ИмяМакета = "АктПересортицыТоваров" Тогда
			
			СформироватьАктПересортицыТоваров(ТабличныйДокумент, ТекущийДокумент);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПересортицыТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктПересортицыТоваров",
				НСтр("ru = 'Акт о пересортице товаров'"),
				ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "АктПересортицыТоваров")
		);

	КонецЕсли;

	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, 
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт о пересортице товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктПересортицыТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Акт о пересортице товаров'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
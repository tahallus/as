#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ИнтерфейсПечати

Функция СформироватьПлатежнаяВедомость(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	ТабличныйДокумент = ПечатнаяФорма.ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПечатнаяФорма.ПолныйПутьКМакету);
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало);
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлатежнаяВедомость.Дата КАК ДатаДокумента,
		|	ПлатежнаяВедомость.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ПлатежнаяВедомость.ПериодРегистрации КАК ПериодРегистрации,
		|	ПлатежнаяВедомость.Номер,
		|	ПлатежнаяВедомость.Организация.Префикс КАК Префикс,
		|	ПлатежнаяВедомость.ВалютаДокумента,
		|	ПлатежнаяВедомость.Организация.НаименованиеПолное,
		|	ПлатежнаяВедомость.Организация,
		|	ПлатежнаяВедомость.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
		|	ПлатежнаяВедомость.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
		|	ПлатежнаяВедомость.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера
		|ИЗ
		|	Документ.ПлатежнаяВедомость КАК ПлатежнаяВедомость
		|ГДЕ
		|	ПлатежнаяВедомость.Ссылка = &ТекущийДокумент";
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",   ТекущийДокумент);
		Запрос.УстановитьПараметр("ПериодРегистрации", КонецМесяца(ТекущийДокумент.ПериодРегистрации));
		Запрос.УстановитьПараметр("ОсновноеМестоРаботы", НСтр("ru = 'Осн.'")); // АПК:1036
		Запрос.УстановитьПараметр("Совместительство", НСтр("ru = 'Совм.'")); // АПК:1036
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПлатежнаяВедомостьСотрудники.Сотрудник.Код КАК ТабельныйНомер,
		|	ВЫБОР
		|		КОГДА ПлатежнаяВедомостьСотрудники.Сотрудник.ТипЗанятости = ЗНАЧЕНИЕ(Перечисление.ТипыЗанятости.ОсновноеМестоРаботы)
		|			ТОГДА &ОсновноеМестоРаботы
		|		ИНАЧЕ &Совместительство
		|	КОНЕЦ КАК ХарактерРаботы,
		|	СУММА(ПлатежнаяВедомостьСотрудники.СуммаПлатежа) КАК Сумма,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ФИОФизЛицСрезПоследних.Период,
		|	ПлатежнаяВедомостьСотрудники.Сотрудник КАК Физлицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") <> """"
		|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
		|		ИНАЧЕ ПлатежнаяВедомостьСотрудники.Сотрудник.Наименование
		|	КОНЕЦ КАК СотрудникПредставление
		|ИЗ
		|	Документ.ПлатежнаяВедомость.Сотрудники КАК ПлатежнаяВедомостьСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ПериодРегистрации, ) КАК ФИОФизЛицСрезПоследних
		|		ПО ПлатежнаяВедомостьСотрудники.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	ПлатежнаяВедомостьСотрудники.Ссылка = &ТекущийДокумент
		|
		|СГРУППИРОВАТЬ ПО
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ВЫБОР
		|		КОГДА ПлатежнаяВедомостьСотрудники.Сотрудник.ТипЗанятости = ЗНАЧЕНИЕ(Перечисление.ТипыЗанятости.ОсновноеМестоРаботы)
		|			ТОГДА &ОсновноеМестоРаботы
		|		ИНАЧЕ &Совместительство
		|	КОНЕЦ,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ПлатежнаяВедомостьСотрудники.Сотрудник,
		|	ФИОФизЛицСрезПоследних.Период,
		|	ПлатежнаяВедомостьСотрудники.Сотрудник.Код,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") <> """"
		|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
		|		ИНАЧЕ ПлатежнаяВедомостьСотрудники.Сотрудник.Наименование
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникПредставление";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбластьШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьШапка          = Макет.ПолучитьОбласть("Шапка");
		ОбластьДетали         = Макет.ПолучитьОбласть("Детали");
		ОбластьПодвал         = Макет.ПолучитьОбласть("Подвал");
		
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
		
		ОбластьШапкаДокумента.Параметры.НазваниеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		ОбластьШапкаДокумента.Параметры.Подразделение = Шапка.СтруктурнаяЕдиница;
		ОбластьШапкаДокумента.Параметры.СуммаДокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ТекущийДокумент.Сотрудники.Итог("СуммаПлатежа"), Шапка.ВалютаДокумента);
		ОбластьШапкаДокумента.Параметры.СуммаДок = ТекущийДокумент.Сотрудники.Итог("СуммаПлатежа");
		ОбластьШапкаДокумента.Параметры.Валюта = Шапка.ВалютаДокумента;
		ОбластьШапкаДокумента.Параметры.НомерДок = НомерДокумента;
		ОбластьШапкаДокумента.Параметры.ДатаДок = Шапка.ДатаДокумента;
		ОбластьШапкаДокумента.Параметры.ОтчетныйПериодС = Шапка.ПериодРегистрации;
		ОбластьШапкаДокумента.Параметры.ОтчетныйПериодПо = КонецМесяца(Шапка.ПериодРегистрации);
		ОбластьШапкаДокумента.Параметры.ДолжностьРуководителя = Шапка.ДолжностьРуководителя;
		ОбластьШапкаДокумента.Параметры.РасшифровкаПодписиРуководителя = Шапка.РасшифровкаПодписиРуководителя;
		ОбластьШапкаДокумента.Параметры.РасшифровкаПодписиГлавногоБухгалтера = Шапка.РасшифровкаПодписиГлавногоБухгалтера;
		ТабличныйДокумент.Вывести(ОбластьШапкаДокумента);
		
		ОбластьШапка.Параметры.НадписьСумма = "Сумма, " + (Шапка.ВалютаДокумента);
		ТабличныйДокумент.Вывести(ОбластьШапка);
			
		НПП = 0;
		Пока Выборка.Следующий() Цикл
			НПП = НПП + 1;
			ОбластьДетали.Параметры.НомерСтроки = НПП;
			ОбластьДетали.Параметры.Заполнить(Выборка);
			Если ЗначениеЗаполнено(Выборка.Фамилия) Тогда
				ФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Выборка);
				ОбластьДетали.Параметры.ФизЛицо = ?(ЗначениеЗаполнено(ФИО), ФИО, Выборка.Физлицо);
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьДетали);
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПлатежнаяВедомость");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежнаяВедомость_ПлатежнаяВедомость";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ПлатежнаяВедомость.ПФ_MXL_ПлатежнаяВедомость";
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Платежная ведомость'");
		
		СформироватьПлатежнаяВедомость(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры // Печать()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлатежнаяВедомость";
	КомандаПечати.Представление = НСтр("ru = 'Платежная ведомость'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
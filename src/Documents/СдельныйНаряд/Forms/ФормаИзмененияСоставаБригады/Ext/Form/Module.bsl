
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Идентификатор", Идентификатор)
		ИЛИ НЕ Параметры.Свойство("КлючСвязи", КлючСвязи)
		ИЛИ НЕ Параметры.Свойство("ПоложениеСтруктурнойЕдиницы", ПоложениеСтруктурнойЕдиницы)
		ИЛИ НЕ Параметры.Свойство("Бригада", Бригада) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Параметры.Свойство("Дата", Дата);
	
	СоставБригады.Очистить();
	Если Параметры.Свойство("СоставБригады") Тогда
		Для каждого ОписаниеСостава Из Параметры.СоставБригады Цикл
			ЗаполнитьЗначенияСвойств(СоставБригады.Добавить(), ОписаниеСостава);
		КонецЦикла; 
	КонецЕсли;
	
	Если ПоложениеСтруктурнойЕдиницы=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоставБригадыСтруктурнаяЕдиница", "Видимость", Ложь);
	КонецЕсли;
	
	Если Параметры.Свойство("СкрытьТабельныйНомер") И Параметры.СкрытьТабельныйНомер=Истина Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоставБригадыСотрудникКод", "Видимость", Ложь);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СоставБригадыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.СоставБригады.ТекущиеДанные.КТУ = 1;
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставБригадыСотрудникПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.СоставБригады.ТекущиеДанные;
	Если Элементы.СоставБригадыСтруктурнаяЕдиница.Видимость Тогда
		ТекущаяСтрока.СтруктурнаяЕдиница = ПодразделениеСотрудника(Организация, ТекущаяСтрока.Сотрудник, Дата);
	КонецЕсли; 	
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСоставБригады(Команда)
	
	ЗаполнитьСоставБригадыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("Событие", "ИзмененСоставБригады");
	ПараметрыЗакрытия.Вставить("КлючСвязи", КлючСвязи);
	ПараметрыЗакрытия.Вставить("Идентификатор", Идентификатор);
	ПараметрыЗакрытия.Вставить("СоставБригады", Новый Массив);
	
	Для каждого СтрокаТабличнойЧасти Из СоставБригады Цикл
		ОписаниеСтроки = Новый Структура("Сотрудник, КТУ, СтруктурнаяЕдиница");
		ЗаполнитьЗначенияСвойств(ОписаниеСтроки, СтрокаТабличнойЧасти);
		ПараметрыЗакрытия.СоставБригады.Добавить(ОписаниеСтроки);
	КонецЦикла;
	
	ОповеститьОВыборе(ПараметрыЗакрытия);		
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСоставБригадыСервер() Экспорт

	СоставБригады.Очистить();
	ТаблицаСостава = Справочники.Бригады.СоставБригады(Бригада, Организация, Дата);
	
	Для каждого СтрокаТабличнойЧасти Из ТаблицаСостава Цикл
		НоваяСтрока = СоставБригады.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.КТУ = 1;
		Если ПоложениеСтруктурнойЕдиницы=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			НоваяСтрока.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодразделениеСотрудника(Организация, Сотрудник, Дата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ПериодСреза", ?(ЗначениеЗаполнено(Дата), Дата, КонецДня(ТекущаяДатаСеанса())));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	ЕСТЬNULL(СотрудникиСрезПоследних.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК СтруктурнаяЕдиница
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Сотрудники.СрезПоследних(&ПериодСреза, Организация = &Организация) КАК СотрудникиСрезПоследних
	|		ПО (СотрудникиСрезПоследних.Сотрудник = Сотрудники.Ссылка)
	|ГДЕ
	|	Сотрудники.Ссылка = &Сотрудник";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СтруктурнаяЕдиница;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли; 
	
КонецФункции

#КонецОбласти
 
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И (ЗначениеРазрешено(СтруктурнаяЕдиница)
	|	ИЛИ ЗначениеРазрешено(СтруктурнаяЕдиницаПолучатель))";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#Область ЗагрузкаДанныхИзВнешнегоИсточника

// Для группы полей действует правило: хотя бы одно поле в группе должно быть выбрано в колонках
//
// Параметры:
//   ТаблицаПолейЗагрузки - таблица значений, которая будет наполнена колонками
//   НастройкиЗагрузкиДанных - структура настроек загрузки
//
Процедура ПоляЗагрузкиДанныхИзВнешнегоИсточника(ТаблицаПолейЗагрузки, НастройкиЗагрузкиДанных) Экспорт
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	ОписаниеТиповСтрока11 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(11));
	ОписаниеТиповСтрока25 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(25));
	ОписаниеТиповСтрока30 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(30));
	ОписаниеТиповСтрока50 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50));
	ОписаниеТиповСтрока100 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(100));
	ОписаниеТиповСтрока110 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(110));
	ОписаниеТиповСтрока150 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(150));
	ОписаниеТиповСтрока200 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(200));
	ОписаниеТиповСтрока1000 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(1000));
	ОписаниеТиповЧисло15_2 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(15, 2,
		ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповЧисло15_3 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(15, 3,
		ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	ЭтоЗапасы = (ПолноеИмяОбъектаЗаполнения = "Документ.ПеремещениеЗапасов.ТабличнаяЧасть.Запасы");
			
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ОбязательноеЗаполнениеГруппыНоменклатуры = Не ПолучитьФункциональнуюОпцию("УчетНоменклатурыПоставщиков");
	
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "Штрихкод",
		НСтр("ru = 'Штрихкод'"), ОписаниеТиповСтрока200, ОписаниеТиповКолонка, "Номенклатура",
		1, , ОбязательноеЗаполнениеГруппыНоменклатуры, ЭтоЗапасы);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "Артикул",
		НСтр("ru = 'Артикул'"), ОписаниеТиповСтрока25, ОписаниеТиповКолонка, "Номенклатура",
		2, , ОбязательноеЗаполнениеГруппыНоменклатуры);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "НоменклатураНаименование",
		НСтр("ru = 'Номенклатура (наименование)'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка, "Номенклатура",
		3, , ОбязательноеЗаполнениеГруппыНоменклатуры);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "НоменклатураНаименованиеПолное",
		НСтр("ru = 'Номенклатура (полное наименование)'"), ОписаниеТиповСтрока1000, ОписаниеТиповКолонка, "Номенклатура",
		5, , ОбязательноеЗаполнениеГруппыНоменклатуры);
		
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "РодительКод",
		НСтр("ru = 'Код'", ОбщегоНазначения.КодОсновногоЯзыка()), 			ОписаниеТиповСтрока11, ОписаниеТиповКолонка, "Родитель", 1);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "РодительНаименование", 
		НСтр("ru = 'Группа (наименование)'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка, "Родитель", 2);	

	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
			ТаблицаПолейЗагрузки, "ХарактеристикаНаименование", 
			НСтр("ru = 'Характеристика (наименование)'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ОписаниеТиповСтрока150, ОписаниеТиповКолонка, "Характеристика", 1);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
			ТаблицаПолейЗагрузки, "ХарактеристикаАртикул", 
			НСтр("ru = 'Характеристика (артикул)'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ОписаниеТиповСтрока25, ОписаниеТиповКолонка, "Характеристика", 2);
		
	КонецЕсли;
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("ПланСчетовСсылка.Управленческий");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СчетУчетаДоходов", 
		НСтр("ru = 'Счет учета доходов'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка,,,,, Ложь);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СчетУчетаЗапасов", 
		НСтр("ru = 'Счет учета запасов'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка,,,,, Ложь);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СчетУчетаЗатрат", 
		НСтр("ru = 'Счет учета затрат'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка,,,,, Ложь);
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "НаправлениеДеятельности",
		НСтр("ru = 'Направление деятельности'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("ПеречислениеСсылка.МетодОценкиЗапасов");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "МетодОценки",
		НСтр("ru = 'Способ списания'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПополненияЗапасов");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СпособПополнения",
		НСтр("ru = 'Способ пополнения'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);

	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Картинка", 
		НСтр("ru = 'Картинка'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока1000, ОписаниеТиповСтрока1000,,,,,Ложь);
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.КатегорииНоменклатуры");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "КатегорияНоменклатуры", 
		НСтр("ru = 'Категория номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);   
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии") Тогда
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Партия",
			НСтр("ru = 'Партия (наименование)'"), ОписаниеТиповСтрока150, ОписаниеТиповКолонка);
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("Булево");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ИспользоватьСерииНоменклатуры", 
			НСтр("ru = 'Использовать Серии номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока25, ОписаниеТиповКолонка);
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Серия",
			НСтр("ru = 'Серийный номер'"), ОписаниеТиповСтрока1000, ОписаниеТиповКолонка);
		
	КонецЕсли;
	
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Количество", НСтр("ru = 'Количество'"),
		ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_3, , , Истина);

	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения, СправочникСсылка.ЕдиницыИзмерения");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ЕдиницаИзмерения",
		НСтр("ru = 'Ед. изм.'"), ОписаниеТиповСтрока25, ОписаниеТиповКолонка, , , , ,
		ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения"));
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СтавкаНДС",
		НСтр("ru = 'Ставка НДС'"), ОписаниеТиповСтрока50, ОписаниеТиповКолонка);

	Если НастройкиЗагрузкиДанных.Свойство("ЕстьРозничныйСуммовойУчет") И НастройкиЗагрузкиДанных.ЕстьРозничныйСуммовойУчет Тогда		
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Сумма", НСтр("ru = 'Сумма'"),
			ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_2, , , Ложь);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Себестоимость", НСтр("ru = 'Себестоимость'"),
			ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_2, , , Ложь);
	КонецЕсли;   		
	
	Если (НастройкиЗагрузкиДанных.Свойство("ИспользуетсяРезервирование") 
		И НастройкиЗагрузкиДанных.Свойство("ЕстьРозничноеПеремещение"))
		И (НастройкиЗагрузкиДанных.ИспользуетсяРезервирование 
		И НЕ НастройкиЗагрузкиДанных.ЕстьРозничноеПеремещение) Тогда
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));		
		ОписаниеТиповКолонка = Новый ОписаниеТипов(МассивТипов);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ЗаказПокупателя",
			НСтр("ru = 'Заказ покупателя'"), ОписаниеТиповСтрока50, ОписаниеТиповКолонка);

	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("УчетГТД") 
		И (НастройкиЗагрузкиДанных.Свойство("ВидОперации") 
		И НастройкиЗагрузкиДанных.ВидОперации <> Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение) Тогда

		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.СтраныМира");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СтранаПроисхождения",
			НСтр("ru = 'Страна происхождения'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);

		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.НомераГТД");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "НомерГТД",
			НСтр("ru = 'Номер ГТД'"), ОписаниеТиповСтрока30, ОписаниеТиповКолонка);

	КонецЕсли;
	
КонецПроцедуры

// Добавляет в структуру НастройкиЗагрузкиДанных адреса макетов-образцов загрузки данных
//
// Параметры:
//   НастройкиЗагрузкиДанных - структура настроек загрузки
//   УникальныйИдентификатор - уникальный идентификатор формы
//
Процедура ПриОпределенииОбразцовЗагрузкиДанных(НастройкиЗагрузкиДанных, УникальныйИдентификатор) Экспорт
	
	Образец_xlsx = ПолучитьМакет("ОбразецЗагрузкиДанных_xlsx");
	ОбразецЗагрузкиДанных_xlsx = ПоместитьВоВременноеХранилище(Образец_xlsx, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_xlsx", ОбразецЗагрузкиДанных_xlsx);
	
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_mxl", "ОбразецЗагрузкиДанных_mxl");
	
	Образец_csv = ПолучитьМакет("ОбразецЗагрузкиДанных_csv");
	ОбразецЗагрузкиДанных_csv = ПоместитьВоВременноеХранилище(Образец_csv, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_csv", ОбразецЗагрузкиДанных_csv);
	
КонецПроцедуры

// Сопоставляет загружаемые данные из внешнего источника с данными в базе
//
// Параметры:
//   ПараметрыСопоставления - структура, параметры сопоставления загружаемых данных
//   АдресРезультата - адрес, куда будет помещена таблица сопоставления данных
//
Процедура СопоставитьЗагружаемыеДанныеИзВнешнегоИсточника(ПараметрыСопоставления, АдресРезультата) Экспорт
	
	ТаблицаСопоставленияДанных	= ПараметрыСопоставления.ТаблицаСопоставленияДанных;
	РазмерТаблицыДанных			= ТаблицаСопоставленияДанных.Количество();
	НастройкиЗагрузкиДанных		= ПараметрыСопоставления.НастройкиЗагрузкиДанных;
	НастройкиПоиска				= НастройкиЗагрузкиДанных.НастройкиПоиска;
	ЕстьРозничноеПеремещение	= НастройкиЗагрузкиДанных.ЕстьРозничноеПеремещение;
	ИспользуетсяРезервирование	= НастройкиЗагрузкиДанных.ИспользуетсяРезервирование;
	ЕстьРозничныйСуммовойУчет	= НастройкиЗагрузкиДанных.ЕстьРозничныйСуммовойУчет;  	
	ПолноеИмяОбъектаЗаполнения	= НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;

	ТаблицаДублирующихСтрок = ЗагрузкаДанныхИзВнешнегоИсточника.ПустаяТаблицаДублирующихСтрокНоменклатуры();
	НастройкиПоиска.Вставить("ТаблицаДублирующихСтрок", ТаблицаДублирующихСтрок);

	// ТаблицаСопоставленияДанных - Тип ДанныеФормыКоллекция
	Для каждого СтрокаТаблицыФормы Из ТаблицаСопоставленияДанных Цикл
		
		НоменклатураСопоставлена = Ложь;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "НоменклатураПоставщиков") 
			И (ЗначениеЗаполнено(СтрокаТаблицыФормы.АртикулПоставщика)
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицыФормы.Идентификатор)
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураПоставщиковНаименование)) Тогда
		
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНоменклатуруПоставщиков(СтрокаТаблицыФормы, НастройкиЗагрузкиДанных);	
			НоменклатураСопоставлена = ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураПоставщиков);
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "КатегорияНоменклатуры_ВходящиеДанные")
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "КатегорияНоменклатуры") Тогда
		
			ЗначениеПоУмолчанию = Справочники.КатегорииНоменклатуры.БезКатегории;					
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьКатегориюНоменклатуры(СтрокаТаблицыФормы.КатегорияНоменклатуры, СтрокаТаблицыФормы.КатегорияНоменклатуры_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		Если НЕ НоменклатураСопоставлена Тогда
		
			// Номенклатура по ШтрихКоду, Артикулу, Наименованию, НаименованиеПолное
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНоменклатуру(СтрокаТаблицыФормы, НастройкиПоиска);
		
		КонецЕсли; 
		
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "Родитель")
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "РодительНаименование")
			И ЗначениеЗаполнено(СтрокаТаблицыФормы.РодительНаименование) Тогда
			
			ЗначениеПоУмолчанию = Справочники.Номенклатура.ПустаяСсылка();
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьРодителяНоменклатуры(СтрокаТаблицыФормы.Родитель, "", СтрокаТаблицыФормы.РодительНаименование, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		СтрокаТаблицыФормы.СчетУчетаЗапасов = ПланыСчетов.Управленческий.СырьеИМатериалы;
		СтрокаТаблицыФормы.СчетУчетаЗатрат = ?(ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуПроизводство"), 
			ПланыСчетов.Управленческий.НезавершенноеПроизводство, ПланыСчетов.Управленческий.КоммерческиеРасходы);
		СтрокаТаблицыФормы.СчетУчетаДоходов = ?(СтрокаТаблицыФормы.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"), 
			ПланыСчетов.Управленческий.ПрочиеДоходы, ПланыСчетов.Управленческий.ПустаяСсылка());
			
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "НаправлениеДеятельности") Тогда
				
			ЗначениеПоУмолчанию = Справочники.НаправленияДеятельности.Прочее;
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНаправлениеДеятельности(СтрокаТаблицыФормы.НаправлениеДеятельности, СтрокаТаблицыФормы.НаправлениеДеятельности_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "МетодОценки") Тогда
				
			ЗначениеПоУмолчанию = Перечисления.МетодОценкиЗапасов.ПоСредней;
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьМетодОценки(СтрокаТаблицыФормы.МетодОценки, СтрокаТаблицыФормы.МетодОценки_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "СпособПополнения") Тогда
				
			ЗначениеПоУмолчанию = Перечисления.СпособыПополненияЗапасов.Закупка;
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСпособПополнения(СтрокаТаблицыФормы.СпособПополнения, СтрокаТаблицыФормы.СпособПополнения_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
			
		Если СтрокаТаблицыФормы.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
			
			СтрокаТаблицыФормы.Номенклатура = Неопределено;
			
		КонецЕсли;
		
		Если НЕ НоменклатураСопоставлена И ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") И ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
			
			// Характеристика по Владельцу и Наименованию
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьХарактеристику(СтрокаТаблицыФормы);
			
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии") Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
				
				// Партия по Владельцу и Наименованию
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьПартию(СтрокаТаблицыФормы.Партия, СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.Штрихкод, СтрокаТаблицыФормы.Партия_ВходящиеДанные);
				
			КонецЕсли;
			
		КонецЕсли;
			
		// Количество
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.Количество, СтрокаТаблицыФормы.Количество_ВходящиеДанные, 1);
		
		// ЕдиницыИзмерения по Наименованию (так же рассмотреть возможность прикрутить пользовательские ЕИ)
		ЗначениеПоУмолчанию = ?(ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура), СтрокаТаблицыФормы.Номенклатура.ЕдиницаИзмерения, Справочники.КлассификаторЕдиницИзмерения.шт);
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьЕдиницыИзмерения(СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.ЕдиницаИзмерения, СтрокаТаблицыФормы.ЕдиницаИзмерения_ВходящиеДанные, ЗначениеПоУмолчанию);
		
		// Сумма
		Если ЕстьРозничныйСуммовойУчет Тогда			
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.Сумма, СтрокаТаблицыФормы.Сумма_ВходящиеДанные, 0);
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.Себестоимость, СтрокаТаблицыФормы.Себестоимость_ВходящиеДанные, 0);
		КонецЕсли;		
		
		// Заказ по номеру, дате, признаку   				
		Если ИспользуетсяРезервирование И НЕ ЕстьРозничноеПеремещение Тогда
			ДопустимыеТипыЗаказа = Документы.ПеремещениеЗапасов.ДопустимыеТипыЗаказа(НастройкиЗагрузкиДанных.ВидОперации);
			Если ДопустимыеТипыЗаказа.СодержитТип(Тип("ДокументСсылка.ЗаказПокупателя")) Тогда
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьЗаказ(СтрокаТаблицыФормы.ЗаказПокупателя, СтрокаТаблицыФормы.ЗаказПокупателя_ВходящиеДанные);					
			КонецЕсли;
		КонецЕсли;		
		
		// Страна и ГТД
		Если ПолучитьФункциональнуюОпцию("УчетГТД")
			И (НастройкиЗагрузкиДанных.Свойство("ВидОперации") 
			И НастройкиЗагрузкиДанных.ВидОперации <> Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение) Тогда
			
			ЗначениеПоУмолчанию = Неопределено;
			Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
				
				ЗначениеПоУмолчанию = СтрокаТаблицыФормы.Номенклатура.СтранаПроисхождения;
				
			КонецЕсли;
			
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСтрануПроисхождения(СтрокаТаблицыФормы.СтранаПроисхождения, СтрокаТаблицыФормы.СтранаПроисхождения_ВходящиеДанные, ЗначениеПоУмолчанию);
			
			Если ЗначениеЗаполнено(СтрокаТаблицыФормы.СтранаПроисхождения)
				И СтрокаТаблицыФормы.СтранаПроисхождения <> Справочники.СтраныМира.Россия Тогда
				
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНомерГТД(СтрокаТаблицыФормы.НомерГТД, СтрокаТаблицыФормы.НомерГТД_ВходящиеДанные);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Серии номенклатуры
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) 
				И  ЗначениеЗаполнено(СтрокаТаблицыФормы.Серия_ВходящиеДанные) Тогда
				
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСерия(СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.Серия, СтрокаТаблицыФормы.Серия_ВходящиеДанные);
				
			КонецЕсли;
			
		КонецЕсли; 
		
		ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения);
		
		ЗагрузкаДанныхИзВнешнегоИсточника.ПрогрессСопоставленияДанных(ТаблицаСопоставленияДанных.Индекс(СтрокаТаблицыФормы), РазмерТаблицыДанных);
		
	КонецЦикла;
	
	ТаблицаСопоставленияДанных.ЗагрузитьКолонку(ТаблицаДублирующихСтрок.ВыгрузитьКолонку("КлючСвязи"), "_КлючСвязи");
	ПоместитьВоВременноеХранилище(ТаблицаСопоставленияДанных, АдресРезультата);
	
КонецПроцедуры

// Проверяет корректность данных в строке табличной части "Запасы"
//
// Параметры:
//   СтрокаТаблицыФормы - строка таблицы формы для проверки заполнения
//   ПолноеИмяОбъектаЗаполнения - строка, полное имя объекта для заполнения
//
Процедура ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения = "") Экспорт

	ИмяСлужебногоПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяСлужебногоПоляЗагрузкаВПриложениеВозможна();
	
	НоменклатураЗаполнена = ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура);
	ЗагрузкаНоменклатурыВозможна = Ложь;
	Если НЕ НоменклатураЗаполнена Тогда
		ЗагрузкаНоменклатурыВозможна = (ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураНаименование) 
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураНаименованиеПолное));
	КонецЕсли;

	Если ПолноеИмяОбъектаЗаполнения = "Документ.ПеремещениеЗапасов.ТабличнаяЧасть.Запасы" Тогда
		
		Если НоменклатураЗаполнена Тогда

			СтрокаТаблицыФормы[ИмяСлужебногоПоля] = СтрокаТаблицыФормы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас
				И Не СтрокаТаблицыФормы.Номенклатура.ЭтоНабор // Исключая наборы
				И СтрокаТаблицыФормы.Количество <> 0;
			СтрокаТаблицыФормы._СтрокаСопоставлена = НоменклатураЗаполнена;

		Иначе
			
			СтрокаТаблицыФормы[ИмяСлужебногоПоля] = ЗагрузкаНоменклатурыВозможна;
		
		КонецЕсли;				
	
	КонецЕсли;

КонецПроцедуры

// Возвращает массив с типами доступными для поля Заказ
//
// Параметры:
//   ВидОперации - вид операции документа Перемещение запасов
//
// Возвращаемое значение:
//   Массив - массив, содержащий типы документов для поля Заказ
//
Функция ДопустимыеТипыЗаказа(ВидОперации) Экспорт
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивОтбора);

	Возврат ДопустимыеТипы;
	
КонецФункции

#КонецОбласти

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Проведение

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.ВидОперации КАК ВидОперации,
	|	ТаблицаЗапасы.ВалютаЦеныПолучатель КАК ВалютаЦеныПолучатель,
	|	ТаблицаЗапасы.ТипСчетаЗатрат КАК ТипСчетаЗатрат,
	|	ТаблицаЗапасы.КоррНаправлениеДеятельности КАК КоррНаправлениеДеятельности,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СценарийПланирования КАК СценарийПланирования,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.КоррПартия КАК КоррПартия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаЗапасы.КоррЗаказПокупателя КАК КоррЗаказПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПродажи,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПродажи,
	|	ТаблицаЗапасы.КоррСчетУчета КАК СчетДт,
	|	ТаблицаЗапасы.СчетУчета КАК СчетКт,
	|	ТаблицаЗапасы.ПеремещениеВРозницу КАК ПеремещениеВРозницу,
	|	ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет КАК ПеремещениеВРозницуСуммовойУчет,
	|	ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет КАК ВозвратИзРозницыСуммовойУчет,
	|	ТаблицаЗапасы.СчетУчетаВРознице КАК СчетУчетаВРознице,
	|	ТаблицаЗапасы.СчетУчетаНаценки КАК СчетУчетаНаценки,
	|	ТаблицаЗапасы.СчетУчетаВРозницеПолучатель КАК СчетУчетаВРозницеПолучатель,
	|	ТаблицаЗапасы.СчетУчетаНаценкиПолучатель КАК СчетУчетаНаценкиПолучатель,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК Содержание,
	|	ТаблицаЗапасы.СодержаниеПроводки КАК СодержаниеПроводки,
	|	ТаблицаЗапасы.Проект КАК Проект,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаЗапасы.Количество
	|			ИНАЧЕ ТаблицаЗапасы.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаЗапасы.Резерв
	|			ИНАЧЕ ТаблицаЗапасы.Резерв
	|		КОНЕЦ) КАК Резерв,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаЗапасы.Себестоимость
	|			ИНАЧЕ ТаблицаЗапасы.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	ЛОЖЬ КАК ФиксированнаяСтоимость
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	(НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.ВидОперации,
	|	ТаблицаЗапасы.ВалютаЦеныПолучатель,
	|	ТаблицаЗапасы.ТипСчетаЗатрат,
	|	ТаблицаЗапасы.КоррНаправлениеДеятельности,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СценарийПланирования,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.СчетУчетаВРозницеПолучатель,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррПартия,
	|	ТаблицаЗапасы.ЗаказПокупателя,
	|	ТаблицаЗапасы.КоррЗаказПокупателя,
	|	ТаблицаЗапасы.СодержаниеПроводки,
	|	ТаблицаЗапасы.СчетУчетаНаценкиПолучатель,
	|	ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет,
	|	ТаблицаЗапасы.ПеремещениеВРозницу,
	|	ТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет,
	|	ТаблицаЗапасы.СчетУчетаВРознице,
	|	ТаблицаЗапасы.СчетУчетаНаценки,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.СодержаниеПроводки,
	|	ТаблицаЗапасы.Проект";
	
	РезультатЗапроса = Запрос.Выполнить();

	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", РезультатЗапроса.Выгрузить());
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаЗапасы.Организация КАК Организация,
	|		ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|		ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|		ТаблицаЗапасы.Характеристика КАК Характеристика,
	|		ТаблицаЗапасы.Партия КАК Партия,
	|		ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|	ГДЕ
	|		ТаблицаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаЗапасы.Организация,
	|		ТаблицаЗапасы.СтруктурнаяЕдиница,
	|		ТаблицаЗапасы.СчетУчета,
	|		ТаблицаЗапасы.Номенклатура,
	|		ТаблицаЗапасы.Характеристика,
	|		ТаблицаЗапасы.Партия,
	|		ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|	ГДЕ
	|		(НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)) КАК ТаблицаЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|		СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ТаблицаЗапасы.ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|					ГДЕ
	|						ТаблицаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))) КАК ЗапасыОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя,
	|		СУММА(ЗапасыОстатки.КоличествоОстаток),
	|		СУММА(ЗапасыОстатки.СуммаОстаток)
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапасыОстатки.Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета,
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &ПериодКонтроля) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя";	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	ТаблицаЗапасыОстатки.Индексы.Добавить("Организация,СтруктурнаяЕдиница,СчетУчета,Номенклатура,Характеристика,Партия,ЗаказПокупателя");
	
	ВременнаяТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.СкопироватьКолонки();
	
	ПустаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	ПустойСчетУчета = ПланыСчетов.Управленческий.ПустаяСсылка();
	ПустаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
	ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ПустаяПартия = Справочники.ПартииНоменклатуры.ПустаяСсылка();
	ПустойЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();
	
	ПеремещениеВРозницуСуммовойУчет = Ложь;
	ВозвратИзРозницыСуммовойУчет = Ложь;
	
	Для Каждого СтрокаТаблицаЗапасы Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы Цикл
		
		Если СтрокаТаблицаЗапасы.ВозвратИзРозницыСуммовойУчет Тогда
			ВозвратИзРозницыСуммовойУчет = Истина;			
			
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			СтрокаТаблицыРасход.СтруктурнаяЕдиница = СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница;
			СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = Неопределено;
			СтрокаТаблицыРасход.КоррСчетУчета = Неопределено;
			СтрокаТаблицыРасход.КоррНоменклатура = Неопределено;
			СтрокаТаблицыРасход.КоррХарактеристика = Неопределено;
			СтрокаТаблицыРасход.КоррПартия = Неопределено;
			СтрокаТаблицыРасход.КоррЗаказПокупателя = Неопределено;
			СтрокаТаблицыРасход.ФиксированнаяСтоимость = Истина;

			СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
			СтрокаТаблицаУправленческий.Сумма = СтрокаТаблицаЗапасы.Сумма;
			СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетУчетаВРознице;
			
			Продолжить;
		КонецЕсли;
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицаЗапасы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицаЗапасы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицаЗапасы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицаЗапасы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицаЗапасы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицаЗапасы.Партия);
		
		КоличествоТребуетсяРезерв = СтрокаТаблицаЗапасы.Резерв;
		КоличествоТребуетсяСвободныйОстаток = СтрокаТаблицаЗапасы.Количество;
		
		Если КоличествоТребуетсяРезерв > 0 Тогда
			
			КоличествоТребуетсяСвободныйОстаток = КоличествоТребуетсяСвободныйОстаток - КоличествоТребуетсяРезерв;
			
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", СтрокаТаблицаЗапасы.ЗаказПокупателя);
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяРезерв Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяРезерв / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяРезерв;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяРезерв Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				СуммаКСписанию = 0;	
			КонецЕсли;
	
			// Расход.
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяРезерв;
			
			Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы
			 ИЛИ СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ДокументПродажи = ДокументСсылкаПеремещениеЗапасов;
				СтрокаТаблицыРасход.ЗаказПродажи = СтрокаТаблицаЗапасы.ЗаказПокупателя;
				
			Иначе
				
				Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   И СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
				   СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				ИначеЕсли НЕ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   	    И НЕ СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				КонецЕсли;
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
					СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
					СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
					СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ФиксированнаяСтоимость = Истина;
				
			КонецЕсли;
			
			// Сформируем проводки.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.Сумма = СуммаКСписанию;
				
				Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
					СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетУчетаВРозницеПолучатель;
				КонецЕсли;
																
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицаСуммовойУчетВРознице = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаСуммовойУчетВРознице, СтрокаТаблицаЗапасы);
				СтрокаТаблицаСуммовойУчетВРознице.Себестоимость = СуммаКСписанию;
				СтрокаТаблицаСуммовойУчетВРознице.ВидДвижения = ВидДвиженияНакопления.Приход;
				СтрокаТаблицаСуммовойУчетВРознице.Валюта = СтрокаТаблицаЗапасы.ВалютаЦеныПолучатель;
				СтрокаТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
				СтрокаТаблицаСуммовойУчетВРознице.Организация = СтрокаТаблицаЗапасы.Организация;
				СтрокаТаблицаСуммовойУчетВРознице.Сумма = 0;
				СтрокаТаблицаСуммовойУчетВРознице.СуммаВал = 0;
				
				ПеремещениеВРозницуСуммовойУчет = Истина;
							
			ИначеЕсли Окр(СуммаКСписанию, 2, 1) <> 0 ИЛИ КоличествоТребуетсяРезерв > 0 Тогда // Приход.
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы Тогда
					
					СтрокаТаблицыОборот = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыОборот, СтрокаТаблицаЗапасы);
					СтрокаТаблицыОборот.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыОборот.НаправлениеДеятельности = СтрокаТаблицаЗапасы.КоррНаправлениеДеятельности;
					СтрокаТаблицыОборот.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
					СтрокаТаблицыОборот.СуммаРасходов = СуммаКСписанию;
					СтрокаТаблицыОборот.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыОборот.Аналитика = СтрокаТаблицаЗапасы.Номенклатура;
					
				Иначе // Это затраты.
					
					СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
					
					СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
					
					СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.Организация;
					СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
					СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
					СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
					И НЕ СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;						
					ИначеЕсли СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
						СтрокаТаблицыПриход.Номенклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.Характеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.Партия = ПустаяПартия;
					Иначе
						СтрокаТаблицыПриход.ЗаказПокупателя = ПустойЗаказПокупателя;
					КонецЕсли;
					
					СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
					СтрокаТаблицыПриход.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
					СтрокаТаблицыПриход.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
					СтрокаТаблицыПриход.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
					СтрокаТаблицыПриход.КоррПартия = СтрокаТаблицаЗапасы.Партия;
					СтрокаТаблицыПриход.КоррЗаказПокупателя = СтрокаТаблицаЗапасы.ЗаказПокупателя;
					
					СтрокаТаблицыПриход.Сумма = СуммаКСписанию;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию
					 ИЛИ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы Тогда
						СтрокаТаблицыПриход.Количество = 0;
					Иначе
						СтрокаТаблицыПриход.Количество = КоличествоТребуетсяРезерв;
					КонецЕсли;
					
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
						
						СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
						СтрокаТаблицыПриход.КоррСчетУчета = ПустойСчетУчета;
						СтрокаТаблицыПриход.КоррНоменклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.КоррХарактеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.КоррПартия = ПустаяПартия;
						СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
						СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если КоличествоТребуетсяСвободныйОстаток > 0 Тогда
			
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", ПустойЗаказПокупателя);
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяСвободныйОстаток Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяСвободныйОстаток / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяСвободныйОстаток;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяСвободныйОстаток Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				СуммаКСписанию = 0;	
			КонецЕсли;
	
			// Расход.
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяСвободныйОстаток;
			СтрокаТаблицыРасход.ЗаказПокупателя = ПустойЗаказПокупателя;
			
			Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы
			 ИЛИ СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ДокументПродажи = ДокументСсылкаПеремещениеЗапасов;
				СтрокаТаблицыРасход.ЗаказПродажи = СтрокаТаблицаЗапасы.ЗаказПокупателя;
				
			Иначе
				Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   И СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
				   СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				ИначеЕсли НЕ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
				   	   И НЕ СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				КонецЕсли;
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
					СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
					СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
					СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
				
				СтрокаТаблицыРасход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
				СтрокаТаблицыРасход.КоррСчетУчета = ПустойСчетУчета;
				СтрокаТаблицыРасход.КоррНоменклатура = ПустаяНоменклатура;
				СтрокаТаблицыРасход.КоррХарактеристика = ПустаяХарактеристика;
				СтрокаТаблицыРасход.КоррПартия = ПустаяПартия;
				СтрокаТаблицыРасход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
				СтрокаТаблицыРасход.ФиксированнаяСтоимость = Истина;
				
			КонецЕсли;
			
			// Сформируем проводки.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.Сумма = СуммаКСписанию;
				
				Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
					СтрокаТаблицаУправленческий.СчетДт = СтрокаТаблицаЗапасы.СчетУчетаВРозницеПолучатель;					
				КонецЕсли;
				
			КонецЕсли;
                        			
			Если СтрокаТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет Тогда
				
				СтрокаТаблицаСуммовойУчетВРознице = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаСуммовойУчетВРознице, СтрокаТаблицаЗапасы);
				СтрокаТаблицаСуммовойУчетВРознице.ВидДвижения = ВидДвиженияНакопления.Приход;
				СтрокаТаблицаСуммовойУчетВРознице.Себестоимость = СуммаКСписанию;
				СтрокаТаблицаСуммовойУчетВРознице.Валюта = СтрокаТаблицаЗапасы.ВалютаЦеныПолучатель;
				СтрокаТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
				СтрокаТаблицаСуммовойУчетВРознице.Сумма = 0;
				СтрокаТаблицаСуммовойУчетВРознице.СуммаВал = 0;
				
				ПеремещениеВРозницуСуммовойУчет = Истина;
			
			ИначеЕсли Окр(СуммаКСписанию, 2, 1) <> 0 ИЛИ КоличествоТребуетсяСвободныйОстаток > 0 Тогда // Приход
				
				Если СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.Расходы Тогда
					
					СтрокаТаблицыОборот = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыОборот, СтрокаТаблицаЗапасы);
					СтрокаТаблицыОборот.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыОборот.НаправлениеДеятельности = СтрокаТаблицаЗапасы.КоррНаправлениеДеятельности;
					СтрокаТаблицыОборот.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
					СтрокаТаблицыОборот.СуммаРасходов = СуммаКСписанию;
					СтрокаТаблицыОборот.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыОборот.Аналитика = СтрокаТаблицаЗапасы.Номенклатура;
					
				Иначе // Это затраты.
					
					СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
					
					СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
					
					СтрокаТаблицыПриход.Организация = СтрокаТаблицаЗапасы.Организация;
					СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					СтрокаТаблицыПриход.Номенклатура = СтрокаТаблицаЗапасы.КоррНоменклатура;
					СтрокаТаблицыПриход.Характеристика = СтрокаТаблицаЗапасы.КоррХарактеристика;
					СтрокаТаблицыПриход.Партия = СтрокаТаблицаЗапасы.КоррПартия;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение
					И НЕ СтрокаТаблицаЗапасы.ПеремещениеВРозницу Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
					ИначеЕсли СтрокаТаблицаЗапасы.ТипСчетаЗатрат = Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
						СтрокаТаблицыПриход.ЗаказПокупателя = СтрокаТаблицаЗапасы.КоррЗаказПокупателя;
						СтрокаТаблицыПриход.Номенклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.Характеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.Партия = ПустаяПартия;
					Иначе
						СтрокаТаблицыПриход.ЗаказПокупателя = ПустойЗаказПокупателя;
					КонецЕсли;
					
					СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = СтрокаТаблицаЗапасы.СтруктурнаяЕдиница;
					СтрокаТаблицыПриход.КоррСчетУчета = СтрокаТаблицаЗапасы.СчетУчета;
					СтрокаТаблицыПриход.КоррНоменклатура = СтрокаТаблицаЗапасы.Номенклатура;
					СтрокаТаблицыПриход.КоррХарактеристика = СтрокаТаблицаЗапасы.Характеристика;
					СтрокаТаблицыПриход.КоррПартия = СтрокаТаблицаЗапасы.Партия;
					СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
					
					СтрокаТаблицыПриход.Сумма = СуммаКСписанию;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию
					 ИЛИ СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы Тогда
						СтрокаТаблицыПриход.Количество = 0;
					Иначе
						СтрокаТаблицыПриход.Количество = КоличествоТребуетсяСвободныйОстаток;
					КонецЕсли;
					
					СтрокаТаблицыПриход.СчетУчета = СтрокаТаблицаЗапасы.КоррСчетУчета;
					
					Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации Тогда
						
						СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
						СтрокаТаблицыПриход.КоррСчетУчета = ПустойСчетУчета;
						СтрокаТаблицыПриход.КоррНоменклатура = ПустаяНоменклатура;
						СтрокаТаблицыПриход.КоррХарактеристика = ПустаяХарактеристика;
						СтрокаТаблицыПриход.КоррПартия = ПустаяПартия;
						СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
						СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Если это передача в эксплуатацию, то передаем по нулевой стоимости, а саму стоимость относим
		// на затраты подразделения-получателя.
		Если СтрокаТаблицаЗапасы.ВидОперации = Перечисления.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию Тогда
		   
		   // Нужно добавить тогда приход только по количеству с пустой корреспонденции,
		   // для корректного учета в количественном выражении.
		   СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
		   ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
		   
		   СтрокаТаблицыПриход.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.КоррСтруктурнаяЕдиница;
		   
		   СтрокаТаблицыПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
		   
		   СтрокаТаблицыПриход.ЗаказПокупателя = ПустойЗаказПокупателя;
		  		   
		   СтрокаТаблицыПриход.КоррСтруктурнаяЕдиница = ПустаяСтруктурнаяЕдиница;
		   СтрокаТаблицыПриход.КоррСчетУчета = ПустойСчетУчета;
		   СтрокаТаблицыПриход.КоррНоменклатура = ПустаяНоменклатура;
		   СтрокаТаблицыПриход.КоррХарактеристика = ПустаяХарактеристика;
		   СтрокаТаблицыПриход.КоррПартия = ПустаяПартия;
		   СтрокаТаблицыПриход.КоррЗаказПокупателя = ПустойЗаказПокупателя;
		   
		   СтрокаТаблицыПриход.Сумма = 0;
		   СтрокаТаблицыПриход.ФиксированнаяСтоимость = Истина;
		   
		КонецЕсли;
			
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы = ВременнаяТаблицаЗапасы;
	
	// Торговая наценка в случае розницы (суммовой учет).
	Если ПеремещениеВРозницуСуммовойУчет
	 ИЛИ ВозвратИзРозницыСуммовойУчет Тогда
		
		СуммаСебестоимость = ВременнаяТаблицаЗапасы.Итог("Сумма");
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ЕСТЬNULL(ВременнаяТаблицаСуммовойУчетВРознице.Сумма, 0)) КАК Сумма
		|ИЗ
		|	ВременнаяТаблицаСуммовойУчетВРознице КАК ВременнаяТаблицаСуммовойУчетВРознице";
		
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			СуммаВПродажныхЦенах = ВыборкаРезультатаЗапроса.Сумма;			
		Иначе
			СуммаВПродажныхЦенах = 0;
		КонецЕсли;
		
		СуммаНаценка = СуммаВПродажныхЦенах - СуммаСебестоимость;
		
		Если СуммаНаценка <> 0 Тогда
			
			Если ВременнаяТаблицаЗапасы.Количество() > 0 Тогда
				СтрокаТаблицы = ВременнаяТаблицаЗапасы[0];
			ИначеЕсли СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице.Количество() > 0 Тогда
				СтрокаТаблицы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице[0];
			Иначе
				СтрокаТаблицы = Неопределено;
			КонецЕсли;
			
			Если СтрокаТаблицы <> Неопределено Тогда
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицы);
				СтрокаТаблицаУправленческий.СчетДт = ?(ПеремещениеВРозницуСуммовойУчет, СтрокаТаблицы.СчетУчетаВРозницеПолучатель, СтрокаТаблицы.СчетУчетаВРознице);
				СтрокаТаблицаУправленческий.СчетКт = ?(ПеремещениеВРозницуСуммовойУчет, СтрокаТаблицы.СчетУчетаНаценкиПолучатель, СтрокаТаблицы.СчетУчетаНаценки);
				СтрокаТаблицаУправленческий.СценарийПланирования = Справочники.СценарииПланирования.Фактический;
				СтрокаТаблицаУправленческий.Содержание = НСтр("ru='Торговая наценка'");
				СтрокаТаблицаУправленческий.Сумма = СуммаНаценка;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;		
	
КонецПроцедуры // СформироватьТаблицаЗапасов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	НЕ ТаблицаЗапасы.ОрдерныйСклад
	|	И НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррЯчейка,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.Период < ТаблицаЗапасы.ДатаОбновленияНаРелиз_1_2_1
	|	И ТаблицаЗапасы.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|	И НЕ ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет
	|	И (ТаблицаЗапасы.ТипСчетаЗатрат <> ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ИЛИ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию)
	|			ИЛИ ТаблицаЗапасы.ТипСтруктурнойЕдиницыПолучатель <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррЯчейка,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	НЕ ТаблицаЗапасы.КоррОрдерныйСклад
	|	И ТаблицаЗапасы.Период >= ТаблицаЗапасы.ДатаОбновленияНаРелиз_1_2_1
	|	И ТаблицаЗапасы.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|	И НЕ ТаблицаЗапасы.ПеремещениеВРозницуСуммовойУчет
	|	И (ТаблицаЗапасы.ТипСчетаЗатрат <> ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ИЛИ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию)
	|			ИЛИ ТаблицаЗапасы.ТипСтруктурнойЕдиницыПолучатель <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение))";
    		
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыНаСкладах()

Процедура СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки
	|	,Выбор КОГДА ТаблицаЗапасыНаСкладах.ВидОперации = Значение(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КОНЕЦ КАК ВидДвижения
	|	,ТаблицаЗапасыНаСкладах.Период КАК Период
	|	,ТаблицаЗапасыНаСкладах.Организация КАК Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия КАК Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД КАК НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения КАК СтранаПроисхождения
	|	,СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.Россия)
	|	И ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.ПустаяСсылка)
	|	И ТаблицаЗапасыНаСкладах.НомерГТД <> Значение(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА ТаблицаЗапасыНаСкладах.ВидОперации = Значение(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КОНЕЦ
	|	,ТаблицаЗапасыНаСкладах.Период
	|	,ТаблицаЗапасыНаСкладах.Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыКРасходуСоСкладов(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.ОрдерныйСклад
	|	И (НЕ ТаблицаЗапасы.ПеремещениеВРозницеСуммовойУчет)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКРасходуСоСкладов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКРасходуСоСкладов()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.КоррОрдерныйСклад = ИСТИНА
	|	И ((НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы))
	|			ИЛИ (НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|ГДЕ
	|	ТаблицаЗапасы.Период < ТаблицаЗапасы.ДатаОбновленияНаРелиз_1_2_1
	|	И ТаблицаЗапасы.КоррОрдерныйСклад = ИСТИНА
	|	И ((НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы))
	|			ИЛИ (НЕ ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ПередачаВЭксплуатацию)))";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКПоступлениюНаСклады()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка) КАК Проект,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК Аналитика,
	|	&КурсоваяРазница КАК СодержаниеПроводки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницСуммовойУчетВРознице КАК ТаблицаДокумента";
		
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСуммовойУчетВРознице(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПеремещениеВРозницу", НСтр("ru = 'Перемещение в розницу'"));
	Запрос.УстановитьПараметр("ПеремещениеВРознице", НСтр("ru = 'Перемещение в рознице'"));
	Запрос.УстановитьПараметр("ВозвратИзРозницы", НСтр("ru = 'Возврат из розницы'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Валюта КАК Валюта,
	|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВал,
	|	ТаблицаДокумента.Сумма КАК СуммаДляОстатка,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВалДляОстатка,
	|	ТаблицаДокумента.Себестоимость КАК Себестоимость,
	|	ТаблицаДокумента.СодержаниеПроводки КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаСуммовойУчетВРознице
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Период КАК Дата,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|		ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|		ТаблицаДокумента.Организация КАК Организация,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.РозничныйВидЦен
	|			ИНАЧЕ ТаблицаДокумента.РозничныйВидЦенПолучатель
	|		КОНЕЦ КАК РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|		ТаблицаДокумента.Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.СтруктурнаяЕдиница
	|			ИНАЧЕ ТаблицаДокумента.КоррСтруктурнаяЕдиница
	|		КОНЕЦ КАК СтруктурнаяЕдиница,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.ВалютаЦены
	|			ИНАЧЕ ТаблицаДокумента.ВалютаЦеныПолучатель
	|		КОНЕЦ КАК Валюта,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА ТаблицаДокумента.СчетУчетаВРознице
	|			ИНАЧЕ ТаблицаДокумента.СчетУчетаВРозницеПолучатель
	|		КОНЕЦ КАК СчетУчета,
	|		ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалютыПолучатель.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаВал,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалютыПолучатель.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммДляОстатка,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)))
	|			ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатурыПолучательСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыПолучательСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаВалДляОстатка,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА -ТаблицаДокумента.Себестоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Себестоимость,
	|		ВЫБОР
	|			КОГДА ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет
	|				ТОГДА &ВозвратИзРозницы
	|			ИНАЧЕ &ПеремещениеВРозницу
	|		КОНЕЦ КАК СодержаниеПроводки
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦенПолучатель,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыПолучательСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыПолучательСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦенПолучатель = ЦеныНоменклатурыПолучательСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыПолучательСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыУпрВалюты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалютыПолучатель
	|			ПО ТаблицаДокумента.ВалютаЦеныПолучатель = КурсыЦенВалютыПолучатель.Валюта
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалюты
	|			ПО ТаблицаДокумента.ВалютаЦены = КурсыЦенВалюты.Валюта
	|	ГДЕ
	|		(ТаблицаДокумента.ПеремещениеВРозницуСуммовойУчет
	|				ИЛИ ТаблицаДокумента.ВозвратИзРозницыСуммовойУчет)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.СтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦены,
	|		ТаблицаДокумента.СчетУчетаВРознице,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		ТаблицаДокумента.Себестоимость,
	|		&ПеремещениеВРознице
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыУпрВалюты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалюты
	|			ПО ТаблицаДокумента.ВалютаЦены = КурсыЦенВалюты.Валюта
	|	ГДЕ
	|		ТаблицаДокумента.ПеремещениеВРозницеСуммовойУчет
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.СтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦены,
	|		ТаблицаДокумента.СчетУчетаВРознице,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		ТаблицаДокумента.Себестоимость
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦенПолучатель,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.КоррСтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦеныПолучатель,
	|		ТаблицаДокумента.СчетУчетаВРозницеПолучатель,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность / (КурсыЦенВалютыПолучатель.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыЦенВалютыПолучатель.Кратность / (КурсыЦенВалютыПолучатель.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		ТаблицаДокумента.Себестоимость,
	|		&ПеремещениеВРознице
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаЗапасы.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|					&МоментВремени,
	|					Валюта В
	|						(ВЫБРАТЬ
	|							Константы.ВалютаУчета
	|						ИЗ
	|							Константы КАК Константы)) КАК КурсыУпрВалюты
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалюты
	|			ПО ТаблицаДокумента.ВалютаЦены = КурсыЦенВалюты.Валюта
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыЦенВалютыПолучатель
	|			ПО ТаблицаДокумента.ВалютаЦеныПолучатель = КурсыЦенВалютыПолучатель.Валюта
	|	ГДЕ
	|		ТаблицаДокумента.ПеремещениеВРозницеСуммовойУчет
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Период,
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаДокумента.Организация,
	|		ТаблицаДокумента.РозничныйВидЦенПолучатель,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаДокумента.КоррСтруктурнаяЕдиница,
	|		ТаблицаДокумента.ВалютаЦеныПолучатель,
	|		ТаблицаДокумента.СчетУчетаВРозницеПолучатель,
	|		ТаблицаДокумента.ЗаказПокупателя,
	|		ТаблицаДокумента.Себестоимость) КАК ТаблицаДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаСуммовойУчетВРознице.Организация КАК Организация,
	|	ВременнаяТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаСуммовойУчетВРознице.Валюта КАК Валюта
	|ИЗ
	|	ВременнаяТаблицаСуммовойУчетВРознице КАК ВременнаяТаблицаСуммовойУчетВРознице";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СуммовойУчетВРознице");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыСуммовойУчетВРознице(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммовойУчетВРознице", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	0 КАК СуммаВалДт,
	|	0 КАК СуммаВалКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ КАК Сумма,
	|	&КурсоваяРазница КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницСуммовойУчетВРознице КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеЗапасов.Дата КАК Дата,
	|	ПеремещениеЗапасов.Ссылка КАК Ссылка,
	|	ПеремещениеЗапасов.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовЗапасы.Ссылка КАК Ссылка,
	|	ПеремещениеЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ПеремещениеЗапасовЗапасы.Количество КАК Количество,
	|	ПеремещениеЗапасовЗапасы.Резерв КАК Резерв,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПеремещениеЗапасовЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПеремещениеЗапасовЗапасы.Себестоимость КАК Себестоимость,
	|	ПеремещениеЗапасовЗапасы.Сумма КАК Сумма,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПеремещениеЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПеремещениеЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	ПеремещениеЗапасовЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ПоложениеПроекта = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Проект
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Ссылка.Проект
	|	КОНЕЦ КАК Проект,
	|	NULL КАК ПолитикаУчетаСерий,
	|	ПеремещениеЗапасовЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВременнаяТаблицаДанныеДокумента
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовСпецоснастка.Ссылка,
	|	ПеремещениеЗапасовСпецоснастка.НомерСтроки,
	|	ПеремещениеЗапасовСпецоснастка.Номенклатура,
	|	ПеремещениеЗапасовСпецоснастка.Характеристика,
	|	ПеремещениеЗапасовСпецоснастка.Партия,
	|	"""",
	|	ПеремещениеЗапасовСпецоснастка.Количество,
	|	0,
	|	ПеремещениеЗапасовСпецоснастка.ЕдиницаИзмерения,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
	|	0,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	ПеремещениеЗапасовСпецоснастка.СтранаПроисхождения,
	|	ПеремещениеЗапасовСпецоснастка.НомерГТД,
	|	"""",
	|	ПеремещениеЗапасовСпецоснастка.Ссылка.Проект,
	|	ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Спецоснастка КАК ПеремещениеЗапасовСпецоснастка
	|ГДЕ
	|	ПеремещениеЗапасовСпецоснастка.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Ссылка,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.НомерСтроки,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Номенклатура,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Характеристика,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Партия,
	|	"""",
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Количество,
	|	0,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.ЕдиницаИзмерения,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
	|	0,
	|	0,
	|	НЕОПРЕДЕЛЕНО,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.СтранаПроисхождения,
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.НомерГТД,
	|	"""",
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Ссылка.Проект,
	|	ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПеремещениеЗапасов.ИнвентарьИХозяйственныеПринадлежности КАК ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности
	|ГДЕ
	|	ПеремещениеЗапасовИнвентарьИХозяйственныеПринадлежности.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ПеремещениеЗапасовЗапасы.Ссылка.Дата КАК Период,
	|	ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации КАК ВидОперации,
	|	ПеремещениеЗапасовЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницуСуммовойУчет,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницу,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратИзРозницыСуммовойУчет,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|				И ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницеСуммовойУчет,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницыПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.СчетУчетаВРознице КАК СчетУчетаВРознице,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.СчетУчетаНаценки КАК СчетУчетаНаценки,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаЦены,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.СчетУчетаВРознице КАК СчетУчетаВРозницеПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.СчетУчетаНаценки КАК СчетУчетаНаценкиПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен КАК РозничныйВидЦенПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен.ВалютаЦены КАК ВалютаЦеныПолучатель,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ОрдерныйСклад КАК КоррОрдерныйСклад,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов.ТипСчета
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|								ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов.ТипСчета
	|							ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат.ТипСчета
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Ссылка.СчетЗатрат.ТипСчета
	|	КОНЕЦ КАК ТипСчетаЗатрат,
	|	ПеремещениеЗапасовЗапасы.Ссылка.НаправлениеДеятельности КАК КоррНаправлениеДеятельности,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель КАК КоррСтруктурнаяЕдиница,
	|	ПеремещениеЗапасовЗапасы.Ссылка.Ячейка КАК Ячейка,
	|	ПеремещениеЗапасовЗапасы.Ссылка.ЯчейкаПолучатель КАК КоррЯчейка,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|					ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|							ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|						ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|								ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|							ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Ссылка.СчетЗатрат
	|	КОНЕЦ КАК КоррСчетУчета,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	ПеремещениеЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПеремещениеЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	ПеремещениеЗапасовЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	NULL КАК КорректируемыйДокумент,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК КоррНоменклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПеремещениеЗапасовЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьХарактеристики
	|						ТОГДА ПеремещениеЗапасовЗапасы.Характеристика
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КоррХарактеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПеремещениеЗапасовЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьПартии
	|						ТОГДА ПеремещениеЗапасовЗапасы.Партия
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КоррПартия,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ПеремещениеЗапасовЗапасы.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ПеремещениеЗапасовЗапасы.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК КоррЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Количество
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Количество * ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Резерв
	|					ИНАЧЕ ПеремещениеЗапасовЗапасы.Резерв * ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Резерв,
	|	0 КАК Сумма,
	|	ПеремещениеЗапасовЗапасы.Сумма КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ВЫБОР
	|					КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|							ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|						ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|									ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|								ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|							ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Ссылка.СчетЗатрат
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ОтветственноеХранение)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии)
	|				ИЛИ ПеремещениеЗапасовЗапасы.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ДавальческоеСырье)
	|			ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеремещениеЗапасовЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|					ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|								ИЛИ ПеремещениеЗапасовЗапасы.Ссылка.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|							ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов
	|						ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗатрат
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	ПеремещениеЗапасовЗапасы.Проект КАК Проект,
	|	&ПеремещениеЗапасов КАК Содержание,
	|	&ПеремещениеЗапасов КАК СодержаниеПроводки,
	|	ПеремещениеЗапасовЗапасы.Сумма КАК СуммаВозвратВал,
	|	&ДатаОбновленияНаРелиз_1_2_1 КАК ДатаОбновленияНаРелиз_1_2_1,
	|	ЕСТЬNULL(ПолитикиУчетаСерийРасход.ПолитикаУчетаСерий, ПеремещениеЗапасовЗапасы.Номенклатура.ПолитикаУчетаСерий) КАК ПолитикаУчетаСерийРасход,
	|	ЕСТЬNULL(ПолитикиУчетаСерийПриход.ПолитикаУчетаСерий, ПеремещениеЗапасовЗапасы.Номенклатура.ПолитикаУчетаСерий) КАК ПолитикаУчетаСерийПриход,
	|	ПеремещениеЗапасовЗапасы.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	ВременнаяТаблицаДанныеДокумента КАК ПеремещениеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийРасход
	|		ПО ПеремещениеЗапасовЗапасы.Номенклатура = ПолитикиУчетаСерийРасход.Владелец
	|			И (&СтруктурнаяЕдиница = ПолитикиУчетаСерийРасход.СтруктурнаяЕдиница)
	|			И (&Организация = ПолитикиУчетаСерийРасход.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПриход
	|		ПО ПеремещениеЗапасовЗапасы.Номенклатура = ПолитикиУчетаСерийПриход.Владелец
	|			И (&СтруктурнаяЕдиницаПолучатель = ПолитикиУчетаСерийПриход.СтруктурнаяЕдиница)
	|			И (&Организация = ПолитикиУчетаСерийПриход.Организация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовСерииНоменклатуры.КлючСвязи КАК КлючСвязи,
	|	ПеремещениеЗапасовСерииНоменклатуры.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА ПеремещениеЗапасовСерииНоменклатуры.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ПеремещениеЗапасовСерииНоменклатуры.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаЗапасы.ПолитикаУчетаСерийРасход = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|			ТОГДА &ОстаткиСерийНоменклатуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВременнаяТаблицаЗапасы.ПолитикаУчетаСерийРасход.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаткиСерийНоменклатурыРасход,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаЗапасы.ПолитикаУчетаСерийПриход = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|			ТОГДА &ОстаткиСерийНоменклатуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВременнаяТаблицаЗапасы.ПолитикаУчетаСерийПриход.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаткиСерийНоменклатурыПриход,
	|	ВременнаяТаблицаЗапасы.ПолитикаУчетаСерийРасход КАК ПолитикаУчетаСерийРасход,
	|	ВременнаяТаблицаЗапасы.ПолитикаУчетаСерийПриход КАК ПолитикаУчетаСерийПриход
	|ПОМЕСТИТЬ ВременнаяТаблицаСерииНоменклатуры
	|ИЗ
	|	Документ.ПеремещениеЗапасов.СерииНоменклатуры КАК ПеремещениеЗапасовСерииНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ПО (ВременнаяТаблицаЗапасы.КлючСвязи = ПеремещениеЗапасовСерииНоменклатуры.КлючСвязи)
	|ГДЕ
	|	ПеремещениеЗапасовСерииНоменклатуры.Ссылка = &Ссылка
	|	И &ИспользоватьСерииНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СведенияПрослеживаемости.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.ВозвратИзЭксплуатации)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	СведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	СведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СведенияПрослеживаемости.Количество КАК Количество,
	|	СведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	СведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВременнаяТаблицаСведенияПрослеживаемости
	|ИЗ
	|	Документ.ПеремещениеЗапасов.СведенияПрослеживаемости КАК СведенияПрослеживаемости
	|ГДЕ
	|	СведенияПрослеживаемости.Ссылка = &Ссылка
	|	И &ВестиУчетПрослеживаемыхТоваров";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	// Прослеживаемость
	Запрос.УстановитьПараметр("ВестиУчетПрослеживаемыхТоваров",
		СтруктураДополнительныеСвойства.УчетнаяПолитика.ВестиУчетПрослеживаемыхТоваров);
	
	Запрос.УстановитьПараметр("ИспользоватьСерииНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерииНоменклатуры);
	Запрос.УстановитьПараметр("ОстаткиСерийНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийНоменклатуры);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ДокументСсылкаПеремещениеЗапасов.СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиницаПолучатель", ДокументСсылкаПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель);
	
	// Временно: изменение движений по ордерному складу.
	Запрос.УстановитьПараметр("ДатаОбновленияНаРелиз_1_2_1", Константы.ДатаОбновленияНаРелиз_1_2_1.Получить());
		
	Запрос.УстановитьПараметр("ПеремещениеЗапасов", НСтр("ru = 'Перемещение запасов'"));
	
	//@skip-warning используется для создания временной таблицы
	МассивРезультатов = Запрос.Выполнить();
		
	// Формирование проводок документа.
	СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыКРасходуСоСкладов(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыКПоступлениюНаСклады(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСуммовойУчетВРознице(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗаказыНаПеремещение(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРазмещениеЗаказов(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	
	// Серии номенклатуры
	СформироватьТаблицаСерииНоменклатуры(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);	
	
	СформироватьТаблицаУправленческий(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
		
	// Расчет стоимости списания запасов.
	СформироватьТаблицаЗапасы(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	
	// Прослеживаемость
	ПрослеживаемостьУНФ.СформироватьДвиженияРеализацияТоваров(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПеремещениеЗапасов, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если ПроведениеДокументовУНФ.КонтрольОстатковВыключен() Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыНаСкладахИзменение", "ДвиженияЗапасыИзменение"
	// содержат записи, необходимо выполнить контроль реализации товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСуммовойУчетВРозницеИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСерииНоменклатурыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияПрослеживаемыеТоварыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗаказыНаПеремещениеИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияРазмещениеЗаказовИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗапасыНаСкладахИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|			И (ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗапасыИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчетаПредставление,
		|	ДвиженияЗапасыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗапасыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияЗапасыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО ДвиженияЗапасыИзменение.Организация = ЗапасыОстатки.Организация
		|			И ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|			И (ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСуммовойУчетВРозницеИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСуммовойУчетВРозницеИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаПредставление,
		|	ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалИзменение + ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаВалОстаток, 0) КАК ОстатокВРознице,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьПередЗаписью КАК СебестоимостьПередЗаписью,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьПриЗаписи КАК СебестоимостьПриЗаписи,
		|	ДвиженияСуммовойУчетВРозницеИзменение.СебестоимостьИзменение КАК СебестоимостьИзменение
		|ИЗ
		|	ДвиженияСуммовойУчетВРозницеИзменение КАК ДвиженияСуммовойУчетВРозницеИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СуммовойУчетВРознице.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница) В
		|					(ВЫБРАТЬ
		|						ДвиженияСуммовойУчетВРозницеИзменение.Организация КАК Организация,
		|						ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
		|					ИЗ
		|						ДвиженияСуммовойУчетВРозницеИзменение КАК ДвиженияСуммовойУчетВРозницеИзменение)) КАК СуммовойУчетВРозницеОстатки
		|		ПО ДвиженияСуммовойУчетВРозницеИзменение.Организация = СуммовойУчетВРозницеОстатки.Организация
		|			И ДвиженияСуммовойУчетВРозницеИзменение.СтруктурнаяЕдиница = СуммовойУчетВРозницеОстатки.СтруктурнаяЕдиница
		|			И (ЕСТЬNULL(СуммовойУчетВРозницеОстатки.СуммаВалОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСерииНоменклатурыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСерииНоменклатурыИзменение.Серия КАК СерияПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Ячейка КАК ЯчейкаПредставление,
		|	СерииНоменклатурыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	СерииНоменклатурыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияСерииНоменклатурыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияСерииНоменклатурыИзменение КАК ДвиженияСерииНоменклатурыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатуры.Остатки(&МоментКонтроля, ) КАК СерииНоменклатурыОстатки
		|		ПО ДвиженияСерииНоменклатурыИзменение.СтруктурнаяЕдиница = СерииНоменклатурыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияСерииНоменклатурыИзменение.Номенклатура = СерииНоменклатурыОстатки.Номенклатура
		|			И ДвиженияСерииНоменклатурыИзменение.Характеристика = СерииНоменклатурыОстатки.Характеристика
		|			И ДвиженияСерииНоменклатурыИзменение.Партия = СерииНоменклатурыОстатки.Партия
		|			И ДвиженияСерииНоменклатурыИзменение.Серия = СерииНоменклатурыОстатки.Серия
		|			И ДвиженияСерииНоменклатурыИзменение.Ячейка = СерииНоменклатурыОстатки.Ячейка
		|			И (ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияПрослеживаемыеТоварыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.РНПТ КАК РНПТПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.СтранаПроисхождения КАК СтранаПроисхожденияПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура.ТоварнаяНоменклатураВЭД.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПрослеживаемостиПредставление,
		|	ЕСТЬNULL(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0) КАК ОстатокКоличество,
		|	ЕСТЬNULL(ДвиженияПрослеживаемыеТоварыИзменение.КоличествоПрослеживаемостиИзменение, 0) + ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0) КАК ОстатокКоличествоПрослеживаемости,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0) КАК ОстатокКоличествоТекущий,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0) КАК ОстатокКоличествоПрослеживаемостиТекущий
		|ИЗ
		|	ДвиженияПрослеживаемыеТоварыИзменение КАК ДвиженияПрослеживаемыеТоварыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары.Остатки(&МоментКонтроля, ) КАК ПрослеживаемыеТоварыОстатки
		|		ПО ДвиженияПрослеживаемыеТоварыИзменение.Организация = ПрослеживаемыеТоварыОстатки.Организация
		|			И ДвиженияПрослеживаемыеТоварыИзменение.РНПТ = ПрослеживаемыеТоварыОстатки.РНПТ
		|			И ДвиженияПрослеживаемыеТоварыИзменение.СтранаПроисхождения = ПрослеживаемыеТоварыОстатки.СтранаПроисхождения
		|			И ДвиженияПрослеживаемыеТоварыИзменение.Номенклатура = ПрослеживаемыеТоварыОстатки.Номенклатура
		|			И ДвиженияПрослеживаемыеТоварыИзменение.Характеристика = ПрослеживаемыеТоварыОстатки.Характеристика
		|			И ДвиженияПрослеживаемыеТоварыИзменение.Партия = ПрослеживаемыеТоварыОстатки.Партия
		|			И (ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0) < 0
		|				ИЛИ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗаказыНаПеремещениеИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗаказыНаПеремещениеИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗаказыНаПеремещениеИзменение.ТипДвижения КАК ТипДвижения,
		|	ДвиженияЗаказыНаПеремещениеИзменение.Склад КАК СкладПредставление,
		|	ДвиженияЗаказыНаПеремещениеИзменение.ЗаказНаПеремещение КАК ЗаказНаПеремещениеПредставление,
		|	ДвиженияЗаказыНаПеремещениеИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗаказыНаПеремещениеИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ЗаказыНаПеремещениеОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗаказыНаПеремещениеИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.КоличествоОстаток, 0) КАК ОстатокЗаказыНаПеремещение,
		|	ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗаказыНаПеремещение
		|ИЗ
		|	ДвиженияЗаказыНаПеремещениеИзменение КАК ДвиженияЗаказыНаПеремещениеИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаПеремещение.Остатки(&МоментКонтроля, ) КАК ЗаказыНаПеремещениеОстатки
		|		ПО ДвиженияЗаказыНаПеремещениеИзменение.Организация = ЗаказыНаПеремещениеОстатки.Организация
		|			И ДвиженияЗаказыНаПеремещениеИзменение.ТипДвижения = ЗаказыНаПеремещениеОстатки.ТипДвижения
		|			И ДвиженияЗаказыНаПеремещениеИзменение.Склад = ЗаказыНаПеремещениеОстатки.Склад
		|			И ДвиженияЗаказыНаПеремещениеИзменение.ЗаказНаПеремещение = ЗаказыНаПеремещениеОстатки.ЗаказНаПеремещение
		|			И ДвиженияЗаказыНаПеремещениеИзменение.Номенклатура = ЗаказыНаПеремещениеОстатки.Номенклатура
		|			И ДвиженияЗаказыНаПеремещениеИзменение.Характеристика = ЗаказыНаПеремещениеОстатки.Характеристика
		|			И (ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРазмещениеЗаказовИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияРазмещениеЗаказовИзменение.ИсточникОбеспечения) КАК ИсточникОбеспеченияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(РазмещениеЗаказовОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияРазмещениеЗаказовИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) КАК ОстатокРазмещениеЗаказов,
		|	ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокРазмещениеЗаказов
		|ИЗ
		|	ДвиженияРазмещениеЗаказовИзменение КАК ДвиженияРазмещениеЗаказовИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказов.Остатки(
		|				&МоментКонтроля,
		|				(Организация, ЗаказПокупателя, Номенклатура, Характеристика, ИсточникОбеспечения) В
		|					(ВЫБРАТЬ
		|						ДвиженияРазмещениеЗаказовИзменение.Организация КАК Организация,
		|						ДвиженияРазмещениеЗаказовИзменение.ЗаказПокупателя КАК ЗаказПокупателя,
		|						ДвиженияРазмещениеЗаказовИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияРазмещениеЗаказовИзменение.Характеристика КАК Характеристика,
		|						ДвиженияРазмещениеЗаказовИзменение.ИсточникОбеспечения КАК ИсточникОбеспечения
		|					ИЗ
		|						ДвиженияРазмещениеЗаказовИзменение КАК ДвиженияРазмещениеЗаказовИзменение)) КАК РазмещениеЗаказовОстатки
		|		ПО ДвиженияРазмещениеЗаказовИзменение.Организация = РазмещениеЗаказовОстатки.Организация
		|			И ДвиженияРазмещениеЗаказовИзменение.ЗаказПокупателя = РазмещениеЗаказовОстатки.ЗаказПокупателя
		|			И ДвиженияРазмещениеЗаказовИзменение.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
		|			И ДвиженияРазмещениеЗаказовИзменение.Характеристика = РазмещениеЗаказовОстатки.Характеристика
		|			И ДвиженияРазмещениеЗаказовИзменение.ИсточникОбеспечения = РазмещениеЗаказовОстатки.ИсточникОбеспечения
		|ГДЕ
		|	ЕСТЬNULL(РазмещениеЗаказовОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			ИЛИ НЕ МассивРезультатов[4].Пустой()
			ИЛИ НЕ МассивРезультатов[5].Пустой()
			ИЛИ НЕ МассивРезультатов[6].Пустой()
			ИЛИ НЕ МассивРезультатов[7].Пустой() Тогда
			
			ДокументОбъектПеремещениеЗапасов = ДокументСсылкаПеремещениеЗапасов.ПолучитьОбъект()
			
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			КонтрольОстатковУНФ.ЗапасыНаСкладах(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета запасов и затрат.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			КонтрольОстатковУНФ.Запасы(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по суммовому учету в рознице.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			КонтрольОстатковУНФ.СуммовойУчетВРознице(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета серий номенклатуры.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			КонтрольОстатковУНФ.СерииНоменклатуры(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по остаткам запасов в разрезе номеров ГТД.
		Если Константы.КонтролироватьОстаткиПоНомерамГТД.Получить()
			И НЕ МассивРезультатов[4].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			КонтрольОстатковУНФ.ЗапасыВРазрезеГТД(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
		// Отрицательный остаток учета прослеживаемых товаров.
		Если Константы.ВестиУчетПрослеживаемыхТоваров.Получить()
			И НЕ МассивРезультатов[5].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[5].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструПрослеживаемыеТовары(
				ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
		// Отрицательный остаток учета заказов на перемещение.
		Если НЕ МассивРезультатов[6].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[6].Выбрать();
			КонтрольОстатковУНФ.ЗаказыНаПеремещение(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по размещению заказов.
		Если НЕ МассивРезультатов[7].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[7].Выбрать();
			КонтрольОстатковУНФ.РазмещениеЗаказов(ДокументОбъектПеремещениеЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

Процедура СформироватьТаблицаЗаказыНаПеремещение(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Шапка.Дата КАК Период,
	|	Шапка.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженийЗапасов.Отгрузка) КАК ТипДвижения,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК Склад,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Количество КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|	И Шапка.ЗаказНаПеремещение <> ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаЗапасы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Шапка.Дата,
	|	Шапка.ЗаказНаПеремещение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженийЗапасов.Поступление),
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	ТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|	И Шапка.ЗаказНаПеремещение <> ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаказыНаПеремещение", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКПоступлениюНаСклады()

Процедура СформироватьТаблицаРазмещениеЗаказов(ДокументСсылкаПеремещениеЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьРезервирование", СтруктураДополнительныеСвойства.УчетнаяПолитика.РезервированиеЗапасов);
	
	// Размещение запасов и расходов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРазмещениеЗапасы.Период КАК Период,
	|	ТаблицаРазмещениеЗапасы.Организация КАК Организация,
	|	ТаблицаРазмещениеЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмещениеЗапасы.Характеристика КАК Характеристика,
	|	Шапка.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	ТаблицаРазмещениеЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ТаблицаРазмещениеЗапасы.Количество - ТаблицаРазмещениеЗапасы.Резерв) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаРазмещение
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаРазмещениеЗапасы,
	|	ВременнаяТаблицаШапка КАК Шапка
	|ГДЕ
	|	&ИспользоватьРезервирование
	|	И ТаблицаРазмещениеЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И Шапка.ЗаказНаПеремещение <> ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|	И ТаблицаРазмещениеЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.Перемещение)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРазмещениеЗапасы.Период,
	|	ТаблицаРазмещениеЗапасы.Организация,
	|	ТаблицаРазмещениеЗапасы.Номенклатура,
	|	ТаблицаРазмещениеЗапасы.Характеристика,
	|	Шапка.ЗаказНаПеремещение,
	|	ТаблицаРазмещениеЗапасы.ЗаказПокупателя
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаРазмещениеЗапасы.Количество - ТаблицаРазмещениеЗапасы.Резерв) > 0";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых размещений заказов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРазмещениеЗаказов.Организация КАК Организация,
	|	ТаблицаРазмещениеЗаказов.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмещениеЗаказов.Характеристика КАК Характеристика,
	|	ТаблицаРазмещениеЗаказов.ЗаказНаПеремещение КАК ИсточникОбеспечения,
	|	ТаблицаРазмещениеЗаказов.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	ВременнаяТаблицаРазмещение КАК ТаблицаРазмещениеЗаказов";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РазмещениеЗаказов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РазмещениеЗаказовОстатки.Организация КАК Организация,
	|	РазмещениеЗаказовОстатки.Номенклатура КАК Номенклатура,
	|	РазмещениеЗаказовОстатки.Характеристика КАК Характеристика,
	|	РазмещениеЗаказовОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения,
	|	СУММА(РазмещениеЗаказовОстатки.КоличествоОстаток) КАК Количество
	|ПОМЕСТИТЬ РазмещениеЗаказовОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		РазмещениеЗаказовОстатки.Организация КАК Организация,
	|		РазмещениеЗаказовОстатки.Номенклатура КАК Номенклатура,
	|		РазмещениеЗаказовОстатки.Характеристика КАК Характеристика,
	|		РазмещениеЗаказовОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		РазмещениеЗаказовОстатки.ИсточникОбеспечения КАК ИсточникОбеспечения,
	|		РазмещениеЗаказовОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				&МоментКонтроля,
	|				(Организация, Номенклатура, Характеристика, ИсточникОбеспечения, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаРазмещениеЗаказов.Организация КАК Организация,
	|						ТаблицаРазмещениеЗаказов.Номенклатура КАК Номенклатура,
	|						ТаблицаРазмещениеЗаказов.Характеристика КАК Характеристика,
	|						ТаблицаРазмещениеЗаказов.ЗаказНаПеремещение КАК ИсточникОбеспечения,
	|						ТаблицаРазмещениеЗаказов.ЗаказПокупателя КАК ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаРазмещение КАК ТаблицаРазмещениеЗаказов)) КАК РазмещениеЗаказовОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРазмещениеЗаказов.Организация,
	|		ДвиженияДокументаРазмещениеЗаказов.Номенклатура,
	|		ДвиженияДокументаРазмещениеЗаказов.Характеристика,
	|		ДвиженияДокументаРазмещениеЗаказов.ЗаказПокупателя,
	|		ДвиженияДокументаРазмещениеЗаказов.ИсточникОбеспечения,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРазмещениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов КАК ДвиженияДокументаРазмещениеЗаказов
	|	ГДЕ
	|		ДвиженияДокументаРазмещениеЗаказов.Регистратор = &Ссылка
	|		И ДвиженияДокументаРазмещениеЗаказов.Период <= &ПериодКонтроля) КАК РазмещениеЗаказовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РазмещениеЗаказовОстатки.Организация,
	|	РазмещениеЗаказовОстатки.Номенклатура,
	|	РазмещениеЗаказовОстатки.Характеристика,
	|	РазмещениеЗаказовОстатки.ЗаказПокупателя,
	|	РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРазмещениеЗаказов.Период КАК Период,
	|	ТаблицаРазмещениеЗаказов.Организация КАК Организация,
	|	ТаблицаРазмещениеЗаказов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаРазмещениеЗаказов.Номенклатура КАК Номенклатура,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаРазмещениеЗаказов.Характеристика КАК Характеристика,
	|	ТаблицаРазмещениеЗаказов.ЗаказНаПеремещение КАК ИсточникОбеспечения,
	|	ВЫБОР
	|		КОГДА ТаблицаРазмещениеЗаказов.Количество > ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|			ТОГДА ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|		КОГДА ТаблицаРазмещениеЗаказов.Количество <= ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|			ТОГДА ТаблицаРазмещениеЗаказов.Количество
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ВременнаяТаблицаРазмещение КАК ТаблицаРазмещениеЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РазмещениеЗаказовОстатки КАК РазмещениеЗаказовОстатки
	|		ПО ТаблицаРазмещениеЗаказов.Организация = РазмещениеЗаказовОстатки.Организация
	|			И ТаблицаРазмещениеЗаказов.Номенклатура = РазмещениеЗаказовОстатки.Номенклатура
	|			И ТаблицаРазмещениеЗаказов.Характеристика = РазмещениеЗаказовОстатки.Характеристика
	|			И ТаблицаРазмещениеЗаказов.ЗаказНаПеремещение = РазмещениеЗаказовОстатки.ИсточникОбеспечения
	|			И ТаблицаРазмещениеЗаказов.ЗаказПокупателя = РазмещениеЗаказовОстатки.ЗаказПокупателя
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТаблицаРазмещениеЗаказов.Количество > ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|				ТОГДА ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|			КОГДА ТаблицаРазмещениеЗаказов.Количество <= ЕСТЬNULL(РазмещениеЗаказовОстатки.Количество, 0)
	|				ТОГДА ТаблицаРазмещениеЗаказов.Количество
	|		КОНЕЦ <> 0";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеЗапасов);
	Запрос.УстановитьПараметр("МоментКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.ПериодКонтроля);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРазмещениеЗаказов", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыКПоступлениюНаСклады()

#КонецОбласти

#Область БСП

#Область ВерсионированиеОбъектов
// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//   Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
#КонецОбласти

#Область ИнтерфейсПечати

Функция ДанныеДокументовБланкТоварногоНаполнения(МассивОбъектов, ЭтоОтправитель)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЭтоОтправитель", ЭтоОтправитель);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеЗапасов.Ссылка КАК Ссылка
	|	,ПеремещениеЗапасов.Дата КАК ДатаДокумента
	|	,""Перемещение запасов"" КАК ПредставлениеРегистратора
	|	,Выбор КОГДА &ЭтоОтправитель = ИСТИНА
	|		ТОГДА ПеремещениеЗапасов.СтруктурнаяЕдиница
	|		ИНАЧЕ ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КОНЕЦ КАК ПредставлениеСклада
	|	,Выбор КОГДА &ЭтоОтправитель = ИСТИНА
	|		ТОГДА ПеремещениеЗапасов.Ячейка 
	|		ИНАЧЕ ПеремещениеЗапасов.ЯчейкаПолучатель КОНЕЦ КАК ПредставлениеЯчейки
	|	,ПеремещениеЗапасов.Номер
	|	,ПеремещениеЗапасов.Организация.Префикс КАК Префикс
	|	,ПеремещениеЗапасов.Запасы.(
	|		НомерСтроки КАК НомерСтроки
	|		,Номенклатура.Склад КАК Склад
	|		,Номенклатура.Ячейка КАК Ячейка
	|		,Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|		,Неопределено КАК Содержание
	|		,Выбор КОГДА ВЫРАЗИТЬ(ПеремещениеЗапасов.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100)) = """"
	|			ТОГДА ПеремещениеЗапасов.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ПеремещениеЗапасов.Запасы.Номенклатура.НаименованиеПолное КОНЕЦ КАК ПредставлениеНоменклатуры
	|		,Номенклатура.Артикул КАК Артикул
	|		,Номенклатура.Штрихкод КАК Штрихкод
	|		,Номенклатура.Код КАК Код
	|		,ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения
	|		,Количество
	|		,Характеристика
	|		,КлючСвязи
	|	) КАК ТаблицаЗапасы
	|	,ЗаказПокупателя.СерииНоменклатуры.(
	|		Серия
	|		,КлючСвязи
	|	) КАК ТаблицаСерииНоменклатуры
	|ИЗ Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
	|ГДЕ ПеремещениеЗапасов.Ссылка В (&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДанныеДокументовМХ18(МассивОбъектов)
	
	ДанныеДокументов = Неопределено;
	Для каждого ОбъектПечати Из МассивОбъектов Цикл
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекущийДокумент",	ОбъектПечати);
		Запрос.УстановитьПараметр("ДатаКурса",			ОбъектПечати.Дата);
		Запрос.УстановитьПараметр("ВалютаВидаЦен",		Справочники.ВидыЦен.Учетная.ВалютаЦены);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПеремещениеЗапасов.Ссылка КАК Ссылка
		|	,ПеремещениеЗапасов.Дата КАК ДатаДокумента
		|	,ПеремещениеЗапасов.Организация КАК Организация
		|	,ПеремещениеЗапасов.Номер КАК Номер
		|	,ПеремещениеЗапасов.Организация.Префикс КАК Префикс
		|	,ПеремещениеЗапасов.СтруктурнаяЕдиница КАК Отправитель
		|	,ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КАК Получатель
		|	,ПеремещениеЗапасов.СчетЗатрат.Код КАК КорСчет
		|	,НациональнаяВалюта.Значение КАК ВалютаДокумента
		|	,ПеремещениеЗапасов.ПодписьКладовщикаОтправил.Должность КАК ДолжностьКладовщикаОтпустил
		|	,ПеремещениеЗапасов.ПодписьКладовщикаОтправил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаОтпустил
		|	,ПеремещениеЗапасов.ПодписьКонтролера.Должность КАК ДолжностьКонтролера
		|	,ПеремещениеЗапасов.ПодписьКонтролера.РасшифровкаПодписи КАК РасшифровкаПодписиКонтролера
		|	,ПеремещениеЗапасов.ПодписьКладовщикаПолучил.Должность КАК ДолжностьКладовщикаПринял
		|	,ПеремещениеЗапасов.ПодписьКладовщикаПолучил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаПринял
		|	,Неопределено КАК ЭтоСборкаЗапасов
		|	,Неопределено КАК ТаблицаЗапасы
		|ИЗ Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
		|	,Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|ГДЕ ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
		|
		//::: Запасы
		|;Выбрать
		|	ПеремещениеЗапасовЗапасы.НомерСтроки
		|	,Выбор КОГДА (ВЫРАЗИТЬ(ПеремещениеЗапасовЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
		|		ТОГДА ПеремещениеЗапасовЗапасы.Номенклатура.Наименование
		|		ИНАЧЕ ВЫРАЗИТЬ(ПеремещениеЗапасовЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КОНЕЦ КАК ПредставлениеНоменклатуры
		|	,ПеремещениеЗапасовЗапасы.Характеристика
		|	,ПеремещениеЗапасовЗапасы.Номенклатура.Код КАК Код
		|	,ПеремещениеЗапасовЗапасы.Номенклатура.Артикул КАК Артикул
		|	,ПеремещениеЗапасовЗапасы.Номенклатура.Штрихкод КАК Штрихкод
		|	,ПеремещениеЗапасовЗапасы.Резерв КАК Резерв
		|	,ПеремещениеЗапасовЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
		|	,ПеремещениеЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов.Код КАК Счет
		|	,ПеремещениеЗапасовЗапасы.Номенклатура.Код КАК ТоварКод
		|	,ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ВидУпаковки
		|	,Выбор КОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
		|				И ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
		|		ТОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
		|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.ЕдиницаИзмерения.Наименование КОНЕЦ КАК ЕдиницаИзмеренияНаименование
		|	,Выбор КОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
		|				И ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
		|		ТОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
		|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Номенклатура.ЕдиницаИзмерения.Код КОНЕЦ КАК ЕдиницаИзмеренияКодПоОКЕИ
		|	,Выбор КОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
		|		ТОГДА ПеремещениеЗапасовЗапасы.Количество * ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
		|		ИНАЧЕ ПеремещениеЗапасовЗапасы.Количество КОНЕЦ КАК Количество
		|	,ПеремещениеЗапасовЗапасы.Количество КАК КоличествоМест
		|	,Выбор КОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|		И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
		|			ТОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент
		|		КОГДА ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.КлассификаторЕдиницИзмерения 
		|			ТОГДА 1
		|		ИНАЧЕ 1 КОНЕЦ КАК КоличествоВОдномМесте
		|	,Выбор КОГДА НациональнаяВалюта.Значение = &ВалютаВидаЦен
		|		ТОГДА УчетныеЦены.Цена 
		|		ИНАЧЕ ВЫРАЗИТЬ(УчетныеЦены.Цена * ДанныеВалютыВидаЦен.Курс / ДанныеВалютыВидаЦен.Кратность КАК Число(15,2)) КОНЕЦ КАК Цена
		|	,Выбор КОГДА НациональнаяВалюта.Значение = &ВалютаВидаЦен
		|		ТОГДА ЕСТЬNULL(УчетныеЦены.Цена, 0) * ПеремещениеЗапасовЗапасы.Количество 
		|		ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(УчетныеЦены.Цена, 0) * ПеремещениеЗапасовЗапасы.Количество) * ДанныеВалютыВидаЦен.Курс / ДанныеВалютыВидаЦен.Кратность КАК Число(15,2)) КОНЕЦ КАК Сумма
		|ИЗ Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,ВидЦен = Значение(Справочник.ВидыЦен.Учетная)) КАК УчетныеЦены
		|		ПО ПеремещениеЗапасовЗапасы.Номенклатура = УчетныеЦены.Номенклатура
		|			И ПеремещениеЗапасовЗапасы.Характеристика = УчетныеЦены.Характеристика
		|			И ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения = УчетныеЦены.ЕдиницаИзмерения
		|	,РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКурса, Валюта = &ВалютаВидаЦен) КАК ДанныеВалютыВидаЦен
		|	,Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|	,Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
		|ГДЕ ПеремещениеЗапасовЗапасы.Ссылка = &ТекущийДокумент";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Если ДанныеДокументов = Неопределено Тогда
			
			ДанныеДокументов = РезультатЗапроса[0].Выгрузить();
			ДанныеДокументов[0].ТаблицаЗапасы = РезультатЗапроса[1].Выгрузить();
			
		Иначе
			
			НоваяСтрока			= ДанныеДокументов.Добавить();
			ДанныеПоДокументу	= РезультатЗапроса[0].Выгрузить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеПоДокументу[0]);
			
			НоваяСтрока.ТаблицаЗапасы = РезультатЗапроса[1].Выгрузить();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеДокументов;
	
КонецФункции

// Функция проверяет, проведен документ или нет, и вызывает процедуру печати
// документа.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПеремещениеЗапасов";
	
	ПервыйДокумент = Истина;
	
	ПараметрыНоменклатуры = Новый Структура;
	
	Для каждого ТекущийДокумент Из МассивОбъектов Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Если ИмяМакета = "ПеремещениеЗапасов" Тогда
		
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ШапкаДокумента.Дата КАК ДатаДокумента,
			|	ШапкаДокумента.Организация КАК Организация,
			|	ШапкаДокумента.СтруктурнаяЕдиница КАК Отправитель,
			|	ШапкаДокумента.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ШапкаДокумента.Номер КАК Номер,
			|	ШапкаДокумента.Организация.Префикс КАК Префикс,
			|	ШапкаДокумента.СтруктурнаяЕдиницаПолучатель.ТипСтруктурнойЕдиницы КАК СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы,
			|	ШапкаДокумента.ПодписьКладовщикаОтправил.Должность КАК ДолжностьКладовщикаОтпустил,
			|	ШапкаДокумента.ПодписьКладовщикаОтправил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаОтпустил,
			|	ШапкаДокумента.ПодписьКладовщикаПолучил.Должность КАК ДолжностьКладовщикаПринял,
			|	ШапкаДокумента.ПодписьКладовщикаПолучил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаПринял,
			|	ШапкаДокумента.СерииНоменклатуры.(
			|		Серия КАК Серия,
			|		КлючСвязи КАК КлючСвязи
			|	) КАК СерииНоменклатуры
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ШапкаДокумента
			|ГДЕ
			|	ШапкаДокумента.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	1 КАК Приоритет,
			|	ПеремещениеЗапасов.Ссылка КАК Ссылка,
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура КАК Номенклатура,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ПеремещениеЗапасов.Количество КАК Количество,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика КАК Характеристика,
			|	ПеремещениеЗапасов.КлючСвязи КАК КлючСвязи
			|ПОМЕСТИТЬ Вт_Товары
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	2,
			|	ПеремещениеЗапасов.Ссылка,
			|	ПеремещениеЗапасов.НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения,
			|	ПеремещениеЗапасов.Количество,
			|	0,
			|	НЕОПРЕДЕЛЕНО,
			|	ПеремещениеЗапасов.Характеристика,
			|	-1
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Спецоснастка КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	3,
			|	ПеремещениеЗапасов.Ссылка,
			|	ПеремещениеЗапасов.НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения,
			|	ПеремещениеЗапасов.Количество,
			|	0,
			|	НЕОПРЕДЕЛЕНО,
			|	ПеремещениеЗапасов.Характеристика,
			|	-1
			|ИЗ
			|	Документ.ПеремещениеЗапасов.ИнвентарьИХозяйственныеПринадлежности КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.Приоритет КАК Приоритет,
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное КАК Запас,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК Код,
			|	ПеремещениеЗапасов.Номенклатура.Артикул КАК Артикул,
			|	ПеремещениеЗапасов.Номенклатура.Штрихкод КАК Штрихкод,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаХранения,
			|	ПеремещениеЗапасов.Количество КАК Количество,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика КАК Характеристика,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ПеремещениеЗапасов.Количество, 0) КАК Сумма,
			|	ПеремещениеЗапасов.КлючСвязи КАК КлючСвязи
			|ИЗ
			|	Вт_Товары КАК ПеремещениеЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				&ДатаДокумента,
			|				Номенклатура В (&СписокНоменклатура)
			|					И Характеристика В (&СписокХарактеристика)
			|					И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ПеремещениеЗапасов.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ПеремещениеЗапасов.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
			|			И ПеремещениеЗапасов.Ссылка.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦен
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПеремещениеЗапасов.Приоритет,
			|	ПеремещениеЗапасов.НомерСтроки";
			
			Запрос.УстановитьПараметр("ВидЦен", ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен);
			Запрос.УстановитьПараметр("ДатаДокумента", ТекущийДокумент.Дата);
			Запрос.УстановитьПараметр("СписокНоменклатура", ТекущийДокумент.Запасы.ВыгрузитьКолонку("Номенклатура"));
			Запрос.УстановитьПараметр("СписокХарактеристика", ТекущийДокумент.Запасы.ВыгрузитьКолонку("Характеристика"));
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокСерииНоменклатуры = Шапка.СерииНоменклатуры.Выбрать();
			ВыборкаСтрокЗапасы = МассивРезультатов[2].Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_ПеремещениеЗапасов";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_ПеремещениеЗапасов");
			
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = СтрШаблон(НСтр("ru = 'Перемещение запасов № %1 от %2'"),
				НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
			
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
			 ИЛИ Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСЦенами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
			 ИЛИ Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСЦенами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			КонецЕсли;
			
			Количество = 0;
			Всего = 0;
			
			Сч = 1;
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				ОбластьМакета.Параметры.НомерСтроки = Сч;
				
				СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСтрокСерииНоменклатуры, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.Запас = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.Запас, 
					ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул, СтрокаСерииНоменклатуры);
				
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокЗапасы.Артикул);
				ОбластьМакета.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Количество = Количество + 1;
				Всего = Всего + ВыборкаСтрокЗапасы.Сумма;
				
				Сч = Сч + 1;
			КонецЦикла;
			
			Если Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница
			 ИЛИ Шапка.СтруктурнаяЕдиницаПолучательТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ИтогоСЦенами");
				ОбластьМакета.Параметры.Всего = Всего;
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "М11" Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПеремещениеЗапасов.Дата КАК ДатаДокумента,
			|	ПеремещениеЗапасов.Организация КАК Организация,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиница КАК Отправитель,
			|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ПеремещениеЗапасов.СчетЗатрат.Код КАК КоррСчет,
			|	ПеремещениеЗапасов.Номер КАК Номер,
			|	ПеремещениеЗапасов.Организация.Префикс КАК Префикс,
			|	ПеремещениеЗапасов.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
			|	ПеремещениеЗапасов.ПодписьКладовщикаОтправил.Должность КАК ДолжностьКладовщикаОтпустил,
			|	ПеремещениеЗапасов.ПодписьКладовщикаОтправил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаОтпустил,
			|	ПеремещениеЗапасов.ПодписьКладовщикаПолучил.Должность КАК ДолжностьКладовщикаПринял,
			|	ПеремещениеЗапасов.ПодписьКладовщикаПолучил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаПринял
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура КАК СсылкаНоменклатура,
			|	ПеремещениеЗапасов.Характеристика КАК СсылкаХарактеристика,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное КАК Запас,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК Код,
			|	ПеремещениеЗапасов.Номенклатура.Артикул КАК Артикул,
			|	ПеремещениеЗапасов.Номенклатура.Штрихкод КАК Штрихкод,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование
			|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Код
			|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|			ТОГДА ПеремещениеЗапасов.Количество * ПеремещениеЗапасов.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ ПеремещениеЗапасов.Количество
			|	КОНЕЦ КАК Количество,
			|	ПеремещениеЗапасов.Номенклатура.СчетУчетаЗапасов.Код КАК Счет,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК НоменклатурныйНомер
			|ПОМЕСТИТЬ ТаблицаДокумента
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасов,
			|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура,
			|	ПеремещениеЗапасов.Характеристика,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное,
			|	ПеремещениеЗапасов.Номенклатура.Код,
			|	ПеремещениеЗапасов.Номенклатура.Артикул,
			|	ПеремещениеЗапасов.Номенклатура.Штрихкод,
			|	0,
			|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
			|	ПеремещениеЗапасов.Характеристика,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Код
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|			ТОГДА ПеремещениеЗапасов.Количество * ПеремещениеЗапасов.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ ПеремещениеЗапасов.Количество
			|	КОНЕЦ,
			|	ПеремещениеЗапасов.Номенклатура.СчетУчетаЗапасов.Код,
			|	ПеремещениеЗапасов.Номенклатура.Код
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Спецоснастка КАК ПеремещениеЗапасов,
			|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки,
			|	ПеремещениеЗапасов.Номенклатура,
			|	ПеремещениеЗапасов.Характеристика,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное,
			|	ПеремещениеЗапасов.Номенклатура.Код,
			|	ПеремещениеЗапасов.Номенклатура.Артикул,
			|	ПеремещениеЗапасов.Номенклатура.Штрихкод,
			|	0,
			|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
			|	ПеремещениеЗапасов.Характеристика,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Код
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|			ТОГДА ПеремещениеЗапасов.Количество * ПеремещениеЗапасов.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ ПеремещениеЗапасов.Количество
			|	КОНЕЦ,
			|	ПеремещениеЗапасов.Номенклатура.СчетУчетаЗапасов.Код,
			|	ПеремещениеЗапасов.Номенклатура.Код
			|ИЗ
			|	Документ.ПеремещениеЗапасов.ИнвентарьИХозяйственныеПринадлежности КАК ПеремещениеЗапасов,
			|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
			|	ТаблицаДокумента.СсылкаНоменклатура КАК СсылкаНоменклатура,
			|	ТаблицаДокумента.СсылкаХарактеристика КАК СсылкаХарактеристика,
			|	ТаблицаДокумента.Запас КАК Запас,
			|	ТаблицаДокумента.Код КАК Код,
			|	ТаблицаДокумента.Артикул КАК Артикул,
			|	ТаблицаДокумента.Резерв КАК Резерв,
			|	ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ТаблицаДокумента.Характеристика КАК Характеристика,
			|	ТаблицаДокумента.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
			|	ТаблицаДокумента.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
			|	ТаблицаДокумента.Количество КАК Количество,
			|	ТаблицаДокумента.Счет КАК Счет,
			|	ТаблицаДокумента.НоменклатурныйНомер КАК НоменклатурныйНомер,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Сумма
			|ИЗ
			|	ТаблицаДокумента КАК ТаблицаДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				&ДатаДокумента,
			|				Актуальность
			|					И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ТаблицаДокумента.СсылкаНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ТаблицаДокумента.СсылкаХарактеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
			|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаВидЦен) КАК КурсыВалютСрезПоследних,
			|	Константа.НациональнаяВалюта КАК НациональнаяВалюта
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаДокумента.НомерСтроки";
			
			РозничныйВидДокумента = ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен;
			
			Если НЕ ЗначениеЗаполнено(РозничныйВидДокумента) Тогда
				
				РозничныйВидДокумента = Справочники.ВидыЦен.Учетная;
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ВидЦен", 			РозничныйВидДокумента);
			Запрос.УстановитьПараметр("ВалютаВидЦен", 		?(ЗначениеЗаполнено(РозничныйВидДокумента.ВалютаЦены), РозничныйВидДокумента.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
			Запрос.УстановитьПараметр("ДатаДокумента", 		ТекущийДокумент.Дата);
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокЗапасы = МассивРезультатов[2].Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_ПеремещениеЗапасов_М11";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_М11");
			
			СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
			
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента,
				Шапка.Номер, Шапка.Префикс);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заголовок = СтрШаблон(НСтр("ru = 'ТРЕБОВАНИЕ-НАКЛАДНАЯ № %1 от %2'"),
				НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
			
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.КодОКПО                  = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакета.Параметры.ДатаСоставления          = Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yy");
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
			
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				ОбластьМакета.Параметры.Запас = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокЗапасы.Запас, ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
				
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокЗапасы.Артикул);
				ОбластьМакета.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(
					ПараметрыНоменклатуры);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		ИначеЕсли ИмяМакета = "ТОРГ13" Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ШапкаДокумента.Дата КАК ДатаДокумента,
			|	ШапкаДокумента.Организация КАК Организация,
			|	ШапкаДокумента.СтруктурнаяЕдиница КАК Отправитель,
			|	ШапкаДокумента.СтруктурнаяЕдиницаПолучатель КАК Получатель,
			|	ШапкаДокумента.СчетЗатрат.Код КАК СубСчет,
			|	ШапкаДокумента.Номер КАК Номер,
			|	ШапкаДокумента.Организация.Префикс КАК Префикс,
			|	ШапкаДокумента.ПодписьКладовщикаОтправил.Должность КАК ДолжностьКладовщикаОтпустил,
			|	ШапкаДокумента.ПодписьКладовщикаОтправил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаОтпустил,
			|	ШапкаДокумента.ПодписьКладовщикаПолучил.Должность КАК ДолжностьКладовщикаПринял,
			|	ШапкаДокумента.ПодписьКладовщикаПолучил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщикаПринял,
			|	ШапкаДокумента.СерииНоменклатуры.(
			|		Серия КАК Серия,
			|		КлючСвязи КАК КлючСвязи
			|	) КАК СерииНоменклатуры
			|ИЗ
			|	Документ.ПеремещениеЗапасов КАК ШапкаДокумента
			|ГДЕ
			|	ШапкаДокумента.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещениеЗапасов.НомерСтроки КАК НомерСтроки,
			|	ПеремещениеЗапасов.КлючСвязи КАК КлючСвязи,
			|	ПеремещениеЗапасов.Номенклатура КАК СсылкаНоменклатура,
			|	ПеремещениеЗапасов.Характеристика КАК СсылкаХарактеристика,
			|	ПеремещениеЗапасов.Номенклатура.НаименованиеПолное КАК Запас,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК ТоварКод,
			|	ПеремещениеЗапасов.Номенклатура.Код КАК Код,
			|	ПеремещениеЗапасов.Номенклатура.Артикул КАК Артикул,
			|	ПеремещениеЗапасов.Номенклатура.ШтрихКод КАК Штрихкод,
			|	ПеремещениеЗапасов.Резерв КАК Резерв,
			|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ПеремещениеЗапасов.Характеристика КАК Характеристика,
			|	ПеремещениеЗапасов.Номенклатура.СчетУчетаЗапасов.Код КАК Счет,
			|	ПеремещениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Наименование
			|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|				И ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
			|			ТОГДА ПеремещениеЗапасов.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
			|		ИНАЧЕ ПеремещениеЗапасов.Номенклатура.ЕдиницаИзмерения.Код
			|	КОНЕЦ КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ВЫБОР
			|		КОГДА ПеремещениеЗапасов.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|			ТОГДА ПеремещениеЗапасов.Количество * ПеремещениеЗапасов.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ ПеремещениеЗапасов.Количество
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ ТаблицаДокумента
			|ИЗ
			|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасов,
			|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
			|ГДЕ
			|	ПеремещениеЗапасов.Ссылка = &ТекущийДокумент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СсылкаНоменклатура,
			|	СсылкаХарактеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
			|	ТаблицаДокумента.КлючСвязи КАК КлючСвязи,
			|	ТаблицаДокумента.СсылкаНоменклатура КАК СсылкаНоменклатура,
			|	ТаблицаДокумента.СсылкаХарактеристика КАК СсылкаХарактеристика,
			|	ТаблицаДокумента.Запас КАК Запас,
			|	ТаблицаДокумента.Код КАК Код,
			|	ТаблицаДокумента.Артикул КАК Артикул,
			|	ТаблицаДокумента.Штрихкод КАК Штрихкод,
			|	ТаблицаДокумента.Количество КАК КоличествоМест,
			|	ВЫБОР
			|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
			|			ТОГДА ТаблицаДокумента.ЕдиницаИзмерения.Коэффициент
			|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения ССЫЛКА Справочник.КлассификаторЕдиницИзмерения
			|			ТОГДА 1
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК КоличествоВОдномМесте,
			|	ТаблицаДокумента.Резерв КАК Резерв,
			|	ТаблицаДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
			|	ТаблицаДокумента.Характеристика КАК Характеристика,
			|	ТаблицаДокумента.Счет КАК Счет,
			|	ТаблицаДокумента.ТоварКод КАК ТоварКод,
			|	ТаблицаДокумента.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
			|	ТаблицаДокумента.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Цена,
			|	ВЫБОР
			|		КОГДА &ВалютаВидЦен = НациональнаяВалюта.Значение
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0)
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество, 0) * КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность
			|	КОНЕЦ КАК Сумма
			|ИЗ
			|	ТаблицаДокумента КАК ТаблицаДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				&ДатаДокумента,
			|				Актуальность
			|					И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ТаблицаДокумента.СсылкаНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ТаблицаДокумента.СсылкаХарактеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
			|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаВидЦен) КАК КурсыВалютСрезПоследних,
			|	Константа.НациональнаяВалюта КАК НациональнаяВалюта,
			|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаДокумента.НомерСтроки";
			
			РозничныйВидДокумента = ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен;
			
			Если НЕ ЗначениеЗаполнено(РозничныйВидДокумента) Тогда
				
				РозничныйВидДокумента = Справочники.ВидыЦен.Учетная;
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ВидЦен", 			РозничныйВидДокумента);
			Запрос.УстановитьПараметр("ВалютаВидЦен", 		?(ЗначениеЗаполнено(РозничныйВидДокумента.ВалютаЦены), РозничныйВидДокумента.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
			Запрос.УстановитьПараметр("ДатаДокумента", 		ТекущийДокумент.Дата);
			
			МассивРезультатов = Запрос.ВыполнитьПакет();
			
			Шапка = МассивРезультатов[0].Выбрать();
			Шапка.Следующий();
			
			ВыборкаСтрокСерииНоменклатуры = Шапка.СерииНоменклатуры.Выбрать();
			ВыборкаСтрокЗапасы = МассивРезультатов[2].Выбрать();
			
			ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеЗапасов_ТОРГ13";
			
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеЗапасов.ПФ_MXL_ТОРГ13");
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
			
			СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
			ОбластьМакета         = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации);
			ОбластьМакета.Параметры.НомерДокумента           = НомерДокумента;
			ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
			ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			СтрокНаСтранице = 23;
			СтрокШапки      = 10;
			СтрокПодвала    = 9;
			НомерСтраницы   = 1;
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			КоличествоСтрок = ВыборкаСтрокЗапасы.Количество();
			
			Если КоличествоСтрок = 1 Тогда
				ПереноситьПоследнююСтроку = 0;
			Иначе
				ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
				ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
				ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
			КонецЕсли;
			
			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогСуммыПоСтранице = 0;
			
			// инициализация итогов по документу
			ИтогоКоличество  = 0;
			ИтогоСумма = 0;
			
			Ном = 0;
			
			// Выводим многострочную часть документа
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			Пока ВыборкаСтрокЗапасы.Следующий() Цикл
				
				Ном = Ном + 1;
				
				// Начинаем новую страницу, если предыдущая строка была последней на странице
				// или пора переносить последнюю строку на последнюю страницу с подвалом.
				ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
				
				Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				 ИЛИ ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице = ИтогСуммыПоСтранице;
					
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// инициализация итогов по странице
					ИтогКоличествоМестПоСтранице = 0;
					ИтогСуммыПоСтранице = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
					
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				КоличествоМест = ВыборкаСтрокЗапасы.КоличествоМест;
				СтрокаСерииНоменклатуры = СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСтрокСерииНоменклатуры, ВыборкаСтрокЗапасы.КлючСвязи);
				ОбластьМакета.Параметры.ТоварНаименование = ПечатьДокументовУНФ.ПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокЗапасы.Запас,
					ВыборкаСтрокЗапасы.Характеристика,
					ВыборкаСтрокЗапасы.Артикул,
					СтрокаСерииНоменклатуры);
				
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокЗапасы.Артикул);
				ОбластьМакета.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Обновим итоги по странице
				ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + КоличествоМест;
				ИтогСуммыПоСтранице = ИтогСуммыПоСтранице + ВыборкаСтрокЗапасы.Сумма;
				
				// Обновим итогов по документу
				ИтогоКоличество  = ИтогоКоличество + КоличествоМест;
				ИтогоСумма = ИтогоСумма + ВыборкаСтрокЗапасы.Сумма;
				
			КонецЦикла;
			
			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице = ИтогСуммыПоСтранице;
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
			ОбластьМакета.Параметры.ИтогоСумма = ИтогоСумма;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "М-11", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "М11"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ13", "ТОРГ-13", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ТОРГ13"));
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, Обработки.ПечатьМХ18.ИдентификаторПечатнойФормы());
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьМХ18.КлючПараметровПечати();
		ПечатнаяФорма.ПолныйПутьКМакету = Обработки.ПечатьМХ18.ПолныйПутьКМакету();
		ПечатнаяФорма.СинонимМакета = Обработки.ПечатьМХ18.ПредставлениеПФ();
		
		ДанныеОбъектовПечати = ДанныеДокументовМХ18(МассивОбъектов);
		Обработки.ПечатьМХ18.СформироватьПФ(ПечатнаяФорма, ДанныеОбъектовПечати, ОбъектыПечати, Ложь);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", "Товарно-транспортная накладная", Обработки.ПечатьТТН.ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПеремещениеЗапасов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПеремещениеЗапасов", "Перемещение запасов", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "ПеремещениеЗапасов"));
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "БланкТоварногоНаполненияОтправитель");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьБланкТоварногоНаполнения.КлючПараметровПечати();
		ПечатнаяФорма.ПолныйПутьКМакету = Обработки.ПечатьБланкТоварногоНаполнения.ПолныйПутьКМакету();
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Бланк товарного наполнения (Отправитель)'");
		
		ДанныеОбъектовПечати = ДанныеДокументовБланкТоварногоНаполнения(МассивОбъектов, Истина);
		Обработки.ПечатьБланкТоварногоНаполнения.СформироватьПФ(ПечатнаяФорма, ДанныеОбъектовПечати, ОбъектыПечати);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "БланкТоварногоНаполненияПолучатель");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьБланкТоварногоНаполнения.КлючПараметровПечати();
		ПечатнаяФорма.ПолныйПутьКМакету = Обработки.ПечатьБланкТоварногоНаполнения.ПолныйПутьКМакету();
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Бланк товарного наполнения (Получатель)'");
		
		ДанныеОбъектовПечати = ДанныеДокументовБланкТоварногоНаполнения(МассивОбъектов, Ложь);
		Обработки.ПечатьБланкТоварногоНаполнения.СформироватьПФ(ПечатнаяФорма, ДанныеОбъектовПечати, ОбъектыПечати);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, 
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ИдентификаторКомплекта = СтрШаблон("М11,ТОРГ13,%1,ТТН,ПеремещениеЗапасов", Обработки.ПечатьМХ18.ИдентификаторПечатнойФормы());
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = ИдентификаторКомплекта;
	КомандаПечати.Представление = ПечатьДокументовУНФ.ПредставлениеКомплектаДокументов();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'М11 (Требование-накладная)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ13";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ13 (Накладная на внутреннее перемещение)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = Обработки.ПечатьМХ18.ИдентификаторПечатнойФормы();
	КомандаПечати.Представление = Обработки.ПечатьМХ18.ПредставлениеПФ();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = '1-Т (Товарно-транспортная накладная)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 14;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ПечатьДокументовУНФКлиент.ПечатьТН";
	КомандаПечати.Идентификатор = "ТН";
	КомандаПечати.Представление = Обработки.ПечатьТТН.ПредставлениеПФ();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 17;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПеремещениеЗапасов";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение запасов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 20;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполненияОтправитель";
	КомандаПечати.Представление = НСтр("ru = 'Бланк товарного наполнения (Отправитель)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 23;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполненияПолучатель";
	КомандаПечати.Представление = НСтр("ru = 'Бланк товарного наполнения (Получатель)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 26;
	
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.ПечатьЭтикетокИЦенников)
		И ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ЦеныНоменклатуры)
		И ПолучитьФункциональнуюОпцию("ПечатьЭтикетокИЦенников") Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ПечатьДокументовУНФКлиент.ПечатьЭтикетокИЦенниковИзДокументов";
		КомандаПечати.Идентификатор = "ПечатьЭтикетокИзПеремещенияТоваров";
		КомандаПечати.Представление = НСтр("ru = 'Печать этикеток'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Порядок = 29;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ПечатьДокументовУНФКлиент.ПечатьЭтикетокИЦенниковИзДокументов";
		КомандаПечати.Идентификатор = "ПечатьЦенниковИзПеремещенияТоваров";
		КомандаПечати.Представление = НСтр("ru = 'Печать ценников'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Порядок = 32;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РаботаССериямиНоменклатуры

// Формирует таблицу значений, содержащую данные для проведения по регистру СерииНоменклатурыГарантии.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСерииНоменклатуры(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Если ДокументСсылка.СерииНоменклатуры.Количество()=0 Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", Новый ТаблицаЗначений);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатуры", Новый ТаблицаЗначений);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	СерииНоменклатуры.Серия КАК Серия,
	|	СерииНоменклатуры.Количество КАК Количество1,
	|	СерииНоменклатуры.ОстаткиСерийНоменклатурыРасход КАК ОстаткиСерийНоменклатуры,
	|	СерииНоменклатуры.ПолитикаУчетаСерийРасход КАК ПолитикаУчетаСерий,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ВременнаяТаблицаЗапасы.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ВременнаяТаблицаЗапасы.ВидОперации КАК ВидОперации,
	|	СерииНоменклатуры.Количество КАК Количество,
	|	ВременнаяТаблицаЗапасы.ОрдерныйСклад КАК ОрдерныйСклад,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Расход) КАК Операция,
	|	ВременнаяТаблицаЗапасы.Период КАК ДатаСобытия
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	НЕ ВременнаяТаблицаЗапасы.ОрдерныйСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	СерииНоменклатуры.Серия,
	|	СерииНоменклатуры.Количество,
	|	СерииНоменклатуры.ОстаткиСерийНоменклатурыПриход,
	|	СерииНоменклатуры.ПолитикаУчетаСерийПриход КАК ПолитикаУчетаСерий,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия,
	|	ВременнаяТаблицаЗапасы.Организация,
	|	ВременнаяТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.КоррЯчейка,
	|	ВременнаяТаблицаЗапасы.ВидОперации,
	|	СерииНоменклатуры.Количество,
	|	ВременнаяТаблицаЗапасы.ОрдерныйСклад,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Приход),
	|	ВременнаяТаблицаЗапасы.Период
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерииНоменклатуры.КлючСвязи
	|ГДЕ
	|	НЕ ВременнаяТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|	И НЕ ВременнаяТаблицаЗапасы.КоррОрдерныйСклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременнаяТаблицаЗапасы.Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаЗапасы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещениеЗапасов.СписаниеНаРасходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Движение)
	|	КОНЕЦ КАК Операция,
	|	СерииНоменклатуры.Серия КАК Серия,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерииНоменклатуры.КлючСвязи";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Если Не СтруктураДополнительныеСвойства.УчетнаяПолитика.МиграцияСерийНоменклатурыВыполнена Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", МассивРезультатов[1].Выгрузить());
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", Новый ТаблицаЗначений);
	Иначе
		МассивДоступныхПолитик = СерииНоменклатурыУНФ.МассивПолитикСДоступомКДокументу("Перемещение запасов", ДокументСсылка.ВидОперации);
		
		ТаблицаДвиженийПоСериям = МассивРезультатов[0].Выгрузить();
		МассивСтрокКУдалению = Новый Массив;
		
		Для Каждого СтрокаДвижений Из ТаблицаДвиженийПоСериям Цикл
			Если МассивДоступныхПолитик.Найти(СтрокаДвижений.ПолитикаУчетаСерий) = Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаДвижений);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаКУдалению Из МассивСтрокКУдалению Цикл
			ТаблицаДвиженийПоСериям.Удалить(СтрокаКУдалению);
		КонецЦикла;
		
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", ТаблицаДвиженийПоСериям);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатурыГарантии", Новый ТаблицаЗначений);
	КонецЕсли;
	
	РезультатЗапроса = МассивРезультатов[0].Выгрузить();
	ПараметрыОтбора = Новый Структура("ОстаткиСерийНоменклатуры", Истина);
	ОстаткиСерийНоменклатурыСтроки = РезультатЗапроса.НайтиСтроки(ПараметрыОтбора);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатуры", РезультатЗапроса.Скопировать(ОстаткиСерийНоменклатурыСтроки));
	
КонецПроцедуры // СформироватьТаблицаСерииНоменклатуры()

#КонецОбласти

#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Обработчик заполнения на основании документа ИнвентаризацияЗапасов.
//
// Параметры:
//  ДокументСсылкаИнвентаризацияЗапасов	 - ДокументСсылка.ИнвентаризацияЗапасов.
//
Процедура ЗаполнитьПоИнвентаризацииЗапасов(ДокументСсылкаИнвентаризацияЗапасов) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылкаИнвентаризацияЗапасов) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОснование = ДокументСсылкаИнвентаризацияЗапасов;
	Организация = ДокументСсылкаИнвентаризацияЗапасов.Организация;
	СтруктурнаяЕдиница = ДокументСсылкаИнвентаризацияЗапасов.СтруктурнаяЕдиница;
	Ячейка = ДокументСсылкаИнвентаризацияЗапасов.Ячейка;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(ИнвентаризацияЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ИнвентаризацияЗапасов.Номенклатура КАК Номенклатура,
	|	ИнвентаризацияЗапасов.Характеристика КАК Характеристика,
	|	ИнвентаризацияЗапасов.Партия КАК Партия,
	|	ИнвентаризацияЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ИнвентаризацияЗапасов.КоличествоУчет - ИнвентаризацияЗапасов.Количество) КАК КоличествоОтклонение,
	|	СУММА(ВЫБОР
	|			КОГДА СписаниеЗапасов.Количество ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ СписаниеЗапасов.Количество
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПересортицаЗапасовСписание.Количество ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ПересортицаЗапасовСписание.Количество
	|		КОНЕЦ) КАК КоличествоСписанное
	|ИЗ
	|	Документ.ИнвентаризацияЗапасов.Запасы КАК ИнвентаризацияЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СписаниеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|			СписаниеЗапасовЗапасы.Характеристика КАК Характеристика,
	|			СписаниеЗапасовЗапасы.Партия КАК Партия,
	|			СУММА(СписаниеЗапасовЗапасы.Количество) КАК Количество
	|		ИЗ
	|			Документ.СписаниеЗапасов.Запасы КАК СписаниеЗапасовЗапасы
	|		ГДЕ
	|			СписаниеЗапасовЗапасы.Ссылка.ДокументОснование = &ДокументОснование
	|			И СписаниеЗапасовЗапасы.Ссылка.Проведен
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписаниеЗапасовЗапасы.Номенклатура,
	|			СписаниеЗапасовЗапасы.Характеристика,
	|			СписаниеЗапасовЗапасы.Партия) КАК СписаниеЗапасов
	|		ПО ИнвентаризацияЗапасов.Номенклатура = СписаниеЗапасов.Номенклатура
	|			И ИнвентаризацияЗапасов.Характеристика = СписаниеЗапасов.Характеристика
	|			И ИнвентаризацияЗапасов.Партия = СписаниеЗапасов.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПересортицаЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|			ПересортицаЗапасовЗапасы.Характеристика КАК Характеристика,
	|			ПересортицаЗапасовЗапасы.Партия КАК Партия,
	|			СУММА(ПересортицаЗапасовЗапасы.Количество) КАК Количество
	|		ИЗ
	|			Документ.ПересортицаЗапасов.Запасы КАК ПересортицаЗапасовЗапасы
	|		ГДЕ
	|			ПересортицаЗапасовЗапасы.Ссылка.ДокументОснование = &ДокументОснование
	|			И ПересортицаЗапасовЗапасы.Ссылка.Проведен
	|			И ПересортицаЗапасовЗапасы.Ссылка <> &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПересортицаЗапасовЗапасы.Номенклатура,
	|			ПересортицаЗапасовЗапасы.Характеристика,
	|			ПересортицаЗапасовЗапасы.Партия) КАК ПересортицаЗапасовСписание
	|		ПО ИнвентаризацияЗапасов.Номенклатура = ПересортицаЗапасовСписание.Номенклатура
	|			И ИнвентаризацияЗапасов.Характеристика = ПересортицаЗапасовСписание.Характеристика
	|			И ИнвентаризацияЗапасов.Партия = ПересортицаЗапасовСписание.Партия
	|ГДЕ
	|	ИнвентаризацияЗапасов.Ссылка = &ДокументОснование
	|	И ИнвентаризацияЗапасов.КоличествоУчет - ИнвентаризацияЗапасов.Количество > 0
	|	И ВЫБОР
	|			КОГДА ИнвентаризацияЗапасов.Партия <> ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИнвентаризацияЗапасов.Партия.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.СобственныеЗапасы)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияЗапасов.Номенклатура,
	|	ИнвентаризацияЗапасов.Характеристика,
	|	ИнвентаризацияЗапасов.Партия,
	|	ИнвентаризацияЗапасов.ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаИнвентаризацияЗапасов);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение НСтр("ru = 'Нет данных для оформления списания!'");
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	// Заполнение табличной части документа.
	Запасы.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		КоличествоСписать = Выборка.КоличествоОтклонение - Выборка.КоличествоСписанное;
		
		Если КоличествоСписать <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
		
		СтрокаТабличнойЧасти.Количество			= КоличествоСписать;
		
	КонецЦикла;
	
	Если Запасы.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Нет данных для оформления списания!'");
	КонецЕсли;
	
КонецПроцедуры

// Заполнение документа на основании инвентаризации ВЕТИС.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа
//	
Процедура ЗаполнитьПоИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения) Экспорт
	
	Реквизиты = ИнтеграцияВЕТИСУНФ.ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
		
	КонецЕсли;
	
	Товары = Реквизиты.Товары.Выгрузить();
	
	Запасы.Очистить();
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если СтрокаТовары.Количество >= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаТовары);
		НоваяСтрокаЗапасы.Количество = -СтрокаТовары.Количество;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// В обработчике события ОбработкаЗаполнения документа выполняется
// - заполнение документа по инвентаризации запасов на складе.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	// Прослеживаемость
	СведенияПрослеживаемости.Очистить();
	// Конец Прослеживаемость
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ИнвентаризацияЗапасов")] = "ЗаполнитьПоИнвентаризацииЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ИнвентаризацияПродукцииВЕТИС")] = "ЗаполнитьПоИнвентаризацииПродукцииВЕТИС";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
	// Прослеживаемость
	ПрослеживаемостьУНФ.ОбновитьПризнакПрослеживаемости(Запасы, Дата);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.СписаниеЗапасов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыКРасходуСоСкладов", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыНаСкладах", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("Запасы", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыВРазрезеГТД", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходы", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);

	// СерииНоменклатуры
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатурыГарантии", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДвиженияСерииНоменклатуры", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатуры", ТаблицыДляДвижений, Движения, Отказ);
	
	// Прослеживаемость
	УправлениеНебольшойФирмойСервер.ОтразитьПрослеживаемыеТовары(ДополнительныеСвойства, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ОперацииСПрослеживаемымиТоварами", ТаблицыДляДвижений, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.СписаниеЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.СписаниеЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Серии номенклатуры
	Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница,"ОрдерныйСклад") = Истина Тогда
		СерииНоменклатурыУНФ.ПроверкаЗаполненияСерийНоменклатуры(Отказ, Запасы, СерииНоменклатуры, СтруктурнаяЕдиница, ЭтотОбъект);
	КонецЕсли;
	
	НоменклатураВДокументахСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, Отказ, Истина);
	
	ГрузовыеТаможенныеДекларацииСервер.ПриОбработкеПроверкиЗаполнения(Отказ, ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// ОбменДанными.Загрузка не требуется.
	// ИнтеграцияГИСМ
	ЕстьМаркируемаяПродукцияГИСМ = ИнтеграцияГИСМУНФ.ЕстьМаркируемаяПродукцияГИСМ(Запасы);
	ЕстьКиЗГИСМ = ИнтеграцияГИСМУНФ.ЕстьКиЗГИСМ(Запасы);
	// Конец ИнтеграцияГИСМ
	
	// Прослеживаемость
	ТребуетсяПодобратьРНПТ = ПрослеживаемостьУНФ.ТребуетсяПодобратьРНПТ(Запасы, Дата, Истина);
	Если ТребуетсяПодобратьРНПТ Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ПрослеживаемостьУНФ.ПодобратьРНПТОстатки(ЭтотОбъект, Отказ);
		КонецЕсли; 
	Иначе
		СведенияПрослеживаемости.Очистить();
	КонецЕсли;
	
	Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
		Если СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			СтрокаТабличнойЧасти.НомерГТД = Ложь;
		КонецЕсли;
	КонецЦикла;
	// Конец Прослеживаемость
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПереданВЕГАИС = Неопределено;
	АктСписанияЕГАИС = Неопределено;
	
	// Прослеживаемость
	СведенияПрослеживаемости.Очистить();
	ПрослеживаемостьУНФ.ОбновитьПризнакПрослеживаемости(Запасы, Дата);
	// Конец Прослеживаемость
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
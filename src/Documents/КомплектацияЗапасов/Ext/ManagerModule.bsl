#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
// @skip-warning
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(СтруктурнаяЕдиница)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ЗагрузкаДанныхИзВнешнегоИсточника

// Для группы полей действует правило: хотя бы одно поле в группе должно быть выбрано в колонках
//
// Параметры:
//   ТаблицаПолейЗагрузки - таблица значений, которая будет наполнена колонками
//   НастройкиЗагрузкиДанных - структура настроек загрузки
//
Процедура ПоляЗагрузкиДанныхИзВнешнегоИсточника(ТаблицаПолейЗагрузки, НастройкиЗагрузкиДанных) Экспорт
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	ОписаниеТиповСтрока11 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(11));	
	ОписаниеТиповСтрока25 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(25));
	ОписаниеТиповСтрока30 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(30));
	ОписаниеТиповСтрока50 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50));
	ОписаниеТиповСтрока100 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(100));
	ОписаниеТиповСтрока110 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(110));
	ОписаниеТиповСтрока150 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(150));
	ОписаниеТиповСтрока200 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(200));
	ОписаниеТиповСтрока1000 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(1000));
	ОписаниеТиповЧисло15_2 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(15, 2,
		ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповЧисло15_3 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(15, 3,
		ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	ЭтоЗапасы = (ПолноеИмяОбъектаЗаполнения = "Документ.КомплектацияЗапасов.ТабличнаяЧасть.Запасы");
	
	// Номенклатура
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ОбязательноеЗаполнениеГруппыНоменклатуры = Не ПолучитьФункциональнуюОпцию("УчетНоменклатурыПоставщиков");
	
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "Штрихкод",
		НСтр("ru = 'Штрихкод'"), ОписаниеТиповСтрока200, ОписаниеТиповКолонка, "Номенклатура",
		1, , ОбязательноеЗаполнениеГруппыНоменклатуры, ЭтоЗапасы);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "Артикул",
		НСтр("ru = 'Артикул'"), ОписаниеТиповСтрока25, ОписаниеТиповКолонка, "Номенклатура",
		2, , ОбязательноеЗаполнениеГруппыНоменклатуры);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "НоменклатураНаименование",
		НСтр("ru = 'Номенклатура (наименование)'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка, "Номенклатура",
		3, , ОбязательноеЗаполнениеГруппыНоменклатуры);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
		ТаблицаПолейЗагрузки, "НоменклатураНаименованиеПолное",
		НСтр("ru = 'Номенклатура (полное наименование)'"), ОписаниеТиповСтрока1000, ОписаниеТиповКолонка, "Номенклатура",
		5, , ОбязательноеЗаполнениеГруппыНоменклатуры);

	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "РодительКод",
		НСтр("ru = 'Код'", ОбщегоНазначения.КодОсновногоЯзыка()), 			ОписаниеТиповСтрока11, ОписаниеТиповКолонка, "Родитель", 1);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "РодительНаименование", 
		НСтр("ru = 'Группа (наименование)'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка, "Родитель", 2);	

	ОписаниеТиповКолонка = Новый ОписаниеТипов("ПланСчетовСсылка.Управленческий");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СчетУчетаДоходов", 
		НСтр("ru = 'Счет учета доходов'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка,,,,, Ложь);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СчетУчетаЗапасов", 
		НСтр("ru = 'Счет учета запасов'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка,,,,, Ложь);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СчетУчетаЗатрат", 
		НСтр("ru = 'Счет учета затрат'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка,,,,, Ложь);

	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "НаправлениеДеятельности",
		НСтр("ru = 'Направление деятельности'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("ПеречислениеСсылка.МетодОценкиЗапасов");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "МетодОценки",
		НСтр("ru = 'Способ списания'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);
		
	ОписаниеТиповКолонка = Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПополненияЗапасов");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СпособПополнения",
		НСтр("ru = 'Способ пополнения'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);

	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Картинка", 
		НСтр("ru = 'Картинка'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока1000, ОписаниеТиповСтрока1000);
		
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ЭтоУслуга", 
		НСтр("ru = 'Это услуга'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповБулево, ОписаниеТиповБулево,,,,,);

	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.КатегорииНоменклатуры");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "КатегорияНоменклатуры", 
		НСтр("ru = 'Категория номенклатуры'", ОбщегоНазначения.КодОсновногоЯзыка()), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);   	

	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СтавкаНДС",
		НСтр("ru = 'Ставка НДС'"), ОписаниеТиповСтрока50, ОписаниеТиповКолонка);

	// Характеристика
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
			ТаблицаПолейЗагрузки, "ХарактеристикаНаименование", 
			НСтр("ru = 'Характеристика (наименование)'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ОписаниеТиповСтрока150, ОписаниеТиповКолонка, "Характеристика", 1);
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(
			ТаблицаПолейЗагрузки, "ХарактеристикаАртикул", 
			НСтр("ru = 'Характеристика (артикул)'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ОписаниеТиповСтрока25, ОписаниеТиповКолонка, "Характеристика", 2);
		
	КонецЕсли;
	
	// Партия
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии") Тогда
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Партия",
			НСтр("ru = 'Партия (наименование)'"), ОписаниеТиповСтрока150, ОписаниеТиповКолонка);
		
	КонецЕсли;
	
	// Серии номенклатуры
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		
		ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Серия",
			НСтр("ru = 'Серия'"), ОписаниеТиповСтрока1000, ОписаниеТиповКолонка);
		
	КонецЕсли;
	
	// Количество
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Количество", НСтр("ru = 'Количество'"),
		ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_3, , , Истина);

	// Единицы измерения
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения, СправочникСсылка.ЕдиницыИзмерения");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ЕдиницаИзмерения",
		НСтр("ru = 'Ед. изм.'"), ОписаниеТиповСтрока25, ОписаниеТиповКолонка, , , , ,
		ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения"));

	Если НастройкиЗагрузкиДанных.Свойство("ВидОперации") Тогда
		
		Если НастройкиЗагрузкиДанных.ВидОперации = Перечисления.ВидыОперацийКомплектацияЗапасов.Разборка Тогда
			
			// Доля стоимости
			ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ДоляСтоимости", НСтр("ru = 'ДоляСтоимости'"),
				ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_2, , , Ложь);
				
		Иначе
			
			// Страна и ГТД
			Если ПолучитьФункциональнуюОпцию("УчетГТД") Тогда

				ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.СтраныМира");
				ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "СтранаПроисхождения",
					НСтр("ru = 'Страна происхождения'"), ОписаниеТиповСтрока100, ОписаниеТиповКолонка);

				ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.НомераГТД");
				ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "НомерГТД",
					НСтр("ru = 'Номер ГТД'"), ОписаниеТиповСтрока30, ОписаниеТиповКолонка);

			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли; 	
	
КонецПроцедуры

// Добавляет в структуру НастройкиЗагрузкиДанных адреса макетов-образцов загрузки данных
//
// Параметры:
//   НастройкиЗагрузкиДанных - структура настроек загрузки
//   УникальныйИдентификатор - уникальный идентификатор формы
//
Процедура ПриОпределенииОбразцовЗагрузкиДанных(НастройкиЗагрузкиДанных, УникальныйИдентификатор) Экспорт
	
	Образец_xlsx = ПолучитьМакет("ОбразецЗагрузкиДанных_xlsx");
	ОбразецЗагрузкиДанных_xlsx = ПоместитьВоВременноеХранилище(Образец_xlsx, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_xlsx", ОбразецЗагрузкиДанных_xlsx);
	
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_mxl", "ОбразецЗагрузкиДанных_mxl");
	
	Образец_csv = ПолучитьМакет("ОбразецЗагрузкиДанных_csv");
	ОбразецЗагрузкиДанных_csv = ПоместитьВоВременноеХранилище(Образец_csv, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_csv", ОбразецЗагрузкиДанных_csv);
	
КонецПроцедуры

// Сопоставляет загружаемые данные из внешнего источника с данными в базе
//
// Параметры:
//   ПараметрыСопоставления - структура, параметры сопоставления загружаемых данных
//   АдресРезультата - адрес, куда будет помещена таблица сопоставления данных
//
Процедура СопоставитьЗагружаемыеДанныеИзВнешнегоИсточника(ПараметрыСопоставления, АдресРезультата) Экспорт
	
	ТаблицаСопоставленияДанных	= ПараметрыСопоставления.ТаблицаСопоставленияДанных;
	РазмерТаблицыДанных			= ТаблицаСопоставленияДанных.Количество();
	НастройкиЗагрузкиДанных		= ПараметрыСопоставления.НастройкиЗагрузкиДанных;
	НастройкиПоиска				= НастройкиЗагрузкиДанных.НастройкиПоиска;
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	ТаблицаДублирующихСтрок = ЗагрузкаДанныхИзВнешнегоИсточника.ПустаяТаблицаДублирующихСтрокНоменклатуры();
	НастройкиПоиска.Вставить("ТаблицаДублирующихСтрок", ТаблицаДублирующихСтрок);
	
	// ТаблицаСопоставленияДанных - Тип ДанныеФормыКоллекция
	Для каждого СтрокаТаблицыФормы Из ТаблицаСопоставленияДанных Цикл
		
		НоменклатураСопоставлена = Ложь;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "НоменклатураПоставщиков") 
			И (ЗначениеЗаполнено(СтрокаТаблицыФормы.АртикулПоставщика)
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицыФормы.Идентификатор)
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураПоставщиковНаименование)) Тогда
		
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНоменклатуруПоставщиков(СтрокаТаблицыФормы, НастройкиЗагрузкиДанных);	
			НоменклатураСопоставлена = ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураПоставщиков);
		КонецЕсли;
		
		Если НЕ НоменклатураСопоставлена Тогда
		
			// Номенклатура по ШтрихКоду, Артикулу, Наименованию, НаименованиеПолное
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНоменклатуру(СтрокаТаблицыФормы, НастройкиПоиска);
		
		КонецЕсли; 
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "Родитель")
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "РодительНаименование")
			И ЗначениеЗаполнено(СтрокаТаблицыФормы.РодительНаименование) Тогда
			
			ЗначениеПоУмолчанию = Справочники.Номенклатура.ПустаяСсылка();
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьРодителяНоменклатуры(СтрокаТаблицыФормы.Родитель, "", СтрокаТаблицыФормы.РодительНаименование, ЗначениеПоУмолчанию);
			
		КонецЕсли; 
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "ЭтоУслуга_ВходящиеДанные") Тогда
			
			СтрокаТаблицыФормы.ЭтоУслуга = СтрокаТаблицыФормы.ЭтоУслуга_ВходящиеДанные;
			
		КонецЕсли; 
		
		СтрокаТаблицыФормы.СчетУчетаЗапасов = ПланыСчетов.Управленческий.СырьеИМатериалы;
		СтрокаТаблицыФормы.СчетУчетаЗатрат = ?(ПолучитьФункциональнуюОпцию("ИспользоватьПодсистемуПроизводство"), 
			ПланыСчетов.Управленческий.НезавершенноеПроизводство, ПланыСчетов.Управленческий.КоммерческиеРасходы);
		СтрокаТаблицыФормы.СчетУчетаДоходов = ?(СтрокаТаблицыФормы.Номенклатура.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"), 
			ПланыСчетов.Управленческий.ПрочиеДоходы, ПланыСчетов.Управленческий.ПустаяСсылка());
			
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "НаправлениеДеятельности") Тогда
				
			ЗначениеПоУмолчанию = Справочники.НаправленияДеятельности.Прочее;
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНаправлениеДеятельности(СтрокаТаблицыФормы.НаправлениеДеятельности, СтрокаТаблицыФормы.НаправлениеДеятельности_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "МетодОценки") Тогда
				
			ЗначениеПоУмолчанию = Перечисления.МетодОценкиЗапасов.ПоСредней;
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьМетодОценки(СтрокаТаблицыФормы.МетодОценки, СтрокаТаблицыФормы.МетодОценки_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицыФормы, "СпособПополнения") Тогда
				
			ЗначениеПоУмолчанию = Перечисления.СпособыПополненияЗапасов.Закупка;
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСпособПополнения(СтрокаТаблицыФормы.СпособПополнения, СтрокаТаблицыФормы.СпособПополнения_ВходящиеДанные, ЗначениеПоУмолчанию);
			
		КонецЕсли;
		
		Если ПолноеИмяОбъектаЗаполнения = "Документ.КомплектацияЗапасов.ТабличнаяЧасть.Запасы" Тогда
			
			Если СтрокаТаблицыФормы.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
				
				СтрокаТаблицыФормы.Номенклатура = Неопределено;
				
			КонецЕсли;
			
			Если НЕ НоменклатураСопоставлена И ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") И ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
				
				// Характеристика по Владельцу и Наименованию
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьХарактеристику(СтрокаТаблицыФормы);
				
			КонецЕсли;
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьПартии") Тогда
				
				Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
					
					// Партия по Владельцу и Наименованию
					ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьПартию(СтрокаТаблицыФормы.Партия, СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.Штрихкод, СтрокаТаблицыФормы.Партия_ВходящиеДанные);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// Серии номенклатуры
			Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
				
				Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) 
					И  ЗначениеЗаполнено(СтрокаТаблицыФормы.Серия_ВходящиеДанные) Тогда
					
					ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСерия(СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.Серия, СтрокаТаблицыФормы.Серия_ВходящиеДанные);
					
				КонецЕсли;
				
			КонецЕсли; 
			
		КонецЕсли;
		
		// Количество
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.Количество, СтрокаТаблицыФормы.Количество_ВходящиеДанные, 1);
		
		// Единицы измерения по Наименованию (так же рассмотреть возможность прикрутить пользовательские ЕИ)
		ЗначениеПоУмолчанию = ?(ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура), СтрокаТаблицыФормы.Номенклатура.ЕдиницаИзмерения, Справочники.КлассификаторЕдиницИзмерения.шт);
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьЕдиницыИзмерения(СтрокаТаблицыФормы.Номенклатура, СтрокаТаблицыФормы.ЕдиницаИзмерения, СтрокаТаблицыФормы.ЕдиницаИзмерения_ВходящиеДанные, ЗначениеПоУмолчанию);
		
		Если НастройкиЗагрузкиДанных.Свойство("ВидОперации") Тогда
			
			Если НастройкиЗагрузкиДанных.ВидОперации = Перечисления.ВидыОперацийКомплектацияЗапасов.Разборка Тогда    				
				
				// Доля стоимости
				ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.ДоляСтоимости, СтрокаТаблицыФормы.ДоляСтоимости_ВходящиеДанные, 1);
				
			Иначе
				
				// Страна и ГТД
				Если ПолучитьФункциональнуюОпцию("УчетГТД") Тогда
					
					ЗначениеПоУмолчанию = Неопределено;
					Если ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура) Тогда
						
						ЗначениеПоУмолчанию = СтрокаТаблицыФормы.Номенклатура.СтранаПроисхождения;
						
					КонецЕсли;
					
					ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьСтрануПроисхождения(СтрокаТаблицыФормы.СтранаПроисхождения, СтрокаТаблицыФормы.СтранаПроисхождения_ВходящиеДанные, ЗначениеПоУмолчанию);
					
					Если ЗначениеЗаполнено(СтрокаТаблицыФормы.СтранаПроисхождения)
						И СтрокаТаблицыФормы.СтранаПроисхождения <> Справочники.СтраныМира.Россия Тогда
						
						ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьНомерГТД(СтрокаТаблицыФормы.НомерГТД, СтрокаТаблицыФормы.НомерГТД_ВходящиеДанные);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли; 
		
		ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения);
		
		ЗагрузкаДанныхИзВнешнегоИсточника.ПрогрессСопоставленияДанных(ТаблицаСопоставленияДанных.Индекс(СтрокаТаблицыФормы), РазмерТаблицыДанных);
		
	КонецЦикла;
	
	ТаблицаСопоставленияДанных.ЗагрузитьКолонку(ТаблицаДублирующихСтрок.ВыгрузитьКолонку("КлючСвязи"), "_КлючСвязи");
	ПоместитьВоВременноеХранилище(ТаблицаСопоставленияДанных, АдресРезультата);
	
КонецПроцедуры

// Проверяет корректность данных в строке табличной части "Запасы"
//
// Параметры:
//   СтрокаТаблицыФормы - строка таблицы формы для проверки заполнения
//   ПолноеИмяОбъектаЗаполнения - строка, полное имя объекта для заполнения
//
Процедура ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения = "") Экспорт

	ИмяСлужебногоПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяСлужебногоПоляЗагрузкаВПриложениеВозможна();
	НоменклатураЗаполнена = ЗначениеЗаполнено(СтрокаТаблицыФормы.Номенклатура);
	ЗагрузкаНоменклатурыВозможна = Ложь;
	Если НЕ НоменклатураЗаполнена Тогда
		ЗагрузкаНоменклатурыВозможна = (ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураНаименование) 
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицыФормы.НоменклатураНаименованиеПолное));
	КонецЕсли;

	Если ПолноеИмяОбъектаЗаполнения = "Документ.КомплектацияЗапасов.ТабличнаяЧасть.Запасы" Тогда
		
		Если НоменклатураЗаполнена Тогда

			СтрокаТаблицыФормы[ИмяСлужебногоПоля] = СтрокаТаблицыФормы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас
				И Не СтрокаТаблицыФормы.Номенклатура.ЭтоНабор // Исключая наборы
				И СтрокаТаблицыФормы.Количество <> 0;
			СтрокаТаблицыФормы._СтрокаСопоставлена = НоменклатураЗаполнена;
				
		Иначе
			
			СтрокаТаблицыФормы[ИмяСлужебногоПоля] = ЗагрузкаНоменклатурыВозможна И НЕ СтрокаТаблицыФормы.ЭтоУслуга;

		КонецЕсли;    			

	КонецЕсли;   			

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КомплектацияЗапасов";
	КомандаПечати.Представление = НСтр("ru = 'Комплектация'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//	МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//	ПараметрыПечати - Структура - Структура дополнительных параметров печати
// ИСХОДЯЩИЕ:
//	КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//	ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//	ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектацияЗапасов") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КомплектацияЗапасов",
				НСтр("ru = 'Комплектация'"),
				ПечатьКомплектацияЗапасов(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;

	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);

КонецПроцедуры // Печать()

#КонецОбласти 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область Проведение

#Область Запасы

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыСборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоляПолученияОстатков.Организация КАК Организация,
	|	ПоляПолученияОстатков.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПоляПолученияОстатков.СчетУчета КАК СчетУчета,
	|	ПоляПолученияОстатков.Номенклатура КАК Номенклатура,
	|	ПоляПолученияОстатков.Характеристика КАК Характеристика,
	|	ПоляПолученияОстатков.Партия КАК Партия,
	|	ПоляПолученияОстатков.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПоляПолученияОстатков.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ИЗ
	|	ЗапасыДляПолученияОстатков КАК ПоляПолученияОстатков";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ВЗЗапасыОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			&МоментКонтроля,
	|			(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя, ЗаказНаПроизводство) В
	|				(ВЫБРАТЬ
	|					ТаблицаЗапасы.Организация,
	|					ТаблицаЗапасы.СтруктурнаяЕдиница,
	|					ТаблицаЗапасы.СчетУчета,
	|					ТаблицаЗапасы.Номенклатура,
	|					ТаблицаЗапасы.Характеристика,
	|					ТаблицаЗапасы.Партия,
	|					ТаблицаЗапасы.ЗаказПокупателя,
	|					ТаблицаЗапасы.ЗаказНаПроизводство
	|				ИЗ
	|					ЗапасыДляПолученияОстатков КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|		ЗапасыОстатки.СуммаОстаток КАК СуммаОстаток
	|	ИЗ
	|		ВЗЗапасыОстатки КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ДвиженияДокументаЗапасы.ЗаказНаПроизводство,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &ПериодКонтроля) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаКомплектацияЗапасов);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	
	ВременнаяТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.СкопироватьКолонки();
	
	СтруктураДляПоиска = Новый Структура;
	СебестоимостьКомплекта = 0;
	
	Для каждого СтрокаТаблицы Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы Цикл
		
		СтруктураДляПоиска.Очистить();
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицы.Партия);
		СтруктураДляПоиска.Вставить("ЗаказПокупателя", СтрокаТаблицы.ЗаказПокупателя);
		СтруктураДляПоиска.Вставить("ЗаказНаПроизводство", СтрокаТаблицы.ЗаказНаПроизводство);
		
		КоличествоТребуется = СтрокаТаблицы.Количество;
		
		Если КоличествоТребуется > 0 Тогда
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуется Тогда

				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуется / КоличествоОстаток , 2, 1);

				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуется;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;

			ИначеЕсли КоличествоОстаток = КоличествоТребуется Тогда

				СуммаКСписанию = СуммаОстаток;

				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;

			Иначе
				
				СуммаКСписанию = 0;
				
			КонецЕсли;
	
			// Расход.
			НоваяСтрокаРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТаблицы);
			НоваяСтрокаРасход.Сумма = СуммаКСписанию;
			НоваяСтрокаРасход.Количество = КоличествоТребуется;
			
			// Приход.
			НоваяСтрокаПриход = ВременнаяТаблицаЗапасы.Добавить();
			ПроизводствоСервер.ЗаполнитьДвижениеЗапасыЗеркально(НоваяСтрокаПриход, НоваяСтрокаРасход);
			НоваяСтрокаПриход.Количество = 0;
			НоваяСтрокаПриход.ЗатратыНаВыпуск = Ложь;
			
			// Управленческий
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, НоваяСтрокаПриход);
			КонецЕсли;
			
			СебестоимостьКомплекта = СебестоимостьКомплекта + СуммаКСписанию;
			
		КонецЕсли;
					
	КонецЦикла;
	
	Для каждого СтрокаТаблицы Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыПродукция Цикл
		
		НоваяСтрокаПриход = ВременнаяТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТаблицы);
		
	КонецЦикла;  
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", ВременнаяТаблицаЗапасы);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Удалить("ТаблицаЗапасыПродукция");
	
КонецПроцедуры // СформироватьТаблицаЗапасыЗапасыСборкаПеремещение()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыРазборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоляПолученияОстатков.Организация КАК Организация,
	|	ПоляПолученияОстатков.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПоляПолученияОстатков.СчетУчета КАК СчетУчета,
	|	ПоляПолученияОстатков.Номенклатура КАК Номенклатура,
	|	ПоляПолученияОстатков.Характеристика КАК Характеристика,
	|	ПоляПолученияОстатков.Партия КАК Партия,
	|	ПоляПолученияОстатков.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПоляПолученияОстатков.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ИЗ
	|	ЗапасыДляПолученияОстатков КАК ПоляПолученияОстатков";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;

	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ВЗЗапасыОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			&МоментКонтроля,
	|			(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя, ЗаказНаПроизводство) В
	|				(ВЫБРАТЬ
	|					ТаблицаЗапасы.Организация,
	|					ТаблицаЗапасы.СтруктурнаяЕдиница,
	|					ТаблицаЗапасы.СчетУчета,
	|					ТаблицаЗапасы.Номенклатура,
	|					ТаблицаЗапасы.Характеристика,
	|					ТаблицаЗапасы.Партия,
	|					ТаблицаЗапасы.ЗаказПокупателя,
	|					ТаблицаЗапасы.ЗаказНаПроизводство
	|				ИЗ
	|					ЗапасыДляПолученияОстатков КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|		ЗапасыОстатки.СуммаОстаток КАК СуммаОстаток
	|	ИЗ
	|		ВЗЗапасыОстатки КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ДвиженияДокументаЗапасы.ЗаказНаПроизводство,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Сумма, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &ПериодКонтроля) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.ЗаказНаПроизводство";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаКомплектацияЗапасов);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	
	ВременнаяТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.СкопироватьКолонки();
	
	СтруктураДляПоиска = Новый Структура;
	
	Для каждого СтрокаТаблицы Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыПродукция Цикл
		
		КоличествоТребуется = СтрокаТаблицы.Количество;
		
		СтруктураДляПоиска.Очистить();
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицы.Партия);
		СтруктураДляПоиска.Вставить("ЗаказПокупателя", СтрокаТаблицы.ЗаказПокупателя);
		СтруктураДляПоиска.Вставить("ЗаказНаПроизводство", СтрокаТаблицы.ЗаказНаПроизводство);
		
		МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
		
		КоличествоОстаток = 0;
		СебестоимостьКомплекта = 0;
		
		Если МассивСтрокОстатков.Количество() > 0 Тогда
			КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
			СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
		КонецЕсли;
		
		Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуется Тогда

			СебестоимостьКомплекта = Окр(СуммаОстаток * КоличествоТребуется / КоличествоОстаток , 2, 1);

			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуется;
			МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СебестоимостьКомплекта;

		ИначеЕсли КоличествоОстаток = КоличествоТребуется Тогда

			СебестоимостьКомплекта = СуммаОстаток;

			МассивСтрокОстатков[0].КоличествоОстаток = 0;
			МассивСтрокОстатков[0].СуммаОстаток = 0;

		Иначе
			
			СебестоимостьКомплекта = 0;
			
		КонецЕсли;
		
		СтрокаТаблицыКомплект = СтрокаТаблицы;
		
	КонецЦикла;
	
	ВсегоДолей = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Итог("ДоляСтоимости");
	ОсталосьСтрок = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Количество();
	
	Для каждого СтрокаТаблицы Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы Цикл
		
		Если ВсегоДолей = 0 Тогда
			СуммаКСписанию = Окр(СебестоимостьКомплекта / ОсталосьСтрок, 2);
			КоличествоКСписанию = Окр(КоличествоТребуется / ОсталосьСтрок, 3);
		Иначе
			СуммаКСписанию = Окр(СебестоимостьКомплекта * СтрокаТаблицы.ДоляСтоимости / ВсегоДолей, 2);
			КоличествоКСписанию = Окр(КоличествоТребуется * СтрокаТаблицы.ДоляСтоимости / ВсегоДолей, 3);
			ВсегоДолей = ВсегоДолей - СтрокаТаблицы.ДоляСтоимости;
		КонецЕсли; 
		ОсталосьСтрок = ОсталосьСтрок - 1;
		СебестоимостьКомплекта = СебестоимостьКомплекта - СуммаКСписанию;
		КоличествоТребуется = КоличествоТребуется - КоличествоКСписанию;
		
		// Приход
		НоваяСтрокаПриход = ВременнаяТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТаблицы);
		НоваяСтрокаПриход.Сумма = СуммаКСписанию;
		НоваяСтрокаПриход.Количество = 0;
		НоваяСтрокаПриход.ЗатратыНаВыпуск = Ложь;
		
		// Расход
		НоваяСтрокаРасход = ВременнаяТаблицаЗапасы.Вставить(ВременнаяТаблицаЗапасы.Количество() - 1);
		ПроизводствоСервер.ЗаполнитьДвижениеЗапасыЗеркально(НоваяСтрокаРасход, НоваяСтрокаПриход);
		НоваяСтрокаРасход.Количество = КоличествоКСписанию;
		НоваяСтрокаРасход.ЗатратыНаВыпуск = Истина;
		
		// Управленческий
		Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
			СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, НоваяСтрокаПриход);
		КонецЕсли;
			
		// Приход количества
		НоваяСтрокаПриход = ВременнаяТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТаблицы);
		НоваяСтрокаПриход.Сумма = 0;
		НоваяСтрокаПриход.ЗатратыНаВыпуск = Ложь;
		
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", ВременнаяТаблицаЗапасы);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Удалить("ТаблицаЗапасыПродукция");
	
КонецПроцедуры // СформироватьТаблицаЗапасыЗапасыРазборка()

#КонецОбласти 

#Область СуммовойУчетВРознице

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСуммовойУчетВРозницеСборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаКомплектацияЗапасов);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КомплектацияВРознице", НСтр("ru = 'Комплектация в рознице'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Валюта КАК Валюта,
	|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВал,
	|	ТаблицаДокумента.Сумма КАК СуммаДляОстатка,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВалДляОстатка,
	|	0 КАК Себестоимость,
	|	ТаблицаДокумента.СодержаниеПроводки КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаСуммовойУчетВРознице
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаШапка.Период КАК Дата,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|		ТаблицаШапка.Организация КАК Организация,
	|		ТаблицаШапка.РозничныйВидЦен КАК РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|		ТаблицаДокумента.Характеристика КАК Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены КАК Валюта,
	|		ТаблицаШапка.СчетУчетаВРознице КАК СчетУчета,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК СуммаВал,
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК СуммДляОстатка,
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК СуммаВалДляОстатка,
	|		&КомплектацияВРознице КАК СодержаниеПроводки
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаШапка.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы,
	|							ВременнаяТаблицаШапка)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыУпрВалюты,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						ТаблицаШапка.ВалютаЦены
	|					ИЗ
	|						ВременнаяТаблицаШапка КАК ТаблицаШапка)) КАК КурсыЦенВалюты,
	|		ВременнаяТаблицаШапка КАК ТаблицаШапка
	|	ГДЕ
	|		ТаблицаШапка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаШапка.Период,
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаШапка.Организация,
	|		ТаблицаШапка.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены,
	|		ТаблицаШапка.СчетУчетаВРознице
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаШапка.Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|		ТаблицаШапка.НомерСтроки,
	|		ТаблицаШапка.Организация,
	|		ТаблицаШапка.РозничныйВидЦен,
	|		ТаблицаШапка.Номенклатура,
	|		ТаблицаШапка.Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены,
	|		ТаблицаШапка.СчетУчетаВРознице,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		&КомплектацияВРознице
	|	ИЗ
	|		ВременнаяТаблицаШапка КАК ТаблицаШапка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаШапка.РозничныйВидЦен,
	|							ВременнаяТаблицаШапка.Номенклатура,
	|							ВременнаяТаблицаШапка.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаШапка)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаШапка.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаШапка.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыУпрВалюты,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						ТаблицаШапка.ВалютаЦены
	|					ИЗ
	|						ВременнаяТаблицаШапка КАК ТаблицаШапка)) КАК КурсыЦенВалюты
	|	ГДЕ
	|		ТаблицаШапка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаШапка.Период,
	|		ТаблицаШапка.НомерСтроки,
	|		ТаблицаШапка.Организация,
	|		ТаблицаШапка.РозничныйВидЦен,
	|		ТаблицаШапка.Номенклатура,
	|		ТаблицаШапка.Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены,
	|		ТаблицаШапка.СчетУчетаВРознице) КАК ТаблицаДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаСуммовойУчетВРознице.Организация КАК Организация,
	|	ВременнаяТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаСуммовойУчетВРознице.Валюта КАК Валюта
	|ИЗ
	|	ВременнаяТаблицаСуммовойУчетВРознице КАК ВременнаяТаблицаСуммовойУчетВРознице";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СуммовойУчетВРознице");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыСуммовойУчетВРознице(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммовойУчетВРознице", МассивРезультатов[НомерЗапроса].Выгрузить());
	СформироватьДвиженияУправленческийСуммовойУчетВРознице(СтруктураДополнительныеСвойства);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСуммовойУчетВРозницеРазборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаКомплектацияЗапасов);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КомплектацияВРознице", НСтр("ru = 'Комплектация в рознице'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Валюта КАК Валюта,
	|	ТаблицаДокумента.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВал,
	|	ТаблицаДокумента.Сумма КАК СуммаДляОстатка,
	|	ТаблицаДокумента.СуммаВал КАК СуммаВалДляОстатка,
	|	0 КАК Себестоимость,
	|	ТаблицаДокумента.СодержаниеПроводки КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаСуммовойУчетВРознице
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаШапка.Период КАК Дата,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		ТаблицаШапка.НомерСтроки КАК НомерСтроки,
	|		ТаблицаШапка.Организация КАК Организация,
	|		ТаблицаШапка.РозничныйВидЦен КАК РозничныйВидЦен,
	|		ТаблицаШапка.Номенклатура КАК Номенклатура,
	|		ТаблицаШапка.Характеристика КАК Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены КАК Валюта,
	|		ТаблицаШапка.СчетУчетаВРознице КАК СчетУчета,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК СуммаВал,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК СуммДляОстатка,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаШапка.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))) КАК СуммаВалДляОстатка,
	|		&КомплектацияВРознице КАК СодержаниеПроводки
	|	ИЗ
	|		ВременнаяТаблицаШапка КАК ТаблицаШапка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаШапка.РозничныйВидЦен,
	|							ВременнаяТаблицаШапка.Номенклатура,
	|							ВременнаяТаблицаШапка.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаШапка)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаШапка.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаШапка.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыУпрВалюты,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						ТаблицаШапка.ВалютаЦены
	|					ИЗ
	|						ВременнаяТаблицаШапка КАК ТаблицаШапка)) КАК КурсыЦенВалюты
	|	ГДЕ
	|		ТаблицаШапка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаШапка.Период,
	|		ТаблицаШапка.НомерСтроки,
	|		ТаблицаШапка.Организация,
	|		ТаблицаШапка.РозничныйВидЦен,
	|		ТаблицаШапка.Номенклатура,
	|		ТаблицаШапка.Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены,
	|		ТаблицаШапка.СчетУчетаВРознице
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаШапка.Период,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаШапка.Организация,
	|		ТаблицаШапка.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены,
	|		ТаблицаШапка.СчетУчетаВРознице,
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество * КурсыЦенВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыЦенВалюты.Кратность) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		-СУММА(ВЫРАЗИТЬ(ЦеныНоменклатурыСрезПоследних.Цена * ТаблицаДокумента.Количество / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2))),
	|		&КомплектацияВРознице
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&МоментВремени,
	|					(ВидЦен, Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							ВременнаяТаблицаШапка.РозничныйВидЦен,
	|							ВременнаяТаблицаЗапасы.Номенклатура,
	|							ВременнаяТаблицаЗапасы.Характеристика
	|						ИЗ
	|							ВременнаяТаблицаЗапасы,
	|							ВременнаяТаблицаШапка)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО ТаблицаДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				И ТаблицаДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыУпрВалюты,
	|		РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						ТаблицаШапка.ВалютаЦены
	|					ИЗ
	|						ВременнаяТаблицаШапка КАК ТаблицаШапка)) КАК КурсыЦенВалюты,
	|		ВременнаяТаблицаШапка КАК ТаблицаШапка
	|	ГДЕ
	|		ТаблицаШапка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаШапка.Период,
	|		ТаблицаДокумента.НомерСтроки,
	|		ТаблицаШапка.Организация,
	|		ТаблицаШапка.РозничныйВидЦен,
	|		ТаблицаДокумента.Номенклатура,
	|		ТаблицаДокумента.Характеристика,
	|		ТаблицаШапка.СтруктурнаяЕдиница,
	|		ТаблицаШапка.ВалютаЦены,
	|		ТаблицаШапка.СчетУчетаВРознице) КАК ТаблицаДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаСуммовойУчетВРознице.Организация КАК Организация,
	|	ВременнаяТаблицаСуммовойУчетВРознице.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаСуммовойУчетВРознице.Валюта КАК Валюта
	|ИЗ
	|	ВременнаяТаблицаСуммовойУчетВРознице КАК ВременнаяТаблицаСуммовойУчетВРознице";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СуммовойУчетВРознице");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыСуммовойУчетВРознице(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммовойУчетВРознице", МассивРезультатов[НомерЗапроса].Выгрузить());
	СформироватьДвиженияУправленческийСуммовойУчетВРознице(СтруктураДополнительныеСвойства);
	
КонецПроцедуры

Процедура СформироватьДвиженияУправленческийСуммовойУчетВРознице(СтруктураДополнительныеСвойства)
		
	ИзменениеСуммы = 0;
	Для каждого СтрокаТаблицы Из СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммовойУчетВРознице Цикл
		Если СтрокаТаблицы.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			ИзменениеСуммы = ИзменениеСуммы + СтрокаТаблицы.Сумма;
		Иначе
			ИзменениеСуммы = ИзменениеСуммы - СтрокаТаблицы.Сумма;
		КонецЕсли; 
	КонецЦикла;
	Если ИзменениеСуммы <> 0 Тогда
		СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицы, "Организация, Период");
		СчетаУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТаблицы.СтруктурнаяЕдиница, "СчетУчетаВРознице, СчетУчетаНаценки", Истина);
		СтрокаТаблицаУправленческий.СчетДт = СчетаУчета.СчетУчетаВРознице;
		СтрокаТаблицаУправленческий.СчетКт = СчетаУчета.СчетУчетаНаценки;
		СтрокаТаблицаУправленческий.СценарийПланирования = Справочники.СценарииПланирования.Фактический;
		СтрокаТаблицаУправленческий.Содержание = НСтр("ru = 'Торговая наценка'");
		СтрокаТаблицаУправленческий.Сумма = ИзменениеСуммы;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область ИнициализацияДанных

Процедура ИнициализироватьДанныеДокументаСборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.СчетУчетаЗапасов КАК СчетУчета,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство,
	|	ВременнаяТаблицаЗапасы.Количество КАК Количество,
	|	0 КАК Сумма,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК КоррСчетУчета,
	|	ВременнаяТаблицаШапка.Номенклатура КАК КоррНоменклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК КоррХарактеристика,
	|	ВременнаяТаблицаШапка.Партия КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК КоррСпецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК КоррЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК КоррЗаказНаПроизводство,
	|	ИСТИНА КАК ЗатратыНаВыпуск,
	|	ВременнаяТаблицаЗапасы.Содержание КАК СодержаниеПроводки,
	|	ВременнаяТаблицаЗапасы.Содержание КАК Содержание,
	|	ВременнаяТаблицаШапка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК СчетКт,
	|	ВременнаяТаблицаЗапасы.СчетУчетаЗапасов КАК СчетДт
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК СчетУчета,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство,
	|	ВременнаяТаблицаШапка.Количество КАК Количество,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК КоррСтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК КоррСчетУчета,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК КоррНоменклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК КоррХарактеристика,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК КоррСпецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК КоррЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК КоррЗаказНаПроизводство,
	|	ЛОЖЬ КАК ЗатратыНаВыпуск,
	|	ВременнаяТаблицаШапка.Содержание КАК СодержаниеПроводки,
	|	ВременнаяТаблицаШапка.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка КАК Ячейка,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|	И ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВременнаяТаблицаШапка.ОрдерныйСклад,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия,
	|	СУММА(ВременнаяТаблицаШапка.Количество)
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|	И ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВременнаяТаблицаШапка.ОрдерныйСклад,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	СУММА(ВременнаяТаблицаШапка.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	СУММА(ВременнаяТаблицаШапка.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ОрдерныйСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ОрдерныйСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Приход) КАК Операция,
	|	ВременнаяТаблицаСерииНоменклатурыПродукция.Серия КАК Серия,
	|	ВременнаяТаблицаСерииНоменклатурыПродукция.ОстаткиСерийНоменклатуры КАК ОстаткиСерийНоменклатуры,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаСерииНоменклатурыПродукция.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВременнаяТаблицаСерииНоменклатурыПродукция.Количество
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатурыПродукция КАК ВременнаяТаблицаСерииНоменклатурыПродукция
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВременнаяТаблицаШапка.Период,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Расход),
	|	ВременнаяТаблицаСерииНоменклатуры.Серия,
	|	ВременнаяТаблицаСерииНоменклатуры.ОстаткиСерийНоменклатуры,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаСерииНоменклатуры.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВременнаяТаблицаСерииНоменклатуры.Количество
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатуры КАК ВременнаяТаблицаСерииНоменклатуры
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = ВременнаяТаблицаСерииНоменклатуры.КлючСвязи,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВременнаяТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ВременнаяТаблицаЗапасы.НомерГТД КАК НомерГТД,
	|	ВременнаяТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаЗапасы.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И ВременнаяТаблицаЗапасы.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И ВременнаяТаблицаЗапасы.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия,
	|	ВременнаяТаблицаЗапасы.НомерГТД,
	|	ВременнаяТаблицаЗапасы.СтранаПроисхождения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ВременнаяТаблицаШапка.НомерСтроки),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия,
	|	ВременнаяТаблицаШапка.НомерГТД,
	|	ВременнаяТаблицаШапка.СтранаПроисхождения,
	|	СУММА(ВременнаяТаблицаШапка.Количество)
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И ВременнаяТаблицаШапка.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И ВременнаяТаблицаШапка.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия,
	|	ВременнаяТаблицаШапка.НомерГТД,
	|	ВременнаяТаблицаШапка.СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.СчетУчетаЗапасов КАК СчетУчета,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство
	|ПОМЕСТИТЬ ЗапасыДляПолученияОстатков
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Формирование проводок документа.
	ПроведениеДокументовУНФ.СформироватьТаблицуПроводок(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыПродукция", МассивРезультатов[1].Выгрузить());
	СформироватьТаблицаЗапасыСборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСуммовойУчетВРозницеСборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыпускПродукции", МассивРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", МассивРезультатов[4].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКРасходуСоСкладов", МассивРезультатов[5].Выгрузить());
	
	ТаблицаСерииНоменклатуры = МассивРезультатов[6].Выгрузить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", ТаблицаСерииНоменклатуры);
	
	ПараметрыОтбора = Новый Структура("ОстаткиСерийНоменклатуры", Истина);
	ОстаткиСерийНоменклатурыСтроки = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатуры", ТаблицаСерииНоменклатуры.Скопировать(ОстаткиСерийНоменклатурыСтроки));
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", МассивРезультатов[7].Выгрузить());
	
КонецПроцедуры // ИнициализироватьДанныеДокументаСборка()

Процедура ИнициализироватьДанныеДокументаРазборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.СчетУчетаЗапасов КАК СчетУчета,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство,
	|	ВременнаяТаблицаЗапасы.Количество КАК Количество,
	|	0 КАК Сумма,
	|	ВременнаяТаблицаЗапасы.ДоляСтоимости КАК ДоляСтоимости,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК КоррСтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК КоррСчетУчета,
	|	ВременнаяТаблицаШапка.Номенклатура КАК КоррНоменклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК КоррХарактеристика,
	|	ВременнаяТаблицаШапка.Партия КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК КоррСпецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК КоррЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК КоррЗаказНаПроизводство,
	|	ИСТИНА КАК ЗатратыНаВыпуск,
	|	ВременнаяТаблицаЗапасы.Содержание КАК СодержаниеПроводки,
	|	ВременнаяТаблицаЗапасы.Содержание КАК Содержание,
	|	ВременнаяТаблицаШапка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК СчетКт,
	|	ВременнаяТаблицаЗапасы.СчетУчетаЗапасов КАК СчетДт
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК СчетУчета,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство,
	|	ВременнаяТаблицаШапка.Количество КАК Количество,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК КоррСтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка) КАК КоррСчетУчета,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК КоррНоменклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК КоррХарактеристика,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК КоррПартия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК КоррСпецификация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК КоррЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК КоррЗаказНаПроизводство,
	|	ЛОЖЬ КАК ЗатратыНаВыпуск,
	|	ВременнаяТаблицаШапка.Содержание КАК СодержаниеПроводки,
	|	ВременнаяТаблицаШапка.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка КАК Ячейка,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|	И ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВременнаяТаблицаШапка.ОрдерныйСклад,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия,
	|	СУММА(ВременнаяТаблицаШапка.Количество)
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|	И ВременнаяТаблицаШапка.ТипСтруктурнойЕдиницы <> ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВременнаяТаблицаШапка.ОрдерныйСклад,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка) КАК Спецификация,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	СУММА(ВременнаяТаблицаШапка.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ОрдерныйСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.ОрдерныйСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК ДатаСобытия,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Расход) КАК Операция,
	|	ВременнаяТаблицаСерииНоменклатурыПродукция.Серия КАК Серия,
	|	ВременнаяТаблицаСерииНоменклатурыПродукция.ОстаткиСерийНоменклатуры КАК ОстаткиСерийНоменклатуры,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаСерииНоменклатурыПродукция.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВременнаяТаблицаСерииНоменклатурыПродукция.Количество
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатурыПродукция КАК ВременнаяТаблицаСерииНоменклатурыПродукция
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаШапка.Период,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийНоменклатуры.Приход),
	|	ВременнаяТаблицаСерииНоменклатуры.Серия,
	|	ВременнаяТаблицаСерииНоменклатуры.ОстаткиСерийНоменклатуры,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.Ячейка,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаСерииНоменклатуры.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВременнаяТаблицаСерииНоменклатуры.Количество
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерииНоменклатуры КАК ВременнаяТаблицаСерииНоменклатуры
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = ВременнаяТаблицаСерииНоменклатуры.КлючСвязи,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	НЕ ВременнаяТаблицаШапка.ОрдерныйСклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВременнаяТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаШапка.Период КАК Период,
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ВременнаяТаблицаЗапасы.НомерГТД КАК НомерГТД,
	|	ВременнаяТаблицаЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ВременнаяТаблицаЗапасы.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаЗапасы.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И ВременнаяТаблицаЗапасы.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И ВременнаяТаблицаЗапасы.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия,
	|	ВременнаяТаблицаЗапасы.НомерГТД,
	|	ВременнаяТаблицаЗапасы.СтранаПроисхождения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ВременнаяТаблицаШапка.НомерСтроки),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия,
	|	ВременнаяТаблицаШапка.НомерГТД,
	|	ВременнаяТаблицаШапка.СтранаПроисхождения,
	|	СУММА(ВременнаяТаблицаШапка.Количество)
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ВременнаяТаблицаШапка.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И ВременнаяТаблицаШапка.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И ВременнаяТаблицаШапка.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаШапка.Период,
	|	ВременнаяТаблицаШапка.Организация,
	|	ВременнаяТаблицаШапка.Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика,
	|	ВременнаяТаблицаШапка.Партия,
	|	ВременнаяТаблицаШапка.НомерГТД,
	|	ВременнаяТаблицаШапка.СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Организация КАК Организация,
	|	ВременнаяТаблицаШапка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаШапка.СчетУчетаЗапасов КАК СчетУчета,
	|	ВременнаяТаблицаШапка.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаШапка.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаШапка.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство
	|ПОМЕСТИТЬ ЗапасыДляПолученияОстатков
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка";
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Формирование проводок документа.
	ПроведениеДокументовУНФ.СформироватьТаблицуПроводок(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", МассивРезультатов[0].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыПродукция", МассивРезультатов[1].Выгрузить());
	СформироватьТаблицаЗапасыРазборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСуммовойУчетВРозницеРазборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства);
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", МассивРезультатов[2].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыпускПродукции", МассивРезультатов[3].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКПоступлениюНаСклады", МассивРезультатов[4].Выгрузить());
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыКРасходуСоСкладов", МассивРезультатов[5].Выгрузить());
	
	ТаблицаСерииНоменклатуры = МассивРезультатов[6].Выгрузить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерииНоменклатуры", ТаблицаСерииНоменклатуры);
	
	ПараметрыОтбора = Новый Структура("ОстаткиСерийНоменклатуры", Истина);
	ОстаткиСерийНоменклатурыСтроки = ТаблицаСерииНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерииНоменклатуры", ТаблицаСерииНоменклатуры.Скопировать(ОстаткиСерийНоменклатурыСтроки));
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", МассивРезультатов[7].Выгрузить());
	
КонецПроцедуры // ИнициализироватьДанныеДокументаРазборка()

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства) Экспорт

	ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылкаКомплектацияЗапасов, "ВидОперации");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	КомплектацияЗапасов.Ссылка КАК Ссылка,
	|	КомплектацияЗапасов.Дата КАК Период,
	|	КомплектацияЗапасов.Проведен КАК Проведен,
	|	КомплектацияЗапасов.ВидОперации КАК ВидОперации,
	|	&Организация КАК Организация,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница.ОрдерныйСклад КАК ОрдерныйСклад,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница.РозничныйВидЦен КАК РозничныйВидЦен,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаЦены,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница.СчетУчетаВРознице КАК СчетУчетаВРознице,
	|	КомплектацияЗапасов.СтруктурнаяЕдиница.СчетУчетаНаценки КАК СчетУчетаНаценки,
	|	КомплектацияЗапасов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА КомплектацияЗапасов.Ячейка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК Ячейка,
	|	КомплектацияЗапасов.Номенклатура КАК Номенклатура,
	|	КомплектацияЗапасов.Номенклатура.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА КомплектацияЗапасов.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА КомплектацияЗапасов.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(КомплектацияЗапасов.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				ТОГДА КомплектацияЗапасов.Количество * ВЫРАЗИТЬ(КомплектацияЗапасов.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ КомплектацияЗапасов.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Количество,
	|	КомплектацияЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КомплектацияЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КомплектацияЗапасов.НомерГТД КАК НомерГТД,
	|	ВЫРАЗИТЬ(&КомплектацияЗапасов КАК СТРОКА(100)) КАК Содержание
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК КомплектацияЗапасов
	|ГДЕ
	|	КомплектацияЗапасов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектацияЗапасовЗапасы.Ссылка КАК Ссылка,
	|	КомплектацияЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	КомплектацияЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	КомплектацияЗапасовЗапасы.Номенклатура.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА КомплектацияЗапасовЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА КомплектацияЗапасовЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(КомплектацияЗапасовЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				ТОГДА КомплектацияЗапасовЗапасы.Количество * ВЫРАЗИТЬ(КомплектацияЗапасовЗапасы.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ КомплектацияЗапасовЗапасы.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Количество,
	|	КомплектацияЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КомплектацияЗапасовЗапасы.ДоляСтоимости КАК ДоляСтоимости,
	|	КомплектацияЗапасовЗапасы.КлючСвязи КАК КлючСвязи,
	|	КомплектацияЗапасовЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КомплектацияЗапасовЗапасы.НомерГТД КАК НомерГТД,
	|	ВЫРАЗИТЬ(&СписаниеКомплектующих КАК СТРОКА(100)) КАК Содержание,
	|	ЕСТЬNULL(ПолитикиУчетаСерий.ПолитикаУчетаСерий, КомплектацияЗапасовЗапасы.Номенклатура.ПолитикаУчетаСерий) КАК ПолитикаУчетаСерий
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.КомплектацияЗапасов.Запасы КАК КомплектацияЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО КомплектацияЗапасовЗапасы.Номенклатура = ПолитикиУчетаСерий.Владелец
	|			И КомплектацияЗапасовЗапасы.Ссылка.СтруктурнаяЕдиница = ПолитикиУчетаСерий.СтруктурнаяЕдиница
	|			И (&Организация = ПолитикиУчетаСерий.Организация)
	|ГДЕ
	|	КомплектацияЗапасовЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектацияЗапасовСерииНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	КомплектацияЗапасовСерииНоменклатуры.Серия КАК Серия,
	|	КомплектацияЗапасовСерииНоменклатуры.КлючСвязи КАК КлючСвязи,
	|	КомплектацияЗапасовСерииНоменклатуры.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА КомплектацияЗапасовСерииНоменклатуры.Ссылка.Номенклатура.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаткиСерийНоменклатуры
	|ПОМЕСТИТЬ ВременнаяТаблицаСерииНоменклатурыПродукция
	|ИЗ
	|	Документ.КомплектацияЗапасов.СерииНоменклатуры КАК КомплектацияЗапасовСерииНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО КомплектацияЗапасовСерииНоменклатуры.Ссылка.Номенклатура = ПолитикиУчетаСерий.Владелец
	|			И КомплектацияЗапасовСерииНоменклатуры.Ссылка.СтруктурнаяЕдиница = ПолитикиУчетаСерий.СтруктурнаяЕдиница
	|			И КомплектацияЗапасовСерииНоменклатуры.Ссылка.Организация = ПолитикиУчетаСерий.Организация
	|ГДЕ
	|	КомплектацияЗапасовСерииНоменклатуры.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.НомерСтроки КАК НомерСтроки,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Серия КАК Серия,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.КлючСвязи КАК КлючСвязи,
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаЗапасы.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикаУчетаСерий.ПустаяСсылка)
	|			ТОГДА &ОстаткиСерийНоменклатуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВременнаяТаблицаЗапасы.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаткиСерийНоменклатуры
	|ПОМЕСТИТЬ ВременнаяТаблицаСерииНоменклатуры
	|ИЗ
	|	Документ.КомплектацияЗапасов.СерииНоменклатурыЗапасы КАК КомплектацияЗапасовСерииНоменклатурыЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ПО КомплектацияЗапасовСерииНоменклатурыЗапасы.КлючСвязи = ВременнаяТаблицаЗапасы.КлючСвязи
	|ГДЕ
	|	КомплектацияЗапасовСерииНоменклатурыЗапасы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаКомплектацияЗапасов);
	Запрос.УстановитьПараметр("ГраницаСреза", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии",  СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("УчетПоЯчейкам",  СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьСерииНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерииНоменклатуры);
	Запрос.УстановитьПараметр("КомплектацияЗапасов", НСтр("ru = 'Комплектация запасов'"));
	Запрос.УстановитьПараметр("СписаниеКомплектующих", НСтр("ru = 'Списание комплектующих'"));
	Запрос.УстановитьПараметр("ОстаткиСерийНоменклатуры", СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийНоменклатуры);
	
	Запрос.Выполнить();
	
	Если ВидОперации = Перечисления.ВидыОперацийКомплектацияЗапасов.Сборка Тогда
		
		ИнициализироватьДанныеДокументаСборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
		
	Иначе
		
		ИнициализироватьДанныеДокументаРазборка(ДокументСсылкаКомплектацияЗапасов, СтруктураДополнительныеСвойства)
		
	КонецЕсли;	
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти 

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаКомплектацияЗапасов, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если ПроведениеДокументовУНФ.КонтрольОстатковВыключен() Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗаказыНаПроизводствоИзменение", 
	// "ДвиженияРазмещениеЗаказовИзменение", "ДвиженияЗапасыИзменение"
	// содержат записи, необходимо выполнить контроль реализации товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСерииНоменклатурыИзменение
		Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыНаСкладахИзменение.Ячейка) КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыНаСкладахИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.Организация = ЗапасыНаСкладахОстатки.Организация
		|			И ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиницаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.СчетУчета) КАК СчетУчетаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыИзменение.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				&МоментКонтроля,
		|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО ДвиженияЗапасыИзменение.Организация = ЗапасыОстатки.Организация
		|			И ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСерииНоменклатурыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСерииНоменклатурыИзменение.Серия КАК СерияПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияСерииНоменклатурыИзменение.Ячейка КАК ЯчейкаПредставление,
		|	СерииНоменклатурыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	СерииНоменклатурыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияСерииНоменклатурыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияСерииНоменклатурыИзменение КАК ДвиженияСерииНоменклатурыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерииНоменклатуры.Остатки(&МоментКонтроля, ) КАК СерииНоменклатурыОстатки
		|		ПО ДвиженияСерииНоменклатурыИзменение.СтруктурнаяЕдиница = СерииНоменклатурыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияСерииНоменклатурыИзменение.Номенклатура = СерииНоменклатурыОстатки.Номенклатура
		|			И ДвиженияСерииНоменклатурыИзменение.Характеристика = СерииНоменклатурыОстатки.Характеристика
		|			И ДвиженияСерииНоменклатурыИзменение.Партия = СерииНоменклатурыОстатки.Партия
		|			И ДвиженияСерииНоменклатурыИзменение.Серия = СерииНоменклатурыОстатки.Серия
		|			И ДвиженияСерииНоменклатурыИзменение.Ячейка = СерииНоменклатурыОстатки.Ячейка
		|			И (ЕСТЬNULL(СерииНоменклатурыОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			Тогда
			
			ДокументОбъектКомплектацияЗапасов = ДокументСсылкаКомплектацияЗапасов.ПолучитьОбъект()
			
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			КонтрольОстатковУНФ.ЗапасыНаСкладах(ДокументОбъектКомплектацияЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток запасов.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			КонтрольОстатковУНФ.Запасы(ДокументОбъектКомплектацияЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета серийных номеров.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			КонтрольОстатковУНФ.СерииНоменклатуры(ДокументОбъектКомплектацияЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по остаткам запасов в разрезе номеров ГТД.
		Если Константы.КонтролироватьОстаткиПоНомерамГТД.Получить()
			И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			КонтрольОстатковУНФ.ЗапасыВРазрезеГТД(ДокументОбъектКомплектацияЗапасов, ВыборкаИзРезультатаЗапроса, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#КонецОбласти 

#Область ИнтерфейсПечати

Функция ПечатьКомплектацияЗапасов(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СборкаТоваров_СборкаТоваров";
	
	ВыводитьКоды = Истина;
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	Документ.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	Документ.Организация.Префикс КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.СтруктурнаяЕдиница) КАК СкладПредставление,
	|	Документ.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	Документ.Номенклатура.Артикул КАК Артикул,
	|	Документ.Номенклатура.Штрихкод КАК Штрихкод,
	|	Документ.Номенклатура.Код КАК Код,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Партия) КАК ПартияПредставление,
	|	Документ.Количество КАК Количество,
	|	Документ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Документ.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Документ.НомерГТД КАК НомерГТД,
	|	Документ.ВидОперации КАК ВидОперации,
	|	Документ.Запасы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.Штрихкод КАК Штрихкод,
	|		Номенклатура.Код КАК Код,
	|		ПРЕДСТАВЛЕНИЕ(Документ.Запасы.Характеристика) КАК ХарактеристикаПредставление,
	|		ПРЕДСТАВЛЕНИЕ(Документ.Запасы.Партия) КАК ПартияПредставление,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СтранаПроисхождения КАК СтранаПроисхождения,
	|		НомерГТД КАК НомерГТД
	|	) КАК Запасы
	|ИЗ
	|	Документ.КомплектацияЗапасов КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	Шапка = Запрос.Выполнить().Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КомплектацияЗапасов.ПФ_MXL_КомплектацияЗапасов");
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	Если НЕ ВыводитьКоды Тогда
		ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       	= Макет.ПолучитьОбласть("Подписи");
	
	ПервыйДокумент = Истина;
	ДанныеПечати = Новый Структура;
	ПараметрыНоменклатуры = Новый Структура;
	
	Пока Шапка.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация,
			Шапка.ДатаДокумента);
		ШаблонЗаголовка = НСтр("ru ='Комплектация № %1 от %2'");
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента,
			Шапка.Номер, Шапка.Префикс);
		ДатаДокумента = ПечатьДокументовУНФ.ПредставлениеДатыВДокументах(Шапка.ДатаДокумента);
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("ТекстЗаголовка", СтрШаблон(ШаблонЗаголовка, НомерДокумента, ДатаДокумента));
		ДанныеПечати.Вставить("ОрганизацияПредставление", ПечатьДокументовУНФ.ОписаниеОрганизации(
			СведенияОбОрганизации));
			
		ПараметрыНоменклатуры.Очистить();
		ПараметрыНоменклатуры.Вставить("Код", Шапка.Код);
		ПараметрыНоменклатуры.Вставить("Артикул", Шапка.Артикул);
		ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры);
		
		ПараметрыНоменклатуры.Очистить();
		ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", Шапка.НоменклатураПредставление);
		ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", Шапка.ХарактеристикаПредставление);
		ПараметрыНоменклатуры.Вставить("ПредставлениеПартии", Шапка.ХарактеристикаПредставление);
		ПредставлениеЗапаса = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры);
		Если НЕ ПустаяСтрока(ПредставлениеКодаНоменклатуры) Тогда
			ПредставлениеКомплекта = СтрШаблон(НСтр("ru = '%1 %2'"), ПредставлениеКодаНоменклатуры, ПредставлениеЗапаса);
		Иначе
			ПредставлениеКомплекта = ПредставлениеЗапаса;
		КонецЕсли; 
		ДанныеПечати.Вставить("Комплект", ПредставлениеКомплекта);
			
		ОбластьЗаголовок.Параметры.Заполнить(Шапка);
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		
		ВыборкаЗапасы = Шапка.Запасы.Выбрать();
		Пока ВыборкаЗапасы.Следующий() Цикл
			ДанныеПечати.Очистить();
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаЗапасы);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			Если ВыводитьКоды Тогда
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Код", ВыборкаЗапасы.Код);
				ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаЗапасы.Артикул);
				ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры));
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			КонецЕсли;
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаЗапасы);
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаЗапасы.НоменклатураПредставление);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаЗапасы.ХарактеристикаПредставление);
			ПараметрыНоменклатуры.Вставить("ПредставлениеПартии", ВыборкаЗапасы.ХарактеристикаПредставление);
			ОписаниеЗапаса = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры);
			ДанныеПечати.Вставить("Запас", ОписаниеЗапаса);
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);
		КонецЦикла; 
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
					
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
    	
КонецФункции

#КонецОбласти

#КонецОбласти 

#КонецЕсли
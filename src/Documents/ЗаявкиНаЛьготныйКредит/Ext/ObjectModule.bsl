#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Состояние = Перечисления.СостоянияЛьготныхЗаявок.ВРаботе 
		ИЛИ Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОтправленоВФНС Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата              = ТекущаяДатаСеанса();
	ПометкаУдаления   = Ложь;
	Состояние         = Перечисления.СостоянияЛьготныхЗаявок.ВРаботе;
	Ответственный     = Пользователи.ТекущийПользователь();
	ИдентификаторЗаявки = "";
	КонтактыБанка     = "";
	ПричинаОтклоненияБанком = "";
	ОдобреннаяСуммаКредита  = "";
	ОтпечатокСертификата = "";
	ТребуетВнимания   = Ложь;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Дата      = ТекущаяДатаСеанса();
	Состояние = Перечисления.СостоянияЛьготныхЗаявок.ВРаботе;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Организация") Тогда
		Организация = ДанныеЗаполнения.Организация;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) 
		И РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
		
		Модуль 		= ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
		Организация = Модуль.ОрганизацияПоУмолчанию();
		
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	Документы.ЗаявкиНаЛьготныйКредит.ЗаполнитьПоОрганизации(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Организация) Тогда
			
		ЭтоЮридическоеЛицо = РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
		
		ПроверитьИНН("ИНН", Отказ, ЭтоЮридическоеЛицо);
		
		Если ЭтоЮридическоеЛицо Тогда
			ПроверитьКПП("КПП", Отказ, ЭтоЮридическоеЛицо);
		Иначе
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("КПП"));
		КонецЕсли;
		
		ПроверитьОГРН(Отказ, ЭтоЮридическоеЛицо);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьОГРН(Отказ, ЭтоЮридическоеЛицо)
	
	РезультатПроверки = ДокументооборотСКОКлиентСервер.РезультатПроверкиРеквизитов();
	РезультатПроверки.Поле = "Объект.ОГРН";
	
	Если ЭтоЮридическоеЛицо Тогда
	
		// ОГРН
		Если НЕ (ДокументооборотСКОКлиентСервер.ПроверитьЦифровойКодЗаданнойДлины(ОГРН,13)) Тогда
			
			РезультатПроверки.ТекстОшибки = НСтр("ru = 'ОГРН должен состоять из 13 цифр'");

		КонецЕсли;
	Иначе
		// ОГРНИП
		Если ЗначениеЗаполнено(ОГРН) И НЕ ДокументооборотСКОКлиентСервер.ПроверитьЦифровойКодЗаданнойДлины(ОГРН,15, Истина) Тогда
			
			РезультатПроверки.ТекстОшибки = НСтр("ru = 'ОГРНИП должен состоять из 15 цифр'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьОтказ(Отказ, РезультатПроверки);
	
КонецФункции

Функция ПроверитьКПП(ИмяРеквизита, Отказ, ЭтоЮридическоеЛицо)
	
	РезультатПроверки = ДокументооборотСКОКлиентСервер.РезультатПроверкиРеквизитов();
	РезультатПроверки.Поле = "Объект." + ИмяРеквизита;
	
	ЭтотОбъект[ИмяРеквизита] = СокрЛП(ЭтотОбъект[ИмяРеквизита]);
	ЗначениеКПП = ЭтотОбъект[ИмяРеквизита];
	
	Представление = Строка(ЭтотОбъект.Метаданные().Реквизиты[ИмяРеквизита]);
	
	ТекстОшибки = "";
	Если ЭтоЮридическоеЛицо Тогда

		Если ДокументооборотСКОКлиентСервер.НайденыЗапрещенныеСимволы(
			ЗначениеКПП, 
			Представление, 
			ИмяРеквизита,
			Истина,
			ТекстОшибки)Тогда
			
			РезультатПроверки.ТекстОшибки = ТекстОшибки;

		ИначеЕсли НЕ ДокументооборотСКОКлиентСервер.ПроверитьКПП(ЗначениеКПП) И ЗначениеЗаполнено(ЗначениеКПП) Тогда
			
			РезультатПроверки.ТекстОшибки = Представление + НСтр("ru = ' должен состоять из 9 цифр'");
			РезультатПроверки.Пустой	  = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

	УстановитьОтказ(Отказ, РезультатПроверки);
	
КонецФункции

Функция ПроверитьИНН(ИмяРеквизита, Отказ, ЭтоЮридическоеЛицо)
	
	РезультатПроверки = ДокументооборотСКОКлиентСервер.РезультатПроверкиРеквизитов();
	РезультатПроверки.Поле = "Объект." + ИмяРеквизита;
	
	ЭтотОбъект[ИмяРеквизита] = СокрЛП(ЭтотОбъект[ИмяРеквизита]);
	ЗначениеИНН = ЭтотОбъект[ИмяРеквизита];
	
	Представление = Строка(ЭтотОбъект.Метаданные().Реквизиты[ИмяРеквизита]);
	
	// ИНН
	Если ЗначениеЗаполнено(ЗначениеИНН) Тогда
		
		Если ЭтоЮридическоеЛицо И СтрДлина(ЗначениеИНН) <> 10 Тогда
			
			РезультатПроверки.ТекстОшибки = Представление + НСтр("ru = ' должен состоять из 10 цифр'");
			РезультатПроверки.Пустой	  = СтрДлина(ЗначениеИНН) < 10;
			
		ИначеЕсли НЕ ЭтоЮридическоеЛицо И СтрДлина(ЗначениеИНН) <> 12 Тогда
				
			РезультатПроверки.ТекстОшибки = Представление + НСтр("ru = ' должен состоять из 12 цифр'");
			РезультатПроверки.Пустой	  = СтрДлина(ЗначениеИНН) < 12;

		Иначе
			РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ЗначениеИНН, ЭтоЮридическоеЛицо, РезультатПроверки.ТекстОшибки);
			
			Если ЗначениеЗаполнено(РезультатПроверки.ТекстОшибки) Тогда
				РезультатПроверки.ТекстОшибки  = Представление + ": " + РезультатПроверки.ТекстОшибки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьОтказ(Отказ, РезультатПроверки);
	
КонецФункции

Процедура УстановитьОтказ(Отказ, РезультатПроверки)
	
	Если ЗначениеЗаполнено(РезультатПроверки.ТекстОшибки) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(РезультатПроверки.ТекстОшибки,ЭтотОбъект,,РезультатПроверки.Поле);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
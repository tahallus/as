&НаКлиенте
Перем КонтекстЭДОКлиент Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьДанные(Параметры);
	ИзменитьОформлениеФормы();
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостей.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтотОбъект,
		ЛьготныеКредитыКлиентСервер.ИДНовостей(),
		"ФормаДокумента",
		ЛьготныеКредитыКлиентСервер.НастройкиОтображенияНовостей(),
		ЛьготныеКредитыКлиентСервер.НастройкиОтображенияНовостей(),
		Ложь,
		,
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИзменитьОформлениеНовостей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтотОбъект);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
	Если ЭтоКопирование Тогда
		УстановитьМодифицированность();
	КонецЕсли;
	
	Если НужноЗапуститьПроверкуПриОткрытии Тогда
		ЗапускПроверкиОрганизаци();
	КонецЕсли;
	
	Если НЕ ЗапретитьИзменение Тогда
		ПолучитьБанки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ИзмениласьОрганизация = 
		ИмяСобытия = "Запись_Организации" 
		И НЕ ЗапретитьИзменение
		И ТипЗнч(Источник) = Тип("СправочникСсылка.Организации") 
		И Источник = Объект.Организация;
	
	Если ИзмениласьОрганизация Тогда
		
		ОрганизацияПриИзменении(Неопределено);
		
	КонецЕсли;
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПредставлениеНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьЗначение(, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактыБанкаНажатие(Элемент)
	
	ПоказатьПредупреждение(, ЧтоДелатьПослеОдобрения(),,Объект.НаименованиеБанка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	ЗапускПроверкиОрганизаци();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокКредитованияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Объект.СрокКредитования = ВыбранноеЗначение;
	
	НайденноеЗначение = Элементы.СрокКредитования.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	СрокКредитования  = НайденноеЗначение.Представление;
	
	УстановитьМодифицированность();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"Банки_ПослеВыбора", 
		ЭтотОбъект);
		
	Если Банки.Количество() = 0 Тогда
		
		ОткрытьФорму("Документ.ЗаявкиНаЛьготныйКредит.Форма.НетБанков",
			,
			,
			,
			,
			,
			ОписаниеОповещения, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	Иначе
		
		ДопПараметры = ПараметрыОткрытияФормыБанков();
			
		ОткрытьФорму("Документ.ЗаявкиНаЛьготныйКредит.Форма.Банки",
			ДопПараметры,
			,
			,
			,
			,
			ОписаниеОповещения, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СрокКредитованияОчистка(Элемент, СтандартнаяОбработка)
	Объект.СрокКредитования = Неопределено;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтотОбъект,
		Команда
	);

КонецПроцедуры
// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

&НаКлиенте
Процедура ОбновитьСтатус(Команда)
	
	ДопПараметры = ЛьготныеКредитыКлиент.ПараметрыОткрытияФормыОтправки();
	ДопПараметры.Вставить("Заявка",        Объект.Ссылка);
	ДопПараметры.Вставить("ЭтоОбновление", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОбновитьСтатус_Завершение", 
		ЭтотОбъект,
		ДопПараметры);
		
	ЛьготныеКредитыКлиент.ОткрытьФормуОтправки(ОписаниеОповещения, ДопПараметры, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите организацию'"),,"Организация");
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ Записать() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТекстОшибкиПроверкиОрганизации) Тогда
		ПоказатьПредупреждение(,Объект.ТекстОшибкиПроверкиОрганизации);
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры = ЛьготныеКредитыКлиент.ПараметрыОткрытияФормыОтправки();
	ДопПараметры.Вставить("Заявка",        Объект.Ссылка);
	ДопПараметры.Вставить("ЭтоОтправка", Истина);

	ОписаниеОповещения = Новый ОписаниеОповещения(
		"Отправить_Завершение", 
		ЭтотОбъект);
		
	ЛьготныеКредитыКлиент.ОткрытьФормуОтправки(ОписаниеОповещения, ДопПараметры, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтотОбъект, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

&НаСервере
Функция ЧтоДелатьПослеОдобрения() Экспорт
	
	Возврат Документы.ЗаявкиНаЛьготныйКредит.ЧтоДелатьПослеОдобрения(Объект.Ссылка);

КонецФункции

&НаКлиенте
Процедура ОбновитьСтатус_Завершение(Результат, ВходящийКонтекст) Экспорт

	ЭтотОбъект.Прочитать();
	ОповеститьОбИзменении(Объект.Ссылка);
	ИзменитьОформлениеПанелей();
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить_Завершение(Результат, ВходящийКонтекст) Экспорт

	ЭтотОбъект.Прочитать();
	ОповеститьОбИзменении(Объект.Ссылка);
	ЗапретитьИзменение = ЗапретитьИзменение();
	ИзменитьОформлениеФормы();
	
	Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЛьготныхЗаявок.ОтправленоВФНС") Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыОткрытияФормыБанков()
	
	Адрес = ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("Банки"), Новый УникальныйИдентификатор);
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("Идентификатор", Объект.ИдентификаторБанка);
	ДопПараметры.Вставить("Адрес", Адрес);
	
	Возврат ДопПараметры;
	
КонецФункции

&НаКлиенте
Процедура Банки_ПослеВыбора(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМодифицированность();
	
	Объект.БИКбанка = Результат.БИК;
	Объект.НаименованиеБанка = Результат.Наименование;
	Объект.ИдентификаторБанка = Результат.Идентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускПроверкиОрганизаци()
	
	Если НЕ ЗначениеЗаполнено(Объект.ИНН) Тогда
		Объект.ТекстОшибкиПроверкиОрганизации = НСтр("ru = 'Заполните ИНН организации'");
		ИзменитьОформлениеФормы();
		Возврат;
	КонецЕсли;
	
	ВыполняетсяПроверка = Истина;
	Объект.ТекстОшибкиПроверкиОрганизации = "";
	
	ИзменитьОформлениеФормы();
	
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьОрганизацию", 1, Истина);
	
КонецПроцедуры

#Область ПроверкаОрганизации

&НаКлиенте
Процедура Подключаемый_ПроверитьОрганизацию()
	ПроверитьОрганизацию();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОрганизацию()
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьОрганизацию_ПроверитьСостояние",
		ЭтотОбъект); 
		
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	ДлительнаяОперация = НачатьПроверкуОрганизации();
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОрганизацию_ПроверитьСостояние(ДлительнаяОперация, ВходящийКонтекст) Экспорт
	
	Если ДлительнаяОперация <> Неопределено И
		(ДлительнаяОперация.Статус = "Выполнено") Тогда
		
		Результат = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		
		Если НЕ Результат.ОрганизацияПострадалаотПандемии Тогда
			Объект.ТекстОшибкиПроверкиОрганизации = Результат.ОписаниеОшибки;
		КонецЕсли;
		
		ВыполняетсяПроверка = Ложь;
		ИзменитьОформлениеФормы();
			
	ИначеЕсли ДлительнаяОперация = Неопределено
		ИЛИ ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ВыполняетсяПроверка = Ложь;
		ИзменитьОформлениеФормы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НачатьПроверкуОрганизации()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = Проверка, может ли организация подать заявку на льготный кредит'");
	ПараметрыВыполнения.ОжидатьЗавершение = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Документы.ЗаявкиНаЛьготныйКредит.ПроверитьОрганизациюВФоне", 
		Объект.ИНН, 
		ПараметрыВыполнения);

КонецФункции

#КонецОбласти

#Область ПолучениеБанков

&НаКлиенте
Процедура ПолучитьБанки()
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПолучитьБанки_ПроверитьСостояние",
		ЭтотОбъект); 
		
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	ДлительнаяОперация = НачатьПолучениеБанков();
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьБанки_ПроверитьСостояние(ДлительнаяОперация, ВходящийКонтекст) Экспорт
	
	Если ДлительнаяОперация <> Неопределено И
		(ДлительнаяОперация.Статус = "Выполнено") Тогда
		
		ЗаполнитьТаблицуБанковНаСервере(ДлительнаяОперация.АдресРезультата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуБанковНаСервере(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Для каждого Банк Из Результат.Банки Цикл
		НоваяСтрока = Банки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Банк);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НачатьПолучениеБанков()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = Получение списка банков-участников'");
	ПараметрыВыполнения.ОжидатьЗавершение = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Документы.ЗаявкиНаЛьготныйКредит.ПолучитьБанкиВФоне", 
		Объект.ИНН, 
		ПараметрыВыполнения);

КонецФункции
	
#КонецОбласти

&НаСервере
Процедура СкрытьПанельПроверкиОрганизации()
	
	Элементы.ГруппаПодсказкаОрганизации.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьБубликПроверки()
	
	Элементы.ГруппаПодсказкаОрганизации.Видимость = Истина;
	Элементы.Бублик.Видимость = Истина;
	Элементы.ТекстОшибкиПроверкиОрганизации.Заголовок = НСтр("ru = 'Пожалуйста, подождите...'");
	Элементы.ТекстОшибкиПроверкиОрганизации.ЦветТекста = Новый Цвет();
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекстОшибкиОрганизации()
	
	Элементы.ГруппаПодсказкаОрганизации.Видимость = Истина;
	Элементы.Бублик.Видимость = Ложь;
	Элементы.ТекстОшибкиПроверкиОрганизации.Заголовок =  Объект.ТекстОшибкиПроверкиОрганизации;
	Элементы.ТекстОшибкиПроверкиОрганизации.ЦветТекста = ЦветаСтиля.ЦветОшибкиОтправкиБРО;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеФормы()
	
	Элементы.ПоляЗаявления.Видимость = 
		НЕ ЗначениеЗаполнено(Объект.ТекстОшибкиПроверкиОрганизации) 
		И НЕ ВыполняетсяПроверка
		И ЗначениеЗаполнено(Объект.Организация)
		ИЛИ ПроверитьОрганизациюВСкрытомРежиме 
		И ЗначениеЗаполнено(Объект.Организация);
	
	ИзменитьОформлениеПанелей();
	ИзменитьОформлениеОрганизации();
	ИзменитьОформлениеВЗависимостиОтЭтоЮридическоеЛицоИлиНет();
	ИзменитьОформлениеФормыПриЗапретеИзменений();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеФормыПриЗапретеИзменений()
	
	Если ЗапретитьИзменение Тогда
		
		Элементы.СрокКредитования.ТолькоПросмотр = Истина;
		Элементы.ФормаОтправить.Видимость = Ложь;
		Элементы.ФормаЗаписать.Видимость = Ложь;
		ТолькоПросмотр = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеВЗависимостиОтЭтоЮридическоеЛицоИлиНет()
	
	Элементы.ГруппаНаименованиеОрганизации.Видимость = ЭтоЮридическоеЛицо;
	Элементы.КПП.Видимость = ЭтоЮридическоеЛицо;
	Элементы.Слеш.Видимость = ЭтоЮридическоеЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
		Элементы.ЗаголовокФИО.Заголовок = НСтр("ru = 'Руководитель:'"); 
		Элементы.ЗаголовокИНН.Заголовок = НСтр("ru = 'ИНН/КПП:'"); 
		Элементы.ЗаголовокОГРН.Заголовок = НСтр("ru = 'ОГРН:'"); 
		Элементы.ЧисленностьСотрудников.РасширеннаяПодсказка.Заголовок = НСтр("ru = 'Сотрудники, которые работали в текущем месяце, в т.ч. уволившиеся или расторгнувшие договор.'");
	Иначе
		Элементы.ЗаголовокФИО.Заголовок = НСтр("ru = 'ФИО:'");
		Элементы.ЗаголовокИНН.Заголовок = НСтр("ru = 'ИНН:'");
		Элементы.ЗаголовокОГРН.Заголовок = НСтр("ru = 'ОГРНИП:'"); 
		Элементы.ЧисленностьСотрудников.РасширеннаяПодсказка.Заголовок = НСтр("ru = 'Сотрудники, которые работали в текущем месяце, в т.ч. уволившиеся или расторгнувшие договор. Для ИП без сотрудников укажите численность сотрудников 1.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеОрганизации()
	
	ОднаОрганизация = РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация();
		
	Элементы.Организация.Видимость = НЕ ОднаОрганизация;
	Элементы.ОрганизацияПредставление.Видимость = ОднаОрганизация;
	Элементы.ОрганизацияПредставление.Заголовок = Строка(Объект.Организация);
	
	Если ВыполняетсяПроверка И НЕ ПроверитьОрганизациюВСкрытомРежиме Тогда
		ПоказатьБубликПроверки();
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.Организация) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.ТекстОшибкиПроверкиОрганизации) И НЕ ВыполняетсяПроверка
		ИЛИ ПроверитьОрганизациюВСкрытомРежиме Тогда
		СкрытьПанельПроверкиОрганизации();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТекстОшибкиПроверкиОрганизации)
		И НЕ ПроверитьОрганизациюВСкрытомРежиме Тогда
		ПоказатьТекстОшибкиОрганизации();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеПанелей()
	
	Элементы.ИнформационнаяПанель.Видимость = Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ВРаботе;
	Элементы.ПанельОтправки.Видимость = Объект.Состояние <> Перечисления.СостоянияЛьготныхЗаявок.ВРаботе;
	Элементы.КонтактыБанка.Видимость = ЗначениеЗаполнено(Объект.КонтактыБанка);
	Элементы.Состояние.Заголовок = Объект.Состояние;
	
	Если Элементы.ПанельОтправки.Видимость Тогда
		
		Если Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОтправленоВФНС
			ИЛИ Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОбработаноВФНСПереданоВБанк Тогда
			
			Элементы.ПанельОтправки.ЦветФона = ЦветаСтиля.ЦветФонаТекущейОтправки;
			
			Если Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОбработаноВФНСПереданоВБанк
				И ЗначениеЗаполнено(Объект.КонтактыБанка) Тогда
				
				Элементы.КомментарийСостояния.Заголовок = НСтр("ru = 'Для рассмотрения заявки необходимо связаться с банком.'");
				
			КонецЕсли;
			
		ИначеЕсли Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОдобреноБанком Тогда 
			
			Элементы.ПанельОтправки.ЦветФона = ЦветаСтиля.ЦветФонаУдачнойОтправки;
			
			Если Объект.ТребуетВнимания Тогда
				Элементы.КомментарийСостояния.Заголовок = 
					НСтр("ru = 'Для получения доп. информации об одобренном кредите, обновите состояние по кнопке.'");
			Иначе
				Элементы.КомментарийСостояния.Заголовок = 
					НСтр("ru = 'Одобренная сумма: '") + Строка(Объект.ОдобреннаяСуммаКредита) + НСтр("ru = ' руб.'");
			КонецЕсли;
				
		ИначеЕсли Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОтклоненоБанком Тогда
			
			Элементы.ПанельОтправки.ЦветФона = ЦветаСтиля.ЦветФонаОшибкиОтправки;
			Элементы.КомментарийСостояния.Заголовок = Объект.ПричинаОтклоненияБанком;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ОбновитьСтатус.Видимость = 
		Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОтправленоВФНС
		ИЛИ Объект.Состояние = Перечисления.СостоянияЛьготныхЗаявок.ОбработаноВФНСПереданоВБанк
		ИЛИ Объект.ТребуетВнимания;
		
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеНовостей()
	
	ВидимостьКомандыНовостей = 
		ТипЗнч(Новости) = Тип("Структура") 
		И Новости.Свойство("КоличествоНовостей") 
		И Новости.КоличествоНовостей > 0;
		
	Элементы.Еще.Видимость = ВидимостьКомандыНовостей;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЭтоКопирование = Ложь;
	Объект.ТекстОшибкиПроверкиОрганизации     = "";
	ПроверитьОрганизациюВСкрытомРежиме = Ложь;
	ОпределитьЧтоЭтоЮридическоеЛицо();
	
	Документы.ЗаявкиНаЛьготныйКредит.ЗаполнитьПоОрганизации(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанные(Параметры)
	
	ЗапретитьИзменение = ЗапретитьИзменение();
	
	// Список выбора периодов кредитования
	Для Месяц = 1 По 12 Цикл
		
		МесяцПрописью = ДлительнаяОтправкаКлиентСервер.ЧислоИПредметИсчисления(
			Месяц,
			НСтр("ru = 'месяц'"),
			НСтр("ru = 'месяца'"),
			НСтр("ru = 'месяцев'"),
			"м");
			
		Элементы.СрокКредитования.СписокВыбора.Добавить(Месяц, МесяцПрописью);
		
	КонецЦикла;
	
	// Представление периода кредитования
	Если ЗначениеЗаполнено(Объект.СрокКредитования) Тогда
		НайденноеЗначение = Элементы.СрокКредитования.СписокВыбора.НайтиПоЗначению(Объект.СрокКредитования);
		СрокКредитования  = НайденноеЗначение.Представление;
	КонецЕсли;
	
	ОпределитьЧтоЭтоЮридическоеЛицо();
	
	НужноЗапуститьПроверкуПриОткрытии = НужноЗапуститьПроверкуПриОткрытии(Параметры);
	
	ЭтоКопирование = ЗначениеЗаполнено(Параметры.ЗначениеКопирования);
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьЧтоЭтоЮридическоеЛицо()
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЭтоЮридическоеЛицо = РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Объект.Организация);
	Иначе
		ЭтоЮридическоеЛицо = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапретитьИзменение()
	
	Возврат ЗначениеЗаполнено(Объект.Состояние) И Объект.Состояние <> Перечисления.СостоянияЛьготныхЗаявок.ВРаботе;

КонецФункции

&НаСервере
Функция НужноЗапуститьПроверкуПриОткрытии(Параметры)
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	
	// Если это открытии ранее созданной, но не отправленной заявки, то 
	// может уже оказаться, что организация не имеет права на кредит.
	// Поэтому проверяем в скрытом режиме (без бублика), а результат покажем при отправке.
	ПроверитьОрганизациюВСкрытомРежиме = 
		НЕ ЭтоНовый 
		И НЕ ЗапретитьИзменение 
		И НЕ ЗначениеЗаполнено(Объект.ТекстОшибкиПроверкиОрганизации);
	
	ЭтоЗаписаннаяНеотправленнаяЗаявка = 
		ПроверитьОрганизациюВСкрытомРежиме
		И ЗначениеЗаполнено(Объект.Организация);
		
	ЭтоКопия =
		ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
		И НЕ ЗапретитьИзменение 
		И ЭтоНовый 
		И ЗначениеЗаполнено(Объект.Организация);
	
	НовыйСЗаполненнойОрганизацией = 
		НЕ ЗапретитьИзменение 
		И ЭтоНовый 
		И ЗначениеЗаполнено(Объект.Организация);
	
	Возврат НовыйСЗаполненнойОрганизацией ИЛИ ЭтоЗаписаннаяНеотправленнаяЗаявка ИЛИ ЭтоКопия;
	
КонецФункции

&НаСервере
Процедура УстановитьМодифицированность()
	
	Модифицированность = Истина; // Чтобы запись отрабатывала
	
КонецПроцедуры

#КонецОбласти
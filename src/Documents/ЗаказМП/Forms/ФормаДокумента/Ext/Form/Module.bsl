#Область ОписаниеПеременных

&НаКлиенте
Перем КэшНайденныхКонтактов;

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура УстановитьДоступностьКнопкиОткрытияКонтрагента()
	
	Если ЗначениеЗаполнено(Объект.Покупатель) Тогда
		Элементы.Покупатель.КнопкаОткрытия = Истина;
	Иначе
		Элементы.Покупатель.КнопкаОткрытия = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентСкидки()
	
	ТоварыИтог = Объект.Товары.Итог("Сумма");
	Если ТоварыИтог <> 0 Тогда
		Скидка = Окр(Объект.СуммаСкидки / ТоварыИтог * 100, 0);
		ПроцентСкидки = Строка(Скидка) + "%";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НовыйSMSКонтрагенту()
	
	#Если МобильноеПриложениеКлиент Тогда
		
		РеквизитыОрганизации = ПолучитьРеквизитыОрганизации();
		РеквизитыКонтрагента = ПолучитьРеквизитыКонтрагента("СМС");
		
		Если ТипЗнч(РеквизитыОрганизации) = Тип("Структура")
			И ЗначениеЗаполнено(РеквизитыОрганизации.НазваниеОрганизации) Тогда
			ТемаПисьма = РеквизитыОрганизации.НазваниеОрганизации + НСтр("ru='. Счет на оплату №';en='. Invoice No.'") + ОбщегоНазначенияМПКлиентСервер.ПолучитьПредставлениеНомера(Объект.Номер) + НСтр("ru=' от ';en=' of '") + Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
		Иначе
			ТемаПисьма = НСтр("ru='Счет на оплату №';en='Invoice No.'") + ОбщегоНазначенияМПКлиентСервер.ПолучитьПредставлениеНомера(Объект.Номер) + НСтр("ru=' от ';en=' of '") + Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		
		ТелоПисьма = 
		"{1}"
		+ Символы.ПС + Символы.ПС
		+ "{2}"
		+ Символы.ПС
		+ "{3}"
		+ Символы.ПС + Символы.ПС
		+ НСтр("ru='---
		|Сформировано в мобильном приложении 1С:Управление нашей фирмой';en='---
		|Created in a mobile application 1C:Small Business Mobile'");
		
		ШапкаПисьма = 
		НСтр("ru='Счет на оплату №';en='Invoice No.'") + "{4}" + НСтр("ru=' от ';en=' of '") + "{5}"
		+ Символы.ПС + Символы.ПС
		+ НСтр("ru='Поставщик: ';en='Supplier: '") + "{6}"
		+ Символы.ПС
		+ НСтр("en='Payment Details:';ru='Реквизиты для оплаты: '") + "{7}"
		+ Символы.ПС + Символы.ПС
		+ НСтр("ru='Покупатель: ';en='Customer: '") + "{8}";
		
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма, "{4}", ОбщегоНазначенияМПКлиентСервер.ПолучитьПредставлениеНомера(Объект.Номер));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма, "{5}", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма, "{6}", СокрЛП(РеквизитыОрганизации.НазваниеОрганизации));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма, "{7}", СокрЛП(РеквизитыОрганизации.ПлатежныеРеквизиты));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма, "{8}", СокрЛП(РеквизитыКонтрагента.Наименование));
		
		Если Объект.Товары.Количество() > 0 Тогда
			
			ПечатнаяФормаЗаказа = "";
			Для Итератор = 0 По Объект.Товары.Количество() - 1 Цикл
				ПечатнаяФормаЗаказа =
				ПечатнаяФормаЗаказа
				+ (Итератор + 1)
				+ ". "
				+ Объект.Товары[Итератор]["Товар"]
				+ " - " + Объект.Товары[Итератор]["Количество"]
				+ " х "
				+ Формат(Объект.Товары[Итератор]["Цена"], "ЧДЦ=2")
				+ " = "
				+ Формат(Объект.Товары[Итератор]["Сумма"], "ЧДЦ=2")
				+ Символы.ПС;
			КонецЦикла;
			
		КонецЕсли;
		
		ПодписьПисьма = 
		"Всего наименований "
		+ Объект.Товары.Количество()
		+ ", на сумму "
		+ Формат(Объект.Товары.Итог("Сумма"), "ЧДЦ=2")
		+ "%Скидка%"
		+ Символы.ПС;
		
		Если Объект.СуммаСкидки <> 0 Тогда
			ПодписьПисьма = СтрЗаменить(
			ПодписьПисьма,
			"%Скидка%",
			", скидка "
			+ Формат(Объект.СуммаСкидки, "ЧДЦ=2")
			+ ", итого со скидкой "
			+ Формат(Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки, "ЧДЦ=2")
			);
		Иначе
			ПодписьПисьма = СтрЗаменить(ПодписьПисьма, "%Скидка%", ""); 
		КонецЕсли;
		
		ТелоПисьма = СтрЗаменить(ТелоПисьма, "{1}", ШапкаПисьма);
		ТелоПисьма = СтрЗаменить(ТелоПисьма, "{2}", ПечатнаяФормаЗаказа);
		ТелоПисьма = СтрЗаменить(ТелоПисьма, "{3}", ПодписьПисьма);
		
		SMSКонтрагенту = Новый Структура;
		SMSКонтрагенту.Вставить("ТемаПисьма", ТемаПисьма);
		SMSКонтрагенту.Вставить("ТелоПисьма", ТелоПисьма);
		
		SMSКонтрагенту.Вставить("Получатель", РеквизитыКонтрагента.НомерТелефона);
		
		Возврат SMSКонтрагенту;
		
	#КонецЕсли
	
КонецФункции

&НаКлиенте
Функция НовыйПисьмоКонтрагенту()
	
	РеквизитыОрганизации = ПолучитьРеквизитыОрганизации();
	РеквизитыКонтрагента = ПолучитьРеквизитыКонтрагента("email");
	
	Если ТипЗнч(РеквизитыОрганизации) = Тип("Структура")
		И ЗначениеЗаполнено(РеквизитыОрганизации.НазваниеОрганизации) Тогда
		ТемаПисьма = РеквизитыОрганизации.НазваниеОрганизации + НСтр("ru='. Счет на оплату №';en='. Invoice No.'") + ОбщегоНазначенияМПКлиентСервер.ПолучитьПредставлениеНомера(Объект.Номер) + НСтр("ru=' от ';en=' of '") + Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
	Иначе
		ТемаПисьма = НСтр("ru='Счет на оплату №';en='Invoice No.'") + ОбщегоНазначенияМПКлиентСервер.ПолучитьПредставлениеНомера(Объект.Номер) + НСтр("ru=' от ';en=' of '") + Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	ТелоПисьма = 
	""
	+ Символы.ПС + Символы.ПС
	+ НСтр("ru='---
	|Сформировано в мобильном приложении 1С:Управление нашей фирмой';en='---
	|Created in a mobile application 1C:Small Business Mobile'");
	
	
	ЗаписьВPDF = ЗаписатьВPDF(КаталогДокументов());
	
	ПисьмоКонтрагенту = Новый Структура;
	ПисьмоКонтрагенту.Вставить("ТемаПисьма", ТемаПисьма);
	ПисьмоКонтрагенту.Вставить("ТелоПисьма", ТелоПисьма);
	ПисьмоКонтрагенту.Вставить("Получатель", РеквизитыКонтрагента.АдресЭП);
	ПисьмоКонтрагенту.Вставить("АдресВложения", ЗаписьВPDF.ПолноеИмяФайла);
	ПисьмоКонтрагенту.Вставить("ИмяВложения", ЗаписьВPDF.ИмяФайла);
	
	Возврат ПисьмоКонтрагенту;
	
КонецФункции

&НаКлиенте
Функция ПолучитьРеквизитыОрганизации()
	
	РеквизитыОрганизации = ПолучитьРеквизитыОрганизацииНаСервере();
	Если НЕ ЗначениеЗаполнено(РеквизитыОрганизации.НазваниеОрганизации)
		ИЛИ НЕ ЗначениеЗаполнено(РеквизитыОрганизации.ПлатежныеРеквизиты) Тогда
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		Результат = Вопрос(НСтр("en='Details of your company are not filled. Fill?';ru='Реквизиты организации не заполнены. Заполнить?'"), РежимДиалогаВопрос.ДаНет,,,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
		// АПК:565-вкл
		Если Результат = КодВозвратаДиалога.Да Тогда 
			// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
			Результат = ОткрытьФормуМодально("ОбщаяФорма.РеквизитыОрганизацииМП");
			// АПК:565-вкл
			РеквизитыОрганизации = ?(ЗначениеЗаполнено(Результат), Результат, РеквизитыОрганизации);
		КонецЕсли;
	КонецЕсли;
	
	Возврат РеквизитыОрганизации;
	
КонецФункции

&НаКлиенте


&НаКлиенте
Функция ПолучитьРеквизитыКонтрагента(СпособОтправкиДокумента)
	
	РеквизитыКонтрагента = ПолучитьРеквизитыКонтрагентаНаСервере();
	
	Если СпособОтправкиДокумента = "email"
		И НЕ ЗначениеЗаполнено(РеквизитыКонтрагента.АдресЭП) Тогда
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		Результат = Вопрос(НСтр("en=""Customer's email is blank. Fill it?"";ru='Email покупателя не заполнен. Заполнить?'"), РежимДиалогаВопрос.ДаНет,,,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
		// АПК:565-вкл
		Если Результат = КодВозвратаДиалога.Да Тогда
			СтруктураПараметров = Новый Структура("Ключ", Объект.Покупатель);
			// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
			ОткрытьФормуМодально("Справочник.КонтрагентыМП.ФормаОбъекта", СтруктураПараметров);
			// АПК:565-вкл
			РеквизитыКонтрагента = ПолучитьРеквизитыКонтрагентаНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	Если СпособОтправкиДокумента = "СМС"
		И НЕ ЗначениеЗаполнено(РеквизитыКонтрагента.НомерТелефона) Тогда
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		Результат = Вопрос(НСтр("ru='Телефон покупателя не заполнен. Заполнить?';en=""Customer's phone is blank. Fill?"""), РежимДиалогаВопрос.ДаНет,,,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
		// АПК:565-вкл
		Если Результат = КодВозвратаДиалога.Да Тогда
			СтруктураПараметров = Новый Структура("Ключ", Объект.Покупатель);
			// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
			ОткрытьФормуМодально("Справочник.КонтрагентыМП.ФормаОбъекта", СтруктураПараметров);
			// АПК:565-вкл
			РеквизитыКонтрагента = ПолучитьРеквизитыКонтрагентаНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	Возврат РеквизитыКонтрагента;
	
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыОрганизацииНаСервере()
	
	РеквизитыОрганизации = Новый Структура();
	РеквизитыОрганизации.Вставить("НазваниеОрганизации", Константы.НазваниеОрганизацииМП.Получить());
	РеквизитыОрганизации.Вставить("ПлатежныеРеквизиты", Константы.ПлатежныеРеквизитыМП.Получить());
	
	Возврат РеквизитыОрганизации;
	
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыКонтрагентаНаСервере()
	
	Контрагент = Новый Структура;
	Контрагент.Вставить("Наименование", Объект.Покупатель.Наименование);
	Контрагент.Вставить("АдресЭП", Объект.Покупатель.АдресЭП);
	Контрагент.Вставить("НомерТелефона", Объект.Покупатель.НомерТелефона);
	Возврат Контрагент;
	
КонецФункции

&НаКлиенте
Процедура СкорректироватьСуммуОплатыЕслиНужно(СПредупреждением = Ложь)
	
	Если Объект.СуммаОплаты > (Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки) Тогда
		Если СПредупреждением Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("СкорректироватьСуммуОплатыЕслиНужноЗавершение", ЭтаФорма), НСтр("ru='Сумма оплаты не может быть больше суммы документа со скидкой';en='Payment amount cannot be greater than the sum of the document at a discount'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
			Возврат;
		КонецЕсли;
		Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	КонецЕсли;
	Объект.Оплачен = (Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки) = Объект.СуммаОплаты;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуОплатыЕслиНужноЗавершение(ДополнительныеПараметры) Экспорт
	
	Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	Объект.Оплачен = (Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки) = Объект.СуммаОплаты;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуСкидкиЕслиНужно(СПредупреждением = Ложь)
	
	Если Объект.СуммаСкидки > Объект.Товары.Итог("Сумма")Тогда
		Если СПредупреждением Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("СкорректироватьСуммуСкидкиЕслиНужноЗавершение", ЭтаФорма), НСтр("ru='Сумма скидки не может быть больше суммы товаров и услуг';en='Discount amount cannot be greater than the sum of the document'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
			Возврат;
		КонецЕсли;
		Объект.СуммаСкидки = Объект.Товары.Итог("Сумма");
	КонецЕсли;
	
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуСкидкиЕслиНужноЗавершение(ДополнительныеПараметры) Экспорт
	
	Объект.СуммаСкидки = Объект.Товары.Итог("Сумма");
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеТоварПриИзменении(СтруктураДанных)
	
	ТоварСсылка = СтруктураДанных.Товар;
	
	Если ЗначениеЗаполнено(ТоварСсылка) Тогда
		ТоварОбъект = ТоварСсылка.ПолучитьОбъект();
		ТоварЦена = ?(СтруктураДанных.ПриходТовара, ТоварОбъект.ПолучитьЦенуПоставщиков(), ТоварОбъект.ПолучитьЦенуПродажи());
	Иначе
		ТоварОбъект = Неопределено;
		ТоварЦена = 0;
	КонецЕсли;
	
	СтруктураДанных.Вставить("Цена", ТоварЦена);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтроке(ТекущаяСтрока)
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЦенуВСтроке(ТекущаяСтрока)
	
	Если ТекущаяСтрока.Количество <> 0 Тогда
		ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество;
	Иначе
		ТекущаяСтрока.Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура ОтправитьЗаказНаEmail(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	Если НЕ ЗначениеЗаполнено(Объект.Покупатель) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Вначале укажите покупателя';en='First, specify the customer'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
		Возврат;
	КонецЕсли;
	ЗаписатьЗаказ();
	СтруктураПисьма = НовыйПисьмоКонтрагенту();
	ОбщегоНазначенияМПКлиент.ПослатьПисьмо(СтруктураПисьма.Получатель, СтруктураПисьма.ТемаПисьма, СтруктураПисьма.ТелоПисьма, СтруктураПисьма.АдресВложения, СтруктураПисьма.ИмяВложения );
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗаказПоSMS(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	Если НЕ ЗначениеЗаполнено(Объект.Покупатель) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Вначале укажите покупателя';en='First, specify the customer'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
		Возврат;
	КонецЕсли;
	ЗаписатьЗаказ();
	ОбщегоНазначенияМПКлиент.ОтправитьПоСМС(НовыйSMSКонтрагенту());
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	СкорректироватьСуммуОплатыЕслиНужно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/razdel-zakazy/kartochka-zakaza/");
	// АПК:534-вкл
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики
	
	Элементы.ДекорацияПредупреждение.Видимость = Ложь;
	Элементы.Товары.Доступность = Истина;
	Элементы.Покупатель.ТолькоПросмотр = Ложь;
	Элементы.Номер.Доступность = Истина;
	Элементы.Дата.Доступность = Истина;
	Элементы.ГруппаПроцентСкидка.Доступность = Истина;
	Элементы.Отгружен.Доступность = Истина;
	Элементы.Наличными.Доступность = Истина;
	
	Если ОбщегоНазначенияМПВызовСервера.ВерсияОС() = "iOS" Тогда
		Элементы.ФормаОтправитьЗаказПоSMS.Видимость = Ложь;
	КонецЕсли;
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Заказ';en='Estimate'"));
	
	УстановитьВидимостьПриемаОплаты();
	ИспользоватьБыстрыйПодборТоваров = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьБыстрыйПодборТоваровМП");
	
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	
	УстановитьОтображениеНомера();
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Элементы.ФормаОтправитьЗаказНаEmail.Видимость = Ложь;
		Элементы.ФормаОтправитьЗаказПоSMS.Видимость = Ложь;
		Элементы.ТоварыИтогСумма.РастягиватьПоГоризонтали = Ложь;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПроцентСкидки();
	УстановитьДоступностьКнопкиОткрытияКонтрагента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Заказ';en='Estimate'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменилсяЗаказ", Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СозданНовыйКонтрагент" Тогда
		Объект.Покупатель = Параметр;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменилисьНастройки" Тогда
		ИспользоватьБыстрыйПодборТоваров = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьБыстрыйПодборТоваровМП");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СуммаОплатыПриИзменении(Элемент)
	
	СкорректироватьСуммуОплатыЕслиНужно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаСкидкиПриИзменении(Элемент)
	
	СкорректироватьСуммуСкидкиЕслиНужно(Истина);
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьЦенуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупательАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульМенеджерКонтактовКлиент = Вычислить("МенеджерКонтактовКлиент");
		// АПК:488-вкл
		Если ТипЗнч(МодульМенеджерКонтактовКлиент) = Тип("ОбщийМодуль") Тогда
			МодульМенеджерКонтактовКлиент.ЗаполнитьСписокВыбораИзКонтактнойКниги(
			Текст,
			ДанныеВыбора,
			СтандартнаяОбработка,
			КэшНайденныхКонтактов,
			Истина
			);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульМенеджерКонтактовКлиент = Вычислить("МенеджерКонтактовКлиент");
		// АПК:488-вкл
		Если ТипЗнч(МодульМенеджерКонтактовКлиент) = Тип("ОбщийМодуль") Тогда
			МодульМенеджерКонтактовКлиент.ОбработкаВыбора(
			Элемент,
			ВыбранноеЗначение,
			СтандартнаяОбработка,
			ЭтаФорма,
			КэшНайденныхКонтактов
			);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	СтруктураДанных = Новый Структура("Товар, ПриходТовара", ТекущаяСтрока.Товар, Ложь);
	ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
	
	Если СтруктураДанных.Цена <> 0 Тогда
		ТекущаяСтрока.Цена = СтруктураДанных.Цена;
	КонецЕсли;
	Если ТекущаяСтрока.Количество = 0 Тогда
		ТекущаяСтрока.Количество = 1;
	КонецЕсли;
	
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентСкидкиПриИзменении(Элемент)
	
	Скидка = Число(СокрЛП(СтрЗаменить(ПроцентСкидки, "%", "")));
	Если Скидка > 100 Тогда
		Скидка = 100;
		ПроцентСкидки = "100%";
	КонецЕсли;
	
	Объект.СуммаСкидки = Объект.Товары.Итог("Сумма") * Скидка / 100;
	
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупательПриИзменении(Элемент)
	
	УстановитьДоступностьКнопкиОткрытияКонтрагента();
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьСчет(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ЗаписатьЗаказ();
	ПечатнаяФорма = СформироватьПечатнуюФорму();
	ПечатнаяФорма.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	
	Возврат Документы.ЗаказМП.СформироватьПечатнуюФорму(Объект.Ссылка);
	
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыДокументаОплаты() Экспорт
	
	НайденнаяСсылка = Документы.ПриходДенегМП.НайтиПоРеквизиту("Основание", Объект.Ссылка);
	
	СтруктураПараметров = Новый Структура("АдресЭП,Телефон,Номер,Ссылка","","","","");
	Если ЗначениеЗаполнено(НайденнаяСсылка) Тогда
		СтруктураПараметров.АдресЭП = НайденнаяСсылка.АдресЭП;
		СтруктураПараметров.Телефон = НайденнаяСсылка.Телефон;
		СтруктураПараметров.Номер = НайденнаяСсылка.Номер;
		СтруктураПараметров.Ссылка = НайденнаяСсылка;
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиенте
Процедура ПринятьОплату(Команда)
	
	РозничныеПродажиМПКлиент.Оплатить(ЭтаФорма, Команда, Ложь, Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНовыйНомер() Экспорт
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.УстановитьНовыйНомер();
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗаказ(Отказ = Ложь) Экспорт
	
	//РозничныеПродажиКлиент.ВыполнитьЗакрытиеИОткрытиеСменыЕслиНужно(ЭтаФорма, Отказ);
	Если НЕ Отказ Тогда
		ЗаписатьЗаказНаСервере();
		Оповестить("ЗаписанЗаказ");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗаказНаСервере()
	
	ЗаказОбъект = РеквизитФормыВЗначение("Объект");
	ЗаказОбъект.Дата = ТекущаяДата();
	ЗаказОбъект.ДополнительныеСвойства.Вставить("ПринудительноСформироватьДокументОплаты", Истина);
	ЗаказОбъект.Записать();
	ЗначениеВРеквизитФормы(ЗаказОбъект, "Объект");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОплатыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура")
		И РезультатЗакрытия.Успешно Тогда
		Объект.СуммаОплаты = РезультатЗакрытия.СуммаОплаты;
		Объект.СуммаКартой = РезультатЗакрытия.СуммаКартой;
		ЗаписатьЗаказ();
		ЗаписатьДокументОплаты(РезультатЗакрытия);
		УстановитьВидимостьПриемаОплаты();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДокументОплаты(РезультатЗакрытия)
	
	ПриходДенегСсылка = Документы.ПриходДенегМП.НайтиПоРеквизиту("Основание", Объект.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(ПриходДенегСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ПриходДенегОбъект = ПриходДенегСсылка.ПолучитьОбъект();
	
	ПриходДенегОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусЧекаККММП.Пробит");
	ПриходДенегОбъект.СуммаОплаты = РезультатЗакрытия.СуммаОплаты;
	ПриходДенегОбъект.СуммаКартой = РезультатЗакрытия.СуммаКартой;
	Если ЗначениеЗаполнено(РезультатЗакрытия.НомерЧека) Тогда
		ПриходДенегОбъект.НомерЧекаККМ = Строка(РезультатЗакрытия.НомерЧека - 1);
	Иначе
		ПриходДенегОбъект.НомерЧекаККМ = "1";
	КонецЕсли;
	Если ЗначениеЗаполнено(РезультатЗакрытия.НомерСмены) Тогда
		ПриходДенегОбъект.НомерСменыККМ = Число(РезультатЗакрытия.НомерСмены);
	КонецЕсли;
	ПриходДенегОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПриемаОплаты()
	
	ПриходДенегСсылка = Документы.ПриходДенегМП.НайтиПоРеквизиту("Основание", Объект.Ссылка);
	
	Если ЗначениеЗаполнено(ПриходДенегСсылка) И ПриходДенегСсылка.Статус = Перечисления.СтатусЧекаККММП.Пробит Тогда
		Элементы.ПриемОплаты.Видимость = Ложь;
		Элементы.Получено.Видимость = Истина;
	Иначе
		Элементы.ПриемОплаты.Видимость = Истина;
		Элементы.Получено.Видимость = Ложь;
	КонецЕсли;
	
	
	#Если МобильноеПриложениеСервер Тогда
		ОборудованиеПечатиМП = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ОборудованиеПечати");
	#Иначе
		ОборудованиеПечатиМП = Неопределено;
	#КонецЕсли

	Если ЗначениеЗаполнено(ОборудованиеПечатиМП) Тогда
		Элементы.ПолученоБезОборудования.Видимость = Ложь;
	Иначе
		Элементы.ПриемОплаты.Видимость = Ложь;
		Элементы.Получено.Видимость = Ложь;
		Элементы.ПолученоБезОборудования.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолучениеРезультатаПоПлатежнойСистеме(Сумма, РезультатОперацииПоПлатежнойСистеме) Экспорт
	
	Если НЕ РезультатОперацииПоПлатежнойСистеме.Успешно Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаписатьЗаказ();
	КонецЕсли;
	
	Если РезультатОперацииПоПлатежнойСистеме.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежнойСистемыМП.Оплата")
		ИЛИ РезультатОперацииПоПлатежнойСистеме.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежнойСистемыМП.ВозвратОплаты") Тогда
		
		ДобавитьОперациюПоПлатежнойСистеме(РезультатОперацииПоПлатежнойСистеме);
		
	ИначеЕсли РезультатОперацииПоПлатежнойСистеме.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежнойСистемыМП.ОтменаОплаты") Тогда
		
		ДобавитьОперациюПоПлатежнойСистеме(РезультатОперацииПоПлатежнойСистеме);
		УдалитьОплатуПоПлатежнойКарте();
		
	КонецЕсли;
	
	//ЗаполнитьИнформациюОбОплате();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСсылочныйНомер() Экспорт
	
	Возврат ПолучитьСсылочныйНомерНаСервере();
	
КонецФункции

&НаСервере
Функция ПолучитьСсылочныйНомерНаСервере()
	
	ПриходДенегСсылка = Документы.ПриходДенегМП.НайтиПоРеквизиту("Основание", Объект.Ссылка);
	Возврат ПриходДенегСсылка.СсылочныйНомер;
	
КонецФункции

&НаСервере
Процедура ДобавитьОперациюПоПлатежнойСистеме(РезультатОперации)
	
	ПриходДенегСсылка = Документы.ПриходДенегМП.НайтиПоРеквизиту("Основание", Объект.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(ПриходДенегСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ПриходДенегОбъект = ПриходДенегСсылка.ПолучитьОбъект();
	
	ПриходДенегОбъект.КодАвторизации = РезультатОперации.КодАвторизации;
	ПриходДенегОбъект.СсылочныйНомер = РезультатОперации.НомерСсылкиОперации;
	ПриходДенегОбъект.НомерПлатежнойКарты = РезультатОперации.НомерКарты;
	ПриходДенегОбъект.ДатаОперацииЭТ = РезультатОперации.ДатаОперации;
	ПриходДенегОбъект.СлипЧек = Новый ХранилищеЗначения(РезультатОперации.СлипЧек, Новый СжатиеДанных(9));	
	ПриходДенегОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОплатуПоПлатежнойКарте()
	
	//ПриходДенегСсылка = Документы.ПриходДенег.НайтиПоРеквизиту("Основание", Объект.Ссылка);
	//ПриходДенегОбъект = ПриходДенегСсылка.ПолучитьОбъект();
	//
	//ПриходДенегОбъект.КодАвторизации = Неопределено;
	//ПриходДенегОбъект.СсылочныйНомер = Неопределено;
	//ПриходДенегОбъект.НомерПлатежнойКарты = Неопределено;
	//ПриходДенегОбъект.ДатаОперацииЭТ = Неопределено;
	//ПриходДенегОбъект.СлипЧек = Неопределено;
	//ПриходДенегОбъект.СуммаКартой = Неопределено;
	//ПриходДенегОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗаказВPDF(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ЗаписатьЗаказ();
	СтруктураВозврата = ЗаписатьВPDF(КаталогДокументов());
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект), СтруктураВозврата.ПолноеИмяФайла);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьВPDF(КаталогДокументов)
	
	ПечатнаяФорма = СформироватьПечатнуюФорму();
	
	ИмяФайла = НСтр("ru='Счет ';en='Estimate '")
	+ Объект.Номер + НСтр("ru=' от ';en=' of '")
	+ ОбщегоНазначенияМПКлиентСервер.ПолучитьФорматированнуюСтрокуДатыДляФайла(Объект.Дата) + ".pdf";
	ПолноеИмяФайла = ОбщегоНазначенияМПКлиентСервер.ПолучитьПолноеИмяФайла(КаталогДокументов, ИмяФайла);
	ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);
	
	Возврат Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла, ПолноеИмяФайла);
	
КонецФункции

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ИспользоватьБыстрыйПодборТоваров Тогда
		Отказ = Истина;
		ОткрытьФорму("Справочник.ТоварыМП.ФормаВыбора", Новый Структура("РежимВыбора, ТекущаяСтрока", Истина, ВыбранныйТовар), ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ДобавитьТоварВТаблицу(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТоварВТаблицу(Товар)
	
	Если НЕ ЗначениеЗаполнено(Товар) Тогда
		Возврат;
	КонецЕсли;
	ВыбранныйТовар = Товар;
	НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Товар", Товар));
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество + 1;
		РассчитатьСуммуВСтроке(НайденныеСтроки[0]);
	Иначе
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Товар = Товар;
		СтруктураДанных = Новый Структура("Товар, ПриходТовара", Товар, Ложь);
		ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
		Если СтруктураДанных.Цена <> 0 Тогда
			НоваяСтрока.Цена = СтруктураДанных.Цена;
		КонецЕсли;
		Если НоваяСтрока.Количество = 0 Тогда
			НоваяСтрока.Количество = 1;
		КонецЕсли;
		РассчитатьСуммуВСтроке(НоваяСтрока);
	КонецЕсли;
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеНомера()
	
	Если Константы.СинхронизацияВключенаМП.Получить() И Объект.НомерПодтвержден = Ложь Тогда
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Истина;
		ЭтаФорма.Элементы.Номер.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Ложь;
		ЭтаФорма.Элементы.Номер.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Если ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмойНаМобильном") Тогда
			Возврат;
		КонецЕсли;
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульСинхронизацияПушУведомленияМПУНФ = Вычислить("СинхронизацияПушУведомленияМПУНФ");
		// АПК:488-вкл
		Если ТипЗнч(МодульСинхронизацияПушУведомленияМПУНФ) = Тип("ОбщийМодуль") Тогда
			МодульСинхронизацияПушУведомленияМПУНФ.ОтправитьПушУведомление("001");
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Возврат; // Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры


#КонецОбласти
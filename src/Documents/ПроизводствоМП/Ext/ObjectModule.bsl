#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ОстаткиТоваровМП.Записывать = Истина;
	
	КонтролироватьОстатки = НЕ Константы.НеКонтролироватьОстаткиМП.Получить()
		И НЕ ДополнительныеСвойства.Свойство("НеКонтролироватьОстатки");
		
	// Движения по регистру ОстаткиТоваров Расход.
	Если КонтролироватьОстатки Тогда
		Остатки = РегистрыНакопления.ОстаткиТоваровМП.Остатки();
		ТаблицаМатериалов = Материалы.Выгрузить(, "Товар, Количество, Сумма");
		ТаблицаМатериалов.Свернуть("Товар", "Количество, Сумма");
	Иначе
		ТаблицаМатериалов = Материалы;
	КонецЕсли;
	
	Для каждого ТекСтрокаТовары Из ТаблицаМатериалов Цикл
		
		Если ТекСтрокаТовары.Товар.Вид = Перечисления.ВидыТоваровМП.Товар Тогда
			
			Если КонтролироватьОстатки Тогда
				НайденнаяСтрокаОстатков = Остатки.Найти(ТекСтрокаТовары.Товар, "Товар");
				Если НайденнаяСтрокаОстатков = Неопределено Тогда
					КоличествоНаСкладе = 0;
				Иначе
					КоличествоНаСкладе = НайденнаяСтрокаОстатков.Количество;
				КонецЕсли;
				Если КоличествоНаСкладе < ТекСтрокаТовары.Количество Тогда
					СтрокаОшибки = НСтр("ru='На складе нет достаточного количества остатков товара:"
					"%Товар%. Не хватает %Количество%';en='In stock do not have enough residual item:"
					"%Товар%. Not enough %Количество%'");
					СтрокаОшибки = СтрЗаменить(СтрокаОшибки, "%Товар%", СокрЛП(ТекСтрокаТовары.Товар));
					СтрокаОшибки = СтрЗаменить(СтрокаОшибки, "%Количество%", СокрЛП(ТекСтрокаТовары.Количество - КоличествоНаСкладе));
					ОбщегоНазначенияМПКлиентСервер.СообщитьПользователю(СтрокаОшибки, , Отказ);
					Продолжить;
				КонецЕсли
			КонецЕсли;
			
			Движение = Движения.ОстаткиТоваровМП.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Товар = ТекСтрокаТовары.Товар;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Операция = Перечисления.ТоварныеОперацииМП.Производство;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Движения по регистру ОстаткиТоваров Приход.
	Для каждого ТекСтрокаТовары Из Продукция Цикл
		
		Если ТекСтрокаТовары.Товар.Вид = Перечисления.ВидыТоваровМП.Товар Тогда
			
			Движение = Движения.ОстаткиТоваровМП.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Товар = ТекСтрокаТовары.Товар;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Операция = Перечисления.ТоварныеОперацииМП.Производство;
			
		КонецЕсли;
		
		НоваяЗапись = РегистрыСведений.ЦеныПоставщиковМП.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Товар = ТекСтрокаТовары.Товар;
		НоваяЗапись.Цена = ТекСтрокаТовары.Цена;
		НоваяЗапись.Записать(Истина);
		
	КонецЦикла;
	
	Движения.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПометкаУдаления Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	СуммаДокумента = Продукция.Итог("Сумма");
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Комментарий = "";
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
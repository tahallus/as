
#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Продукция.Итог("Сумма");
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеТоварПриИзменении(СтруктураДанных)
	
	ТоварСсылка = СтруктураДанных.Товар;
	
	Если ЗначениеЗаполнено(ТоварСсылка) Тогда
		ТоварЦена = РегистрыСведений.ЦеныПоставщиковМП.ПолучитьЦенуТовара(
			?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()),
			ТоварСсылка
		);
	Иначе
		ТоварЦена = 0;
	КонецЕсли;
	
	СтруктураДанных.Вставить("Цена", ТоварЦена);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтроке(ТекущаяСтрока)
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЦенуВСтроке(ТекущаяСтрока)
	
	Если ТекущаяСтрока.Количество <> 0 Тогда
		ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество;
	Иначе
		ТекущаяСтрока.Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/proizvodstvo/kartochka-dokumenta-proizvodstvo/");
	// АПК:534-вкл методы безопасного запуска обеспечиваются этой функцией
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Производство';en='Production operations'"));
	
	УстановитьОтображениеНомера();
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Элементы.ГруппаСебестоимость.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	#КонецЕсли

	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Производство';en='Production operations'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменилосьКоличествоТовара");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Если ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмойНаМобильном") Тогда
			Возврат;
		КонецЕсли;
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульСинхронизацияПушУведомленияМПУНФ = Вычислить("СинхронизацияПушУведомленияМПУНФ");
		// АПК:488-вкл
		Если ТипЗнч(МодульСинхронизацияПушУведомленияМПУНФ) = Тип("ОбщийМодуль") Тогда
			МодульСинхронизацияПушУведомленияМПУНФ.ОтправитьПушУведомление("001");
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПродукцияТоварПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Продукция.ТекущиеДанные;
	Если ТекущаяСтрока.Количество = 0 Тогда
		ТекущаяСтрока.Количество = 1;
	КонецЕсли;
	
	ТекущаяСтрока.Спецификация = ПолучитьОсновнуюСпецификацию(ТекущаяСтрока.Товар);
	
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	РассчитатьСебестоимостьВыпуска();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнуюСпецификацию(Товар)
	
	Возврат Товар.Спецификация;
	
КонецФункции

&НаКлиенте
Процедура ПродукцияЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Продукция.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Продукция.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Продукция.ТекущиеДанные;
	РассчитатьЦенуВСтроке(ТекущаяСтрока);
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПослеУдаления(Элемент)
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыТоварПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	СтруктураДанных = Новый Структура("Товар", ТекущаяСтрока.Товар);
	ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
	ТекущаяСтрока.Цена = СтруктураДанных.Цена;
	Если ТекущаяСтрока.Количество = 0 Тогда
		ТекущаяСтрока.Количество = 1;
	КонецЕсли;
	
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	РассчитатьЦенуВСтроке(ТекущаяСтрока);
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСебестоимостьВыпуска()
	
	НужноРаспределить = Объект.Материалы.Итог("Сумма");
	КоличествоПродукции = Объект.Продукция.Итог("Количество");
	СебестоимостьЕдиницыПродукции = ?(КоличествоПродукции = 0, 0, НужноРаспределить / КоличествоПродукции);
	КоличествоСтрок = Объект.Продукция.Количество();
	ТекНомерСтроки = 0;
	Для каждого ТекСтрока Из Объект.Продукция Цикл
		ТекНомерСтроки = ТекНомерСтроки + 1;
		Если ТекНомерСтроки = КоличествоСтрок Тогда
			ВсегоРаспределено = Объект.Продукция.Итог("Сумма") - ТекСтрока.Сумма;
			ТекСтрока.Сумма = НужноРаспределить - ВсегоРаспределено;
		Иначе
			ТекСтрока.Сумма = ТекСтрока.Количество * СебестоимостьЕдиницыПродукции;
		КонецЕсли;
		РассчитатьЦенуВСтроке(ТекСтрока);
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПослеУдаления(Элемент)
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	Для каждого ТекСтрока Из Объект.Материалы Цикл
		СтруктураДанных = Новый Структура("Товар", ТекСтрока.Товар);
		ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
		ТекСтрока.Цена = СтруктураДанных.Цена;
		Если ТекСтрока.Количество = 0 Тогда
			ТекСтрока.Количество = 1;
		КонецЕсли;
		РассчитатьСуммуВСтроке(ТекСтрока);
	КонецЦикла;
	
	РассчитатьСебестоимостьВыпуска();
	РассчитатьСуммуДокумента();
	
	ПоказатьПредупреждение(, НСтр("ru='Себестоимость пересчитана.';en='Calculate complete.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСпецификации(Команда)
	
	Если Объект.Материалы.Количество() > 0 Тогда
		ПоказатьВопросПроСоставМатериалов();
	Иначе
		Записать();
		Объект.Материалы.Очистить();
		ЗаполнитьПоСпецификацииНаСервере();
		
		РассчитатьСебестоимостьВыпуска();
		РассчитатьСуммуДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросПроСоставМатериалов()
	
	ОчиститьСообщения();
	Текст = НСтр("ru='Состав материалов будет перезаполнен. Продолжить?';en='The composition of the materials will be refilled. Continue?'");
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросПроСоставМатериаловЗавершение",  ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросПроСоставМатериаловЗавершение(Результат, Параметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
		Объект.Материалы.Очистить();
		ЗаполнитьПоСпецификацииНаСервере();
		
		РассчитатьСебестоимостьВыпуска();
		РассчитатьСуммуДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСпецификацииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацииСостав.Материал КАК Материал,
	|	СпецификацииСостав.Количество КАК Количество
	|ИЗ
	|	Документ.ПроизводствоМП.Продукция КАК ПроизводствоПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпецификацииМП.Состав КАК СпецификацииСостав
	|		ПО ПроизводствоПродукция.Спецификация = СпецификацииСостав.Ссылка
	|ГДЕ
	|	ПроизводствоПродукция.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.Товар = Выборка.Материал;
		НоваяСтрока.Количество = Выборка.Количество;
		ТоварЦена = РегистрыСведений.ЦеныПоставщиковМП.ПолучитьЦенуТовара(
			?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()),
			НоваяСтрока.Товар
		);
		НоваяСтрока.Цена = ТоварЦена;
		НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеНомера()
	
	Если Константы.СинхронизацияВключенаМП.Получить() И Объект.НомерПодтвержден = Ложь Тогда
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Истина;
		ЭтаФорма.Элементы.Номер.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Ложь;
		ЭтаФорма.Элементы.Номер.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

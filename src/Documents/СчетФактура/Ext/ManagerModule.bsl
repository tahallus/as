#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Контрагент)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
//@skip-warning
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если Параметры.Свойство("Ключ")
			И Параметры.Ключ.УдалитьЗапасы.Количество() > 0 Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "УдалитьФормаДокумента";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаСчетФактура, СтруктураДополнительныеСвойства) Экспорт

	// Курсы валют нужно брать на даты документов-оснований.
	// У СФ может быть несколько курсов валют.
	
	ТЗКурсыВалютДокументовОснований = Новый ТаблицаЗначений;
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("ДокументОснование",
		ДокументСсылкаСчетФактура.Метаданные().ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип);
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("Курс", Новый ОписаниеТипов("Число"));
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("КурсУпрВал", Новый ОписаниеТипов("Число"));
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("КратностьУпрВал", Новый ОписаниеТипов("Число"));
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("КурсРегВал", Новый ОписаниеТипов("Число"));
	ТЗКурсыВалютДокументовОснований.Колонки.Добавить("КратностьРегВал", Новый ОписаниеТипов("Число"));
	
	НациональнаяВалюта = Константы.НациональнаяВалюта.Получить();
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	
	ДокументВВалюте = (ДокументСсылкаСчетФактура.Договор.ВалютаРасчетов <> НациональнаяВалюта) И (ДокументСсылкаСчетФактура.ВалютаДокумента <> НациональнаяВалюта);
	ЭтоПродажа = (ДокументСсылкаСчетФактура.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Продажа
					ИЛИ
				  ДокументСсылкаСчетФактура.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Корректировка)
				И ДокументВВалюте;
	
	Если ЭтоПродажа Тогда
		
		ТЗДокументыОснований = ДокументСсылкаСчетФактура.ДокументыОснования.Выгрузить(, "ДокументОснование");
		СтрокаОснованиеДоставки = ТЗДокументыОснований.Добавить();
		СтрокаОснованиеДоставки.ДокументОснование = ДокументСсылкаСчетФактура.УдалитьДокументОснованиеДоставки;
		ТЗДокументыОснований.Свернуть("ДокументОснование");
		
		Для Каждого ТекущаяСтрока Из ТЗДокументыОснований Цикл
			Если Не ЗначениеЗаполнено(ТекущаяСтрока.ДокументОснование) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаКурсы = ТЗКурсыВалютДокументовОснований.Добавить();
			НоваяСтрокаКурсы.ДокументОснование = ТекущаяСтрока.ДокументОснование;
			
			// Валюта расчетов по договору.
			Если ТекущаяСтрока.ДокументОснование.ВалютаДокумента = НациональнаяВалюта Тогда
				СтруктураОтбора = Новый Структура("Валюта", ТекущаяСтрока.ДокументОснование.Договор.ВалютаРасчетов);
				СтруктураКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяСтрока.ДокументОснование.Дата, СтруктураОтбора);
				
				НоваяСтрокаКурсы.Курс = СтруктураКурсКратность.Курс;
				НоваяСтрокаКурсы.Кратность = СтруктураКурсКратность.Кратность;
			Иначе
				НоваяСтрокаКурсы.Курс = ТекущаяСтрока.ДокументОснование.Курс;
				НоваяСтрокаКурсы.Кратность = ТекущаяСтрока.ДокументОснование.Кратность;
			КонецЕсли;
			
			// Валюта учета.
			СтруктураОтбора = Новый Структура("Валюта", ВалютаУчета);
			СтруктураКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяСтрока.ДокументОснование.Дата, СтруктураОтбора);
			
			НоваяСтрокаКурсы.КурсУпрВал = СтруктураКурсКратность.Курс;
			НоваяСтрокаКурсы.КратностьУпрВал = СтруктураКурсКратность.Кратность;
			
			// Национальная валюта.
			Если ВалютаУчета = НациональнаяВалюта Тогда
				НоваяСтрокаКурсы.КурсРегВал = НоваяСтрокаКурсы.КурсУпрВал;
				НоваяСтрокаКурсы.КратностьРегВал = НоваяСтрокаКурсы.КратностьУпрВал;
			Иначе
				СтруктураОтбора = Новый Структура("Валюта", НациональнаяВалюта);
				СтруктураКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяСтрока.ДокументОснование.Дата, СтруктураОтбора);
				
				НоваяСтрокаКурсы.КурсРегВал = СтруктураКурсКратность.Курс;
				НоваяСтрокаКурсы.КратностьРегВал = СтруктураКурсКратность.Кратность;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТЗКурсыВалютДокументовОснований", ТЗКурсыВалютДокументовОснований);
	Запрос.УстановитьПараметр("ВалютаУчета", ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", НациональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаНакладной", ДокументСсылкаСчетФактура.ВалютаДокумента);
	Запрос.УстановитьПараметр("ЭтоПродажа", ЭтоПродажа);
	
	Запрос.УстановитьПараметр("Ссылка"						, ДокументСсылкаСчетФактура);
	Запрос.УстановитьПараметр("Организация"					, СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени"				, СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики"	, СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии"			, СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	
	Запрос.УстановитьПараметр("НеобходимоОтразитьСчетФактуройЗапасыВРазрезеГТД", СтруктураДополнительныеСвойства.НеобходимоОтразитьСчетФактуройЗапасыВРазрезеГТД);
	
	Запрос.УстановитьПараметр("ОтражатьДоставку", ЗначениеЗаполнено(ДокументСсылкаСчетФактура.УдалитьНоменклатураДоставки));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КорректировкаРеализации.ОтражатьВУчете, ИСТИНА) КАК ОтражатьВУчете
	|ПОМЕСТИТЬ Вт_ОтражатьВУчете
	|ИЗ
	|	Документ.СчетФактура.ДокументыОснования КАК СчетФактураДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО СчетФактураДокументыОснования.ДокументОснование = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	СчетФактураДокументыОснования.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураДокументыОснования.Ссылка
	|ПОМЕСТИТЬ Вт_КорректируемыйСФ
	|ИЗ
	|	Документ.СчетФактура.ДокументыОснования КАК СчетФактураДокументыОснования
	|ГДЕ
	|	СчетФактураДокументыОснования.ДокументОснование В
	|			(ВЫБРАТЬ
	|				ВЫРАЗИТЬ(СчетФактураДокументыОснования.ДокументОснование КАК Документ.КорректировкаРеализации).ДокументОснование КАК ДокументОснование
	|			ИЗ
	|				Документ.СчетФактура.ДокументыОснования КАК СчетФактураДокументыОснования
	|			ГДЕ
	|				СчетФактураДокументыОснования.Ссылка = &Ссылка
	|				И ТИПЗНАЧЕНИЯ(СчетФактураДокументыОснования.ДокументОснование) = ТИП(Документ.КорректировкаРеализации))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	СчетФактураЗапасы.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	МИНИМУМ(СчетФактураЗапасы.НомерСтроки) КАК НомерСтроки,
	|	СчетФактураЗапасы.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СчетФактураЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА СчетФактураЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(СчетФактураЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА СчетФактураЗапасы.Количество
	|			ИНАЧЕ СчетФактураЗапасы.Количество * СчетФактураЗапасы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ) КАК Количество,
	|	СчетФактураЗапасы.СтранаПроисхождения,
	|	СчетФактураЗапасы.НомерГТД
	|ИЗ
	|	Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_ОтражатьВУчете КАК Вт_ОтражатьВУчете
	|		ПО (Вт_ОтражатьВУчете.ОтражатьВУчете)
	|ГДЕ
	|	СчетФактураЗапасы.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И &НеобходимоОтразитьСчетФактуройЗапасыВРазрезеГТД
	|	И СчетФактураЗапасы.Ссылка = &Ссылка
	|	И (СчетФактураЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Продажа)
	|			ИЛИ СчетФактураЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка))
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураЗапасы.СтранаПроисхождения,
	|	СчетФактураЗапасы.НомерГТД,
	|	СчетФактураЗапасы.Номенклатура,
	|	СчетФактураЗапасы.Ссылка.Дата,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СчетФактураЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА СчетФактураЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыВРазрезеГТД.Организация,
	|	ЗапасыВРазрезеГТД.Период,
	|	ЗапасыВРазрезеГТД.ВидДвижения,
	|	ЗапасыВРазрезеГТД.НомерСтроки,
	|	ЗапасыВРазрезеГТД.Номенклатура,
	|	ЗапасыВРазрезеГТД.Характеристика,
	|	ЗапасыВРазрезеГТД.Партия,
	|	-ЗапасыВРазрезеГТД.Количество,
	|	ЗапасыВРазрезеГТД.СтранаПроисхождения,
	|	ЗапасыВРазрезеГТД.НомерГТД
	|ИЗ
	|	РегистрНакопления.ЗапасыВРазрезеГТД КАК ЗапасыВРазрезеГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_ОтражатьВУчете КАК Вт_ОтражатьВУчете
	|		ПО (Вт_ОтражатьВУчете.ОтражатьВУчете)
	|ГДЕ
	|	ЗапасыВРазрезеГТД.Регистратор В
	|			(ВЫБРАТЬ
	|				Вт_КорректируемыйСФ.Ссылка
	|			ИЗ
	|				Вт_КорректируемыйСФ КАК Вт_КорректируемыйСФ)
	|	И (ЗапасыВРазрезеГТД.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Продажа)
	|			ИЛИ ЗапасыВРазрезеГТД.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактура.Договор.ВалютаРасчетов КАК ДоговорВалютаРасчетов,
	|	СчетФактура.Договор.РасчетыВУсловныхЕдиницах КАК ДоговорРасчетыВУсловныхЕдиницах,
	|	СчетФактура.Контрагент,
	|	СчетФактура.ВалютаДокумента,
	|	СчетФактура.Кратность,
	|	СчетФактура.Курс,
	|	СчетФактура.Договор,
	|	СчетФактура.Дата
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.СчетФактура КАК СчетФактура
	|ГДЕ
	|	СчетФактура.Ссылка = &Ссылка
	|	И &ЭтоПродажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&МоментВремени,
	|			Валюта В (&ВалютаУчета, &ВалютаНациональная, &ВалютаНакладной)
	|				ИЛИ Валюта В
	|					(ВЫБРАТЬ
	|						ВременнаяТаблицаШапка.ДоговорВалютаРасчетов
	|					ИЗ
	|						ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка)) КАК КурсыВалютСрезПоследних
	|ГДЕ
	|	&ЭтоПродажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗКурсыВалютДокументовОснований.ДокументОснование КАК ДокументОснование,
	|	ТЗКурсыВалютДокументовОснований.Курс КАК Курс,
	|	ТЗКурсыВалютДокументовОснований.Кратность КАК Кратность,
	|	ТЗКурсыВалютДокументовОснований.КурсУпрВал КАК КурсУпрВал,
	|	ТЗКурсыВалютДокументовОснований.КратностьУпрВал КАК КратностьУпрВал,
	|	ТЗКурсыВалютДокументовОснований.КурсРегВал КАК КурсРегВал,
	|	ТЗКурсыВалютДокументовОснований.КратностьРегВал КАК КратностьРегВал
	|ПОМЕСТИТЬ ВТ_КурсыДокОсн
	|ИЗ
	|	&ТЗКурсыВалютДокументовОснований КАК ТЗКурсыВалютДокументовОснований
	|ГДЕ
	|	&ЭтоПродажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СчетФактураЗапасы.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ МаксНомерСтрокиЗапасы
	|ИЗ
	|	Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
	|ГДЕ
	|	СчетФактураЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураЗапасы.НомерСтроки КАК НомерСтроки,
	|	СчетФактураЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЛОЖЬ
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА СчетФактураЗапасы.СуммаНДС * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.КратностьРегВал)
	|					ИНАЧЕ СчетФактураЗапасы.СуммаНДС * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность)
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактураЗапасы.СуммаНДС * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.КратностьРегВал)
	|			ИНАЧЕ СчетФактураЗапасы.СуммаНДС * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСЗакупкиПродажи,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактураЗапасы.Всего * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.КратностьРегВал)
	|			ИНАЧЕ СчетФактураЗапасы.Всего * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЛОЖЬ
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА СчетФактураЗапасы.СуммаНДС * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность / (ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал)
	|					ИНАЧЕ СчетФактураЗапасы.СуммаНДС
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактураЗапасы.Всего * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность / (ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал)
	|			ИНАЧЕ СчетФактураЗапасы.Всего
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактураЗапасы.Всего
	|			ИНАЧЕ СчетФактураЗапасы.Всего * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал / (ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактураЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактураЗапасы.СуммаНДС
	|			ИНАЧЕ СчетФактураЗапасы.СуммаНДС * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал / (ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСРуб,
	|	СчетФактураЗапасы.Всего КАК ВсегоВалютаДокумента,
	|	СчетФактураЗапасы.СуммаНДС КАК СуммаНДСВалютаДокумента,
	|	СчетФактураЗапасы.ДокументОснование,
	|	ВТ_КурсыДокОсн.Курс,
	|	ВТ_КурсыДокОсн.Кратность,
	|	ВТ_КурсыДокОсн.КурсУпрВал,
	|	ВТ_КурсыДокОсн.КратностьУпрВал,
	|	ВТ_КурсыДокОсн.КурсРегВал,
	|	ВТ_КурсыДокОсн.КратностьРегВал,
	|	СчетФактураЗапасы.Ссылка.Ссылка КАК Документ
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыДокОсн КАК ВТ_КурсыДокОсн
	|		ПО (ВТ_КурсыДокОсн.ДокументОснование = СчетФактураЗапасы.ДокументОснование),
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	СчетФактураЗапасы.Ссылка = &Ссылка
	|	И &ЭтоПродажа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МаксНомерСтрокиЗапасы.НомерСтроки, 0) + 1,
	|	СчетФактура.УдалитьСтавкаНДСДоставки,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЛОЖЬ
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА СчетФактура.УдалитьСуммаНДСДоставки * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.КратностьРегВал)
	|					ИНАЧЕ СчетФактура.УдалитьСуммаНДСДоставки * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность)
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактура.УдалитьСуммаНДСДоставки * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.КратностьРегВал)
	|			ИНАЧЕ СчетФактура.УдалитьСуммаНДСДоставки * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА (СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки) * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.КратностьРегВал)
	|			ИНАЧЕ (СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки) * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЛОЖЬ
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА СчетФактура.УдалитьСуммаНДСДоставки * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность / (ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал)
	|					ИНАЧЕ СчетФактура.УдалитьСуммаНДСДоставки
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА (СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки) * ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность / (ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал)
	|			ИНАЧЕ СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки
	|			ИНАЧЕ (СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки) * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал / (ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетФактура.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА СчетФактура.УдалитьСуммаНДСДоставки
	|			ИНАЧЕ СчетФактура.УдалитьСуммаНДСДоставки * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьРегВал / (ВТ_КурсыДокОсн.КурсРегВал * ВТ_КурсыДокОсн.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)),
	|	СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки,
	|	СчетФактура.УдалитьСуммаНДСДоставки,
	|	СчетФактура.УдалитьДокументОснование,
	|	ВТ_КурсыДокОсн.Курс,
	|	ВТ_КурсыДокОсн.Кратность,
	|	ВТ_КурсыДокОсн.КурсУпрВал,
	|	ВТ_КурсыДокОсн.КратностьУпрВал,
	|	ВТ_КурсыДокОсн.КурсРегВал,
	|	ВТ_КурсыДокОсн.КратностьРегВал,
	|	СчетФактура.Ссылка
	|ИЗ
	|	Документ.СчетФактура КАК СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыДокОсн КАК ВТ_КурсыДокОсн
	|		ПО (ВТ_КурсыДокОсн.ДокументОснование = СчетФактура.УдалитьДокументОснованиеДоставки),
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка,
	|	МаксНомерСтрокиЗапасы КАК МаксНомерСтрокиЗапасы
	|ГДЕ
	|	&ОтражатьДоставку
	|	И СчетФактура.Ссылка = &Ссылка
	|	И &ЭтоПродажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * ВТ_КурсыДокОсн.Курс * ВТ_КурсыДокОсн.КратностьУпрВал / (ВТ_КурсыДокОсн.КурсУпрВал * ВТ_КурсыДокОсн.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаРасчетов) КАК СуммаВал,
	|	ТаблицаДокумента.Ссылка.Договор.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2))) КАК СуммаРубПоКурсуАванса,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ВТ_КурсыДокОсн.Курс / ВТ_КурсыДокОсн.Кратность КАК ЧИСЛО(15, 2))) КАК СуммаРуб,
	|	ТаблицаДокумента.ДокументОснование,
	|	ВТ_КурсыДокОсн.Курс,
	|	ВТ_КурсыДокОсн.Кратность,
	|	ВТ_КурсыДокОсн.КурсУпрВал,
	|	ВТ_КурсыДокОсн.КратностьУпрВал,
	|	ВТ_КурсыДокОсн.КурсРегВал,
	|	ВТ_КурсыДокОсн.КратностьРегВал
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплата
	|ИЗ
	|	Документ.СчетФактура.УдалитьПредоплата КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыДокОсн КАК ВТ_КурсыДокОсн
	|		ПО (ВТ_КурсыДокОсн.ДокументОснование = ТаблицаДокумента.ДокументОснование)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &ЭтоПродажа
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов,
	|	ТаблицаДокумента.Ссылка.Договор.РасчетыВУсловныхЕдиницах,
	|	ТаблицаДокумента.ДокументОснование,
	|	ВТ_КурсыДокОсн.КратностьУпрВал,
	|	ВТ_КурсыДокОсн.КурсРегВал,
	|	ВТ_КурсыДокОсн.Курс,
	|	ВТ_КурсыДокОсн.Кратность,
	|	ВТ_КурсыДокОсн.КурсУпрВал,
	|	ВТ_КурсыДокОсн.КратностьРегВал";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", МассивРезультатов[2].Выгрузить());
	
	// Суммы документов регламентированный учет
	Если ЭтоПродажа
		// Если расчеты в у.е. не ведутся, то печатная форма СФ на продажу (но не на аванс) печатается в валюте.
		// Регистры РасчетыСПокупателями не двигается.
		И ДокументСсылкаСчетФактура.Договор.РасчетыВУсловныхЕдиницах Тогда
		
		РасчетыПроведениеДокументов.ЗаполнитьСписокТаблицДляПересчета(ДокументСсылкаСчетФактура, СтруктураДополнительныеСвойства);
		
		ТаблицаВзаиморасчеты = РасчетыПроведениеДокументов.ПодготовитьТаблицуДокументаРасчетыВВалютеРуб(ДокументСсылкаСчетФактура, СтруктураДополнительныеСвойства);
		РасчетыПроведениеДокументов.РаспределитьАвансыПоТаблицеРеализации(ДокументСсылкаСчетФактура, СтруктураДополнительныеСвойства, ТаблицаВзаиморасчеты, "УдалитьЗапасы");
		
		Для каждого ДанныеТаблицы Из СтруктураДополнительныеСвойства.МассивТаблицДляПересчета Цикл
			ДанныеТаблицы.Вставить("ВременнаяТаблица", СтруктураДополнительныеСвойства.ДляПроведения.ТаблицаСуммДокумента);
		КонецЦикла;
		
		РасчетыПроведениеДокументов.СформироватьТаблицаСуммыДокументовРегламентированныйУчет(ДокументСсылкаСчетФактура, СтруктураДополнительныеСвойства);
		
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммыДокументовРегламентированныйУчет", Новый ТаблицаЗначений);
	КонецЕсли;
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаСчетФактура, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если ПроведениеДокументовУНФ.КонтрольОстатковВыключен() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временная таблицы "ДвиженияЗапасыВРазрезеГТДИзменение"
	// содержат записи, необходимо выполнить контроль поступления товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК Организация,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК Номенклатура,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТД,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК Характеристика,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК Партия,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхождения,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, Номенклатура, НомерГТД, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		// Отрицательный остаток по товарам в разрезе ГТД.
		ВыборкаИзРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			
			ПредставлениеНоменклатурыТекст = Справочники.Номенклатура.Представление(ВыборкаИзРезультатаЗапроса.Номенклатура,
				ВыборкаИзРезультатаЗапроса.Характеристика,  ВыборкаИзРезультатаЗапроса.Партия);
			
			Если ЗначениеЗаполнено(ВыборкаИзРезультатаЗапроса.НомерГТД) Тогда
				ПредставлениеНоменклатурыТекст = ПредставлениеНоменклатурыТекст + " | """ + СокрЛП(
					ВыборкаИзРезультатаЗапроса.НомерГТД) + """";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаИзРезультатаЗапроса.СтранаПроисхождения)Тогда
				ПредставлениеНоменклатурыТекст = ПредставлениеНоменклатурыТекст + " | """ + СокрЛП(ВыборкаИзРезультатаЗапроса.СтранаПроисхождения) + """";
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1 - отрицательный остаток запасов в разрезе ГТД.
											|Остаток запасов в разрезе ГТД (количество): %2.'"),
				ПредставлениеНоменклатурыТекст, ВыборкаИзРезультатаЗапроса.КоличествоОстатокЗапасыВРазрезеГТД);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументСсылкаСчетФактура, , , Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьПараметрыЗаполненияКорректировочногоСчетаФактуры(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.ВидОперации,
	|	КорректировкаРеализации.ДокументОснование КАК ДокументРеализации,
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации,
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации.ВидОперации КАК ИсправляемыйДокументРеализацииВидОперации
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка = &ДокументОснование";
	
	РеквизитыОснования	= Запрос.Выполнить().Выбрать();
	РеквизитыОснования.Следующий();
	
	ОснованиеДляВидаОперации	= Документы.КорректировкаРеализации.ПолучитьИсправляемыйДокументРеализации(ДокументОснование);
	Если НЕ ЗначениеЗаполнено(ОснованиеДляВидаОперации) Тогда
		ВызватьИсключение НСтр("ru = 'Не определен исправляемый документ'");
	КонецЕсли;
	
	Реквизиты = Новый Структура("ВидОперации, Исправление, ИсправляемыйСчетФактура, НомерИсправления,
		|УчитыватьИсправлениеИсходногоДокумента, НомерИсходногоДокумента, ДатаИсходногоДокумента,
		|НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента,
		|НомерИсправляемогоКорректировочногоДокумента, ДатаИсправляемогоКорректировочногоДокумента");
		
	ДанныеСчетФактуры = СчетаФактурыУНФ.ПолучитьПодчиненныйСчетФактуру(РеквизитыОснования.ИсправляемыйДокументРеализации);
	Если ДанныеСчетФактуры <> Неопределено Тогда
		Реквизиты.ИсправляемыйСчетФактура = ДанныеСчетФактуры.Ссылка;
	КонецЕсли;
	
	// ВидОперации, Исправление
	
	КорректировкаКорректировочногоСчетаФактуры = Ложь;
	
	Если ЗначениеЗаполнено(РеквизитыОснования.ИсправляемыйДокументРеализации)
		И (ТипЗнч(РеквизитыОснования.ИсправляемыйДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации")) 
		И РеквизитыОснования.ИсправляемыйДокументРеализацииВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
		И РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
		
		// Исправление корректировочного счета-фактуры
		Реквизиты.ВидОперации	= Перечисления.ВидыОперацийСчетФактура.Корректировка;
		Реквизиты.Исправление		= Истина;
		
	ИначеЕсли РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		
		// Корректировочный счет-фактура
		Реквизиты.ВидОперации	= Перечисления.ВидыОперацийСчетФактура.Корректировка;
		Реквизиты.Исправление		= Ложь;
		
		КорректировкаКорректировочногоСчетаФактуры = 
			ТипЗнч(Документы.КорректировкаРеализации.ПолучитьИсправляемыйДокументРеализации(РеквизитыОснования.ДокументРеализации, Ложь)) = Тип("ДокументСсылка.КорректировкаРеализации");
				
	Иначе
	
		Если ТипЗнч(ОснованиеДляВидаОперации) = тип("ДокументСсылка.КорректировкаРеализации") Тогда
			
			// Исправление корректировочного счета-фактуры
			Реквизиты.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Корректировка;
		Иначе
			// По умолчанию: исправление счета-фактуры на реализацию
			Реквизиты.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Продажа;
		КонецЕсли;
	
		Реквизиты.Исправление	= Истина;
		
	КонецЕсли;
	
	ИсходныйДокументРеализации	= Документы.КорректировкаРеализации.ПолучитьИсправляемыйДокументРеализации(РеквизитыОснования.ДокументРеализации);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныйДокументРеализации",		ИсходныйДокументРеализации);
	Запрос.УстановитьПараметр("ДокументРеализации",				РеквизитыОснования.ДокументРеализации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СчетФактураВыданныйДокументыОснования.Ссылка.Дата КАК Дата,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.Номер КАК Номер,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйДокументыОснования.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КорректировочныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	0 КАК НомерИсправления,
	|	СчетФактураВыданныйДокументыОснования.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.УчитыватьИсправлениеИсходногоДокумента КАК УчитыватьИсправлениеИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.НомерИсправляемогоКорректировочногоДокумента КАК НомерИсправляемогоКорректировочногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.ДатаИсправляемогоКорректировочногоДокумента КАК ДатаИсправляемогоКорректировочногоДокумента
	|ИЗ
	|	Документ.СчетФактура.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|ГДЕ
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование = &ИсходныйДокументРеализации
	|	И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК УчитыватьИсправлениеИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправленияИсходногоДокумента,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.Дата КАК ДатаИсправленияИсходногоДокумента
	|ИЗ
	|	Документ.СчетФактура.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|ГДЕ
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументРеализации
	|	И СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	НомерИсправленияИсходногоДокумента	= 0;
	
	РеквизитыИсходногоСчетаФактуры	= МассивРезультатов[0].Выбрать();
	Если РеквизитыИсходногоСчетаФактуры.Следующий() Тогда
		
		Если РеквизитыИсходногоСчетаФактуры.КорректировочныйСчетФактура Тогда
			Реквизиты.ВидОперации	= Перечисления.ВидыОперацийСчетФактура.Корректировка;
		КонецЕсли;
		
		НомерИсправленияИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.НомерИсправления;
		
		// НомерИсходногоДокумента, ДатаИсходногоДокумента
		
		Если РеквизитыИсходногоСчетаФактуры.КорректировочныйСчетФактура ИЛИ РеквизитыИсходногоСчетаФактуры.Исправление Тогда
			
			Реквизиты.НомерИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.НомерИсходногоДокумента;
			Реквизиты.ДатаИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.ДатаИсходногоДокумента;
			
		Иначе
			
			Реквизиты.НомерИсходногоДокумента	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
													РеквизитыИсходногоСчетаФактуры.Номер, Истина, Ложь);
			Реквизиты.ДатаИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.Дата;
			
		КонецЕсли;
		
		// НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента
			
		Если РеквизитыИсходногоСчетаФактуры.КорректировочныйСчетФактура 
			И НЕ КорректировкаКорректировочногоСчетаФактуры Тогда
			
			Реквизиты.УчитыватьИсправлениеИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.УчитыватьИсправлениеИсходногоДокумента;
			
			Если Реквизиты.УчитыватьИсправлениеИсходногоДокумента Тогда
				Реквизиты.НомерИсправленияИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.НомерИсправленияИсходногоДокумента;
				Реквизиты.ДатаИсправленияИсходногоДокумента		= РеквизитыИсходногоСчетаФактуры.ДатаИсправленияИсходногоДокумента;
			КонецЕсли;
			
		ИначеЕсли РеквизитыИсходногоСчетаФактуры.Исправление Тогда
				
			Реквизиты.УчитыватьИсправлениеИсходногоДокумента	= Истина;
			
			Реквизиты.НомерИсправленияИсходногоДокумента		= РеквизитыИсходногоСчетаФактуры.НомерИсправления;
			Реквизиты.ДатаИсправленияИсходногоДокумента			= РеквизитыИсходногоСчетаФактуры.Дата;
			
		КонецЕсли;
		
		// НомерИсправляемогоКорректировочногоДокумента, ДатаИсправляемогоКорректировочногоДокумента
		
		Если РеквизитыИсходногоСчетаФактуры.КорректировочныйСчетФактура Тогда	
			
			Если РеквизитыИсходногоСчетаФактуры.Исправление Тогда
				Реквизиты.НомерИсправляемогоКорректировочногоДокумента	= РеквизитыИсходногоСчетаФактуры.НомерИсправляемогоКорректировочногоДокумента;
				Реквизиты.ДатаИсправляемогоКорректировочногоДокумента	= РеквизитыИсходногоСчетаФактуры.ДатаИсправляемогоКорректировочногоДокумента;
			ИначеЕсли Реквизиты.Исправление Тогда
				Реквизиты.НомерИсправляемогоКорректировочногоДокумента	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
					РеквизитыИсходногоСчетаФактуры.Номер, Истина, Ложь);
				Реквизиты.ДатаИсправляемогоКорректировочногоДокумента	= РеквизитыИсходногоСчетаФактуры.Дата;
			ИначеЕсли КорректировкаКорректировочногоСчетаФактуры Тогда
				Реквизиты.НомерИсходногоДокумента	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
					РеквизитыИсходногоСчетаФактуры.Номер, Истина, Ложь);
				Реквизиты.ДатаИсходногоДокумента	= РеквизитыИсходногоСчетаФактуры.Дата;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	// УчитыватьИсправлениеИсходногоДокумента, НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента
	
	ВыборкаНомерИсправления	= МассивРезультатов[1].Выбрать();
	Если ВыборкаНомерИсправления.Следующий() Тогда
	
		НомерИсправленияИсходногоДокумента	= Макс(НомерИсправленияИсходногоДокумента, ВыборкаНомерИсправления.НомерИсправленияИсходногоДокумента);
	
		Если Реквизиты.УчитыватьИсправлениеИсходногоДокумента = Неопределено
			И Реквизиты.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Корректировка
			И ЗначениеЗаполнено(ВыборкаНомерИсправления.НомерИсправленияИсходногоДокумента) Тогда
			
			ЗаполнитьЗначенияСвойств(Реквизиты, ВыборкаНомерИсправления);
			
		ИначеЕсли КорректировкаКорректировочногоСчетаФактуры Тогда
			ЗаполнитьЗначенияСвойств(Реквизиты, ВыборкаНомерИсправления);
		КонецЕсли;
			
	КонецЕсли;
	
	Если Реквизиты.Исправление Тогда
		Реквизиты.НомерИсправления = НомерИсправленияИсходногоДокумента + 1;
	КонецЕсли;
	
	Возврат Реквизиты;

КонецФункции

Функция ПолучитьДатаНомерДокументовОплаты(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Метаданные().ТабличныеЧасти.Найти("Предоплата") <> Неопределено Тогда
		
		СпособЗачета = Неопределено;
		Если ДанныеЗаполнения.Метаданные().Реквизиты.Найти("СпособЗачетаПредоплаты") <> Неопределено Тогда
			СпособЗачета = ДанныеЗаполнения.СпособЗачетаПредоплаты;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СпособЗачета) Тогда
			СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
		КонецЕсли;
		
		Если СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную Тогда
			
			// В случае, когда документ не проведен и для корректировок реализации, когда предоплата отменяется.
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|			ТОГДА ДокументПредоплата.Документ.ДатаВходящегоДокумента
				|		ИНАЧЕ ДокументПредоплата.Документ.Дата
				|	КОНЕЦ КАК ДатаПлатежноРасчетногоДокумента,
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|			ТОГДА ДокументПредоплата.Документ.НомерВходящегоДокумента
				|		ИНАЧЕ ДокументПредоплата.Документ.Номер
				|	КОНЕЦ КАК НомерПлатежноРасчетногоДокумента,
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЕстьВходящиеДанные,
				|	ДокументПредоплата.Документ КАК Документ,
				|	ДокументПредоплата.НомерСертификата КАК НомерСертификата,
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Справочник.Номенклатура)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоПодарочныйСертификат
				|ИЗ
				|	Документ.РасходнаяНакладная.Предоплата КАК ДокументПредоплата
				|ГДЕ
				|	ДокументПредоплата.Ссылка = &Ссылка
				|	И ДокументПредоплата.Документ <> НЕОПРЕДЕЛЕНО
				|	И (ВЫБОР
				|				КОГДА ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|					ТОГДА ДокументПредоплата.Документ.ДатаВходящегоДокумента
				|				ИНАЧЕ ДокументПредоплата.Документ.Дата
				|			КОНЕЦ <> ДАТАВРЕМЯ(1, 1, 1)
				|			ИЛИ ВЫБОР
				|				КОГДА ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|					ТОГДА ДокументПредоплата.Документ.НомерВходящегоДокумента
				|				ИНАЧЕ ДокументПредоплата.Документ.Номер
				|			КОНЕЦ <> """"
				|			ИЛИ ТИПЗНАЧЕНИЯ(ДокументПредоплата.Документ) = ТИП(Справочник.Номенклатура))
				|	И (ДокументПредоплата.СуммаРасчетов > 0
				|			ИЛИ ДокументПредоплата.СуммаПлатежа > 0)";
			
			Запрос.Текст = СтрЗаменить(
				Запрос.Текст,
				"Документ.РасходнаяНакладная.Предоплата КАК ДокументПредоплата",
				"Документ." + ДанныеЗаполнения.Метаданные().Имя + ".Предоплата КАК ДокументПредоплата"
			);
			Если ДанныеЗаполнения.Метаданные().ТабличныеЧасти.Предоплата.Реквизиты.Найти("НомерСертификата") = Неопределено Тогда
				Запрос.Текст = СтрЗаменить(
					Запрос.Текст,
					"ДокументПредоплата.НомерСертификата КАК НомерСертификата,",
					"");
			КонецЕсли;
			Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
			
		Иначе
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыСПокупателями.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|			ТОГДА РасчетыСПокупателями.Документ.ДатаВходящегоДокумента
				|		ИНАЧЕ РасчетыСПокупателями.Документ.Дата
				|	КОНЕЦ КАК ДатаПлатежноРасчетногоДокумента,
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыСПокупателями.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|			ТОГДА РасчетыСПокупателями.Документ.НомерВходящегоДокумента
				|		ИНАЧЕ РасчетыСПокупателями.Документ.Номер
				|	КОНЕЦ КАК НомерПлатежноРасчетногоДокумента,
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыСПокупателями.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЕстьВходящиеДанные,
				|	РасчетыСПокупателями.Документ КАК Документ,
				|	ВЫБОР
				|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыСПокупателями.Документ) = ТИП(Справочник.Номенклатура)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоПодарочныйСертификат
				|ИЗ
				|	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
				|ГДЕ
				|	РасчетыСПокупателями.Регистратор = &Регистратор
				|	И РасчетыСПокупателями.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
				|	И РасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
				|	И РасчетыСПокупателями.Документ <> НЕОПРЕДЕЛЕНО
				|	И (ВЫБОР
				|				КОГДА ТИПЗНАЧЕНИЯ(РасчетыСПокупателями.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|					ТОГДА РасчетыСПокупателями.Документ.ДатаВходящегоДокумента
				|				ИНАЧЕ РасчетыСПокупателями.Документ.Дата
				|			КОНЕЦ <> ДАТАВРЕМЯ(1, 1, 1)
				|			ИЛИ ВЫБОР
				|				КОГДА ТИПЗНАЧЕНИЯ(РасчетыСПокупателями.Документ) = ТИП(Документ.ПоступлениеНаСчет)
				|					ТОГДА РасчетыСПокупателями.Документ.НомерВходящегоДокумента
				|				ИНАЧЕ РасчетыСПокупателями.Документ.Номер
				|			КОНЕЦ <> """")";
			
			Запрос.УстановитьПараметр("Регистратор", ДанныеЗаполнения.Ссылка);
			
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();
		текДатаНомерДокументовОплаты = РезультатЗапроса.Выгрузить();
		
		ТаблицаПД = Новый ТаблицаЗначений;
		ТаблицаПД.Колонки.Добавить("НомерПлатежноРасчетногоДокумента", Новый ОписаниеТипов("Строка"));
		ТаблицаПД.Колонки.Добавить("ДатаПлатежноРасчетногоДокумента", Новый ОписаниеТипов("Дата"));
		
		Для каждого СтрокаТаблицыПД Из текДатаНомерДокументовОплаты Цикл
			
			Если СтрокаТаблицыПД.ЕстьВходящиеДанные Тогда
				НоваяСтрокаПД = ТаблицаПД.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПД, СтрокаТаблицыПД);
			ИначеЕсли СтрокаТаблицыПД.ЭтоПодарочныйСертификат Тогда
				СтруктураДатаНомерСертификата = РаботаСПодарочнымиСертификатами.ПолучитьПредставлениеПодарочногоСертификатаКакПлатежногоДокумента(
					СтрокаТаблицыПД.Документ,
					ДанныеЗаполнения,
					СтрокаТаблицыПД.НомерСертификата
				);
				Если СтруктураДатаНомерСертификата.Дата <> "" ИЛИ СтруктураДатаНомерСертификата.Номер <> "" Тогда
					НоваяСтрокаПД = ТаблицаПД.Добавить();
					НоваяСтрокаПД.ДатаПлатежноРасчетногоДокумента = СтруктураДатаНомерСертификата.Дата;
					НоваяСтрокаПД.НомерПлатежноРасчетногоДокумента = СтруктураДатаНомерСертификата.Номер;
				КонецЕсли;
			Иначе
				НоваяСтрокаПД = ТаблицаПД.Добавить();
				НоваяСтрокаПД.НомерПлатежноРасчетногоДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(
					СтрокаТаблицыПД.ДатаПлатежноРасчетногоДокумента,
					СтрокаТаблицыПД.НомерПлатежноРасчетногоДокумента, СтрокаТаблицыПД.Документ.Организация.Префикс
				);
				НоваяСтрокаПД.ДатаПлатежноРасчетногоДокумента = СтрокаТаблицыПД.ДатаПлатежноРасчетногоДокумента;
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат ТаблицаПД;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ТребуетсяВводитьСчетФактуруНаАванс(СсылкаНаДокумент) Экспорт
	
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПоступлениеНаСчет") Тогда
		Если СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя
			ИЛИ СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПоставщика Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПоступлениеВКассу") Тогда
		Если СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПокупателя
			ИЛИ СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.ОтПоставщика
			ИЛИ СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РозничнаяВыручка
			ИЛИ СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеВКассу.РозничнаяВыручкаСуммовойУчет Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ОперацияПоПлатежнымКартам") Тогда
		Если СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ДанныеАвансовыхДокументовРегУчет(МассивДокументов, ИспользоватьФаксимиле) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	СчетФактура.Дата КАК ДатаДокумента,
	|	СчетФактура.Номер КАК Номер,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	СчетФактура.ВидОперации КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ СчетФактура.Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ СчетФактура.Организация
	|	КОНЕЦ КАК Поставщик,
	|	СчетФактура.Организация КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоФизическоеЛицо,
	|	СчетФактура.Организация.Префикс КАК Префикс,
	|	СчетФактура.Организация.ФайлФаксимильнаяПечать КАК ФаксимилеПечати,
	|	ВЫБОР
	|		КОГДА &ИспользоватьФаксимиле = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДаНет.Да)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ДаНет.Нет)
	|	КОНЕЦ КАК ИспользоватьФаксимиле,
	|	СчетФактура.Грузоотправитель КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА СчетФактура.Контрагент.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА СчетФактура.Контрагент.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Плательщик,
	|	ВЫБОР
	|		КОГДА СчетФактура.Контрагент.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	СчетФактура.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	СчетФактура.Грузополучатель КАК Грузополучатель,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	СчетФактура.Договор.Представление КАК ПредставлениеДоговора,
	|	СчетФактура.ОснованиеПечати КАК ОснованиеПечати,
	|	СчетФактура.ОснованиеПечати КАК ПредставлениеОснования,
	|	СчетФактура.ВалютаДокумента КАК Валюта,
	|	СчетФактура.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименование,
	|	СчетФактура.ВалютаДокумента.Код КАК ВалютаКод,
	|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|	1 КАК СтатусУПД,
	|	СчетФактура.НомерИсправления КАК НомерИсправления,
	|	СчетФактура.Дата КАК ДатаИсправления,
	|	ЛОЖЬ КАК ЭтоСводныйСчетФактура,
	|	ЕСТЬNULL(СчетФактура.Договор.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК ФаксимилеПустая,
	|	СчетФактура.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	СчетФактура.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	СчетФактура.ПодписьРуководителя.Факсимиле КАК ФаксимилеРуководителя,
	|	СчетФактура.ПодписьГлавногоБухгалтера.Должность КАК ДолжностьГлавногоБухгалтера,
	|	СчетФактура.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	СчетФактура.ПодписьГлавногоБухгалтера.Факсимиле КАК ФаксимилеГлавногоБухгалтера,
	|	СчетФактура.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	СчетФактура.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	СчетФактура.ПодписьКладовщика.Факсимиле КАК ФаксимилеКладовщика,
	|	НЕОПРЕДЕЛЕНО КАК РасшифровкаПодписиКонтрагента,
	|	СчетФактура.Кратность КАК Кратность,
	|	СчетФактура.Курс КАК Курс,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	0 КАК Вес,
	|	0 КАК Объем,
	|	СчетФактура.ДатаНомерДокументовОплаты.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ДатаПлатежноРасчетногоДокумента КАК ДатаПлатежноРасчетногоДокумента,
	|		НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента,
	|		ДатаПлатежноРасчетногоДокумента КАК ДатаПД,
	|		НомерПлатежноРасчетногоДокумента КАК НомерПД
	|	) КАК ПлатежныеДокументы,
	|	СчетФактура.ДокументыОснования.(
	|		ДокументОснование КАК ДокументОснование,
	|		ЛОЖЬ КАК ЭтоРасходПереработка,
	|		НЕОПРЕДЕЛЕНО КАК АдресДоставки
	|	) КАК ДокументыОснования,
	|	СчетФактура.УдалитьНоменклатураДоставки КАК УдалитьНоменклатураДоставки,
	|	СчетФактура.Авансы.(
	|		Ссылка КАК СчетФактураСсылка,
	|		Содержание КАК Содержание,
	|		Номенклатура КАК НоменклатураСсылка,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(СчетФактура.Авансы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА СчетФактура.Авансы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(СчетФактура.Авансы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ПредставлениеНоменклатуры,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		ВЫБОР
	|			КОГДА СчетФактура.Авансы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|				ТОГДА СчетФактура.Авансы.Номенклатура.ТоварнаяНоменклатураВЭД.Код
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК КодТНВЭД,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|		НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
	|		НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияПоОКЕИ_Код,
	|		0 КАК Количество,
	|		1 КАК КоэффициентЕдиницыИзмерения,
	|		0 КАК Цена,
	|		СчетФактура.Авансы.Сумма - СчетФактура.Авансы.СуммаНДС КАК Сумма,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		Сумма КАК Всего,
	|		ДокументОснование КАК ДокументОснование,
	|		ДатаПлатежноРасчетногоДокумента КАК ДатаПлатежноРасчетногоДокумента,
	|		НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента,
	|		НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|		ЛОЖЬ КАК ЭтоРазделитель,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		НЕОПРЕДЕЛЕНО КАК СтранаСсылка,
	|		НЕОПРЕДЕЛЕНО КАК СтранаКод,
	|		НЕОПРЕДЕЛЕНО КАК СтранаПредставление,
	|		НЕОПРЕДЕЛЕНО КАК ПредставлениеГТД
	|	) КАК ТаблицаЗапасы,
	|	СчетФактура.УдалитьДобавленныеНаборы.(
	|		НоменклатураНабора КАК НоменклатураНабора,
	|		ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(СчетФактура.УдалитьДобавленныеНаборы.НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА СчетФактура.УдалитьДобавленныеНаборы.НоменклатураНабора.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(СчетФактура.УдалитьДобавленныеНаборы.НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ЗапасНабора,
	|		НоменклатураНабора.ВариантПечатиНабора КАК ВариантПечатиНабора,
	|		НоменклатураНабора.ТипНоменклатуры КАК ТипНоменклатурыНабора,
	|		НоменклатураНабора.Артикул КАК АртикулНабора,
	|		НоменклатураНабора.Код КАК КодНабора,
	|		НоменклатураНабора.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНабора,
	|		НоменклатураНабора.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияНабора,
	|		ИСТИНА КАК ВыводитьИтоги
	|	) КАК ТаблицаДобавленныеНаборы,
	|	ЛОЖЬ КАК ЕстьПрослеживаемыеТовары
	|ИЗ
	|	Документ.СчетФактура КАК СчетФактура
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивОбъектов)
	|	И (СчетФактура.Исправление
	|			ИЛИ СчетФактура.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ДанныеДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДокументов;
	
КонецФункции

Функция ДанныеКорректировочныхАвансовыхДокументовРегУчет(МассивДокументов, ИспользоватьФаксимиле) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",		МассивДокументов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.ВидОперации КАК ВидСчетаФактуры,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Дата КАК ДатаДокумента,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Организация.Префикс КАК Префикс,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	Реквизиты.Организация.ИНН КАК ИННПоставщика,
	|	Реквизиты.Организация КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Плательщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННПокупателя,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименование,
	|	Реквизиты.ВалютаДокумента.Код КАК ВалютаКод,
	|	Реквизиты.Договор.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.Договор.Представление КАК Основание,
	|	Реквизиты.Договор.ВидДоговора КАК ВидДоговора,
	|	"""" КАК АдресПоставщика,
	|	"""" КАК ИННКПППоставщика,
	|	Реквизиты.Договор КАК ДоговорКонтрагента,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК БратьСуммыИзРегистраРублевыеСуммы,
	|	Реквизиты.Исправление КАК Исправление,
	|	Реквизиты.ПодписьРуководителя.РасшифровкаПодписи КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияКорректировочного,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияКорректировочного,
	|	Реквизиты.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|	Реквизиты.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	Реквизиты.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	Реквизиты.ПодписьРуководителя.Факсимиле КАК ФаксимилеРуководителя,
	|	Реквизиты.ПодписьГлавногоБухгалтера.Должность КАК ДолжностьГлавногоБухгалтера,
	|	Реквизиты.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	Реквизиты.ПодписьГлавногоБухгалтера.Факсимиле КАК ФаксимилеГлавногоБухгалтера,
	|	Реквизиты.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	Реквизиты.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	Реквизиты.ПодписьКладовщика.Факсимиле КАК ФаксимилеКладовщика,
	|	НЕОПРЕДЕЛЕНО КАК РасшифровкаПодписиКонтрагента,
	|	Реквизиты.Авансы.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		КорректируемыйСчетФактура КАК КорректируемыйСчетФактура,
	|		КорректируемыйСчетФактура.Номер КАК НомерКорСчетаФактура,
	|		КорректируемыйСчетФактура.Дата КАК ДатаКорСчетаФактура,
	|		КорректируемыйСчетФактура.НомерИсправляемогоКорректировочногоДокумента КАК НомерИсправляемогоКорректировочногоДокумента,
	|		КорректируемыйСчетФактура.ДатаИсправляемогоКорректировочногоДокумента КАК ДатаИсправляемогоКорректировочногоДокумента,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(Реквизиты.Авансы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА Реквизиты.Авансы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(Реквизиты.Авансы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ПредставлениеНоменклатуры,
	|		Номенклатура.Код КАК ТоварКод,
	|		Номенклатура.Артикул КАК Артикул,
	|		Содержание КАК Содержание,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		НЕОПРЕДЕЛЕНО КАК СтранаПроисхождения,
	|		НЕОПРЕДЕЛЕНО КАК ПредставлениеСтраны,
	|		НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|		НЕОПРЕДЕЛЕНО КАК ПредставлениеГТД,
	|		НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|		НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
	|		НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияПоОКЕИ_Код,
	|		0 КАК КоличествоДоИзменения,
	|		0 КАК КоличествоПослеИзменения,
	|		0 КАК ЦенаДоИзменения,
	|		0 КАК ЦенаПослеИзменения,
	|		0 КАК СтоимостьБезНДСДоИзменения,
	|		0 КАК СтоимостьБезНДСПослеИзменения,
	|		СуммаНДС КАК СуммаНДСПослеИзменения,
	|		СуммаНДСДоКорректировки КАК СуммаНДСДоИзменения,
	|		Сумма КАК СтоимостьСНДСПослеИзменения,
	|		СуммаДоКорректировки КАК СтоимостьСНДСДоИзменения,
	|		""без акциза"" КАК Акциз,
	|		0 КАК РазницаБезНДСУменьшение,
	|		0 КАК РазницаБезНДСУвеличение,
	|		0 КАК РазницаНДСУменьшение,
	|		Реквизиты.Авансы.СуммаНДС - Реквизиты.Авансы.СуммаНДСДоКорректировки КАК РазницаНДСУвеличение,
	|		0 КАК РазницаСНДСУменьшение,
	|		Реквизиты.Авансы.Сумма - Реквизиты.Авансы.СуммаДоКорректировки КАК РазницаСНДСУвеличение,
	|		СтавкаНДС КАК СтавкаНДСПослеИзменения,
	|		СтавкаНДСДоКорректировки КАК СтавкаНДСДоИзменения,
	|		СтавкаНДСДоКорректировки КАК СтавкаНДС,
	|		ИСТИНА КАК ЭтоУслуга,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ВЫБОР
	|			КОГДА Реквизиты.Авансы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|				ТОГДА Реквизиты.Авансы.Номенклатура.ТоварнаяНоменклатураВЭД.Код
	|			ИНАЧЕ ""--""
	|		КОНЕЦ КАК КодТНВЭД,
	|		ВЫБОР
	|			КОГДА Реквизиты.Авансы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|				ТОГДА Реквизиты.Авансы.Номенклатура.ТоварнаяНоменклатураВЭД.Код
	|			ИНАЧЕ ""--""
	|		КОНЕЦ КАК КодТНВЭДДоИзменения
	|	) КАК ТаблицаАвансов
	|ИЗ
	|	Документ.СчетФактура КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка В(&МассивОбъектов)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДанныеДокументовСуммовойРазницыРегУчет(МассивДокументов, ИспользоватьФаксимиле) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка
	|	,СчетФактура.Дата КАК ДатаДокумента
	|	,СчетФактура.Номер КАК Номер
	|	,Выбор КОГДА СчетФактура.Организация.ГоловнаяОрганизация <> Значение(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ Неопределено КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения
	|	,СчетФактура.ВидОперации КАК ВидОперации
	|	,Выбор КОГДА СчетФактура.Организация.ГоловнаяОрганизация <> Значение(Справочник.Организации.ПустаяСсылка)
	|		ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ СчетФактура.Организация КОНЕЦ КАК Организация
	|	,Выбор КОГДА СчетФактура.Организация.ГоловнаяОрганизация <> Значение(Справочник.Организации.ПустаяСсылка)
	|		ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ СчетФактура.Организация КОНЕЦ КАК Поставщик
	|	,СчетФактура.Организация КАК ОбособленноеПодразделениеПоставщика
	|	,Выбор КОГДА СчетФактура.Организация.ЮридическоеФизическоеЛицо = Значение(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо) 
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ЭтоФизическоеЛицо
	|	,СчетФактура.Организация.Префикс КАК Префикс
	|	,СчетФактура.Организация.ФайлФаксимильнаяПечать КАК ФаксимилеПечати
	|	,Выбор КОГДА &ИспользоватьФаксимиле = ИСТИНА
	|		ТОГДА Значение(Перечисление.ДаНет.Да)
	|		ИНАЧЕ Значение(Перечисление.ДаНет.Нет) КОНЕЦ КАК ИспользоватьФаксимиле
	|	,СчетФактура.Грузоотправитель КАК Грузоотправитель
	|	,Выбор КОГДА СчетФактура.Контрагент.ГоловнойКонтрагент <> Значение(Справочник.Контрагенты.ПустаяСсылка)
	|			И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = Значение(Справочник.СтраныМира.Россия)
	|		ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент КОНЕЦ КАК Контрагент
	|	,Выбор КОГДА СчетФактура.Контрагент.ГоловнойКонтрагент <> Значение(Справочник.Контрагенты.ПустаяСсылка)
	|			И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = Значение(Справочник.СтраныМира.Россия)
	|		ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент КОНЕЦ КАК Плательщик
	|	,Выбор КОГДА СчетФактура.Контрагент.ГоловнойКонтрагент <> Значение(Справочник.Контрагенты.ПустаяСсылка)
	|			И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = Значение(Справочник.СтраныМира.Россия)
	|		ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент КОНЕЦ КАК Покупатель
	|	,СчетФактура.Контрагент КАК ОбособленноеПодразделениеПокупателя
	|	,СчетФактура.Грузополучатель КАК Грузополучатель
	|	,Неопределено КАК АдресДоставки
	|	,СчетФактура.Договор.Представление КАК ПредставлениеДоговора
	|	,СчетФактура.ОснованиеПечати КАК ОснованиеПечати
	|	,СчетФактура.ОснованиеПечати КАК ПредставлениеОснования
	|	,СчетФактура.ВалютаДокумента КАК Валюта
	|	,СчетФактура.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименование
	|	,СчетФактура.ВалютаДокумента.Код КАК ВалютаКод
	|	,СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта
	|	,1 КАК СтатусУПД
	|	,СчетФактура.НомерИсправления КАК НомерИсправления
	|	,СчетФактура.Дата КАК ДатаИсправления
	|	,Ложь КАК ЭтоСводныйСчетФактура
	|	,ЕСТЬNULL(СчетФактура.Договор.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах
	|	,Неопределено КАК ДоверенностьНомер
	|	,Неопределено КАК ДоверенностьВыдана
	|	,Неопределено КАК ДоверенностьДата
	|	,Неопределено КАК ДоверенностьЛицо
	|	,Неопределено КАК ФаксимилеПустая
	|	,СчетФактура.ПодписьРуководителя.Должность КАК ДолжностьРуководителя
	|	,СчетФактура.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя
	|	,СчетФактура.ПодписьРуководителя.Факсимиле КАК ФаксимилеРуководителя
	|	,СчетФактура.ПодписьГлавногоБухгалтера.Должность КАК ДолжностьГлавногоБухгалтера
	|	,СчетФактура.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера
	|	,СчетФактура.ПодписьГлавногоБухгалтера.Факсимиле КАК ФаксимилеГлавногоБухгалтера
	|	,СчетФактура.ПодписьКладовщика.Должность КАК ДолжностьКладовщика
	|	,СчетФактура.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика
	|	,СчетФактура.ПодписьКладовщика.Факсимиле КАК ФаксимилеКладовщика
	|	,Неопределено КАК РасшифровкаПодписиКонтрагента
	|	,СчетФактура.Кратность
	|	,СчетФактура.Курс
	|	,Ложь КАК СуммаВключаетНДС
	|	,0 КАК Вес
	|	,0 КАК Объем
	|
	// ::: Документы оплаты
	|	,СчетФактура.ДатаНомерДокументовОплаты.(
	|		Ссылка
	|		,НомерСтроки
	|		,ДатаПлатежноРасчетногоДокумента
	|		,НомерПлатежноРасчетногоДокумента
	|		,ДатаПлатежноРасчетногоДокумента КАК ДатаПД
	|		,НомерПлатежноРасчетногоДокумента КАК НомерПД
	|	) КАК ПлатежныеДокументы
	|
	// ::: Документы основания
	|	,СчетФактура.ДокументыОснования.(
	|		ДокументОснование
	|		,ЛОЖЬ КАК ЭтоРасходПереработка
	|		,Неопределено КАК АдресДоставки
	|	) КАК ДокументыОснования
	|
	//::: Доставка
	|	,СчетФактура.УдалитьНоменклатураДоставки
	|
	// ::: Эмуляция таблицы запасы
	|	,Неопределено КАК ТаблицаЗапасы
	|	,1 КАК НомерСтроки
	|	,Ссылка КАК СчетФактураСсылка
	|	,""Суммы, связанные с расчетами по оплате (ст. 162 НК РФ)"" КАК Содержание
	|	,Неопределено КАК НоменклатураСсылка
	|	,Неопределено ПредставлениеНоменклатуры
	|	,Неопределено КАК Характеристика
	|	,Неопределено КАК КодТНВЭД
	|	,Неопределено КАК Код
	|	,Неопределено КАК Артикул
	|	,Неопределено КАК ТипНоменклатуры
	|	,Неопределено КАК ЕдиницаИзмерения
	|	,Неопределено КАК ЕдиницаИзмеренияПоОКЕИ_Наименование
	|	,Неопределено КАК ЕдиницаИзмеренияПоОКЕИ_Код
	|	,0 КАК Количество
	|	,1 КАК КоэффициентЕдиницыИзмерения
	|	,0 КАК Цена
	|	,Ссылка.СуммаДокумента КАК Сумма
	|	,Ссылка.СтавкаНДССуммовойРазницы КАК СтавкаНДС
	|	,Ссылка.СуммаНДСДокумента КАК СуммаНДС
	|	,Ссылка.СуммаДокумента + Ссылка.СуммаНДСДокумента КАК Всего
	|	,Неопределено КАК ДокументОснование
	|	,Неопределено КАК ДатаПлатежноРасчетногоДокумента
	|	,Неопределено КАК НомерПлатежноРасчетногоДокумента
	|	,Неопределено КАК НомерСчетаФактурыПродавца
	|	,Ложь КАК ЭтоРазделитель
	|	,Ложь КАК ЭтоНабор
	|	,Неопределено КАК СтранаСсылка
	|	,Неопределено КАК СтранаКод
	|	,Неопределено КАК СтранаПредставление
	|	,Неопределено КАК ПредставлениеГТД
	|
	// ::: Добавленные наборы
	|	,СчетФактура.УдалитьДобавленныеНаборы.(
	|		НоменклатураНабора КАК НоменклатураНабора
	|		,ХарактеристикаНабора КАК ХарактеристикаНабора
	|		,Количество КАК Количество
	|		,Выбор КОГДА (ВЫРАЗИТЬ(НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА НоменклатураНабора.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000)) КОНЕЦ КАК ЗапасНабора
	|		,НоменклатураНабора.ВариантПечатиНабора КАК ВариантПечатиНабора
	|		,НоменклатураНабора.ТипНоменклатуры КАК ТипНоменклатурыНабора
	|		,НоменклатураНабора.Артикул КАК АртикулНабора
	|		,НоменклатураНабора.Код КАК КодНабора
	|		,НоменклатураНабора.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНабора
	|		,НоменклатураНабора.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияНабора
	|		,ИСТИНА КАК ВыводитьИтоги
	|	) КАК ТаблицаДобавленныеНаборы
	|ИЗ Документ.СчетФактура КАК СчетФактура
	|ГДЕ СчетФактура.Ссылка В(&МассивОбъектов)
	|		И СчетФактура.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.СуммовыеРазницы)
	|УПОРЯДОЧИТЬ ПО Ссылка";
	
	ДанныеДокументов = Запрос.Выполнить().Выгрузить();
	
	ИменаКолонокТабличнойЧасти =
	"НомерСтроки
	|,СчетФактураСсылка
	|,Содержание
	|,НоменклатураСсылка
	|,ПредставлениеНоменклатуры
	|,Характеристика
	|,КодТНВЭД
	|,Код
	|,Артикул
	|,ТипНоменклатуры
	|,ЕдиницаИзмерения
	|,ЕдиницаИзмеренияПоОКЕИ_Наименование
	|,ЕдиницаИзмеренияПоОКЕИ_Код
	|,Количество
	|,КоэффициентЕдиницыИзмерения
	|,Цена
	|,Сумма
	|,СтавкаНДС
	|,СуммаНДС
	|,Всего
	|,ДокументОснование
	|,ДатаПлатежноРасчетногоДокумента
	|,НомерПлатежноРасчетногоДокумента
	|,НомерСчетаФактурыПродавца
	|,ЭтоРазделитель
	|,ЭтоНабор
	|,СтранаСсылка
	|,СтранаКод
	|,СтранаПредставление
	|,ПредставлениеГТД";
	
	МассивСтрок = Новый Массив(1);
	Для каждого ОбъектПечати Из ДанныеДокументов Цикл
		
		МассивСтрок[0] = ОбъектПечати;
		
		ТаблицаЗапасы = ДанныеДокументов.Скопировать(МассивСтрок, ИменаКолонокТабличнойЧасти);
		ОбъектПечати.ТаблицаЗапасы = ТаблицаЗапасы;
		
	КонецЦикла;
	
	Возврат ДанныеДокументов;
	
КонецФункции

Процедура ПроверитьСчетаФактурыНаОтчетыКомиссионеров(ДанныеДокументов)
	
	Для каждого СтрокаСчетФактура Из ДанныеДокументов Цикл
		
		Если СтрокаСчетФактура.ДатаДокумента >= '20150101' 
			И СтрокаСчетФактура.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Продажа Тогда
			
			МассивДокументовОснований = СтрокаСчетФактура.ДокументыОснования.ВыгрузитьКолонку("ДокументОснование");
			Если МассивДокументовОснований.Найти(СтрокаСчетФактура.ДокументОснование) = Неопределено Тогда
				
				МассивДокументовОснований.Добавить(СтрокаСчетФактура.ДокументОснование);
				
			КонецЕсли;
			
			Для каждого СтрокаОснования Из МассивДокументовОснований Цикл
				
				Если ТипЗнч(СтрокаОснования) = Тип("ДокументСсылка.ОтчетКомиссионера")
					И СтрокаОснования.ВыписыватьСчетаФактурыСводно = Истина Тогда
					
					СтрокаСчетФактура.Грузоотправитель = СтрокаСчетФактура.Поставщик;
					
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("СчетФактура", СтрокаСчетФактура.Ссылка);
					
					Запрос.Текст = 
					"ВЫБРАТЬ 
					|	Комиссионеры.Покупатель КАК Покупатель
					|	,Комиссионеры.СчетФактура КАК СчетФактура
					|	,Неопределено КАК СведенияОПокупателе
					|	,Неопределено КАК СведенияОГрузополучателе
					|	,Комиссионеры.Всего КАК Всего
					|	,Комиссионеры.КлючСвязи КАК КлючСвязи
					|ИЗ Документ.ОтчетКомиссионера.Покупатели КАК Комиссионеры
					|ГДЕ Комиссионеры.СчетФактура = &СчетФактура";
					
					ТаблицаПокупателей = Запрос.Выполнить().Выгрузить();
					Для каждого СтрокаПокупателя Из ТаблицаПокупателей Цикл
						
						СтрокаПокупателя.СведенияОПокупателе		= ПечатьДокументовУНФ.СведенияОЮрФизЛице(СтрокаПокупателя.Покупатель, СтрокаСчетФактура.ДатаДокумента,,);
						СтрокаПокупателя.СведенияОГрузополучателе	= ПечатьДокументовУНФ.СведенияОЮрФизЛице(СтрокаПокупателя.Покупатель, СтрокаСчетФактура.ДатаДокумента,,);
						
					КонецЦикла;
					
					Если СтрокаСчетФактура.ТаблицаПокупателей = Неопределено Тогда
						
						СтрокаСчетФактура.ТаблицаПокупателей = ТаблицаПокупателей;
						
					Иначе
						
						Для каждого СтрокаПокупателя Из ТаблицаПокупателей Цикл
							
							ЗаполнитьЗначенияСвойств(СтрокаСчетФактура.ТаблицаПокупателей.Добавить(), СтрокаПокупателя);
							
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьАдресДоставкиПоДокументамОснованиям(ДанныеДокументов)
	
	Для каждого ОбъектаПечати Из ДанныеДокументов Цикл
	
		Для каждого СтрокаОснования Из ОбъектаПечати.ДокументыОснования Цикл
			
			Если СтрокаОснования.ЭтоРасходПереработка
				И ЗначениеЗаполнено(СтрокаОснования.АдресДоставки) Тогда
				
				ОбъектаПечати.АдресДоставки = СтрокаОснования.АдресДоставки;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеДокументовСчетФактура(МассивОбъектов, ИспользоватьФаксимиле = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетФактура.Дата КАК ДатаДокумента
	|	,СчетФактура.Номер КАК Номер
	|	,Ложь КАК ЕстьПрослеживаемыеТовары
	|	,Неопределено КАК ЦифровойИндексОбособленногоПодразделения
	|	,СчетФактура.Организация КАК Поставщик
	|	,СчетФактура.Организация КАК Организация
	|	,СчетФактура.Организация КАК ОбособленноеПодразделениеПоставщика
	|	,Выбор КОГДА СчетФактура.Организация.ЮридическоеФизическоеЛицо = Значение(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо) 
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ЭтоФизическоеЛицо
	|	,СчетФактура.Организация.Префикс КАК Префикс
	|	,СчетФактура.Организация.ФайлФаксимильнаяПечать КАК ФаксимилеПечати
	|	,Ложь КАК СуммаВключаетНДС
	|	,Выбор КОГДА &ИспользоватьФаксимиле = ИСТИНА
	|		ТОГДА Значение(Перечисление.ДаНет.Да)
	|		ИНАЧЕ Значение(Перечисление.ДаНет.Нет) КОНЕЦ КАК ИспользоватьФаксимиле
	|	,СчетФактура.Грузоотправитель КАК Грузоотправитель
	|	,Неопределено КАК АдресДоставки
	|	,Выбор КОГДА СчетФактура.Грузоотправитель = Значение(Справочник.Контрагенты.ПустаяСсылка) 
	|		ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ ОнЖе
	|	,СчетФактура.Контрагент КАК Плательщик
	|	,СчетФактура.Контрагент КАК Покупатель
	|	,СчетФактура.Контрагент КАК Контрагент
	|	,СчетФактура.Контрагент КАК ОбособленноеПодразделениеПокупателя
	|	,Выбор КОГДА СчетФактура.Грузополучатель = Значение(Справочник.Контрагенты.ПустаяСсылка) 
	|		ТОГДА СчетФактура.Контрагент 
	|		ИНАЧЕ СчетФактура.Грузополучатель КОНЕЦ КАК Грузополучатель
	|	,СчетФактура.Договор.Представление КАК ПредставлениеДоговора
	|	,СчетФактура.ОснованиеПечати КАК ОснованиеПечати
	|	,СчетФактура.ВалютаДокумента КАК Валюта
	|	,СчетФактура.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименование
	|	,СчетФактура.ВалютаДокумента.Код КАК ВалютаКод
	|	,СчетФактура.ВидОперации КАК ВидОперации
	|	,СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта
	|	,СчетФактура.Ссылка КАК Ссылка
	|	,1 КАК СтатусУПД
	|	,СчетФактура.НомерИсправления КАК НомерИсправления
	|	,СчетФактура.Дата КАК ДатаИсправления
	|	,СчетФактура.СводныйКомиссионный КАК ЭтоСводныйСчетФактура
	|	,ЕСТЬNULL(СчетФактура.Договор.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах
	|	,СчетФактура.ОснованиеПечати КАК ПредставлениеОснования
	|	,Неопределено КАК ДоверенностьНомер
	|	,Неопределено КАК ДоверенностьВыдана
	|	,Неопределено КАК ДоверенностьДата
	|	,Неопределено КАК ДоверенностьЛицо
	|	,Неопределено КАК ФаксимилеПустая
	|	,Ложь КАК ЭтоКорректировка
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьРуководителя.Должность
	|		ИНАЧЕ СчетФактура.ПодписьРуководителя.Должность КОНЕЦ КАК ДолжностьРуководителя
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьРуководителя.РасшифровкаПодписи
	|		ИНАЧЕ СчетФактура.ПодписьРуководителя.РасшифровкаПодписи КОНЕЦ КАК РасшифровкаПодписиРуководителя
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьРуководителя.Факсимиле
	|		ИНАЧЕ СчетФактура.ПодписьРуководителя.Факсимиле КОНЕЦ КАК ФаксимилеРуководителя
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьГлавногоБухгалтера.Должность
	|		ИНАЧЕ СчетФактура.ПодписьГлавногоБухгалтера.Должность КОНЕЦ КАК ДолжностьГлавногоБухгалтера
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьГлавногоБухгалтера.РасшифровкаПодписи
	|		ИНАЧЕ СчетФактура.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КОНЕЦ КАК РасшифровкаПодписиГлавногоБухгалтера
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьГлавногоБухгалтера.Факсимиле
	|		ИНАЧЕ СчетФактура.ПодписьГлавногоБухгалтера.Факсимиле КОНЕЦ КАК ФаксимилеГлавногоБухгалтера
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьКладовщика.Должность
	|	КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьРуководителя.Должность
	|		ИНАЧЕ СчетФактура.ПодписьКладовщика.Должность КОНЕЦ КАК ДолжностьКладовщика
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьКладовщика.РасшифровкаПодписи
	|	КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьРуководителя.РасшифровкаПодписи
	|		ИНАЧЕ СчетФактура.ПодписьКладовщика.РасшифровкаПодписи КОНЕЦ КАК РасшифровкаПодписиКладовщика
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьКладовщика.Факсимиле
	|	КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|		ТОГДА СчетФактура.УдалитьДокументОснование.ПодписьРуководителя.Факсимиле
	|		ИНАЧЕ СчетФактура.ПодписьКладовщика.Факсимиле КОНЕЦ КАК ФаксимилеКладовщика
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|				ИЛИ СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|		ТОГДА СчетФактура.УдалитьДокументОснование.КонтактноеЛицоПодписант.Наименование
	|		ИНАЧЕ Неопределено КОНЕЦ КАК РасшифровкаПодписиКонтрагента
	|	,СчетФактура.Кратность
	|	,СчетФактура.Курс
	|	,СчетФактура.УдалитьДокументОснование КАК ДокументОснование
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная 
	|		ТОГДА СчетФактура.УдалитьДокументОснование.Вес 
	|		ИНАЧЕ 0 КОНЕЦ КАК Вес
	|	,Выбор КОГДА СчетФактура.УдалитьДокументОснование ССЫЛКА Документ.РасходнаяНакладная 
	|		ТОГДА СчетФактура.УдалитьДокументОснование.Объем 
	|		ИНАЧЕ 0 КОНЕЦ КАК Объем
	|
	// ::: Документы оплаты
	|	,СчетФактура.ДатаНомерДокументовОплаты.(
	|		Ссылка
	|		,НомерСтроки
	|		,ДатаПлатежноРасчетногоДокумента
	|		,НомерПлатежноРасчетногоДокумента
	|		,ДатаПлатежноРасчетногоДокумента КАК ДатаПД
	|		,НомерПлатежноРасчетногоДокумента КАК НомерПД
	|	) КАК ПлатежныеДокументы
	|
	// ::: Документы основания
	|	,СчетФактура.ДокументыОснования.(
	|		ДокументОснование
	|		,Выбор КОГДА СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|					ИЛИ СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|					ИЛИ СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|					ИЛИ СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ЭтоРасходПереработка
	|		,Выбор КОГДА СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|					ИЛИ СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|					ИЛИ СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|					ИЛИ СчетФактура.ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|			ТОГДА СчетФактура.ДокументыОснования.ДокументОснование.АдресДоставки
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК АдресДоставки
	|	) КАК ДокументыОснования
	|
	//::: Доставка
	|	,СчетФактура.УдалитьНоменклатураДоставки
	|
	//::: Запасы
	|	,СчетФактура.УдалитьЗапасы.(
	|		Ссылка
	|	) КАК ТаблицаЗапасы
	|
	// ::: Добавленные наборы
	|	,СчетФактура.УдалитьДобавленныеНаборы.(
	|		НоменклатураНабора КАК НоменклатураНабора
	|		,ХарактеристикаНабора КАК ХарактеристикаНабора
	|		,Количество КАК Количество
	|		,Выбор КОГДА (ВЫРАЗИТЬ(НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА НоменклатураНабора.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000)) КОНЕЦ КАК ЗапасНабора
	|		,НоменклатураНабора.ВариантПечатиНабора КАК ВариантПечатиНабора
	|		,НоменклатураНабора.ТипНоменклатуры КАК ТипНоменклатурыНабора
	|		,НоменклатураНабора.Артикул КАК АртикулНабора
	|		,НоменклатураНабора.Код КАК КодНабора
	|		,НоменклатураНабора.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНабора
	|		,НоменклатураНабора.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияНабора
	|		,ИСТИНА КАК ВыводитьИтоги
	|	) КАК ТаблицаДобавленныеНаборы
	|
	// ::: Покупатели для сводных документов
	|	,Неопределено КАК ТаблицаПокупателей
	|ИЗ
	|	Документ.СчетФактура КАК СчетФактура
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивОбъектов)
	|	И (СчетФактура.Исправление
	|			ИЛИ СчетФактура.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка))
	|
	|УПОРЯДОЧИТЬ ПО Ссылка";
	
	ДанныеДокументов = Запрос.Выполнить().Выгрузить();
	
	ЗаполнитьАдресДоставкиПоДокументамОснованиям(ДанныеДокументов);
	ДобавитьТаблицыЗапасы(ДанныеДокументов);
	ПроверитьСчетаФактурыНаОтчетыКомиссионеров(ДанныеДокументов);
	
	Возврат ДанныеДокументов;
	
КонецФункции

Процедура ДобавитьТаблицыЗапасы(ДанныеДокументов)
	
	Запрос = Новый Запрос;
	
	Для каждого Шапка Из ДанныеДокументов Цикл
		
		Запрос.УстановитьПараметр("Ссылка", Шапка.Ссылка);
		
		ИспользоватьПересчет 		= Шапка.РасчетыВУсловныхЕдиницах И НЕ Шапка.Валюта = Константы.НациональнаяВалюта.Получить();
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийСчетФактура.СуммовыеРазницы
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Продажа
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Корректировка Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетФактураЗапасы.Ссылка КАК Ссылка,
			|	СУММА(СчетФактураЗапасы.НомерСтроки) КАК НомерСтроки
			|ПОМЕСТИТЬ МаксНомерСтрокиЗапасы
			|ИЗ
			|	Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
			|ГДЕ
			|	СчетФактураЗапасы.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	СчетФактураЗапасы.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СчетФактураЗапасы.НомерСтроки КАК НомерСтроки,
			|	СчетФактураЗапасы.Номенклатура КАК Номенклатура,
			|	СчетФактураЗапасы.Характеристика КАК Характеристика,
			|	СчетФактураЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВЫБОР
			|		КОГДА СчетФактураЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|			ТОГДА СчетФактураЗапасы.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК КоэффициентЕдиницыИзмерения,
			|	СчетФактураЗапасы.Количество КАК Количество,
			|	СчетФактураЗапасы.Цена КАК Цена,
			|	СчетФактураЗапасы.Сумма КАК Сумма,
			|	СчетФактураЗапасы.СтавкаНДС КАК СтавкаНДС,
			|	СчетФактураЗапасы.СуммаНДС КАК СуммаНДС,
			|	СчетФактураЗапасы.Всего КАК Всего,
			|	СчетФактураЗапасы.НомерГТД КАК НомерГТД,
			|	СчетФактураЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
			|	СчетФактураЗапасы.Содержание КАК Содержание,
			|	СчетФактураЗапасы.НоменклатураНабора КАК НоменклатураНабора,
			|	СчетФактураЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
			|	СчетФактураЗапасы.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВременнаяТаблица_ЗапасыИДоставка
			|ИЗ
			|	Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
			|ГДЕ
			|	СчетФактураЗапасы.Ссылка = &Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МаксНомерСтрокиЗапасы.НомерСтроки + 1,
			|	СчетФактура.УдалитьНоменклатураДоставки,
			|	НЕОПРЕДЕЛЕНО,
			|	СчетФактура.УдалитьНоменклатураДоставки.ЕдиницаИзмерения,
			|	1,
			|	1,
			|	СчетФактура.УдалитьСтоимостьДоставкиБезНДС,
			|	СчетФактура.УдалитьСтоимостьДоставкиБезНДС,
			|	СчетФактура.УдалитьСтавкаНДСДоставки,
			|	СчетФактура.УдалитьСуммаНДСДоставки,
			|	СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки,
			|	НЕОПРЕДЕЛЕНО,
			|	НЕОПРЕДЕЛЕНО,
			|	ВЫБОР
			|		КОГДА (ВЫРАЗИТЬ(СчетФактура.УдалитьНоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))) = """"
			|			ТОГДА СчетФактура.УдалитьНоменклатураДоставки.Наименование
			|		ИНАЧЕ ВЫРАЗИТЬ(СчетФактура.УдалитьНоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))
			|	КОНЕЦ,
			|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
			|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
			|	СчетФактура.Ссылка
			|ИЗ
			|	Документ.СчетФактура КАК СчетФактура
			|		ЛЕВОЕ СОЕДИНЕНИЕ МаксНомерСтрокиЗапасы КАК МаксНомерСтрокиЗапасы
			|		ПО (МаксНомерСтрокиЗапасы.Ссылка = СчетФактура.Ссылка)
			|ГДЕ
			|	СчетФактура.УдалитьНоменклатураДоставки <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|	И СчетФактура.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	1 КАК ID,
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА (ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
			|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
			|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
			|	КОНЕЦ КАК ТоварНаименование,
			|	ВЫБОР
			|		КОГДА (ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
			|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
			|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
			|	КОНЕЦ КАК ПредставлениеНоменклатуры,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
			|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
			|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
			|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
			|			ТОГДА ВложенныйЗапрос.Номенклатура.ТоварнаяНоменклатураВЭД.Код
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК КодТНВЭД,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Код КАК ЕдиницаИзмеренияКод,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Код КАК ЕдиницаИзмеренияПоОКЕИ_Код,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати.Наименование КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
			|	ВложенныйЗапрос.ЕдиницаИзмеренияДляПечати КАК ЕдиницаИзмерения,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.ЕдиницаИзмеренияКоэффициент ССЫЛКА Справочник.ЕдиницыИзмерения
			|			ТОГДА ВложенныйЗапрос.ЕдиницаИзмеренияКоэффициент.Коэффициент
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЕдиницаИзмеренияКоэффициент,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.ЕдиницаИзмеренияКоэффициент ССЫЛКА Справочник.ЕдиницыИзмерения
			|			ТОГДА ВложенныйЗапрос.ЕдиницаИзмеренияКоэффициент.Коэффициент
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК КоэффициентЕдиницыИзмерения,
			|	ВложенныйЗапрос.Количество КАК Количество,
			|	ВложенныйЗапрос.Цена КАК Цена,
			|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
			|	ВЫБОР
			|		КОГДА &ИспользоватьПересчет
			|			ТОГДА ВЫБОР
			|					КОГДА ВложенныйЗапрос.ВсегоРег ЕСТЬ NULL
			|						ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаБезНДС * &Курс / &Кратность КАК ЧИСЛО(15, 2))
			|					ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.ВсегоРег КАК ЧИСЛО(15, 2))
			|				КОНЕЦ
			|		ИНАЧЕ ВложенныйЗапрос.СуммаБезНДС
			|	КОНЕЦ КАК Сумма,
			|	ВЫБОР
			|		КОГДА &ИспользоватьПересчет
			|			ТОГДА ВЫБОР
			|					КОГДА ВложенныйЗапрос.ВсегоРег ЕСТЬ NULL
			|						ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаБезНДС * &Курс / &Кратность КАК ЧИСЛО(15, 2))
			|					ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.ВсегоРег - ВложенныйЗапрос.СуммаНДСРег КАК ЧИСЛО(15, 2))
			|				КОНЕЦ
			|		ИНАЧЕ ВложенныйЗапрос.СуммаБезНДС
			|	КОНЕЦ КАК СуммаБезНДС,
			|	ВЫБОР
			|		КОГДА &ИспользоватьПересчет
			|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос.СуммаНДСРег, ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаНДС * &Курс / &Кратность КАК ЧИСЛО(15, 2)))
			|		ИНАЧЕ ВложенныйЗапрос.СуммаНДС
			|	КОНЕЦ КАК СуммаНДС,
			|	ВЫБОР
			|		КОГДА &ИспользоватьПересчет
			|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос.ВсегоРег, ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * &Курс / &Кратность КАК ЧИСЛО(15, 2)))
			|		ИНАЧЕ ВложенныйЗапрос.Всего
			|	КОНЕЦ КАК Всего,
			|	""без акциза"" КАК Акциз,
			|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
			|	ВложенныйЗапрос.НомерГТД.РегистрационныйНомер КАК ПредставлениеГТД,
			|	ВложенныйЗапрос.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВложенныйЗапрос.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
			|	ВложенныйЗапрос.СтранаПроисхождения КАК СтранаСсылка,
			|	ВложенныйЗапрос.СтранаПроисхождения.Код КАК СтранаКод,
			|	ВложенныйЗапрос.СтранаПроисхождения.Представление КАК СтранаПредставление,
			|	ВложенныйЗапрос.ПредставлениеСтраны КАК ПредставлениеСтраны,
			|	ВложенныйЗапрос.Содержание КАК Содержание,
			|	ВложенныйЗапрос.ОнЖе КАК ОнЖе,
			|	ЛОЖЬ КАК ЭтоНабор,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|				И ВложенныйЗапрос.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.НаборИКомплектующие)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НеобходимоВыделитьКакСоставНабора,
			|	ВложенныйЗапрос.НоменклатураНабора КАК НоменклатураНабора,
			|	ВложенныйЗапрос.ХарактеристикаНабора КАК ХарактеристикаНабора,
			|	ВложенныйЗапрос.Ссылка КАК Ссылка
			|ИЗ
			|	(ВЫБРАТЬ
			|		МИНИМУМ(СчетФактураЗапасы.НомерСтроки) КАК НомерСтроки,
			|		СчетФактураЗапасы.Номенклатура КАК Номенклатура,
			|		СчетФактураЗапасы.Характеристика КАК Характеристика,
			|		СчетФактураЗапасы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДляПечати,
			|		СчетФактураЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмеренияКоэффициент,
			|		СУММА(СчетФактураЗапасы.Количество) КАК Количество,
			|		ВЫБОР
			|			КОГДА &ИспользоватьПересчет
			|				ТОГДА ВЫБОР
			|						КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
			|							ТОГДА ВЫРАЗИТЬ(СчетФактураЗапасы.Цена * &Курс / &Кратность КАК ЧИСЛО(15, 2))
			|						КОГДА СчетФактураЗапасы.Количество = 0
			|							ТОГДА СуммыДокументовРегламентированныйУчет.Всего
			|						ИНАЧЕ ВЫРАЗИТЬ(СуммыДокументовРегламентированныйУчет.Всего / СчетФактураЗапасы.Количество КАК ЧИСЛО(15, 2))
			|					КОНЕЦ
			|			ИНАЧЕ СчетФактураЗапасы.Цена
			|		КОНЕЦ КАК Цена,
			|		СУММА(СчетФактураЗапасы.Сумма) КАК СуммаБезНДС,
			|		СчетФактураЗапасы.СтавкаНДС КАК СтавкаНДС,
			|		СУММА(СчетФактураЗапасы.СуммаНДС) КАК СуммаНДС,
			|		СУММА(СчетФактураЗапасы.Всего) КАК Всего,
			|		СУММА(СуммыДокументовРегламентированныйУчет.Всего) КАК ВсегоРег,
			|		СУММА(СуммыДокументовРегламентированныйУчет.НДС) КАК СуммаНДСРег,
			|		СчетФактураЗапасы.НомерГТД КАК НомерГТД,
			|		СчетФактураЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
			|		СчетФактураЗапасы.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
			|		СчетФактураЗапасы.СтранаПроисхождения.Представление КАК ПредставлениеСтраны,
			|		ВЫРАЗИТЬ(СчетФактураЗапасы.Содержание КАК СТРОКА(1000)) КАК Содержание,
			|		СчетФактураЗапасы.Ссылка.УдалитьОнЖе КАК ОнЖе,
			|		СчетФактураЗапасы.НоменклатураНабора КАК НоменклатураНабора,
			|		СчетФактураЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
			|		СчетФактураЗапасы.Ссылка КАК Ссылка
			|	ИЗ
			|		ВременнаяТаблица_ЗапасыИДоставка КАК СчетФактураЗапасы
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовРегламентированныйУчет КАК СуммыДокументовРегламентированныйУчет
			|			ПО СчетФактураЗапасы.Ссылка = СуммыДокументовРегламентированныйУчет.Регистратор
			|				И СчетФактураЗапасы.НомерСтроки = СуммыДокументовРегламентированныйУчет.НомерСтрокиДокумента
			|	
			|	СГРУППИРОВАТЬ ПО
			|		СчетФактураЗапасы.НомерГТД,
			|		СчетФактураЗапасы.ЕдиницаИзмерения,
			|		СчетФактураЗапасы.Номенклатура,
			|		ВЫРАЗИТЬ(СчетФактураЗапасы.Содержание КАК СТРОКА(1000)),
			|		СчетФактураЗапасы.Характеристика,
			|		СчетФактураЗапасы.СтавкаНДС,
			|		СчетФактураЗапасы.СтранаПроисхождения,
			|		СчетФактураЗапасы.СтранаПроисхождения.Код,
			|		СчетФактураЗапасы.СтранаПроисхождения.Представление,
			|		СчетФактураЗапасы.Ссылка.УдалитьОнЖе,
			|		СчетФактураЗапасы.Номенклатура.ЕдиницаИзмерения,
			|		ВЫБОР
			|			КОГДА &ИспользоватьПересчет
			|				ТОГДА ВЫБОР
			|						КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
			|							ТОГДА ВЫРАЗИТЬ(СчетФактураЗапасы.Цена * &Курс / &Кратность КАК ЧИСЛО(15, 2))
			|						КОГДА СчетФактураЗапасы.Количество = 0
			|							ТОГДА СуммыДокументовРегламентированныйУчет.Всего
			|						ИНАЧЕ ВЫРАЗИТЬ(СуммыДокументовРегламентированныйУчет.Всего / СчетФактураЗапасы.Количество КАК ЧИСЛО(15, 2))
			|					КОНЕЦ
			|			ИНАЧЕ СчетФактураЗапасы.Цена
			|		КОНЕЦ,
			|		СчетФактураЗапасы.НоменклатураНабора,
			|		СчетФактураЗапасы.ХарактеристикаНабора,
			|		СчетФактураЗапасы.Ссылка) КАК ВложенныйЗапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	ID,
			|	НомерСтроки";
			
			Запрос.УстановитьПараметр("ИспользоватьПересчет", ИспользоватьПересчет);
			Запрос.УстановитьПараметр("Курс",		Шапка.Курс);
			Запрос.УстановитьПараметр("Кратность",	Шапка.Кратность);
			
			Шапка.ТаблицаЗапасы = Запрос.Выполнить().Выгрузить();
		
		ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Аванс 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийСчетФактура.НаАвансКомитента Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	1 КАК ID,
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
			|	ВложенныйЗапрос.ПредставлениеНоменклатуры КАК ПредставлениеНоменклатуры,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
			|			ТОГДА ВложенныйЗапрос.Номенклатура.ТоварнаяНоменклатураВЭД.Код
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК КодТНВЭД,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	Неопределено КАК Количество,
			|	1 КАК ЕдиницаИзмеренияКоэффициент,
			|	1 КАК КоэффициентЕдиницыИзмерения,
			|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
			|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияПоОКЕИ_Код,
			|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
			|	&СуммаБезНДС_Параметр КАК СуммаБезНДС,
			|	&СуммаБезНДС_Параметр КАК Сумма,
			|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
			|	&СуммаНДС_Параметр КАК СуммаНДС,
			|	&Всего_Параметр КАК Всего,
			|	""без акциза"" КАК Акциз,
			|	ВложенныйЗапрос.Содержание КАК Содержание,
			|	ЛОЖЬ КАК ЭтоНабор,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|				И ВложенныйЗапрос.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.НаборИКомплектующие)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НеобходимоВыделитьКакСоставНабора,
			|	ВложенныйЗапрос.НоменклатураНабора КАК НоменклатураНабора,
			|	ВложенныйЗапрос.ХарактеристикаНабора КАК ХарактеристикаНабора,
			|	Неопределено КАК СтранаСсылка,
			|	Неопределено КАК СтранаКод,
			|	Неопределено КАК СтранаПредставление,
			|	Неопределено КАК ПредставлениеГТД
			|ИЗ
			|	(ВЫБРАТЬ
			|		МИНИМУМ(СчетФактураЗапасы.НомерСтроки) КАК НомерСтроки,
			|		СчетФактураЗапасы.Номенклатура КАК Номенклатура,
			|		ВЫБОР КОГДА (ВЫРАЗИТЬ(СчетФактураЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
			|			ТОГДА СчетФактураЗапасы.Номенклатура.Наименование
			|			ИНАЧЕ ВЫРАЗИТЬ(СчетФактураЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КОНЕЦ КАК ПредставлениеНоменклатуры,
			|		СчетФактураЗапасы.Характеристика КАК Характеристика,
			|		СУММА(СчетФактураЗапасы.Сумма) КАК СуммаБезНДС,
			|		СчетФактураЗапасы.СтавкаНДС КАК СтавкаНДС,
			|		СУММА(СчетФактураЗапасы.СуммаНДС) КАК СуммаНДС,
			|		СУММА(СчетФактураЗапасы.Всего) КАК Всего,
			|		ВЫРАЗИТЬ(СчетФактураЗапасы.Содержание КАК СТРОКА(1000)) КАК Содержание,
			|		СчетФактураЗапасы.НоменклатураНабора КАК НоменклатураНабора,
			|		СчетФактураЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора
			|	ИЗ
			|		Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
			|	ГДЕ
			|		СчетФактураЗапасы.Ссылка = &Ссылка
			|	
			|	СГРУППИРОВАТЬ ПО
			|		СчетФактураЗапасы.Номенклатура,
			|		СчетФактураЗапасы.Характеристика,
			|		СчетФактураЗапасы.СтавкаНДС,
			|		ВЫРАЗИТЬ(СчетФактураЗапасы.Содержание КАК СТРОКА(1000)),
			|		СчетФактураЗапасы.НоменклатураНабора,
			|		СчетФактураЗапасы.ХарактеристикаНабора
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		МАКСИМУМ(СчетФактураЗапасы.НомерСтроки) + 1,
			|		СчетФактура.УдалитьНоменклатураДоставки,
			|		СчетФактура.УдалитьНоменклатураДоставки,
			|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
			|		СчетФактура.УдалитьСтоимостьДоставкиБезНДС,
			|		СчетФактура.УдалитьСтавкаНДСДоставки,
			|		СчетФактура.УдалитьСуммаНДСДоставки,
			|		СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки,
			|		"""",
			|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
			|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|	ИЗ
			|		Документ.СчетФактура КАК СчетФактура
			|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактура.УдалитьЗапасы КАК СчетФактураЗапасы
			|			ПО СчетФактура.Ссылка = СчетФактураЗапасы.Ссылка
			|	ГДЕ
			|		СчетФактура.Ссылка = &Ссылка
			|		И СчетФактура.УдалитьНоменклатураДоставки <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		СчетФактура.УдалитьНоменклатураДоставки,
			|		СчетФактура.УдалитьСтоимостьДоставкиБезНДС,
			|		СчетФактура.УдалитьСтавкаНДСДоставки,
			|		СчетФактура.УдалитьСуммаНДСДоставки,
			|		СчетФактура.УдалитьСтоимостьДоставкиБезНДС + СчетФактура.УдалитьСуммаНДСДоставки) КАК ВложенныйЗапрос
			|
			|УПОРЯДОЧИТЬ ПО
			|	ID,
			|	НомерСтроки";
			
			Если ИспользоватьПересчет Тогда
				
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаБезНДС_Параметр",	"Выразить(ВложенныйЗапрос.СуммаБезНДС * &Курс / &Кратность КАК Число(15,2))");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаНДС_Параметр",		"Выразить(ВложенныйЗапрос.СуммаНДС * &Курс / &Кратность КАК Число(15,2))");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Всего_Параметр",			"Выразить(ВложенныйЗапрос.Всего * &Курс / &Кратность КАК Число(15,2))");
				
				Запрос.УстановитьПараметр("Курс",		Шапка.Курс);
				Запрос.УстановитьПараметр("Кратность",	Шапка.Кратность);
				
			Иначе
				
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаБезНДС_Параметр", 	"ВложенныйЗапрос.СуммаБезНДС");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СуммаНДС_Параметр", 	"	ВложенныйЗапрос.СуммаНДС");
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Всего_Параметр", 		"ВложенныйЗапрос.Всего");
				
			КонецЕсли;
			
			Шапка.ТаблицаЗапасы = Запрос.Выполнить().Выгрузить();
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Наборы
	НаборыСервер.КомпоноватьТабличнуюЧастьПоНаборам(ДанныеДокументов, "ТаблицаЗапасы");

КонецПроцедуры

Функция ПолучитьДанныеДляПечатиКорректировочныхСчетовФактур(МассивОбъектов, ТекстЗапросаПоСчетамФактурам, ДополнитьДаннымиУПД = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("НачалоИспользованияСФ1137", Константы.НачалоИспользованияСФ1137.Получить());
	Запрос.Текст = ТекстЗапросаПоСчетамФактурам;
	Результаты   = Запрос.ВыполнитьПакет();
	
	ВыборкаСФ = Результаты[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СчетФактура");
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений();
	ТаблицаСчетовФактур.Колонки.Добавить("ДанныеШапки");
	ТаблицаСчетовФактур.Колонки.Добавить("ДатаДокумента");
	ТаблицаСчетовФактур.Колонки.Добавить("ТаблицаДокумента");
	ТаблицаСчетовФактур.Колонки.Добавить("ДокументыОснования");
	ТаблицаСчетовФактур.Колонки.Добавить("ВидСчетаФактуры");
	ТаблицаСчетовФактур.Колонки.Добавить("СчетФактура");
	ТаблицаСчетовФактур.Колонки.Добавить("СчетФактураБезНДС");
	ТаблицаСчетовФактур.Колонки.Добавить("Ссылка");
	
	ТаблицаСчетовФактур.Колонки.Добавить("НоменклатураДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("ПредставлениеНоменклатурыДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("АртикулДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("КодДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("ЕдиницаИзмеренияДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("КодЕдиницыИзмеренияДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("СтавкаНДСДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("СуммаНДСДоИзмененияДоставка");
	ТаблицаСчетовФактур.Колонки.Добавить("СуммаНДСПослеИзмененияДоставка");
	ТаблицаСчетовФактур.Колонки.Добавить("СтоимостьСНДСДоИзмененияДоставка");
	ТаблицаСчетовФактур.Колонки.Добавить("СтоимостьСНДСПослеИзмененияДоставка");
	ТаблицаСчетовФактур.Колонки.Добавить("СтоимостьДоставки");
	ТаблицаСчетовФактур.Колонки.Добавить("СуммаНДСДоставки");
	
	ТаблицаСчетовФактур.Колонки.Добавить("ЕстьПрослеживаемыеТовары");
	
	Пока ВыборкаСФ.Следующий() Цикл
		
		ТаблицаДокумента = Неопределено;
		ТаблицаСведенияПрослеживаемости = Неопределено;
		ТаблицаСведенияПрослеживаемостиДоИзменения = Неопределено;
		
		ДокументыОснования = Новый Массив;
		ВыборкаПоОснованиям = ВыборкаСФ.Выбрать();
		Пока ВыборкаПоОснованиям.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаПоОснованиям.ДокументОснование) Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументыОснования.Добавить(ВыборкаПоОснованиям.ДокументОснование);
			ПараметрыОснования = ПодготовитьДанныеДляПечатиКорректировочныхСчетовФактур(
				ВыборкаПоОснованиям.ДокументОснование, ВыборкаСФ.СчетФактура, ВыборкаСФ.ВидСчетаФактуры, Истина);
			
			Если ПараметрыОснования.Реквизиты = Неопределено ИЛИ ПараметрыОснования.ТаблицаДокумента = Неопределено Тогда
				Продолжить;
			Иначе
				Реквизиты = ПараметрыОснования.Реквизиты[0];
			КонецЕсли; 

			Если ТаблицаДокумента = Неопределено Тогда
				ТаблицаДокумента = ПараметрыОснования.ТаблицаДокумента;
			Иначе
				Для Каждого СтрокаТаблицы Из ПараметрыОснования.ТаблицаДокумента Цикл
					СтрокаТаблицаДокумента = ТаблицаДокумента.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицаДокумента, СтрокаТаблицы);
				КонецЦикла;
			КонецЕсли;
			
			// Прослеживаемость
			Если ТаблицаСведенияПрослеживаемости = Неопределено Тогда
				ТаблицаСведенияПрослеживаемости = ПараметрыОснования.ТаблицаСведенияПрослеживаемости;
			Иначе
				Для Каждого СтрокаТаблицы Из ПараметрыОснования.ТаблицаСведенияПрослеживаемости Цикл
					СтрокаТаблицаСведенияПрослеживаемости = ТаблицаСведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицаСведенияПрослеживаемости, СтрокаТаблицы);
				КонецЦикла;
			КонецЕсли;
			Если ТаблицаСведенияПрослеживаемостиДоИзменения = Неопределено Тогда
				ТаблицаСведенияПрослеживаемостиДоИзменения = ПараметрыОснования.ТаблицаСведенияПрослеживаемостиДоИзменения;
			Иначе
				Для Каждого СтрокаТаблицы Из ПараметрыОснования.ТаблицаСведенияПрослеживаемостиДоИзменения Цикл
					СтрокаТаблицаСведенияПрослеживаемостиДоИзменения = ТаблицаСведенияПрослеживаемостиДоИзменения.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицаСведенияПрослеживаемостиДоИзменения, СтрокаТаблицы);
				КонецЦикла;
			КонецЕсли;
			// Конец Прослеживаемость
			
		КонецЦикла;
		
		Если ТаблицаДокумента = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КолонкиГруппировок = ""
		+"Товар,"
		+"ТоварКод,"
		+"ТоварКодТНВЭД,"
		+"КодТНВЭДЕдиницаИзмеренияКод,"
		+"КодТНВЭДЕдиницаИзмеренияНаименование,"
		+"ТоварКодТНВЭД,"
		+"Код,"
		+"Артикул,"
		+"Характеристика,"
		+"СтранаПроисхождения,"
		+"СтранаПроисхожденияКод,"
		+"НомерГТД,"
		+"НаименованиеНоменклатуры,"
		+"НаименованиеЕдиницыИзмерения,"
		+"ЕдиницаИзмеренияКод,"
		+"ЦенаДоИзменения,"	
		+"ЦенаПослеИзменения,"
		+"СтавкаНДС,"
		+"ПрослеживаемыйТовар,"
		+"ПрослеживаемыйТоварЧисло,"
		+"ИдентификаторСтроки,"
		+"Ссылка,"
		+"Акциз";
		
		КолонкиСуммирования = ""
		+"СуммаНДСДоИзменения,"
		+"СуммаНДСПослеИзменения,"
		+"СтоимостьСНДСДоИзменения,"
		+"СтоимостьСНДСПослеИзменения,"
		+"РазницаБезНДСУвеличение,"
		+"РазницаБезНДСУменьшение,"
		+"РазницаНДСУвеличение,"
		+"РазницаНДСУменьшение,"
		+"РазницаСНДСУвеличение,"
		+"РазницаСНДСУменьшение,"
		+"СтоимостьБезНДСДоИзменения,"
		+"СтоимостьБезНДСПослеИзменения,"
		+"КоличествоДоИзменения,"
		+"КоличествоПослеИзменения";
		
		ТаблицаДокумента.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
		ТаблицаДокумента.Колонки.Добавить("НомерСтроки");
		
		СчетФактура = ТаблицаСчетовФактур.Добавить();
		СчетФактура.СчетФактура = ВыборкаСФ.СчетФактура;
		СчетФактура.ДатаДокумента = ВыборкаСФ.ДатаДокумента;
		СчетФактура.ВидСчетаФактуры = ВыборкаСФ.ВидСчетаФактуры;
		СчетФактура.СчетФактураБезНДС = ВыборкаСФ.СчетФактураБезНДС;
		СчетФактура.ДанныеШапки = ПодготовитьДанныеШапкиКорректировочногоСчетаФактуры(ВыборкаСФ, Реквизиты, ДополнитьДаннымиУПД);
		СчетФактура.ТаблицаДокумента = ТаблицаДокумента;
		СчетФактура.ДокументыОснования = ДокументыОснования;
		СчетФактура.Ссылка             = ВыборкаСФ.СчетФактура;
		СчетФактура.ЕстьПрослеживаемыеТовары = (ТаблицаДокумента.Итог("ПрослеживаемыйТоварЧисло") > 0);
		
		Если СчетФактура.ЕстьПрослеживаемыеТовары Тогда
			ДополнитьСведениямиОПрослеживаемости(ТаблицаСведенияПрослеживаемости, ТаблицаСведенияПрослеживаемостиДоИзменения, СчетФактура.ТаблицаДокумента);
		КонецЕсли;
		
		Если ТипЗнч(ВыборкаСФ.СчетФактура)=Тип("ДокументСсылка.СчетФактура") Тогда
			СчетФактура.НоменклатураДоставки             	= ВыборкаСФ.НоменклатураДоставки;
			СчетФактура.ПредставлениеНоменклатурыДоставки	= ВыборкаСФ.ПредставлениеНоменклатурыДоставки;
			СчетФактура.АртикулДоставки             		= ВыборкаСФ.АртикулДоставки;
			СчетФактура.КодДоставки            	 			= ВыборкаСФ.КодДоставки;
			СчетФактура.ЕдиницаИзмеренияДоставки            = ВыборкаСФ.ЕдиницаИзмеренияДоставки;
			СчетФактура.КодЕдиницыИзмеренияДоставки         = ВыборкаСФ.КодЕдиницыИзмеренияДоставки;
			СчетФактура.СтавкаНДСДоставки             		= ВыборкаСФ.СтавкаНДСДоставки;
			СчетФактура.СуммаНДСДоИзмененияДоставка         = ВыборкаСФ.СуммаНДСДоИзмененияДоставка;
			СчетФактура.СуммаНДСПослеИзмененияДоставка      = ВыборкаСФ.СуммаНДСПослеИзмененияДоставка;
			СчетФактура.СтоимостьСНДСДоИзмененияДоставка    = ВыборкаСФ.СтоимостьСНДСДоИзмененияДоставка;
			СчетФактура.СтоимостьСНДСПослеИзмененияДоставка = ВыборкаСФ.СтоимостьСНДСПослеИзмененияДоставка;
			СчетФактура.СуммаНДСДоставки    				= ВыборкаСФ.СуммаНДСПослеИзмененияДоставка;
			СчетФактура.СтоимостьДоставки 					= ВыборкаСФ.СтоимостьСНДСПослеИзмененияДоставка;
		КонецЕсли;
		
		Если ДополнитьДаннымиУПД Тогда
			РеквизитыПередаточныхДокументов = "";
			Для каждого Основание Из ДокументыОснования Цикл
				СсылкаНаСчетФактуру = СчетаФактурыУНФ.ПолучитьПодчиненныйСчетФактуру(Основание.ИсправляемыйДокументРеализации);
				СсылкаНаСчетФактуру = ?(ЗначениеЗаполнено(СсылкаНаСчетФактуру), СсылкаНаСчетФактуру, Основание.ИсправляемыйДокументРеализации);
				
				НомерНаПечать	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СсылкаНаСчетФактуру.Номер, Истина, Ложь);
				ДатаНаПечать	= Формат(СсылкаНаСчетФактуру.Дата, "ДЛФ=D");
				РеквизитыПервичногоДокумента	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '№ %1 от %2'"),
					НомерНаПечать, ДатаНаПечать);
				
				РеквизитыПередаточныхДокументов = ?(РеквизитыПередаточныхДокументов = "", РеквизитыПередаточныхДокументов,РеквизитыПередаточныхДокументов + ", ") 
				+ "Универсальный передаточный документ " + РеквизитыПервичногоДокумента;
			КонецЦикла;
			СчетФактура.ДанныеШапки.Вставить("РеквизитыПередаточныхДокументов", РеквизитыПередаточныхДокументов);			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

Процедура ДополнитьСведениямиОПрослеживаемости(СведенияОПрослеживаемости, СведенияОПрослеживаемостиДоИзменения, ТаблицаДокумента) Экспорт
	
	МассивИдентифицирующихРеквизитов = Новый Массив();
	МассивИдентифицирующихРеквизитов.Добавить("ИдентификаторСтроки");
	
	ТаблицаДокумента.Колонки.Добавить("СведенияОПрослеживаемости");
	ТаблицаДокумента.Колонки.Добавить("СведенияОПрослеживаемостиДоИзменения");
	
	Для Каждого СтрокаТаблицыДокумента Из ТаблицаДокумента Цикл
		
		ТаблицаСведенийОПрослеживаемости = НовыйТаблицаСведенийОПрослеживаемости();
		
		ПараметрыОтбора = ПараметрыОтбораСтрокДляРНПТ(МассивИдентифицирующихРеквизитов, СтрокаТаблицыДокумента);
		СтрокиСРНПТ = СведенияОПрослеживаемости.НайтиСтроки(ПараметрыОтбора);
		Для Каждого НайденнаяСтрока Из СтрокиСРНПТ Цикл
			СтрокаСведенийОПрослеживаемости = ТаблицаСведенийОПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСведенийОПрослеживаемости, НайденнаяСтрока);
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ТаблицаСведенийОПрослеживаемости) Тогда
			СтрокаТаблицыДокумента.СведенияОПрослеживаемости = ТаблицаСведенийОПрослеживаемости;
		Иначе
			СтрокаТаблицыДокумента.СведенияОПрослеживаемости = Неопределено;;
		КонецЕсли;
		
		// До изменения
		ТаблицаСведенийОПрослеживаемостиДоИзменения = НовыйТаблицаСведенийОПрослеживаемости();
		
		ПараметрыОтбора = ПараметрыОтбораСтрокДляРНПТ(МассивИдентифицирующихРеквизитов, СтрокаТаблицыДокумента);
		СтрокиСРНПТ = СведенияОПрослеживаемостиДоИзменения.НайтиСтроки(ПараметрыОтбора);
		Для Каждого НайденнаяСтрока Из СтрокиСРНПТ Цикл
			СтрокаСведенийОПрослеживаемости = ТаблицаСведенийОПрослеживаемостиДоИзменения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСведенийОПрослеживаемости, НайденнаяСтрока);
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ТаблицаСведенийОПрослеживаемостиДоИзменения) Тогда
			СтрокаТаблицыДокумента.СведенияОПрослеживаемостиДоИзменения = ТаблицаСведенийОПрослеживаемостиДоИзменения;
		Иначе
			СтрокаТаблицыДокумента.СведенияОПрослеживаемостиДоИзменения = Неопределено;;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыОтбораСтрокДляРНПТ(ИдентифицирующиеРеквизитыСтроки, СтрокаСчетаФактуры)
	
	СтруктураОтбора = Новый Структура;
	Для Каждого ИдентифицирующийРеквизит Из ИдентифицирующиеРеквизитыСтроки Цикл
		СтруктураОтбора.Вставить(ИдентифицирующийРеквизит,СтрокаСчетаФактуры[ИдентифицирующийРеквизит]); 
	КонецЦикла;
	
	Возврат СтруктураОтбора;
	
КонецФункции

Функция НовыйТаблицаСведенийОПрослеживаемости()
	
	ТаблицаСведенийОПрослеживаемости = Новый ТаблицаЗначений();
	ТаблицаСведенийОПрослеживаемости.Колонки.Добавить("ИдентификаторСтроки");
	ТаблицаСведенийОПрослеживаемости.Колонки.Добавить("РНПТ");
	ТаблицаСведенийОПрослеживаемости.Колонки.Добавить("Количество");
	ТаблицаСведенийОПрослеживаемости.Колонки.Добавить("КоличествоПрослеживаемости");
	
	Возврат ТаблицаСведенийОПрослеживаемости;
	
КонецФункции

Процедура ВывестиКорректировочныйСчетФактуруВТабличныйДокумент(ОписаниеПечатнойФормы, ДанныеДокумента, ЭтоУниверсальныйКорректировочныйДокумент = Ложь) Экспорт
	Перем Ошибки;
	
	ТабДокумент = ОписаниеПечатнойФормы.ТабличныйДокумент;
	
	Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
		
		ВыборкаСФ = ДанныеДокумента;
		
	Иначе
		
		ВыборкаСФ = ДанныеДокумента[0];
		
	КонецЕсли;
	
	ТаблицаДокумента = ВыборкаСФ.ТаблицаДокумента;
	ДанныеШапки = ВыборкаСФ.ДанныеШапки;
	
	ДокументФормируетсяСогласноФЗ56 = ПечатьДокументовУНФ.ДокументФормируетсяСогласноФЗ56(ДанныеШапки.Дата);
	НачалоИспользованияСФ981 = Константы.НачалоИспользованияСФ981.Получить();
	Если ЭтоУниверсальныйКорректировочныйДокумент Тогда 
		НомерПостановления1137 = ПечатьДокументовУНФ.ВерсияПостановленияНДС1137(ДанныеШапки.Дата);
	Иначе
		НомерПостановления1137 = ПечатьДокументовУНФ.ВерсияПостановленияНДС1137(ВыборкаСФ.ДатаДокумента);
	КонецЕсли;
	
	Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
		
		ПолныйПутьКМакетуПечатнойФормы = "Обработка.ПечатьУКД.ПФ_MXL_УниверсальныйКорректировочныйДокумент";
		
		Если НомерПостановления1137 = "534" Тогда
			
			ПолныйПутьКМакетуПечатнойФормы = ПолныйПутьКМакетуПечатнойФормы + "534";
			
		ИначеЕсли ДанныеШапки.Дата >= НачалоИспользованияСФ981 Тогда
			
			ПолныйПутьКМакетуПечатнойФормы = ПолныйПутьКМакетуПечатнойФормы + "981";
		КонецЕсли;
		
	Иначе
		
		ПолныйПутьКМакетуПечатнойФормы = "Обработка.ПечатьСчетФактура.ПФ_MXL_СчетФактураКорректировочный1137";
		Если НомерПостановления1137 = "534" Тогда
			ПолныйПутьКМакетуПечатнойФормы = "Обработка.ПечатьСчетФактура.ПФ_MXL_СчетФактураКорректировочный534";
		ИначеЕсли ДанныеШапки.Дата >= НачалоИспользованияСФ981 Тогда
			ПолныйПутьКМакетуПечатнойФормы = "Обработка.ПечатьСчетФактура.ПФ_MXL_СчетФактураКорректировочный981";
		КонецЕсли;
		
	КонецЕсли;
	
	Если НомерПостановления1137 = "534" Тогда
		ЕстьПрослеживаемыеТовары = ВыборкаСФ.ЕстьПрослеживаемыеТовары;
		Если ЕстьПрослеживаемыеТовары Тогда
			ПолныйПутьКМакетуПечатнойФормы = ПолныйПутьКМакетуПечатнойФормы + "Прослеж";
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеПечатнойФормы.ПолныйПутьКМакету)
		И ОписаниеПечатнойФормы.ПолныйПутьКМакету <> ПолныйПутьКМакетуПечатнойФормы Тогда
		
		ВызватьИсключение НСтр("ru ='Нельзя пакетно формировать счета-фактуры разных версий.'");
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ОписаниеПечатнойФормы.ПолныйПутьКМакету) Тогда
		
		ОписаниеПечатнойФормы.ПолныйПутьКМакету = ПолныйПутьКМакетуПечатнойФормы;
		
	КонецЕсли;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	
	ИмяОбласти = ?(ДокументФормируетсяСогласноФЗ56, "ЗаголовокПФ625", "ЗаголовокПФ");
	ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки);
	Если ОбластьМакета = Неопределено Тогда
		
		ВызватьИсключение НСтр("ru = 'Изменился типовой макет печатной формы счета-фактуры. Для использования 
		|новой формы необходимо обновить отредактированный ранее макет. 
		|Вы можете отредактировать макет самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
		|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");
		
	Иначе
		
		Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
			
			НомерСчетаФактуры = ДанныеШапки.Номер;
			ДатаСчетаФактуры = Формат(ДанныеШапки.Дата, "ДЛФ=ДД; ДП=--");
			ОбластьМакета.Параметры.Номер = НомерСчетаФактуры;
			ОбластьМакета.Параметры.Дата  = ДатаСчетаФактуры;
			
			ОбластьМакета.Параметры.НомерИсправленияКорректировочного = ДанныеШапки.НомерИсправленияКорректировочного;
			ОбластьМакета.Параметры.ДатаИсправленияКорректировочного  = Формат(ДанныеШапки.ДатаИсправленияКорректировочного, "ДЛФ=ДД; ДП=--");
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
	// Вывод шапки
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
		
		Если ДанныеШапки.ТаблицаРеквизитовОснований.Количество() > 1 Тогда
			
			ОбластьОснований = Макет.ПолучитьОбласть("ОбластьОснований");
			
			ПредставленияОснований = Новый Массив;
			
			Для каждого Основание Из ДанныеШапки.ТаблицаРеквизитовОснований Цикл
				ПредставлениеОснования = СтрШаблон(НСтр("ru = '№ %1 от %2, с учетом исправления № %3 от %4'"),
					Основание.НомерСчетаФактуры, Формат(Основание.ДатаСчетаФактуры, "ДЛФ=ДД; ДП=--"),
					Основание.НомерИсправления, Формат(Основание.ДатаИсправления, "ДЛФ=ДД; ДП=--"));
				ПредставленияОснований.Добавить(ПредставлениеОснования);
			КонецЦикла;
			
			ОбластьОснований.Параметры.РеквизитыОснований = СтрСоединить(ПредставленияОснований, ", ");
			
		ИначеЕсли ДанныеШапки.ТаблицаРеквизитовОснований.Количество() = 1 Тогда
			
			ОбластьОснований = Макет.ПолучитьОбласть("ОбластьОснования");
			
			Основание = ДанныеШапки.ТаблицаРеквизитовОснований[0];
			
			ОбластьОснований.Параметры.НомерОснования = Основание.НомерСчетаФактуры;
			ОбластьОснований.Параметры.ДатаОснования = Формат(Основание.ДатаСчетаФактуры, "ДЛФ=ДД; ДП=--");
			ОбластьОснований.Параметры.НомерИсправленияОснования = Основание.НомерИсправления;
			ОбластьОснований.Параметры.ДатаИсправленияОснования = Формат(Основание.ДатаИсправления, "ДЛФ=ДД; ДП=--");
		Иначе
			
			ОбластьОснований = Макет.ПолучитьОбласть("ОбластьОснования");
			
			ОбластьОснований.Параметры.НомерОснования 				= "--";
			ОбластьОснований.Параметры.ДатаОснования  				= "--";
			ОбластьОснований.Параметры.НомерИсправленияОснования 	= "--";
			ОбластьОснований.Параметры.ДатаИсправленияОснования  	= "--";
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьОснований);
		
		ОбластьМакета.Параметры.Валюта = ДанныеШапки.ВалютаНаименованиеУКД;
		
		ОбластьМакета.Параметры.СтатусУКД  = ДанныеШапки.СтатусУКД;
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ДанныеШапки.НаименованиеПродавца;
		ОбластьМакета.Параметры.ИННПоставщика = ДанныеШапки.ИННПродавца + ?(ЗначениеЗаполнено(ДанныеШапки.КПППродавца), "/" + ДанныеШапки.КПППродавца, "");
		ОбластьМакета.Параметры.АдресПоставщика = ДанныеШапки.АдресПродавца;
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = ДанныеШапки.НаименованиеПокупателя;
		ОбластьМакета.Параметры.ИННПокупателя = ДанныеШапки.ИННПокупателя + ?(ЗначениеЗаполнено(ДанныеШапки.КПППокупателя), "/" + ДанныеШапки.КПППокупателя, "");
		ОбластьМакета.Параметры.АдресПокупателя = ДанныеШапки.АдресПокупателя;
		
	Иначе
		НомерСчетаФактуры = ДанныеШапки.Номер;
		ДатаСчетаФактуры = Формат(ДанныеШапки.Дата, "ДЛФ=ДД; ДП=--");
		ОбластьМакета.Параметры.Номер = НомерСчетаФактуры;
		ОбластьМакета.Параметры.Дата  = ДатаСчетаФактуры;
		ОбластьМакета.Параметры.НомерИсправленияКорректировочного = ДанныеШапки.НомерИсправленияКорректировочного;
		ОбластьМакета.Параметры.ДатаИсправленияКорректировочного = Формат(ДанныеШапки.ДатаИсправленияКорректировочного, "ДЛФ=ДД; ДП=--");
		
		ПредставленияОснований = Новый Массив;
			
		Для Каждого Основание Из ДанныеШапки.ТаблицаРеквизитовОснований Цикл
			ПредставлениеОснования = СтрШаблон(НСтр("ru = '№ %1 от %2, с учетом исправления № %3 от %4'"),
				Основание.НомерСчетаФактуры, Формат(Основание.ДатаСчетаФактуры, "ДЛФ=ДД; ДП=--"),
				Основание.НомерИсправления, Формат(Основание.ДатаИсправления, "ДЛФ=ДД; ДП=--"));
			ПредставленияОснований.Добавить(ПредставлениеОснования);
		КонецЦикла;
		
		ОбластьМакета.Параметры.РеквизитыОснований = СтрСоединить(ПредставленияОснований, ", ");
		ОбластьМакета.Параметры.НаименованиеПродавца = ДанныеШапки.НаименованиеПродавца;
		ОбластьМакета.Параметры.АдресПродавца = ДанныеШапки.АдресПродавца;
		ОбластьМакета.Параметры.ИННКПППродавца = ДанныеШапки.ИННКПППродавца;
		ОбластьМакета.Параметры.НаименованиеПокупателя = ДанныеШапки.НаименованиеПокупателя;
		ОбластьМакета.Параметры.АдресПокупателя = ДанныеШапки.АдресПокупателя;
		ОбластьМакета.Параметры.ИННКПППокупателя = ДанныеШапки.ИННКПППокупателя;
		ОбластьМакета.Параметры.Валюта = ДанныеШапки.ВалютаНаименование;
		
		ЗначенияПараметров = Новый Структура("ИдентификаторГосКонтракта", Неопределено);
		ЗаполнитьЗначенияСвойств(ЗначенияПараметров, ДанныеШапки);
		ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);   		
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если СтрНайти(ПолныйПутьКМакетуПечатнойФормы, "Обработка.ПечатьУКД.ПФ_MXL_УниверсальныйКорректировочныйДокумент") > 0
		И (ДокументФормируетсяСогласноФЗ56
			ИЛИ ДанныеШапки.Дата >= НачалоИспользованияСФ981)
		Тогда
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИдентификаторГосКонтракта", , Ошибки);
		Если ОбластьМакета = Неопределено Тогда
			
			ВызватьИсключение НСтр("ru = 'Изменился типовой макет печатной формы счета-фактуры. Для использования 
			|новой формы необходимо обновить отредактированный ранее макет. 
			|Вы можете отредактировать макет самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
			|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");
			
		Иначе
			
			ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Вывод заголовка таблицы
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ДанныеШапки   = ВыборкаСФ.ДанныеШапки;
	ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
	ТабДокумент.Вывести(ОбластьМакета);
	
	НомерЛиста = 1;
	
	// Вывод табличной части
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Макет", Макет);
	ДанныеДляПечати.Вставить("ТаблицаДокумента", ТаблицаДокумента);
	ДанныеДляПечати.Вставить("ДанныеШапки", ДанныеШапки);
	ДанныеДляПечати.Вставить("ЭтоУниверсальныйКорректировочныйДокумент", ЭтоУниверсальныйКорректировочныйДокумент);
	ДанныеДляПечати.Вставить("НачалоИспользованияСФ981", НачалоИспользованияСФ981);
	ДанныеДляПечати.Вставить("НомерПостановления1137", НомерПостановления1137);
	ДанныеДляПечати.Вставить("НомерСчетаФактуры", НомерСчетаФактуры);
	ДанныеДляПечати.Вставить("ДатаСчетаФактуры", ДатаСчетаФактуры);
	
	// Прослеживаемость
	ВыводитьРНПТ = НомерПостановления1137 = "534"
		И ТаблицаДокумента.Колонки.Найти("СведенияОПрослеживаемости") <> Неопределено
		И ТаблицаДокумента.Колонки.Найти("СведенияОПрослеживаемостиДоИзменения") <> Неопределено
		И ЗначениеЗаполнено(Макет.Области.Найти("ОбластьПрослеживаемость"));
	// Конец Прослеживаемость
	
	КоличествоПрослеживаемостиДельтаСтруктура = Новый Структура;
	КоличествоПрослеживаемостиДельтаСтруктура.Вставить("Увеличение", 0);
	КоличествоПрослеживаемостиДельтаСтруктура.Вставить("Уменьшение", 0);
	Если ВыводитьРНПТ Тогда
		КоличествоПрослеживаемостиДельтаСтруктура = ВывестиКорректировочныйСчетФактуруСРНПТВТабличныйДокумент(ДанныеДляПечати, ТабДокумент, НомерЛиста);
	Иначе
		ВывестиКорректировочныйСчетФактуруБезРНПТВТабличныйДокумент(ДанныеДляПечати, ТабДокумент, НомерЛиста);
	КонецЕсли;
	
	// Вывод итоговых сумм
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.РазницаБезНДСУменьшение	= ТаблицаДокумента.Итог("РазницаБезНДСУменьшение");
	ОбластьМакета.Параметры.РазницаБезНДСУвеличение	= ТаблицаДокумента.Итог("РазницаБезНДСУвеличение");
	ОбластьМакета.Параметры.РазницаСНДСУменьшение   = ТаблицаДокумента.Итог("РазницаСНДСУменьшение");
	ОбластьМакета.Параметры.РазницаСНДСУвеличение   = ТаблицаДокумента.Итог("РазницаСНДСУвеличение");
	Если ЭтоУниверсальныйКорректировочныйДокумент И ДанныеШапки.СтатусУКД = 2 Тогда
		ОбластьМакета.Параметры.РазницаНДСУменьшение = "--";
		ОбластьМакета.Параметры.РазницаНДСУвеличение = "--";		
	ИначеЕсли ВыборкаСФ.СчетФактураБезНДС Тогда
		ОбластьМакета.Параметры.РазницаНДСУменьшение = "без НДС";
		ОбластьМакета.Параметры.РазницаНДСУвеличение = "без НДС";
	Иначе
		ОбластьМакета.Параметры.РазницаНДСУменьшение    = ТаблицаДокумента.Итог("РазницаНДСУменьшение");
		ОбластьМакета.Параметры.РазницаНДСУвеличение    = ТаблицаДокумента.Итог("РазницаНДСУвеличение");
	КонецЕсли;
	
	Если ВыводитьРНПТ Тогда
		ОбластьМакета.Параметры.КоличествоПрослежУвеличениеВсего = КоличествоПрослеживаемостиДельтаСтруктура.Увеличение;
		ОбластьМакета.Параметры.КоличествоПрослежУменьшениеВсего = КоличествоПрослеживаемостиДельтаСтруктура.Уменьшение;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Вывод подвала
	КоличествоЛистов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Документ составлен на%1%2 %3'"), Символы.ПС, НомерЛиста,
		ПечатьДокументовУНФ.ФормаМножественногоЧисла(
			НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), НомерЛиста));
			
	ДанныеШапки.Вставить("КоличествоЛистов", КоличествоЛистов);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Вывод подвала накладной
	Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалНакладной");
		ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ВывестиКорректировочныйСчетФактуруСРНПТВТабличныйДокумент(ДанныеДляПечати, ТабДокумент, НомерЛиста)
	Макет = ДанныеДляПечати.Макет;
	ТаблицаДокумента = ДанныеДляПечати.ТаблицаДокумента;
	ДанныеШапки = ДанныеДляПечати.ДанныеШапки;
	ЭтоУниверсальныйКорректировочныйДокумент = ДанныеДляПечати.ЭтоУниверсальныйКорректировочныйДокумент;
	НачалоИспользованияСФ981 = ДанныеДляПечати.НачалоИспользованияСФ981;
	НомерПостановления1137 = ДанныеДляПечати.НомерПостановления1137;
	
	// Вывод табличной части
	ПараметрыНоменклатуры = Новый Структура;
	КоличествоСтрок = ТаблицаДокумента.Количество();
	НомерСтроки = 0;
	
	КоличествоПрослеживаемостиДельтаСтруктура = Новый Структура;
	КоличествоПрослеживаемостиДельтаСтруктура.Вставить("Увеличение", 0);
	КоличествоПрослеживаемостиДельтаСтруктура.Вставить("Уменьшение", 0);
	
	ОбластьМакетаСтрокаДо = Макет.ПолучитьОбласть("СтрокаДо");
	ОбластьМакетаСтрокаПосле = Макет.ПолучитьОбласть("СтрокаПосле");
	ОбластьМакетаСтрокаУвеличение = Макет.ПолучитьОбласть("СтрокаУвеличение");
	ОбластьМакетаСтрокаУменьшение = Макет.ПолучитьОбласть("СтрокаУменьшение");
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаДокумента.НомерСтроки = НомерСтроки;
		
		ПараметрыВывода = НовыеПараметрыВыводаКорректировочногоСчетаФактурыНаСтраницу();
		ПараметрыВывода.ТабДокумент = ТабДокумент;
		ПараметрыВывода.ЭтоПоследняяСтрока = (НомерСтроки = КоличествоСтрок);
		ПараметрыВывода.Макет = Макет;
		ПараметрыВывода.НомерСчетаФактуры = ДанныеДляПечати.НомерСчетаФактуры;
		ПараметрыВывода.ДатаСчетаФактуры = ДанныеДляПечати.ДатаСчетаФактуры;
		ПараметрыВывода.ЭтоУниверсальныйКорректировочныйДокумент = ЭтоУниверсальныйКорректировочныйДокумент;
		
		ОбластьМакетаСтрокаДо.Параметры.Заполнить(СтрокаДокумента);
		ОбластьМакетаСтрокаПосле.Параметры.Заполнить(СтрокаДокумента);
		ОбластьМакетаСтрокаУвеличение.Параметры.Заполнить(СтрокаДокумента);
		ОбластьМакетаСтрокаУменьшение.Параметры.Заполнить(СтрокаДокумента);
		
		ОбластьМакетаСтрокаДо.Параметры.СтрокаДо = НСтр("ru = 'А (до изменения)'");
		ОбластьМакетаСтрокаПосле.Параметры.СтрокаПосле = НСтр("ru = 'Б (после изменения)'");
		
		ПараметрыНоменклатуры.Очистить();
		ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаДокумента.НаименованиеНоменклатуры);
		ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", Ложь);
		
		Если СтрокаДокумента.Владелец().Колонки.Найти("Характеристика") <> Неопределено Тогда
			
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаДокумента.Характеристика);
			
		КонецЕсли;
		
		ОбластьМакетаСтрокаДо.Параметры.НаименованиеНоменклатуры = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры);
		
		Если ДанныеШапки.Дата >= НачалоИспользованияСФ981 Тогда
			
			Если НЕ СтрокаДокумента.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль()
				ИЛИ ПустаяСтрока(ОбластьМакетаСтрокаДо.Параметры.ТоварКодТНВЭД) Тогда
				
				ОбластьМакетаСтрокаДо.Параметры.ТоварКодТНВЭД = "--";
				ОбластьМакетаСтрокаПосле.Параметры.ТоварКодТНВЭД = "--";
				ОбластьМакетаСтрокаУвеличение.Параметры.ТоварКодТНВЭД = "--";
				ОбластьМакетаСтрокаУменьшение.Параметры.ТоварКодТНВЭД = "--";
				
			КонецЕсли;
			
		КонецЕсли;
		
		ДозаполнитьСтрокуКорректировочногоСчетаФактурыСРПНТ(ОбластьМакетаСтрокаДо, "До");
		ДозаполнитьСтрокуКорректировочногоСчетаФактурыСРПНТ(ОбластьМакетаСтрокаПосле, "После");
		ДозаполнитьСтрокуКорректировочногоСчетаФактурыСРПНТ(ОбластьМакетаСтрокаУвеличение, "Увеличение");
		ДозаполнитьСтрокуКорректировочногоСчетаФактурыСРПНТ(ОбластьМакетаСтрокаУменьшение, "Уменьшение");
		
		Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
			
			ОбластьМакетаСтрокаДо.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(СтрокаДокумента);
			
			Если ДанныеШапки.СтатусУКД = 2 Тогда
				ОбластьМакетаСтрокаДо.Параметры.СтавкаНДС 	= "--";
				ОбластьМакетаСтрокаДо.Параметры.Акциз 		= "--";
				ОбластьМакетаСтрокаДо.Параметры.СуммаНДСДоИзменения = "--";
				ОбластьМакетаСтрокаПосле.Параметры.СтавкаНДС = "--";
				ОбластьМакетаСтрокаПосле.Параметры.СуммаНДСПослеИзменения = "--";
				ОбластьМакетаСтрокаУвеличение.Параметры.РазницаНДСУвеличение = "--";
				ОбластьМакетаСтрокаУменьшение.Параметры.РазницаНДСУменьшение = "--";
			Иначе
				ОбластьМакетаСтрокаДо.Параметры.Акциз = "без акциза";
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьПараметрыГТДИСтраны(НомерПостановления1137, ОбластьМакетаСтрокаДо, СтрокаДокумента, "До");
		ЗаполнитьПараметрыГТДИСтраны(НомерПостановления1137, ОбластьМакетаСтрокаПосле, СтрокаДокумента, "После");
		
		// ПрослеживаемостьДо
		ОбластьЗапись = ОбластьМакетаСтрокаДо.Область("ОбластьЗаписьДо");
		Если ЗначениеЗаполнено(СтрокаДокумента.СведенияОПрослеживаемостиДоИзменения) Тогда
			
			ТаблицаРНПТ = СтрокаДокумента.СведенияОПрослеживаемостиДоИзменения;
			КоличествоПрослеживаемостиДоИзменения = ТаблицаРНПТ.Итог("КоличествоПрослеживаемости");
			ПерваяСтрока = Истина;
			ОбластьЗапись.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			ОбластьЗапись.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			
			Для ИндексСтроки = 0 По ТаблицаРНПТ.Количество() - 1 Цикл
				
				Если Не ПерваяСтрока Тогда
					// Получаем область для последующих строк для очистки параметров.
					ОбластьМакетаСтрокаДо = Макет.ПолучитьОбласть("СтрокаДо");
					ОбластьЗапись = ОбластьМакетаСтрокаДо.Область("ОбластьЗаписьДо");
					ОбластьЗапись.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					ОбластьЗапись.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				КонецЕсли;
				
				ОбластьМакетаСтрокаДо.Параметры.ПредставлениеГТДДо           = ТаблицаРНПТ[ИндексСтроки].РНПТ;
				ОбластьМакетаСтрокаДо.Параметры.ЕдиницаИзмеренияПрослежКодДо = СтрокаДокумента.КодТНВЭДЕдиницаИзмеренияКод;
				ОбластьМакетаСтрокаДо.Параметры.ЕдиницаИзмеренияПрослеждо    = СтрокаДокумента.КодТНВЭДЕдиницаИзмеренияНаименование;
				ОбластьМакетаСтрокаДо.Параметры.КоличествоПрослежДо          = ТаблицаРНПТ[ИндексСтроки].КоличествоПрослеживаемости;
				Если ПерваяСтрока Тогда
					ОбластьМакетаСтрокаДо.Параметры.ПредставлениеСтраны          = СтрокаДокумента.СтранаПроисхождения;
					ОбластьМакетаСтрокаДо.Параметры.СтранаПроисхождения          = СтрокаДокумента.СтранаПроисхожденияКод;
				КонецЕсли;
				
				ПоследняяПодстрока = Ложь;
				Если ИндексСтроки = ТаблицаРНПТ.Количество() - 1 Тогда
					ОбластьЗапись.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
					ПоследняяПодстрока = Истина;
				КонецЕсли;
				
				ПоследняяСтрока = (НомерСтроки = КоличествоСтрок) И ПоследняяПодстрока;
				
				НомерЛиста = ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрокаДо, НомерЛиста);
				ТабДокумент.Вывести(ОбластьМакетаСтрокаДо);
				
				ПерваяСтрока = Ложь;
				
			КонецЦикла;
			
		Иначе
			
			КоличествоПрослеживаемостиДоИзменения = 0;
			Если НомерПостановления1137 = "534" Тогда
				
				ОбластьЗапись.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
				ОбластьЗапись.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
				
				ОбластьМакетаСтрокаДо.Параметры.ЕдиницаИзмеренияПрослежКодДо = "--";
				ОбластьМакетаСтрокаДо.Параметры.ЕдиницаИзмеренияПрослежДо    = "--";
				ОбластьМакетаСтрокаДо.Параметры.КоличествоПрослежДо          = "--"
				
			КонецЕсли;
			
			НомерЛиста = ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрокаДо, НомерЛиста);
			ТабДокумент.Вывести(ОбластьМакетаСтрокаДо);
			
		КонецЕсли;
		// Конец ПрослеживаемостьДо
		
		// ПрослеживаемостьПосле
		ОбластьЗапись = ОбластьМакетаСтрокаПосле.Область("ОбластьЗаписьПосле");
		Если ЗначениеЗаполнено(СтрокаДокумента.СведенияОПрослеживаемости) Тогда
			
			ТаблицаРНПТ = СтрокаДокумента.СведенияОПрослеживаемости;
			КоличествоПрослеживаемостиПослеИзменения = ТаблицаРНПТ.Итог("КоличествоПрослеживаемости");
			ПерваяСтрока = Истина;
			ОбластьЗапись.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			ОбластьЗапись.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			
			Для ИндексСтроки = 0 По ТаблицаРНПТ.Количество() - 1 Цикл
				
				Если Не ПерваяСтрока Тогда
					// Получаем область для последующих строк для очистки параметров.
					ОбластьМакетаСтрокаПосле = Макет.ПолучитьОбласть("СтрокаПосле");
					ОбластьЗапись = ОбластьМакетаСтрокаПосле.Область("ОбластьЗаписьПосле");
					ОбластьЗапись.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					ОбластьЗапись.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				КонецЕсли;
				
				ОбластьМакетаСтрокаПосле.Параметры.ПредставлениеГТДПосле           = ТаблицаРНПТ[ИндексСтроки].РНПТ;
				ОбластьМакетаСтрокаПосле.Параметры.ЕдиницаИзмеренияПрослежКодПосле = СтрокаДокумента.КодТНВЭДЕдиницаИзмеренияКод;
				ОбластьМакетаСтрокаПосле.Параметры.ЕдиницаИзмеренияПрослежПосле    = СтрокаДокумента.КодТНВЭДЕдиницаИзмеренияНаименование;
				ОбластьМакетаСтрокаПосле.Параметры.КоличествоПрослежПосле          = ТаблицаРНПТ[ИндексСтроки].КоличествоПрослеживаемости;
				Если ПерваяСтрока Тогда
					ОбластьМакетаСтрокаПосле.Параметры.ПредставлениеСтраны          = СтрокаДокумента.СтранаПроисхождения;
					ОбластьМакетаСтрокаПосле.Параметры.СтранаПроисхождения          = СтрокаДокумента.СтранаПроисхожденияКод;
				КонецЕсли;
				
				ПоследняяПодстрока = Ложь;
				Если ИндексСтроки = ТаблицаРНПТ.Количество() - 1 Тогда
					ОбластьЗапись.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
					ПоследняяПодстрока = Истина;
				КонецЕсли;
				
				ПоследняяСтрока = (НомерСтроки = КоличествоСтрок) И ПоследняяПодстрока;
				
				НомерЛиста = ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрокаПосле, НомерЛиста);
				ТабДокумент.Вывести(ОбластьМакетаСтрокаПосле);
				
				ПерваяСтрока = Ложь;
				
			КонецЦикла;
			
		Иначе
			
			КоличествоПрослеживаемостиПослеИзменения = 0;
			Если НомерПостановления1137 = "534" Тогда
				
				ОбластьЗапись.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
				ОбластьЗапись.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
				
				ОбластьМакетаСтрокаПосле.Параметры.ЕдиницаИзмеренияПрослежКодПосле = "--";
				ОбластьМакетаСтрокаПосле.Параметры.ЕдиницаИзмеренияПрослежПосле    = "--";
				ОбластьМакетаСтрокаПосле.Параметры.КоличествоПрослежПосле          = "--"
				
			КонецЕсли;
			
			НомерЛиста = ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрокаПосле, НомерЛиста);
			ТабДокумент.Вывести(ОбластьМакетаСтрокаПосле);
			
		КонецЕсли;
		// Конец ПрослеживаемостьДо
		
		КоличествоПрослеживаемостиДельта = КоличествоПрослеживаемостиДоИзменения - КоличествоПрослеживаемостиПослеИзменения;
		Если КоличествоПрослеживаемостиДельта > 0 Тогда
			КоличествоПрослеживаемостиУвеличилось = Ложь;
			КоличествоПрослеживаемостиДельтаСтруктура.Уменьшение = КоличествоПрослеживаемостиДельтаСтруктура.Уменьшение + КоличествоПрослеживаемостиДельта;
		Иначе
			КоличествоПрослеживаемостиУвеличилось = Истина;
			КоличествоПрослеживаемостиДельта = -КоличествоПрослеживаемостиДельта;
			КоличествоПрослеживаемостиДельтаСтруктура.Увеличение = КоличествоПрослеживаемостиДельтаСтруктура.Увеличение + КоличествоПрослеживаемостиДельта;
		КонецЕсли;
		
		// Увеличение
		Если КоличествоПрослеживаемостиУвеличилось Тогда
			ОбластьМакетаСтрокаУвеличение.Параметры.КоличествоПрослежУвеличение = КоличествоПрослеживаемостиДельта;
		Иначе
			ОбластьМакетаСтрокаУвеличение.Параметры.КоличествоПрослежУвеличение = "";
		КонецЕсли;
		НомерЛиста = ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрокаУвеличение, НомерЛиста);
		ТабДокумент.Вывести(ОбластьМакетаСтрокаУвеличение);
		// Конец Увеличение
		
		// Уменьшение
		Если Не КоличествоПрослеживаемостиУвеличилось Тогда
			ОбластьМакетаСтрокаУменьшение.Параметры.КоличествоПрослежУменьшение = КоличествоПрослеживаемостиДельта;
		Иначе
			ОбластьМакетаСтрокаУменьшение.Параметры.КоличествоПрослежУменьшение = "";
		КонецЕсли;
		НомерЛиста = ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрокаУменьшение, НомерЛиста);
		ТабДокумент.Вывести(ОбластьМакетаСтрокаУменьшение);
		// Конец Уменьшение
		
	КонецЦикла;
	
	Возврат КоличествоПрослеживаемостиДельтаСтруктура;
	
КонецФункции

Функция ДозаполнитьПараметрыВывода(ПараметрыВывода, ОбластьМакетаСтрока, НомерЛиста)
	
	ПараметрыВывода.ОбластьТекСтроки = ОбластьМакетаСтрока;
	ПараметрыВывода.НомерЛиста = НомерЛиста;
	
	ПроверитьВыводКорректировочногоСчетаФактурыНаСтраницу(ПараметрыВывода);
	
	Возврат ПараметрыВывода.НомерЛиста;
	
КонецФункции

Процедура ЗаполнитьПараметрыГТДИСтраны(НомерПостановления1137, ОбластьМакетаСтрока, СтрокаДокумента, ТипСтроки)
	
	Если НомерПостановления1137 = "534" Тогда
		Если ЗначениеЗаполнено(СтрокаДокумента.НомерГТД) Тогда
			Если ТипСтроки = "До" Тогда
				ОбластьМакетаСтрока.Параметры.ПредставлениеГТДДо = СтрокаДокумента.НомерГТД;
			Иначе
				ОбластьМакетаСтрока.Параметры.ПредставлениеГТДПосле = СтрокаДокумента.НомерГТД;
			КонецЕсли;
			ОбластьМакетаСтрока.Параметры.ПредставлениеСтраны    = СтрокаДокумента.СтранаПроисхождения;
			ОбластьМакетаСтрока.Параметры.СтранаПроисхождения = СтрокаДокумента.СтранаПроисхожденияКод;
		Иначе
			Если ТипСтроки = "До" Тогда
				ОбластьМакетаСтрока.Параметры.ПредставлениеГТДДо = "";
			Иначе
				ОбластьМакетаСтрока.Параметры.ПредставлениеГТДПосле = "";
			КонецЕсли;
			ОбластьМакетаСтрока.Параметры.ПредставлениеСтраны = "";
			ОбластьМакетаСтрока.Параметры.СтранаПроисхождения = "";
		КонецЕсли; 
		
		Если ТипСтроки = "До" Тогда
			ЗаполнитьДефисами = НЕ ЗначениеЗаполнено(ОбластьМакетаСтрока.Параметры.ПредставлениеГТДДо);
		Иначе
			ЗаполнитьДефисами = НЕ ЗначениеЗаполнено(ОбластьМакетаСтрока.Параметры.ПредставлениеГТДПосле);
		КонецЕсли;
		
		Если ЗаполнитьДефисами Тогда
			Если ТипСтроки = "До" Тогда
				ОбластьМакетаСтрока.Параметры.ПредставлениеГТДДо = "--";
			Иначе
				ОбластьМакетаСтрока.Параметры.ПредставлениеГТДПосле = "--";
			КонецЕсли;
			ОбластьМакетаСтрока.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакетаСтрока.Параметры.СтранаПроисхождения = "--";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиКорректировочныйСчетФактуруБезРНПТВТабличныйДокумент(ДанныеДляПечати, ТабДокумент, НомерЛиста)
	Макет = ДанныеДляПечати.Макет;
	ТаблицаДокумента = ДанныеДляПечати.ТаблицаДокумента;
	ДанныеШапки = ДанныеДляПечати.ДанныеШапки;
	ЭтоУниверсальныйКорректировочныйДокумент = ДанныеДляПечати.ЭтоУниверсальныйКорректировочныйДокумент;
	НачалоИспользованияСФ981 = ДанныеДляПечати.НачалоИспользованияСФ981;
	НомерПостановления1137 = ДанныеДляПечати.НомерПостановления1137;
	
	// Вывод табличной части
	ПараметрыНоменклатуры = Новый Структура;
	КоличествоСтрок = ТаблицаДокумента.Количество();
	НомерСтроки = 0;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаДокумента.НомерСтроки = НомерСтроки;
		
		ОбластьМакета.Параметры.Заполнить(СтрокаДокумента);
		
		ПараметрыНоменклатуры.Очистить();
		ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаДокумента.НаименованиеНоменклатуры);
		ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", Ложь);
		
		Если СтрокаДокумента.Владелец().Колонки.Найти("Характеристика") <> Неопределено Тогда
			
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаДокумента.Характеристика);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.НаименованиеНоменклатуры = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры);
		
		Если ДанныеШапки.Дата >= НачалоИспользованияСФ981 Тогда
			
			Если НЕ СтрокаДокумента.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль()
				ИЛИ ПустаяСтрока(ОбластьМакета.Параметры.ТоварКодТНВЭД) Тогда
				
				ОбластьМакета.Параметры.ТоварКодТНВЭД = "--";
				
			КонецЕсли;
			
		КонецЕсли;
		
		ДозаполнитьСтрокуКорректировочногоСчетаФактуры(ОбластьМакета);
		
		Если ЭтоУниверсальныйКорректировочныйДокумент Тогда
			
			ОбластьМакета.Параметры.ПредставлениеКодаНоменклатуры = ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(СтрокаДокумента);
			
			Если ДанныеШапки.СтатусУКД = 2 Тогда
				ОбластьМакета.Параметры.СтавкаНДС 	= "--";
				ОбластьМакета.Параметры.Акциз 		= "--";
				ОбластьМакета.Параметры.СуммаНДСДоИзменения = "--";
				ОбластьМакета.Параметры.СуммаНДСПослеИзменения = "--";
				ОбластьМакета.Параметры.РазницаНДСУвеличение = "--";
				ОбластьМакета.Параметры.РазницаНДСУменьшение = "--";
			Иначе
				ОбластьМакета.Параметры.Акциз = "без акциза";
			КонецЕсли;
			
		КонецЕсли;
		
		ПараметрыВывода = НовыеПараметрыВыводаКорректировочногоСчетаФактурыНаСтраницу();
		ПараметрыВывода.ТабДокумент = ТабДокумент;
		ПараметрыВывода.ОбластьТекСтроки = ОбластьМакета;
		ПараметрыВывода.ЭтоПоследняяСтрока = (НомерСтроки = КоличествоСтрок);
		ПараметрыВывода.Макет = Макет;
		ПараметрыВывода.НомерЛиста = НомерЛиста;
		ПараметрыВывода.НомерСчетаФактуры = ДанныеДляПечати.НомерСчетаФактуры;
		ПараметрыВывода.ДатаСчетаФактуры = ДанныеДляПечати.ДатаСчетаФактуры;
		ПараметрыВывода.ЭтоУниверсальныйКорректировочныйДокумент = ЭтоУниверсальныйКорректировочныйДокумент;
		
		ПроверитьВыводКорректировочногоСчетаФактурыНаСтраницу(ПараметрыВывода);
		НомерЛиста = ПараметрыВывода.НомерЛиста;
		
		Если НомерПостановления1137 = "534" Тогда
			
			Если ЗначениеЗаполнено(СтрокаДокумента.НомерГТД) Тогда
				ОбластьМакета.Параметры.ПредставлениеГТД = СтрокаДокумента.НомерГТД;
				ОбластьМакета.Параметры.ПредставлениеСтраны    = СтрокаДокумента.СтранаПроисхождения;
				ОбластьМакета.Параметры.СтранаПроисхождения = СтрокаДокумента.СтранаПроисхожденияКод; 
			Иначе
				ОбластьМакета.Параметры.ПредставлениеГТД = "";
				ОбластьМакета.Параметры.ПредставлениеСтраны = "";
				ОбластьМакета.Параметры.СтранаПроисхождения = "";
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ПредставлениеГТД) Тогда 
				ОбластьМакета.Параметры.ПредставлениеГТД = "--";
				ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
				ОбластьМакета.Параметры.СтранаПроисхождения = "--";
			КонецЕсли; 
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
КонецПроцедуры

Функция НовыеПараметрыВыводаКорректировочногоСчетаФактурыНаСтраницу()
	Результат = Новый Структура;
	Результат.Вставить("ТабДокумент");
	Результат.Вставить("ОбластьТекСтроки");
	Результат.Вставить("ЭтоПоследняяСтрока");
	Результат.Вставить("Макет");
	Результат.Вставить("НомерЛиста");
	Результат.Вставить("НомерСчетаФактуры");
	Результат.Вставить("ДатаСчетаФактуры");
	Результат.Вставить("ЭтоУниверсальныйКорректировочныйДокумент", Ложь);
	Возврат Результат;
КонецФункции

Процедура ПроверитьВыводКорректировочногоСчетаФактурыНаСтраницу(ПараметрыВывода)
	
	// Проверим возможность вывода табличного документа
	СтрокаСПодвалом = Новый Массив;
	СтрокаСПодвалом.Добавить(ПараметрыВывода.ОбластьТекСтроки);
	
	Если ПараметрыВывода.ЭтоПоследняяСтрока Тогда
		// Если последняя строка, то должен поместиться еще итог
		СтрокаСПодвалом.Добавить(ПараметрыВывода.Макет.ПолучитьОбласть("Подвал"));
		СтрокаСПодвалом.Добавить(ПараметрыВывода.Макет.ПолучитьОбласть("Итого"));
		Если ПараметрыВывода.ЭтоУниверсальныйКорректировочныйДокумент Тогда
			СтрокаСПодвалом.Добавить(ПараметрыВывода.Макет.ПолучитьОбласть("ПодвалНакладной"));
		КонецЕсли;
	КонецЕсли;
	
	РезультатПроверки = ПечатьДокументовУНФ.ПроверитьВыводТабличногоДокумента(ПараметрыВывода.ТабДокумент,
		СтрокаСПодвалом, Неопределено);
	
	Если НЕ РезультатПроверки Тогда
		// Вывод разделителя и заголовка таблицы на новой странице
		
		ПараметрыВывода.НомерЛиста = ПараметрыВывода.НомерЛиста + 1;
		
		ОбластьНумерацияЛистов = ПараметрыВывода.Макет.ПолучитьОбласть("НумерацияЛистов");
		ОбластьНумерацияЛистов.Параметры.Номер = ПараметрыВывода.НомерСчетаФактуры;
		ОбластьНумерацияЛистов.Параметры.Дата = ПараметрыВывода.ДатаСчетаФактуры;
		ОбластьНумерацияЛистов.Параметры.НомерЛиста = ПараметрыВывода.НомерЛиста;
		
		ПараметрыВывода.ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПараметрыВывода.ТабДокумент.Вывести(ОбластьНумерацияЛистов);
		ПараметрыВывода.ТабДокумент.Вывести(ПараметрыВывода.Макет.ПолучитьОбласть("ЗаголовокТаблицы"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДозаполнитьСтрокуКорректировочногоСчетаФактуры(ОбластьМакета)

	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НаименованиеЕдиницыИзмерения) Тогда
		ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
		ОбластьМакета.Параметры.НаименованиеЕдиницыИзмерения = "--";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КоличествоДоИзменения) Тогда
		ОбластьМакета.Параметры.КоличествоДоИзменения = "--";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КоличествоПослеИзменения) Тогда
		ОбластьМакета.Параметры.КоличествоПослеИзменения = "--";
	КонецЕсли;	
	       		
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЦенаДоИзменения) Тогда
		ОбластьМакета.Параметры.ЦенаДоИзменения = "--";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЦенаПослеИзменения) Тогда
		ОбластьМакета.Параметры.ЦенаПослеИзменения = "--";
	КонецЕсли;	
	          		
	Если ОбластьМакета.Параметры.СтавкаНДС.НеОблагается Тогда
		ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
		ОбластьМакета.Параметры.СуммаНДСДоИзменения = "без НДС";
		ОбластьМакета.Параметры.СуммаНДСПослеИзменения = "без НДС";
		ОбластьМакета.Параметры.РазницаНДСУвеличение = "--";
		ОбластьМакета.Параметры.РазницаНДСУменьшение = "--";
	КонецЕсли;
	
КонецПроцедуры

Процедура ДозаполнитьСтрокуКорректировочногоСчетаФактурыСРПНТ(ОбластьМакета, ТипСтроки)

	Если ТипСтроки = "До" Или ТипСтроки = "После" Тогда
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НаименованиеЕдиницыИзмерения) Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			ОбластьМакета.Параметры.НаименованиеЕдиницыИзмерения = "--";
		КонецЕсли;
	КонецЕсли;
	
	Если ТипСтроки = "До" Тогда
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КоличествоДоИзменения) Тогда
			ОбластьМакета.Параметры.КоличествоДоИзменения = "--";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЦенаДоИзменения) Тогда
			ОбластьМакета.Параметры.ЦенаДоИзменения = "--";
		КонецЕсли;
		Если ОбластьМакета.Параметры.СтавкаНДС.НеОблагается Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДСДоИзменения = "без НДС";
		КонецЕсли;
	КонецЕсли;
	
	Если ТипСтроки = "После" Тогда
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КоличествоПослеИзменения) Тогда
			ОбластьМакета.Параметры.КоличествоПослеИзменения = "--";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЦенаПослеИзменения) Тогда
			ОбластьМакета.Параметры.ЦенаПослеИзменения = "--";
		КонецЕсли;
		Если ОбластьМакета.Параметры.СтавкаНДС.НеОблагается Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДСПослеИзменения = "без НДС";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьДанныеДляПечатиКорректировочныхСчетовФактур(ДокументОснование, СчетФактура, ВидСчетаФактуры, ИспользуетсяПостановлениеНДС1137) Экспорт

	ДанныеДляПечати = Новый Структура;

	ПредставлениеПоставщика = "";
	АдресПоставщика         = "";
	ИННКПППоставщика        = "";
	
	ВалютаРеглУчета = Константы.НациональнаяВалюта.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                  ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ДокументОснование",                ДокументОснование);
	Запрос.УстановитьПараметр("СчетФактура",                      СчетФактура);
	Запрос.УстановитьПараметр("ВидСчетаФактуры",                  ВидСчетаФактуры);
	Запрос.УстановитьПараметр("ТекстБезАкциза",                   ?(ИспользуетсяПостановлениеНДС1137, "без акциза", ""));
	Запрос.УстановитьПараметр("ИспользуетсяПостановлениеНДС1137", ИспользуетсяПостановлениеНДС1137);
	Запрос.УстановитьПараметр("ПустоеПодразделение",              Неопределено);
	Запрос.УстановитьПараметр("ПредставлениеПоставщика",          ПредставлениеПоставщика);
	Запрос.УстановитьПараметр("АдресПоставщика",                  АдресПоставщика);
	Запрос.УстановитьПараметр("ИННКПППоставщика",                 ИННКПППоставщика);
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ИсправляемыйДокументРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ИсправляемыйДокументПоступления");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ИсправляемыйДокументРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ИсправляемыйДокументРеализации");
	Иначе
		ИсправляемыйДокументРеализации = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИсправляемыйДокументРеализации",   ИсправляемыйДокументРеализации);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = Документы[ДокументОснование.Метаданные().Имя].ТекстЗапросаДанныеДляПечатиКорректировочныхСчетовФактур(НомераТаблиц)
		+ ТекстЗапросаДанныеДляПечатиКорректировочныхСчетовФактур(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[НомераТаблиц.Реквизиты].Пустой()
		ИЛИ Результат[НомераТаблиц.ТаблицаДокумента].Пустой() Тогда
		
		ДанныеДляПечати.Вставить("Реквизиты",        Неопределено);
		ДанныеДляПечати.Вставить("ТаблицаДокумента", Неопределено);

		Возврат ДанныеДляПечати;
		
	КонецЕсли;	

	ТаблицаРеквизиты = Результат[НомераТаблиц.Реквизиты].Выгрузить();
	ТаблицаДокумента = Результат[НомераТаблиц.ТаблицаДокумента].Выгрузить();
	ТаблицаСведенияПрослеживаемости = Результат[НомераТаблиц.ТаблицаСведенияПрослеживаемости].Выгрузить();
	ТаблицаСведенияПрослеживаемостиДоИзменения = Результат[НомераТаблиц.ТаблицаСведенияПрослеживаемостиДоИзменения].Выгрузить();
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаДокумента.НаименованиеЕдиницыИзмерения) Тогда
			СтрокаДокумента.КоличествоДоИзменения    = 0;
			СтрокаДокумента.КоличествоПослеИзменения = 0;
			СтрокаДокумента.ЦенаДоИзменения          = 0;
			СтрокаДокумента.ЦенаПослеИзменения       = 0;
		Иначе
			Если СтрокаДокумента.КоличествоДоИзменения = 0 Тогда
				СтрокаДокумента.ЦенаДоИзменения = 0;
			ИначеЕсли СтрокаДокумента.ЦенаДоИзменения = 0 Тогда
				СтрокаДокумента.ЦенаДоИзменения = Окр(СтрокаДокумента.СтоимостьБезНДСДоИзменения
					/ СтрокаДокумента.КоличествоДоИзменения, 2);
			КонецЕсли;
			Если СтрокаДокумента.КоличествоПослеИзменения = 0 Тогда
				СтрокаДокумента.ЦенаПослеИзменения = 0;
			ИначеЕсли СтрокаДокумента.ЦенаПослеИзменения = 0 Тогда
				СтрокаДокумента.ЦенаПослеИзменения = Окр(СтрокаДокумента.СтоимостьБезНДСПослеИзменения
					/ СтрокаДокумента.КоличествоПослеИзменения, 2);
			КонецЕсли;
			Если СтрокаДокумента.КоличествоДоИзменения = 0 
				И СтрокаДокумента.КоличествоПослеИзменения = 0 Тогда
				СтрокаДокумента.НаименованиеЕдиницыИзмерения = "";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("Реквизиты", ТаблицаРеквизиты);
	ДанныеДляПечати.Вставить("ТаблицаДокумента", ТаблицаДокумента);
	ДанныеДляПечати.Вставить("ТаблицаСведенияПрослеживаемости", ТаблицаСведенияПрослеживаемости);
	ДанныеДляПечати.Вставить("ТаблицаСведенияПрослеживаемостиДоИзменения", ТаблицаСведенияПрослеживаемостиДоИзменения);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ПодготовитьДанныеШапкиКорректировочногоСчетаФактуры(ВыборкаСФ, Реквизиты, ДополнитьДаннымиУПД) Экспорт

	ДанныеШапки = Новый Структура;
	
	// Номер и дата
	Если ВыборкаСФ.Исправление И ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидыОперацийСчетФактура.Корректировка Тогда
		Номер = ВыборкаСФ.НомерИсправляемогоКорректировочногоДокумента;
		ДанныеШапки.Вставить("Дата", ВыборкаСФ.ДатаИсправляемогоКорректировочногоДокумента);
	Иначе
		Номер = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(
			ВыборкаСФ.Дата, ВыборкаСФ.Номер, "");
		ДанныеШапки.Вставить("Дата", ВыборкаСФ.Дата);
	КонецЕсли;
	
	ДанныеШапки.Вставить("Номер", СокрЛП(Номер));
	
	// Номер и дата исправления
	ДанныеШапки.Вставить("Исправление", ВыборкаСФ.Исправление);
	Если ВыборкаСФ.Исправление Тогда
		Если ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидыОперацийСчетФактура.Корректировка Тогда
			НомерИсправленияКорректировочного = ВыборкаСФ.НомерИсправления;
			ДатаИсправленияКорректировочного  = ВыборкаСФ.ДатаИсправления;
		Иначе
			НомерИсправленияКорректировочного = ВыборкаСФ.НомерИсправленияКорректировочного;
			ДатаИсправленияКорректировочного  = ВыборкаСФ.ДатаИсправленияКорректировочного;
		КонецЕсли;
	Иначе
		НомерИсправленияКорректировочного = "--";
		ДатаИсправленияКорректировочного  = '00010101';
	КонецЕсли;
	
	ДанныеШапки.Вставить("НомерИсправленияКорректировочного", НомерИсправленияКорректировочного);
	ДанныеШапки.Вставить("ДатаИсправленияКорректировочного",  ДатаИсправленияКорректировочного);
	
	Если Реквизиты.Владелец().Колонки.Найти("ЦифровойИндексОбособленногоПодразделения") <> Неопределено
		И НЕ ПустаяСтрока(Реквизиты.ЦифровойИндексОбособленногоПодразделения) Тогда
		
		ДанныеШапки.Номер = ДанныеШапки.Номер + "/" + СокрЛП(Реквизиты.ЦифровойИндексОбособленногоПодразделения);
		
		Если ДанныеШапки.НомерИсправленияКорректировочного <> "--" Тогда
			
			ДанныеШапки.НомерИсправленияКорректировочного = ДанныеШапки.НомерИсправленияКорректировочного + "/" + СокрЛП(Реквизиты.ЦифровойИндексОбособленногоПодразделения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаРеквизитовОснований = Новый ТаблицаЗначений;
	ТаблицаРеквизитовОснований.Колонки.Добавить("НомерСчетаФактуры");
	ТаблицаРеквизитовОснований.Колонки.Добавить("ДатаСчетаФактуры");
	ТаблицаРеквизитовОснований.Колонки.Добавить("УчитыватьИсправлениеИсходногоДокумента");
	ТаблицаРеквизитовОснований.Колонки.Добавить("НомерИсправления");
	ТаблицаРеквизитовОснований.Колонки.Добавить("ДатаИсправления");
	
	ВыборкаОснования = ВыборкаСФ.Выбрать();
	Пока ВыборкаОснования.Следующий() Цикл
		
		НовоеОснование = ТаблицаРеквизитовОснований.Добавить();
		
		// Номер и дата исходного счета-фактуры
		НовоеОснование.НомерСчетаФактуры = СокрЛП(ВыборкаОснования.НомерИсходногоДокумента);
		
		Если Реквизиты.Владелец().Колонки.Найти("ЦифровойИндексОбособленногоПодразделения") <> Неопределено
			И НЕ ПустаяСтрока(Реквизиты.ЦифровойИндексОбособленногоПодразделения) Тогда
			
			НовоеОснование.НомерСчетаФактуры = НовоеОснование.НомерСчетаФактуры + "/" + СокрЛП(Реквизиты.ЦифровойИндексОбособленногоПодразделения);
			
		КонецЕсли;
		
		НовоеОснование.ДатаСчетаФактуры  = ВыборкаОснования.ДатаИсходногоДокумента;
		
		НовоеОснование.УчитыватьИсправлениеИсходногоДокумента = ВыборкаОснования.УчитыватьИсправлениеИсходногоДокумента;
		// Номер и дата исправления исходного счета-фактуры
		Если ВыборкаОснования.УчитыватьИсправлениеИсходногоДокумента = Истина Тогда
			НовоеОснование.НомерИсправления = ВыборкаОснования.НомерИсправленияИсходногоДокумента;
			НовоеОснование.ДатаИсправления	 = ВыборкаОснования.ДатаИсправленияИсходногоДокумента;
		Иначе
			НовоеОснование.НомерИсправления = "--";
			НовоеОснование.ДатаИсправления	= '00010101';
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаРеквизитовОснований.Свернуть("НомерСчетаФактуры,ДатаСчетаФактуры, УчитыватьИсправлениеИсходногоДокумента, НомерИсправления,ДатаИсправления");
	ДанныеШапки.Вставить("ТаблицаРеквизитовОснований", ТаблицаРеквизитовОснований);
	
	ДанныеШапки.Вставить("Поставщик", Реквизиты.Поставщик);
	
	// ИНН и КПП продавца
	ДанныеШапки.Вставить("ИННПродавца", Реквизиты.ИННПоставщика);
	
	Если Реквизиты.ОбособленноеПодразделениеПоставщика = Реквизиты.Организация Тогда
		
		ДанныеШапки.Вставить("КПППродавца", Реквизиты.КПППоставщика);
		
	Иначе
		
		КПППоставщика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.ОбособленноеПодразделениеПоставщика, "КПП");
		ДанныеШапки.Вставить("КПППродавца", КПППоставщика);
		
	КонецЕсли;
	
	Если ТипЗнч(Реквизиты.Поставщик) = Тип("Строка") Тогда
		
		ДанныеШапки.Вставить("НаименованиеПродавца", Реквизиты.Поставщик);
		ДанныеШапки.Вставить("АдресПродавца",        Реквизиты.АдресПоставщика);
		ДанныеШапки.Вставить("ИННКПППродавца",       Реквизиты.ИННКПППоставщика);
		
	Иначе
		
		СведенияОПоставщике = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Реквизиты.Поставщик, ВыборкаСФ.ДатаСведений);
		
		ДанныеШапки.Вставить("НаименованиеПродавца", ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,"));
		
		// Адрес продавца
		ДанныеШапки.Вставить("АдресПродавца",
			ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,"));
			
		ДанныеШапки.Вставить("ИННКПППродавца",
			ДанныеШапки.ИННПродавца
			+ ?(ЗначениеЗаполнено(ДанныеШапки.КПППродавца), "/", "")
			+ ДанныеШапки.КПППродавца);
		
	КонецЕсли;
	
	СведенияОПокупателе = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Реквизиты.Покупатель, ВыборкаСФ.ДатаСведений);
	
	// Наименование покупателя
	ДанныеШапки.Вставить("Покупатель", Реквизиты.Покупатель);
	ДанныеШапки.Вставить("НаименованиеПокупателя",
		ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,"));
	
	// Адрес покупателя
	ДанныеШапки.Вставить("АдресПокупателя",
		ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,"));
	
	// ИНН и КПП покупателя
	ДанныеШапки.Вставить("ИННПокупателя", Реквизиты.ИННПокупателя);
	Если Реквизиты.ОбособленноеПодразделениеПокупателя = Реквизиты.Покупатель Тогда
		
		ДанныеШапки.Вставить("КПППокупателя", Реквизиты.КПППокупателя);
		
	Иначе
		
		КПППокупателя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.ОбособленноеПодразделениеПокупателя, "КПП");
		ДанныеШапки.Вставить("КПППокупателя", КПППокупателя);
		
	КонецЕсли;
	
	ДанныеШапки.Вставить("ИННКПППокупателя",
		ДанныеШапки.ИННПокупателя
		+ ?(ЗначениеЗаполнено(ДанныеШапки.КПППокупателя), "/", "")
		+ ДанныеШапки.КПППокупателя);
	
	// Валюта
	Если ЗначениеЗаполнено(Реквизиты.Валюта) Тогда
		Валюта = Реквизиты.Валюта.НаименованиеПолное + ", " + Реквизиты.Валюта.Код;
	Иначе
		Валюта = "";		
	КонецЕсли;
	
	ДанныеШапки.Вставить("Валюта", Реквизиты.Валюта);
	ВерсияПостановления1137 = ПечатьДокументовУНФ.ВерсияПостановленияНДС1137(ДанныеШапки.Дата);
	Если ВерсияПостановления1137 = "981" Или ВерсияПостановления1137 = "534" Тогда
		ДанныеШапки.Вставить("ВалютаНаименование", "" + Валюта);
	Иначе
		ДанныеШапки.Вставить("ВалютаНаименование", "Валюта: наименование, код " + Валюта);
	КонецЕсли;
	ДанныеШапки.Вставить("ВалютаНаименованиеУКД", Валюта);

	// Данные для подвала
	Если ТипЗнч(Реквизиты.Поставщик) = Тип("Строка") Тогда
		ОрганизацияДляРеквизитовПодвала = Реквизиты.Организация;
	Иначе
		ОрганизацияДляРеквизитовПодвала = Реквизиты.Поставщик;
	КонецЕсли;
	
	ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияДляРеквизитовПодвала, "ЮридическоеФизическоеЛицо");
	Если ЮрФизЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		
		ДанныеШапки.Вставить("ФИОРуководителя", ВыборкаСФ.РасшифровкаПодписиРуководителя);
		ДанныеШапки.Вставить("Руководитель", ВыборкаСФ.РасшифровкаПодписиРуководителя);
		
		ДанныеШапки.Вставить("ФИОГлавногоБухгалтера", ВыборкаСФ.РасшифровкаПодписиГлавногоБухгалтера);
		ДанныеШапки.Вставить("ГлавныйБухгалтер", ВыборкаСФ.РасшифровкаПодписиГлавногоБухгалтера);
		
	Иначе
		
		ДанныеШапки.Вставить("Свидетельство", ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОПоставщике, "Свидетельство,"));
		ДанныеШапки.Вставить("ФИОПБОЮЛ", ВыборкаСФ.РасшифровкаПодписиРуководителя);
		
	КонецЕсли;
	
	ДанныеШапки.Вставить("ИдентификаторГосКонтракта", ВыборкаСФ.ИдентификаторГосКонтракта);
	
	// Данные для универсального передаточного документа
	Если ДополнитьДаннымиУПД Тогда
		
		// Наименование экономического субъекта - составителя документа
		ПредставлениеПоставщика = ДанныеШапки.НаименованиеПродавца;
		ИННПоставщика           = ДанныеШапки.ИННПродавца;
		КПППоставщика           = ДанныеШапки.КПППродавца;
		
		Если ЗначениеЗаполнено(КПППоставщика) Тогда
			ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
				ПредставлениеПоставщика, ИННПоставщика, КПППоставщика);
		ИначеЕсли ЗначениеЗаполнено(ИННПоставщика) Тогда
			ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
				ПредставлениеПоставщика, ИННПоставщика);
		Иначе
			ПредставлениеОрганизации = ПредставлениеПоставщика;
		КонецЕсли;
		ДанныеШапки.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		
		Если ЗначениеЗаполнено(ДанныеШапки.КПППокупателя) Тогда
			ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
				ДанныеШапки.НаименованиеПокупателя, ДанныеШапки.ИННПокупателя, ДанныеШапки.КПППокупателя);
		ИначеЕсли ЗначениеЗаполнено(ДанныеШапки.ИННПокупателя) Тогда
			ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
				ДанныеШапки.НаименованиеПокупателя, ДанныеШапки.ИННПокупателя);
		Иначе
			ПредставлениеКонтрагента = ДанныеШапки.НаименованиеПокупателя;
		КонецЕсли;
		
		ДанныеШапки.Вставить("ПредставлениеКонтрагента", ПредставлениеКонтрагента);
		
		ДанныеШапки.Вставить("Основание", Реквизиты.Основание);
		
		ДанныеШапки.Вставить("ДолжностьРуководителя", ВыборкаСФ.ДолжностьРуководителя);
		ДанныеШапки.Вставить("ФИОРуководителяНакладная", ВыборкаСФ.РасшифровкаПодписиРуководителя);
		
		// Статус
		Если НЕ ЗначениеЗаполнено(ВыборкаСФ.ВидСчетаФактуры) Тогда
			СтатусУКД = 2;
		Иначе
			СтатусУКД = 1;
		КонецЕсли;
		
		ДанныеШапки.Вставить("СтатусУКД", СтатусУКД);
			
	КонецЕсли;
	Возврат ДанныеШапки;
	
КонецФункции

Функция ТекстЗапросаПечатьКорректировочныхСчетовФактур(ДляУниверсальногоКорректировочногоДокумента = Ложь) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыОснования.Ссылка КАК СчетФактура
	|	,ДокументыОснования.Ссылка.Дата КАК ДатаДокумента
	|	,ДокументыОснования.Ссылка.Дата КАК Дата
	|	,ДокументыОснования.Ссылка.Номер КАК Номер
	|	,ДокументыОснования.Ссылка.ВидОперации КАК ВидСчетаФактуры
	|	,ДокументыОснования.Ссылка.Исправление КАК Исправление
	|	,ДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправления
	|	,ДокументыОснования.Ссылка.Дата КАК ДатаИсправления
	|	,ДокументыОснования.УчитыватьИсправлениеИсходногоДокумента КАК УчитыватьИсправлениеИсходногоДокумента
	|	,ДокументыОснования.Ссылка.НомерИсправляемогоКорректировочногоДокумента КАК НомерИсправляемогоКорректировочногоДокумента
	|	,ДокументыОснования.Ссылка.ДатаИсправляемогоКорректировочногоДокумента КАК ДатаИсправляемогоКорректировочногоДокумента
	|	,ДокументыОснования.Ссылка.Дата КАК ДатаСведений
	|	,Выбор КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА ДокументыОснования.ДокументОснование.ПодписьРуководителя.Должность
	|		ИНАЧЕ ДокументыОснования.Ссылка.ПодписьРуководителя.Должность КОНЕЦ КАК ДолжностьРуководителя
	|	,Выбор КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА ДокументыОснования.ДокументОснование.ПодписьРуководителя.РасшифровкаПодписи
	|		ИНАЧЕ ДокументыОснования.Ссылка.ПодписьРуководителя.РасшифровкаПодписи КОНЕЦ КАК РасшифровкаПодписиРуководителя
	|	,Выбор КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА ДокументыОснования.ДокументОснование.ПодписьГлавногоБухгалтера.Должность
	|		ИНАЧЕ ДокументыОснования.Ссылка.ПодписьГлавногоБухгалтера.Должность КОНЕЦ КАК ДолжностьГлавногоБухгалтера
	|	,Выбор КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.АктВыполненныхРабот
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.СчетНаОплату
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетОПереработке
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПоступлениеВКассу
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|				ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ПриемИПередачаВРемонт
	|		ТОГДА ДокументыОснования.ДокументОснование.ПодписьГлавногоБухгалтера.РасшифровкаПодписи
	|		ИНАЧЕ ДокументыОснования.Ссылка.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КОНЕЦ КАК РасшифровкаПодписиГлавногоБухгалтера
	|	,ЛОЖЬ КАК СчетФактураБезНДС
	|	,Выбор КОГДА ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент <> Значение(Справочник.Контрагенты.ПустаяСсылка)
	|			И ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = Значение(Справочник.СтраныМира.Россия)
	|		ТОГДА ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДокументыОснования.Ссылка.Контрагент КОНЕЦ КАК Контрагент
	|	,Выбор КОГДА ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент <> Значение(Справочник.Контрагенты.ПустаяСсылка)
	|			И ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = Значение(Справочник.СтраныМира.Россия)
	|		ТОГДА ДокументыОснования.Ссылка.Контрагент.ГоловнойКонтрагент.КПП
	|		ИНАЧЕ ДокументыОснования.Ссылка.Контрагент КОНЕЦ КАК КППСчетаФактуры
	|	,ИСТИНА КАК ЭтоСчетФактураВыданный
	|	,ДокументыОснования.ДокументОснование КАК ДокументОснование
	|	,ДокументыОснования.НомерСтроки КАК НомерСтроки
	|	,ДокументыОснования.НомерИсходногоДокумента КАК НомерИсходногоДокумента
	|	,ДокументыОснования.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента
	|	,ДокументыОснования.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента
	|	,ДокументыОснования.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента
	|	,ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки КАК НоменклатураДоставки
	|	,ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК ПредставлениеНоменклатурыДоставки
	|	,ДокументыОснования.Ссылка.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта
	|	,ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.Артикул КАК АртикулДоставки
	|	,ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.Код КАК КодДоставки
	|	,ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДоставки
	|	,ДокументыОснования.Ссылка.УдалитьНоменклатураДоставки.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияДоставки
	|	,ДокументыОснования.Ссылка.УдалитьСтавкаНДСДоставки КАК СтавкаНДСДоставки
	|	,ВЫБОР 
	|		КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации ТОГДА ДокументыОснования.ДокументОснование.СуммаНДСДоставкиДоИзменения 
	|		ИНАЧЕ 0 КОНЕЦ КАК СуммаНДСДоИзмененияДоставка
	|	,ВЫБОР 
	|		КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации 
	|			ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.СчетНаОплату
	|			ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|			ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя ТОГДА ДокументыОснования.ДокументОснование.СуммаНДСДоставки 
	|		ИНАЧЕ 0 КОНЕЦ КАК СуммаНДСПослеИзмененияДоставка
	|	,ВЫБОР 
	|		КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации ТОГДА ДокументыОснования.ДокументОснование.СтоимостьДоставкиДоИзменения + ВЫБОР КОГДА ДокументыОснования.ДокументОснование.СуммаВключаетНДС ТОГДА 0 ИНАЧЕ ДокументыОснования.ДокументОснование.СуммаНДСДоставкиДоИзменения КОНЕЦ 
	|		ИНАЧЕ 0 КОНЕЦ КАК СтоимостьСНДСДоИзмененияДоставка
	|	,ВЫБОР 
	|		КОГДА ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации 
	|			ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.СчетНаОплату
	|			ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.РасходнаяНакладная
	|			ИЛИ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ЗаказПокупателя ТОГДА ДокументыОснования.ДокументОснование.СтоимостьДоставки + ВЫБОР КОГДА ДокументыОснования.ДокументОснование.СуммаВключаетНДС ТОГДА 0 ИНАЧЕ ДокументыОснования.ДокументОснование.СуммаНДСДоставки КОНЕЦ 
	|		ИНАЧЕ 0 КОНЕЦ КАК СтоимостьСНДСПослеИзмененияДоставка
	|	,0 КАК Вес
	|	,0 КАК Объем
	|ИЗ Документ.СчетФактура.ДокументыОснования КАК ДокументыОснования
	|ГДЕ ДокументыОснования.Ссылка В(&МассивОбъектов)
	|	И &УсловиеПоДате
	|	И ДокументыОснования.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка)
	|
	|УПОРЯДОЧИТЬ ПО Дата, СчетФактура, НомерСтроки
	|
	|ИТОГИ
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ВидСчетаФактуры),
	|	МАКСИМУМ(Исправление),
	|	МАКСИМУМ(НомерИсправления),
	|	МАКСИМУМ(ДатаИсправления),
	|	МАКСИМУМ(УчитыватьИсправлениеИсходногоДокумента),
	|	МАКСИМУМ(НомерИсправляемогоКорректировочногоДокумента),
	|	МАКСИМУМ(ДатаИсправляемогоКорректировочногоДокумента),
	|	МАКСИМУМ(ДолжностьРуководителя),
	|	МАКСИМУМ(РасшифровкаПодписиРуководителя),
	|	МАКСИМУМ(ДолжностьГлавногоБухгалтера),
	|	МАКСИМУМ(РасшифровкаПодписиГлавногоБухгалтера),
	|	МАКСИМУМ(СчетФактураБезНДС),
	|	МАКСИМУМ(ЭтоСчетФактураВыданный),
	|	МАКСИМУМ(НомерИсходногоДокумента),
	|	МАКСИМУМ(ДатаИсходногоДокумента),
	|	МАКСИМУМ(НомерИсправленияИсходногоДокумента),
	|	МАКСИМУМ(ДатаИсправленияИсходногоДокумента),
	|	МАКСИМУМ(НоменклатураДоставки),
	|	МАКСИМУМ(ПредставлениеНоменклатурыДоставки),
	|	МАКСИМУМ(АртикулДоставки),
	|	МАКСИМУМ(КодДоставки),
	|	МАКСИМУМ(ЕдиницаИзмеренияДоставки),
	|	МАКСИМУМ(КодЕдиницыИзмеренияДоставки),
	|	МАКСИМУМ(СтавкаНДСДоставки),
	|	МАКСИМУМ(ИдентификаторГосКонтракта),
	|	СУММА(СуммаНДСДоИзмененияДоставка),
	|	СУММА(СуммаНДСПослеИзмененияДоставка),
	|	СУММА(СтоимостьСНДСДоИзмененияДоставка),
	|	СУММА(СтоимостьСНДСПослеИзмененияДоставка)
	|ПО
	|	СчетФактура";
	
	Если ДляУниверсальногоКорректировочногоДокумента Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ДокументыОснования.Ссылка.Дата >= ДАТАВРЕМЯ(2013,1,1)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДате",
			"ДокументыОснования.Ссылка.Дата >= &НачалоИспользованияСФ1137");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецФункции 

Функция ТекстЗапросаДанныеДляПечатиКорректировочныхСчетовФактур(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСведенияПрослеживаемости", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСведенияПрослеживаемостиДоИзменения", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ПрослеживаемыйТовар
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПрослеживаемыйТоварЧисло,
	|	ТаблицаДокумента.Товар КАК Товар,
	|	ТаблицаДокумента.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
	|	ТаблицаДокумента.КодТНВЭДЕдиницаИзмеренияКод КАК КодТНВЭДЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.КодТНВЭДЕдиницаИзмеренияНаименование КАК КодТНВЭДЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ТоварКод КАК ТоварКод,
	|	ТаблицаДокумента.Код КАК Код,
	|	ТаблицаДокумента.Артикул КАК Артикул,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.ТоварНаименование КАК СТРОКА(10))) = """"
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаДокумента.Товар)
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.ТоварНаименование КАК СТРОКА(1000))
	|	КОНЕЦ КАК НаименованиеНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК НаименованиеЕдиницыИзмерения,
	|	ЕСТЬNULL(КлассификаторЕдиницИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.КоличествоДоИзменения КАК КоличествоДоИзменения,
	|	ТаблицаДокумента.КоличествоПослеИзменения КАК КоличествоПослеИзменения,
	|	ТаблицаДокумента.ЦенаДоИзменения КАК ЦенаДоИзменения,
	|	ТаблицаДокумента.ЦенаПослеИзменения КАК ЦенаПослеИзменения,
	|	ТаблицаДокумента.СтоимостьБезНДСДоИзменения КАК СтоимостьБезНДСДоИзменения,
	|	ТаблицаДокумента.СтоимостьБезНДСПослеИзменения КАК СтоимостьБезНДСПослеИзменения,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	&ТекстБезАкциза КАК Акциз,
	|	ТаблицаДокумента.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
	|	ТаблицаДокумента.СуммаНДСПослеИзменения КАК СуммаНДСПослеИзменения,
	|	ТаблицаДокумента.СтоимостьСНДСДоИзменения КАК СтоимостьСНДСДоИзменения,
	|	ТаблицаДокумента.СтоимостьСНДСПослеИзменения КАК СтоимостьСНДСПослеИзменения,
	|	ТаблицаДокумента.РазницаБезНДСУвеличение КАК РазницаБезНДСУвеличение,
	|	ТаблицаДокумента.РазницаБезНДСУменьшение КАК РазницаБезНДСУменьшение,
	|	ТаблицаДокумента.РазницаНДСУвеличение КАК РазницаНДСУвеличение,
	|	ТаблицаДокумента.РазницаНДСУменьшение КАК РазницаНДСУменьшение,
	|	ТаблицаДокумента.РазницаСНДСУвеличение КАК РазницаСНДСУвеличение,
	|	ТаблицаДокумента.РазницаСНДСУменьшение КАК РазницаСНДСУменьшение,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СтраныМира.Код КАК СтранаПроисхожденияКод
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО ТаблицаДокумента.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ТаблицаДокумента.СтранаПроисхождения = СтраныМира.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТабЧасти,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииСведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК Количество,
	|	КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ТаблицаСведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииСведенияПрослеживаемости.НомерСтроки КАК НомерСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК Количество,
	|	КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ТаблицаСведенияПрослеживаемостиДоИзменения КАК КорректировкаРеализацииСведенияПрослеживаемости";

	Возврат ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();

КонецФункции

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.СчетФактура";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Ложь, Ложь);
	КомандаПечати.ФункциональныеОпции = "ПередачаТоваровНаКомиссию, ПриемТоваровНаКомиссию, ИспользуетсяОСНО, ИспользоватьСчетаФактурыИсходящие, УчетГТД";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийСчетФактура.КорректировкаАванса, ВидСравнения.НеРавно);
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Истина, Ложь);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийСчетФактура.КорректировкаАванса, ВидСравнения.НеРавно);
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.УниверсальныйПередаточныйДокументФаксимиле";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Истина, Истина);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ПодменюПечатьФаксимиле";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийСчетФактура.КорректировкаАванса, ВидСравнения.НеРавно);
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйКорректировочныйДокумент";
	КомандаПечати.Обработчик = "ПечатьДокументовУНФКлиент.ПечатьУКД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный корректировочный документ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьКорректировкиРеализаций";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийСчетФактура.КорректировкаАванса, ВидСравнения.НеРавно);
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = Обработки.ПечатьСчетФактураКорректировочный.ИдентификаторПечатнойФормы();
	КомандаПечати.Представление = Обработки.ПечатьСчетФактураКорректировочный.ПредставлениеПФ();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетФактураКорректировочный";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", Перечисления.ВидыОперацийСчетФактура.КорректировкаАванса, ВидСравнения.Равно);
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
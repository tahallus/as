#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности";
	КомандаПечати.Представление = НСтр("ru = 'Заявление'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПФ_MXL_ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности", 
			"Заявление о предоставлении сведений о трудовой деятельности", 
			ПечатнаяФормаПредоставленииСведенийОТрудовойДеятельности(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатнаяФормаПредоставленииСведенийОТрудовойДеятельности(МассивОбъектов, ОбъектыПечати)
	
	ВыборкаПоРаботникам = ЗапросПоСотрудникамДляПечати(МассивОбъектов).Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности.ПФ_MXL_ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности");
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности";
	ДокументРезультат.ПолеСлева = 0;
	ДокументРезультат.ПолеСправа = 0;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ЭтоПервыйДокументКоллекции = Истина;
	
	Пока ВыборкаПоРаботникам.Следующий() Цикл 
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьЗаявление = Макет.ПолучитьОбласть("Заявление");
		ЗаполнитьЗначенияСвойств(ОбластьЗаявление.Параметры, ВыборкаПоРаботникам);
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.СклонениеПредставленийОбъектов") Тогда
			
			МодульСклонениеПредставленийОбъектов = ОбщегоНазначения.ОбщийМодуль("СклонениеПредставленийОбъектов");
			
			ФИОРуководителя = МодульСклонениеПредставленийОбъектов.ПросклонятьФИО(ВыборкаПоРаботникам.ФИОРуководителя, 3, , ВыборкаПоРаботникам.Пол);
			Если ЗначениеЗаполнено(ФИОРуководителя)Тогда
				ОбластьЗаявление.Параметры.ФИОРуководителя = ФИОРуководителя;
			КонецЕсли;
			
			НаименованиеДолжности = МодульСклонениеПредставленийОбъектов.ПросклонятьФИО(ВыборкаПоРаботникам.НаименованиеДолжности, 3);
			Если ЗначениеЗаполнено(НаименованиеДолжности)Тогда
				ОбластьЗаявление.Параметры.НаименованиеДолжности = НаименованиеДолжности;
			КонецЕсли;
			
			ФИОСотрудника = МодульСклонениеПредставленийОбъектов.ПросклонятьФИО(ВыборкаПоРаботникам.ФИОСотрудника, 2);
			Если ЗначениеЗаполнено(ФИОСотрудника)Тогда
				ОбластьЗаявление.Параметры.ФИОСотрудника = ФИОСотрудника;
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьЗаявление.Параметры.ТекстЗаявления = ?(ВыборкаПоРаботникам.ВидЗаявления = Перечисления.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ВедениеБумажнойТрудовойКнижки,
			НСтр("ru = 'Прошу продолжить ведение моей трудовой книжки в соответствии со статьей 66 Трудового кодекса Российской Федерации.'"),
			НСтр("ru = 'Прошу предоставлять мне сведения о трудовой деятельности в соответствии со статьей 66.1 Трудового кодекса Российской Федерации.'"));
			
		ОбластьЗаявление.Параметры.Дата = Формат(ВыборкаПоРаботникам.Дата, "ДЛФ=Д");
		
		ДокументРезультат.Вывести(ОбластьЗаявление); 
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоРаботникам.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ЗапросПоСотрудникамДляПечати(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка,
	|	Сотрудники.Ссылка.Организация КАК Организация,
	|	Сотрудники.Ссылка.Дата КАК Дата,
	|	Сотрудники.Ссылка.Дата КАК Период,
	|	Сотрудники.Ссылка.Руководитель КАК Руководитель,
	|	Сотрудники.Ссылка.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	Сотрудники.НомерСтроки КАК НомерСтроки,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Сотрудники.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Пол,
	|	Сотрудники.ВидЗаявления КАК ВидЗаявления
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка В(&МассивСсылок)
	|	И НЕ Сотрудники.ЗаявлениеОтозвано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
	|	Сотрудники.Ссылка КАК Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиДляПечатиТрудовыхДоговоров
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументов КАК ВТДанныеДокументов
	|		ПО Сотрудники.Ссылка = ВТДанныеДокументов.Сотрудник";
	
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	УчетСтраховыхВзносов.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Описатель = Справочники.Сотрудники.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТДанныеДокументов");
	КадровыеДанные = "ФизическоеЛицо, ФИОПолные";
	УчетСтраховыхВзносов.СоздатьВТКадровыеДанныеСотрудников(Описатель, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.Дата КАК Дата,
	|	ДанныеДокументов.Руководитель КАК Руководитель,
	|	ДанныеДокументов.Руководитель КАК ФИОРуководителя,
	|	ДанныеДокументов.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ДанныеДокументов.ДолжностьРуководителя КАК НаименованиеДолжности,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокументов.Сотрудник КАК Сотрудник,
	|	ДанныеДокументов.Пол КАК Пол,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ФИОПолные, """") КАК ФИОСотрудника,
	|	ДанныеДокументов.ВидЗаявления КАК ВидЗаявления
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОПоследние.Ссылка
	|			И ДанныеДокументов.Руководитель = ВТФИОПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ДанныеДокументов.Сотрудник = КадровыеДанныеСотрудников.Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
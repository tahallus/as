#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказатьРегистры(Объект.ТаблицаРегистров);
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаВажныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МобильныйКлиентУНФ.НастроитьФормуОбъектаМобильныйКлиент(Элементы);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаСоставаРегистров(Команда)
	
	СписокИспользуемыхРегистров = Новый СписокЗначений;

	Для Каждого Строка Из Объект.ТаблицаРегистров Цикл
		СписокИспользуемыхРегистров.Добавить(Строка.Имя);
	КонецЦикла;

	ОткрытьФорму("Документ.КорректировкаРегистров.Форма.ФормаВыбораРегистра",
				Новый Структура("СписокИспользуемыхРегистров", СписокИспользуемыхРегистров),,,,,
				Новый ОписаниеОповещения("НастройкаСоставаРегистровЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока И Элемент.ТекущиеДанные.Свойство("Валюта") Тогда
		
		Элемент.ТекущиеДанные.Валюта = ВалютаУчета;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СоздатьСтраницу(ИмяСтраницы, Заголовок, Родитель, ВидГруппыФормы)

	НовыйЭлемент = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Родитель);
	НовыйЭлемент.Вид                      = ВидГруппыФормы;
	НовыйЭлемент.Заголовок                = Заголовок;
	НовыйЭлемент.РастягиватьПоВертикали   = Истина;
	НовыйЭлемент.РастягиватьПоГоризонтали = Истина;

	Возврат НовыйЭлемент;

КонецФункции

&НаСервере
Функция ПолучитьИмяСтраницыРегистра(ИмяРегистра)

	Возврат "Страница" + ИмяРегистра;

КонецФункции

&НаСервере
Процедура УдалитьСтраницуРегистра(ИмяРегистра)

	Элементы.Удалить(Элементы.Найти(ПолучитьИмяСтраницыРегистра(ИмяРегистра)));

КонецПроцедуры

&НаСервере
Процедура СоздатьТаблицуРегистра(ИмяРегистра, Колонки, Родитель)

	ТаблицаФормы = Элементы.Добавить("ТаблицаДвижений" + ИмяРегистра, Тип("ТаблицаФормы"), Родитель);
	ТаблицаФормы.ПутьКДанным      = "Объект.Движения." + ИмяРегистра;
	Родитель.ПутьКДаннымЗаголовка = ТаблицаФормы.ПутьКДанным + ".КоличествоСтрок";

	Для Каждого Колонка Из Колонки Цикл

		Если Колонка.Значение <> Неопределено Тогда
			
			ПолеФормы = Элементы.Добавить(ТаблицаФормы.Имя + Колонка.Ключ, Тип("ПолеФормы"), ТаблицаФормы);
			ПолеФормы.ПутьКДанным = ТаблицаФормы.ПутьКДанным + "." + Колонка.Ключ;
			ПолеФормы.Заголовок   = Колонка.Значение;
			ПолеФормы.Вид         = ВидПоляФормы.ПолеВвода;
			
		КонецЕсли;
	
	КонецЦикла;

	ТаблицаФормы.УстановитьДействие("ПриНачалеРедактирования", "Подключаемый_ТаблицаПриНачалеРедактирования");
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТаблицуРегистраНаСтранице(Знач СтрокаТЧ)

	Если Метаданные.РегистрыНакопления.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровНакопления;
		ПредставлениеРегистра = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя];
		
	ИначеЕсли Метаданные.РегистрыСведений.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровСведений;
		ПредставлениеРегистра = Метаданные.РегистрыСведений[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыСведений[СтрокаТЧ.Имя];
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("Период");
	СтруктураРегистра.Вставить("НомерСтроки");
	СтруктураРегистра.Вставить("Активность");
	СтруктураРегистра.Вставить("ВидДвижения");
	
	Для каждого СтандартныйРеквизит Из Регистр.СтандартныеРеквизиты Цикл
		Если СтруктураРегистра.Свойство(СтандартныйРеквизит.Имя) Тогда
			СтруктураРегистра[СтандартныйРеквизит.Имя] = СтандартныйРеквизит.Синоним;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Измерение Из Регистр.Измерения Цикл
		СтруктураРегистра.Вставить(Измерение.Имя, Измерение.Синоним);
	КонецЦикла;
	
	Для каждого Ресурс Из Регистр.Ресурсы Цикл
		СтруктураРегистра.Вставить(Ресурс.Имя, Ресурс.Синоним);
	КонецЦикла;
	
	Для каждого Реквизит Из Регистр.Реквизиты Цикл
		СтруктураРегистра.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
	
	СтраницаДляРегистра = СоздатьСтраницу(ПолучитьИмяСтраницыРегистра(СтрокаТЧ.Имя), ПредставлениеРегистра, СтраницаРегистра, 
										  ВидГруппыФормы.Страница);
	
	СоздатьТаблицуРегистра(СтрокаТЧ.Имя, СтруктураРегистра, СтраницаДляРегистра);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьРегистры(ТаблицаРегистров)

	Для Каждого Строка Из ТаблицаРегистров Цикл

		ПоказатьТаблицуРегистраНаСтранице(Строка);

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеРегистров(СписокРегистров)

	Для Каждого Элемент Из СписокРегистров Цикл

		// Нужно добавить новый регистр.
		Если Элемент.Пометка Тогда

			СтрокаТЧ = Объект.ТаблицаРегистров.Добавить();
			СтрокаТЧ.Имя           = Элемент.Значение;

			ПоказатьТаблицуРегистраНаСтранице(СтрокаТЧ);

		Иначе

			Для Каждого Строка Из Объект.ТаблицаРегистров.НайтиСтроки(Новый Структура("Имя", Элемент.Значение)) Цикл
				Объект.ТаблицаРегистров.Удалить(Строка);
			КонецЦикла;

			Объект.Движения[Элемент.Значение].Очистить();
			УдалитьСтраницуРегистра(Элемент.Значение);

		КонецЕсли;

	КонецЦикла;

	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура НастройкаСоставаРегистровЗавершение(Результат1, ДополнительныеПараметры) Экспорт
    
    Результат = Результат1;
    
    Если ТипЗнч(Результат) = Тип("СписокЗначений") Тогда
        
        ОбработатьИзменениеРегистров(Результат);
        
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОписаниеПеременных

&НаКлиенте
Перем КэшНайденныхКонтактов;

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура УстановитьДоступностьКнопкиОткрытияКонтрагента()
	
	Если ЗначениеЗаполнено(Объект.Покупатель) Тогда
		Элементы.Покупатель.КнопкаОткрытия = Истина;
	Иначе
		Элементы.Покупатель.КнопкаОткрытия = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Если Объект.НалогВСумме Тогда
		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	Иначе
		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки + Объект.СуммаНалога;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуНалога()
	
	СуммаНалога = 0;
	
	Если Объект.НастройкаНалога = Перечисления.НастройкиНалогаМП.НаВесьДокумент Тогда
		
		СуммаСоСкидкой = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки; 
		Если Объект.НалогВСумме Тогда
			СуммаНалога = СуммаСоСкидкой - СуммаСоСкидкой / (1 + Объект.СтавкаНалога / 100);
		Иначе
			СуммаНалога = СуммаСоСкидкой * Объект.СтавкаНалога / 100;
		КонецЕсли;
		
	ИначеЕсли Объект.НастройкаНалога = Перечисления.НастройкиНалогаМП.Построчно Тогда
		
		КоличествоТоваров = Объект.Товары.Количество();
		Если КоличествоТоваров <> 0 Тогда
			СкидкаНаСтроку = Объект.СуммаСкидки / КоличествоТоваров;
		Иначе
			СкидкаНаСтроку = 0;
		КонецЕсли;
		
		Для каждого ТекСтрока Из Объект.Товары Цикл
			СтавкаНалога = Справочники.ТоварыМП.ПолучитьСтавкуНалога(ТекСтрока.Товар);
			СуммаСоСкидкой = ТекСтрока.Сумма - СкидкаНаСтроку;
			Если Объект.НалогВСумме Тогда
				СуммаНалога = СуммаНалога + СуммаСоСкидкой - СуммаСоСкидкой / (1 + СтавкаНалога / 100);
			Иначе
				СуммаНалога = СуммаНалога + СуммаСоСкидкой * СтавкаНалога / 100;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Объект.СуммаНалога = СуммаНалога;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуОплатыЕслиНужно(СПредупреждением = Ложь)
	
	Если Объект.СуммаОплаты > (Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки) Тогда
		Если СПредупреждением Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("СкорректироватьСуммуОплатыЕслиНужноЗавершение", ЭтаФорма), НСтр("ru='Сумма оплаты не может быть больше суммы документа со скидкой!';en='Payment amount cannot be greater than the sum of the document at a discount!'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
			Возврат;
		КонецЕсли;
		Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуОплатыЕслиНужноЗавершение(ДополнительныеПараметры) Экспорт
	
	Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуСкидкиЕслиНужно(СПредупреждением = Ложь)
	
	Если Объект.СуммаСкидки > Объект.Товары.Итог("Сумма")Тогда
		Если СПредупреждением Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("СкорректироватьСуммуСкидкиЕслиНужноЗавершение", ЭтаФорма), НСтр("ru='Сумма скидки не может быть больше суммы документа!';en='Discount amount cannot be greater than the sum of the document!'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
			Возврат;
		КонецЕсли;
		Объект.СуммаСкидки = Объект.Товары.Итог("Сумма");
	КонецЕсли;
	
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуСкидкиЕслиНужноЗавершение(ДополнительныеПараметры) Экспорт
	
	Объект.СуммаСкидки = Объект.Товары.Итог("Сумма");
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентСкидки()
	
	ТоварыИтог = Объект.Товары.Итог("Сумма");
	Если ТоварыИтог <> 0 Тогда
		Скидка = Окр(Объект.СуммаСкидки / ТоварыИтог * 100, 0);
		ПроцентСкидки = Строка(Скидка) + "%";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеТоварПриИзменении(СтруктураДанных)
	
	ТоварСсылка = СтруктураДанных.Товар;
	
	Если ЗначениеЗаполнено(ТоварСсылка) Тогда
		ТоварОбъект = ТоварСсылка.ПолучитьОбъект();
		ТоварЦена = ?(СтруктураДанных.ПриходТовара, ТоварОбъект.ПолучитьЦенуПоставщиков(), ТоварОбъект.ПолучитьЦенуПродажи());
	Иначе
		ТоварОбъект = Неопределено;
		ТоварЦена = 0;
	КонецЕсли;
	
	СтруктураДанных.Вставить("Цена", ТоварЦена);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтроке(ТекущаяСтрока)
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЦенуВСтроке(ТекущаяСтрока)
	
	Если ТекущаяСтрока.Количество <> 0 Тогда
		ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество;
	Иначе
		ТекущаяСтрока.Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики

	Если ЗначениеЗаполнено(Объект.Основание) Тогда
		ТолькоПросмотр = Истина;
		Элементы.Товары.Доступность = Ложь;
		Элементы.ГруппаПроцентСкидка.Доступность = Ложь;
		Элементы.ГруппаОтображенияЗаказа.Видимость = Истина;
		Элементы.ГруппаОплата.Видимость = Ложь;
	Иначе
		Элементы.Товары.Доступность = Истина;
		Элементы.ГруппаПроцентСкидка.Доступность = Истина;
		Элементы.ГруппаОтображенияЗаказа.Видимость = Ложь;
		Элементы.ГруппаОплата.Видимость = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Продажа';en='Invoice'"));
	ИспользоватьБыстрыйПодборТоваров = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьБыстрыйПодборТоваровМП");
	
	УстановитьОтображениеНомера();
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Элементы.СуммаДокумента.РастягиватьПоГоризонтали = Ложь;
		Элементы.РедактированиеПросмотр.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.СтраницаПросмотр.Видимость = Ложь;
	#КонецЕсли
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаНалогаПоУмолчанию = Константы.НастройкаНалогаПоУмолчаниюМП.Получить();
		Если ЗначениеЗаполнено(НастройкаНалогаПоУмолчанию) Тогда
			Объект.НастройкаНалога = НастройкаНалогаПоУмолчанию;
		Иначе
			Объект.НастройкаНалога = Перечисления.НастройкиНалогаМП.Нет;
		КонецЕсли;
	КонецЕсли;
	УстановитьЗаголовокНастройкаНалога();
	
	ИмяПечатнойФормы = "Инвойс";
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Продажа';en='Invoice'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменилосьКоличествоТовара");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ВстроенныеПокупкиКлиент.ЕстьПодписка() Then
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	
	УстановитьПроцентСкидки();
	УстановитьДоступностьКнопкиОткрытияКонтрагента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СозданНовыйКонтрагент" Тогда
		Объект.Покупатель = Параметр;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменилисьНастройки" Тогда
		ИспользоватьБыстрыйПодборТоваров = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьБыстрыйПодборТоваровМП");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Если ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмойНаМобильном") Тогда
			Возврат;
		КонецЕсли;
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульСинхронизацияПушУведомленияМПУНФ = Вычислить("СинхронизацияПушУведомленияМПУНФ");
		// АПК:488-вкл
		Если ТипЗнч(МодульСинхронизацияПушУведомленияМПУНФ) = Тип("ОбщийМодуль") Тогда
			МодульСинхронизацияПушУведомленияМПУНФ.ОтправитьПушУведомление("001");
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПокупательАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульМенеджерКонтактовКлиент = Вычислить("МенеджерКонтактовКлиент");
		// АПК:488-вкл
		Если ТипЗнч(МодульМенеджерКонтактовКлиент) = Тип("ОбщийМодуль") Тогда
			МодульМенеджерКонтактовКлиент.ЗаполнитьСписокВыбораИзКонтактнойКниги(
			Текст,
			ДанныеВыбора,
			СтандартнаяОбработка,
			КэшНайденныхКонтактов,
			Истина
			);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульМенеджерКонтактовКлиент = Вычислить("МенеджерКонтактовКлиент");
		// АПК:488-вкл
		Если ТипЗнч(МодульМенеджерКонтактовКлиент) = Тип("ОбщийМодуль") Тогда
			МодульМенеджерКонтактовКлиент.ОбработкаВыбора(
			Элемент,
			ВыбранноеЗначение,
			СтандартнаяОбработка,
			ЭтаФорма,
			КэшНайденныхКонтактов
			);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаОплатыПриИзменении(Элемент)
	
	СкорректироватьСуммуОплатыЕслиНужно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаСкидкиПриИзменении(Элемент)
	
	СкорректироватьСуммуСкидкиЕслиНужно(Истина);
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьЦенуВСтроке(ТекущаяСтрока);
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	СтруктураДанных = Новый Структура("Товар, ПриходТовара", ТекущаяСтрока.Товар, Ложь);
	ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
	
	Если СтруктураДанных.Цена <> 0 Тогда
		ТекущаяСтрока.Цена = СтруктураДанных.Цена;
	КонецЕсли;
	Если ТекущаяСтрока.Количество = 0 Тогда
		ТекущаяСтрока.Количество = 1;
	КонецЕсли;
	
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентСкидкиПриИзменении(Элемент)
	
	Скидка = Число(СокрЛП(СтрЗаменить(ПроцентСкидки, "%", "")));
	Если Скидка > 100 Тогда
		Скидка = 100;
		ПроцентСкидки = "100%";
	КонецЕсли;
	
	Объект.СуммаСкидки = Объект.Товары.Итог("Сумма") * Скидка / 100;
	
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупательПриИзменении(Элемент)
	
	УстановитьДоступностьКнопкиОткрытияКонтрагента();
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьНакладную(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ЗаписатьНакладнуюНаСервере();
	ПечатнаяФорма = СформироватьПечатнуюФорму();
	ПечатнаяФорма.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	
	Если ИмяПечатнойФормы = "Инвойс" Тогда
		Возврат Документы.РасходТовараМП.СформироватьПечатнуюФормуИнвойс(Объект.Ссылка);
	Иначе
		Возврат Документы.РасходТовараМП.СформироватьПечатнуюФормуТОРГ12(Объект.Ссылка);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/tovarnye-dokumenty/kartochka-dokumenta-prodazha/");
	// АПК:534-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНакладнуюВPDF(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ЗаписатьНакладнуюНаСервере();
	СтруктураВозврата = ЗаписатьВPDF(КаталогДокументов());
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект), СтруктураВозврата.ПолноеИмяФайла);

КонецПроцедуры

&НаСервере
Процедура ЗаписатьНакладнуюНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Записать();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьВPDF(КаталогДокументов)
	
	ПечатнаяФорма = СформироватьПечатнуюФорму();
	
	ИмяФайла = НСтр("ru='Накладная ';en='Invoice '")
		+ Объект.Номер + НСтр("ru=' от ';en=' of '")
		+ ОбщегоНазначенияМПКлиентСервер.ПолучитьФорматированнуюСтрокуДатыДляФайла(Объект.Дата) + ".pdf";
	ПолноеИмяФайла = ОбщегоНазначенияМПКлиентСервер.ПолучитьПолноеИмяФайла(КаталогДокументов, ИмяФайла);
	ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);
	
	Возврат Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла, ПолноеИмяФайла);

КонецФункции

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ИспользоватьБыстрыйПодборТоваров Тогда
		Отказ = Истина;
		ОткрытьФорму("Справочник.ТоварыМП.ФормаВыбора", Новый Структура("РежимВыбора, ТекущаяСтрока", Истина, ВыбранныйТовар), ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ДобавитьТоварВТаблицу(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТоварВТаблицу(Товар)
	
	Если НЕ ЗначениеЗаполнено(Товар) Тогда
		Возврат;
	КонецЕсли;
	ВыбранныйТовар = Товар;
	НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Товар", Товар));
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество + 1;
		РассчитатьСуммуВСтроке(НайденныеСтроки[0]);
	Иначе
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Товар = Товар;
		СтруктураДанных = Новый Структура("Товар, ПриходТовара", Товар, Ложь);
		ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
		Если СтруктураДанных.Цена <> 0 Тогда
			НоваяСтрока.Цена = СтруктураДанных.Цена;
		КонецЕсли;
		Если НоваяСтрока.Количество = 0 Тогда
			НоваяСтрока.Количество = 1;
		КонецЕсли;
		РассчитатьСуммуВСтроке(НоваяСтрока);
	КонецЕсли;
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеНомера()
	
	Если Константы.СинхронизацияВключенаМП.Получить() И Объект.НомерПодтвержден = Ложь Тогда
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Истина;
		ЭтаФорма.Элементы.Номер.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Ложь;
		ЭтаФорма.Элементы.Номер.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Возврат; // Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеПросмотрПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.РедактированиеПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотр Тогда
		Попытка
			ЗаписатьНакладнуюНаСервере();
			Просмотр = СформироватьПечатнуюФорму();
		Исключение
			Элементы.РедактированиеПросмотр.ТекущаяСтраница = Элементы.СтраницаРедактирование;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("Объект, РедактируемыеРеквизиты", Объект, "НастройкаНалога,СуммаНалога,СтавкаНалога,НазваниеНалога,НалогВСумме");
	
	УведомлениеОЗакрытии = Новый ОписаниеОповещения("ПриЗакрытииФормыРедактированияНалога", ЭтотОбъект);
	
	ОткрытьФорму("Документ.РасходТовараМП.Форма.ФормаРедактированияНалога", СтруктураПараметров, ЭтотОбъект,,,,УведомлениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыРедактированияНалога(Результат, ДопПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Объект, Результат.Объект, Результат.РедактируемыеРеквизиты);
		Если Результат.Модифицированность Тогда
			Модифицированность = Истина;
		КонецЕсли;
		РассчитатьСуммуНалога();
		РассчитатьСуммуДокумента();
		УстановитьЗаголовокНастройкаНалога();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокНастройкаНалога()
	
	Если ЗначениеЗаполнено(Объект.НазваниеНалога)
		И Объект.НастройкаНалога <> Перечисления.НастройкиНалогаМП.Нет Тогда
		Элементы.Налог.Заголовок = Объект.НазваниеНалога;
	Иначе
		Элементы.Налог.Заголовок = НСтр("en = 'Tax'; ru = 'Налоги'");
	КонецЕсли;
	
	Если Объект.НастройкаНалога = Перечисления.НастройкиНалогаМП.НаВесьДокумент Тогда
		Элементы.Налог.Заголовок = Элементы.Налог.Заголовок + " (" + Объект.СтавкаНалога + "%)";	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуНалога();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатнаяФормаПриИзменении(Элемент)
	
	Просмотр = СформироватьПечатнуюФорму();
	
КонецПроцедуры


#КонецОбласти
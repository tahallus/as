#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(СтруктурнаяЕдиница)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияЗапасов.Ссылка КАК Ссылка,
	|	ИнвентаризацияЗапасов.Дата КАК Период,
	|	ИнвентаризацияЗапасов.Организация КАК Организация,
	|	ИнвентаризацияЗапасов.СтруктурнаяЕдиница КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ИнвентаризацияЗапасов КАК ИнвентаризацияЗапасов
	|ГДЕ
	|	ИнвентаризацияЗапасов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Ссылка КАК Основание,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Результат = Запрос.Выполнить();
	
	Реквизиты = ПрослеживаемостьВызовСервераПереопределяемый.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ ПрослеживаемостьПереопределяемый.УчетнаяПолитикаСуществует(
		Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаТаблицыДокумента(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ОписатьПравилаЗаполненияПодписей() Экспорт
	
	РеквизитыОбъекта = Новый Соответствие;
	
	РеквизитыОбъекта.Вставить("ПодписьПроверяющего","Организация.ПодписьГлавногоБухгалтера");
	РеквизитыОбъекта.Вставить("ПодписьМОЛ1",		"СтруктурнаяЕдиница.ПодписьМОЛ");
	РеквизитыОбъекта.Вставить("Комиссия", 			"ЭтоКомиссия");
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

Функция ТекстЗапросаУниверсальный()
	
	Возврат
	"
	// :::Шапка
	|ВЫБРАТЬ
	|	ИнвентаризацияЗапасов.Ссылка КАК Ссылка
	|	,ИнвентаризацияЗапасов.Номер КАК Номер
	|	,ИнвентаризацияЗапасов.Дата КАК ДатаДокумента
	|	,ИнвентаризацияЗапасов.Дата КАК ДатаНачалаИнвентаризации
	|	,ИнвентаризацияЗапасов.ДатаОкончания КАК ДатаОкончания
	|	,ИнвентаризацияЗапасов.Организация
	|	,ИнвентаризацияЗапасов.СтруктурнаяЕдиница.Представление КАК ПредставлениеПодразделения
	|	,ИнвентаризацияЗапасов.Организация.Префикс КАК Префикс
	|	,ИнвентаризацияЗапасов.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|	,ИнвентаризацияЗапасов.ДокументОснованиеДата КАК ДокументОснованиеДата
	|	,ИнвентаризацияЗапасов.ВидЦенностей КАК ВидЦенностей
	|	,ИнвентаризацияЗапасов.ФормаСобственностиЦенностей КАК ФормаСобственностиЦенностей
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ1 КАК ПодписьМОЛ1
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ1.РасшифровкаПодписи КАК РасшифровкаПодписиМОЛ1
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ1.Должность КАК ДолжностьМОЛ1
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ2 КАК ПодписьМОЛ2
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ2.РасшифровкаПодписи КАК РасшифровкаПодписиМОЛ2
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ2.Должность КАК ДолжностьМОЛ2
	|	,ИнвентаризацияЗапасов.ПодписьПроверяющего КАК ПодписьПроверяющего
	|	,ИнвентаризацияЗапасов.ПодписьПроверяющего.РасшифровкаПодписи КАК РасшифровкаПодписиПроверяющего
	|	,ИнвентаризацияЗапасов.ПодписьПроверяющего.Должность КАК ДолжностьПроверяющего
	|ИЗ Документ.ИнвентаризацияЗапасов КАК ИнвентаризацияЗапасов
	|ГДЕ ИнвентаризацияЗапасов.Ссылка = &ТекущийДокумент
	|
	// :::Табличная часть
	|;Выбрать
	|	НомерСтроки КАК Номер
	|	,КлючСвязи
	|	,Номенклатура
	|	,Выбор КОГДА (ВЫРАЗИТЬ(Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """" 
	|		ТОГДА Запасы.Номенклатура.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КОНЕЦ КАК ПредставлениеНоменклатуры
	|	,Характеристика
	|	,Номенклатура.Артикул КАК Артикул
	|	,Номенклатура.Штрихкод КАК Штрихкод
	|	,Номенклатура.Код КАК ТоварКод
	|	,Номенклатура.Код КАК Код
	|	,ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование
	|	,ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
	|	,Номенклатура.СчетУчетаЗапасов.Код КАК СубСчет
	|	,Количество КАК ФактКоличество
	|	,КоличествоУчет КАК БухКоличество
	|	,Отклонение КАК Отклонение
	|	,ВЫРАЗИТЬ(ВЫБОР КОГДА &ВалютаНациональная = &ВалютаУчета ТОГДА Запасы.Цена
	|			ИНАЧЕ Запасы.Цена * КурсВалютыУправленческогоУчета.Курс / КурсВалютыУправленческогоУчета.Кратность КОНЕЦ
	|		КАК Число(15, 2)) КАК Цена
	|	,ВЫРАЗИТЬ(ВЫБОР КОГДА &ВалютаНациональная = &ВалютаУчета ТОГДА Запасы.Сумма
	|			ИНАЧЕ Запасы.Сумма * КурсВалютыУправленческогоУчета.Курс / КурсВалютыУправленческогоУчета.Кратность КОНЕЦ
	|		КАК ЧИСЛО(15, 2)) КАК ФактСумма
	|	,ВЫРАЗИТЬ(ВЫБОР КОГДА &ВалютаНациональная = &ВалютаУчета ТОГДА Запасы.СуммаУчет
	|			ИНАЧЕ Запасы.СуммаУчет * КурсВалютыУправленческогоУчета.Курс / КурсВалютыУправленческогоУчета.Кратность КОНЕЦ
	|		КАК ЧИСЛО(15, 2)) КАК БухСумма
	|	,Цена КАК ЦенаБезПересчета
	|	,Сумма КАК СуммаБезПересчета
	|	,СуммаУчет КАК СуммаПоУчету
	|ИЗ Документ.ИнвентаризацияЗапасов.Запасы КАК Запасы
	|	,РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &ВалютаУчета) КАК КурсВалютыУправленческогоУчета
	|ГДЕ Запасы.Ссылка = &ТекущийДокумент
	|УПОРЯДОЧИТЬ ПО Запасы.НомерСтроки
	|
	// ::: Подписи комиссии
	|;Выбрать
	|	ПодписиКомиссии.ЭтоПодписьПредседателяКомиссии КАК ЭтоПодписьПредседателяКомиссии
	|	,ПодписиКомиссии.ПодписьЧленаКомиссии.Должность КАК Должность
	|	,ПодписиКомиссии.ПодписьЧленаКомиссии.РасшифровкаПодписи КАК РасшифровкаПодписи
	|ИЗ Справочник.Комиссии.ПодписиКомиссии КАК ПодписиКомиссии
	|ГДЕ ПодписиКомиссии.Ссылка = &Комиссия
	|УПОРЯДОЧИТЬ ПО ПодписиКомиссии.ЭтоПодписьПредседателяКомиссии УБЫВ // Председатель обязательно первый!
	|
	// ::: Серии номенклатуры
	|;Выбрать
	|	СерииНоменклатуры.Серия КАК Серия
	|	,СерииНоменклатуры.КлючСвязи КАК КлючСвязи
	|ИЗ Документ.ИнвентаризацияЗапасов.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ СерииНоменклатуры.Ссылка = &ТекущийДокумент
	|";
	
КонецФункции

Функция ДанныеБланкаТоварногоНаполнения(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияЗапасов.Ссылка КАК Ссылка,
	|	ИнвентаризацияЗапасов.Дата КАК ДатаДокумента,
	|	""Инвентаризация запасов"" КАК ПредставлениеРегистратора,
	|	""Запасы"" КАК ТипНоменклатурыТаблицы,
	|	ИнвентаризацияЗапасов.СтруктурнаяЕдиница КАК ПредставлениеСклада,
	|	ИнвентаризацияЗапасов.Ячейка КАК ПредставлениеЯчейки,
	|	ИнвентаризацияЗапасов.Номер,
	|	ИнвентаризацияЗапасов.Организация.Префикс КАК Префикс,
	|	ИнвентаризацияЗапасов.Запасы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура.Склад КАК Склад,
	|		Номенклатура.Ячейка КАК Ячейка,
	|		НЕОПРЕДЕЛЕНО КАК Содержание,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ИнвентаризацияЗапасов.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
	|				ТОГДА ИнвентаризацияЗапасов.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ИнвентаризацияЗапасов.Запасы.Номенклатура.НаименованиеПолное
	|		КОНЕЦ КАК ПредставлениеНоменклатуры,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.Штрихкод КАК Штрихкод,
	|		Номенклатура.Код КАК Код,
	|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		Количество КАК Количество,
	|		Характеристика,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		КлючСвязи
	|	) КАК ТаблицаЗапасы,
	|	ИнвентаризацияЗапасов.СерииНоменклатуры.(
	|		Серия,
	|		КлючСвязи
	|	) КАК ТаблицаСерииНоменклатуры
	|ИЗ
	|	Документ.ИнвентаризацияЗапасов КАК ИнвентаризацияЗапасов
	|ГДЕ
	|	ИнвентаризацияЗапасов.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура СформироватьИНВ3(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, ЗаполнятьФактическиеДанные)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ВалютаУчета			= Константы.ВалютаУчета.Получить();
	ВалютаНациональная	= Константы.НациональнаяВалюта.Получить();
	ДанныеПечати		= Новый Структура;
	
	Запрос				= Новый Запрос(ТекстЗапросаУниверсальный());
	Запрос.УстановитьПараметр("ВалютаУчета", 		ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", ВалютаНациональная);
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		Запрос.УстановитьПараметр("ТекущийДокумент",	ТекущийДокумент);
		Запрос.УстановитьПараметр("Комиссия", 			ТекущийДокумент.Комиссия);
		Запрос.УстановитьПараметр("Дата", 				ТекущийДокумент.Дата);
		
		РезультатЗапроса	= Запрос.ВыполнитьПакет();
		Шапка				= РезультатЗапроса[0].Выбрать();
		ВыборкаСтрокТовары	= РезультатЗапроса[1].Выбрать();
		ВыборкаКомиссия		= РезультатЗапроса[2].Выбрать();
		
		// :::Шапка (1-я страница формы)
		Шапка.Следующий();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации",	ПредставлениеОрганизации);
		ДанныеПечати.Вставить("НомерДокумента",				ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс));
		ДанныеПечати.Вставить("ОрганизацияПоОКПО",			СведенияОбОрганизации.КодПоОКПО);
		ДанныеПечати.Вставить("ДатаДокумента",				Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ДатаОкончанияИнвентаризации",?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДатаОкончанияЛокально", 		?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДолжностьМОЛ1",				Шапка.ДолжностьМОЛ1);
		ДанныеПечати.Вставить("ФИОМОЛ1",					Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("ДолжностьМОЛ2",				Шапка.ДолжностьМОЛ2);
		ДанныеПечати.Вставить("ФИОМОЛ2",					Шапка.РасшифровкаПодписиМОЛ2);
		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// :::Заголовок таблицы (2-я страница формы)
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		
		ИтогФактКоличество = 0;
		ИтогФактСумма      = 0;
		ИтогФактСуммаВсего = 0;
		ИтогБухКоличество  = 0;
		ИтогБухСумма       = 0;
		
		КоличествоСтрокПоСтранице = 0;
		КоличествоПоСтранице      = 0;
		СуммаЛиста           = 0;
		ИтогоКоличество           = 0;
		
		НомерСтраницы = 2;
		Ном = 0;
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("НомерСтраницы", НСтр("ru ='Страница '") + НомерСтраницы);
		
		ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		// :::Строки
		ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
		
		СтрокаСПодвалом = Новый Массив;
		ПараметрыНоменклатуры = Новый Структура;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ДанныеПечати.Очистить();
			
			Ном = Ном + 1;
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ДанныеПечати.Вставить("Номер", Ном);
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокТовары.ПредставлениеНоменклатуры);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокТовары.Характеристика);
			ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокТовары.Код);
			ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
			ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры));
			
			Если НЕ ЗаполнятьФактическиеДанные Тогда
				
				ДанныеПечати.Вставить("ФактКоличество", Неопределено);
				ДанныеПечати.Вставить("ФактСумма", Неопределено);
				
			КонецЕсли;
			
			СтрокаСПодвалом.Очистить();
			СтрокаСПодвалом.Добавить(ОбластьСтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ОбластьПодвалСтраницы);
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				Если ЗаполнятьФактическиеДанные Тогда
					
					КоличествоПоСтранице = ПечатьДокументовУНФ.КоличествоПрописью(КоличествоПоСтранице);
					СуммаЛиста = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаЛиста, ВалютаНациональная);
					
					ДанныеПечати.Вставить("ИтогоФактКоличество", ИтогФактКоличество);
					ДанныеПечати.Вставить("ИтогоФактСумма", ИтогФактСумма);
					ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", КоличествоПоСтранице);
					ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", СуммаЛиста);
					
				КонецЕсли;
				
				ДанныеПечати.Вставить("ИтогоБухКоличество", ИтогБухКоличество);
				ДанныеПечати.Вставить("ИтогоБухСумма", ИтогБухСумма);
				ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", ЧислоПрописью(КоличествоСтрокПоСтранице, ,",,,,,,,,0"));
				
				ОбластьПодвалСтраницы.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ДанныеПечати.Вставить("НомерСтраницы", НСтр("ru ='Страница '") + НомерСтраницы);
				ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
				ИтогФактКоличество = 0;
				ИтогФактСумма      = 0;
				ИтогБухКоличество  = 0;
				ИтогБухСумма       = 0;
				
				КоличествоСтрокПоСтранице = 0;
				КоличествоПоСтранице      = 0;
				СуммаЛиста           = 0;
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
			Если ЗаполнятьФактическиеДанные Тогда
				
				ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.ФактКоличество;
				ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.ФактСумма;
				ИтогФактСуммаВсего = ИтогФактСуммаВсего + ВыборкаСтрокТовары.ФактСумма;
				
			КонецЕсли;
			
			ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.БухКоличество;
			ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.БухСумма;
			ИтогоКоличество         = ИтогоКоличество         + ВыборкаСтрокТовары.ФактКоличество;
			
			КоличествоСтрокПоСтранице = КоличествоСтрокПоСтранице + 1;
			КоличествоПоСтранице      = КоличествоПоСтранице      + ВыборкаСтрокТовары.ФактКоличество;
			СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.ФактСумма;
			
		КонецЦикла;
		
		// :::Итоги (последней страницы)
		ДанныеПечати.Очистить();
		
		Если ЗаполнятьФактическиеДанные Тогда
			
			ДанныеПечати.Вставить("ИтогоФактКоличество", ИтогФактКоличество);
			ДанныеПечати.Вставить("ИтогоФактСумма", ИтогФактСумма);
			ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", ПечатьДокументовУНФ.КоличествоПрописью(КоличествоПоСтранице));
			ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаЛиста, ВалютаНациональная));
			
		КонецЕсли;
		
		ДанныеПечати.Вставить("ИтогоБухКоличество", ИтогБухКоличество);
		ДанныеПечати.Вставить("ИтогоБухСумма", ИтогБухСумма);
		ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", ЧислоПрописью(КоличествоСтрокПоСтранице, ,",,,,,,,,0"));
		
		ОбластьПодвалСтраницы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
		
		// :::Подвал
		ОбластьМакетаИтогиОписи = Макет.ПолучитьОбласть("ИтогиОписи");
		
		Если ЗаполнятьФактическиеДанные Тогда
			
			ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", ПечатьДокументовУНФ.КоличествоПрописью(ИтогоКоличество));
			ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогФактСуммаВсего, ВалютаНациональная));
			
		КонецЕсли;
		
		ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0"));
		
		ОбластьМакетаИтогиОписи.Параметры.Заполнить(Шапка);
		ОбластьМакетаИтогиОписи.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогиОписи);
		
		// :::Комиссия
		ОбластьМакетаКомиссия = Макет.ПолучитьОбласть("Комиссия");
		
		ДанныеПечати.Очистить();
		
		ЭтоПервыйЧленКомиссии = Истина;
		Пока ВыборкаКомиссия.Следующий() Цикл
			
			ЗаголовокПодписи = "";
			Если ВыборкаКомиссия.ЭтоПодписьПредседателяКомиссии Тогда
				
				ЗаголовокПодписи = НСтр("ru ='Председатель комиссии:'");
				
			ИначеЕсли ЭтоПервыйЧленКомиссии Тогда
				
				ЗаголовокПодписи = НСтр("ru ='Члены комиссии:'");
				ЭтоПервыйЧленКомиссии = Ложь;
				
			Иначе
			КонецЕсли;
			
			ДанныеПечати.Вставить("ЗаголовокПодписи", ЗаголовокПодписи);
			ДанныеПечати.Вставить("Должность", ВыборкаКомиссия.Должность);
			ДанныеПечати.Вставить("РасшифровкаПодписи", ВыборкаКомиссия.РасшифровкаПодписи);
			
			ОбластьМакетаКомиссия.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакетаКомиссия);
			
		КонецЦикла;
		
		// :::Ответственные по описи
		ОбластьМакетаОтветственные = Макет.ПолучитьОбласть("ОтветственныеЛица");
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("НачальныйНомерПоПорядку", 1);
		ДанныеПечати.Вставить("НомерКонца",						ВыборкаСтрокТовары.Количество());
		ДанныеПечати.Вставить("ДолжностьМОЛ1",					Шапка.ДолжностьМОЛ1);
		ДанныеПечати.Вставить("ФИОМОЛ1",						Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("ДолжностьМОЛ2",					Шапка.ДолжностьМОЛ2);
		ДанныеПечати.Вставить("ФИОМОЛ2",						Шапка.РасшифровкаПодписиМОЛ2);
		ДанныеПечати.Вставить("ДатаДокумента",					Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ДолжностьПроверяющего",			Шапка.ДолжностьПроверяющего);
		ДанныеПечати.Вставить("РасшифровкаПодписиПроверяющего",	Шапка.РасшифровкаПодписиПроверяющего);
		
		ОбластьМакетаОтветственные.Параметры.Заполнить(Шапка);
		ОбластьМакетаОтветственные.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаОтветственные);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьИНВ19(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, ЗаполнятьФактическимиЦенами)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ВалютаУчета			= Константы.ВалютаУчета.Получить();
	ВалютаНациональная	= Константы.НациональнаяВалюта.Получить();
	ДанныеПечати		= Новый Структура;
	
	Запрос				= Новый Запрос(ТекстЗапросаУниверсальный());
	Запрос.УстановитьПараметр("ВалютаУчета", 		ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", ВалютаНациональная);
	
	// Получение областей макета.
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоТаблицы");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		ДанныеПечати.Очистить();
		
		Запрос.УстановитьПараметр("ТекущийДокумент",	ТекущийДокумент);
		Запрос.УстановитьПараметр("Дата",				ТекущийДокумент.Дата);
		Запрос.УстановитьПараметр("Комиссия", 			ТекущийДокумент.Комиссия);
		
		РезультатЗапроса	= Запрос.ВыполнитьПакет();
		Шапка				= РезультатЗапроса[0].Выбрать();
		ВыборкаСтрокТовары	= РезультатЗапроса[1].Выбрать();
		ВыборкаКомиссия		= РезультатЗапроса[2].Выбрать();
		
		Шапка.Следующий();
		
		// :::Шапка (1-я страница формы)
		СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации",	ПредставлениеОрганизации);
		ДанныеПечати.Вставить("НомерДокумента",				ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс));
		ДанныеПечати.Вставить("ОрганизацияПоОКПО",			СведенияОбОрганизации.КодПоОКПО);
		ДанныеПечати.Вставить("ДатаДокумента",				Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ДатаНачалаИнвентаризации",	Шапка.ДатаНачалаИнвентаризации);
		ДанныеПечати.Вставить("ДатаОкончанияИнвентаризации",?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДатаОкончанияЛокально", 		?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДолжностьМОЛ1",				Шапка.ДолжностьМОЛ1);
		ДанныеПечати.Вставить("ФИОМОЛ1",					Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("ДолжностьМОЛ2",				Шапка.ДолжностьМОЛ2);
		ДанныеПечати.Вставить("ФИОМОЛ2",					Шапка.РасшифровкаПодписиМОЛ2);
		
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// :::Заголовок таблицы (2-я страница формы)
		НомерСтраницы   = 2;
		НомерСтроки     = 1;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		ИтогоРезультатИзлишекКоличество   = 0;
		ИтогоРезультатИзлишекСумма        = 0;
		ИтогоРезультатНедостачаКоличество = 0;
		ИтогоРезультатНедостачаСумма      = 0;
		
		ИтогоСписаниеНедостачКолонка1Количество = 0;
		ИтогоСписаниеНедостачКолонка1Сумма      = 0;
		ИтогоПриходИзлишковКоличество           = 0;
		ИтогоПриходИзлишковСумма                = 0;
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("НомерСтраницы", НСтр("ru ='Страница '") + НомерСтраницы);
		
		ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
		
		// :::Строки
		СтрокаСПодвалом = Новый Массив;
		ПараметрыНоменклатуры = Новый Структура;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ДанныеПечати.Очистить();
			Разница		= 0;
			РазницаСумм = 0;
			
			ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокТовары.ПредставлениеНоменклатуры);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокТовары.Характеристика);
			ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокТовары.Код);
			ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
			ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры));
			
			Разница = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
			Если Разница = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если ЗаполнятьФактическимиЦенами Тогда
				
				Цена = ВыборкаСтрокТовары.Цена;
				
			ИначеЕсли ВыборкаСтрокТовары.БухКоличество = 0 Тогда
				
				Цена = 0;
				
			Иначе
				
				Цена = Окр(ВыборкаСтрокТовары.БухСумма / ВыборкаСтрокТовары.БухКоличество, 2);
				
			КонецЕсли;
			
			РазницаСумм = Цена * Разница;
			Если Разница < 0 Тогда
				
				ДанныеПечати.Вставить("РезультатНедостачаКоличество",		- Разница);
				ДанныеПечати.Вставить("РезультатНедостачаСумма",			- РазницаСумм);
				ДанныеПечати.Вставить("РезультатИзлишекКоличество",			0);
				ДанныеПечати.Вставить("РезультатИзлишекСумма",				0);
				
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Количество", - Разница);
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Сумма",		- РазницаСумм);
				ДанныеПечати.Вставить("ПриходИзлишковКоличество",			0);
				ДанныеПечати.Вставить("ПриходИзлишковСумма",				0);
				
				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + ( - Разница);
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + ( - РазницаСумм);
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + 0;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + 0;
				
				ИтогоСписаниеНедостачКолонка1Количество = ИтогоСписаниеНедостачКолонка1Количество	+ ( - Разница);
				ИтогоСписаниеНедостачКолонка1Сумма		= ИтогоСписаниеНедостачКолонка1Сумма		+ ( - РазницаСумм);
				ИтогоПриходИзлишковКоличество			= ИтогоПриходИзлишковКоличество				+ 0;
				ИтогоПриходИзлишковСумма				= ИтогоПриходИзлишковСумма					+ 0;
				
			Иначе
				
				ДанныеПечати.Вставить("РезультатНедостачаКоличество",		0);
				ДанныеПечати.Вставить("РезультатНедостачаСумма",			0);
				ДанныеПечати.Вставить("РезультатИзлишекКоличество",			Разница);
				ДанныеПечати.Вставить("РезультатИзлишекСумма",				РазницаСумм);
				
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Количество", 0);
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Сумма",		0);
				ДанныеПечати.Вставить("ПриходИзлишковКоличество",			Разница);
				ДанныеПечати.Вставить("ПриходИзлишковСумма",				РазницаСумм);
				
				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + 0;
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + 0;
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + Разница;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + РазницаСумм;
				
				ИтогоСписаниеНедостачКолонка1Количество	= ИтогоСписаниеНедостачКолонка1Количество	+ 0;
				ИтогоСписаниеНедостачКолонка1Сумма		= ИтогоСписаниеНедостачКолонка1Сумма		+ 0;
				ИтогоПриходИзлишковКоличество			= ИтогоПриходИзлишковКоличество				+ Разница;
				ИтогоПриходИзлишковСумма				= ИтогоПриходИзлишковСумма					+ РазницаСумм;
				
			КонецЕсли;
			
			// :::Проверка вывода
			СтрокаСПодвалом.Очистить();
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			Если НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				Если НЕ КоличествоСтрок = 1 Тогда
					
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Вывод заголовка таблицы.
					НомерСтраницы = НомерСтраницы + 1;
					ДанныеПечати.Вставить("НомерСтраницы", НСтр("ru ='Страница '") + НомерСтраницы);
					
					ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		// :::Итог (по странице)
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("ИтогоРезультатИзлишекКоличество",	ИтогоРезультатИзлишекКоличество);
		ДанныеПечати.Вставить("ИтогоРезультатИзлишекСумма",			ИтогоРезультатИзлишекСумма);
		ДанныеПечати.Вставить("ИтогоРезультатНедостачаКоличество",	ИтогоРезультатНедостачаКоличество);
		ДанныеПечати.Вставить("ИтогоРезультатНедостачаСумма",		ИтогоРезультатНедостачаСумма);
		
		ДанныеПечати.Вставить("ИтогоПриходИзлишковКоличество",		ИтогоПриходИзлишковКоличество);
		ДанныеПечати.Вставить("ИтогоПриходИзлишковСумма",			ИтогоПриходИзлишковСумма);
		ДанныеПечати.Вставить("ИтогоСписаниеНедостачКолонка1Количество", ИтогоСписаниеНедостачКолонка1Количество);
		ДанныеПечати.Вставить("ИтогоСписаниеНедостачКолонка1Сумма",	ИтогоСписаниеНедостачКолонка1Сумма);
		
		ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
		
		// :::Подвал
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьИнвентаризациюЗапасов(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ВалютаУчета			= Константы.ВалютаУчета.Получить();
	ВалютаНациональная	= Константы.НациональнаяВалюта.Получить();
	ДанныеПечати		= Новый Структура;
	
	Запрос				= Новый Запрос(ТекстЗапросаУниверсальный());
	Запрос.УстановитьПараметр("ВалютаУчета", 		ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", ВалютаНациональная);
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		ДанныеПечати.Очистить();
		
		Запрос.УстановитьПараметр("ТекущийДокумент",	ТекущийДокумент);
		Запрос.УстановитьПараметр("Дата",				ТекущийДокумент.Дата);
		Запрос.УстановитьПараметр("Комиссия", 			ТекущийДокумент.Комиссия);
		
		РезультатЗапроса		= Запрос.ВыполнитьПакет();
		Шапка					= РезультатЗапроса[0].Выбрать();
		ВыборкаСтрокТовары		= РезультатЗапроса[1].Выбрать();
		ВыборкаКомиссия			= РезультатЗапроса[2].Выбрать();
		ВыборкаСерииНоменклатуры	= РезультатЗапроса[3].Выбрать();
		
		Шапка.Следующий();
		
		// :::Шапка
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
		ШаблонЗаголовка = НСтр("ru ='Инвентаризация запасов № %1 от %2'");
		
		ДанныеПечати.Вставить("ТекстЗаголовка", СтрШаблон(ШаблонЗаголовка, НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD")));
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// :::Поставщик
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		
		СведенияОбОрганизации    = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		ДанныеПечати.Вставить("ПредставлениеПодразделения", Шапка.ПредставлениеПодразделения);
		ДанныеПечати.Вставить("ВалютаНаименование", Строка(ВалютаУчета));
		ДанныеПечати.Вставить("Валюта", ВалютаУчета);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// :::Шапка таблицы
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
		
		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;
		
		// :::Табличная часть
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		
		ПараметрыНоменклатуры = Новый Структура;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ДанныеПечати.Очистить();
			
			ДанныеПечати.Вставить("НомерСтроки", ВыборкаСтрокТовары.Номер);
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокТовары.ПредставлениеНоменклатуры);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокТовары.Характеристика);
			ПараметрыНоменклатуры.Вставить("ПредставлениеАртикула", ВыборкаСтрокТовары.Артикул);
			ПараметрыНоменклатуры.Вставить("ПредставлениеСерииНоменклатуры", СерииНоменклатурыУНФ.СтрокаСерииНоменклатурыИзВыборки(ВыборкаСерииНоменклатуры, ВыборкаСтрокТовары.КлючСвязи));
			ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
			
			ДанныеПечати.Вставить("Отклонение", ВыборкаСтрокТовары.Отклонение);
			ДанныеПечати.Вставить("Количество", ВыборкаСтрокТовары.ФактКоличество);
			ДанныеПечати.Вставить("КоличествоПоУчету", ВыборкаСтрокТовары.БухКоличество);
			ДанныеПечати.Вставить("ЕдиницаИзмеренияНаименование", ВыборкаСтрокТовары.ЕдиницаИзмеренияНаименование);
			ДанныеПечати.Вставить("Цена", ВыборкаСтрокТовары.ЦенаБезПересчета);
			ДанныеПечати.Вставить("Сумма", ВыборкаСтрокТовары.СуммаБезПересчета);
			ДанныеПечати.Вставить("СуммаПоУчету", ВыборкаСтрокТовары.СуммаПоУчету);
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.СуммаБезПересчета;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			
		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("Всего", ПечатьДокументовУНФ.ФорматСумм(ИтогСуммы));
		ДанныеПечати.Вставить("ВсегоПоУчету", ПечатьДокументовУНФ.ФорматСумм(ИтогСуммыПоУчету));
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("РасшифровкаПодписиМОЛ1", Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("РасшифровкаПодписиМОЛ2", Шапка.РасшифровкаПодписиМОЛ2);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ОписаниеПечатнойФормы = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "БланкТоварногоНаполнения");
	Если ОписаниеПечатнойФормы <> Неопределено Тогда
		
		ОписаниеПечатнойФормы.ТабличныйДокумент = Новый ТабличныйДокумент;
		ОписаниеПечатнойФормы.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьБланкТоварногоНаполнения.КлючПараметровПечати();
		ОписаниеПечатнойФормы.ПолныйПутьКМакету = Обработки.ПечатьБланкТоварногоНаполнения.ПолныйПутьКМакету();
		ОписаниеПечатнойФормы.СинонимМакета = Обработки.ПечатьБланкТоварногоНаполнения.ПредставлениеПФ();
		
		ДанныеОбъектовПечати = ДанныеБланкаТоварногоНаполнения(МассивОбъектов, ОбъектыПечати);
		Обработки.ПечатьБланкТоварногоНаполнения.СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ3");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ3";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ3";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-3 (Инвентаризационная опись товаров)'");
		
		СформироватьИНВ3(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Истина);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ3БезФактическихДанных");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ3";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ3";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-3 (Инвентаризационная опись с пустыми фактическими данными)'");
		
		СформироватьИНВ3(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Ложь);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ19");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ19";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ19";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-19 (Сличительная ведомость)'");
		
		СформироватьИНВ19(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Истина);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ19_УчетныеЦены");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ19";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ19";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-19 (Сличительная ведомость, суммы по данным учета)'");
		
		СформироватьИНВ19(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Ложь);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИнвентаризацияЗапасов");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИнвентаризацияЗапасов";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИнвентаризацияЗапасов";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='Инвентаризация запасов'");
		
		СформироватьИнвентаризациюЗапасов(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, 
		КоллекцияПечатныхФорм);
	
КонецПроцедуры // Печать()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризацияЗапасов,ИНВ3,ИНВ3БезФактическихДанных,ИНВ19,ИНВ19_УчетныеЦены";
	КомандаПечати.Представление = ПечатьДокументовУНФ.ПредставлениеКомплектаДокументов();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризацияЗапасов";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризация запасов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ3";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-3 (Инвентаризационная опись товаров)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ3БезФактическихДанных";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-3 (Инвентаризационная опись с пустыми фактическими данными)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ19";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-19 (Сличительная ведомость)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 14;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ19_УчетныеЦены";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-19 (Сличительная ведомость). Суммы по данным учета'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 15;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполнения";
	КомандаПечати.Представление = Обработки.ПечатьБланкТоварногоНаполнения.ПредставлениеПФ();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 17;
	
КонецПроцедуры

#КонецОбласти

// Процедура заполняет табличную часть "Запасы" по остаткам
// 
&НаСервере
Процедура ЗаполнитьПоОстаткамНаСкладе(Объект, СписокНоменклатуры, СписокГруппНоменклатуры, СписокКатегорийНоменклатуры) Экспорт
	
	Объект.Запасы.Очистить();
	Объект.СерииНоменклатуры.Очистить();  	
	
	ЕстьОтборПоНоменклатуре = СписокНоменклатуры.Количество() > 0;
	
	Если Не СписокГруппНоменклатуры = Неопределено Тогда
		ЕстьОтборПоГруппамНоменклатуры = СписокГруппНоменклатуры.Количество() > 0;
	Иначе	
		ЕстьОтборПоГруппамНоменклатуры = Ложь;
	КонецЕсли;
	
	Если Не СписокКатегорийНоменклатуры = Неопределено Тогда
		ЕстьОтборПоКатегориямНоменклатуры = СписокКатегорийНоменклатуры.Количество() > 0;
	Иначе	
		ЕстьОтборПоКатегориямНоменклатуры = Ложь;		
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ЗначениеЗаполнено(Объект.Ячейка) Тогда
		Запрос.Текст = CформироватьТекстЗапросаПоОстаткамВЯчейкеНаСкладе();
		Запрос.УстановитьПараметр("Ячейка", Объект.Ячейка);
	Иначе
		Запрос.Текст = CформироватьТекстЗапросаПоОстаткамНаСкладе();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.СтруктурнаяЕдиница);
	
	Если ЕстьОтборПоНоменклатуре Тогда
		Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Номенклатура В (&СписокНоменклатуры)", "");
	КонецЕсли;
	
	Если ЕстьОтборПоГруппамНоменклатуры Тогда
		Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)", "");
	КонецЕсли;
	
	Если ЕстьОтборПоКатегориямНоменклатуры Тогда
		Запрос.УстановитьПараметр("СписокКатегорийНоменклатуры", СписокКатегорийНоменклатуры);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Номенклатура.КатегорияНоменклатуры В (&СписокКатегорийНоменклатуры)", "");
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И НЕ СпрНоменклатура.ЭтоГруппа
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Порядок,
	|	СпрНоменклатура.Наименование КАК Наименование,
	|	ЗапасыОстаткиИнвентаризация.Номенклатура КАК Номенклатура,
	|	ЗапасыОстаткиИнвентаризация.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗапасыОстаткиИнвентаризация.Характеристика КАК Характеристика,
	|	ЗапасыОстаткиИнвентаризация.Партия КАК Партия,
	|	ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.КоличествоУчет, 0) КАК КоличествоУчет,
	|	ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.СуммаУчет, 0) КАК СуммаУчет,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.КоличествоУчет, 0) <= 0
	|				ИЛИ ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.Сумма, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.Сумма, 0) / ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.КоличествоУчет, 0)
	|	КОНЕЦ КАК ЦенаУчет,
	|	ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.Сумма, 0) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ЗапасыОстаткиИнвентаризация.ПризнакВЯчейке
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.Количество, 0) < 0
	|						ТОГДА -ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.Количество, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.КоличествоУчет, 0) < 0
	|					ТОГДА -ЕСТЬNULL(ЗапасыОстаткиИнвентаризация.КоличествоУчет, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК Отклонение,
	|	СпрНоменклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗапасыОстаткиИнвентаризация КАК ЗапасыОстаткиИнвентаризация
	|		ПО Ссылка = ЗапасыОстаткиИнвентаризация.Номенклатура
	|ГДЕ
	|	Ссылка В (&СписокНоменклатуры)
	|	И СпрНоменклатура.Недействителен = ЛОЖЬ
	|	И Ссылка В ИЕРАРХИИ(&СписокГруппНоменклатуры)
	|	И СпрНоменклатура.КатегорияНоменклатуры В(&СписокКатегорийНоменклатуры)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок УБЫВ,
	|	Ссылка ИЕРАРХИЯ,
	|	Наименование УБЫВ";
	
	Если ЕстьОтборПоНоменклатуре Тогда
		Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Ссылка В (&СписокНоменклатуры)", "ИСТИНА");
	КонецЕсли;
	
	Если ЕстьОтборПоГруппамНоменклатуры Тогда
		Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Ссылка В ИЕРАРХИИ(&СписокГруппНоменклатуры)", "");
	КонецЕсли;
	
	Если ЕстьОтборПоКатегориямНоменклатуры Тогда
		Запрос.УстановитьПараметр("СписокКатегорийНоменклатуры", СписокКатегорийНоменклатуры);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СпрНоменклатура.КатегорияНоменклатуры В(&СписокКатегорийНоменклатуры)", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Ячейка)
			И Выборка.Количество <> Выборка.КоличествоУчет
			И Выборка.Количество <> 0 Тогда
			
			НоваяСтрока = Объект.Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.КлючСвязи = НоваяСтрока.НомерСтроки;
			
			НоваяСтрока.КоличествоУчет = Выборка.Количество;
			
			Если Выборка.ЦенаУчет = 0 Тогда
				НоваяСтрока.Цена = 0;
				НоваяСтрока.Сумма = 0;
			Иначе
				НоваяСтрока.Цена = ?(Выборка.ЦенаУчет < 0, Выборка.ЦенаУчет * (-1), Выборка.ЦенаУчет);
				НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
			КонецЕсли;
			
			НоваяСтрока.СуммаУчет = НоваяСтрока.Сумма;
			
		ИначеЕсли Выборка.КоличествоУчет <> 0 Тогда
			
			НоваяСтрока = Объект.Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.КлючСвязи = НоваяСтрока.НомерСтроки;
			
			Если Выборка.ЦенаУчет = 0 Тогда
				НоваяСтрока.Сумма = 0;
			Иначе
				НоваяСтрока.Цена = ?(Выборка.ЦенаУчет < 0, Выборка.ЦенаУчет * (-1), Выборка.ЦенаУчет);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТипЗнч(Объект) <> Тип("ДокументОбъект.ИнвентаризацияЗапасов") Тогда
		НоменклатураВДокументахСервер.ЗаполнитьПризнакиИспользованияХарактеристик(Объект);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоОстаткамНаСкладе()

// Функция возвращает текст запроса по остаткам в ячейке на складе.
//
Функция CформироватьТекстЗапросаПоОстаткамВЯчейкеНаСкладе()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИСТИНА КАК ПризнакВЯчейке,
	|	ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗапасыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ЗапасыНаСкладахОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоУчет,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаУчет,
	|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК Сумма
	|ПОМЕСТИТЬ ЗапасыОстаткиИнвентаризация
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И Ячейка = &Ячейка
	|				И Номенклатура В (&СписокНоменклатуры)
	|				И Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)
	|				И Номенклатура.КатегорияНоменклатуры В (&СписокКатегорийНоменклатуры)) КАК ЗапасыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	|				&Период,
	|				Организация = &Организация
	|					И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И Номенклатура В (&СписокНоменклатуры)
	|					И Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)
	|					И Номенклатура.КатегорияНоменклатуры В (&СписокКатегорийНоменклатуры)) КАК ЗапасыОстатки
	|		ПО ЗапасыНаСкладахОстатки.Номенклатура = ЗапасыОстатки.Номенклатура
	|			И ЗапасыНаСкладахОстатки.Характеристика = ЗапасыОстатки.Характеристика
	|			И ЗапасыНаСкладахОстатки.Партия = ЗапасыОстатки.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладахОстатки.Партия,
	|	ЗапасыНаСкладахОстатки.Номенклатура,
	|	ЗапасыНаСкладахОстатки.Характеристика,
	|	ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения";
	
	Возврат ТекстЗапроса;
	
КонецФункции // CформироватьТекстЗапросаПоОстаткамВЯчейкеНаСкладе()

// Функция возвращает текст запроса по остаткам на складе.
//
Функция CформироватьТекстЗапросаПоОстаткамНаСкладе()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ПризнакВЯчейке,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоУчет,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаУчет,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК Сумма
	|ПОМЕСТИТЬ ЗапасыОстаткиИнвентаризация
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И Номенклатура В (&СписокНоменклатуры)
	|				И Номенклатура В ИЕРАРХИИ (&СписокГруппНоменклатуры)
	|				И Номенклатура.КатегорияНоменклатуры В (&СписокКатегорийНоменклатуры)) КАК ЗапасыОстатки
	|ГДЕ
	|	ЗапасыОстатки.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения";
	
	Возврат ТекстЗапроса;
	
КонецФункции // CформироватьТекстЗапросаПоОстаткамНаСкладе()

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Ссылка КАК Основание,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецФункции

Функция ТекстЗапросаТаблицаПрослеживаемыхТоваровПоОснованию() Экспорт
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ИнвентаризацияТоваровНаСкладеТовары.Количество) КАК Количество,
		|	СУММА(ИнвентаризацияТоваровНаСкладеТовары.Сумма) КАК Сумма,
		|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
		|	ИнвентаризацияТоваровНаСкладе.Дата КАК ПериодСобытия,
		|	ИнвентаризацияТоваровНаСкладе.СтруктурнаяЕдиница КАК Склад,
		|	СУММА(ИнвентаризацияТоваровНаСкладеТовары.КоличествоУчет) КАК КоличествоУчет,
		|	СУММА(ИнвентаризацияТоваровНаСкладеТовары.СуммаУчет) КАК СуммаУчет,
		|	ИнвентаризацияТоваровНаСкладеТовары.Характеристика КАК Характеристика,
		|	ИнвентаризацияТоваровНаСкладеТовары.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_ТаблицаТоваровВременная
		|ИЗ
		|	Документ.ИнвентаризацияЗапасов.Запасы КАК ИнвентаризацияТоваровНаСкладеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияЗапасов КАК ИнвентаризацияТоваровНаСкладе
		|		ПО ИнвентаризацияТоваровНаСкладеТовары.Ссылка = ИнвентаризацияТоваровНаСкладе.Ссылка
		|ГДЕ
		|	ИнвентаризацияТоваровНаСкладеТовары.Ссылка = &Основание
		|	И ИнвентаризацияТоваровНаСкладе.ПометкаУдаления = ЛОЖЬ
		|	И ИнвентаризацияТоваровНаСкладеТовары.Номенклатура.ПрослеживаемыйТовар
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура,
		|	ИнвентаризацияТоваровНаСкладе.Организация,
		|	ИнвентаризацияТоваровНаСкладе.Дата,
		|	ИнвентаризацияТоваровНаСкладе.СтруктурнаяЕдиница,
		|	ИнвентаризацияТоваровНаСкладеТовары.Характеристика,
		|	ИнвентаризацияТоваровНаСкладеТовары.Партия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодСобытия,
		|	Организация,
		|	Склад,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрацияПрослеживаемыхТоваров.Организация КАК Организация,
		|	РегистрацияПрослеживаемыхТоваров.Номенклатура КАК Номенклатура,
		|	РегистрацияПрослеживаемыхТоваров.Основание КАК Основание,
		|	РегистрацияПрослеживаемыхТоваров.ПериодСобытия КАК ПериодСобытия,
		|	РегистрацияПрослеживаемыхТоваров.Основание.СтруктурнаяЕдиница КАК Склад,
		|	РегистрацияПрослеживаемыхТоваров.Характеристика КАК Характеристика,
		|	РегистрацияПрослеживаемыхТоваров.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее
		|ИЗ
		|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаТоваровВременная КАК ВТ_ТаблицаТоваров
		|		ПО РегистрацияПрослеживаемыхТоваров.Организация = ВТ_ТаблицаТоваров.Организация
		|			И РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= ВТ_ТаблицаТоваров.ПериодСобытия
		|			И РегистрацияПрослеживаемыхТоваров.Номенклатура <= ВТ_ТаблицаТоваров.Номенклатура
		|			И РегистрацияПрослеживаемыхТоваров.Основание.СтруктурнаяЕдиница <= ВТ_ТаблицаТоваров.Склад
		|			И РегистрацияПрослеживаемыхТоваров.Характеристика = ВТ_ТаблицаТоваров.Характеристика
		|			И РегистрацияПрослеживаемыхТоваров.Партия = ВТ_ТаблицаТоваров.Партия
		|ГДЕ
		|	РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияТоваров)
		|	И РегистрацияПрослеживаемыхТоваров.Основание <> &Основание
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
		|	РегистрацияПрослеживаемыхТоваров.Организация,
		|	РегистрацияПрослеживаемыхТоваров.Основание,
		|	РегистрацияПрослеживаемыхТоваров.ПериодСобытия,
		|	РегистрацияПрослеживаемыхТоваров.Основание.СтруктурнаяЕдиница,
		|	РегистрацияПрослеживаемыхТоваров.Характеристика,
		|	РегистрацияПрослеживаемыхТоваров.Партия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодСобытия,
		|	Организация,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаТоваров.Количество КАК Количество,
		|	ВТ_ТаблицаТоваров.Сумма КАК Сумма,
		|	ВТ_ТаблицаТоваров.Организация КАК Организация,
		|	ВТ_ТаблицаТоваров.ПериодСобытия КАК ПериодСобытия,
		|	ВТ_ТаблицаТоваров.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияТоваров) КАК ВидОперации,
		|	ВТ_ТаблицаТоваров.КоличествоУчет КАК КоличествоУчет,
		|	НоменклатураСправочник.ТоварнаяНоменклатураВЭД КАК ТНВЭД,
		|	НЕ ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее.Номенклатура ЕСТЬ NULL КАК РанееРегистрировалсяВПрослеживаемости,
		|	ВТ_ТаблицаТоваров.СуммаУчет КАК СуммаУчет,
		|	НоменклатураСправочник.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВТ_ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ВТ_ТаблицаТоваров.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_ТаблицаТоваровРазмеченный
		|ИЗ
		|	ВТ_ТаблицаТоваровВременная КАК ВТ_ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее КАК ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее
		|		ПО ВТ_ТаблицаТоваров.Номенклатура = ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее.Номенклатура
		|			И ВТ_ТаблицаТоваров.Организация = ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее.Организация
		|			И ВТ_ТаблицаТоваров.Склад = ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее.Склад
		|			И ВТ_ТаблицаТоваров.Характеристика = ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее.Характеристика
		|			И ВТ_ТаблицаТоваров.Партия = ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее.Партия
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
		|		ПО ВТ_ТаблицаТоваров.Номенклатура = НоменклатураСправочник.Ссылка
		|ГДЕ
		|	НоменклатураСправочник.ПрослеживаемыйТовар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаТоваров.Количество КАК Количество,
		|	ВТ_ТаблицаТоваров.Сумма КАК Сумма,
		|	ВТ_ТаблицаТоваров.ТНВЭД КАК ТНВЭД,
		|	ВТ_ТаблицаТоваров.ВидОперации КАК ВидОперации,
		|	ВТ_ТаблицаТоваров.Организация КАК Организация,
		|	ВТ_ТаблицаТоваров.ПериодСобытия КАК ПериодСобытия,
		|	ВТ_ТаблицаТоваров.Склад КАК Склад,
		|	ВТ_ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВТ_ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ВТ_ТаблицаТоваров.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_ТаблицаТоваров
		|ИЗ
		|	ВТ_ТаблицаТоваровРазмеченный КАК ВТ_ТаблицаТоваров
		|ГДЕ
		|	НЕ ВТ_ТаблицаТоваров.РанееРегистрировалсяВПрослеживаемости
		|	И ВТ_ТаблицаТоваров.Количество > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Склад,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрослеживаемыеТоварыОбороты.Номенклатура КАК Номенклатура,
		|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоПриход - ПрослеживаемыеТоварыОбороты.КоличествоРасход) КАК ОстатокТовараСРНПТ,
		|	ПрослеживаемыеТоварыОбороты.Регистратор.Склад КАК РегистраторСклад,
		|	ПрослеживаемыеТоварыОбороты.Организация КАК Организация,
		|	ПрослеживаемыеТоварыОбороты.Характеристика КАК Характеристика,
		|	ПрослеживаемыеТоварыОбороты.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_ПрослеживаемыеТоварыСРНПТ
		|ИЗ
		|	РегистрНакопления.ПрослеживаемыеТовары.Обороты(&НачалоПериода, &КонецПериода, Запись, Организация = &Организация) КАК ПрослеживаемыеТоварыОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрослеживаемыеТоварыОбороты.Номенклатура,
		|	ПрослеживаемыеТоварыОбороты.Регистратор.Склад,
		|	ПрослеживаемыеТоварыОбороты.Организация,
		|	ПрослеживаемыеТоварыОбороты.Партия,
		|	ПрослеживаемыеТоварыОбороты.Характеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистраторСклад,
		|	Организация,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(УведомлениеОВвозеПрослеживаемыхТоваровТовары.Количество) КАК Количество,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация КАК Организация,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент.СтруктурнаяЕдиница КАК Склад,
		|	СУММА(УведомлениеОВвозеПрослеживаемыхТоваровТовары.Сумма) КАК Сумма,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Характеристика КАК Характеристика,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_УведомленияОВвозе
		|ИЗ
		|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
		|		ПО УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка
		|ГДЕ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
		|	И УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ = &ПустаяСсылкаРнпт
		|	И УведомлениеОВвозеПрослеживаемыхТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент.СтруктурнаяЕдиница,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Характеристика,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Партия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Склад,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.ТНВЭД КАК ТНВЭД,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Количество - ЕСТЬNULL(ВТ_ПрослеживаемыеТоварыСРНПТ.ОстатокТовараСРНПТ, 0) - ЕСТЬNULL(ВТ_УведомленияОВвозе.Количество, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВТ_ПрослеживаемыеТоварыСРНПТ.ОстатокТовараСРНПТ, 0) = 0
		|				ИЛИ ТаблицаТоваров.Количество = 0
		|			ТОГДА ТаблицаТоваров.Сумма - ЕСТЬNULL(ВТ_УведомленияОВвозе.Сумма, 0)
		|		ИНАЧЕ ТаблицаТоваров.Сумма - ТаблицаТоваров.Сумма / ТаблицаТоваров.Количество * ВТ_ПрослеживаемыеТоварыСРНПТ.ОстатокТовараСРНПТ - ЕСТЬNULL(ВТ_УведомленияОВвозе.Сумма, 0)
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаТоваров.Организация КАК Организация,
		|	ТаблицаТоваров.ВидОперации КАК ВидОперации,
		|	ТаблицаТоваров.ПериодСобытия КАК ПериодСобытия,
		|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_ТоварыПоОснованию
		|ИЗ
		|	ВТ_ТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПрослеживаемыеТоварыСРНПТ КАК ВТ_ПрослеживаемыеТоварыСРНПТ
		|		ПО ТаблицаТоваров.Организация = ВТ_ПрослеживаемыеТоварыСРНПТ.Организация
		|			И ТаблицаТоваров.Склад = ВТ_ПрослеживаемыеТоварыСРНПТ.РегистраторСклад
		|			И ТаблицаТоваров.Номенклатура = ВТ_ПрослеживаемыеТоварыСРНПТ.Номенклатура
		|			И ТаблицаТоваров.Характеристика = ВТ_ПрослеживаемыеТоварыСРНПТ.Характеристика
		|			И ТаблицаТоваров.Партия = ВТ_ПрослеживаемыеТоварыСРНПТ.Партия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УведомленияОВвозе КАК ВТ_УведомленияОВвозе
		|		ПО ТаблицаТоваров.Организация = ВТ_УведомленияОВвозе.Организация
		|			И ТаблицаТоваров.Склад = ВТ_УведомленияОВвозе.Склад
		|			И ТаблицаТоваров.Номенклатура = ВТ_УведомленияОВвозе.Номенклатура
		|			И ТаблицаТоваров.Характеристика = ВТ_УведомленияОВвозе.Характеристика
		|			И ТаблицаТоваров.Партия = ВТ_УведомленияОВвозе.Партия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ТаблицаТоваровВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ТоварыРегистрируемыеВПрослеживаемостиРанее";
		
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецЕсли

#Область Служебные

&НаКлиенте
Процедура ПроверитьЗаполнениеРеквизитовФормы(Отказ)
	
	НомерСтроки = 0;
	Для каждого СтрокаДокументыОснования Из ДокументыОснования Цикл
		
		НомерСтроки = НомерСтроки + 1;
		Если НЕ ЗначениеЗаполнено(СтрокаДокументыОснования.ДокументОснование) Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Не заполнена колонка ""Документ основание"" в строке '")
				+ Строка(НомерСтроки)
				+ НСтр("ru = ' списка ""Документы основания"".'");
			Сообщение.Поле = "ДокументОснование";
			Сообщение.Сообщить();
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДокументыОснованияВХранилище()
	
	ДокументыОснованияВХранилище = ДокументыОснования.Выгрузить(, "ДокументОснование");
	ДокументыОснованияВХранилище.Свернуть("ДокументОснование");
	
	ПоместитьВоВременноеХранилище(ДокументыОснованияВХранилище, КэшЗначений.АдресОснований);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыИспользуемыхДокументов()
	
	ТипыКомиссия = Новый Массив(2);
	ТипыКомиссия[0] = Тип("ДокументСсылка.ОтчетКомиссионера");
	ТипыКомиссия[1] = Тип("ДокументСсылка.ОтчетКомитенту");
	
	ТипыАвансов = Новый Массив(5);
	ТипыАвансов[0] = Тип("ДокументСсылка.ОперацияПоПлатежнымКартам");
	ТипыАвансов[1] = Тип("ДокументСсылка.ПоступлениеНаСчет");
	ТипыАвансов[2] = Тип("ДокументСсылка.ПоступлениеВКассу");
	ТипыАвансов[3] = Тип("ДокументСсылка.РасходСоСчета");
	ТипыАвансов[4] = Тип("ДокументСсылка.РасходИзКассы");
	
	Для каждого СтрокаТаблицы Из ДокументыОснования Цикл
		
		ТипДокументаОснования = ТипЗнч(СтрокаТаблицы.ДокументОснование);
		
		Если КэшЗначений.ВидОперации = Перечисления.ВидыОперацийСчетФактураПолученный.Поступление Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование)
				И ТипыКомиссия.Найти(ТипДокументаОснования) <> Неопределено Тогда
				
				КэшЗначений.КомиссияДоступна = Истина;
				
			Иначе
				
				КэшЗначений.ПоступленияДоступны = Истина;
				
			КонецЕсли;
			
			Возврат;
			
		ИначеЕсли ТипыАвансов.Найти(ТипДокументаОснования) <> Неопределено Тогда
			
			КэшЗначений.АвансыДоступны = Истина;
			Возврат;
			
		ИначеЕсли КэшЗначений.ВидОперации = Перечисления.ВидыОперацийСчетФактураПолученный.Корректировка Тогда
			
			КэшЗначений.КорректировкиДоступны = Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура АдаптироватьПараметрыФормы()
	
	КэшЗначений.ПоступленияДоступны		= ?(ТипЗнч(КэшЗначений.ПоступленияДоступны) <> Тип("Булево"), Ложь, КэшЗначений.ПоступленияДоступны);
	КэшЗначений.КомиссияДоступна		= ?(ТипЗнч(КэшЗначений.КомиссияДоступна) <> Тип("Булево"), Ложь, КэшЗначений.КомиссияДоступна);
	КэшЗначений.АвансыДоступны			= ?(ТипЗнч(КэшЗначений.АвансыДоступны) <> Тип("Булево"), Ложь, КэшЗначений.АвансыДоступны);
	КэшЗначений.КорректировкиДоступны	= ?(ТипЗнч(КэшЗначений.КорректировкиДоступны) <> Тип("Булево"), Ложь, КэшЗначений.КорректировкиДоступны);
	
	Если КэшЗначений.ПоступленияДоступны = Ложь
		И КэшЗначений.КомиссияДоступна = Ложь
		И КэшЗначений.АвансыДоступны = Ложь
		И КэшЗначений.КорректировкиДоступны = Ложь Тогда
		
		КэшЗначений.ПоступленияДоступны = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИменаПолей =
	"Ссылка,
	|ВидОперации, ЭтоВозврат, Исправление,
	|Организация, Контрагент, Договор, Валюта,
	|АдресОснований,
	|ПоступленияДоступны, КомиссияДоступна, АвансыДоступны, КорректировкиДоступны,
	|ТолькоПросмотрСпискаОснований";
	
	КэшЗначений = Новый Структура(ИменаПолей);
	ЗаполнитьЗначенияСвойств(КэшЗначений, Параметры);
	
	ДокументыОснования.Загрузить(ПолучитьИзВременногоХранилища(КэшЗначений.АдресОснований));
	
	ЗаполнитьВидыИспользуемыхДокументов();
	АдаптироватьПараметрыФормы();
	
	Если КэшЗначений.ТолькоПросмотрСпискаОснований = Истина Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДокументыОснования", "ТолькоПросмотр", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОК", "Доступность", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОК", "Доступность", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	ПроверитьЗаполнениеРеквизитовФормы(Отказ);
	
	Если НЕ Отказ Тогда
		
		ЗаписатьДокументыОснованияВХранилище();
		КэшЗначений.Вставить("ВыполненаКоманда", КодВозвратаДиалога.OK);
		
		Закрыть(КэшЗначений);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область РеквизитыФормы

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаПодбораДокументовОснований", КэшЗначений, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрока = Элементы.ДокументыОснования.ТекущиеДанные;
	ТекСтрока.ДокументОснование = ?(ТипЗнч(ВыбранноеЗначение) = Тип("Структура"), ВыбранноеЗначение.Документ, ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти
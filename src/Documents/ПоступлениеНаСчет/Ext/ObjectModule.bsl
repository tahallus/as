#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежа() Экспорт
	
	Компания = Константы.УчетПоКомпании.Компания(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Справочники.СтавкиНДС.СтавкаНДС(Организация.ВидСтавкиНДСПоУмолчанию);
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(РасчетыСПокупателямиОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РасчетыСПокупателямиОстатки.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	РасчетыСПокупателямиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПокупателямиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	РасчетыСПокупателямиОстатки.Договор.СтатьяДДСПоУмолчанию КАК СтатьяДДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|		РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|		РасчетыСПокупателямиОстатки.Документ КАК Документ,
	|		РасчетыСПокупателямиОстатки.Заказ КАК Заказ,
	|		РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.Остатки(
	|				,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					И (НЕ &НуженОтборПоВидуДоговора
	|						ИЛИ &НуженОтборПоВидуДоговора
	|							И Договор.ВидДоговора В (&СписокВидовДоговоров))
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПокупателями.Организация,
	|		ДвиженияДокументаРасчетыСПокупателями.Контрагент,
	|		ДвиженияДокументаРасчетыСПокупателями.Договор,
	|		ДвиженияДокументаРасчетыСПокупателями.Документ,
	|		ДвиженияДокументаРасчетыСПокупателями.Заказ,
	|		ДвиженияДокументаРасчетыСПокупателями.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПокупателями.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями КАК ДвиженияДокументаРасчетыСПокупателями
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПокупателями.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПокупателями.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПокупателями.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПокупателями.Контрагент = &Контрагент
	|		И ДвиженияДокументаРасчетыСПокупателями.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПокупателямиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	РасчетыСПокупателямиОстатки.СуммаВалОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПокупателямиОстатки.Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор,
	|	РасчетыСПокупателямиОстатки.Документ,
	|	РасчетыСПокупателямиОстатки.Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов,
	|	РасчетыСПокупателямиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	РасчетыСПокупателямиОстатки.Договор.СтатьяДДСПоУмолчанию,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	Запрос.УстановитьПараметр("НуженОтборПоВидуДоговора", (НуженОтборПоДоговорам И Контрагент.ВестиРасчетыПоДоговорам));
	
	ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(
		Контрагент,
		Организация,
		СписокВидовДоговоров
	);
	
	СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
		Дата,
		Новый Структура("Валюта", ДоговорПоУмолчанию.ВалютаРасчетов)
	);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	РасшифровкаПлатежа.Очистить();
	
	СуммаОсталосьРаспределить = СуммаДокумента;
	
	Пока СуммаОсталосьРаспределить > 0 Цикл
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
			
			Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
				
				НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
				НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				
			Иначе // сумма остатка больше чем нужно распределить
				
				НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
					ВыборкаРезультатаЗапроса.Курс,
					ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
					ВыборкаРезультатаЗапроса.Кратность
				);
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока.Договор = ДоговорПоУмолчанию;
			НоваяСтрока.Курс = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс
			);
			НоваяСтрока.Кратность = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
			);
			НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
				СуммаОсталосьРаспределить,
				КурсВалютыДС,
				НоваяСтрока.Курс,
				КратностьВалютыДС,
				НоваяСтрока.Кратность
			);
			НоваяСтрока.ПризнакАванса = Истина;
			НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
			НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
			НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
			НоваяСтрока.СтатьяДДС = ДвиженияДенежныхСредствВызовСервера.ПолучитьСтатьюДДСПоУмолчаниюДляСтрокиРасшифровки(НоваяСтрока.Договор,
				НоваяСтрока.ДокументПланирования,
				НоваяСтрока.СтатьяДДС);
			СуммаОсталосьРаспределить = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежаАвтоЗачетДолгов() Экспорт
	
	Компания = Константы.УчетПоКомпании.Компания(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Справочники.СтавкиНДС.СтавкаНДС(Организация.ВидСтавкиНДСПоУмолчанию);
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходСоСчетаДоговорыАвтоЗачетаДолгов.Договор,
	|	РасходСоСчетаДоговорыАвтоЗачетаДолгов.СуммаПлатежа КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная
	|ИЗ
	|	&ДоговорыАвтоЗачетаДолгов КАК РасходСоСчетаДоговорыАвтоЗачетаДолгов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор,
	|	СУММА(ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.СуммаПлатежа) КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаДоговорыАвтоЗачета
	|ИЗ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная КАК ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная
	|ГДЕ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор <> Неопределено
	|	И ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор <> Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0)) КАК СуммаОстаток,
	|	СУММА(ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0)) КАК СуммаВалОстаток,
	|	РасчетыСПокупателямиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПокупателямиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.СуммаПлатежа КАК СуммаПлатежаАвто,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.Договор КАК ДоговорАвто
	|ИЗ
	|	ВременнаяТаблицаДоговорыАвтоЗачета КАК ВременнаяТаблицаДоговорыАвтоЗачета
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		РасчетыСПокупателямиОстатки.Организация КАК Организация,
	|		РасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПокупателямиОстатки.Договор КАК Договор,
	|		РасчетыСПокупателямиОстатки.Документ КАК Документ,
	|		РасчетыСПокупателямиОстатки.Заказ КАК Заказ,
	|		РасчетыСПокупателямиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями.Остатки(
	|				,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					// ТекстДоговорОтбор
	|					// ТекстДоговорАвтозаполнениеОтбор
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПоставщиками.Организация,
	|		ДвиженияДокументаРасчетыСПоставщиками.Контрагент,
	|		ДвиженияДокументаРасчетыСПоставщиками.Договор,
	|		ДвиженияДокументаРасчетыСПоставщиками.Документ,
	|		ДвиженияДокументаРасчетыСПоставщиками.Заказ,
	|		ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПокупателями КАК ДвиженияДокументаРасчетыСПоставщиками
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПоставщиками.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПоставщиками.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПоставщиками.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПоставщиками.Контрагент = &Контрагент
	|		// ТекстДоговорДвиженийАвтозаполнениеОтбор
	|		И ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПокупателямиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПокупателямиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|	ПО ВременнаяТаблицаДоговорыАвтоЗачета.Договор = РасчетыСПокупателямиОстатки.Договор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПокупателямиОстатки.Организация,
	|	РасчетыСПокупателямиОстатки.Контрагент,
	|	РасчетыСПокупателямиОстатки.Договор,
	|	РасчетыСПокупателямиОстатки.Документ,
	|	РасчетыСПокупателямиОстатки.Заказ,
	|	РасчетыСПокупателямиОстатки.ТипРасчетов,
	|	РасчетыСПокупателямиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПокупателямиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПокупателямиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПокупателямиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.Договор,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.СуммаПлатежа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата
	|ИТОГИ
	|	СУММА(СуммаОстаток),
	|	СУММА(СуммаВалОстаток),
	|	СУММА(СуммаВалДокумента),
	|	МАКСИМУМ(СуммаПлатежаАвто)
	|ПО
	|	ДоговорАвто";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДоговорыАвтоЗачетаДолгов", ДоговорыАвтоЗачетаДолгов.Выгрузить());
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Если НуженОтборПоДоговорам
	   И Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорОтбор", "И Договор.ВидДоговора В (&СписокВидовДоговоров)");
		Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	КонецЕсли;
	
	Если Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорАвтозаполнениеОтбор", "И Договор В (&ТаблицаДоговоровАвтоЗачета)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорДвиженийАвтозаполнениеОтбор", "И ДвиженияДокументаРасчетыСПоставщиками.Договор В (&ТаблицаДоговоровАвтоЗачета)");
		Запрос.УстановитьПараметр("ТаблицаДоговоровАвтоЗачета", ДоговорыАвтоЗачетаДолгов.ВыгрузитьКолонку("Договор"));
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РасшифровкаПлатежа.Очистить();
	
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() Цикл
		
		ТекущийДоговор = ВыборкаИтоги.ДоговорАвто;
		
		СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
			Дата,
			Новый Структура("Валюта", ТекущийДоговор.ВалютаРасчетов)
		);
		
		ВыборкаРезультатаЗапроса = ВыборкаИтоги.Выбрать();
		
		СуммаОсталосьРаспределить = ВыборкаИтоги.СуммаПлатежаАвто;
		
		Пока СуммаОсталосьРаспределить > 0 Цикл
			
			Если ВыборкаРезультатаЗапроса.Следующий() Тогда
				
				Если ВыборкаРезультатаЗапроса.СуммаВалОстаток <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				
				Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
					
					НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
					НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
					НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
					НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
					СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
					
				Иначе // сумма остатка больше чем нужно распределить
					
					НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
						СуммаОсталосьРаспределить,
						ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
						ВыборкаРезультатаЗапроса.Курс,
						ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
						ВыборкаРезультатаЗапроса.Кратность
					);
					НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
					НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
					НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
					СуммаОсталосьРаспределить = 0;
					
				КонецЕсли;
				
			Иначе
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Договор = ТекущийДоговор;
				
				НоваяСтрока.Курс = ?(
					СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
					1,
					СтруктураКурсВалютыДоговораПоУмолчанию.Курс
				);
				НоваяСтрока.Кратность = ?(
					СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
					1,
					СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
				);
				НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					КурсВалютыДС,
					НоваяСтрока.Курс,
					КратностьВалютыДС,
					НоваяСтрока.Кратность
				);
				НоваяСтрока.ПризнакАванса = Истина;
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; // Пока ВыборкаИтоги.Следующий() Цикл
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

//Процедура заполняется банковский счет контрагента при вводе на основании
//
Процедура ЗаполнитьБанковскийСчетКонтрагента()
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// 1. Банковский счет контрагента есть в документе основании и заполнен
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СчетКонтрагента", ДокументОснование.Метаданные()) Тогда
			
			СчетКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "СчетКонтрагента");
			
		ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("БанковскийСчетКонтрагента", ДокументОснование.Метаданные()) Тогда
			
			СчетКонтрагента = ДокументОснование.БанковскийСчетКонтрагента;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// 2. Банковский счет контрагента заполняется на основании 
	//    валюты документа (берется из банк. счета организации),
	//    с учетом основного банковского счета контрагента.
	Если ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка КАК СчетКонтрагента,
		|	ВЫБОР
		|		КОГДА БанковскиеСчета.Владелец.БанковскийСчетПоУмолчанию = БанковскиеСчета.Ссылка
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоОсновнойБанкСчет
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|	И БанковскиеСчета.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоОсновнойБанкСчет УБЫВ");
		
		Запрос.УстановитьПараметр("Владелец", Контрагент);
		Запрос.УстановитьПараметр("ВалютаДенежныхСредств", ВалютаДенежныхСредств);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
		
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий(); 
			
			СчетКонтрагента = Выборка.СчетКонтрагента;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьБанковскийСчет()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//
Процедура ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате(ДанныеЗаполнения)
	
	Запрос = Новый Запрос();
	
	Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДанныеЗаполнения, Запрос.МенеджерВременныхТаблиц, Истина);
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	// Заполним данные табличных частей документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	БанковскиеСчетаВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнакАванса,
	|	&Ссылка КАК СчетНаОплату,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК Кратность,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК Всего,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента1,
	|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств1,
	|	КурсыВалютДокумента.Курс КАК Курс1,
	|	КурсыВалютРасчетов.Курс КАК Курс2,
	|	КурсыВалютБанковскогоСчета.Курс КАК Курс3,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ВложенныйЗапрос.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
	|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокументаСтавкиНДС.Ссылка КАК Ссылка,
	|			ТаблицаДокументаСтавкиНДС.СтавкаНДС КАК СтавкаНДС
	|		ИЗ
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				&Ссылка КАК Ссылка,
	|				ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
	|			ИЗ
	|				ВТЗаказПокупателяЗапасы КАК ТаблицаДокумента
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ТаблицаДокумента.Ссылка,
	|				ТаблицаДокумента.СтавкаНДС
	|			ИЗ
	|				Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
	|			ГДЕ
	|				ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|			КОНЕЦ КАК БанковскийСчет,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОНЕЦ КАК ВалютаДенежныхСредств,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка.Владелец
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|			КОНЕЦ КАК Владелец
	|		ИЗ
	|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК БанковскиеСчетаВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|			ПО БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|		ПО ШапкаДокумента.Организация = БанковскиеСчетаВложенныйЗапрос.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
	|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
	|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
	ЗаполнитьБанковскийСчетКонтрагента();
	ЗаполнитьАналитику(ДанныеЗаполнения);
	
КонецПроцедуры // ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате()

Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("Основание") Тогда
		Если ДанныеЗаполнения.Свойство("УчитыватьОстатки")
			И ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателяСУчетомОстатковКОплате(ДанныеЗаполнения.Основание);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.СчетНаОплату") Тогда
			ЗаполнитьПоСчетуНаОплату(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		КонецЕсли;
	ИначеЕсли ДанныеЗаполнения.Свойство("Документ") Тогда
		Если ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.СчетНаОплату") Тогда
			ЗаполнитьПоСчетуНаОплату(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПоступлениеДСПлан") Тогда
			ЗаполнитьПоПоступлениюДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПеремещениеДСПлан") Тогда
			ЗаполнитьПоПеремещениюДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам") Тогда
			ЗаполнитьПоНачисленияПоКредитамИЗаймам(ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПоступлениюДСПлан(ДокументОснование, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()))+
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.БанковскийСчет
		|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
		|			БанковскиеСчета.Владелец КАК Владелец,
		|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
		|		ИЗ
		|			Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
		|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
		|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе
		
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()))+
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.БанковскийСчет
		|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументОснование) = ТИП(ДОкумент.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.ДокументОснование
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументОснование.Заказ) = ТИП(ДОкумент.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.ДокументОснование.Заказ
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументОснование.ЗаказПокупателя) = ТИП(ДОкумент.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.ДокументОснование.ЗаказПокупателя
		|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументОснование.ДокументОснование) = ТИП(ДОкумент.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.ДокументОснование.ДокументОснование
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
		|			БанковскиеСчета.Владелец КАК Владелец,
		|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
		|		ИЗ
		|			Документ.ПоступлениеДСПлан КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
		|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
		|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ПризнакАванса = Истина;
		НоваяСтрока.ДокументПланирования = ДокументОснование;
		
		Если ЗначениеЗаполнено(ДокументОснование.ДокументОснование)
			И ТипЗнч(ДокументОснование.ДокументОснование) = Тип("ДокументСсылка.ЗаказПокупателя")
			И Контрагент.ВестиРасчетыПоЗаказам Тогда
			
			НоваяСтрока.Заказ = ДокументОснование.ДокументОснование;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьБанковскийСчетКонтрагента();
	ЗаполнитьАналитику();
	
КонецПроцедуры // ЗаполнитьПоПоступлениюДСПлан()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПеремещениюДСПлан(ДокументОснование, Сумма = Неопределено) Экспорт
	
	Если ДокументОснование.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести перемещение денег на основании неутвержденного планового документа!'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	// Заполним данные шапки документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|				И ТаблицаДокумента.ТипДенежныхСредствПолучатель = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|		КОГДА ТаблицаДокумента.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				И ТаблицаДокумента.ТипДенежныхСредствПолучатель = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|	КОНЕЦ КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС) КАК НалогообложениеНДС,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
	|	ТаблицаДокумента.БанковскийСчетПолучатель КАК БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчетПолучатель.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.БанковскийСчет КАК СчетКонтрагента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
	|ИЗ
	|	Документ.ПеремещениеДСПлан КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		Если Сумма <> Неопределено Тогда
			ЭтотОбъект.СуммаДокумента = Сумма;
		КонецЕсли;
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ДокументПланирования = ДокументОснование;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПеремещениюДСПлан()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоСчетуНаОплату(ДанныеЗаполнения, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	ВыполнятьПакет = Ложь;
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд))
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.СчетНаОплату КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплату КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		ВыполнятьПакет = Истина;
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
		
		Запрос.МенеджерВременныхТаблиц = Документы.СчетНаОплату.ВТСчетНаОплатуЗапасы(ДанныеЗаполнения);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|					И ВидыЗаказНарядовПорядокСостояний.НомерСтроки < ВЫРАЗИТЬ(ШапкаДокумента.ДокументОснование.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|						И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ДокументОснование.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование.ДокументОснование
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование.Заказ) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование.Заказ
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование.ЗаказПокупателя) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование.ЗаказПокупателя
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента
		|ИЗ
		|	Документ.СчетНаОплату КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСчетНаОплатуЗапасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО (ТаблицаДокумента.Ссылка.ДокументОснование.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка)
		|			И (ТаблицаДокумента.Ссылка.ДокументОснование.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплату КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ШапкаДокумента.ДокументОснование,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет,
		|	ТаблицаДокумента.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ШапкаДокумента.БанковскийСчет
		|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование.ДокументОснование
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование.Заказ) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование.Заказ
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование.ЗаказПокупателя) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ШапкаДокумента.ДокументОснование.ЗаказПокупателя
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ШапкаДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|					И ВидыЗаказНарядовПорядокСостояний.НомерСтроки < ВЫРАЗИТЬ(ШапкаДокумента.ДокументОснование.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ШапкаДокумента.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|						И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ДокументОснование.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения)
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты КАК ОплаченоВалДок
		|ИЗ
		|	РегистрНакопления.ОплатаСчетовИЗаказов КАК ОплатаСчетовИЗаказов
		|ГДЕ
		|	ОплатаСчетовИЗаказов.СчетНаОплату = &Ссылка
		|	И ОплатаСчетовИЗаказов.Регистратор <> &СсылкаНаТекущийДокумент
		|	И ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты <> 0";
		
	Иначе
	
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ДокументОснование = НЕОПРЕДЕЛЕНО
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.АктВыполненныхРабот.ПустаяСсылка)
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
		|				ИЛИ ТаблицаДокумента.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ОтчетОПереработке.ПустаяСсылка)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|					И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|					И ВидыЗаказНарядовПорядокСостояний.НомерСтроки < ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ДокументОснование.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|				И (ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.АктВыполненныхРабот)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ОтчетОПереработке)
		|					ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|						И ТаблицаДокумента.Ссылка.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|						И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ДокументОснование.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения)
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|				И ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДСОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.СчетНаОплату.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ТаблицаДокумента.Ссылка.ДокументОснование.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ТаблицаДокумента.Ссылка.ДокументОснование.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокумента.Ссылка КАК Ссылка,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			Документ.СчетНаОплату.Запасы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплату КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ТаблицаДокумента.Ссылка.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
		
	КонецЕсли;
	
	РасшифровкаПлатежа.Очистить();
	
	Если ВыполнятьПакет Тогда
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		РезультатЗапроса = МассивРезультатов[0];
		
		ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 1);
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			// Заполним реквизиты шапки.
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			
			// Заполним расшифровку платежа
			Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
				ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
			КонецЕсли;
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
				РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
	ЗаполнитьБанковскийСчетКонтрагента();
	ЗаполнитьАналитику();
	
КонецПроцедуры // ЗаполнитьПоСчетуНаОплату()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	ВыполнятьПакет = Ложь;
	
	Если Сумма <> Неопределено Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ОжидаетсяВыборВариантаКП");
		Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(ДанныеЗаполнения, ЗначенияРеквизитов);
		
		Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДанныеЗаполнения, Запрос.МенеджерВременныхТаблиц, Истина);
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
		|	ШапкаДокумента.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
		|	ШапкаДокумента.ПоложениеСклада КАК ПоложениеСклада
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаказПокупателяЗапасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		ВыполнятьПакет = Истина;
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ОжидаетсяВыборВариантаКП");
		Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(ДанныеЗаполнения, ЗначенияРеквизитов);
		
		Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДанныеЗаполнения, Запрос.МенеджерВременныхТаблиц, Истина);
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
		Запрос.УстановитьПараметр("ДатаОплаты", Новый МоментВремени(Запрос.Параметры.Дата, Ссылка));
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	БанковскиеСчетаВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	&Ссылка КАК СчетНаОплату,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ВложенныйЗапрос.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ШапкаДокумента.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
		|	ШапкаДокумента.ПоложениеСклада КАК ПоложениеСклада
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			&Ссылка КАК ДокументОснование,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|			ТаблицаДокумента.Всего КАК Всего,
		|			ТаблицаДокумента.СуммаНДС КАК СуммаНДС
		|		ИЗ
		|			ВТЗаказПокупателяЗапасы КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|				ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			&Ссылка,
		|			ТаблицаДокумента.СтавкаНДС,
		|			ТаблицаДокумента.Всего,
		|			ТаблицаДокумента.СуммаНДС
		|		ИЗ
		|			Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ),
		|			Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И (НЕ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					ИЛИ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И БанковскиеСчета.ВалютаДенежныхСредств = НациональнаяВалюта.Значение)) КАК БанковскиеСчетаВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = БанковскиеСчетаВложенныйЗапрос.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ШапкаДокумента.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ШапкаДокумента.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние,
		|	Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ВложенныйЗапрос.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	БанковскиеСчетаВложенныйЗапрос.ВалютаДенежныхСредств,
		|	БанковскиеСчетаВложенныйЗапрос.БанковскийСчет,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ШапкаДокумента.БанковскийСчет
		|		КОГДА ШапкаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|				И ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ БанковскиеСчетаВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ШапкаДокумента.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ШапкаДокумента.СтруктурнаяЕдиницаРезерв,
		|	ШапкаДокумента.ПоложениеСклада
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СчетНаОплату.Ссылка КАК СчетНаОплату
		|ИЗ
		|	Документ.СчетНаОплату КАК СчетНаОплату
		|ГДЕ
		|	СчетНаОплату.ДокументОснование = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты КАК ОплаченоВалДок
		|ИЗ
		|	РегистрНакопления.ОплатаСчетовИЗаказов КАК ОплатаСчетовИЗаказов
		|ГДЕ
		|	ОплатаСчетовИЗаказов.СчетНаОплату = &Ссылка
		|	И ОплатаСчетовИЗаказов.Регистратор <> &СсылкаНаТекущийДокумент
		|	И ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПоступлениеДСПлан.Ссылка КАК ДокументПланирования
		|ИЗ
		|	Документ.ПоступлениеДСПлан КАК ПоступлениеДСПлан
		|ГДЕ
		|	ПоступлениеДСПлан.ДокументОснование = &Ссылка
		|	И ПоступлениеДСПлан.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПокупателямиОстатки.Документ КАК Документ
		|ИЗ
		|	РегистрНакопления.РасчетыСПокупателями.Остатки(
		|			,
		|			Заказ = &Ссылка
		|				И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
		|				И Документ.МоментВремени < &ДатаОплаты) КАК РасчетыСПокупателямиОстатки";
		
	Иначе
		
		ВыполнятьПакет = Истина;
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения.Основание, "ОжидаетсяВыборВариантаКП");
		Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(ДанныеЗаполнения, ЗначенияРеквизитов);
		
		Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДанныеЗаполнения.Основание, Запрос.МенеджерВременныхТаблиц, Истина);
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПризнакАванса,
		|	ТаблицаДокумента.Ссылка КАК СчетНаОплату,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДСОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
		|				И ВидыЗаказНарядовПорядокСостояний.НомерСтроки >= ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.ВидЗаказа КАК Справочник.ВидыЗаказНарядов).НомерСостоянияВыполнения
		|				И ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ТаблицаДокумента.Ссылка.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
		|	ТаблицаДокумента.Ссылка.ПоложениеСклада КАК ПоложениеСклада
		|ИЗ
		|	Документ.ЗаказПокупателя.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокументаСтавкиНДС.Ссылка КАК Ссылка,
		|			ТаблицаДокументаСтавкиНДС.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ТаблицаДокумента.Ссылка КАК Ссылка,
		|				ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|			ИЗ
		|				ВТЗаказПокупателяЗапасы КАК ТаблицаДокумента
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ ПЕРВЫЕ 1
		|				ТаблицаДокумента.Ссылка,
		|				ТаблицаДокумента.СтавкаНДС
		|			ИЗ
		|				Документ.ЗаказПокупателя.Работы КАК ТаблицаДокумента
		|			ГДЕ
		|				ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПокупателя КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ),
		|			Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И (НЕ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					ИЛИ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И БанковскиеСчета.ВалютаДенежныхСредств = НациональнаяВалюта.Значение)) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ТаблицаДокумента.Ссылка.Организация = ВложенныйЗапрос.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗаказНарядов.ПорядокСостояний КАК ВидыЗаказНарядовПорядокСостояний
		|		ПО ТаблицаДокумента.Ссылка.ВидЗаказа = ВидыЗаказНарядовПорядокСостояний.Ссылка
		|			И ТаблицаДокумента.Ссылка.СостояниеЗаказа = ВидыЗаказНарядовПорядокСостояний.Состояние
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СчетНаОплату.Ссылка КАК СчетНаОплату
		|ИЗ
		|	Документ.СчетНаОплату КАК СчетНаОплату
		|ГДЕ
		|	СчетНаОплату.ДокументОснование = &Ссылка";
		
	КонецЕсли;
	
	РасшифровкаПлатежа.Очистить();
	
	ТекущийСчетНаОплату = Документы.СчетНаОплату.ПустаяСсылка();
	ДокументПланирования = Документы.ПоступлениеДСПлан.ПустаяСсылка();
	
	ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	
	Если ВыполнятьПакет Тогда
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		РезультатЗапроса = МассивРезультатов[0];
		
		ВыборкаСчетНаОплату = МассивРезультатов[1].Выбрать();
		Если ВыборкаСчетНаОплату.Количество() = 1
			И ВыборкаСчетНаОплату.Следующий() Тогда
			ТекущийСчетНаОплату = ВыборкаСчетНаОплату.СчетНаОплату;
		КонецЕсли;
		
		Если НомерСтроки = Неопределено Тогда
			
			ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 2);
			
			// Попробуем найти планируемое поступление, созданное по тому же документу основанию
			Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[3].Пустой() Тогда
				ВыборкаПланирование = МассивРезультатов[3].Выбрать();
				Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
					ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			ТаблицаДанных = РезультатЗапроса.Выгрузить();
		КонецЕсли;
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			ПоложениеСклада = Выборка.ПоложениеСклада;
			
			// Заполним реквизиты шапки.
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			
			// Заполним расшифровку платежа
			Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
				НоваяСтрока.ДокументПланирования = ДокументПланирования;
				НоваяСтрока.СчетНаОплату = ТекущийСчетНаОплату;
			КонецЦикла;
			
		КонецЕсли;
		
		// Определим документ расчетов.
		Если МассивРезультатов.Количество() >= 4 Тогда
			РезультатПоДокументамРасчетов = МассивРезультатов[4];
			ВыборкаПоДокументамРасчетов = РезультатПоДокументамРасчетов.Выбрать();
			Если ВыборкаПоДокументамРасчетов.Количество() = 1 Тогда
				ВыборкаПоДокументамРасчетов.Следующий();
				Для Каждого ТекущаяСтрока Из РасшифровкаПлатежа Цикл
					Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
						ТекущаяСтрока.Документ = ВыборкаПоДокументамРасчетов.Документ;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ПоложениеСклада = Выборка.ПоложениеСклада;
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
				ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
			КонецЕсли;
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
				РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
	ЗаполнитьБанковскийСчетКонтрагента();
	
	ЗаполнитьАналитику(ДанныеЗаполнения);
	
	// В заказе есть склад резерва и мы можем определить налоговый режим более точно.
	// Склад резерва мы видим только при включенной опции учета резервов.
	СпециальныйНалоговыйРежим = ЗаполнениеОбъектовУНФ.ПолучитьСпециальныйНалоговыйРежим(
		ПоложениеСклада,
		Организация,
		Выборка.СтруктурнаяЕдиницаРезерв,
		Дата
	);
	
КонецПроцедуры // ЗаполнитьПоЗаказуПокупателя()

// Процедура заполнения документа на основании начисления налогов.
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ПриходДенежныхСредствПлан - Плановый платеж
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоНачислениюНалогов(ДокументОснование) Экспорт
	
	Документы.НачислениеНалогов.ПроверитьВозможностьВводаНаОснованииНачисленияНалогов(ДокументОснование,
		Новый Структура("ВидОперации", ДокументОснование.ВидОперации));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("КонстантаНациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("КонстантаВалютаУчета", Константы.ВалютаУчета.Получить());
	
	Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()))+
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.Прочее) КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта
	|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	&КонстантаНациональнаяВалюта КАК ВалютаДенежныхСредств,
	|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютУчета.Курс * 1 / (1 * ЕСТЬNULL(КурсыВалютУчета.Кратность, 1)) КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ТаблицаДокументаНалоги.ВидНалога КАК ВидНалога,
	|	ТаблицаДокументаНалоги.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.НачислениеНалогов КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокумента.Ссылка КАК Ссылка,
	|			ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|			ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|		ИЗ
	|			Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаНалоги
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаНалоги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &КонстантаВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
	|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.НачислениеНалогов КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И (БанковскиеСчета.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		РасшифровкаПлатежа.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоНачислениюНалогов()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоРасходнойНакладной(ДокументОснование) Экспорт
	
	Если ДокументОснование.ВидОперации = Перечисления.ВидыОперацийРасходнаяНакладная.ПередачаВПереработку Тогда
		ТекстИсключения = НСтр("ru = 'Невозможен ввод документа на основании операции - ""%ВидОперации""!'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидОперации", ДокументОснование.ВидОперации);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.МенеджерВременныхТаблиц = Документы.РасходнаяНакладная.ВТРасходнаяНакладнаяЗапасы(ДокументОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|	КОНЕЦ КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|							И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ПриходнаяНакладная)
	|						ТОГДА ШапкаДокумента.ДокументОснование
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС,
	|	ШапкаДокумента.СпециальныйНалоговыйРежим КАК СпециальныйНалоговыйРежим,
	|	ШапкаДокумента.УчитыватьВНУ КАК УчитыватьВНУ
	|ИЗ
	|	Документ.РасходнаяНакладная КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасходнаяНакладнаяЗапасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.РасходнаяНакладная КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|	КОНЕЦ,
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику)
	|							И ТИПЗНАЧЕНИЯ(ШапкаДокумента.ДокументОснование) = ТИП(Документ.ПриходнаяНакладная)
	|						ТОГДА ШапкаДокумента.ДокументОснование
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ШапкаДокумента.СпециальныйНалоговыйРежим,
	|	ШапкаДокумента.УчитыватьВНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетНаОплату.Ссылка КАК СчетНаОплату
	|ИЗ
	|	Документ.СчетНаОплату КАК СчетНаОплату
	|ГДЕ
	|	СчетНаОплату.ДокументОснование = &Ссылка
	|	И СчетНаОплату.Контрагент.ВестиУчетОплатыПоСчетам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.ПоступлениеДСПлан КАК ПоступлениеДСПлан
	|ГДЕ
	|	ПоступлениеДСПлан.ДокументОснование = &Ссылка
	|	И ПоступлениеДСПлан.Проведен";
	
	Запрос.Текст = Запрос.Текст
				 + НалогиУНФ.ТекстЗапросаПоПатентамДляЗаполненияНаОснованииРасходнойНаклданой();
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 2);
	
	РезультатЗапроса = МассивРезультатов[0];
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		
		// Попробуем найти планируемое поступление, созданное по тому же документу основанию
		ДокументПланирования = Документы.ПоступлениеДСПлан.ПустаяСсылка();
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаПланирование = МассивРезультатов[3].Выбрать();
			Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
				ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
			КонецЕсли;
			
		КонецЕсли; 
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.ДокументПланирования = ДокументПланирования;
		КонецЦикла;
		
		ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
	ЗаполнитьБанковскийСчетКонтрагента();
	
	ЗаполнитьАналитику();
	
	// Патент
	ПатентыОрганизации = МассивРезультатов[4].Выгрузить();
	ПатентыПоСкладам = МассивРезультатов[5].Выгрузить();
	Патент = НалогиУНФ.ПатентПоУмолчаниюДляДенежныхДокументов(ПатентыОрганизации, ПатентыПоСкладам)
	// Конец Патент
	
КонецПроцедуры // ЗаполнитьПоРасходнойНакладной()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПередачаТоваровМеждуОрганизациями(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Организация"));
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.МенеджерВременныхТаблиц = Документы.ПередачаТоваровМеждуОрганизациями.ВТПередачаТоваровМеждуОрганизациямиЗапасы(ДокументОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей) КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.КонтрагентПолучатель КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.КонтрагентПолучатель.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПередачаТоваровМеждуОрганизациямиЗапасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПередачаТоваровМеждуОрганизациями КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.КонтрагентПолучатель,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.КонтрагентПолучатель.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетНаОплату.Ссылка КАК СчетНаОплату
	|ИЗ
	|	Документ.СчетНаОплату КАК СчетНаОплату
	|ГДЕ
	|	СчетНаОплату.ДокументОснование = &Ссылка
	|	И СчетНаОплату.Контрагент.ВестиУчетОплатыПоСчетам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.Организация = &Организация
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.ПоступлениеДСПлан КАК ПоступлениеДСПлан
	|ГДЕ
	|	ПоступлениеДСПлан.ДокументОснование = &Ссылка
	|	И ПоступлениеДСПлан.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 2);
	
	РезультатЗапроса = МассивРезультатов[0];
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		
		// Попробуем найти планируемое поступление, созданное по тому же документу основанию
		ДокументПланирования = Документы.ПоступлениеДСПлан.ПустаяСсылка();
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаПланирование = МассивРезультатов[3].Выбрать();
			Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
				ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
			КонецЕсли;
			
		КонецЕсли; 
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.ДокументПланирования = ДокументПланирования;
		КонецЦикла;
		
		ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
	ЗаполнитьБанковскийСчетКонтрагента();
	
	ЗаполнитьАналитику();
	
КонецПроцедуры // ЗаполнитьПоПередачеТоваровМеждуОрганизациями()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоАктуВыполненныхРабот(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Вручную) КАК СпособЗачета,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.РаботыИУслуги КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.АктВыполненныхРабот КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.ЗаказПокупателя,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетНаОплату.Ссылка КАК СчетНаОплату
	|ИЗ
	|	Документ.СчетНаОплату КАК СчетНаОплату
	|ГДЕ
	|	СчетНаОплату.ДокументОснование = &Ссылка
	|	И СчетНаОплату.Контрагент.ВестиУчетОплатыПоСчетам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.ПоступлениеДСПлан КАК ПоступлениеДСПлан
	|ГДЕ
	|	ПоступлениеДСПлан.ДокументОснование = &Ссылка
	|	И ПоступлениеДСПлан.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 2);
	
	РезультатЗапроса = МассивРезультатов[0];
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		
		// Попробуем найти планируемое поступление, созданное по тому же документу основанию
		ДокументПланирования = Документы.ПоступлениеДСПлан.ПустаяСсылка();
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаПланирование = МассивРезультатов[3].Выбрать();
			Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
				ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
			КонецЕсли;
			
		КонецЕсли; 
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.ДокументПланирования = ДокументПланирования;
		КонецЦикла;
		
		ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
	ЗаполнитьБанковскийСчетКонтрагента();
	ЗаполнитьАналитику();
	
КонецПроцедуры // ЗаполнитьПоАктуВыполненныхРабот()

Процедура ЗаполнитьПоПриемуВРемонт(ДокументСсылкаПриемИПередачаВРемонт) Экспорт
	
	Если ДокументСсылкаПриемИПередачаВРемонт.ВариантРемонта = Перечисления.ВариантыРемонта.НашаМастерскаяМногоэтапныйРемонт Тогда
		ВызватьИсключение НСтр("ru = 'Для выбранного варианта ремонта вводите оплаты на основании подчиненных документов - Заказ-наряд, Расходная, Акт'");
	КонецЕсли;
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриемИПередачаВРемонт);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	// Заполним данные табличных частей документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию КАК БанковскийСчет,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.РемонтВыполнен
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.РемонтВыполнен
	|			ТОГДА ШапкаДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ШапкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК Кратность,
	|	ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот КАК Всего,
	|	КурсыВалютДокумента.Курс КАК Курс1,
	|	КурсыВалютРасчетов.Курс КАК Курс2,
	|	КурсыВалютБанковскогоСчета.Курс КАК Курс3,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА НЕ ШапкаДокумента.Проведен
	|					ИЛИ ШапкаДокумента.ВариантРемонта = ЗНАЧЕНИЕ(перечисление.ВариантыРемонта.ПустаяСсылка)
	|				ТОГДА ШапкаДокумента.СуммаДокумента
	|			ИНАЧЕ ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот
	|		КОНЕЦ * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА НЕ ШапкаДокумента.Проведен
	|					ИЛИ ШапкаДокумента.ВариантРемонта = ЗНАЧЕНИЕ(перечисление.ВариантыРемонта.ПустаяСсылка)
	|				ТОГДА ШапкаДокумента.СуммаДокумента
	|			ИНАЧЕ ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот
	|		КОНЕЦ * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ШапкаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВариантРемонта = ЗНАЧЕНИЕ(Перечисление.ВариантыРемонта.НашаМастерскаяМногоэтапныйРемонт)
	|						ТОГДА ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка)
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПриемИПередачаВРемонт.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ
	|ИЗ
	|	Документ.ПриемИПередачаВРемонт КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		РасшифровкаПлатежа.Очистить();
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");	
	
КонецПроцедуры // ЗаполнитьПоОтчетОРозничныхПродажах()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоПередачеВА(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПередачаВА КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаВА.ВнеоборотныеАктивы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПередачаВА КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПередачеВА()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоОтчетуКомиссионера(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Если ДокументОснование.Проведен Тогда
		Запрос.УстановитьПараметр("ТаблицаДокумента", Документы.ОтчетКомиссионера.РаспределеннаяТаблицаЗапасы(ДокументОснование));
	Иначе
		Запрос.УстановитьПараметр("ТаблицаДокумента", ДокументОснование.Запасы.Выгрузить());
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомиссионераЗапасы.Ссылка КАК Ссылка,
	|	ОтчетКомиссионераЗапасы.ЗаказПокупателя КАК Заказ,
	|	ОтчетКомиссионераЗапасы.Номенклатура КАК Номенклатура,
	|	ОтчетКомиссионераЗапасы.Всего КАК Всего,
	|	ОтчетКомиссионераЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетКомиссионераЗапасы.СуммаНДС КАК СуммаНДС,
	|	ОтчетКомиссионераЗапасы.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ОтчетКомиссионераЗапасы.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|ПОМЕСТИТЬ ТаблицаДокументаЗапасы
	|ИЗ
	|	Документ.ОтчетКомиссионера.Запасы КАК ОтчетКомиссионераЗапасы
	|ГДЕ
	|	ОтчетКомиссионераЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей) КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ОтчетКомиссионера.Договор.ВалютаРасчетов
	|			ТОГДА ОтчетКомиссионера.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ОтчетКомиссионера.Организация КАК Организация,
	|	ОтчетКомиссионера.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ОтчетКомиссионера.Контрагент КАК Контрагент,
	|	ОтчетКомиссионера.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ТаблицаДокументаЗапасы.Заказ КАК Заказ,
	|	ОтчетКомиссионера.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ВЫБОР
	|			КОГДА ОтчетКомиссионера.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|				ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокументаЗапасы.Всего * ВЫБОР
	|								КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|									ТОГДА КурсыРегВалют.Курс * ОтчетКомиссионера.Кратность / (ОтчетКомиссионера.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|								ИНАЧЕ 1
	|							КОНЕЦ КАК ЧИСЛО(15, 2)), 0) - ЕСТЬNULL(ВЫБОР
	|							КОГДА ОтчетКомиссионера.УдержатьКомиссионноеВознаграждение
	|								ТОГДА ТаблицаДокументаЗапасы.СуммаВознаграждения * ЕСТЬNULL(ВЫРАЗИТЬ(ВЫБОР
	|												КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|													ТОГДА КурсыРегВалют.Курс * ОтчетКомиссионера.Кратность / (ОтчетКомиссионера.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|												ИНАЧЕ 1
	|											КОНЕЦ КАК ЧИСЛО(15, 2)), 0)
	|							ИНАЧЕ 0
	|						КОНЕЦ, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВЫБОР
	|						КОГДА НЕ ОтчетКомиссионера.УдержатьКомиссионноеВознаграждение
	|							ТОГДА ТаблицаДокументаЗапасы.СуммаВознаграждения * ЕСТЬNULL(ВЫРАЗИТЬ(ВЫБОР
	|											КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|												ТОГДА КурсыРегВалют.Курс * ОтчетКомиссионера.Кратность / (ОтчетКомиссионера.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|											ИНАЧЕ 1
	|										КОНЕЦ КАК ЧИСЛО(15, 2)), 0)
	|						ИНАЧЕ 0
	|					КОНЕЦ, 0)
	|		КОНЕЦ) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ОтчетКомиссионера.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ОтчетКомиссионера.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ВЫБОР
	|			КОГДА ОтчетКомиссионера.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|				ТОГДА ЕСТЬNULL(ТаблицаДокументаЗапасы.Всего - ВЫБОР
	|							КОГДА ОтчетКомиссионера.УдержатьКомиссионноеВознаграждение
	|								ТОГДА ТаблицаДокументаЗапасы.СуммаВознаграждения
	|							ИНАЧЕ 0
	|						КОНЕЦ, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВЫБОР
	|						КОГДА НЕ ОтчетКомиссионера.УдержатьКомиссионноеВознаграждение
	|							ТОГДА ТаблицаДокументаЗапасы.СуммаВознаграждения
	|						ИНАЧЕ 0
	|					КОНЕЦ, 0)
	|		КОНЕЦ) КАК СуммаПлатежа,
	|	ТаблицаДокументаЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ОтчетКомиссионера.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|				ТОГДА ЕСТЬNULL(ТаблицаДокументаЗапасы.СуммаНДС, 0)
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НЕ ОтчетКомиссионера.УдержатьКомиссионноеВознаграждение
	|						ТОГДА ЕСТЬNULL(ТаблицаДокументаЗапасы.СуммаНДСВознаграждения, 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ОтчетКомиссионера
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДокументаЗапасы КАК ТаблицаДокументаЗапасы
	|		ПО ОтчетКомиссионера.Ссылка = ТаблицаДокументаЗапасы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ОтчетКомиссионера.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ОтчетКомиссионера КАК ОтчетКомиссионера
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ОтчетКомиссионера.Организация = БанковскиеСчета.Владелец
	|					И ОтчетКомиссионера.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ОтчетКомиссионера.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ОтчетКомиссионера.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ОтчетКомиссионера.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ОтчетКомиссионера.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетКомиссионера.Организация,
	|	ОтчетКомиссионера.НалогообложениеНДС,
	|	ОтчетКомиссионера.Контрагент,
	|	ОтчетКомиссионера.ВалютаДокумента,
	|	ОтчетКомиссионера.Договор,
	|	ТаблицаДокументаЗапасы.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ОтчетКомиссионера.Договор.ВалютаРасчетов
	|			ТОГДА ОтчетКомиссионера.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ОтчетКомиссионера.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ОтчетКомиссионера.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокументаЗапасы.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетНаОплату.Ссылка КАК СчетНаОплату
	|ИЗ
	|	Документ.СчетНаОплату КАК СчетНаОплату
	|ГДЕ
	|	СчетНаОплату.ДокументОснование = &Ссылка
	|	И СчетНаОплату.Контрагент.ВестиУчетОплатыПоСчетам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.ПоступлениеДСПлан КАК ПоступлениеДСПлан
	|ГДЕ
	|	ПоступлениеДСПлан.ДокументОснование = &Ссылка
	|	И ПоступлениеДСПлан.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	МассивРезультатов.Удалить(0);
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 2);
	
	РезультатЗапроса = МассивРезультатов[0];
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		
		// Попробуем найти планируемое поступление, созданное по тому же документу основанию
		ДокументПланирования = Документы.ПоступлениеДСПлан.ПустаяСсылка();
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаПланирование = МассивРезультатов[3].Выбрать();
			Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
				ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
			КонецЕсли;
			
		КонецЕсли; 
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
			НоваяСтрока.Документ = ДокументОснование;
			НоваяСтрока.ДокументПланирования = ДокументПланирования;
		КонецЦикла;
		
		ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
	ЗаполнитьБанковскийСчетКонтрагента();
	ЗаполнитьАналитику();
	
КонецПроцедуры // ЗаполнитьПоОтчетуКомиссионера()

// Процедура заполнения документа на основании.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоОтчетуКомитента(ДанныеЗаполнения) Экспорт
	
	ВознаграждениеУдерживается = ДанныеЗаполнения.УдержатьКомиссионноеВознаграждение;
	
	Если ВознаграждениеУдерживается Тогда
		ТекстИсключения = НСтр("ru = 'В документе удерживается комиссионное вознаграждение. Ввод счета на оплаты, для услуги комиссии, не требуется.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Договор = ДанныеЗаполнения.Договор;
	УслугаКомиссионногоВознаграждения = Договор.УслугаКомиссионногоВознаграждения;
	ДоговорУслугиКомиссионногоВознаграждения = Договор.ДоговорУслугиКомиссионногоВознаграждения;
	
	Если Не ЗначениеЗаполнено(УслугаКомиссионногоВознаграждения) Тогда
		ТекстИсключения = НСтр("ru = 'В договоре не выбрана услуга комиссионного вознаграждения. Выберите услугу и повторите попытку.
		|Для выбора, договор должен иметь вид - С комитентом. Выбор услуги находится в группе - Комиссия'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДоговорУслугиКомиссионногоВознаграждения) Тогда
		ТекстИсключения = НСтр("ru = 'В договоре не выбран договор услуги комиссионного вознаграждения. Выберите договор для услуги и повторите попытку.
		|Для выбора, договор должен иметь вид - С комитентом. Выбор договора для услуги комиссии находится в группе - Комиссия'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомитентуЗапасы.Ссылка КАК Ссылка,
	|	ОтчетКомитентуЗапасы.НомерСтроки КАК НомерСтроки,
	|	ОтчетКомитентуЗапасы.Номенклатура КАК Номенклатура,
	|	ОтчетКомитентуЗапасы.Характеристика КАК Характеристика,
	|	ОтчетКомитентуЗапасы.Партия КАК Партия,
	|	ОтчетКомитентуЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ОтчетКомитентуЗапасы.Количество КАК Количество,
	|	ОтчетКомитентуЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОтчетКомитентуЗапасы.Цена КАК Цена,
	|	ОтчетКомитентуЗапасы.Сумма КАК Сумма,
	|	ОтчетКомитентуЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетКомитентуЗапасы.СуммаНДС КАК СуммаНДС,
	|	ОтчетКомитентуЗапасы.Всего КАК Всего,
	|	ОтчетКомитентуЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетКомитентуЗапасы.ЦенаПоступления КАК ЦенаПоступления,
	|	ОтчетКомитентуЗапасы.СуммаПоступления КАК СуммаПоступления,
	|	ОтчетКомитентуЗапасы.СуммаНДСПоступления КАК СуммаНДСПоступления,
	|	ОтчетКомитентуЗапасы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ОтчетКомитентуЗапасы.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ОтчетКомитентуЗапасы.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуЗапасы.Покупатель КАК Покупатель,
	|	ОтчетКомитентуЗапасы.ДатаРеализации КАК ДатаРеализации,
	|	ОтчетКомитентуЗапасы.КлючСвязи КАК КлючСвязи,
	|	ОтчетКомитентуЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОтчетКомитентуЗапасы.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ОтчетКомитенту.Запасы КАК ОтчетКомитентуЗапасы
	|ГДЕ
	|	ОтчетКомитентуЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей) КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫРАЗИТЬ(ШапкаДокумента.Контрагент.НаименованиеПолное КАК СТРОКА(1024)) КАК ПринятоОт,
	|	ПРЕДСТАВЛЕНИЕ(ШапкаДокумента.Контрагент) КАК ПредставлениеКонтрагента,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию КАК Касса,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ЗаказПокупателя КАК Заказ,
	|	ШапкаДокумента.Договор.ДоговорУслугиКомиссионногоВознаграждения КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВознаграждения * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаВознаграждения, 0)) КАК СуммаПлатежа,
	|	ШапкаДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДСВознаграждения, 0)) КАК СуммаНДС,
	|	ЛОЖЬ КАК УчитыватьВНУ,
	|	ЛОЖЬ КАК СпециальныйНалоговыйРежим,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ДоговорУслугиКомиссионногоВознаграждения.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ОтчетКомитенту КАК ОтчетКомитенту
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ОтчетКомитенту.Организация = БанковскиеСчета.Владелец
	|					И ОтчетКомитенту.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ОтчетКомитенту.Ссылка = &Ссылка
	|			И НЕ БанковскиеСчета.ПометкаУдаления
	|			И НЕ БанковскиеСчета.Недействителен) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
	|			И ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Организация.КассаПоУмолчанию,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(ШапкаДокумента.Контрагент.НаименованиеПолное КАК СТРОКА(1024)),
	|	ШапкаДокумента.Договор.ДоговорУслугиКомиссионногоВознаграждения,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ШапкаДокумента.СтавкаНДСВознаграждения,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ДоговорУслугиКомиссионногоВознаграждения.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетНаОплату.Ссылка КАК СчетНаОплату
	|ИЗ
	|	Документ.СчетНаОплату КАК СчетНаОплату
	|ГДЕ
	|	СчетНаОплату.ДокументОснование = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.ПоступлениеДСПлан КАК ПоступлениеДСПлан
	|ГДЕ
	|	ПоступлениеДСПлан.ДокументОснование = &Ссылка
	|	И ПоступлениеДСПлан.Проведен";
	
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	МассивРезультатов.Удалить(0);
	
	РезультатЗапроса = МассивРезультатов[0];
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 2);
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		
		// Попробуем найти планируемое поступление, созданное по тому же документу основанию
		ДокументПланирования = Документы.ПоступлениеДСПлан.ПустаяСсылка();
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[3].Пустой() Тогда
			
			ВыборкаПланирование = МассивРезультатов[3].Выбрать();
			Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
				ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
			КонецЕсли;
			
		КонецЕсли; 
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
			НоваяСтрока.Документ = ДокументОснование;
			НоваяСтрока.ДокументПланирования = ДокументПланирования;
		КонецЦикла;
		
		ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
	ЗаполнитьБанковскийСчетКонтрагента();
	ЗаполнитьАналитику();
	
КонецПроцедуры // ЗаполнитьПоОтчетуКомитента()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(Контрагент)
		И НЕ Контрагент.ВестиРасчетыПоДоговорам
		И НЕ ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
			СтрокаТЧ.Договор = Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(Контрагент);
		КонецЕсли;
		
		// Прочие расчеты
		Если (ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты
			ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
			И СтрокаТЧ.СтавкаНДС.Пустая() Тогда
			СтрокаТЧ.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
			СтрокаТЧ.СуммаНДС = 0;
		КонецЕсли;
		// Конец Прочие расчеты
	КонецЦикла;
	
	// Эквайринг
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам Тогда
		ЭквайринговыеОперацииСервер.ПередЗаписьюОтчетаЭквайера(ЭтотОбъект);
	Иначе
		
		//Для остальных операций просто переносим данные по НУ из шапки документа
		Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
			
			СтрокаРасшифровки.Патент = Патент;
			СтрокаРасшифровки.УчитыватьВНУ = УчитыватьВНУ;
			СтрокаРасшифровки.НалогообложениеНДС = НалогообложениеНДС;
			
		КонецЦикла; 
		
	КонецЕсли;
	// Конец Эквайринг
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ВзносНаличными 
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета Тогда
		Если РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(Дата,Константы.УчетПоКомпании.Компания(Организация)) Тогда
			Корреспонденция = ПланыСчетов.Управленческий.ПереводыВПути;
		Иначе
			Корреспонденция = ПланыСчетов.Управленческий.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	// Зачет долгов. Авто
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И
		ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.Автоматически И
		ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя Тогда
		
		РасшифровкаПлатежа.Очистить();
		ЗаполнитьРасшифровкуПлатежаАвтоЗачетДолгов();
		
	КонецЕсли;
	// Конец Зачет долгов. Авто
	
	// Курьерская компания и почта
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты Тогда
		СтрокаРасчетовСПочтой = РасшифровкаПлатежа[0];
		ВалютаРасчетов = СтрокаРасчетовСПочтой.Договор.ВалютаРасчетов;
		КурсИКратностьВалютыРасчетов = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаРасчетов));
		СтрокаРасчетовСПочтой.Курс = КурсИКратностьВалютыРасчетов.Курс;
		СтрокаРасчетовСПочтой.Кратность = КурсИКратностьВалютыРасчетов.Кратность;
		
		СтрокаРасчетовСПочтой.УдержаноАгентом = ЭтотОбъект.РасшифровкаПлатежаОтАгента.Итог("УдержаноАгентом");
		
		Если ВалютаДенежныхСредств = ВалютаРасчетов Тогда
			СтрокаРасчетовСПочтой.СуммаРасчетов = СтрокаРасчетовСПочтой.СуммаПлатежа;
		Иначе
			КурсИКратностьВалютыДС = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
			СтрокаРасчетовСПочтой.СуммаРасчетов = СтрокаРасчетовСПочтой.СуммаПлатежа * ?(КурсИКратностьВалютыДС.Курс = 0, 1, КурсИКратностьВалютыДС.Курс) * КурсИКратностьВалютыРасчетов.Кратность
				/ ?(КурсИКратностьВалютыДС.Кратность * КурсИКратностьВалютыРасчетов.Курс = 0, 1, КурсИКратностьВалютыДС.Кратность * КурсИКратностьВалютыРасчетов.Курс);

		КонецЕсли;
	КонецЕсли;
	// Конец. Курьерская компания и почта
	
	РасчетыПроведениеДокументов.ОбработатьРасшифровкуПлатежаПередЗаписью(ЭтотОбъект);
	
	РасчетыПроведениеДокументов.ОбработатьРеквизитыШапкаТабличнаяЧастьПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплату")] = "ЗаполнитьПоСчетуНаОплату";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеДСПлан")] = "ЗаполнитьПоПоступлениюДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеДСПлан")] = "ЗаполнитьПоПеремещениюДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходнаяНакладная")] = "ЗаполнитьПоРасходнойНакладной";
	СтратегияЗаполнения[Тип("ДокументСсылка.АктВыполненныхРабот")] = "ЗаполнитьПоАктуВыполненныхРабот";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачислениеНалогов")] = "ЗаполнитьПоНачислениюНалогов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ДоговорКредитаИЗайма")] = "ЗаполнитьПоДоговоруКредитаИЗайма";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПередачаВА")] = "ЗаполнитьПоПередачеВА";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам")] = "ЗаполнитьПоНачисленияПоКредитамИЗаймам";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриемИПередачаВРемонт")] = "ЗаполнитьПоПриемуВРемонт";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетКомиссионера")] = "ЗаполнитьПоОтчетуКомиссионера";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")] = "ЗаполнитьПоПередачаТоваровМеждуОрганизациями";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетКомитенту")] = "ЗаполнитьПоОтчетуКомитента";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, "АналитикаПрочихДоходовИРасходов");
	РасчетыПроведениеДокументов.ЗаполнитьСпособЗачетаВРасшифровкеПлатежа(ЭтотОбъект);
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя
		И Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
	    Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам Тогда
		ПоложениеСтатьи = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьДокументыПланирования = Истина;
	
	// Удаление проверяемых реквизитов из структуры, в зависимости от вида
	// операции.
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПоставщика
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
		Если НЕ ((ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя
			ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации) И
			ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.СПомощником) Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		Иначе
			// Если нет строки с авансом, то и договор аванса заполнять не нужно.
			ЕстьАванс = Ложь;
			Для Каждого ТекущаяСтрока Из РасшифровкаПлатежа Цикл
				Если ТекущаяСтрока.ПризнакАванса Тогда
					ЕстьАванс = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ЕстьАванс Тогда
				ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
			КонецЕсли;
		КонецЕсли;
		
		ПогашатьАвтоматически = ((ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации) И 
			ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.Автоматически);
			
		Если Не ПогашатьАвтоматически Тогда
			
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
			
		Иначе
			
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
			
			Для каждого СтрокаДоговоры Из ДоговорыАвтоЗачетаДолгов Цикл
				
				Если (СтрокаДоговоры.Договор.Пустая() И СтрокаДоговоры.СуммаПлатежа > 0) ИЛИ
					(НЕ СтрокаДоговоры.Договор.Пустая() И СтрокаДоговоры.СуммаПлатежа = 0) Тогда
					
					ТекстСообщения = СтрШаблон(НСтр(
						"ru = 'Для договора под №%1 нужно очистить сумму или выбрать договор.'"),
						СтрокаДоговоры.НомерСтроки);
					КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаПлатежа",
						СтрокаДоговоры.НомерСтроки, "Документ");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ПогашатьАвтоматическиСРазнесениемПоДоговорам = (ПогашатьАвтоматически И (ДоговорыАвтоЗачетаДолгов.Количество() > 1));
		Если ПогашатьАвтоматическиСРазнесениемПоДоговорам Тогда
			СуммаПлатежа = ДоговорыАвтоЗачетаДолгов.Итог("СуммаПлатежа");
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей по договорам: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств)); 
		Иначе
			СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств)); 
		КонецЕсли;
		
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		Если НЕ Контрагент.ВестиРасчетыПоДоговорам Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		КонецЕсли;
		
		// В случае возврата нужно обязательно указать документ, если учет по документам ведется.
		Если Контрагент.ВестиРасчетыПоДокументам
			И ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПоставщика Тогда
			Для Каждого СтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаРасшифровкаПлатежа.Документ) Тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстСообщения = НСтр("ru = 'Укажите документ расчетов.'");
					Иначе
						ТекстСообщения = СтрШаблон(НСтр(
							"ru = 'Укажите документ расчетов в строке %1 списка ""Расшифровка платежа"".'"),
							СтрокаРасшифровкаПлатежа.НомерСтроки);
					КонецЕсли;
					КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаПлатежа",
						СтрокаРасшифровкаПлатежа.НомерСтроки, "Документ");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.Прочее Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты Тогда
		
		Если Не УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов() Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		КонецЕсли;
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	// Эквайринг
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам Тогда
		
		ПараметрыЭквайринга = ЭквайринговыеОперацииСервер.ПолучитьПараметрыЭквайрингаДляДокумента(ЭтотОбъект);
		
		Если НЕ ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
			СчПроверяемыхРеквизитов = ПроверяемыеРеквизиты.Количество();
			Пока СчПроверяемыхРеквизитов > 0 Цикл
				Если СтрНайти(ПроверяемыеРеквизиты[СчПроверяемыхРеквизитов-1], "ЭквайринговыеОперации") Тогда
					ПроверяемыеРеквизиты.Удалить(СчПроверяемыхРеквизитов-1);
				КонецЕсли;
					
				СчПроверяемыхРеквизитов = СчПроверяемыхРеквизитов - 1;
			КонецЦикла;
		КонецЕсли;
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
		Если ПоложениеНастроекНалоговогоУчета = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НалогообложениеНДС");
		Иначе
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации.НалогообложениеНДС");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ПоложениеЭквайринговогоТерминала) ИЛИ ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации.ЭквайринговыйТерминал");
		Иначе
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		КонецЕсли;
		
		СчПроверяемыхРеквизитов = ПроверяемыеРеквизиты.Количество();
		Пока СчПроверяемыхРеквизитов > 0 Цикл
			Если СтрНайти(ПроверяемыеРеквизиты[СчПроверяемыхРеквизитов-1], "РасшифровкаПлатежа") Тогда
				ПроверяемыеРеквизиты.Удалить(СчПроверяемыхРеквизитов-1);
			КонецЕсли;
				
			СчПроверяемыхРеквизитов = СчПроверяемыхРеквизитов - 1;
		КонецЦикла;
		
		Если ЭквайринговыйТерминал.СчетЗатрат.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		КонецЕсли;
		
		Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
			
			// Проверим сумму платежа.
			СуммаПлатежа = ЭквайринговыеОперации.Итог("СуммаПлатежаИтогоПоСтроке");
			
			//Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам И ПараметрыЭквайринга.РасчетКомиссииВОтчетеЭквайера Тогда
			//	СуммаПлатежа = СуммаПлатежа + СуммаКомиссииДокумента;
			//КонецЕсли;
			
			Если СуммаПлатежа <> СуммаДокумента Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
					СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
			КонецЕсли;
			
			// Проверим сумму комиссии, только в том случае, если она считается в операциях по платежным картам
			Если НЕ ПараметрыЭквайринга.РасчетКомиссииВОтчетеЭквайера Тогда
				СуммаКомиссии = ЭквайринговыеОперации.Итог("СуммаКомиссииИтогоПоСтроке");
				Если СуммаКомиссии <> СуммаКомиссииДокумента Тогда
					ТекстСообщения = СтрШаблон(НСтр(
						"ru = 'Сумма комиссии: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
						СуммаКомиссииДокумента, СуммаКомиссии, СокрЛП(ВалютаДенежныхСредств));
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаКомиссииДокумента", , Отказ);
				КонецЕсли;
			 КонецЕсли;
		Иначе
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации.Документ");
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	// Конец Эквайринг
	// Прочие расчеты
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		Если Подотчетник.Пустая() Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Сотрудник"" не заполнено'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Подотчетник", , Отказ);
		КонецЕсли;
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	// Конец Прочие расчеты
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ВзносНаличными Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
		Если Не ЗначениеЗаполнено(СчетКонтрагента) Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Счет плательщика"" не заполнено'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СчетКонтрагента", , Отказ);
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НаправлениеДеятельности");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
		Если РасшифровкаПлатежаОтАгента.Количество() > 0 Тогда
			СуммаПлатежа = РасшифровкаПлатежаОтАгента.Итог("СуммаПлатежа");
			Если СуммаПлатежа <> СуммаДокумента Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
					СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
			КонецЕсли;
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	Иначе
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		
	КонецЕсли;
	
	// Платежный календарь
	Если ПроверитьДокументыПланирования Тогда
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
			
			ЕстьОшибка = Ложь;
			СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
			
			Если СуммаПлатежа > СуммаДокумента Тогда
				ЕстьОшибка = Истина;
			КонецЕсли;
			
			Если ЕстьОшибка Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Сумма документа: %1 %3 меньше суммы разнесенных платежей в табличной части: %2 %3.'"));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ПоложениеСтатьи = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Статья");
		ПроверяемыеРеквизиты.Добавить("РасшифровкаПлатежа.СтатьяДДС");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	// Взаиморасчеты
	РасчетыПроведениеДокументов.ИнициализироватьДополнительныеСвойстваДляПроведения(ЭтотОбъект, ДополнительныеСвойства, Отказ, Ложь);
	// Конец Взаиморасчеты
	
	// Инициализация данных документа
	Документы.ПоступлениеНаСчет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Взаиморасчеты
	// Проверим, можно ли продолжать и не было ли отказа в процедурах
	// формирования движений по взаиморасчетам.
	Отказ = ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// Конец Взаиморасчеты
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДенежныеСредства", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДвиженияДенежныхСредств", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПодотчетниками", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПокупателями", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПоставщиками", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ПлатежныйКалендарь", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ОплатаСчетовИЗаказов", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходы", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыПоНалогам", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыКассовыйМетод", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыНераспределенные", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыОтложенные", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	// Эквайринг
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыПоЭквайрингу", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыКассовыйМетодЭквайринг", ТаблицыДляДвижений, Движения, Отказ);
	// Конец Эквайринг
	// Прочие расчеты
	ПрочиеРасчетыУНФ.ОтразитьРасчетыСПрочимиКонтрагентами(ДополнительныеСвойства, Движения, Отказ);
	ПрочиеРасчетыУНФ.ОтразитьРасчетыПоКредитамИЗаймам(ДополнительныеСвойства, Движения, Отказ);
	// Конец Прочие расчеты
	
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗакупкиДляКУДиР", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ОплатаДокументов", ТаблицыДляДвижений, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Взаиморасчеты
	Если ДополнительныеСвойства.Свойство("ТаблицаДокументовДляИзменения")
		И ДополнительныеСвойства.ТаблицаДокументовДляИзменения.Количество() > 0 Тогда
		РасчетыПроведениеДокументов.ОбработатьТаблицуДокументовДляИзмененияПриОплате(ДополнительныеСвойства, Отказ);
	КонецЕсли;
	// Конец Взаиморасчеты
	
	// Контроль возникновения отрицательного остатка.
	// Контроль нужно выполнять после того, как будут проведены все документы из ТаблицаДокументовДляИзменения!
	Документы.ПоступлениеНаСчет.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Взаиморасчеты
	Если ДополнительныеСвойства.Свойство("ТаблицаДокументовДляИзменения")
		И ДополнительныеСвойства.ТаблицаДокументовДляИзменения.Количество() > 0 Тогда
		РасчетыПроведениеДокументов.ОбработатьТаблицуДокументовДляИзмененияПриОплате(ДополнительныеСвойства, Отказ);
	КонецЕсли;
	// Конец Взаиморасчеты
	
	// Контроль возникновения отрицательного остатка.
	Документы.ПоступлениеНаСчет.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
	// Подчиненный счет-фактура
	Если Не Отказ Тогда
		СчетаФактурыУНФ.ОтменитьПроведениеПодчиненногоСчетаФактуры(Ссылка, Номер, Дата, ДополнительныеСвойства, Ложь);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СчетаФактурыУНФ.ПриЗаписиДокументаОснованияСчетаФактуры(Ссылка, ДополнительныеСвойства, Ложь);
	
КонецПроцедуры

// Процедура - обработчик события При копировании.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	НомерЧекаККМ = 0;
	Телефон = "";
	АдресЭП = "";

КонецПроцедуры // ПриКопировании()

#КонецОбласти

#Область ПрочиеРасчеты

// Процедура заполнения документа на основании договора кредита (займа).
//
// Параметры:
//	ДокументСсылкаДоговорКредитаИЗайма - ДокументСсылка.ДоговорКредитаИЗайма - условия получения кредита (выдачи займа).
//	Сумма - Число - сумма документа. Заполняется, когда процедура вызывается из формы документа.
//	
Процедура ЗаполнитьПоДоговоруКредитаИЗайма(ДокументСсылкаДоговорКредитаИЗайма, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаДоговорКредитаИЗайма);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()))+
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
		|	КОНЕЦ КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	&Ссылка КАК ДоговорКредитаЗайма,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ДоговорКредитаИЗайма КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе
		
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()))+
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
		|	КОНЕЦ КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	&Ссылка КАК ДоговорКредитаЗайма,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ДоговорКредитаИЗайма КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		Если ДокументСсылкаДоговорКредитаИЗайма.ВидДоговора = Перечисления.ВидыДоговоровКредитаИЗайма.КредитПолученный Тогда
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Иначе
			СуммаДокумента = 0;
		КонецЕсли;
		
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

// Процедура заполнения документа на основании договора кредита (займа).
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ДоговорКредитаИЗайма - условия получения кредита (выдачи займа).
//	Сумма - Число - сумма документа. Заполняется, когда процедура вызывается из формы документа.
//	
Процедура ЗаполнитьПоНачисленияПоКредитамИЗаймам(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Документ);
		Запрос.УстановитьПараметр("Сотрудник", ДанныеЗаполнения.Сотрудник);
		Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Контрагент);
		Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДанныеЗаполнения.ДоговорКредитаЗайма);
		Запрос.УстановитьПараметр("ВалютаРасчетов", ДанныеЗаполнения.ВалютаРасчетов);
		
		Если ДанныеЗаполнения.Документ.ВидОперации = Перечисления.ВидыОперацийНачисленияПоКредитамИЗаймам.НачисленияПоКредитам Тогда
			ВызватьИсключение НСтр("ru = 'Поступление на счет можно вводить на основании начисления по кредитам только с операцией ""Начисления по займам сотрудникам""!'");
		КонецЕсли;
	ИначеЕсли ДанныеЗаполнения.Начисления.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Сотрудник", ДанныеЗаполнения.Начисления[0].Сотрудник);
		Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Начисления[0].Контрагент);
		Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДанныеЗаполнения.Начисления[0].ДоговорКредитаЗайма);
		Запрос.УстановитьПараметр("ВалютаРасчетов", ДанныеЗаполнения.Начисления[0].ВалютаРасчетов);
		
		Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийНачисленияПоКредитамИЗаймам.НачисленияПоКредитам Тогда
			ВызватьИсключение НСтр("ru = 'Поступление на счет можно вводить на основании начисления по кредитам только с операцией ""Начисления по займам сотрудникам""!'");
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()))+
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
	|	ТаблицаДокумента.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ТаблицаДокумента.ТипСуммы КАК ТипСуммы,
	|	ТаблицаДокумента.Сумма КАК СуммаПлатежа,
	|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	|ИЗ
	|	Документ.НачисленияПоКредитамИЗаймам.Начисления КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
	|		ПО (ТаблицаДокумента.Ссылка.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ДоговорКредитаЗайма = &ДоговорКредитаЗайма
	|	И ТаблицаДокумента.ВалютаРасчетов = &ВалютаРасчетов
	|	И ТаблицаДокумента.Контрагент = &Контрагент
	|	И ТаблицаДокумента.Сотрудник = &Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьАналитику(Основание = Неопределено)
	
	Если Основание <> Неопределено Тогда
		Аналитика = ДвижениеДенежныхСредствСервер.АналитикаДокументаДляДвиженияДенежныхСредств(Основание);
		Проект = Аналитика.Проект;
		ПодразделениеЗатраты = Аналитика.Подразделение;
	КонецЕсли;
	
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Заказ) Тогда
			Аналитика = ДвижениеДенежныхСредствСервер.АналитикаДокументаДляДвиженияДенежныхСредств(СтрокаРасшифровки.Заказ);
			СтрокаРасшифровки.Проект = Аналитика.Проект;
			СтрокаРасшифровки.Подразделение = Аналитика.Подразделение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
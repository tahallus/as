#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(БанковскийСчет)
	|	И ВЫБОР КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя) 
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты) 
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика) ТОГДА ЗначениеРазрешено(Контрагент)
	|	ИНАЧЕ ИСТИНА КОНЕЦ ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйИнтерфейс

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДенежныеСредства(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПоступлениеДенежныхСредств", НСтр("ru = 'Поступление денежных средств'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств);
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		Итог = ДокументСсылкаПоступлениеНаСчет.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Иначе
		Итог = 0;
	КонецЕсли;
	ОстатокСуммы = ДокументСсылкаПоступлениеНаСчет.СуммаДокумента - Итог;
	Запрос.УстановитьПараметр("ПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ОстатокСуммы", ОстатокСуммы);
	Запрос.УстановитьПараметр("УчетВалютныхОпераций", ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	&ПоступлениеДенежныхСредств КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные) КАК ТипДенежныхСредств,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	ТаблицаДокумента.БанковскийСчетСчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.АналитикаДДС КАК Аналитика,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента КАК ДоговорКонтрагента,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(&ОстатокСуммы) КАК СуммаВал,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаДляОстатка,
	|	СУММА(&ОстатокСуммы) КАК СуммаВалДляОстатка
	|ПОМЕСТИТЬ ВременнаяТаблицаДенежныеСредства
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|				И &ИспользуютсяПереводыВПути
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|				И &ИспользуютсяПереводыВПути)
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	&ПоступлениеДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * ТаблицаДокумента.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(&ОстатокСуммы),
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * ТаблицаДокумента.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(&ОстатокСуммы)
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.ВалютаДенежныхСредств
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&ПоступлениеДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ВЫРАЗИТЬ(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * ВременнаяТаблицаРасшифровкаПлатежа.КурсДокумента * КурсыВалютУчетаСрезПоследних.Кратность / (ВременнаяТаблицаРасшифровкаПлатежа.КратностьДокумента * КурсыВалютУчетаСрезПоследних.Курс) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	СУММА(ВЫРАЗИТЬ(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * ВременнаяТаблицаРасшифровкаПлатежа.КурсДокумента * КурсыВалютУчетаСрезПоследних.Кратность / (ВременнаяТаблицаРасшифровкаПлатежа.КратностьДокумента * КурсыВалютУчетаСрезПоследних.Курс) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма > (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма > (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОтрицательнаяКурсоваяРазница)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоложительнаяКурсоваяРазница)
	|	КОНЕЦ,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) - ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма - (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) - ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма - (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|	КОНЕЦ,
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = ТаблицаДокумента.ВалютаДенежныхСредств)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И ТаблицаДокумента.Ссылка.РасчетКурсовойРазницыПокупкаВалюты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&ПоступлениеДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|				И &ИспользуютсяПереводыВПути
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|				И &ИспользуютсяПереводыВПути)
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&ПоступлениеДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипДенежныхСредств,
	|	БанковскийСчетКасса,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаДенежныеСредства.Организация КАК Организация,
	|	ВременнаяТаблицаДенежныеСредства.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ВременнаяТаблицаДенежныеСредства.Валюта КАК Валюта
	|ИЗ
	|	ВременнаяТаблицаДенежныеСредства";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДенежныеСредства");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыДенежныеСредства(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТЗРезультатЗапроса = МассивРезультатов[НомерЗапроса].Выгрузить();
	Если ДокументСсылкаПоступлениеНаСчет.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты И ТЗРезультатЗапроса.Количество() > 1 Тогда
		ИтогСуммаУчета = 0;
		Для Каждого ТекущаяСтрока Из ТЗРезультатЗапроса Цикл
			Если ТекущаяСтрока.СуммаВал <> 0 Тогда // Исключаем курсовые разницы.
				ИтогСуммаУчета = ИтогСуммаУчета + ТекущаяСтрока.Сумма;
			КонецЕсли;
		КонецЦикла;
		Если ИтогСуммаУчета <> ДокументСсылкаПоступлениеНаСчет.СуммаУчета Тогда
			Дельта = ИтогСуммаУчета - ДокументСсылкаПоступлениеНаСчет.СуммаУчета;
			ТЗРезультатЗапроса.Сортировать("Сумма Убыв");
			ТЗРезультатЗапроса[0].Сумма = ТЗРезультатЗапроса[0].Сумма - Дельта;
			ТЗРезультатЗапроса.Сортировать("НомерСтроки Возр");
		КонецЕсли;
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредства", ТЗРезультатЗапроса);
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПодотчетниками(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПогашениеДолгаПодотчетника", НСтр("ru = 'Погашение долга подотчетника'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&ПогашениеДолгаПодотчетника КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.РасходСоСчета.ПустаяСсылка)
	|				ИЛИ ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.РасходИзКассы.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Ссылка.Документ
	|		ИНАЧЕ ТаблицаДокумента.Документ
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Ссылка.Подотчетник КАК Сотрудник,
	|	ТаблицаДокумента.Ссылка.Подотчетник.СчетРасчетовСПодотчетниками КАК СчетУчета,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаПлатежа) КАК СуммаВал,
	|	-СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаДляОстатка,
	|	-СУММА(ТаблицаДокумента.СуммаПлатежа) КАК СуммаВалДляОстатка
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПодотчетниками
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.Ссылка.Подотчетник,
	|	ТаблицаДокумента.Ссылка.Подотчетник.СчетРасчетовСПодотчетниками,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.РасходСоСчета.ПустаяСсылка)
	|				ИЛИ ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.РасходИзКассы.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Ссылка.Документ
	|		ИНАЧЕ ТаблицаДокумента.Документ
	|	КОНЕЦ,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВалютаДенежныхСредств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	Валюта,
	|	Документ,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Сотрудник КАК Сотрудник,
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Валюта КАК Валюта,
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Документ КАК Документ
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПодотчетниками";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПодотчетниками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПодотчетниками(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПодотчетниками", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПодотчетниками()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеАвансаПокупателя", "Возникновение аванса покупателя");
	Запрос.УстановитьПараметр("ПогашениеОбязательствПокупателя", "Погашение обязательств покупателя");
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Если ДокументСсылкаПоступлениеНаСчет.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя 
		Или ДокументСсылкаПоступлениеНаСчет.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации Тогда
		РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетам(СтруктураДополнительныеСвойства, ДокументСсылкаПоступлениеНаСчет, ,"БанковскийСчет, ВалютаДенежныхСредств");
		ПолучатьРеквизитыРасчетов = Истина;
	Иначе
		ЭтоРасчетыСПоставщиком = СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = Ложь;
		РасчетыПроведениеДокументов.СформироватьПустуюВременнуюТаблицуРасчетов(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства, Запрос.Параметры, "БанковскийСчет, ВалютаДенежныхСредств");
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = ЭтоРасчетыСПоставщиком;
		ПолучатьРеквизитыРасчетов = Ложь;
	КонецЕсли;
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПокупателями.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПокупателями.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПокупателями.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПокупателями.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПокупателями.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса, ПолучатьРеквизитыРасчетов);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПокупателями()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПогашениеАвансаПоставщику", НСтр("ru = 'Погашение аванса поставщику'"));
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПередПоставщиком", НСтр("ru = 'Возникновение обязательств перед поставщиком'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Если СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоДоставка Тогда
		
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоЗаказ = Ложь;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоВозвратОплаты = Ложь;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоЗаказНаряд = Ложь;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоКорректировка = Ложь;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоОтгрузка = Ложь;
		
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоОплата = Истина;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = Истина;
		
		РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетамОплатаДоставка(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства,, "БанковскийСчет, ВалютаДенежныхСредств");
		ПолучатьРеквизитыРасчетов = Истина;
		
		ТекстЗапросаБлокировки = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаРасчетыСПоставщиками.Организация КАК Организация,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Договор КАК Договор,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК Документ,
		|	ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ВременнаяТаблицаРасчетыСПоставщиками";
		
	Иначе
		Если ДокументСсылкаПоступлениеНаСчет.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПоставщика Тогда
			РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетам(СтруктураДополнительныеСвойства, ДокументСсылкаПоступлениеНаСчет, , "БанковскийСчет, ВалютаДенежныхСредств");
			ПолучатьРеквизитыРасчетов = Истина;
		Иначе
			ЭтоРасчетыСПоставщиком = СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком;
			СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = Истина;
			РасчетыПроведениеДокументов.СформироватьПустуюВременнуюТаблицуРасчетов(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства, Запрос.Параметры, "БанковскийСчет, ВалютаДенежныхСредств");
			СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = ЭтоРасчетыСПоставщиком;
			ПолучатьРеквизитыРасчетов = Ложь;
		КонецЕсли;
		
		ТекстЗапросаБлокировки = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаРасчетыСПоставщиками.Организация КАК Организация,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Контрагент КАК Контрагент,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Договор КАК Договор,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК Документ,
		|	ВременнаяТаблицаРасчетыСПоставщиками.Заказ КАК Заказ,
		|	ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ВременнаяТаблицаРасчетыСПоставщиками";
		
	КонецЕсли;
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст = ТекстЗапросаБлокировки;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПоставщиками(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса, ПолучатьРеквизитыРасчетов);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПоставщиками()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОтражениеДоходов", НСтр("ru = 'Отражение доходов'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("ВалютаУчета", СтруктураДополнительныеСвойства.ВалютаУчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Проект КАК Проект,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Корреспонденция КАК СчетУчета,
	|	ТаблицаДокумента.АналитикаДоходовИРасходов КАК Аналитика,
	|	&ОтражениеДоходов КАК СодержаниеПроводки,
	|	ТаблицаДокумента.Сумма КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	ТаблицаДокумента.Сумма КАК Сумма

	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	(ТаблицаДокумента.КорреспонденцияТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Доходы)
	|			ИЛИ ТаблицаДокумента.КорреспонденцияТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеДоходы))
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ

	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницДенежныеСредства КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ

	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ

	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ

	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыПоКредитамИЗаймам КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницПрочиеРасчеты КАК ТаблицаДокумента
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,
	|	2,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|			КОГДА ТаблицаДокумента.Сумма < ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) - ТаблицаДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ ,
	|	ВЫБОР
	|			КОГДА ТаблицаДокумента.Сумма > ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|				ТОГДА ТаблицаДокумента.Сумма - ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = ТаблицаДокумента.ВалютаДенежныхСредств)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И ТаблицаДокумента.Ссылка.РасчетКурсовойРазницыПокупкаВалюты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаДоходыИРасходы = РегистрыНакопления.ДоходыИРасходы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", ТаблицаДоходыИРасходы);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Активность = Истина;
	КонецЦикла; 
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Оприходование денежных средств с произвольного счета'"));
	Запрос.УстановитьПараметр("СодержаниеВзносНаличных", НСтр("ru = 'Оприходование денежных средств с произвольной кассы'"));
	Запрос.УстановитьПараметр("ВозвратНалога", НСтр("ru = 'Возврат налога'"));
	Запрос.УстановитьПараметр("СодержаниеПокупкаВалюты", НСтр("ru = 'Покупка валюты'"));
	Запрос.УстановитьПараметр("СодержаниеОплатаОтБанкаЭквайрера", НСтр("ru = 'Оплата от банка-эквайрера'"));
	Запрос.УстановитьПараметр("СодержаниеКомиссияБанкаЭквайрера", НСтр("ru = 'Комиссия банка-эквайрера'"));
	Запрос.УстановитьПараметр("СодержаниеОплатаОтБанка", НСтр("ru = 'Оплата от банка'"));
	Запрос.УстановитьПараметр("СодержаниеКомиссияБанка", НСтр("ru = 'Комиссия банка'"));
	Запрос.УстановитьПараметр("СодержаниеЛичныеСредства", НСтр("ru = 'Перевод собственных денежных средств'"));
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	Запрос.УстановитьПараметр("ВалютаУчета", СтруктураДополнительныеСвойства.ВалютаУчета);
	
	Запрос.УстановитьПараметр("ЭтоДоставка", СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоДоставка);
		
	Запрос.Текст = ТекстЗапросаТаблицаУправленческий();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

Функция ТекстЗапросаТаблицаУправленческий()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаДокумента.БанковскийСчетСчетУчета КАК СчетДт,
	|	ТаблицаДокумента.Корреспонденция КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|				ТОГДА &СодержаниеПокупкаВалюты
	|			КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|				ТОГДА &СодержаниеВзносНаличных
	|			КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|				ТОГДА &СодержаниеЛичныеСредства
	|			ИНАЧЕ &Содержание
	|		КОНЕЦ КАК СТРОКА(100)) КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|				И &ИспользуютсяПереводыВПути
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|				И &ИспользуютсяПереводыВПути)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.ВидНалогаСчетУчетаКВозмещению,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчетСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидНалогаСчетУчетаКВозмещению.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчетСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидНалогаСчетУчетаКВозмещению.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ВЫРАЗИТЬ(&ВозвратНалога КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ТаблицаДокумента
	|ГДЕ
	|	НЕ &ЭтоДоставка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницДенежныеСредства КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	10,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчетаЭквайринг,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаЭквайринг.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаЭквайринг.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
	|			ТОГДА ВЫРАЗИТЬ(&СодержаниеОплатаОтБанкаЭквайрера КАК СТРОКА(100))
	|		ИНАЧЕ ВЫРАЗИТЬ(&СодержаниеОплатаОтБанка КАК СТРОКА(100))
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаДанныеЭквайринговыхОпераций КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам))
	|	И ТаблицаДокумента.СуммаРасчетов <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	11,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетЗатратЭквайринг,
	|	ТаблицаДокумента.СчетУчетаЭквайринг,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетЗатратЭквайринг.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаЭквайринг.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетЗатратЭквайринг.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаРасчетовКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчетаЭквайринг.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаРасчетовКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СуммаУчетаКомиссии,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
	|			ТОГДА ВЫРАЗИТЬ(&СодержаниеКомиссияБанкаЭквайрера КАК СТРОКА(100))
	|		ИНАЧЕ ВЫРАЗИТЬ(&СодержаниеКомиссияБанка КАК СТРОКА(100))
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаДанныеЭквайринговыхОпераций КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам))
	|	И ТаблицаДокумента.СуммаРасчетовКомиссии <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	12,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	13,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыПоКредитамИЗаймам КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	14,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницПрочиеРасчеты КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	15,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаПрочиеРасчеты КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	16,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ТаблицаДокумента.БанковскийСчетСчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.БанковскийСчетСчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|				И ТаблицаДокумента.БанковскийСчетСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма > (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|				И ТаблицаДокумента.БанковскийСчетСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) - ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма - (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = ТаблицаДокумента.ВалютаДенежныхСредств)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И ТаблицаДокумента.Ссылка.РасчетКурсовойРазницыПокупкаВалюты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	17,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокументаШапка.СчетУчетаАвансовПоставщику,
	|	ТаблицаДокументаШапка.Корреспонденция,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ТаблицаДокументаШапка
	|ГДЕ
	|	&ЭтоДоставка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	18,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета,
	|	ТаблицаДокумента.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.СчетУчета.Валютный
	|			ТОГДА -ТаблицаДокумента.УдержаноАгентомВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА -ТаблицаДокумента.УдержаноАгентомВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	-ТаблицаДокумента.УдержаноАгентом,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаПрочиеРасчеты КАК ТаблицаДокумента
	|ГДЕ
	|	&ЭтоДоставка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
КонецФункции

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств);
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		Итог = ДокументСсылкаПоступлениеНаСчет.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Иначе
		Итог = 0;
	КонецЕсли;
	ОстатокСуммы = ДокументСсылкаПоступлениеНаСчет.СуммаДокумента - Итог;
	Запрос.УстановитьПараметр("ПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ОстатокСуммы", ОстатокСуммы);
	Запрос.УстановитьПараметр("УчетВалютныхОпераций", ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"));
	
	Запрос.УстановитьПараметр("ЭтоДоставка", СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоДоставка);
	
	Запрос.Текст = ТекстЗапросаСформироватьТаблицаДоходыИРасходыКассовыйМетод();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗРезультатЗапроса = РезультатЗапроса.Выгрузить();
	Если ДокументСсылкаПоступлениеНаСчет.ВидОперации = Перечисления.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты И ТЗРезультатЗапроса.Количество() > 1 Тогда
		ИтогСуммаУчета = ТЗРезультатЗапроса.Итог("СуммаДоходов");
		Если ИтогСуммаУчета <> ДокументСсылкаПоступлениеНаСчет.СуммаУчета Тогда
			Дельта = ИтогСуммаУчета - ДокументСсылкаПоступлениеНаСчет.СуммаУчета;
			ТЗРезультатЗапроса.Сортировать("СуммаДоходов Убыв");
			ТЗРезультатЗапроса[0].СуммаДоходов = ТЗРезультатЗапроса[0].СуммаДоходов - Дельта;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", ТЗРезультатЗапроса);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

Функция ТекстЗапросаСформироватьТаблицаДоходыИРасходыКассовыйМетод()
	
	 ЗапросТекст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.СуммаУчета КАК СуммаДоходов,
	|	0 КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации))
	|	И (ТаблицаДокумента.ПризнакАванса
	|			ИЛИ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	Таблица.СуммаДоходов,
	|	0
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|ГДЕ
	|	Таблица.СуммаДоходов > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ТаблицаДокумента.Статья,
	|	ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)),
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником))
	|	И &ОстатокСуммы > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ТаблицаДокумента.Статья,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)),
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником))
	|	И &ПлатежныйКалендарь
	|	И ТаблицаДокумента.СуммаПлатежа > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ТаблицаДокумента.Статья,
	|	ВЫРАЗИТЬ(&ОстатокСуммы * ТаблицаДокумента.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Кратность) КАК ЧИСЛО(15, 2)),
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И &ОстатокСуммы > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ТаблицаДокумента.Статья,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * ТаблицаДокумента.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (ТаблицаДокумента.Кратность * КурсыВалютУчетаСрезПоследних.Курс) КАК ЧИСЛО(15, 2)),
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И &ПлатежныйКалендарь
	|	И ТаблицаДокумента.СуммаПлатежа > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	0,
	|	-ТаблицаДокумента.СуммаУчета
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|	И (ТаблицаДокумента.ПризнакАванса
	|			ИЛИ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	0,
	|	-Таблица.СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|ГДЕ
	|	Таблица.СуммаРасходов > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) - ТаблицаДокумента.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма > (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ТаблицаДокумента.Сумма - (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = ТаблицаДокумента.ВалютаДенежныхСредств)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И ТаблицаДокумента.Ссылка.РасчетКурсовойРазницыПокупкаВалюты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДокумента.СтатьяДДСДоставка = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.СтатьяДДСДоставка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ,
	|	0,
	|	ТаблицаДокумента.УдержаноАгентом
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И &ЭтоДоставка";
	
	Возврат ЗапросТекст;
	
КонецФункции

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
		
	Запрос.УстановитьПараметр("ЭтоДоставка", СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоДоставка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.СуммаУчета КАК СуммаДоходов,
	|	0 КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации))
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	0,
	|	-ТаблицаДокумента.СуммаУчета
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|	И НЕ &ЭтоДоставка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	&Ссылка,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДокумента.СтатьяДДСДоставка = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.СтатьяДДСДоставка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ,
	|	0,
	|	ТаблицаДокумента.УдержаноАгентом
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И &ЭтоДоставка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|	ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации))
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДоходыИРасходыОтложенные");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Документ", "Документ");
	Блокировка.Заблокировать();
	
	ТаблицаСуммыКСписанию = РезультатЗапроса.Выгрузить();
	
	// Формирование таблицы с остатками.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка) КАК Статья,
	|	0 КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток) КАК СуммаДоходовОстаток,
	|	-СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток) КАК СуммаРасходовОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|		ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|		ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток КАК СуммаДоходовОстаток,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток КАК СуммаРасходовОстаток
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные.Остатки(
	|				,
	|				Организация = &Организация
	|					И Документ В
	|						(ВЫБРАТЬ
	|							ТаблицаДокумента.Документ
	|						ИЗ
	|							ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|						ГДЕ
	|							(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|								ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|								ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации)))) КАК ДоходыИРасходыОтложенныеОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Организация,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Документ,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные КАК ДвиженияДокументаДоходыИРасходыОтложенные
	|	ГДЕ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Регистратор = &Ссылка) КАК ДоходыИРасходыОтложенныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыОтложенныеОстатки.Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ";
	
	ТаблицаСуммыОстатки = Запрос.Выполнить().Выгрузить();

	ТаблицаСуммыОстатки.Индексы.Добавить("Документ");
	
	// Расчет сумм списания.
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СтрокаСуммыОстатки.СуммаДоходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья; 
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаДоходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья; 
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья"; 
	
	ТаблицаСуммыКСписанию = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СтрокаСуммыОстатки.СуммаРасходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаРасходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование временной таблицы с суммами, статьями и направлениями
	// деятельности. Понадобится для формирования движений по доходам и расходам
	// кассовым методом.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаДоходов КАК СуммаДоходов,
	|	Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	(Таблица.СуммаДоходов > 0
	|			ИЛИ Таблица.СуммаРасходов > 0)";
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаСуммыОстатки);
	
	Запрос.Выполнить();
	
	// Формирование таблицы для записи в регистр.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаДоходов КАК СуммаДоходов,
	|	- Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица";

	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()  

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыПоНалогам(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ОрганизацияДляРегОтчетности", СтруктураДополнительныеСвойства.ДляПроведения.ОрганизацияДляРегОтчетности);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВозвратНалога", НСтр("ru = 'Возврат налога'"));
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&ОрганизацияДляРегОтчетности КАК Организация,
	|	ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютРасчетов.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ТаблицаДокумента.ВидНалога.СчетУчета КАК СчетУчета,
	|	ВЫРАЗИТЬ(&ВозвратНалога КАК СТРОКА(100)) КАК СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта = &ВалютаУчета) КАК КурсыВалютУчетаСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.ВалютаДенежныхСредств = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоНалогам", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыПоНалогам()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьПлатежныйКалендарь", Константы.ФункциональнаяОпцияПлатежныйКалендарь.Получить());
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	Запрос.УстановитьПараметр("БанковскийСчетКасса", СтруктураДополнительныеСвойства.ДляПроведения.Ссылка.БанковскийСчет);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные) КАК ТипДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден) КАК СтатусУтвержденияПлатежа,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря КАК СчетНаОплату,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			ИНАЧЕ ТаблицаДокумента.СуммаРасчетов
	|		КОНЕЦ) КАК СуммаОплаты
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.СпособЗачета = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Вручную)
	|	И (ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|			ИЛИ &ИспользуютсяПереводыВПути)
	|	И (ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|			ИЛИ &ИспользуютсяПереводыВПути)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.Статья
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.БанковскийСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			ИНАЧЕ ТаблицаДокумента.СуммаРасчетов
	|		КОНЕЦ)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.СпособЗачета = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Авто)
	|	И (ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|			ИЛИ &ИспользуютсяПереводыВПути)
	|	И (ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|			ИЛИ &ИспользуютсяПереводыВПути)
	|	И ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.Статья
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Период,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	&БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаПлатежа
	|		ИНАЧЕ ТаблицаДокумента.Договор.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ВалютаПлатежа = ТаблицаДокумента.Договор.ВалютаРасчетов
	|				ТОГДА ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|						ТОГДА ТаблицаДокумента.Сумма
	|					ИНАЧЕ ТаблицаДокумента.СуммаВал
	|				КОНЕЦ
	|		КОНЕЦ)
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.СпособЗачета = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Авто)
	|	И ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПокупателя)
	|	И ТаблицаДокумента.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаПлатежа
	|		ИНАЧЕ ТаблицаДокумента.Договор.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.Заказ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаДокумента.СуммаДокумента
	|ИЗ
	|	Документ.ПоступлениеНаСчет КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(ЕСТЬNULL(ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки, 0)) КАК Количество
	|		ИЗ
	|			ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа) КАК ВложенныйЗапрос
	|		ПО (ИСТИНА)
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.Ссылка = &Ссылка
	|	И ВложенныйЗапрос.Количество = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

// Формирует таблицу значений, содержащую данные для проведения по регистру "ОплатаДокументов".
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаОплатаДокументов(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	МассивДоступныхОпераций = Новый Массив;
	МассивДоступныхОпераций.Добавить(Перечисления.ВидыОперацийПоступлениеНаСчет.ОтПокупателя);
	МассивДоступныхОпераций.Добавить(Перечисления.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации);
	
	РасчетыПроведениеДокументов.СформироватьТаблицаОплатаДокументовДенежныеДокументы(ДокументСсылка, СтруктураДополнительныеСвойства, МассивДоступныхОпераций);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗакупкиПоставщиковДляКУДиР(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("ДатаДокумента", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Период,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК ДатаДокумента,
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ОрганизацияВНУ КАК Организация,
	|	&Ссылка КАК ДенежныйДокумент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Документ КАК ТоварныйДокумент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.УчитыватьВНУ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СтавкаНДС.Ставка КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоТоварыКРеализации,
	|	- СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВал,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов КАК Валюта
	|ПОМЕСТИТЬ ВременнаяТаблицаЗакупкиПоставщиковДляКУДиР
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|	И ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|	И НЕ ВременнаяТаблицаРасшифровкаПлатежа.ПризнакАванса
	|	И ВременнаяТаблицаРасшифровкаПлатежа.ОрганизацияВНУ.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ОрганизацияВНУ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.УчитыватьВНУ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СтавкаНДС.Ставка,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТоварныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент
	|ПОМЕСТИТЬ ВТТоварныеДокументы
	|ИЗ
	|	ВременнаяТаблицаЗакупкиПоставщиковДляКУДиР КАК ВТЗакупкиПоставщиковДляКУДиР
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная КАК ДокументРасходнаяНакладная
	|		ПО (ДокументРасходнаяНакладная.Ссылка = ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПримененияЕНВД.СрезПоследних(&ДатаДокумента, ) КАК ПримененияЕНВД
	|		ПО ВТЗакупкиПоставщиковДляКУДиР.Организация = ПримененияЕНВД.Организация
	|			И (ПримененияЕНВД.СтруктурнаяЕдиница = ДокументРасходнаяНакладная.СтруктурнаяЕдиница)
	|ГДЕ
	|	(ДокументРасходнаяНакладная.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ ЕСТЬNULL(ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД, ЛОЖЬ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварныеДокументы.ТоварныйДокумент,
	|	ЗакупкиДляКУДиР.Номенклатура,
	|	ЗакупкиДляКУДиР.ЭтоТоварыКРеализации,
	|	СУММА(ЗакупкиДляКУДиР.СуммаВал) КАК Сумма,
	|	СУММА(ЗакупкиДляКУДиР.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТУчтенныеТовары
	|ИЗ
	|	РегистрНакопления.ЗакупкиДляКУДиР КАК ЗакупкиДляКУДиР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварныеДокументы КАК ВТТоварныеДокументы
	|		ПО (ВТТоварныеДокументы.ТоварныйДокумент = ЗакупкиДляКУДиР.ТоварныйДокумент)
	|			И (ЗакупкиДляКУДиР.Регистратор <> &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТоварныеДокументы.ТоварныйДокумент,
	|	ЗакупкиДляКУДиР.Номенклатура,
	|	ЗакупкиДляКУДиР.ЭтоТоварыКРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗакупкиПоставщиковДляКУДиР.Период,
	|	ВТЗакупкиПоставщиковДляКУДиР.ДатаДокумента,
	|	ВТЗакупкиПоставщиковДляКУДиР.НомерСтроки,
	|	ВТЗакупкиПоставщиковДляКУДиР.Организация,
	|	ВТЗакупкиПоставщиковДляКУДиР.ДенежныйДокумент,
	|	ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент,
	|	Значение(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ВТЗакупкиПоставщиковДляКУДиР.УчитыватьВНУ,
	|	ВТЗакупкиПоставщиковДляКУДиР.ЭтоТоварыКРеализации,
	|	ВТЗакупкиПоставщиковДляКУДиР.СуммаВал,
	|	ВТЗакупкиПоставщиковДляКУДиР.СуммаВал КАК Сумма,
	|	ВТЗакупкиПоставщиковДляКУДиР.СтавкаНДС,
	|	0 КАК Количество,
	|	0 КАК СуммаНДС
	|ИЗ
	|	ВременнаяТаблицаЗакупкиПоставщиковДляКУДиР КАК ВТЗакупкиПоставщиковДляКУДиР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварныеДокументы.ТоварныйДокумент КАК ТоварныйДокумент,
	|	Закупки.Номенклатура КАК Номенклатура,
	|	Закупки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(Закупки.Количество) КАК Количество,
	|	СУММА(Закупки.Всего) КАК Всего,
	|	ЕСТЬNULL(Закупки.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	НЕ Закупки.ТоварыДляПроизводства КАК ЭтоТоварыКРеализации
	|ПОМЕСТИТЬ ВТЗакупки
	|ИЗ
	|	ВТТоварныеДокументы КАК ВТТоварныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Запасы КАК Закупки
	|		ПО (Закупки.Ссылка = ВТТоварныеДокументы.ТоварныйДокумент)
	|			И (Закупки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТоварныеДокументы.ТоварныйДокумент,
	|	Закупки.Номенклатура,
	|	Закупки.ЕдиницаИзмерения,
	|	ЕСТЬNULL(Закупки.СтавкаНДС.Ставка, 0),
	|	Закупки.ТоварыДляПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Закупки.ТоварныйДокумент КАК ТоварныйДокумент,
	|	Закупки.Номенклатура КАК Номенклатура,
	|	- ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Закупки.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|			ТОГДА Закупки.Количество * Закупки.ЕдиницаИзмерения.Коэффициент - ЕСТЬNULL(ВТУчтенныеТовары.Количество, 0)
	|		ИНАЧЕ Закупки.Количество - ЕСТЬNULL(ВТУчтенныеТовары.Количество, 0)
	|	КОНЕЦ КАК Количество,
	|	- (Закупки.Всего - ЕСТЬNULL(ВТУчтенныеТовары.Сумма, 0)) КАК Сумма,
	|	Закупки.СтавкаНДС КАК СтавкаНДС,
	|	Закупки.ЭтоТоварыКРеализации КАК ЭтоТоварыКРеализации
	|ИЗ
	|	ВТЗакупки КАК Закупки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчтенныеТовары КАК ВТУчтенныеТовары
	|		ПО (ВТУчтенныеТовары.ТоварныйДокумент = Закупки.ТоварныйДокумент)
	|			И (ВТУчтенныеТовары.Номенклатура = Закупки.Номенклатура)
	|ГДЕ
	|	Закупки.Всего - ЕСТЬNULL(ВТУчтенныеТовары.Сумма, 0) <> 0
	|ИТОГИ ПО
	|	ТоварныйДокумент;";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаОплаты = РезультатЗапроса[3].Выгрузить();
	ТаблицаРезультат = ТаблицаОплаты.Скопировать(Новый Массив());
	ВыборкаДокументовСТоварами = РезультатЗапроса[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	УчетВалюты = ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций");
	НацВалюта = Константы.НациональнаяВалюта.Получить();
	ВалютаДокумента = ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств;
	
	Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
		ТекущийКурс = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, ДокументСсылкаПоступлениеНаСчет.Дата);
	КонецЕсли;
	
	Пока ВыборкаДокументовСТоварами.Следующий() Цикл
		СвободныеОплаты = ТаблицаОплаты.НайтиСтроки(Новый Структура("ТоварныйДокумент", ВыборкаДокументовСТоварами.ТоварныйДокумент));
		ВыборкаЗаписей = ВыборкаДокументовСТоварами.Выбрать();
		СуммаЗаписи = 0;
		Для Каждого ДокументОплаты Из СвободныеОплаты Цикл
			Если СуммаЗаписи > 0 Тогда
				НовСтр = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаЗаписей);
				ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты,,"ЭтоТоварыКРеализации");
				Если ДокументОплаты.Сумма >= СуммаЗаписи Тогда
					НовСтр.Сумма = СуммаЗаписи;
				Иначе
					НовСтр.Сумма = ДокументОплаты.Сумма;
				КонецЕсли;
				НовСтр.Количество = ?(ВыборкаЗаписей.Сумма = 0, 0, ВыборкаЗаписей.Количество*НовСтр.Сумма/ВыборкаЗаписей.Сумма);
				ДокументОплаты.Сумма = ДокументОплаты.Сумма - НовСтр.Сумма;
				НовСтр.СуммаВал = НовСтр.Сумма;
				
				Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
					НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
				КонецЕсли;
				НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ВыборкаЗаписей.СтавкаНДС)/100);
				НовСтр.Номенклатура = ВыборкаЗаписей.Номенклатура;
				НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
				СуммаЗаписи = СуммаЗаписи - НовСтр.Сумма - НовСтр.СуммаНДС;
				Если СуммаЗаписи > 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Пока ДокументОплаты.Сумма <> 0 И ВыборкаЗаписей.Следующий() Цикл
				СуммаЗаписи = ВыборкаЗаписей.Сумма;
				НовСтр = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаЗаписей);
				ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты,,"ЭтоТоварыКРеализации");
				Если ДокументОплаты.Сумма <= ВыборкаЗаписей.Сумма Тогда
					НовСтр.Сумма = ВыборкаЗаписей.Сумма;
					НовСтр.Количество =  ВыборкаЗаписей.Количество;
				Иначе
					НовСтр.Сумма = ДокументОплаты.Сумма;
					НовСтр.Количество =  ВыборкаЗаписей.Количество*ДокументОплаты.Сумма/ВыборкаЗаписей.Сумма;
				КонецЕсли;
				ДокументОплаты.Сумма = ДокументОплаты.Сумма - НовСтр.Сумма;
				НовСтр.СуммаВал = НовСтр.Сумма;
				
				Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
					НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
				КонецЕсли;
				НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ВыборкаЗаписей.СтавкаНДС)/100);
				НовСтр.Номенклатура = ВыборкаЗаписей.Номенклатура;
				НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
				СуммаЗаписи = СуммаЗаписи - НовСтр.Сумма - НовСтр.СуммаНДС;
			КонецЦикла;
			Если ДокументОплаты.Сумма <> 0 Тогда
				НовСтр = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты);
				ДокументОплаты.Сумма = 0;
				НовСтр.СуммаВал = НовСтр.Сумма;
				Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
					НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
				КонецЕсли;
				НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ДокументОплаты.СтавкаНДС)/100);
				НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗакупкиДляКУДиР", ТаблицаРезультат);
	
КонецПроцедуры // СформироватьТаблицаЗакупкиПоставщиковДляКУДиР()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДвиженияДенежныхСредств(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	
	Запрос.УстановитьПараметр("ВалютаУчета", УправлениеНебольшойФирмойПовтИсп.ПолучитьВалютуУчета());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств);
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		Итог = ДокументСсылкаПоступлениеНаСчет.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Иначе
		Итог = 0;
	КонецЕсли;
	ОстатокСуммы = ДокументСсылкаПоступлениеНаСчет.СуммаДокумента - Итог;
	Запрос.УстановитьПараметр("ПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ОстатокСуммы", ОстатокСуммы);
	Запрос.УстановитьПараметр("УчетВалютныхОпераций", ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные) КАК ТипДенежныхСредств,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.АналитикаДДС КАК Аналитика,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	ТаблицаДокумента.Проект КАК Проект,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаПриход,
	|	СУММА(&ОстатокСуммы) КАК СуммаПриходВал,
	|	0 КАК СуммаРасход,
	|	0 КАК СуммаРасходВал
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|				И &ИспользуютсяПереводыВПути
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|				И &ИспользуютсяПереводыВПути)
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * ТаблицаДокумента.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(&ОстатокСуммы),
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение,
	|	СУММА(ВЫРАЗИТЬ(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * ВременнаяТаблицаРасшифровкаПлатежа.КурсДокумента * КурсыВалютУчетаСрезПоследних.Кратность / (ВременнаяТаблицаРасшифровкаПлатежа.КратностьДокумента * КурсыВалютУчетаСрезПоследних.Курс) КАК ЧИСЛО(15, 2))),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма > (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОтрицательнаяКурсоваяРазница)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоложительнаяКурсоваяРазница)
	|	КОНЕЦ,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма < (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) - ТаблицаДокумента.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Сумма > (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) - ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма - (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаВал * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)))
	|	КОНЕЦ,
	|	0
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = ТаблицаДокумента.ВалютаДенежныхСредств)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|	И ТаблицаДокумента.Ссылка.РасчетКурсовойРазницыПокупкаВалюты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|				И &ИспользуютсяПереводыВПути
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|				И &ИспользуютсяПереводыВПути)
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияДенежныхСредств", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

Функция ПолучитьТекстЗапросаИнициализироватьДанные()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта В (&ВалютаУчета, &ВалютаДС, &ВалютаДоговораКредитаЗайма)) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам))
	|				И ТаблицаДокумента.Ссылка.ПоложениеНастроекНалоговогоУчета = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ТаблицаДокумента.УчитыватьВНУ
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.УчитыватьВНУ
	|	КОНЕЦ КАК УчитыватьВНУ,
	|	ТаблицаДокумента.Ссылка.Организация КАК ОрганизацияВНУ,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.ЭтоДоговорОбслуживания
	|				И ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетРасходовПоДоговорамОбслуживания,
	|	ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности КАК ДоговорОбслуживанияНаправлениеДеятельности,
	|	ТаблицаДокумента.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ТаблицаДокумента.Ссылка.БанковскийСчет КАК БанковскийСчет,
	|	ТаблицаДокумента.Ссылка.БанковскийСчет.СчетУчета КАК БанковскийСчетКассаСчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиДДС
	|				ИЛИ ТаблицаДокумента.СтатьяДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|				ИЛИ (ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
	|					И &КонтрольОперацийЭквайринга)
	|			ТОГДА ТаблицаДокумента.Ссылка.Статья
	|		ИНАЧЕ ТаблицаДокумента.СтатьяДДС
	|	КОНЕЦ КАК Статья,
	|	ТаблицаДокумента.Ссылка.Корреспонденция КАК Корреспонденция,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И (ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|					ИЛИ ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации))
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПоставщика)
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА (ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПокупателя)
	|				ИЛИ ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтНашейОрганизации))
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДокумента.Заказ
	|	КОНЕЦ КАК Заказ,
	|	ТаблицаДокумента.ПризнакАванса КАК ПризнакАванса,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА &ВалютаУчета = &ВалютаДС
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		КОГДА &ВалютаУчета = ТаблицаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		КОГДА &ВалютаУчета = &НациональнаяВалюта
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУчета,
	|	ТаблицаДокумента.СуммаРасчетов КАК СуммаРасчетов,
	|	ТаблицаДокумента.СуммаПлатежа КАК СуммаПлатежа,
	|	ТаблицаДокумента.СуммаРасчетов + ТаблицаДокумента.СуммаРасчетовКомиссии КАК СуммаРасчетовДляЭквайринга,
	|	ТаблицаДокумента.СуммаПлатежа + ТаблицаДокумента.СуммаПлатежаКомиссии КАК СуммаПлатежаДляЭквайринга,
	|	ВЫРАЗИТЬ((ТаблицаДокумента.СуммаПлатежа + ТаблицаДокумента.СуммаПлатежаКомиссии) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаУчетаДляЭквайринга,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежаКомиссии * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаУчетаКомиссии,
	|	ТаблицаДокумента.СуммаПлатежаКомиссии КАК СуммаПлатежаКомиссии,
	|	ТаблицаДокумента.СуммаРасчетовКомиссии КАК СуммаРасчетовКомиссии,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПоступлениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПоступлениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПеремещениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПеремещениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТаблицаДокумента.СчетНаОплату.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.СчетНаОплату
	|		КОГДА ТаблицаДокумента.Заказ.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.СчетНаОплату КАК СчетНаОплату,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал.СчетЗатрат КАК СчетЗатратЭквайринг,
	|	ТаблицаДокумента.Ссылка.ЭквайринговыйТерминал.СчетУчета КАК СчетУчетаЭквайринг,
	|	ТаблицаДокумента.ТипСуммы КАК ТипСуммы,
	|	ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ТаблицаДокумента.Ссылка.Подотчетник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма.СчетУчета
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма.СчетУчетаПроцентов
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма.СчетУчетаКомиссии
	|	КОНЕЦ КАК СчетУчетаПоТипуСуммы,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ""Оплата основного долга по займу""
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ""Оплата процентов по займу""
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ""Оплата комиссии по займу""
	|	КОНЕЦ КАК СодержаниеПоТипуСуммы,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|			ТОГДА ТаблицаДокумента.Ссылка.Подотчетник
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ТОГДА ТаблицаДокумента.Ссылка.Корреспонденция
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ТаблицаДокумента.Ссылка.БанковскийСчет
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
	|			ТОГДА ТаблицаДокумента.Ссылка.Подотчетник
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|			ТОГДА ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|			ТОГДА ТаблицаДокумента.Ссылка.ВидНалога
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|			ТОГДА ТаблицаДокумента.Ссылка.Касса
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|			ТОГДА ТаблицаДокумента.Ссылка.СчетКонтрагента
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Контрагент
	|	КОНЕЦ КАК АналитикаДДС,
	|	ТаблицаДокумента.Ссылка.Курс КАК КурсДокумента,
	|	ТаблицаДокумента.Ссылка.Кратность КАК КратностьДокумента,
	|	ТаблицаДокумента.СпособЗачета КАК СпособЗачета,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Курс КАК Курс,
	|	ТаблицаДокумента.Кратность КАК Кратность,
	|	ТаблицаДокумента.Договор.ПереноситьУдержанныеСуммыНаРасчетыСПоставщиком КАК ПереноситьУдержанныеСуммыНаРасчетыСПоставщиком,
	|	ВЫБОР
	|		КОГДА &ВалютаУчета = &ВалютаДС
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа + ТаблицаДокумента.УдержаноАгентом
	|		КОГДА &ВалютаУчета = ТаблицаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов + (ВЫРАЗИТЬ(ТаблицаДокумента.УдержаноАгентом * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)))
	|		КОГДА &ВалютаУчета = &НациональнаяВалюта
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов + (ВЫРАЗИТЬ(ТаблицаДокумента.УдержаноАгентом * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) + (ВЫРАЗИТЬ(ТаблицаДокумента.УдержаноАгентом * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)))
	|	КОНЕЦ КАК ПолученоОтКлиента,
	|	ВЫБОР
	|		КОГДА &ВалютаУчета = &ВалютаДС
	|			ТОГДА ТаблицаДокумента.УдержаноАгентом
	|		КОГДА &ВалютаУчета = ТаблицаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.УдержаноАгентом * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))
	|		КОГДА &ВалютаУчета = &НациональнаяВалюта
	|			ТОГДА ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаДокумента.УдержаноАгентом * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.УдержаноАгентом * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК УдержаноАгентом,
	|	ТаблицаДокумента.Договор.ДоговорСоСлужбойДоставки.СтатьяДДСПоУмолчанию КАК СтатьяДДСДоставка,
	|	ТаблицаДокумента.УдержаноАгентом КАК УдержаноАгентомВал,
	|	ТаблицаДокумента.СуммаПлатежа + ТаблицаДокумента.УдержаноАгентом КАК ПолученоОтКлиентаВал,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Проект
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Проект
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Подразделение
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.ПодразделениеЗатраты
	|	КОНЕЦ КАК Подразделение,
	|	ТаблицаДокумента.Ссылка.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента
	|ПОМЕСТИТЬ ВременнаяТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.ПоступлениеНаСчет.РасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
	|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
	|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.ВидОперации КАК ВидОперации,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаКомиссииДокумента * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаКомиссии,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаВал,
	|	ТаблицаДокумента.БанковскийСчет.СчетУчета КАК БанковскийСчетСчетУчета,
	|	ТаблицаДокумента.Корреспонденция КАК Корреспонденция,
	|	ТаблицаДокумента.Корреспонденция.ТипСчета КАК КорреспонденцияТипСчета,
	|	ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|	ТаблицаДокумента.ВидНалога.СчетУчетаКВозмещению КАК ВидНалогаСчетУчетаКВозмещению,
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ТаблицаДокумента.СчетКонтрагента КАК СчетКонтрагента,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Подотчетник КАК Подотчетник,
	|	ТаблицаДокумента.Подотчетник.СчетРасчетовСПодотчетниками КАК ПодотчетникСчетРасчетовСПодотчетниками,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.СуммаКомиссииДокумента КАК СуммаКомиссииДокумента,
	|	ТаблицаДокумента.СуммаКомиссииДокумента КАК СуммаКомиссииВал,
	|	ТаблицаДокумента.ПодразделениеЗатраты КАК ПодразделениеЗатраты,
	|	ТаблицаДокумента.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельностиЗатраты,
	|	ТаблицаДокумента.ЭквайринговыйТерминал.СчетУчета КАК СчетУчетаЭквайринг,
	|	ТаблицаДокумента.ЭквайринговыйТерминал.СчетЗатрат КАК СчетЗатратЭквайринг,
	|	ТаблицаДокумента.АналитикаПрочихДоходовИРасходов КАК АналитикаДоходовИРасходов,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтПодотчетника)
	|			ТОГДА ТаблицаДокумента.Подотчетник
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Прочее)
	|			ТОГДА ТаблицаДокумента.Корреспонденция
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ТаблицаДокумента.БанковскийСчет
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ТОГДА ТаблицаДокумента.Контрагент
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты)
	|			ТОГДА ТаблицаДокумента.Контрагент
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ТОГДА ТаблицаДокумента.Контрагент
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)
	|			ТОГДА ТаблицаДокумента.Подотчетник
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПокупкаВалюты)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.Налоги)
	|			ТОГДА ТаблицаДокумента.ВидНалога
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВзносНаличными)
	|			ТОГДА ТаблицаДокумента.Касса
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПереводСДругогоСчета)
	|			ТОГДА ТаблицаДокумента.СчетКонтрагента
	|		ИНАЧЕ ТаблицаДокумента.Контрагент
	|	КОНЕЦ КАК АналитикаДДС,
	|	ТаблицаДокумента.Курс КАК Курс,
	|	ТаблицаДокумента.Кратность КАК Кратность,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Контрагент.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Проект КАК Проект,
	|	ТаблицаДокумента.ПодразделениеЗатраты КАК Подразделение,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ПоступлениеНаСчет КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
	|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Запрос.УстановитьПараметр("НациональнаяВалюта", СтруктураДополнительныеСвойства.НациональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаУчета", СтруктураДополнительныеСвойства.ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("ВалютаДоговораКредитаЗайма", ДокументСсылкаПоступлениеНаСчет.ДоговорКредитаЗайма.ВалютаРасчетов);
	
	Запрос.УстановитьПараметр("ИспользоватьСтатьиДДС", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств"));
	
	Запрос.УстановитьПараметр("ЭтоДоставка", СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоДоставка);
	
	ПараметрыЭквайринга = ЭквайринговыеОперацииСервер.ПолучитьПараметрыЭквайрингаДляДокумента(ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("КонтрольОперацийЭквайринга", ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг);
	
	Запрос.Текст = ПолучитьТекстЗапросаИнициализироватьДанные();
	
	Запрос.Выполнить();
	
	// Формирование таблиц движений по разделам учета.
	СформироватьТаблицаДенежныеСредства(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПодотчетниками(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	// Прочие расчеты
	СформироватьТаблицаРасчетыСПрочимиКонтрагентами(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыПоКредитамИЗаймам(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	// Конец Прочие расчеты
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыПоНалогам(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	РасчетыПроведениеДокументов.СформироватьТаблицаОплатаСчетовИЗаказовДенежныеДокументы(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	// Эквайринг
	СформироватьТаблицаРасчетыПоЭквайрингу(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетодЭквайринг(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыЭквайринг(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	// Конец Эквайринг
	СформироватьТаблицаУправленческий(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗакупкиПоставщиковДляКУДиР(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаОплатаДокументов(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДвиженияДенежныхСредств(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПоступлениеНаСчет, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если НЕ Константы.КонтролироватьОстаткиПриПроведении.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы содержат записи, необходимо выполнить контроль
	// отрицательных остатков.
	Если СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПодотчетникамиИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыПоЭквайрингуИзменение // Эквайринг
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПокупателямиИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияДенежныеСредстваИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияДенежныеСредстваИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияДенежныеСредстваИзменение.БанковскийСчетКасса КАК БанковскийСчетКассаПредставление,
		|	ДвиженияДенежныеСредстваИзменение.Валюта КАК ВалютаПредставление,
		|	ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств КАК ТипДенежныхСредствПредставление,
		|	ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств КАК ТипДенежныхСредств,
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалИзменение + ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) КАК ОстатокДенежныхСредств,
		|	ДвиженияДенежныеСредстваИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияДенежныеСредстваИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияДенежныеСредстваИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияДенежныеСредстваИзменение КАК ДвиженияДенежныеСредстваИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредства.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваОстатки
		|		ПО ДвиженияДенежныеСредстваИзменение.Организация = ДенежныеСредстваОстатки.Организация
		|			И ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств = ДенежныеСредстваОстатки.ТипДенежныхСредств
		|			И ДвиженияДенежныеСредстваИзменение.БанковскийСчетКасса = ДенежныеСредстваОстатки.БанковскийСчетКасса
		|			И ДвиженияДенежныеСредстваИзменение.Валюта = ДенежныеСредстваОстатки.Валюта
		|			И ДвиженияДенежныеСредстваИзменение.ДоговорКонтрагента = ДенежныеСредстваОстатки.ДоговорКонтрагента
		|ГДЕ
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПодотчетникамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник КАК СотрудникПредставление,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Валюта КАК ВалютаПредставление,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Документ КАК ДокументПредставление,
		|	ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) КАК ОстатокУПодотчетногоЛица,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияРасчетыСПодотчетникамиИзменение КАК ДвиженияРасчетыСПодотчетникамиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПодотчетниками.Остатки(&МоментКонтроля, ) КАК РасчетыСПодотчетникамиОстатки
		|		ПО ДвиженияРасчетыСПодотчетникамиИзменение.Организация = РасчетыСПодотчетникамиОстатки.Организация
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник = РасчетыСПодотчетникамиОстатки.Сотрудник
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Валюта = РасчетыСПодотчетникамиОстатки.Валюта
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Документ = РасчетыСПодотчетникамиОстатки.Документ
		|ГДЕ
		|	(ТИПЗНАЧЕНИЯ(РасчетыСПодотчетникамиОстатки.Документ) = ТИП(Документ.АвансовыйОтчет)
		|				И ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) > 0
		|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыСПодотчетникамиОстатки.Документ) <> ТИП(Документ.АвансовыйОтчет)
		|				И ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПокупателямиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПокупателямиИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Контрагент КАК КонтрагентПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Договор КАК ДоговорПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Договор.ВалютаРасчетов КАК ВалютаПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Документ КАК ДокументПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Заказ КАК ЗаказПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетовПредставление,
		|	ИСТИНА КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаОстаткаЗадолженности,
		|	-(ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0)) КАК СуммаНепогашенныхАвансов,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПокупателямиИзменение КАК ДвиженияРасчетыСПокупателямиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПокупателями.Остатки(&МоментКонтроля, ) КАК РасчетыСПокупателямиОстатки
		|		ПО ДвиженияРасчетыСПокупателямиИзменение.Организация = РасчетыСПокупателямиОстатки.Организация
		|			И ДвиженияРасчетыСПокупателямиИзменение.Контрагент = РасчетыСПокупателямиОстатки.Контрагент
		|			И ДвиженияРасчетыСПокупателямиИзменение.Договор = РасчетыСПокупателямиОстатки.Договор
		|			И ДвиженияРасчетыСПокупателямиИзменение.Документ = РасчетыСПокупателямиОстатки.Документ
		|			И ДвиженияРасчетыСПокупателямиИзменение.Заказ = РасчетыСПокупателямиОстатки.Заказ
		|			И ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = РасчетыСПокупателямиОстатки.ТипРасчетов
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|				ТОГДА ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) > 0
		|			ИНАЧЕ ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) < 0
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыПоЭквайрингуИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ВидОперацииЭквайринга КАК ТипДенежныхСредствПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ЭквайринговыйТерминал.БанковскийСчетЭквайринг.ВалютаДенежныхСредств КАК ВалютаПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ЭквайринговыйТерминал КАК ЭквайринговыйТерминалПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.ДатаПлатежа КАК ДатаПлатежаПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.Документ КАК ДокументПредставление,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.Заказ КАК ЗаказПредставление,
		|	ИСТИНА КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияПередЗаписью КАК КомиссияПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияПриЗаписи КАК КомиссияПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияИзменение КАК КомиссияИзменение,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПередЗаписью КАК КомиссияВалПередЗаписью,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПриЗаписи КАК КомиссияВалПриЗаписи,
		|	ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалИзменение КАК КомиссияВалИзменение,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) + ДвиженияРасчетыПоЭквайрингуИзменение.СуммаВалПриЗаписи КАК СуммаОстаткаЗадолженности,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) + ДвиженияРасчетыПоЭквайрингуИзменение.КомиссияВалПриЗаписи КАК СуммаОстаткаКомиссии,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияОстаток, 0) КАК КомиссияОстаток,
		|	ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) КАК КомиссияВалОстаток,
		|	РасчетыПоЭквайрингуОстатки.ВидПлатежнойКарты КАК ВидПлатежнойКартыПредставление,
		|	РасчетыПоЭквайрингуОстатки.НомерПлатежнойКарты КАК НомерПлатежнойКартыПредставление
		|ИЗ
		|	ДвиженияРасчетыПоЭквайрингуИзменение КАК ДвиженияРасчетыПоЭквайрингуИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоЭквайрингу.Остатки(&МоментКонтроля, ) КАК РасчетыПоЭквайрингуОстатки
		|		ПО ДвиженияРасчетыПоЭквайрингуИзменение.ВидОперацииЭквайринга = РасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.Организация = РасчетыПоЭквайрингуОстатки.Организация
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.ЭквайринговыйТерминал = РасчетыПоЭквайрингуОстатки.ЭквайринговыйТерминал
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.ДатаПлатежа = РасчетыПоЭквайрингуОстатки.ДатаПлатежа
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.Документ = РасчетыПоЭквайрингуОстатки.Документ
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.Заказ = РасчетыПоЭквайрингуОстатки.Заказ
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.ВидПлатежнойКарты = РасчетыПоЭквайрингуОстатки.ВидПлатежнойКарты
		|			И ДвиженияРасчетыПоЭквайрингуИзменение.НомерПлатежнойКарты = РасчетыПоЭквайрингуОстатки.НомерПлатежнойКарты
		|ГДЕ
		|	(&УдалениеПроведения
		|				И (ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) < 0
		|					ИЛИ ВЫБОР
		|						КОГДА РасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
		|								И РасчетыПоЭквайрингуОстатки.ЭквайринговыйТерминал.УдалитьКомиссияЗаВозвратУменьшаетКомиссиюЗаОплату
		|							ТОГДА -ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0)
		|						ИНАЧЕ ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0)
		|					КОНЕЦ < 0)
		|			ИЛИ НЕ &УдалениеПроведения
		|				И (ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.СуммаВалОстаток, 0) <> 0
		|					ИЛИ ЕСТЬNULL(РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток, 0) <> 0))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		Запрос.УстановитьПараметр("УдалениеПроведения", УдалениеПроведения);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой() 
			ИЛИ НЕ МассивРезультатов[2].Пустой() 
			ИЛИ НЕ МассивРезультатов[3].Пустой() Тогда
			ДокументОбъектПоступлениеНаСчет = ДокументСсылкаПоступлениеНаСчет.ПолучитьОбъект();
		КонецЕсли;
		
		// Отрицательный остаток по денежным средствам.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			КонтрольОстатковУНФ.ДенежныеСредства(ДокументОбъектПоступлениеНаСчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с подотчетными лицами.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			КонтрольОстатковУНФ.РасчетыСПодотчетниками(ДокументОбъектПоступлениеНаСчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с покупателями.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			КонтрольОстатковУНФ.РасчетыСПокупателями(ДокументОбъектПоступлениеНаСчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Эквайринг
		// Отрицательный остаток расчетов по эквайрингу.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			КонтрольОстатковУНФ.РасчетыПоЭквайрингу(ДокументОбъектПоступлениеНаСчет, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		// Конец Эквайринг
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#Область Эквайринг

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыПоЭквайрингу(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	ПараметрыЭквайринга = ЭквайринговыеОперацииСервер.ПолучитьПараметрыЭквайрингаДляДокумента(ДокументСсылкаПоступлениеНаСчет);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ОплатаПлатежнойКартой", "Оплата от банка-эквайрера");
	Запрос.УстановитьПараметр("ОплатаКредитом", "Оплата от банка по продаже в кредит");
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПродажиПоПлатежнымКартам", Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам);
	Запрос.УстановитьПараметр("ПродажиВКредит", Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("РасчетКомиссииВОтчетеЭквайера", ПараметрыЭквайринга.РасчетКомиссииВОтчетеЭквайера);
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств);
	
	// Блокировка
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеНаСчет.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПоступлениеНаСчет
	|ГДЕ
	|	ПоступлениеНаСчет.Ссылка = &Ссылка
	|	И ПоступлениеНаСчет.Ссылка.ВидОперации В (&ПродажиПоПлатежнымКартам, &ПродажиВКредит)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ПоступлениеНаСчетЭквайринговыеОперации.ДатаПлатежа) КАК ДатаНачала,
	|	МАКСИМУМ(ПоступлениеНаСчетЭквайринговыеОперации.ДатаПлатежа) КАК ДатаОкончания
	|ИЗ
	|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПоступлениеНаСчетЭквайринговыеОперации
	|ГДЕ
	|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка = &Ссылка";

	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыПоЭквайрингу");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = МассивРезультатов[0];
	
	Для каждого КолонкаРезультатЗапроса из МассивРезультатов[0].Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	
	Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
		Выборка = МассивРезультатов[1].Выбрать();
		Выборка.Следующий();
		Если Выборка.ДатаНачала <> Null И Выборка.ДатаНачала <> '00010101' Тогда
			ДиапазонДатПлатежа = Новый Диапазон(Выборка.ДатаНачала, Выборка.ДатаОкончания);
			ЭлементБлокировки.УстановитьЗначение("ДатаПлатежа", ДиапазонДатПлатежа);
		КонецЕсли;
	КонецЕсли;
	
	Блокировка.Заблокировать();
	// Конец Блокировка
	
	// Валюта расчетов и валюта платежа при эквайринговых операциях совпадает.
	// В документе не отображается информация о сумме платежа для вида операции "Продажи по платежным картам".
	// В этом случае достаточно для всех регистров использовать сумму расчетов.
	
	Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетУчета КАК СчетУчетаЭквайринг,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетЗатрат КАК СчетЗатратЭквайринг,
		|	ПараметрыУчетаЭквайринговыхОпераций.Ссылка.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельностиЗатраты,
		|	ПараметрыУчетаЭквайринговыхОпераций.Ссылка.ПодразделениеЗатраты КАК ПодразделениеЗатраты
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций
		|ИЗ
		|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПараметрыУчетаЭквайринговыхОпераций
		|ГДЕ
		|	ПараметрыУчетаЭквайринговыхОпераций.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПараметрыУчетаЭквайринговыхОпераций.Ссылка.НаправлениеДеятельностиЗатраты,
		|	ПараметрыУчетаЭквайринговыхОпераций.Ссылка.ПодразделениеЗатраты,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетУчета,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Дата КАК Дата,
		|	МИНИМУМ(ПоступлениеНаСчетЭквайринговыеОперации.НомерСтроки) КАК НомерСтроки,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации КАК ВидОперации,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.БанковскийСчет КАК БанковскийСчет,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг КАК СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг КАК СчетЗатратЭквайринг,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	СУММА(ПоступлениеНаСчетЭквайринговыеОперации.СуммаПлатежаИтогоПоСтроке) КАК СуммаПлатежа,
		|	СУММА(ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата) КАК СуммаУчета,
		|	СУММА(ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата) КАК СуммаУчетаКомиссии,
		|	СУММА(ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаРасчетовКомиссии,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельности,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты КАК ПодразделениеЗатраты
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныеЭквайринговыхОпераций
		|ИЗ
		|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПоступлениеНаСчетЭквайринговыеОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций
		|		ПО ПоступлениеНаСчетЭквайринговыеОперации.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Дата,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.БанковскийСчет,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВалютаДенежныхСредств,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ПоступлениеНаСчетЭквайринговыеОперации.НомерСтроки КАК НомерСтроки,
		|	ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата КАК СуммаВал,
		|	ВЫБОР
		|		КОГДА &РасчетКомиссииВОтчетеЭквайера
		|			ТОГДА 0
		|		ИНАЧЕ ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата
		|	КОНЕЦ КАК КомиссияВал,
		|	ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
		|	ВЫБОР
		|		КОГДА &РасчетКомиссииВОтчетеЭквайера
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Комиссия,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Документ КАК Документ,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Заказ КАК Заказ,
		|	ПоступлениеНаСчетЭквайринговыеОперации.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
		|	ПоступлениеНаСчетЭквайринговыеОперации.ДатаПлатежа КАК ДатаПлатежа,
		|	ПоступлениеНаСчетЭквайринговыеОперации.НомерПлатежнойКарты КАК НомерПлатежнойКарты,
		|	ПоступлениеНаСчетЭквайринговыеОперации.ВидПлатежнойКарты КАК ВидПлатежнойКарты,
		|	&Организация КАК Организация,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Контрагент КАК Эквайрер,
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчетЭквайринговыеОперации.Документ ССЫЛКА Документ.ОперацияПоПлатежнымКартам
		|			ТОГДА ПоступлениеНаСчетЭквайринговыеОперации.Документ.ВидОперации
		|		КОГДА ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов > 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
		|	КОНЕЦ КАК ВидОперацииЭквайринга,
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаПлатежнойКартой
		|		КОГДА ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам)
		|			ТОГДА &ОплатаКредитом
		|		ИНАЧЕ &ОплатаПлатежнойКартой
		|	КОНЕЦ КАК СодержаниеПроводки,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Дата КАК Период,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг КАК СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг КАК СчетЗатратЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельности,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг.ТипСчета КАК СчетУчетаЭквайрингТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг.ТипСчета КАК СчетЗатратЭквайрингТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты КАК Подразделение
		|ИЗ
		|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПоступлениеНаСчетЭквайринговыеОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций
		|		ПО ПоступлениеНаСчетЭквайринговыеОперации.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	1,
		|	0,
		|	ПоступлениеНаСчет.СуммаКомиссииДокумента,
		|	0,
		|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаКомиссииДокумента * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)),
		|	ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	ПоступлениеНаСчет.ЭквайринговыйТерминал,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	"""",
		|	"""",
		|	&Организация,
		|	ПоступлениеНаСчет.Контрагент,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя),
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаПлатежнойКартой
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам)
		|			ТОГДА &ОплатаКредитом
		|		ИНАЧЕ &ОплатаПлатежнойКартой
		|	КОНЕЦ,
		|	ПоступлениеНаСчет.Дата,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетЗатратЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетУчетаЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетЗатратЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.ПодразделениеЗатраты
		|ИЗ
		|	Документ.ПоступлениеНаСчет КАК ПоступлениеНаСчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход
		|		ПО ПоступлениеНаСчет.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчет.Ссылка = &Ссылка
		|	И &РасчетКомиссииВОтчетеЭквайера
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	2,
		|	0,
		|	ПоступлениеНаСчет.СуммаКомиссииДокумента,
		|	0,
		|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаКомиссииДокумента * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)),
		|	ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	ПоступлениеНаСчет.ЭквайринговыйТерминал,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	"""",
		|	"""",
		|	&Организация,
		|	ПоступлениеНаСчет.Контрагент,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПоступлениеОплатыОтПокупателя),
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаПлатежнойКартой
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам)
		|			ТОГДА &ОплатаКредитом
		|		ИНАЧЕ &ОплатаПлатежнойКартой
		|	КОНЕЦ,
		|	ПоступлениеНаСчет.Дата,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетЗатратЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетУчетаЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетЗатратЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.ПодразделениеЗатраты
		|ИЗ
		|	Документ.ПоступлениеНаСчет КАК ПоступлениеНаСчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход
		|		ПО ПоступлениеНаСчет.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчет.Ссылка = &Ссылка
		|	И &РасчетКомиссииВОтчетеЭквайера";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетУчета КАК СчетУчетаЭквайринг,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетЗатрат КАК СчетЗатратЭквайринг,
		|	ПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельностиЗатраты,
		|	ПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты КАК ПодразделениеЗатраты
		|ПОМЕСТИТЬ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций
		|ИЗ
		|	Документ.ПоступлениеНаСчет КАК ПараметрыУчетаЭквайринговыхОпераций
		|ГДЕ
		|	ПараметрыУчетаЭквайринговыхОпераций.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты,
		|	ПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетУчета,
		|	ПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал.СчетЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Дата КАК Дата,
		|	1 КАК НомерСтроки,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации КАК ВидОперации,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.БанковскийСчет КАК БанковскийСчет,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг КАК СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг КАК СчетЗатратЭквайринг,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	СУММА(ПоступлениеНаСчетЭквайринговыеОперации.СуммаПлатежаИтогоПоСтроке) КАК СуммаПлатежа,
		|	СУММА(ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата) КАК СуммаУчета,
		|	СУММА(ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата) КАК СуммаУчетаКомиссии,
		|	СУММА(ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаРасчетовКомиссии,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельности,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты КАК ПодразделениеЗатраты
		|ПОМЕСТИТЬ ВременнаяТаблицаДанныеЭквайринговыхОпераций
		|ИЗ
		|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПоступлениеНаСчетЭквайринговыеОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций
		|		ПО ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Дата,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.БанковскийСчет,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВалютаДенежныхСредств,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ПоступлениеНаСчетЭквайринговыеОперации.НомерСтроки КАК НомерСтроки,
		|	ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата КАК СуммаВал,
		|	ВЫБОР
		|		КОГДА &РасчетКомиссииВОтчетеЭквайера
		|			ТОГДА 0
		|		ИНАЧЕ ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата
		|	КОНЕЦ КАК КомиссияВал,
		|	ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетов + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
		|	ВЫБОР
		|		КОГДА &РасчетКомиссииВОтчетеЭквайера
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссии + ПоступлениеНаСчетЭквайринговыеОперации.СуммаРасчетовКомиссииВозврата) * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Комиссия,
		|	ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка) КАК Документ,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ПоступлениеНаСчетЭквайринговыеОперации.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПлатежа,
		|	"""" КАК НомерПлатежнойКарты,
		|	"""" КАК ВидПлатежнойКарты,
		|	&Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПустаяСсылка) КАК ВидОперацииЭквайринга,
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаПлатежнойКартой
		|		КОГДА ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаКредитом
		|		ИНАЧЕ &ОплатаПлатежнойКартой
		|	КОНЕЦ КАК СодержаниеПроводки,
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка.Дата КАК Период,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг КАК СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг КАК СчетЗатратЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельности,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетУчетаЭквайринг.ТипСчета КАК СчетУчетаЭквайрингТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.СчетЗатратЭквайринг.ТипСчета КАК СчетЗатратЭквайрингТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ПодразделениеЗатраты КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК Эквайрер
		|ИЗ
		|	Документ.ПоступлениеНаСчет.ЭквайринговыеОперации КАК ПоступлениеНаСчетЭквайринговыеОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций
		|		ПО ПоступлениеНаСчетЭквайринговыеОперации.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчетЭквайринговыеОперации.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	1,
		|	0,
		|	ПоступлениеНаСчет.СуммаКомиссииДокумента,
		|	0,
		|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаКомиссииДокумента * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)),
		|	ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	ПоступлениеНаСчет.ЭквайринговыйТерминал,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	"""",
		|	"""",
		|	&Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаПлатежнойКартой
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаКредитом
		|		ИНАЧЕ &ОплатаПлатежнойКартой
		|	КОНЕЦ,
		|	ПоступлениеНаСчет.Дата,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетЗатратЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетУчетаЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.СчетЗатратЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.ПодразделениеЗатраты,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Документ.ПоступлениеНаСчет КАК ПоступлениеНаСчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход
		|		ПО ПоступлениеНаСчет.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииПриход.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчет.Ссылка = &Ссылка
		|	И &РасчетКомиссииВОтчетеЭквайера
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	2,
		|	0,
		|	ПоступлениеНаСчет.СуммаКомиссииДокумента,
		|	0,
		|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаКомиссииДокумента * КурсыВалютБанковскогоСчета.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютБанковскогоСчета.Кратность) КАК ЧИСЛО(15, 2)),
		|	ЗНАЧЕНИЕ(Документ.ОперацияПоПлатежнымКартам.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	ПоступлениеНаСчет.ЭквайринговыйТерминал,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	"""",
		|	"""",
		|	&Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаПлатежнойКартой
		|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам)
		|			ТОГДА &ОплатаКредитом
		|		ИНАЧЕ &ОплатаПлатежнойКартой
		|	КОНЕЦ,
		|	ПоступлениеНаСчет.Дата,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетУчетаЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетЗатратЭквайринг,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетУчетаЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.СчетЗатратЭквайринг.ТипСчета,
		|	ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.ПодразделениеЗатраты,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Документ.ПоступлениеНаСчет КАК ПоступлениеНаСчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
		|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютБанковскогоСчета
		|		ПО (КурсыВалютБанковскогоСчета.Валюта = &ВалютаДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаПараметрыУчетаЭквайринговыхОпераций КАК ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход
		|		ПО ПоступлениеНаСчет.ЭквайринговыйТерминал = ВременнаяТаблицаПараметрыУчетаЭквайринговыхОперацийДляКомиссииРасход.ЭквайринговыйТерминал
		|ГДЕ
		|	ПоступлениеНаСчет.Ссылка = &Ссылка
		|	И &РасчетКомиссииВОтчетеЭквайера";
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоЭквайрингу", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетодЭквайринг(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Если Не СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов Или
		(ДокументСсылкаПоступлениеНаСчет.ВидОперации <> Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКартам
		И ДокументСсылкаПоступлениеНаСчет.ВидОперации <> Перечисления.ВидыОперацийПоступлениеНаСчет.ПоступлениеОплатыПоКредитам) Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетодЭквайринг", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	ТаблицаРасчетыПоЭквайрингу = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасчетыПоЭквайрингу;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	Запрос.УстановитьПараметр("ТаблицаРасчетыПоЭквайрингу", ТаблицаРасчетыПоЭквайрингу);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментКонтроля, ВидГраницы.Включая));

	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.Организация,
	|	РасчетыПоЭквайрингу.Документ
	|ПОМЕСТИТЬ ВременнаяТаблицаИсточникДанныхДляБлокировки
	|ИЗ
	|	&ТаблицаРасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаИсточникДанныхДляБлокировки.Организация,
	|	ВременнаяТаблицаИсточникДанныхДляБлокировки.Документ
	|ИЗ
	|	ВременнаяТаблицаИсточникДанныхДляБлокировки КАК ВременнаяТаблицаИсточникДанныхДляБлокировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаИсточникДанныхДляБлокировки.Документ,
	|	ВременнаяТаблицаИсточникДанныхДляБлокировки.Организация";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДоходыИРасходыКассовыйМетодЭквайринг");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков.
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаРасчетыПоЭквайрингу.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
		|	ТаблицаРасчетыПоЭквайрингу.Документ КАК Документ,
		|	ТаблицаРасчетыПоЭквайрингу.ДатаПлатежа КАК ДатаПлатежа,
		|	ТаблицаРасчетыПоЭквайрингу.Сумма КАК Сумма,
		|	ТаблицаРасчетыПоЭквайрингу.СуммаВал КАК СуммаВал,
		|	ТаблицаРасчетыПоЭквайрингу.Комиссия КАК Комиссия,
		|	ТаблицаРасчетыПоЭквайрингу.КомиссияВал КАК КомиссияВал,
		|	ТаблицаРасчетыПоЭквайрингу.ВидОперацииЭквайринга КАК ВидОперацииЭквайринга,
		|	ТаблицаРасчетыПоЭквайрингу.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам
		|ИЗ
		|	&ТаблицаРасчетыПоЭквайрингу КАК ТаблицаРасчетыПоЭквайрингу
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЭквайринговыйТерминал,
		|	Документ,
		|	ДатаПлатежа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Документ,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Организация,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.НаправлениеДеятельности,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.Статья,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаДоходовОстаток,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаРасходовОстаток,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаКомиссииДоходовОстаток,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаКомиссииРасходовОстаток,
		|	ДоходыИРасходыКассовыйМетодЭквайрингОстатки.ВидОперацииЭквайринга
		|ПОМЕСТИТЬ ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки
		|ИЗ
		|	РегистрНакопления.ДоходыИРасходыКассовыйМетодЭквайринг.Остатки(
		|			&МоментКонтроля,
		|			Документ В
		|				(ВЫБРАТЬ
		|					ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.Документ
		|				ИЗ
		|					ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам КАК ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам)) КАК ДоходыИРасходыКассовыйМетодЭквайрингОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоходыИРасходыКассовыйМетодЭквайринг.Документ,
		|	ДоходыИРасходыКассовыйМетодЭквайринг.Организация,
		|	ДоходыИРасходыКассовыйМетодЭквайринг.НаправлениеДеятельности,
		|	ДоходыИРасходыКассовыйМетодЭквайринг.Статья,
		|	ВЫБОР
		|		КОГДА ДоходыИРасходыКассовыйМетодЭквайринг.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаДоходов, 0)
		|		ИНАЧЕ -ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаДоходов, 0)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДоходыИРасходыКассовыйМетодЭквайринг.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаРасходов, 0)
		|		ИНАЧЕ -ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаРасходов, 0)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДоходыИРасходыКассовыйМетодЭквайринг.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаКомиссииДоходов, 0)
		|		ИНАЧЕ -ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаКомиссииДоходов, 0)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДоходыИРасходыКассовыйМетодЭквайринг.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаКомиссииРасходов, 0)
		|		ИНАЧЕ -ЕСТЬNULL(ДоходыИРасходыКассовыйМетодЭквайринг.СуммаКомиссииРасходов, 0)
		|	КОНЕЦ,
		|	ДоходыИРасходыКассовыйМетодЭквайринг.ВидОперацииЭквайринга
		|ИЗ
		|	РегистрНакопления.ДоходыИРасходыКассовыйМетодЭквайринг КАК ДоходыИРасходыКассовыйМетодЭквайринг
		|ГДЕ
		|	ДоходыИРасходыКассовыйМетодЭквайринг.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.Документ,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.Организация,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.НаправлениеДеятельности,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.Статья,
		|	СУММА(ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаДоходовОстаток) КАК СуммаДоходовОстаток,
		|	СУММА(ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаРасходовОстаток) КАК СуммаРасходовОстаток,
		|	СУММА(ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаКомиссииДоходовОстаток) КАК СуммаКомиссииДоходовОстаток,
		|	СУММА(ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.СуммаКомиссииРасходовОстаток) КАК СуммаКомиссииРасходовОстаток,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.ВидОперацииЭквайринга
		|ИЗ
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки КАК ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.Документ,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.Организация,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.НаправлениеДеятельности,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.Статья,
		|	ВременнаяТаблицаДоходыИРасходыКассовыйМетодЭквайрингОстатки.ВидОперацииЭквайринга
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.Документ КАК Документ,
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.ДатаПлатежа,
		|	СУММА(ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.Сумма) КАК Сумма,
		|	СУММА(ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.Комиссия) КАК Комиссия,
		|	ВременнаяТаблицаШапка.НаправлениеДеятельностиЗатраты КАК НаправлениеДеятельностиЗатраты,
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.ВидОперацииЭквайринга,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.ВидОперацииЭквайринга = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЭквайринга.ВозвратОплатыПокупателю)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоВозврат
		|ИЗ
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам КАК ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|		ПО (ИСТИНА)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.Документ,
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.ДатаПлатежа,
		|	ВременнаяТаблицаЗачтенаОплатаПоПлатежнымКартам.ВидОперацииЭквайринга,
		|	ВременнаяТаблицаШапка.НаправлениеДеятельностиЗатраты";
	
	МРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаДоходыИРасходыКассовыйМетодЭквайринг = РегистрыНакопления.ДоходыИРасходыКассовыйМетодЭквайринг.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаДоходыИРасходыКассовыйМетод = РегистрыНакопления.ДоходыИРасходыКассовыйМетод.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	ТаблицаДоходыИРасходыКассовыйМетодЭквайринг.Колонки.Удалить("Активность");
	ТаблицаДоходыИРасходыКассовыйМетод.Колонки.Удалить("Активность");
	
	ТаблицаДоходыИРасходыЭквайринг = МРезультатов[2].Выгрузить();
	ВыборкаИтоги = МРезультатов[3].Выбрать();
	
	// По данным о зачтенных суммах перенесем данные из регистра ДоходыИРасходыКассовыйМетодЭквайринг в регистр ТаблицаДоходыИРасходыЭквайринг.
	Пока ВыборкаИтоги.Следующий() Цикл
		
		ПараметрыОтбора = Новый Структура("Документ, ВидОперацииЭквайринга", ВыборкаИтоги.Документ, ВыборкаИтоги.ВидОперацииЭквайринга);
		ТаблицаРезультатПоиска = ТаблицаДоходыИРасходыЭквайринг.НайтиСтроки(ПараметрыОтбора);
		МожноЗачесть = ВыборкаИтоги.Сумма;
		МожноЗачестьКомиссию = ВыборкаИтоги.Комиссия;
		
		Если ЗначениеЗаполнено(ТаблицаРезультатПоиска) Тогда
			Для Каждого ТекущаяСтрока Из ТаблицаРезультатПоиска Цикл
				
				// Сумма оплаты (вместе с комиссией).
				Если (МожноЗачесть > 0 И ТекущаяСтрока.СуммаДоходовОстаток > 0) Тогда
					
					НоваяСтрокаЭквайринг = ТаблицаДоходыИРасходыКассовыйМетодЭквайринг.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЭквайринг, ТекущаяСтрока);
					НоваяСтрокаЭквайринг.ВидДвижения = ВидДвиженияНакопления.Расход;
					НоваяСтрокаЭквайринг.Период = СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата;
					
					Если МожноЗачесть >= ТекущаяСтрока.СуммаДоходовОстаток Тогда
						НоваяСтрокаЭквайринг.СуммаДоходов = ТекущаяСтрока.СуммаДоходовОстаток;
						МожноЗачесть = МожноЗачесть - ТекущаяСтрока.СуммаДоходовОстаток;
					Иначе
						НоваяСтрокаЭквайринг.СуммаДоходов = МожноЗачесть;
						МожноЗачесть = 0;
					КонецЕсли;
					
					НоваяСтрока = ТаблицаДоходыИРасходыКассовыйМетод.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НоваяСтрокаЭквайринг);
					Если ВыборкаИтоги.ЭтоВозврат Тогда
						НоваяСтрока.СуммаДоходов = -НоваяСтрока.СуммаДоходов;
					КонецЕсли;
					
				КонецЕсли;
				
				// Сумма комиссии.
				Если МожноЗачестьКомиссию > 0 И ТекущаяСтрока.СуммаКомиссииДоходовОстаток > 0 Тогда
					НоваяСтрокаЭквайринг = ТаблицаДоходыИРасходыКассовыйМетодЭквайринг.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаЭквайринг, ТекущаяСтрока);
					НоваяСтрокаЭквайринг.ВидДвижения = ВидДвиженияНакопления.Расход;
					НоваяСтрокаЭквайринг.Период = СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата;
					
					Если МожноЗачестьКомиссию > ТекущаяСтрока.СуммаКомиссииДоходовОстаток Тогда
						НоваяСтрокаЭквайринг.СуммаКомиссииДоходов = ТекущаяСтрока.СуммаКомиссииДоходовОстаток;
						МожноЗачестьКомиссию = МожноЗачестьКомиссию - ТекущаяСтрока.СуммаКомиссииДоходовОстаток;
					Иначе
						НоваяСтрокаЭквайринг.СуммаКомиссииДоходов = МожноЗачестьКомиссию;
						МожноЗачестьКомиссию = 0;
					КонецЕсли;
				
					НоваяСтрока = ТаблицаДоходыИРасходыКассовыйМетод.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НоваяСтрокаЭквайринг);
					НоваяСтрока.СуммаДоходов = 0;
					НоваяСтрока.СуммаРасходов = НоваяСтрокаЭквайринг.СуммаКомиссииДоходов;
					НоваяСтрока.НаправлениеДеятельности = ДокументСсылкаПоступлениеНаСчет.НаправлениеДеятельностиЗатраты;
				КонецЕсли;
				
				Если МожноЗачесть = 0 и МожноЗачестьКомиссию = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		// Ситуация может возникнуть, когда поступление на счет оформляется РАНЬШЕ чем операция оплаты, которая указан в ТЧ "ЭквайринговыеОперации".
		// Данная ситуация обрабатывается перед записью текущего документа на сервере.
		// Возможны и другие ситуации.
		Если МожноЗачестьКомиссию > 0 Или МожноЗачесть <> 0 Тогда
			
			Продолжить;
			
			Если МожноЗачесть > 0 Тогда
				
				НоваяСтрокаЭквайринг = ТаблицаДоходыИРасходыКассовыйМетодЭквайринг.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаЭквайринг, ВыборкаИтоги);
				НоваяСтрокаЭквайринг.Организация = СтруктураДополнительныеСвойства.ДляПроведения.Организация;
				НоваяСтрокаЭквайринг.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрокаЭквайринг.Период = СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата;
				
				НоваяСтрокаЭквайринг.СуммаДоходов = МожноЗачесть;
				НоваяСтрокаЭквайринг.Комментарий = "Сумма не распределилась по остаткам";
				
				НоваяСтрока = ТаблицаДоходыИРасходыКассовыйМетод.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НоваяСтрокаЭквайринг);
				Если ВыборкаИтоги.ЭтоВозврат Тогда
					НоваяСтрока.СуммаДоходов = -НоваяСтрока.СуммаДоходов;
				КонецЕсли;
				
			КонецЕсли;
					
			Если МожноЗачестьКомиссию > 0 Тогда
				
				НоваяСтрокаЭквайринг = ТаблицаДоходыИРасходыКассовыйМетодЭквайринг.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаЭквайринг, ВыборкаИтоги);
				НоваяСтрокаЭквайринг.Организация = СтруктураДополнительныеСвойства.ДляПроведения.Организация;
				НоваяСтрокаЭквайринг.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрокаЭквайринг.Период = СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата;
				
				НоваяСтрокаЭквайринг.СуммаКомиссииДоходов = МожноЗачестьКомиссию;
				НоваяСтрокаЭквайринг.Комментарий = "Сумма не распределилась по остаткам";
				
				НоваяСтрока = ТаблицаДоходыИРасходыКассовыйМетод.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НоваяСтрокаЭквайринг);
				НоваяСтрока.СуммаДоходов = 0;
				НоваяСтрока.СуммаРасходов = НоваяСтрокаЭквайринг.СуммаКомиссииДоходов;
				НоваяСтрока.НаправлениеДеятельности = ВыборкаИтоги.НаправлениеДеятельностиЗатраты;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетодЭквайринг", ТаблицаДоходыИРасходыКассовыйМетодЭквайринг);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", ТаблицаДоходыИРасходыКассовыйМетод);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыЭквайринг(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	ТаблицаРасчетыПоЭквайрингу = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасчетыПоЭквайрингу;
	ТаблицаДоходыИРасходы = РегистрыНакопления.ДоходыИРасходы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Для каждого ТекущаяСтрокаРасчетов Из ТаблицаРасчетыПоЭквайрингу Цикл
	
		Если ТекущаяСтрокаРасчетов.Комиссия = 0 ИЛИ ТекущаяСтрокаРасчетов.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = ТаблицаДоходыИРасходы.Добавить();
		Движение.Период = СтруктураДополнительныеСвойства.ДляПроведения.Дата;
		Движение.Организация = СтруктураДополнительныеСвойства.ДляПроведения.Организация;
		Движение.СчетУчета = ТекущаяСтрокаРасчетов.СчетЗатратЭквайринг;
		Движение.Аналитика = ТекущаяСтрокаРасчетов.Эквайрер;
		Если ТекущаяСтрокаРасчетов.СчетЗатратЭквайрингТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.Расходы") Тогда
			Движение.НаправлениеДеятельности = ТекущаяСтрокаРасчетов.НаправлениеДеятельности;
			Движение.ЗаказПокупателя = ТекущаяСтрокаРасчетов.Заказ;
			Движение.СтруктурнаяЕдиница = ТекущаяСтрокаРасчетов.Подразделение;
		Иначе
			Движение.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Прочее");
			Движение.ЗаказПокупателя = Неопределено;
			Движение.СтруктурнаяЕдиница = Неопределено;
		КонецЕсли;
		Движение.СуммаРасходов = ТекущаяСтрокаРасчетов.Комиссия;
		Движение.СодержаниеПроводки = НСтр("ru = 'Комиссия банка-эквайера'");
		Движение.Активность = Истина;
		
	КонецЦикла;
	
	Если ТаблицаДоходыИРасходы.Количество() > 0 Тогда
		Если СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Количество() = 0 Тогда
			СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", ТаблицаДоходыИРасходы);
		Иначе
			
			Для Каждого ТекущаяСтрока Из ТаблицаДоходыИРасходы Цикл
				НоваяСтрока = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

#КонецОбласти

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.СчетФактура";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Ложь, Ложь) + НСтр("ru = ' (аванс)'");
	КомандаПечати.ФункциональныеОпции = "ПередачаТоваровНаКомиссию,ПриемТоваровНаКомиссию,ИспользуетсяОСНО,ИспользоватьСчетаФактурыИсходящие";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеРасчеты

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПрочимиКонтрагентами(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("УчетРасчетовПоПрочимОперациям", НСтр("ru='Учет расчетов по прочим операциям'"));
	Запрос.УстановитьПараметр("Комментарий", НСтр("ru='Уменьшение долга контрагента'"));
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.УстановитьПараметр("ЭтоДоставка", СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоДоставка);
	
	Запрос.Текст = ТекстЗапросаРасчетыСПрочимиКонтрагентами();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаПрочиеРасчеты.СчетУчета КАК СчетУчета,
	|	ВременнаяТаблицаПрочиеРасчеты.Организация КАК Организация,
	|	ВременнаяТаблицаПрочиеРасчеты.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаПрочиеРасчеты.Договор КАК Договор
	|ИЗ
	|	ВременнаяТаблицаПрочиеРасчеты КАК ВременнаяТаблицаПрочиеРасчеты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПрочимиКонтрагентами");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыПоПрочимОперациям(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПрочимиКонтрагентами", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПрочимиКонтрагентами()

Функция ТекстЗапросаРасчетыСПрочимиКонтрагентами()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = НЕОПРЕДЕЛЕНО
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов КАК Валюта,
	|	ВременнаяТаблицаШапка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Дата,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК Сумма,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВал,
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК СуммаДляОстатка,
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВалДляОстатка,
	|	&УчетРасчетовПоПрочимОперациям КАК СодержаниеПроводки,
	|	&Комментарий КАК Комментарий,
	|	ВременнаяТаблицаШапка.Корреспонденция КАК СчетУчета,
	|	ВременнаяТаблицаШапка.БанковскийСчет КАК БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Период,
	|	0 КАК УдержаноАгентом,
	|	0 КАК УдержаноАгентомВал
	|ПОМЕСТИТЬ ВременнаяТаблицаПрочиеРасчеты
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ПрочиеРасчеты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ОтКурьерскойКомпанииПочты))
	|	И НЕ &ЭтоДоставка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаШапка.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = НЕОПРЕДЕЛЕНО
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаШапка.Корреспонденция,
	|	ВременнаяТаблицаШапка.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = НЕОПРЕДЕЛЕНО
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаШапка.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ПолученоОтКлиентаВал,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ПолученоОтКлиента,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ПолученоОтКлиентаВал,
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов),
	|	&УчетРасчетовПоПрочимОперациям,
	|	&Комментарий,
	|	ВременнаяТаблицаШапка.Корреспонденция,
	|	ВременнаяТаблицаШапка.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.УдержаноАгентом,
	|	ВременнаяТаблицаРасшифровкаПлатежа.УдержаноАгентомВал
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	&ЭтоДоставка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаШапка.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = НЕОПРЕДЕЛЕНО
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаШапка.Корреспонденция,
	|	ВременнаяТаблицаШапка.БанковскийСчет,
	|	ВременнаяТаблицаРасшифровкаПлатежа.УдержаноАгентом,
	|	ВременнаяТаблицаРасшифровкаПлатежа.УдержаноАгентомВал,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ПолученоОтКлиентаВал,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ПолученоОтКлиентаВал,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ПолученоОтКлиента,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата";
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьТаблицаРасчетыПоКредитамИЗаймам(ДокументСсылкаПоступлениеНаСчет, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("УчетРасчетовПоКредитамИЗаймам", НСтр("ru='Поступление по кредиту'"));
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПоступлениеНаСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаПоступлениеНаСчет.ВалютаДенежныхСредств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику)
	|	КОНЕЦ КАК ВидДоговора,
	|	ПоступлениеНаСчет.Дата КАК Дата,
	|	ПоступлениеНаСчет.Дата КАК Период,
	|	&УчетРасчетовПоКредитамИЗаймам КАК СодержаниеПроводки,
	|	ПоступлениеНаСчет.Контрагент КАК Контрагент,
	|	ПоступлениеНаСчет.СуммаДокумента КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютДоговора.Кратность / (КурсыВалютДоговора.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолгВал,
	|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолг,
	|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютДоговора.Кратность / (КурсыВалютДоговора.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолгВалДляОстатка,
	|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолгДляОстатка,
	|	0 КАК ПроцентыВал,
	|	0 КАК Проценты,
	|	0 КАК ПроцентыВалДляОстатка,
	|	0 КАК ПроцентыДляОстатка,
	|	0 КАК КомиссияВал,
	|	0 КАК Комиссия,
	|	0 КАК КомиссияВалДляОстатка,
	|	0 КАК КомиссияДляОстатка,
	|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютДоговора.Кратность / (КурсыВалютДоговора.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаВал,
	|	ВЫРАЗИТЬ(ПоступлениеНаСчет.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ПоступлениеНаСчет.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ПоступлениеНаСчет.ДоговорКредитаЗайма.ВалютаРасчетов КАК Валюта,
	|	ПоступлениеНаСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ПоступлениеНаСчет.ДоговорКредитаЗайма.СчетУчета КАК СчетУчета,
	|	ПоступлениеНаСчет.БанковскийСчет,
	|	ЛОЖЬ КАК УдержаноИзЗарплаты
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыПоКредитамИЗаймам
	|ИЗ
	|	Документ.ПоступлениеНаСчет КАК ПоступлениеНаСчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
	|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютДоговора
	|		ПО (КурсыВалютДоговора.Валюта = ПоступлениеНаСчет.ДоговорКредитаЗайма.ВалютаРасчетов)
	|ГДЕ
	|	ПоступлениеНаСчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|	И ПоступлениеНаСчет.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.РасчетыПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.СодержаниеПоТипуСуммы,
	|	ТаблицаДокумента.Сотрудник,
	|	ТаблицаДокумента.СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СуммаРасчетов,
	|	ТаблицаДокумента.СуммаУчета,
	|	ТаблицаДокумента.ДоговорКредитаЗайма,
	|	ТаблицаДокумента.ДоговорКредитаЗайма.ВалютаРасчетов,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ДоговорКредитаЗайма.СчетУчета,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ЛОЖЬ
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеНаСчет.ВозвратЗаймаСотрудником)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам КАК ВременнаяТаблицаРасчетыПоКредитамИЗаймам";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыПоКредитамИЗаймам");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыПоКредитамИЗаймам(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоКредитамИЗаймам", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаДанныхИзВнешнегоИсточника

Процедура ПоляЗагрузкиДанныхИзВнешнегоИсточника(ТаблицаПолейЗагрузки, НастройкиЗагрузкиДанных) Экспорт
	
	//
	// Для группы полей действует правило: хотя бы одно поле в группе должно быть выбрано в колонках
	//
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	ОписаниеТиповСтрока25 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(25));
	ОписаниеТиповСтрока50 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50));
	ОписаниеТиповСтрока1000 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(1000));
	ОписаниеТиповЧисло15_2 = Новый ОписаниеТипов("Число", , , , Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповЗаказ = Новый ОписаниеТипов("ДокументСсылка.ЗаказПокупателя");
	ОписаниеТиповСчетНаОплату = Новый ОписаниеТипов("ДокументСсылка.СчетНаОплату");
	
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Заказ", НСтр("ru = 'Заказ покупателя'"), ОписаниеТиповСтрока50, ОписаниеТиповЗаказ);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "НомерЗаказаАгента", НСтр("ru = '№ заказа агента'"), ОписаниеТиповСтрока1000, ОписаниеТиповСтрока1000);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	МассивТипов.Добавить(Тип("ДокументСсылка.РасходнаяНакладная"));
	ОписаниеТиповКолонка = Новый ОписаниеТипов(МассивТипов);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "Документ", НСтр("ru = 'Документ'"), ОписаниеТиповСтрока50, ОписаниеТиповКолонка);
	
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ПолученоОтКлиента", НСтр("ru = 'Получено от клиента'"), ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_2);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "УдержаноАгентом", НСтр("ru = 'Удержано агентом'"), ОписаниеТиповСтрока25, ОписаниеТиповЧисло15_2);
	
КонецПроцедуры

Процедура ПриОпределенииОбразцовЗагрузкиДанных(НастройкиЗагрузкиДанных, УникальныйИдентификатор) Экспорт
	
	Образец_xlsx = ПолучитьМакет("ОбразецЗагрузкиДанных_xlsx");
	ОбразецЗагрузкиДанных_xlsx = ПоместитьВоВременноеХранилище(Образец_xlsx, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_xlsx", ОбразецЗагрузкиДанных_xlsx);
	
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_mxl", "ОбразецЗагрузкиДанных_mxl");
	
	Образец_csv = ПолучитьМакет("ОбразецЗагрузкиДанных_csv");
	ОбразецЗагрузкиДанных_csv = ПоместитьВоВременноеХранилище(Образец_csv, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_csv", ОбразецЗагрузкиДанных_csv);
	
КонецПроцедуры

Процедура СопоставитьЗагружаемыеДанныеИзВнешнегоИсточника(ПараметрыСопоставления, АдресРезультата) Экспорт
	
	ТаблицаСопоставленияДанных	= ПараметрыСопоставления.ТаблицаСопоставленияДанных;
	РазмерТаблицыДанных			= ТаблицаСопоставленияДанных.Количество();
	НастройкиЗагрузкиДанных		= ПараметрыСопоставления.НастройкиЗагрузкиДанных;
	
	ПолноеИмяОбъектаЗаполнения = НастройкиЗагрузкиДанных.ПолноеИмяОбъектаЗаполнения;
	
	Организация = Неопределено;
	Если НЕ Константы.УчетПоКомпании.Получить() И НастройкиЗагрузкиДанных.Свойство("Организация") Тогда
		Организация = НастройкиЗагрузкиДанных.Организация;
	КонецЕсли; 
	
	// ТаблицаСопоставленияДанных - Тип ДанныеФормыКоллекция
	Для каждого СтрокаТаблицыФормы Из ТаблицаСопоставленияДанных Цикл
		
		// Заказ по номеру, дате, признаку
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьЗаказ(СтрокаТаблицыФормы.Заказ, СтрокаТаблицыФормы.Заказ_ВходящиеДанные, Организация);

		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СкопироватьСтрокуВЗначениеСтроковогоТипа(СтрокаТаблицыФормы.НомерЗаказаАгента, СтрокаТаблицыФормы.НомерЗаказаАгента_ВходящиеДанные);
		
		//  Расчетный документ по номеру, дате, признаку
		СопоставитьДокументРасчетов(СтрокаТаблицыФормы.Документ, СтрокаТаблицыФормы.Документ_ВходящиеДанные, Организация); 
		
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.ПолученоОтКлиента, СтрокаТаблицыФормы.ПолученоОтКлиента_ВходящиеДанные);		
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВЧисло(СтрокаТаблицыФормы.УдержаноАгентом, СтрокаТаблицыФормы.УдержаноАгентом_ВходящиеДанные);		
		
		ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения);
		
		ЗагрузкаДанныхИзВнешнегоИсточника.ПрогрессСопоставленияДанных(ТаблицаСопоставленияДанных.Индекс(СтрокаТаблицыФормы), РазмерТаблицыДанных);
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаСопоставленияДанных, АдресРезультата);
	
КонецПроцедуры

Процедура ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения = "") Экспорт
	
	ИмяСлужебногоПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяСлужебногоПоляЗагрузкаВПриложениеВозможна();
	СтрокаТаблицыФормы[ИмяСлужебногоПоля] = Истина;
			
КонецПроцедуры

Процедура СопоставитьДокументРасчетов(Документ, Документ_ВходящиеДанные, Организация)
	
	Если ПустаяСтрока(Документ_ВходящиеДанные) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	МассивТеговЗаказов = Новый Массив;
	МассивТеговЗаказов.Добавить("ЗаказПокупателя");
	МассивТеговЗаказов.Добавить("Заказы покупателей");
	МассивТеговЗаказов.Добавить("Заказ покупателя");
	МассивТеговЗаказов.Добавить("ЗаказНаряд");
	МассивТеговЗаказов.Добавить("Заказ-наряды");
	МассивТеговЗаказов.Добавить("Заказ-наряд");
	
	НомерДляПоиска	= Документ_ВходящиеДанные;
	ВидДокумента	= "РасходнаяНакладная";
	Для каждого ТегИзМассива Из МассивТеговЗаказов Цикл
		
		Если СтрНайти(Документ_ВходящиеДанные, ТегИзМассива) > 0 Тогда
			
			ВидДокумента = "ЗаказПокупателя";
			НомерДляПоиска = СокрЛП(СтрЗаменить(НомерДляПоиска, "", ТегИзМассива));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номер", "%" + НомерДляПоиска);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номер КАК Номер
	|ИЗ
	|	Документ.РасходнаяНакладная КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Номер ПОДОБНО &Номер
	|	И (ТаблицаДокумента.Организация = &Организация
	|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДокумента.Дата УБЫВ";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасходнаяНакладная", ВидДокумента); 
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТочноеСовпадение = Неопределено;
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Номер = НомерДляПоиска Тогда
			ТочноеСовпадение = Выборка.Ссылка;
			Прервать;
		КонецЕсли; 
		НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Истина);
		Если НомерНаПечать = НомерДляПоиска Тогда
			ТочноеСовпадение = Выборка.Ссылка;
			Прервать;
		КонецЕсли; 
		НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПользовательскиеПрефиксыИзНомераОбъекта(Выборка.Номер);
		НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(НомерБезПрефиксов, Истина, Истина);
		Если НомерБезПрефиксов = НомерДляПоиска Тогда
			ТочноеСовпадение = Выборка.Ссылка;
			Прервать;
		КонецЕсли; 
			
	КонецЦикла;
	Если ЗначениеЗаполнено(ТочноеСовпадение) Тогда
		Документ = ТочноеСовпадение;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 

#КонецЕсли

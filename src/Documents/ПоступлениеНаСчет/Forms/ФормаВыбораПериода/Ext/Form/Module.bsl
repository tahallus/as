
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Контрагент = Параметры.Контрагент; 
	БанковскийСчет = Параметры.БанковскийСчет; 
	ЭквайринговыйТерминал = Параметры.ЭквайринговыйТерминал;
	Организация = Параметры.Организация;
	Ссылка = Параметры.Ссылка;
	ВалютаДенежныхСредств = Параметры.ВалютаДенежныхСредств;
	РасшифровкаПлатежа = Параметры.РасшифровкаПлатежа;
	ПоложениеЭквайринговогоТерминала = Параметры.ПоложениеЭквайринговогоТерминала;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьВФормеДокумента(Команда)
	
	Если ПериодРасчетовДатаНачала > ПериодРасчетовДатаОкончания Тогда
		ПоказатьПредупреждение(Неопределено, "Дата начала периода больше даты окончания!");
		Возврат;
	Иначе
		ПараметрыЗакрытия = Новый Структура("ПериодРасчетовДатаНачала, ПериодРасчетовДатаОкончания", ПериодРасчетовДатаНачала, ПериодРасчетовДатаОкончания);
		Закрыть(ПараметрыЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПериодРасчетов(Команда)
	
	ЗаполнитьПериодРасчетовНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПериодРасчетовНаСервере()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("РасшифровкаПлатежа", ПолучитьИзВременногоХранилища(РасшифровкаПлатежа));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ЭквайринговыйТерминал", ЭквайринговыйТерминал);
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ВалютаДенежныхСредств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыПоЭквайрингуОстатки.ДатаПлатежа,
	|	РасчетыПоЭквайрингуОстатки.Документ,
	|	РасчетыПоЭквайрингуОстатки.СуммаОстаток,
	|	РасчетыПоЭквайрингуОстатки.СуммаВалОстаток,
	|	РасчетыПоЭквайрингуОстатки.КомиссияОстаток,
	|	РасчетыПоЭквайрингуОстатки.КомиссияВалОстаток,
	|	РасчетыПоЭквайрингуОстатки.Заказ,
	|	РасчетыПоЭквайрингуОстатки.ВидОперацииЭквайринга
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.РасчетыПоЭквайрингу.Остатки(
	|			,
	|			Организация = &Организация
	|				И ЭквайринговыйТерминал = &ЭквайринговыйТерминал
	|				И ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)) КАК РасчетыПоЭквайрингуОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ДатаПлатежа,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.КомиссияОстаток) КАК КомиссияОстаток,
	|	СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.КомиссияВалОстаток) КАК КомиссияВалОстаток,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Документ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Заказ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ВидОперацииЭквайринга
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыПоЭквайрингуОстатки
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента КАК ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ДатаПлатежа,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Документ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.Заказ,
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.ВидОперацииЭквайринга
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.СуммаВалОстаток) <> 0
	|		ИЛИ СУММА(ВременнаяТаблицаРасчетыПоЭквайрингуОстаткиМинусДвиженияДокумента.КомиссияВалОстаток) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ДатаПлатежа, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаНачала,
	|	МАКСИМУМ(ЕСТЬNULL(ВременнаяТаблицаРасчетыПоЭквайрингуОстатки.ДатаПлатежа, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаОкончания
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоЭквайрингуОстатки КАК ВременнаяТаблицаРасчетыПоЭквайрингуОстатки";
	
		// Если эквайринговый терминал - в табличной части, тогда отбор по эквайринговому терминалу нужно заменить на отбор по
		// банковскому счету
	Если ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ЭквайринговыйТерминал = &ЭквайринговыйТерминал", "И ЭквайринговыйТерминал.БанковскийСчетЭквайринг = &БанковскийСчетЭквайринг");
		Запрос.УстановитьПараметр("БанковскийСчетЭквайринг", БанковскийСчет);
	КонецЕсли; 

	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ПериодРасчетовДатаНачала = Выборка.ДатаНачала;
	ПериодРасчетовДатаОкончания = Выборка.ДатаОкончания;
	
КонецПроцедуры

#КонецОбласти





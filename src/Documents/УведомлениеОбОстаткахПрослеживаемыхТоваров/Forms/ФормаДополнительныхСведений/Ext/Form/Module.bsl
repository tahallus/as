
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПризнакУведомления =            Параметры.ПризнакУведомления;
	КодФормыРеорганизации =         Параметры.КодФормыРеорганизации;
	ИННДоРеорганизации =            Параметры.ИННДоРеорганизации;
	КППДоРеорганизации =            Параметры.КППДоРеорганизации;
	ПризнакУведомленияДоИзменения = Параметры.ПризнакУведомленияДоИзменения;
	ФормаОткрытаИзКорректировочногоУведомления = Параметры.ФормаОткрытаИзКорректировочногоУведомления;
	
	Если Параметры.Свойство("Продавцы") Тогда
		
		Для каждого ТекущаяСтрока Из Параметры.Продавцы Цикл
			
			НоваяСтрока = Продавцы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СписокКодовФормы = Элементы.ВыборКодаРеорганизации.СписокВыбора;
	
	ПрослеживаемостьБРУ.СписокКодовФормыРеорганизации(СписокКодовФормы);
	
	УправлениеФормой(ЭтотОбъект)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область СтраницаПризнакУведомления

&НаКлиенте
Процедура ПризнакУведомленияПриИзменении(Элемент)
	
	ПриИзмененииПризнакаУведомления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакУведомления1ПриИзменении(Элемент)
	
	ПриИзмененииПризнакаУведомления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакУведомления2ПриИзменении(Элемент)
	
	ПриИзмененииПризнакаУведомления();
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаФормаРеорганизации

&НаКлиенте
Процедура ИННДоРеорганизацииПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КППДоРеорганизацииПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СписокКодовРеорганизацииПриИзменении(Элемент)
	
	ИННДоРеорганизации = "";
	КППДоРеорганизации = "";
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКодаРеорганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОповещениеВыбора = Новый ОписаниеОповещения("ВыборИзСпискаЗавершение",ЭтотОбъект);
	ПоказатьВыборИзСписка(ОповещениеВыбора, Элемент.СписокВыбора, Элемент, КодФормыРеорганизации);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(КодФормыРеорганизации)
		И Не ЗначениеЗаполнено(ИННДоРеорганизации) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не заполнен ИНН'"),
		,
		,
		,
		Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодФормыРеорганизации)
		И Не ЗначениеЗаполнено(КППДоРеорганизации) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не заполнен КПП'"),
		,
		,
		,
		Отказ);
	КонецЕсли;
	
	СписокПродавцов = Новый СписокЗначений;
	
	Для Индекс = 0 По Продавцы.Количество() - 1 Цикл
		
		СтрокаПродавцы = Продавцы[Индекс];
		
		ИННПродавца = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПродавцы.Продавец, "ИНН");
		
		Если НЕ ЗначениеЗаполнено(ИННПродавца) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 продавца %2 не заполнен ИНН'"),
				Индекс + 1, СтрокаПродавцы.Продавец);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				,
				,
				Отказ);
		КонецЕсли;
		
		Если СписокПродавцов.НайтиПоЗначению(СтрокаПродавцы.Продавец)<> Неопределено Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке %1 повторно указан продавец %2.'"),
				Индекс + 1, СтрокаПродавцы.Продавец);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				,
				,
				Отказ);
			
		КонецЕсли;
		
		СписокПродавцов.Добавить(СтрокаПродавцы.Продавец);
		
	КонецЦикла;
	
	Если ПризнакУведомления = 3 
		И Продавцы.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указан продавец'"),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Модифицированность И ПроверитьЗаполнение()  Тогда
		
		ПараметрыПередачи = Новый Структура(
			"КодФормыРеорганизации,ИННДоРеорганизации,КППДоРеорганизации,ПризнакУведомления,ПризнакУведомленияДоИзменения,Продавцы", 
			КодФормыРеорганизации,ИННДоРеорганизации,КППДоРеорганизации, ПризнакУведомления,
			ПризнакУведомленияДоИзменения, Продавцы);
		
		ОповеститьОВыборе(ПараметрыПередачи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьПродавца(Команда)
	
	Элементы.Продавцы.ДобавитьСтроку();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииПризнакаУведомления()
	
	Продавцы.Очистить();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.Продавцы.Доступность = Форма.ПризнакУведомления <> 0;
	
	Если Форма.Продавцы.Количество() = 0 Тогда
		Элементы.Продавцы.ОтметкаНезаполненного = Форма.ПризнакУведомления = 3;
		Элементы.Продавцы.АвтоВводНовойСтроки = Форма.ПризнакУведомления = 3;
	КонецЕсли;
	
	Элементы.ФормаРеоганизации.Видимость = Форма.ФормаОткрытаИзКорректировочногоУведомления;
	Элементы.ГруппаДополнительныхРеквизитов.ОтображениеСтраниц = 
		?(Форма.ФормаОткрытаИзКорректировочногоУведомления,
			ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
			
	Элементы.ПризнакУведомленияДоИзмененияПредставление.Видимость = Форма.ФормаОткрытаИзКорректировочногоУведомления;
	Элементы.ДекорацияНовоеЗначение.Видимость = Форма.ФормаОткрытаИзКорректировочногоУведомления;
	Элементы.ДекорацияЗаголовокПризнакУведомления.Видимость = Не Форма.ФормаОткрытаИзКорректировочногоУведомления;
	
	Если Форма.ФормаОткрытаИзКорректировочногоУведомления Тогда
		
		Элементы.Продавцы.ВысотавСтрокахТаблицы = 3;
		
		Элементы.ОписаниеДополнительныхРеквизитов.Заголовок = 
			НСтр("ru='Реквизиты заполняются, если ранее собственниками товара были физические лица или плательщики НПД 
			|или государственные органы. Или, если подается корректировочное уведомление за реорганизованную организацию'");
		
		ТекстПризнакаУведомленияДоИзменения = НСтр("ru='%1'"); 
		
		Форма.ПризнакУведомленияДоИзмененияПредставление = 
			СтрШаблон(ТекстПризнакаУведомленияДоИзменения, 
				ПрослеживаемостьФормыВызовСервера.ОписаниеПризнакаУведомления(Форма.ПризнакУведомленияДоИзменения)); 
		
		ЗаполненКодФормыРеоганизации = ЗначениеЗаполнено(Форма.КодФормыРеорганизации);
		Элементы.ИННДоРеорганизации.Доступность = ЗаполненКодФормыРеоганизации;
		Элементы.КППДоРеорганизации.Доступность = ЗаполненКодФормыРеоганизации;
		
		Если Не ЗаполненКодФормыРеоганизации Тогда
			
			Элементы.ДекорацияОписаниеКода.Заголовок = "Отсутствует";
			
		Иначе
			
			Элементы.ДекорацияОписаниеКода.Заголовок = 
			ПрослеживаемостьФормыВызовСервера.ОписаниеКодаРеорганизации(Форма.КодФормыРеорганизации);
			
		КонецЕсли;
		
		Элементы.ИННДоРеорганизации.ОтметкаНезаполненного = 
		?(ЗначениеЗаполнено(Форма.ИННДоРеорганизации), Ложь, ЗаполненКодФормыРеоганизации);
		
		Элементы.КППДоРеорганизации.ОтметкаНезаполненного = 
		?(ЗначениеЗаполнено(Форма.КППДоРеорганизации), Ложь, ЗаполненКодФормыРеоганизации);;
		
	Иначе
		
		Элементы.ОписаниеДополнительныхРеквизитов.Заголовок = 
			НСтр("ru='Реквизиты заполняются, если ранее собственниками товара были физические лица или плательщики НПД 
			|или государственные органы'");
		Элементы.Продавцы.ВысотавСтрокахТаблицы = 6;
		
	КонецЕсли;
		
КонецПроцедуры
	
&НаКлиенте
Процедура ВыборИзСпискаЗавершение(ВыбранныйКод, ДополнительныеПараметры) Экспорт
	
	Модифицированность = Истина;
	КодФормыРеорганизации = ВыбранныйКод.Значение;

КонецПроцедуры

#КонецОбласти

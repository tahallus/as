#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ЗаполнитьВременныеРеквизиты();

	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	
	ПрослеживаемостьСобытияФормПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();
	
	ПрослеживаемостьСобытияФормПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПрослеживаемостьСобытияФормКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_УведомлениеОбОстаткахПрослеживаемыхТоваров", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПрослеживаемостьБРУ.УстановитьЗаголовокФормыУведомлениеОбОстатках(ЭтотОбъект);
	
	ПрослеживаемостьБРУ.СохранитьСтатусОтправки(ЭтотОбъект);
	
	УстановитьСостояниеДокумента();
	ЗаполнитьВременныеРеквизиты();
	
	ПрослеживаемостьСобытияФормПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаполнитьРНПТ(Команда)
	
	Элементы.ЗаполнитьРНПТ.Видимость = Ложь;
	
	РНПТИзКвитанции = "";
	Для каждого ДокументРеализацииПолномочийНО Из ДокументыРеализацииПолномочийНО Цикл
		Если ЗначениеЗаполнено(ДокументРеализацииПолномочийНО.РНПТ) Тогда
			РНПТИзКвитанции = СокрЛП(ДокументРеализацииПолномочийНО.РНПТ);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьРНПТНаСервере(РНПТИзКвитанции);
	
КонецПроцедуры

&НаКлиенте
Процедура ПервичныйДокументПриИзменении(Элемент)
	
	ОчиститьТабличнуюЧастьПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КодТНВЭДПриИзменении(Элемент)
	
	КодТНВЭДПриИзмененииНаСервере();
	
	ОчиститьТабличнуюЧастьПриИзмененииРеквизита(Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	ОчиститьТабличнуюЧастьПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ЗаполнитьПоТНВЭД(Команда)
	
	Если Объект.Товары.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'При заполнении табличная часть будет очищена. Заполнить?'");
	
		Оповещение = Новый ОписаниеОповещения("ТоварыОбработкаЗаполненияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		
	Иначе
		
		ЗаполнитьПоТНВЭДПоДокументу();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОбработкаЗаполненияЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт

	Если РезультатВыбора = КодВозвратаДиалога.Да Тогда
		
		ЗаполнитьПоТНВЭДПоДокументу();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПрослеживаемостьФормыКлиент.ТоварыНоменклатураНачалоВыбораУведомления(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПрослеживаемостьФормыКлиент.ОбработкаВыбораУведомления(ЭтотОбъект, ВыбранноеЗначение, ИсточникВыбора);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПрослеживаемостьФормыКлиент.ТоварыКоличествоПриИзмененииУведомления(ЭтотОбъект, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура КодТНВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПрослеживаемостьФормыКлиент.КодТНВЭДНачалоВыбора(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыгрузитьУведомлениеВXML(Команда)
	
	ВыгрузитьУведомлениеОбОстатках();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	Если НЕ ОнлайнСервисыРегламентированнойОтчетностиВызовСервера.СобытиеНаступило("Отпр.ув.об ост.просл.т.") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отправка уведомления в электронном виде предусмотрена законодательством с 1 июля 2021 г.'"));
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФСС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что уведомление уже сдано?'"));
	
	ИнтерфейсыВзаимодействияБРОКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОчиститьТабличнуюЧастьПриИзмененииРеквизита(Элемент)
	
	Реквизит = Элемент.Заголовок;
	
	Если Объект.Товары.Количество() <> 0 Тогда
		
		ШаблонВопроса = НСтр("ru = 'При изменении %1 табличная часть будет очищена. Продолжить?'");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонВопроса, Реквизит);
		
		Оповещение = Новый ОписаниеОповещения("ИзменениеРеквизитаЗаполненияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		
	Иначе
		
		СтароеЗначениеЕдиницаИзмерения = Объект.ЕдиницаИзмерения;
		СтароеЗначениеПервичныйДокумент = Объект.ПервичныйДокумент;
		СтароеЗначениеТНВЭД = Объект.КодТНВЭД;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменениеРеквизитаЗаполненияЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт

	Если РезультатВыбора = КодВозвратаДиалога.Да Тогда
	
		Объект.Товары.Очистить();
		
		СтароеЗначениеЕдиницаИзмерения = Объект.ЕдиницаИзмерения;
		СтароеЗначениеПервичныйДокумент = Объект.ПервичныйДокумент;
		СтароеЗначениеТНВЭД = Объект.КодТНВЭД;
		КодТНВЭДПриИзмененииНаСервере();

	Иначе
		
		Объект.ЕдиницаИзмерения = СтароеЗначениеЕдиницаИзмерения;
		Объект.ПервичныйДокумент = СтароеЗначениеПервичныйДокумент;
		Объект.КодТНВЭД = СтароеЗначениеТНВЭД;
		КодТНВЭДПриИзмененииНаСервере();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура КодТНВЭДПриИзмененииНаСервере()
	
	Объект.ЕдиницаПрослеживаемости = 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.КодТНВЭД, "ЕдиницаИзмерения");
		
	Объект.ЕдиницаИзмерения = "";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРНПТНаСервере(РНПТИзКвитанции)
	
	НайденныйРНПТ = ПрослеживаемостьПереопределяемый.ПолучитьРНПТНаСервере(РНПТИзКвитанции);
	
	Объект.РНПТ = НайденныйРНПТ;
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоТНВЭДПоДокументу();

	Если Объект.Ссылка.Пустая() Тогда
		Записать();
	ИначеЕсли Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	ТаблицаТоваров = ПрослеживаемостьВызовСервераПереопределяемый.ПолучитьТаблицуТоваровПоТНВЭД(Объект);
	
	Объект.Товары.Загрузить(ТаблицаТоваров);
	
	ЗаполнитьВременныеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьУведомлениеОбОстатках()
	
	Если Модифицированность 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Записать();
	КонецЕсли;
	
	ПрослеживаемостьКлиент.ВыгрузитьВФайлУведомлениеПоПрослеживаемости(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// ТоварыЕдиницаИзмерения, ТоварыЕдиницаПрослеживаемогоТовара, ТоварыКоличествоПрослеживаемости
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыЕдиницаИзмерения");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыЕдиницаПрослеживаемогоТовара");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыКоличествоПрослеживаемости");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ЕдиницаИзмерения", ВидСравненияКомпоновкиДанных.Равно, Объект.ЕдиницаПрослеживаемости);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
	// ТоварыКомиссионер

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыКомиссионер");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Товары.Комиссионер", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Выбор комиссионера>'"));
	
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТипУведомления = ?(Объект.НомерКорректировки = 0, 0, 1);
	
	ПрослеживаемостьБРУ.УстановитьЗаголовокФормыУведомлениеОбОстатках(ЭтотОбъект);
	
	УстановитьСостояниеДокумента();
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВременныеРеквизиты()
	
	Для каждого ТекущаяСтрока Из Объект.Товары Цикл
		
		ТекущаяСтрока.ЕдиницаИзмерения = Объект.ЕдиницаИзмерения;
		ТекущаяСтрока.ЕдиницаПрослеживаемости = Объект.ЕдиницаПрослеживаемости;
		
	КонецЦикла;
	
	СтароеЗначениеЕдиницаИзмерения = Объект.ЕдиницаИзмерения;
	СтароеЗначениеПервичныйДокумент = Объект.ПервичныйДокумент;
	СтароеЗначениеТНВЭД = Объект.КодТНВЭД;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Форма.Элементы.ГруппаНомерДата.Видимость = Форма.ТипУведомления = 0;
	Форма.Элементы.Организация.ТолькоПросмотр = Форма.ТипУведомления <> 0;
	Форма.Элементы.РНПТ.ТолькоПросмотр = Форма.ТипУведомления <> 0;
	
	СтруктураДополнительныхРеквизитов = Новый Структура("ПризнакУведомления,КодФормыРеорганизации",
		Объект.ПризнакУведомления, Объект.КодФормыРеорганизации);
	
	Форма.НадписьДополнительныеСведения = 
		ПрослеживаемостьФормыВызовСервера.ТекстДополнительныеСведения(СтруктураДополнительныхРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	ПрослеживаемостьПереопределяемый.УстановитьСостояниеДокумента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДополнительныеРеквизиты(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = ЭтотОбъект;
	
	Если НЕ Форма.ТолькоПросмотр Тогда
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ТолькоПросмотр",        Форма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("ИННДоРеорганизации",    Объект.ИННДоРеорганизации);
	ПараметрыФормы.Вставить("КППДоРеорганизации",    Объект.КППДоРеорганизации);
	ПараметрыФормы.Вставить("ФормаОткрытаИзКорректировочногоУведомления",  Ложь);
	ПараметрыФормы.Вставить("ПризнакУведомления",    Объект.ПризнакУведомления);
	ПараметрыФормы.Вставить("КодФормыРеорганизации", Объект.КодФормыРеорганизации);
	ПараметрыФормы.Вставить("Продавцы", Объект.Продавцы);
	
	ОткрытьФорму(
		"Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Форма.ФормаДополнительныхСведений",
		ПараметрыФормы, 
		Форма
	);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполнения назначения платежа в документе
//
Процедура ЗаполнитьНазначениеПлатежа(НазначениеВФорме = "", ИзменениеСуммы = Ложь) Экспорт
	
	ЭтоПеречислениеВБюджет = (ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога);
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РасходДСПлан") Тогда
		
		Если ЗначениеЗаполнено(ДокументОснование.НомерВходящегоДокумента) Тогда
			Основание = ДокументОснование;
		Иначе
			Основание = ДокументОснование.ДокументОснование;
		КонецЕсли;
		
	Иначе
		Основание = ДокументОснование;
	КонецЕсли;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ШаблонНомерДатаВходящая = НСтр("ru='Оплата по накладной N %1 от %2 г.'");
	Иначе
		ШаблонНомерДатаВходящая = НСтр("ru='Оплата по счету N %1 от %2 г.'");
	КонецЕсли;
	
	Если ПустаяСтрока(НазначениеВФорме) Тогда
		
		Если ЗначениеЗаполнено(СчетКонтрагента) Тогда
			Если ЗначениеЗаполнено(СчетКонтрагента.ТекстКорреспондента) Тогда
				ТекстПолучателя = СчетКонтрагента.ТекстКорреспондента;
			КонецЕсли;
			НазначениеВФорме = СчетКонтрагента.ТекстНазначения;
		ИначеЕсли ЗначениеЗаполнено(Контрагент) Тогда
			ТекстПолучателя = Контрагент.НаименованиеПолное;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Основание) 
		 И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Основание, "НомерВходящегоДокумента")
		 И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Основание, "ДатаВходящегоДокумента") Тогда
		
		НомерВходящегоДокумента = СокрЛП(Основание.НомерВходящегоДокумента);
		ДатаВходящегоДокумента  = Основание.ДатаВходящегоДокумента;
		
	Иначе
		НомерВходящегоДокумента = "";
		ДатаВходящегоДокумента = '00010101';
	КонецЕсли;
	
	БезНалогаНДС = СтавкаНДС.НеОблагается;
	
	Если ИзменениеСуммы Тогда
		
		ПозицияСуммы = СтрНайти(НазначениеПлатежа, "Сумма ");
		
		Если ПозицияСуммы = 0
		   И ЗначениеЗаполнено(НазначениеПлатежа) Тогда
			ТекстНазначение = НазначениеПлатежа;
		Иначе
			ТекстНазначение = Лев(НазначениеПлатежа, ПозицияСуммы - 1);
		КонецЕсли;
		
		Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
			ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ТекстНазначение) Тогда
			ТекстНазначение = НазначениеВФорме;
		КонецЕсли;
		
	Иначе
		
		Если ЭтоПеречислениеВБюджет И ЗначениеЗаполнено(Налог) Тогда
			ЗаполнитьРеквизитыПоНалогу();
			ТекстНазначение = НазначениеПлатежа;
		Иначе
			
			Если ПустаяСтрока(НазначениеВФорме) И ЗначениеЗаполнено(НомерВходящегоДокумента) Тогда
				НазначениеВФорме = СтрШаблон(ШаблонНомерДатаВходящая, НомерВходящегоДокумента, Формат(ДатаВходящегоДокумента, НСтр("ru = 'ДФ=''dd MMMM yyyy'''")));
			КонецЕсли;
			
			ТекстНазначение = НазначениеВФорме;
			
		КонецЕсли;
	КонецЕсли;
	
	ТекстСумма = Строка(Формат(СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ="));
	
	ТекстНДС = "";
	
	Если ЗначениеЗаполнено(СтавкаНДС)
	И НЕ БезНалогаНДС
	И НЕ ЭтоПеречислениеВБюджет Тогда
		ТекстНДС = НСтр("ru = 'НДС(%СтавкаНДС%) %СуммаНДС%'");
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СтавкаНДС%", Строка(СтавкаНДС));
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СуммаНДС%", Строка(Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ=")));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СуммаНДС)
	И НЕ ЗначениеЗаполнено(СтавкаНДС)
	И НЕ ЭтоПеречислениеВБюджет Тогда
		ТекстНДС = НСтр("ru = 'НДС %СуммаНДС%'");
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СуммаНДС%", Строка(Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ=")));
	КонецЕсли;
	
	ТекстНазначениеПлатежа = НСтр(
		"ru = '%ТекстНазначение%
		|Сумма %ТекстСумма%
		|%ЗначениеСтавкиНДС% %ТекстНДС%'"
	);
	
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстНазначение%", ТекстНазначение);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстСумма%", ТекстСумма);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ЗначениеСтавкиНДС%", ?(БезНалогаНДС ИЛИ ЭтоПеречислениеВБюджет ИЛИ (НЕ ЗначениеЗаполнено(СуммаНДС) И НЕ ЗначениеЗаполнено(СтавкаНДС)), НСтр("ru = 'Без налога (НДС)'"), НСтр("ru = 'В т.ч.'")));
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстНДС%", ТекстНДС);
	
	НазначениеПлатежа = ТекстНазначениеПлатежа;
	
	// Заменим (добавим) УИН (уникальный идентификатор начисления)
	// С 01 января 2014 по 30 марта 2014 он указывается в назначении платежа
	ПлатежиВБюджетКлиентСервер.ЗаменитьВНазначенииПлатежаУИН(
		НазначениеПлатежа,
		ИдентификаторПлатежа,
		Дата,
		ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога
	);
	
КонецПроцедуры // ЗаполнитьНазначениеПлатежа()

// Заполняет реквизиты оплаты по данным ВидНалога
//
Процедура ЗаполнитьРеквизитыПоНалогу() Экспорт
	
	Перем ВидНалога;
	
	Если ЗначениеЗаполнено(Дата) Тогда
		Период = Дата;
	Иначе
		Период = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Налог) Тогда
		ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Налог, "ВидНалога");
	КонецЕсли;
	
	ПоказателиНалоговогоПериода = ПлатежиВБюджетКлиентСервер.ПоказателиНалоговогоПериода(Организация, ВидНалога, Период);
	
	Если ЗначениеЗаполнено(Налог) Тогда
		НазначениеПлатежа = Справочники.ВидыНалогов.НазначениеПлатежа(
			Налог,,
			Организация,
			Макс(ПоказателиНалоговогоПериода.Период, Период),
			ПоказателиНалоговогоПериода.ПредставлениеНалоговогоПериода);
		
		КодБК = Справочники.ВидыНалогов.КБК(
			Налог,,
			Макс(ПоказателиНалоговогоПериода.Период, Период));
	КонецЕсли;
	
	Если ПлатежиВБюджетКлиентСервер.ВидГосударственногоОргана(КодБК) = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган 
		ИЛИ Налог = Справочники.ВидыНалогов.АвансовыйПлатежПриУСН
		ИЛИ Налог = Справочники.ВидыНалогов.ЕдиныйНалогПриУСН 
		ИЛИ Налог = Справочники.ВидыНалогов.ПФРСвыше300ТР Тогда
		ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
	ИначеЕсли ПлатежиВБюджетКлиентСервер.ПлатежАдминистрируетсяТаможеннымиОрганами(КодБК) Тогда
		ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж;
	Иначе
		ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения документа на основании структуры
//
// Параметры:
//   ДанныеЗаполнения - Структура - параметр, переданный в обработчик ОбработкаЗаполнения.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если Не ДанныеЗаполнения.Свойство("Документ") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		ЗаполнитьПоСчетНаОплатуПоставщика(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ЗаполнитьПоЗаказПоставщику(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.РасходДСПлан") Тогда
		ЗаполнитьПоРасходДСПлан(ДанныеЗаполнения.Документ);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		ЗаполнитьПоАвансовыйОтчет(ДанныеЗаполнения.Документ);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоСтруктуре()

// Обработчик заполнения на основании документа ЗаказПоставщику
//
// Параметры:
//	ДокументСсылкаЗаказПоставщику - ДокументСсылка.ЗаказПоставщику.
//	
Процедура ЗаполнитьПоЗаказПоставщику(ДокументСсылкаЗаказПоставщику, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	БанкСчета.ОрганизацияБанковскийСчет КАК БанковскийСчет,
	|	БанкСчета.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППлательщика,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП КАК КПППолучателя,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)) КАК ТекстКорреспондента,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)) КАК ТекстНазначения,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС,
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок КАК КоличествоРазличныхСтавок,
	|	ТаблицаДокумента.Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор
	|ИЗ
	|	Документ.ЗаказПоставщику.Запасы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказПоставщикуЗапасы.СтавкаНДС) КАК КоличествоРазличныхСтавок,
	|			ЗаказПоставщикуЗапасы.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
	|		ГДЕ
	|			ЗаказПоставщикуЗапасы.Ссылка = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказПоставщикуЗапасы.Ссылка) КАК СтавкаНДСИзДокумента
	|		ПО ТаблицаДокумента.Ссылка = СтавкаНДСИзДокумента.Ссылка,
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ВЫБОР
	|			КОГДА ЗаказПоставщику.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА ЗаказПоставщику.БанковскийСчет
	|			КОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ЗаказПоставщику.Договор.ВалютаРасчетов
	|				ТОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию
	|			КОГДА ЕСТЬNULL(БанковскиеСчетаОрганизации.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА БанковскиеСчетаОрганизации.Ссылка
	|			ИНАЧЕ ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию
	|		КОНЕЦ КАК ОрганизацияБанковскийСчет,
	|		ВЫБОР
	|			КОГДА ЗаказПоставщику.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА ЗаказПоставщику.БанковскийСчет.ВалютаДенежныхСредств
	|			КОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ЗаказПоставщику.Договор.ВалютаРасчетов
	|				ТОГДА ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОГДА ЕСТЬNULL(БанковскиеСчетаОрганизации.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА БанковскиеСчетаОрганизации.ВалютаДенежныхСредств
	|			ИНАЧЕ ЗаказПоставщику.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|		КОНЕЦ КАК ВалютаДокумента
	|	ИЗ
	|		Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаОрганизации
	|			ПО ЗаказПоставщику.Организация = БанковскиеСчетаОрганизации.Владелец
	|				И ЗаказПоставщику.ВалютаДокумента = БанковскиеСчетаОрганизации.ВалютаДенежныхСредств
	|				И (БанковскиеСчетаОрганизации.ПометкаУдаления = ЛОЖЬ)
	|	ГДЕ
	|		ЗаказПоставщику.Ссылка = &Ссылка) КАК БанкСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)),
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок,
	|	БанкСчета.ОрганизацияБанковскийСчет,
	|	БанкСчета.ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Договор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	// Заполнение расшифровки платежа
	ЗапросРасшифровка = Новый Запрос;
	ЗапросРасшифровка.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику);
	ЗапросРасшифровка.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	ЗапросРасшифровка.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	ЗапросРасшифровка.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.оплата) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Вручную) КАК СпособЗачета,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ИСТИНА КАК ПризнакАванса,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ЕСТЬNULL(КурсыВалютДокумента.Курс, 1) КАК КурсДокумента,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК КратностьДокумента,
	|	ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) КАК КурсСчета,
	|	ЕСТЬNULL(КурсыВалютБанковскогоСчета.Кратность, 1) КАК КратностьСчета,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|						И КурсыВалютРасчетов.Курс <> 0
	|						И КурсыВалютДокумента.Кратность <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
	|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
	|	ШапкаДокумента.Договор.ВалютаРасчетов КАК ВалютаРасчетов
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Запасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|			КОНЕЦ КАК БанковскийСчет,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОНЕЦ КАК ВалютаДенежныхСредств,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка.Владелец
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|			КОНЕЦ КАК Владелец
	|		ИЗ
	|			Документ.ЗаказПоставщику КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.Договор,
	|	ВложенныйЗапрос.ВалютаДенежныхСредств,
	|	ВложенныйЗапрос.БанковскийСчет,
	|	ТаблицаДокумента.СтавкаНДС,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютБанковскогоСчета.Курс,
	|	КурсыВалютБанковскогоСчета.Кратность,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|			ТОГДА ШапкаДокумента.БанковскийСчет
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ШапкаДокумента.Договор.ВалютаРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаСчетовИЗаказов КАК ОплатаСчетовИЗаказов
	|ГДЕ
	|	ОплатаСчетовИЗаказов.СчетНаОплату = &Ссылка
	|	И ОплатаСчетовИЗаказов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходнаяНакладная.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|ГДЕ
	|	ПриходнаяНакладная.Заказ = &Ссылка
	|	И ПриходнаяНакладная.СуммаДокумента = &СуммаЗаказа
	|	И ПриходнаяНакладная.Проведен
	|	И ПриходнаяНакладная.Контрагент.ВестиРасчетыПоДокументам";
	
	ЗапросРасшифровка.УстановитьПараметр("СуммаЗаказа", Запрос.Параметры.Ссылка.СуммаДокумента);
	
	МассивРезультатов = ЗапросРасшифровка.ВыполнитьПакет();
	Выборка = МассивРезультатов[0].Выбрать();

	РезультатЗапроса = МассивРезультатов[0];
	РасшифровкаПлатежа.Очистить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка.Следующий();
		
		ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 1, Выборка);
		
		ДокументДляСтроки = Неопределено;
		ВыборкаДокумент = МассивРезультатов[2].Выбрать();
		Если ВыборкаДокумент.Следующий() Тогда
			ДокументДляСтроки = ВыборкаДокумент.Ссылка;
		КонецЕсли;
		
		// Заполним расшифровку платежа
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); //Дополним данными шапки
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			
			Если НЕ Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
				РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, Выборка.НалогообложениеНДС);
			КонецЕсли;
			
			Если ДокументДляСтроки <> Неопределено Тогда
				НоваяСтрока.Документ = ДокументДляСтроки;
				НоваяСтрока.ПризнакАванса = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	СчетКонтрагента = ДвижениеДенежныхСредствСервер.ПолучитьБанковскийСчетКонтрагентаПоВалюте(Контрагент, ВалютаДокумента);
	ЗаполнитьНазначениеПлатежа();
	
КонецПроцедуры // ЗаполнитьПоЗаказПоставщику()

// Обработчик заполнения на основании документа СчетНаОплатуПоставщика
//
// Параметры:
//	ДокументСсылкаСчетНаОплатуПоставщика - ДокументСсылка.СчетНаОплатуПоставщика.
//	
Процедура ЗаполнитьПоСчетНаОплатуПоставщика(ДокументСсылкаСчетНаОплатуПоставщика, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплатуПоставщика);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	БанкСчета.ОрганизацияБанковскийСчет КАК БанковскийСчет,
	|	БанкСчета.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	БанкСчета.КонтрагентБанковскийСчет КАК СчетКонтрагента,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППлательщика,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП КАК КПППолучателя,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)) КАК ТекстКорреспондента,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)) КАК ТекстНазначения,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств
	|						И КурсыВалютДокумента.Кратность <> 0
	|						И КурсыВалютБанковскогоСчета.Курс <> 0
	|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС,
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок КАК КоличествоРазличныхСтавок,
	|	ТаблицаДокумента.Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Запасы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СчетНаОплатуПоставщикаЗапасы.СтавкаНДС) КАК КоличествоРазличныхСтавок,
	|			СчетНаОплатуПоставщикаЗапасы.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.СчетНаОплатуПоставщика.Запасы КАК СчетНаОплатуПоставщикаЗапасы
	|		ГДЕ
	|			СчетНаОплатуПоставщикаЗапасы.Ссылка = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СчетНаОплатуПоставщикаЗапасы.Ссылка) КАК СтавкаНДСИзДокумента
	|		ПО ТаблицаДокумента.Ссылка = СтавкаНДСИзДокумента.Ссылка,
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ВЫБОР
	|			КОГДА СчетНаОплатуПоставщика.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА СчетНаОплатуПоставщика.БанковскийСчет
	|			КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				ТОГДА СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию
	|			ИНАЧЕ БанковскиеСчетаОрганизации.Ссылка
	|		КОНЕЦ КАК ОрганизацияБанковскийСчет,
	|		ВЫБОР
	|			КОГДА СчетНаОплатуПоставщика.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА СчетНаОплатуПоставщика.БанковскийСчет.ВалютаДенежныхСредств
	|			КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				ТОГДА СчетНаОплатуПоставщика.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОГДА БанковскиеСчетаОрганизации.Ссылка <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|				ТОГДА БанковскиеСчетаОрганизации.Ссылка.ВалютаДенежныхСредств
	|			ИНАЧЕ СчетНаОплатуПоставщика.ВалютаДокумента
	|		КОНЕЦ КАК ВалютаДокумента,
	|		ВЫБОР
	|			КОГДА СчетНаОплатуПоставщика.ВалютаДокумента = СчетНаОплатуПоставщика.Контрагент.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				ТОГДА СчетНаОплатуПоставщика.Контрагент.БанковскийСчетПоУмолчанию
	|			ИНАЧЕ БанковскиеСчетаКонтрагента.Ссылка
	|		КОНЕЦ КАК КонтрагентБанковскийСчет
	|	ИЗ
	|		Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаКонтрагента
	|			ПО СчетНаОплатуПоставщика.ВалютаДокумента = БанковскиеСчетаКонтрагента.ВалютаДенежныхСредств
	|				И СчетНаОплатуПоставщика.Контрагент = БанковскиеСчетаКонтрагента.Владелец
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаОрганизации
	|			ПО СчетНаОплатуПоставщика.Организация = БанковскиеСчетаОрганизации.Владелец
	|				И СчетНаОплатуПоставщика.ВалютаДокумента = БанковскиеСчетаОрганизации.ВалютаДенежныхСредств
	|	ГДЕ
	|		СчетНаОплатуПоставщика.Ссылка = &Ссылка) КАК БанкСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|		ПО БанкСчета.ОрганизацияБанковскийСчет.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СтавкаНДСИзДокумента.КоличествоРазличныхСтавок = 1
	|			ТОГДА ТаблицаДокумента.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Организация,
	|	ТаблицаДокумента.Ссылка.Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ИНН,
	|	ТаблицаДокумента.Ссылка.Контрагент.КПП,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстКорреспондента КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Контрагент.БанковскийСчетПоУмолчанию.ТекстНазначения КАК СТРОКА(1000)),
	|	СтавкаНДСИзДокумента.КоличествоРазличныхСтавок,
	|	БанкСчета.ОрганизацияБанковскийСчет,
	|	БанкСчета.ВалютаДокумента,
	|	БанкСчета.КонтрагентБанковскийСчет,
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Ссылка.Организация.ИНН,
	|	ВЫБОР
	|		КОГДА БанкСчета.ОрганизацияБанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Ссылка.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ТаблицаДокумента.Ссылка.Договор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	
	// Заполнение расшифровки платежа
	ЗапросРасшифровка = Новый Запрос;
	ЗапросРасшифровка.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплатуПоставщика);
	ЗапросРасшифровка.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Если ТипЗнч(ДокументСсылкаСчетНаОплатуПоставщика.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ЗапросРасшифровка.УстановитьПараметр("Заказ", ДокументСсылкаСчетНаОплатуПоставщика.ДокументОснование);
	Иначе
		ЗапросРасшифровка.УстановитьПараметр("Заказ", Документы.ЗаказПоставщику.ПустаяСсылка());
	КонецЕсли;
		
		// Заполним данные табличных частей документа.
		ЗапросРасшифровка.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
		|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Вручную) КАК СпособЗачета,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Заказ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПоставщика.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплатуПоставщика КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ШапкаДокумента.ДокументОснование,
		|	ТаблицаДокумента.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|	КОНЕЦ,
		|	КурсыВалютДокумента.Курс,
		|	КурсыВалютБанковскогоСчета.Курс,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Заказ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходнаяНакладная.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Заказ = &Заказ
		|	И ПриходнаяНакладная.СуммаДокумента = &СуммаЗаказа
		|	И ПриходнаяНакладная.Проведен
		|	И ПриходнаяНакладная.Контрагент.ВестиРасчетыПоДокументам";
		
	ЗапросРасшифровка.УстановитьПараметр("СуммаЗаказа", ЗапросРасшифровка.Параметры.Заказ.СуммаДокумента);
	
	МассивРезультатов = ЗапросРасшифровка.ВыполнитьПакет();
	Выборка = МассивРезультатов[0].Выбрать();

	РасшифровкаПлатежа.Очистить();

	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если НЕ Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, Выборка.НалогообложениеНДС);
		КонецЕсли;
		
		ВыборкаДокумент = МассивРезультатов[1].Выбрать();
		Если ВыборкаДокумент.Следующий() Тогда
			НоваяСтрока.Документ = ВыборкаДокумент.Ссылка;
			НоваяСтрока.ПризнакАванса = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
	ЗаполнитьНазначениеПлатежа();
	
КонецПроцедуры // ЗаполнитьПоСчетНаОплатуПоставщика()

// Обработчик заполнения на основании документа РасходДСПлан.
//
// Параметры:
//	ДокументСсылкаРасходДСПлан - ДокументСсылка.РасходДСПлан.
//	
Процедура ЗаполнитьПоРасходДСПлан(ДокументСсылкаРасходДСПлан) Экспорт
	
	Если ДокументСсылкаРасходДСПлан.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести платежное поручение на основании неутвержденной заявки!'");
	КонецЕсли;
	
	Если ДокументСсылкаРасходДСПлан.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести платежное поручение. В заявке указан неверный способ оплаты (тип денежных средств)!'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСсылкаРасходДСПлан.ДокументОснование) Тогда
		
		ЗаполненПоОснованиюЗаявкиНаРасход = Истина;
		
		Если ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			ЗаполнитьПоАвансовыйОтчет(ДокументСсылкаРасходДСПлан.ДокументОснование);
		ИначеЕсли ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
			ЗаполнитьПоНачислениеНалогов(ДокументСсылкаРасходДСПлан.ДокументОснование);
		ИначеЕсли ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.ПлатежнаяВедомость") Тогда
			ЗаполнитьПоПлатежнаяВедомость(ДокументСсылкаРасходДСПлан.ДокументОснование);
		Иначе
			ЗаполненПоОснованиюЗаявкиНаРасход = Ложь;
		КонецЕсли;
		
		Если ЗаполненПоОснованиюЗаявкиНаРасход Тогда
			ДокументОснование = ДокументСсылкаРасходДСПлан;
			СуммаДокумента = ДокументСсылкаРасходДСПлан.СуммаДокумента;
			Статья = ДокументСсылкаРасходДСПлан.СтатьяДвиженияДенежныхСредств;
			ЗаполнитьНазначениеПлатежа();
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаРасходДСПлан);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(ТекущаяДатаСеанса()) +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	&ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.СчетНаОплатуПоставщика
	|			ТОГДА ТаблицаДокумента.ДокументОснование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|	КОНЕЦ КАК СчетНаОплату,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.СчетНаОплатуПоставщика
	|				ИЛИ ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакАванса,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ВложенныйЗапрос.КонтрагентБанковскийСчет КАК СчетКонтрагента,
	|	ТаблицаДокумента.Организация.ИНН КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.БанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|			ТОГДА ТаблицаДокумента.Организация.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППлательщика,
	|	ТаблицаДокумента.Контрагент.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Контрагент.КПП КАК КПППолучателя,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * ВЫБОР
	|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	|ИЗ
	|	Документ.РасходДСПлан КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
	|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.Контрагент.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|					ТОГДА ТаблицаДокумента.Контрагент.БанковскийСчетПоУмолчанию
	|				ИНАЧЕ БанковскиеСчетаКонтрагента.Ссылка
	|			КОНЕЦ КАК КонтрагентБанковскийСчет
	|		ИЗ
	|			Документ.РасходДСПлан КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчетаКонтрагента
	|				ПО ТаблицаДокумента.ВалютаДокумента = БанковскиеСчетаКонтрагента.ВалютаДенежныхСредств
	|					И ТаблицаДокумента.Контрагент = БанковскиеСчетаКонтрагента.Владелец
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &ДокументОснование
	|			И БанковскиеСчетаКонтрагента.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ДокументОснованиеЗаявки = Выборка.ДокументОснование.ДокументОснование;
	
	Если ЗначениеЗаполнено(ДокументОснованиеЗаявки) Тогда
		
		Если ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.ДоговорКредитаИЗайма") Тогда
			ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Прочее;
		ИначеЕсли ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.НачислениеЗарплаты") Тогда
			ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Зарплата;
		КонецЕсли;
		
	КонецЕсли;
	
	СчетКонтрагента = ДвижениеДенежныхСредствСервер.ПолучитьБанковскийСчетКонтрагентаПоВалюте(Контрагент, ВалютаДокумента);
	
	// Используем ставку НДС из документа основания заявки
	Если ЗначениеЗаполнено(ДокументОснование.ДокументОснование) Тогда
		СтавкаНДСОснования = ПолучитьСтавкуНДСОснования(ДокументОснование.ДокументОснование);
		Если ЗначениеЗаполнено(СтавкаНДСОснования) И СтавкаНДСОснования <> СтавкаНДС Тогда
			СтавкаНДС = СтавкаНДСОснования;
			ОбновитьСуммуНДС();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьНазначениеПлатежа();
	
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	НоваяСтрока.СтавкаНДС = СтавкаНДС;
	НоваяСтрока.СуммаНДС = СуммаНДС;
	НоваяСтрока.ПризнакАванса = Истина;
	НоваяСтрока.ДокументПланирования = ДокументСсылкаРасходДСПлан;
	
	Если НЕ ЗначениеЗаполнено(НоваяСтрока.Договор) Тогда
		НоваяСтрока.Договор = Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока.Договор) Тогда
		ДоговорВалютаКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
			?(Дата = '00010101', ТекущаяДатаСеанса(), Дата),
			Новый Структура("Валюта", НоваяСтрока.Договор.ВалютаРасчетов)
		);
		НоваяСтрока.Курс = ?(ДоговорВалютаКурсКратность.Курс = 0, 1, ДоговорВалютаКурсКратность.Курс);
		НоваяСтрока.Кратность = ?(ДоговорВалютаКурсКратность.Кратность = 0, 1, ДоговорВалютаКурсКратность.Кратность);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСсылкаРасходДСПлан.ДокументОснование)
		И ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику")
		И Контрагент.ВестиРасчетыПоЗаказам Тогда
		
		НоваяСтрока.Заказ = ДокументСсылкаРасходДСПлан.ДокументОснование;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснованиеЗаявки)
		И ТипЗнч(ДокументОснованиеЗаявки) = Тип("ДокументСсылка.СчетНаОплатуПоставщика")
		И Контрагент.ВестиУчетОплатыПоСчетам Тогда
		
		НоваяСтрока.СчетНаОплату = ДокументОснованиеЗаявки;
		
	КонецЕсли;
	
КонецПроцедуры //ЗаполнитьПоРасходДСПлан()

// Процедура заполнения документа на основании начисления налогов.
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ПриходДенежныхСредствПлан - Плановый платеж
//	ДанныеЗаполнения - Структура - Данные заполнения документа.
//	
Процедура ЗаполнитьПоНачислениеНалогов(ДокументСсылкаНачислениеНалогов) Экспорт
	
	Если ДокументСсылкаНачислениеНалогов.ВидОперации <> Перечисления.ВидыОперацийНачислениеНалогов.Начисление Тогда
		ВызватьИсключение НСтр("ru='Расход со счета можно ввести только на основании начисления налогов, а не возмещения.'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаНачислениеНалогов);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("КонстантаНациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("КонстантаВалютаУчета", Константы.ВалютаУчета.Получить());
	
	Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(ТекущаяДатаСеанса()) +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	Организации.КодПоОКАТО КАК КодПоОКАТО,
	|	Организации.КодПоОКТМО КАК КодПоОКТМО,
	|	Организации.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя,
	|	Организации.КодОрганаПФР КАК КодОрганаПФР,
	|	Организации.КодОрганаФСС КАК КодОрганаФСС,
	|	Организации.РегистрационныйНомерПФР_ИП КАК РегистрационныйНомерПФР_ИП,
	|	Организации.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	Организации.РегистрационныйНомерФСС КАК РегистрационныйНомерФСС,
	|	Организации.ИНН КАК ИННПлательщика,
	|	Организации.НаименованиеПлательщикаПриПеречисленииНалогов КАК НаименованиеПлательщикаПриПеречисленииНалогов,
	|	ВЫБОР
	|		КОГДА Организации.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта
	|			ТОГДА ВЫБОР
	|					КОГДА Организации.БанковскийСчетПоУмолчанию.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|						ТОГДА Организации.КПП
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВложенныйЗапрос.БанковскийСчет.ВариантУказанияКПП = ЗНАЧЕНИЕ(Перечисление.ВариантыУказанияКПП.ВоВсехПлатежныхПоручениях)
	|					ТОГДА Организации.КПП
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК КПППлательщика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта
	|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	&КонстантаНациональнаяВалюта КАК ВалютаДокумента,
	|	ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютУчета.Курс * 1 / (1 * ЕСТЬNULL(КурсыВалютУчета.Кратность, 1)) КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ТаблицаДокументаНалоги.ВидНалога КАК ВидНалога,
	|	ТаблицаДокументаНалоги.КодОКТМОДокумента КАК КодОКТМОДокумента,
	|	ТаблицаДокументаНалоги.КодИФНСДокумента КАК КодИФНСДокумента,
	|	ТаблицаДокументаНалоги.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокументаНалоги.СрокУплаты КАК СрокУплаты
	|ИЗ
	|	Документ.НачислениеНалогов КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокумента.Ссылка КАК Ссылка,
	|			ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|			ТаблицаДокумента.СрокУплаты КАК СрокУплаты,
	|			ТаблицаДокумента.КодПоОКАТО КАК КодОКТМОДокумента,
	|			ТаблицаДокумента.КодИФНС КАК КодИФНСДокумента,
	|			ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|		ИЗ
	|			Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаНалоги
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаНалоги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &КонстантаВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
	|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию = ВТСтавкиНДС.ВидСтавкиНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.НачислениеНалогов КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И (БанковскиеСчета.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО (Организации.Ссылка = ТаблицаДокумента.Организация)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Налог = Выборка.ВидНалога;
		
		Если Выборка.СрокУплаты <= ТекущаяДатаСеанса() Тогда
			ПоказательОснования = "ЗД";
		Иначе
			ПоказательОснования = "ТП";
		КонецЕсли;
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.АвансовыйПлатежПриУСН
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ЕдиныйНалогПриУСН Тогда
			КодБК = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(Организация, ДокументСсылкаНачислениеНалогов.Дата, Выборка.ВидНалога);
		Иначе
			ДатаПолученияКБК = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
			КодБК = РегламентированнаяОтчетностьУСН.ПолучитьКБКУплаты(Организация, ДатаПолученияКБК, Выборка.ВидНалога);
		КонецЕсли;
		
		Если СокрЛП(КодБК) = "" Тогда
			КодБК = Выборка.ВидНалога.КодБК;
		КонецЕсли;
		
		ПоказательПериода = РегламентированнаяОтчетностьУСН.ПолучитьПоказательПериода(ДокументСсылкаНачислениеНалогов, Выборка.ВидНалога);
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.ЕНВД
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.Патент 
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ТорговыйСбор  Тогда
			КодОКАТО = Выборка.КодОКТМОДокумента;
		Иначе
			Если Год(Дата) > 2013 Тогда
				КодОКАТО = Выборка.КодПоОКТМО;
			Иначе
				КодОКАТО = Выборка.КодПоОКАТО;
			КонецЕсли;
		КонецЕсли;
		
		ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		КодОргана = "";
		ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.АвансовыйПлатежПриУСН
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ЕдиныйНалогПриУСН
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.НДФЛСотрудники Тогда
			
			ПоказательТипа = "0";
			Если Выборка.ВидНалога = Справочники.ВидыНалогов.НДФЛСотрудники Тогда
				СтатусСоставителя =   "02";
			Иначе
				СтатусСоставителя =   "09";
			КонецЕсли;
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодНалоговогоОрганаПолучателя;
			
		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.ЕНВД Тогда
			
			ПоказательТипа = "0";
			Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда
				СтатусСоставителя =   "01";
			Иначе
				СтатусСоставителя =   "09";
			КонецЕсли;
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодИФНСДокумента;
			
		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.ТорговыйСбор Тогда
			
			ПоказательТипа = "0";
			Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда
				СтатусСоставителя =   "01";
			Иначе
				СтатусСоставителя =   "09";
			КонецЕсли;
			ПоказательОснования = "ТП";
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодИФНСДокумента;

		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.Патент Тогда
			
			ПоказательТипа = "0";
			ПоказательОснования = "ТП";
			СтатусСоставителя =   "09";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодИФНСДокумента;
			
		ИначеЕсли  Выборка.ВидНалога = Справочники.ВидыНалогов.ФССТравматизмСотрудники Тогда
			ПоказательТипа = "0";
			СтатусСоставителя =   "08";
			ПоказательОснования = "0";
			ПоказательПериода =   "0";
			ПоказательНомера =    "0";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.ОрганФСС;
			КодОргана = Выборка.КодОрганаФСС;
			ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
			
		ИначеЕсли Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительная
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСвыше300ТР
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховая
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховаяСотрудники
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ТФОМС
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФФОМС
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФОМССотрудники 
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФСССотрудники Тогда
			
			Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда
				СтатусСоставителя =   "01";
			Иначе
				СтатусСоставителя =   "09";
			КонецЕсли;
			
			ПоказательТипа = "0";
			
			ОчередностьПлатежа = 5;
			ВидГосОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган;
			КодОргана = Выборка.КодНалоговогоОрганаПолучателя;
		КонецЕсли;
		ИдентификаторПлатежа = "0";
		ПоказательТипа = "0";
		
		Если Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРНакопительная
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСтраховая
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ПФРСвыше300ТР
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ТФОМС
			ИЛИ Выборка.ВидНалога = Справочники.ВидыНалогов.ФФОМС Тогда
			Назначение = РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
				ДокументСсылкаНачислениеНалогов.Дата,
				Выборка.ВидНалога,
				Выборка.РегистрационныйНомерПФР_ИП);
		Иначе
			Назначение = РегламентированнаяОтчетностьУСНКлиентСервер.ПолучитьТекстНазначенияПлатежаНалогаПоДате(
				ДокументСсылкаНачислениеНалогов.Дата,
				Выборка.ВидНалога,
				Выборка.РегистрационныйНомерПФР,
				Выборка.РегистрационныйНомерФСС);
		КонецЕсли;
		НазначениеПлатежа = Назначение;
		ТекстПлательщика = Выборка.НаименованиеПлательщикаПриПеречисленииНалогов;
		
		Если ЗначениеЗаполнено(ВидГосОргана) Тогда
			ГосОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(ВидГосОргана, КодОргана);
			Контрагент = ГосОрган.Ссылка;
			ИННПолучателя = ГосОрган.ИНН;
			КПППолучателя = ГосОрган.КПП;
			ТекстПолучателя = ГосОрган.ПлатежныеРеквизиты.ПолучательПлатежа;
			СчетКонтрагента = ГосОрган.ПлатежныеРеквизиты.БанковскийСчет;
		КонецЕсли;
		
		ДокументОснование = ДокументСсылкаНачислениеНалогов;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоНачислениеНалогов()

// Обработчик заполнения на основании документа ПриходнаяНакладная.
//
// Параметры:
//	ДокументСсылкаПриходнаяНакладная - ДокументСсылка.ПриходнаяНакладная.
//	
Процедура ЗаполнитьПоПриходнаяНакладная(ДокументСсылкаПриходнаяНакладная) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходнаяНакладная);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата) КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ КАК СтатьяДДС,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Вручную) КАК СпособЗачета,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ЗапросБанковскиеСчета.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|						ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|					ИНАЧЕ ВложенныйЗапрос.ЗаказПоставщику
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							И ВложенныйЗапрос.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					ИНАЧЕ ВложенныйЗапрос.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаРасчетов, 0)) КАК СуммаРасчетов,
	|	ВложенныйЗапрос.Курс КАК Курс,
	|	ВложенныйЗапрос.Кратность КАК Кратность,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаПлатежа, 0)) КАК СуммаПлатежа,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ТаблицаДокумента.Заказ
	|			КОНЕЦ КАК ЗаказПоставщику,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ТаблицаДокумента.Заказ
	|			КОНЕЦ КАК ЗаказПокупателя,
	|			ТаблицаДокумента.Ссылка.ДокументОснование КАК ДокументОснование,
	|			&Ссылка КАК Документ,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ КАК Курс,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ КАК Кратность,
	|			ТаблицаДокумента.Всего КАК СуммаПлатежа,
	|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС КАК СуммаНДС
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Запасы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.ЗаказПоставщику,
	|			ТаблицаДокумента.Заказ,
	|			ТаблицаДокумента.Ссылка.ДокументОснование,
	|			&Ссылка,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)),
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ,
	|			ТаблицаДокумента.Всего,
	|			ТаблицаДокумента.СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Расходы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ПриходнаяНакладная.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И ПриходнаяНакладная.Организация = БанковскиеСчета.Владелец
	|		ГДЕ
	|			ПриходнаяНакладная.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ЗапросБанковскиеСчета
	|		ПО ШапкаДокумента.Организация = ЗапросБанковскиеСчета.Владелец
	|			И ШапкаДокумента.ВалютаДокумента = ЗапросБанковскиеСчета.ВалютаДенежныхСредств
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|						ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|					ИНАЧЕ ВложенныйЗапрос.ЗаказПоставщику
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ШапкаДокумента.Договор,
	|	ВложенныйЗапрос.Документ,
	|	ВложенныйЗапрос.Курс,
	|	ВложенныйЗапрос.Кратность,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ЗапросБанковскиеСчета.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							И ВложенныйЗапрос.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					ИНАЧЕ ВложенныйЗапрос.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.РасходДСПлан КАК РасходДСПлан
	|ГДЕ
	|	РасходДСПлан.ДокументОснование = &Ссылка
	|	И РасходДСПлан.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов[0];
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 1);
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	
	// Попробуем найти планируемое поступление, созданное по тому же документу основанию
	ДокументПланирования = Документы.РасходДСПлан.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[2].Пустой() Тогда
		
		ВыборкаПланирование = МассивРезультатов[2].Выбрать();
		Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
			ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); //Дополним данными шапки
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		НоваяСтрока.ДокументПланирования = ДокументПланирования;
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
	СчетКонтрагента = ДвижениеДенежныхСредствСервер.ПолучитьБанковскийСчетКонтрагентаПоВалюте(Контрагент, ВалютаДокумента);
	ЗаполнитьНазначениеПлатежа();
	
КонецПроцедуры // ЗаполнитьПоПриходнаяНакладная()

// Обработчик заполнения на основании документа АвансовыйОтчет.
//
// Параметры:
//	ДокументСсылкаПриходнаяНакладная - ДокументСсылка.ПриходнаяНакладная.
//	
Процедура ЗаполнитьПоАвансовыйОтчет(ДокументСсылкаАвансовыйОтчет) Экспорт
	
	Запрос = Новый Запрос( Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Подотчетнику) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.ДокументОснование КАК ДокументОснованиеЗаявки,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.Прочее) КАК Статья,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
	|	ТаблицаДокумента.Сотрудник.ФизЛицо.ИНН КАК ИННПолучателя,
	|	ТаблицаДокумента.Сотрудник.ФизЛицо.Наименование КАК НаименованиеПолное,
	|	-РасчетыСПодотчетникамиОстатки.СуммаВалОстаток КАК СуммаДокумента,
	|	-РасчетыСПодотчетникамиОстатки.СуммаВалОстаток КАК СуммаПлатежа,
	|	ВТСтавкиНДС.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютДокумента.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК Кратность,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДС.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	РасчетыСПодотчетникамиОстатки.СуммаВалОстаток
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПодотчетниками.Остатки(, Документ = &Ссылка) КАК РасчетыСПодотчетникамиОстатки
	|		ПО (РасчетыСПодотчетникамиОстатки.Документ = ТаблицаДокумента.Ссылка)
	|			И ТаблицаДокумента.Сотрудник = РасчетыСПодотчетникамиОстатки.Сотрудник
	|			И ТаблицаДокумента.ВалютаДокумента = РасчетыСПодотчетникамиОстатки.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДС
	|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДС.ВидСтавкиНДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаАвансовыйОтчет);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	СчетКонтрагента = ДвижениеДенежныхСредствСервер.ПолучитьБанковскийСчетКонтрагентаПоВалюте(Подотчетник.Физлицо, ВалютаДокумента);
	
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	НоваяСтрока.ПризнакАванса = Истина;
	
	Если ПустаяСтрока(СчетКонтрагента.ТекстКорреспондента) Тогда
		ТекстПолучателя = Выборка.НаименованиеПолное;
		ТекстБанкДляРасчетов  = Документы.ПлатежноеПоручение.ПолучитьТекстБанкДляРасчетов(СчетКонтрагента);
		Если ЗначениеЗаполнено(ТекстБанкДляРасчетов) Тогда
			ТекстПолучателя = ТекстПолучателя + ТекстБанкДляРасчетов;
		КонецЕсли;
	Иначе
		ТекстПолучателя = СчетКонтрагента.ТекстКорреспондента;
	КонецЕсли;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(Перечисления.ВидыСтавокНДС.БезНДС, ТекущаяДата());
	СуммаНДС = 0;
	
	ЗаполнитьНазначениеПлатежа();
	
КонецПроцедуры // ЗаполнитьПоПриходнаяНакладная()

// Обработчик заполнения на основании документа ПлатежнаяВедомость.
//
// Параметры:
//	ДокументСсылкаПлатежнаяВедомость - ДокументСсылка.ПлатежнаяВедомость.
//	
Процедура ЗаполнитьПоПлатежнаяВедомость(ДокументСсылкаПлатежнаяВедомость)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПлатежнаяВедомость);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Зарплата) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	&Ссылка КАК Ведомость,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокумента.Ссылка) КАК Основание,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств
	|ИЗ
	|	Документ.ПлатежнаяВедомость КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПлатежнаяВедомость КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ВыплатаЗаработнойПлаты.Очистить();
	НоваяСтрока = ВыплатаЗаработнойПлаты.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	
КонецПроцедуры // ЗаполнитьПоПлатежнаяВедомость()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации <> Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога Тогда
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидПеречисленияВБюджет");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КодБК");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "КодОКАТО");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Оплата Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДокумента));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Зарплата Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
		СуммаПлатежа = ВыплатаЗаработнойПлаты.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДокумента));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		Для Каждого СтрокаВедомости Из ВыплатаЗаработнойПлаты Цикл
			Если СтрокаВедомости.Ведомость.ВалютаДокумента <> ВалютаДокумента Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Валюта документа (%1), не соответствует валюте платежной ведомости (%2).'"),
					СокрЛП(ВалютаДокумента), СокрЛП(СтрокаВедомости.Ведомость.ВалютаДокумента));
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыплатаЗаработнойПлаты",
					СтрокаВедомости.НомерСтроки, "Ведомость");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ЗарплатаСотруднику Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Подотчетнику Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Прочее Тогда
		
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ЛичныеСредстваПредпринимателя 
			ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПереводНаДругойСчет Тогда
			
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.РасчетыПоКредитам Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		
		
	Иначе
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПоставщику")] = "ЗаполнитьПоЗаказПоставщику";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплатуПоставщика")] = "ЗаполнитьПоСчетНаОплатуПоставщика";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходДСПлан")] = "ЗаполнитьПоРасходДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачислениеНалогов")] = "ЗаполнитьПоНачислениеНалогов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходнаяНакладная")] = "ЗаполнитьПоПриходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.АвансовыйОтчет")] = "ЗаполнитьПоАвансовыйОтчет";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
	Если ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Зарплата Тогда
		ПоложениеСтатьи = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ПриКопировании.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	#Если НЕ ВнешнееСоединение Тогда
	
	Оплачено = Ложь;
	
	Если ЗначениеЗаполнено(ОбъектКопирования.Ссылка)
		И ОбъектКопирования.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога")
		И ((ПлатежиВБюджетКлиентСервер.ДействуетПриказ107н(ОбъектКопирования.Дата)
		И НЕ ПлатежиВБюджетКлиентСервер.ДействуетПриказ107н(ТекущаяДатаСеанса()))
		ИЛИ (НЕ ПлатежиВБюджетКлиентСервер.ДействуетПриказ107н(ОбъектКопирования.Дата)
		И ПлатежиВБюджетКлиентСервер.ДействуетПриказ107н(Дата))) Тогда
		КодОКАТО = "";
		ИдентификаторПлатежа = "";
	КонецЕсли;
	
	#КонецЕсли
	
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		ПодготовитьСписокДокументовПланированияПередЗаписью();
	КонецЕсли;
	
	РасчетыПроведениеДокументов.ОбработатьРеквизитыШапкаТабличнаяЧастьПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик события ПриЗаписи.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		УстановитьСтатусПлатежногоПорученияВДокументахПланирования();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область РасшифровкаПлатежа

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежа() Экспорт
	
	Компания = Константы.УчетПоКомпании.Компания(Организация);
	
	СтавкаНДСПоУмолчанию = Справочники.СтавкиНДС.СтавкаНДС(Организация.ВидСтавкиНДСПоУмолчанию);
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДокумента));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасчетыСПоставщикамиОстатки.Организация КАК Организация,
	|	РасчетыСПоставщикамиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПоставщикамиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПоставщикамиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(РасчетыСПоставщикамиОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РасчетыСПоставщикамиОстатки.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	РасчетыСПоставщикамиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПоставщикамиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	РасчетыСПоставщикамиОстатки.Договор.СтатьяДДСПоУмолчанию КАК СтатьяДДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПоставщикамиОстатки.Организация КАК Организация,
	|		РасчетыСПоставщикамиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПоставщикамиОстатки.Договор КАК Договор,
	|		РасчетыСПоставщикамиОстатки.Документ КАК Документ,
	|		РасчетыСПоставщикамиОстатки.Заказ КАК Заказ,
	|		РасчетыСПоставщикамиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.Остатки(
	|				,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					И (НЕ &НуженОтборПоВидуДоговора
	|						ИЛИ &НуженОтборПоВидуДоговора
	|							И Договор.ВидДоговора В (&СписокВидовДоговоров))
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПоставщикамиОстатки) КАК РасчетыСПоставщикамиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПоставщикамиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	РасчетыСПоставщикамиОстатки.СуммаВалОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщикамиОстатки.Организация,
	|	РасчетыСПоставщикамиОстатки.Контрагент,
	|	РасчетыСПоставщикамиОстатки.Договор,
	|	РасчетыСПоставщикамиОстатки.Документ,
	|	РасчетыСПоставщикамиОстатки.Заказ,
	|	РасчетыСПоставщикамиОстатки.ТипРасчетов,
	|	РасчетыСПоставщикамиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	РасчетыСПоставщикамиОстатки.Договор.СтатьяДДСПоУмолчанию
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДокумента);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	Запрос.УстановитьПараметр("НуженОтборПоВидуДоговора", (НуженОтборПоДоговорам И Контрагент.ВестиРасчетыПоДоговорам));
	
	ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(
		Контрагент,
		Организация,
		СписокВидовДоговоров
	);
	
	СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
		Дата,
		Новый Структура("Валюта", ДоговорПоУмолчанию.ВалютаРасчетов)
	);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	РасшифровкаПлатежа.Очистить();
	
	СуммаОсталосьРаспределить = СуммаДокумента;
	
	Пока СуммаОсталосьРаспределить > 0 Цикл
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
			
			Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
				
				НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
				НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				
			Иначе // сумма остатка больше чем нужно распределить
				
				НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
					ВыборкаРезультатаЗапроса.Курс,
					ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
					ВыборкаРезультатаЗапроса.Кратность
				);
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока.Договор = ДоговорПоУмолчанию;
			
			НоваяСтрока.Курс = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс
			);
			НоваяСтрока.Кратность = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
			);
			НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
				СуммаОсталосьРаспределить,
				КурсВалютыДС,
				НоваяСтрока.Курс,
				КратностьВалютыДС,
				НоваяСтрока.Кратность
			);
			НоваяСтрока.ПризнакАванса = Истина;
			НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
			НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
			НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
			НоваяСтрока.СтатьяДДС = ДвиженияДенежныхСредствВызовСервера.ПолучитьСтатьюДДСПоУмолчаниюДляСтрокиРасшифровки(НоваяСтрока.Договор,
				НоваяСтрока.ДокументПланирования,
				НоваяСтрока.СтатьяДДС);
			СуммаОсталосьРаспределить = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьСписокДокументовПланированияПередЗаписью()

	ДополнительныеСвойства.Вставить("ДокументыПланирования", Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлатежноеПоручение.ДокументОснование КАК ДокументПланирования
		|ИЗ
		|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
		|ГДЕ
		|	ПлатежноеПоручение.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлатежноеПоручениеРасшифровкаПлатежа.ДокументПланирования
		|ИЗ
		|	Документ.ПлатежноеПоручение.РасшифровкаПлатежа КАК ПлатежноеПоручениеРасшифровкаПлатежа
		|ГДЕ
		|	ПлатежноеПоручениеРасшифровкаПлатежа.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ВыборкаДокументыПланирования = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДокументыПланирования.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДокументыПланирования.ДокументПланирования) 
			И (ТипЗнч(ВыборкаДокументыПланирования.ДокументПланирования) = Тип("ДокументСсылка.РасходДСПлан") 
			ИЛИ ТипЗнч(ВыборкаДокументыПланирования.ДокументПланирования) = Тип("ДокументСсылка.ПеремещениеДСПлан")) Тогда
			
			Если ДополнительныеСвойства.ДокументыПланирования.Найти(ВыборкаДокументыПланирования.ДокументПланирования) = Неопределено Тогда
				ДополнительныеСвойства.ДокументыПланирования.Добавить(ВыборкаДокументыПланирования.ДокументПланирования);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьСтатусПлатежногоПорученияВДокументахПланирования()
	
	Если ЗначениеЗаполнено(ДокументОснование) И (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РасходДСПлан") ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеДСПлан")) Тогда
			Если ДополнительныеСвойства.ДокументыПланирования.Найти(ДокументОснование) = Неопределено Тогда
				ДополнительныеСвойства.ДокументыПланирования.Добавить(ДокументОснование);
			КонецЕсли;
	КонецЕсли;
	
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(СтрокаРасшифровки.ДокументПланирования) 
			И (ТипЗнч(СтрокаРасшифровки.ДокументПланирования) = Тип("ДокументСсылка.РасходДСПлан") 
			ИЛИ ТипЗнч(СтрокаРасшифровки.ДокументПланирования) = Тип("ДокументСсылка.ПеремещениеДСПлан")) Тогда
			
			Если ДополнительныеСвойства.ДокументыПланирования.Найти(СтрокаРасшифровки.ДокументПланирования) = Неопределено Тогда
				ДополнительныеСвойства.ДокументыПланирования.Добавить(СтрокаРасшифровки.ДокументПланирования);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ДокументПланирования Из ДополнительныеСвойства.ДокументыПланирования Цикл
		РегистрыСведений.СтатусыДокументов.УстановитьСтатусДокумента(ДокументПланирования);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСуммуНДС()
	СтавкаНДСЗначение = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтавкаНДС);
	СуммаНДС = СуммаДокумента - (СуммаДокумента) / ((СтавкаНДСЗначение + 100) / 100);
КонецПроцедуры

Функция ПолучитьСтавкуНДСОснования(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеНалогов")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеЗарплаты")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.ПлатежнаяВедомость")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.ДоговорКредитаИЗайма") Тогда
		
		Возврат Справочники.СтавкиНДС.СтавкаНДС(Перечисления.ВидыСтавокНДС.БезНДС, ТекущаяДатаСеанса());
		
	КонецЕсли;
	
	МетаданныеОснования = Основание.Метаданные();
	Если МетаданныеОснования.ТабличныеЧасти.Найти("Запасы") = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОснованиеЗапасы.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Документ.РасходнаяНакладная.Запасы КАК ОснованиеЗапасы
		|ГДЕ
		|	ОснованиеЗапасы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОснованиеЗапасы.СтавкаНДС";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасходнаяНакладная", МетаданныеОснования.Имя);
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСтавок = РезультатЗапроса.Выбрать();
	
	Если ВыборкаСтавок.Количество() <> 1 Тогда //Заполняем только если в ТЧ основания одинаковые ставки 
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаСтавок.Следующий();
	
	Возврат ВыборкаСтавок.СтавкаНДС;
	
КонецФункции

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
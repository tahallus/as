#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Контрагент)
	|	И ЗначениеРазрешено(БанковскийСчет)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Функция возвращает текст банка для расчетов.
//
Функция ПолучитьТекстБанкДляРасчетов(БанковскийСчет) Экспорт
	
	Если ЗначениеЗаполнено(БанковскийСчет.БанкРасчетов) Тогда
		ТекстБанкДляРасчетов =
			" р/с "
			+ БанковскийСчет.НомерСчета
			+ " в "
			+ БанковскийСчет.Банк
			+ " "
			+ БанковскийСчет.Банк.Город
	Иначе
		ТекстБанкДляРасчетов = "";
	КонецЕсли;
	
	Возврат ТекстБанкДляРасчетов;
	
КонецФункции // ЗаполнитьТекстБанкДляРасчетов()

#КонецОбласти

#Область ИнтерфейсПечати

// Процедура формирует и выводит печатную форму документа по указанному макету.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПлатежноеПоручение";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка КАК Ссылка,
	|	ПлатежноеПоручение.Номер КАК Номер,
	|	ПлатежноеПоручение.Дата КАК ДатаДокумента,
	|	ПлатежноеПоручение.ВидПлатежа КАК ВидПлатежа,
	|	ПлатежноеПоручение.ИННПлательщика КАК ИННПлательщика,
	|	ПлатежноеПоручение.ИННПолучателя КАК ИННПолучателя,
	|	ПлатежноеПоручение.КодБК КАК КодБК,
	|	ПлатежноеПоручение.КодОКАТО КАК КодОКАТО,
	|	ПлатежноеПоручение.КПППлательщика КАК КПППлательщика,
	|	ПлатежноеПоручение.КПППолучателя КАК КПППолучателя,
	|	ПлатежноеПоручение.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ПлатежноеПоручение.ВидПеречисленияВБюджет КАК ВидПеречисленияВБюджет,
	|	ПлатежноеПоручение.ОчередностьПлатежа КАК Очередность,
	|	ПлатежноеПоручение.ПоказательДаты КАК ПоказательДаты,
	|	ПлатежноеПоручение.ПоказательНомера КАК ПоказательНомера,
	|	ПлатежноеПоручение.ПоказательОснования КАК ПоказательОснования,
	|	ПлатежноеПоручение.ПоказательПериода КАК ПоказательПериода,
	|	ПлатежноеПоручение.ПоказательТипа КАК ПоказательТипа,
	|	ПлатежноеПоручение.СтатусСоставителя КАК СтатусСоставителя,
	|	ПлатежноеПоручение.СуммаДокумента КАК СуммаДокумента,
	|	ПлатежноеПоручение.СчетКонтрагента.НомерСчета КАК НомерСчетаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.КоррСчет КАК НомерСчетаПолучателяБанкаРасчетов,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Наименование КАК НаименованиеБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.БанкРасчетов.Наименование КАК НаименованиеБанкаРасчетовПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.БанкРасчетов КАК БанкРасчетовПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Город КАК ГородБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.БанкРасчетов.Город КАК ГородБанкаРасчетовПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Код КАК БИКБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.БанкРасчетов.Код КАК БИКБанкаРасчетовПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.КоррСчет КАК СчетБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.БанкРасчетов.КоррСчет КАК СчетБанкаРасчетовПолучателя,
	|	ПлатежноеПоручение.БанковскийСчет.СуммаБезКопеек КАК СуммаБезКопеек,
	|	ПлатежноеПоручение.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ПлатежноеПоручение.БанковскийСчет.НомерСчета КАК НомерСчетаПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.Банк.КоррСчет КАК НомерСчетаПлательщикаБанкаРасчетов,
	|	ПлатежноеПоручение.БанковскийСчет.Банк.Наименование КАК НаименованиеБанкаПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.БанкРасчетов.Наименование КАК НаименованиеБанкаРасчетовПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.БанкРасчетов КАК БанкРасчетовПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.Банк.Город КАК ГородБанкаПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.БанкРасчетов.Город КАК ГородБанкаРасчетовПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.Банк.Код КАК БИКБанкаПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.БанкРасчетов.Код КАК БИКБанкаРасчетовПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.Банк.КоррСчет КАК СчетБанкаПлательщика,
	|	ПлатежноеПоручение.БанковскийСчет.БанкРасчетов.КоррСчет КАК СчетБанкаРасчетовПлательщика,
	|	ПлатежноеПоручение.ТекстПлательщика КАК ТекстПлательщика,
	|	ПлатежноеПоручение.ТекстПолучателя КАК ТекстПолучателя,
	|	ПлатежноеПоручение.БанковскийСчет.ВариантВыводаМесяца КАК ВариантВыводаМесяца,
	|	ПлатежноеПоручение.ВидОперации КАК ВидОперации,
	|	ПлатежноеПоручение.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
	|	ПлатежноеПоручение.Организация.Префикс КАК Префикс,
	|	ПлатежноеПоручение.КодВидаДохода КАК КодВидаДохода,
	|	ПлатежноеПоручение.КодВыплат КАК КодВыплат
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Ссылка В(&МассивОбъектов)";
	
	ВыборкаДляПечати = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДляПечати.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежноеПоручение_ПлатежноеПоручение";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПлатежноеПоручение.ПФ_MXL_ПлатежноеПоручение");
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		
		Если ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПлательщика) Тогда
			ОбластьМакета.Параметры.НомерСчетаПлательщика = ВыборкаДляПечати.НомерСчетаПлательщикаБанкаРасчетов;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПолучателя) Тогда
			ОбластьМакета.Параметры.НомерСчетаПолучателя = ВыборкаДляПечати.НомерСчетаПолучателяБанкаРасчетов;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПлательщика) Тогда
			ОбластьМакета.Параметры.БИКБанкаПлательщика = ВыборкаДляПечати.БИКБанкаРасчетовПлательщика;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПолучателя) Тогда
			ОбластьМакета.Параметры.БИКБанкаПолучателя = ВыборкаДляПечати.БИКБанкаРасчетовПолучателя;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПлательщика) Тогда
			ОбластьМакета.Параметры.СчетБанкаПлательщика = ВыборкаДляПечати.СчетБанкаРасчетовПлательщика;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПолучателя) Тогда
			ОбластьМакета.Параметры.СчетБанкаПолучателя = ВыборкаДляПечати.СчетБанкаРасчетовПолучателя;
		КонецЕсли;
		
		НомерДокументаДляПечати = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ВыборкаДляПечати.ДатаДокумента, ВыборкаДляПечати.Номер, ВыборкаДляПечати.Префикс);
		
		ОбластьМакета.Параметры.НаименованиеНомер = "ПЛАТЕЖНОЕ ПОРУЧЕНИЕ № " + НомерДокументаДляПечати;
		
		МесяцПрописью = ВыборкаДляПечати.ВариантВыводаМесяца = Перечисления.ВариантыВыводаМесяцаВДатеДокумента.Прописью;
		ФорматДаты    = "ДФ=" + ?(МесяцПрописью, "'дд ММММ гггг'", "'дд.ММ.гггг'");
		
		ОбластьМакета.Параметры.ДатаДокумента = Формат(ВыборкаДляПечати.ДатаДокумента, ФорматДаты);
		
		ОбластьМакета.Параметры.СуммаЧислом = ПечатьДокументовУНФ.ФорматироватьСуммуПлатежногоДокумента(
			ВыборкаДляПечати.СуммаДокумента,
			ВыборкаДляПечати.СуммаБезКопеек
		);
		
		ОбластьМакета.Параметры.СуммаПрописью = ПечатьДокументовУНФ.ФорматироватьСуммуПрописьюПлатежногоДокумента(
			ВыборкаДляПечати.СуммаДокумента,
			ВыборкаДляПечати.ВалютаДенежныхСредств,
			ВыборкаДляПечати.СуммаБезКопеек
		);
		
		ОбластьМакета.Параметры.ИННПлательщика = "ИНН " + ОбластьМакета.Параметры.ИННПлательщика;
		ОбластьМакета.Параметры.КПППлательщика = "КПП " + ОбластьМакета.Параметры.КПППлательщика;
		ОбластьМакета.Параметры.ИННПолучателя  = "ИНН " + ОбластьМакета.Параметры.ИННПолучателя;
		ОбластьМакета.Параметры.КПППолучателя  = "КПП " + ОбластьМакета.Параметры.КПППолучателя;
		
		БанкПлательщика = ?(
			ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПлательщика), 
			ВыборкаДляПечати.НаименованиеБанкаРасчетовПлательщика,
			ВыборкаДляПечати.НаименованиеБанкаПлательщика
		);
		
		ГородБанкаПлательщика = ?(
			ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПлательщика), 
			ВыборкаДляПечати.ГородБанкаРасчетовПлательщика,
			ВыборкаДляПечати.ГородБанкаПлательщика
		);
		
		ОбластьМакета.Параметры.НаименованиеБанкаПлательщика = "" + БанкПлательщика + " " + ГородБанкаПлательщика;
		
		БанкПолучателя = ?(
			ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПолучателя), 
			ВыборкаДляПечати.НаименованиеБанкаРасчетовПолучателя,
			ВыборкаДляПечати.НаименованиеБанкаПолучателя
		);
		
		ГородБанкаПолучателя = ?(
			ЗначениеЗаполнено(ВыборкаДляПечати.БанкРасчетовПолучателя), 
			ВыборкаДляПечати.ГородБанкаРасчетовПолучателя,
			ВыборкаДляПечати.ГородБанкаПолучателя
		);
		
		ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = "" + БанкПолучателя + " " + ГородБанкаПолучателя;
		
		Если ВыборкаДляПечати.ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога Тогда
			
			ОбластьМакета.Параметры.СтатусСоставителя = ?(ПустаяСтрока(ВыборкаДляПечати.СтатусСоставителя), "0", СокрЛП(ВыборкаДляПечати.СтатусСоставителя));
			ОбластьМакета.Параметры.КодБК = ?(ПустаяСтрока(ВыборкаДляПечати.КодБК), "", СокрЛП(ВыборкаДляПечати.КодБК));
			ОбластьМакета.Параметры.КодОКАТО = ?(ПустаяСтрока(ВыборкаДляПечати.КодОКАТО),
				?(ВыборкаДляПечати.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж, "0", ""),
				СокрЛП(ВыборкаДляПечати.КодОКАТО));
			ОбластьМакета.Параметры.ПоказательОснования = СокрЛП(ВыборкаДляПечати.ПоказательОснования);
			ОбластьМакета.Параметры.ПоказательНомера = ?(ВыборкаДляПечати.ПоказательНомера = "", "0",  СокрЛП(ВыборкаДляПечати.ПоказательНомера));
			ОбластьМакета.Параметры.ПоказательДаты = ?(ВыборкаДляПечати.ПоказательДаты = '00010101000000', "0", Формат(ВыборкаДляПечати.ПоказательДаты, "ДФ='дд.ММ.гггг'"));
			ОбластьМакета.Параметры.ПоказательТипа = СокрЛП(ВыборкаДляПечати.ПоказательТипа);
			Если ВыборкаДляПечати.ДатаДокумента >= '2016-03-28' Тогда
				// Согласно Указанию ЦБ РФ от 06.11.2015 № 3844-У
				// "О внесении изменений в Положение Банка России от 19 июня 2012 года № 383-П"
				// значение реквизита 110 не указывается.
				ОбластьМакета.Параметры.ПоказательТипа = "";
			ИначеЕсли ВыборкаДляПечати.ДатаДокумента >= '20150101' Тогда
				// Согласно приказу Минфина от 30.10.2014 N 126н с 01.01.2015 показатель типа (поле "110") не заполняется.
				// Но согласно Положению ЦБ РФ от 19.06.2012 N 383-П
				// "Распоряжения, в которых реквизит 101 имеет значение, подлежат контролю наличия значений реквизитов 102 - 110".
				// Поэтому всегда указываем в поле "110" - "0".
				ОбластьМакета.Параметры.ПоказательТипа = "0";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ПоказательПериода = СокрЛП(ВыборкаДляПечати.ПоказательПериода);
		
		ИначеЕсли ЗначениеЗаполнено(ВыборкаДляПечати.КодВыплат) Тогда
			// При переводе денежных средств физическим лицам в целях осуществления выплат
			// за счет средств бюджетов бюджетной системы Российской Федерации, предусмотренных частями 5.5 и 5.6 статьи 30.5
			// Федерального закона N 161-ФЗ в поле "110" (код выплат) указывается значение "1".
			// В иных случаях значение реквизита не указывается.
			ОбластьМакета.Параметры.ПоказательТипа = ВыборкаДляПечати.КодВыплат;
		КонецЕсли;
		
		Если ВыборкаДляПечати.ДатаДокумента < '20140331' Тогда
			// Идентификатор можно указывать в печатной форме платежного поручения с 31.03.2014
			ОбластьМакета.Параметры.ИдентификаторПлатежа = "";
		КонецЕсли;
		
		// Код вида дохода
		Если ДвиженияДенежныхСредствКлиентСервер.ДействуетУказаниеБанкаРоссии5286У(ВыборкаДляПечати.ДатаДокумента)
			И ЗначениеЗаполнено(ВыборкаДляПечати.КодВидаДохода) Тогда
			ОбластьМакета.Параметры.КодВидаДохода = ВыборкаДляПечати.КодВидаДохода;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДляПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлатежноеПоручение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПлатежноеПоручение",
			НСтр("ru='Платежное поручение'"),
			ПечатнаяФорма(МассивОбъектов, ОбъектыПечати)
		);
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлатежноеПоручение";
	КомандаПечати.Представление = НСтр("ru = 'Платежное поручение'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
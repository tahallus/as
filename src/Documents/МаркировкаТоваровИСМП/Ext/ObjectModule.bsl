#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть")
		Или ДополнительныеСвойства.Свойство("ОтчетПроизводственнойЛинии") Тогда
		Товары.Очистить();
		ШтрихкодыУпаковок.Очистить();
	КонецЕсли;
	
	ИнтеграцияИСМПВЕТИС.ОбработкаЗаполненияМаркировкиТоваровИСМП(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
	Если ДополнительныеСвойства.Свойство("ОтчетПроизводственнойЛинии") Тогда
		ЗаполнитьСрокГодностиВЕТИС();
	Иначе
		ЗаполнитьТабличнуюЧастьТоварыСрокомГодностиВЕТИС();
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ЗаполнитьКодыТНВЭДПоНоменклатуреВТабличнойЧасти(Товары);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	// Обувная продукция
	НепроверяемыеРеквизиты.Добавить("ПринятоеРешение");
	НепроверяемыеРеквизиты.Добавить("КодТаможенногоОргана");
	НепроверяемыеРеквизиты.Добавить("СтранаПроисхождения");
	НепроверяемыеРеквизиты.Добавить("ДатаДекларации");
	НепроверяемыеРеквизиты.Добавить("РегистрационныйНомерДекларации");
	НепроверяемыеРеквизиты.Добавить("Контрагент");
	НепроверяемыеРеквизиты.Добавить("ДатаПроизводства");
	НепроверяемыеРеквизиты.Добавить("ДатаИмпорта");
	НепроверяемыеРеквизиты.Добавить("ДатаПервичногоДокумента");
	НепроверяемыеРеквизиты.Добавить("НомерПервичногоДокумента");
	НепроверяемыеРеквизиты.Добавить("Товары.GTIN");
	
	// Молочная продукция
	НепроверяемыеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
	НепроверяемыеРеквизиты.Добавить("Товары.СрокГодности");
	НепроверяемыеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИССтрокой");
	НепроверяемыеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИС");
	НепроверяемыеРеквизиты.Добавить("СрокГодности");
	
	// Табачная продукция
	НепроверяемыеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
	// Общее для режима отчета производственной линии
	НепроверяемыеРеквизиты.Добавить("КодТНВЭД");
	НепроверяемыеРеквизиты.Добавить("ВариантЗаполненияДекларации");
	НепроверяемыеРеквизиты.Добавить("ВариантФормированияАТКИСМП");
	
	ОперацииМаркировки = ИнтеграцияИСМПСлужебныйКлиентСервер.ОперацииМаркировки(Операция);
	
	ОбязательныеРеквизиты = Новый Массив;
	
	Если ОтчетПроизводственнойЛинии Тогда
		
		НепроверяемыеРеквизиты.Добавить("Товары");
		
		Если (ОперацииМаркировки.ЭтоОперацияНанесения Или ЗначениеЗаполнено(ОперацияНанесения))
			И (ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС
				Или ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС) Тогда
			
			ОбязательныеРеквизиты.Добавить("СрокГодности");
			
		КонецЕсли;
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ
			Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС Тогда
			
			ОбязательныеРеквизиты.Добавить("КодТНВЭД");
			
			Если Не ЗначениеЗаполнено(ОперацияНанесения) Или ДополнятьОбязательныеРеквизитыВводВОборот(Ссылка) Тогда
				Если ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
					Если ИнтеграцияИСМПВЕТИС.ИспользуетсяПодсистемаВетИС() Тогда
						ОбязательныеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИС");
					Иначе
						ОбязательныеРеквизиты.Добавить("ИдентификаторПроисхожденияВЕТИССтрокой");
					КонецЕсли;
				КонецЕсли;
				Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС Тогда
					ОбязательныеРеквизиты.Добавить("ПринятоеРешение");
					ОбязательныеРеквизиты.Добавить("КодТаможенногоОргана");
					ОбязательныеРеквизиты.Добавить("ДатаДекларации");
					ОбязательныеРеквизиты.Добавить("РегистрационныйНомерДекларации");
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		НепроверяемыеРеквизиты.Добавить("ДанныеОтчетаПроизводственнойЛинии");
		
		Если ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
			
			ОбязательныеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
			
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.Табак
				И (Операция = Перечисления.ВидыОперацийИСМП.Агрегация
					Или ОперацииМаркировки.ЭтоОперацияНанесения) Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				НачалоGTINМаркировкиОстатков = ИнтеграцияИСМПСлужебныйКлиентСервер.НачалоGTINМаркировкиОстатков();
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
						И Не СтрНачинаетсяС(СтрокаТовары.GTIN, НачалоGTINМаркировкиОстатков)Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле Номенклатура'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "Номенклатура"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		ИначеЕсли ИнтеграцияИСПовтИсп.ЭтоПродукцияИСМП(ВидПродукции) Тогда
			НепроверяемыеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
			Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС Тогда
				Если Не ЗначениеЗаполнено(ОперацияНанесения) Или ДополнятьОбязательныеРеквизитыВводВОборот(Ссылка) Тогда
					ОбязательныеРеквизиты.Добавить("ПринятоеРешение");
					ОбязательныеРеквизиты.Добавить("КодТаможенногоОргана");
					ОбязательныеРеквизиты.Добавить("ДатаДекларации");
					ОбязательныеРеквизиты.Добавить("РегистрационныйНомерДекларации");
				КонецЕсли;
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору
				Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика Тогда
				ОбязательныеРеквизиты.Добавить("Контрагент");
				ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ Тогда
				ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля Тогда
				ОбязательныеРеквизиты.Добавить("СтранаПроисхождения");
				ОбязательныеРеквизиты.Добавить("ДатаИмпорта");
				ОбязательныеРеквизиты.Добавить("ДатаПервичногоДокумента");
				ОбязательныеРеквизиты.Добавить("НомерПервичногоДокумента");
				ОбязательныеРеквизиты.Добавить("Контрагент");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.GTIN)
						И Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле GTIN'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "GTIN"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.Агрегация Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				НачалоGTINМаркировкиОстатков = ИнтеграцияИСМПСлужебныйКлиентСервер.НачалоGTINМаркировкиОстатков();
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
						И Не СтрНачинаетсяС(СтрокаТовары.GTIN, НачалоGTINМаркировкиОстатков)Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле Номенклатура'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "Номенклатура"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			// Специфика молочной продукции: нужен срок годности для операций нанесения
			Если ИнтеграцияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(ВидПродукции) Тогда
				Если (ОперацииМаркировки.ЭтоОперацияНанесения Или ЗначениеЗаполнено(ОперацияНанесения)) Тогда
					ОбязательныеРеквизиты.Добавить("Товары.СрокГодности");
				КонецЕсли;
			КонецЕсли;
			
			// Специфика молочной продукции: нужен идентификатор ВЕТИС для операций ввода в оборот
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
				Если ОперацииМаркировки.ТребуетсяЗаполнениеИдентификаторовПримененияВЕТИС Тогда
					ОбязательныеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков
			Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц
			Или Операция = Перечисления.ВидыОперацийИСМП.Агрегация
			Или ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции)
			Или ОперацииМаркировки.ЭтоОперацияНанесения Тогда
			НепроверяемыеРеквизиты.Добавить("Товары.КодТНВЭД");
		КонецЕсли;
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС Тогда
			НепроверяемыеРеквизиты.Добавить("Товары.Сертификация");
			ОбязательныеРеквизиты.Добавить("ВариантЗаполненияДекларации");
			Если ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.АТК Тогда
				ОбязательныеРеквизиты.Добавить("ВариантФормированияАТКИСМП");
			КонецЕсли;
			
			ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
			СтатусИСМП = ТекущееСостояние.Статус;
			Если СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыАТКСформированы 
				Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиАгрегированы 
				Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.Черновик
				И ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.КодыМаркировки Тогда
				
				ОбязательныеРеквизиты.Добавить("ПринятоеРешение");
				ОбязательныеРеквизиты.Добавить("КодТаможенногоОргана");
				ОбязательныеРеквизиты.Добавить("ДатаДекларации");
				ОбязательныеРеквизиты.Добавить("РегистрационныйНомерДекларации");
				
			КонецЕсли;
			
		КонецЕсли;
	
		Если Операция = Перечисления.ВидыОперацийИСМП.Агрегация Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ШтрихкодыУпаковок.ВыгрузитьКолонку("ШтрихкодУпаковки"));
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
			|ИЗ
			|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
			|ГДЕ
			|	ШтрихкодыУпаковокТоваров.Ссылка В (&Ссылка)
			|	И ШтрихкодыУпаковокТоваров.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Количество() Тогда
				ТекстСообщения = НСтр("ru = 'Для операции Агрегация требуется указание упаковок.
				                            |Откройте форму проверки и подбора и агрегируйте все коды маркировки.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
					ЭтотОбъект,
					"Операция",,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
		ИнтеграцияИСМПСлужебный.ПроверитьЗаполнениеШтрихкодовУпаковок(ЭтотОбъект, Отказ);
		
	КонецЕсли;
	
	НепроверяемыеРеквизиты = ОбщегоНазначенияКлиентСервер.РазностьМассивов(НепроверяемыеРеквизиты, ОбязательныеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ЭтоНовый() Тогда
		РеквизитыДокументаДляРасчетаСтатуса =  ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Операция, ВариантЗаполненияДекларации");
		
		ЭтоАгрегация = Операция = Перечисления.ВидыОперацийИСМП.Агрегация;
		ЭтоБылаАгрегация = РеквизитыДокументаДляРасчетаСтатуса.Операция = Перечисления.ВидыОперацийИСМП.Агрегация;
		Если ЭтоАгрегация<>ЭтоБылаАгрегация Тогда
			ДополнительныеСвойства.Вставить("ТребуетсяПерезаписьСтатусаПоУмолчанию");
		КонецЕсли;
		
		ЭтоИмпортСФТС = Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС;
		ЭтоБылИмпортСФТС = РеквизитыДокументаДляРасчетаСтатуса.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС;
		
		ЭтоФормированиеАТК = ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.АТК;
		ЭтоБылоФормированиеАТК = РеквизитыДокументаДляРасчетаСтатуса.ВариантЗаполненияДекларации = Перечисления.ВариантыЗаполненияДекларацииИСМП.АТК;
		
		Если ЭтоИмпортСФТС Тогда
			ХешСуммаОбъекта = ХешСуммаДокумента();
		Иначе
			ХешСуммаОбъекта = "";
		КонецЕсли;
		
		Если ЭтоИмпортСФТС <> ЭтоБылИмпортСФТС
			Или (ЭтоИмпортСФТС И ЭтоБылИмпортСФТС И ЭтоФормированиеАТК <> ЭтоБылоФормированиеАТК)
			Или (ЭтоИмпортСФТС И ЭтоБылИмпортСФТС И ХешСуммаОбъекта <> ХешСумма) Тогда
				ДополнительныеСвойства.Вставить("ТребуетсяПерезаписьСтатусаПоУмолчанию");
		КонецЕсли;
		ХешСумма = ХешСуммаОбъекта;
	Иначе
		ОперацияДокумента =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Операция");
		Если ОперацияДокумента = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС Тогда
			ХешСумма = ХешСуммаДокумента();
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Функция ХешСуммаДокумента() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода,
	|	ШтрихкодыУпаковокТоваров.ХешСумма,
	|	ШтрихкодыУпаковокТоваров.ХешСуммаЗначенияШтрихкода,
	|	ШтрихкодыУпаковокТоваров.ХэшСуммаНормализации
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|ГДЕ
	|	ШтрихкодыУпаковокТоваров.Ссылка В (&МассивШтрихкодов)";
	Запрос.УстановитьПараметр("МассивШтрихкодов", ШтрихкодыУпаковок.ВыгрузитьКолонку("ШтрихкодУпаковки"));
	ДанныеШтрихкодов = Запрос.Выполнить().Выбрать();
	
	ДанныеХешСуммыДокумента = Новый СписокЗначений();
	
	ДанныеХешСуммыШапки = Новый Массив;
	ДанныеХешСуммыШапки.Добавить(Строка(ВариантЗаполненияДекларации));
	ДанныеХешСуммыШапки.Добавить(Строка(ВариантФормированияАТКИСМП));
	ДанныеХешСуммыШапки.Добавить(Строка(Организация.УникальныйИдентификатор()));
	ДанныеХешСуммыДокумента.Добавить(СтрСоединить(ДанныеХешСуммыШапки));
	
	Для Каждого СтрокаТовары Из Товары Цикл
		ДанныеХешСуммыСтроки = Новый Массив();
		Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
			ДанныеХешСуммыСтроки.Добавить(Строка(СтрокаТовары.Номенклатура.УникальныйИдентификатор()));
		КонецЕсли;
		
		ДанныеХешСуммыСтроки.Добавить(СтрокаТовары.КодТНВЭД);
		Если ЗначениеЗаполнено(СтрокаТовары.СтавкаНДС) Тогда
			ДанныеХешСуммыСтроки.Добавить(Строка(СтрокаТовары.СтавкаНДС));
		КонецЕсли;
		
		ДанныеХешСуммыСтроки.Добавить(Формат(СтрокаТовары.Количество, "ЧДЦ=0; ЧРГ=;"));
		ДанныеХешСуммыДокумента.Добавить(СтрСоединить(ДанныеХешСуммыСтроки));
	КонецЦикла;
	
	Пока ДанныеШтрихкодов.Следующий() Цикл
		ДанныеХешСуммыСтроки = Новый Массив();
		Если ЗначениеЗаполнено(ДанныеШтрихкодов.ЗначениеШтрихкода) Тогда
			ДанныеХешСуммыСтроки.Добавить(ДанныеШтрихкодов.ХешСумма);
			ДанныеХешСуммыСтроки.Добавить(ДанныеШтрихкодов.ХэшСуммаНормализации);
		КонецЕсли;
		
		ДанныеХешСуммыДокумента.Добавить(СтрСоединить(ДанныеХешСуммыСтроки));
	КонецЦикла;
	
	Возврат Справочники.ШтрихкодыУпаковокТоваров.ХешСуммаСодержимогоУпаковки(ДанныеХешСуммыДокумента);
	
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование   = Неопределено;
	ИдентификаторЗаявки = Неопределено;
	ШтрихкодыУпаковок.Очистить();
	ШтрихкодыАТК.Очистить();
	ИдентификаторПроизводственногоЗаказа = "";
	ИдентификаторПроизводственнойЛинии   = "";
	ХешСумма = "";
	
	ДанныеОтчетаПроизводственнойЛинии.Очистить();
	ПроверятьСоставУпаковокПоДаннымИСМП = Ложь;
	Номенклатура                    = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Номенклатура");
	Характеристика                  = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ХарактеристикаНоменклатуры");
	Серия                           = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры");
	ИдентификаторПроисхожденияВЕТИС = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ИдентификаторПроисхожденияВЕТИС");
	
	СрокГодности = "";
	СкоропортящаясяПродукцияВЕТИС = Ложь;
	ИдентификаторПроисхожденияВЕТИССтрокой = "";
	
	СоздаватьШтрихкодыУпаковок = Ложь;
	
	ПроверитьАктуальностьОперации();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаИСМППоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияМаркировкиТоваровИСМП(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
	ПроверитьАктуальностьОперации();
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТоварыСрокомГодностиВЕТИС()
	
	Если ВидПродукции <> Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат;
	КонецЕсли;
	
	Идентификаторы = Товары.Выгрузить(,"ИдентификаторПроисхожденияВЕТИС").ВыгрузитьКолонку("ИдентификаторПроисхожденияВЕТИС");
	ДанныеИдентификаторовПроисхождения = ИнтеграцияИСМПВЕТИС.ДанныеИдентификаторовПроисхождения(Идентификаторы);
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТовары.ИдентификаторПроисхожденияВЕТИС) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеПоИдентификатору = ДанныеИдентификаторовПроисхождения.Получить(СтрокаТовары.ИдентификаторПроисхожденияВЕТИС);
		Если ДанныеПоИдентификатору = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТовары.СрокГодности = ДанныеПоИдентификатору.СрокГодности;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСрокГодностиВЕТИС()
	
	Если ВидПродукции <> Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ИнтеграцияИСМПВЕТИС.ИспользуетсяПодсистемаВетИС() Тогда
		Возврат;
	КонецЕсли;
	
	СрокГодности    = '00010101';
	СкоропортящаясяПродукцияВЕТИС = Ложь;
	
	Если ЗначениеЗаполнено(ИдентификаторПроисхожденияВЕТИС) Тогда
		Идентификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторПроисхожденияВЕТИС);
		ДанныеИдентификаторовПроисхождения = ИнтеграцияИСМПВЕТИС.ДанныеИдентификаторовПроисхождения(Идентификаторы);
		
		ДанныеПоИдентификатору = ДанныеИдентификаторовПроисхождения.Получить(ИдентификаторПроисхожденияВЕТИС);
		Если ДанныеПоИдентификатору = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		СрокГодности = ДанныеПоИдентификатору.СрокГодности;
		СкоропортящаясяПродукцияВЕТИС = ДанныеПоИдентификатору.Скоропортящаяся;
		ИдентификаторПроисхожденияВЕТИССтрокой = ДанныеПоИдентификатору.Идентификатор;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьАктуальностьОперации()
	
	Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков
		И Не ИнтеграцияИСКлиентСервер.ВидПродукцииПодлежитМаркировкеОстатков(ВидПродукции) Тогда
		Операция = Неопределено;
		Товары.Очистить();
	КонецЕсли;
	
	Если ИнтеграцияИСМПКлиентСервер.ОперацииНанесенияКодовМаркировки().Найти(Операция) <> Неопределено
		И ИнтеграцияИСМПКлиентСервер.ОперацииНанесенияКодовМаркировки(Ложь).Найти(Операция) = Неопределено Тогда
		Операция = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ДополнятьОбязательныеРеквизитыВводВОборот(Ссылка)
	
	ТекущееСостояние = РегистрыСведений.СтатусыДокументовИСМП.ТекущееСостояние(Ссылка);
	СтатусИСМП = ТекущееСостояние.Статус;
	Если СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.Черновик
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.ОтчетКПередаче
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.ОтчетОбрабатывается
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.ОтчетОшибкаПередачи
		Или СтатусИСМП = Перечисления.СтатусыОбработкиМаркировкиТоваровИСМП.КодыМаркировкиНанесеныЧастично Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецЕсли

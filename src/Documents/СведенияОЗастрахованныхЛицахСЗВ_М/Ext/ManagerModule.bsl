#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// СЗВ-М
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ФормаСВЗ_М";
	КомандаПечати.Представление = НСтр("ru = 'СЗВ-М'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаСВЗ_М") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ФормаСВЗ_М", "Форма СЗВ-М'", СформироватьПечатнуюФормуСЗВ_М(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
КонецПроцедуры

Функция ДанныеДляЗаполнения(ДанныеОбъекта) Экспорт
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ДанныеОбъекта.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Исходная Тогда 
		СоздатьВТФизическиеЛицаОрганизацииДляЗаполненияИсходныхСведений(МенеджерВременныхТаблиц, ДанныеОбъекта);
	ИначеЕсли ДанныеОбъекта.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Дополняющая Тогда
		СоздатьВТФизическиеЛицаОрганизацииДляЗаполненияДополняющихСведений(МенеджерВременныхТаблиц, ДанныеОбъекта);
	ИначеЕсли ДанныеОбъекта.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Отменяющая Тогда 
		СоздатьВТФизическиеЛицаОрганизацииДляЗаполненияОтменяющихСведений(МенеджерВременныхТаблиц, ДанныеОбъекта);
	КонецЕсли;
	
	Возврат ДанныеФизическихЛицПоВременнойТаблице(МенеджерВременныхТаблиц, ДанныеОбъекта.Дата);
КонецФункции

Процедура СоздатьВТФизическиеЛицаОрганизации(МенеджерВременныхТаблиц, ДанныеОбъекта, СписокФизическихЛиц = Неопределено) Экспорт 
	СписокПустыхНомеровПФР = Новый СписокЗначений;
	СписокПустыхНомеровПФР.Добавить("");
	СписокПустыхНомеровПФР.Добавить("   -   -      ");
	
	НачалоПериода = НачалоМесяца(ДанныеОбъекта.ОтчетныйПериод); 
	ОкончаниеПериода = КонецМесяца(ДанныеОбъекта.ОтчетныйПериод); 

	
	УчетСтраховыхВзносов.СформироватьТаблицуВТФизическиеЛицаРаботавшиеВОрганизации(МенеджерВременныхТаблиц, ДанныеОбъекта.Организация, НачалоПериода, ОкончаниеПериода);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ДанныеОбъекта.Дата);
	Запрос.УстановитьПараметр("СписокПустыхНомеровПФР", СписокПустыхНомеровПФР);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизации.ФизическоеЛицо,
	|	ИСТИНА КАК ВключаетсяВСведенияСВЗ_М,
	|	&Период КАК Период,
	|	ЛОЖЬ КАК ЯвляетсяПрокурором,
	|	ЛОЖЬ КАК ЯвляетсяВоеннослужащим,
	|	ЛОЖЬ КАК РаботаетВСтуденческомОтряде
	|ПОМЕСТИТЬ ВТФизическиеЛицаОрганизации
	|ИЗ
	|	ВТФизическиеЛицаРаботавшиеВОрганизации КАК СотрудникиОрганизации";	
	
	Запрос.Выполнить();
КонецПроцедуры	

Процедура СоздатьВТФизическиеЛицаОрганизацииДляЗаполненияИсходныхСведений(МенеджерВременныхТаблиц, ДанныеОбъекта) 
	СоздатьВТФизическиеЛицаОрганизации(МенеджерВременныхТаблиц, ДанныеОбъекта);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛицаОрганизации.Период,
	|	ФизическиеЛицаОрганизации.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаДляЗаполнения
	|ИЗ
	|	ВТФизическиеЛицаОрганизации КАК ФизическиеЛицаОрганизации
	|ГДЕ
	|	ФизическиеЛицаОрганизации.ВключаетсяВСведенияСВЗ_М";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура СоздатьВТФизическиеЛицаОрганизацииДляЗаполненияДополняющихСведений(МенеджерВременныхТаблиц, ДанныеОбъекта) 
	СоздатьВТФизическиеЛицаОрганизации(МенеджерВременныхТаблиц, ДанныеОбъекта);	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеОбъекта.Ссылка);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ДанныеОбъекта.ОтчетныйПериод);
	Запрос.УстановитьПараметр("Организация", ДанныеОбъекта.Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка
	|ПОМЕСТИТЬ ВТДокументыПринятыеПФР
	|ИЗ
	|	Документ.СведенияОЗастрахованныхЛицахСЗВ_М КАК СведенияОЗастрахованныхЛицахСЗВ_М
	|ГДЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка <> &Ссылка
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.Организация = &Организация
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.ОтчетныйПериод = &ОтчетныйПериод
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.ДокументПринятВПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛицаОрганизации.Период,
	|	ФизическиеЛицаОрганизации.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаДляЗаполнения
	|ИЗ
	|	ВТФизическиеЛицаОрганизации КАК ФизическиеЛицаОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОЗастрахованныхЛицахСЗВ_М.Сотрудники КАК СведенияОЗастрахованныхЛицахСЗВ_МСотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыПринятыеПФР КАК ДокументыПринятыеПФР
	|			ПО СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Ссылка = ДокументыПринятыеПФР.Ссылка
	|		ПО ФизическиеЛицаОрганизации.ФизическоеЛицо = СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Сотрудник
	|			И (ФизическиеЛицаОрганизации.ВключаетсяВСведенияСВЗ_М)
	|ГДЕ
	|	ФизическиеЛицаОрганизации.ВключаетсяВСведенияСВЗ_М
	|	И СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Сотрудник ЕСТЬ NULL ";
	
	Запрос.Выполнить();

КонецПроцедуры	

Процедура СоздатьВТФизическиеЛицаОрганизацииДляЗаполненияОтменяющихСведений(МенеджерВременныхТаблиц, ДанныеОбъекта) 
	СоздатьВТФизическиеЛицаОрганизации(МенеджерВременныхТаблиц, ДанныеОбъекта);	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеОбъекта.Ссылка);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ДанныеОбъекта.ОтчетныйПериод);
	Запрос.УстановитьПараметр("Организация", ДанныеОбъекта.Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка
	|ПОМЕСТИТЬ ВТДокументыПринятыеПФР
	|ИЗ
	|	Документ.СведенияОЗастрахованныхЛицахСЗВ_М КАК СведенияОЗастрахованныхЛицахСЗВ_М
	|ГДЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка <> &Ссылка
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.Организация = &Организация
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.ОтчетныйПериод = &ОтчетныйПериод
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.ДокументПринятВПФР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизическиеЛицаОрганизации.Период,
	|	ФизическиеЛицаОрганизации.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаДляЗаполнения
	|ИЗ
	|	Документ.СведенияОЗастрахованныхЛицахСЗВ_М.Сотрудники КАК СведенияОЗастрахованныхЛицахСЗВ_МСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыПринятыеПФР КАК ДокументыПринятыеПФР
	|		ПО СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Ссылка = ДокументыПринятыеПФР.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаОрганизации КАК ФизическиеЛицаОрганизации
	|		ПО СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Сотрудник = ФизическиеЛицаОрганизации.ФизическоеЛицо
	|ГДЕ
	|	(ФизическиеЛицаОрганизации.ФизическоеЛицо ЕСТЬ NULL 
	|			ИЛИ НЕ ФизическиеЛицаОрганизации.ВключаетсяВСведенияСВЗ_М)";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Функция ДанныеФизическихЛицПоВременнойТаблице(МенеджерВременныхТаблиц, ДатаПолученияДанных)
	
	УчетСтраховыхВзносов.СформироватьТаблицуВТКадровыеДанныеФизическихЛицСПериодом(МенеджерВременныхТаблиц, "ВТФизическиеЛицаДляЗаполнения", Ложь, ДатаПолученияДанных);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеДанныеФизическихЛиц.ФизическоеЛицо КАК Сотрудник,
	|	КадровыеДанныеФизическихЛиц.СтраховойНомерПФР,
	|	КадровыеДанныеФизическихЛиц.ИНН,
	|	КадровыеДанныеФизическихЛиц.Фамилия,
	|	КадровыеДанныеФизическихЛиц.Имя,
	|	КадровыеДанныеФизическихЛиц.Отчество,
	|	КадровыеДанныеФизическихЛиц.Наименование КАК Наименование
	|ИЗ
	|	ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Возврат Запрос.Выполнить().Выгрузить();	
КонецФункции

Функция ДанныеФизическихЛицПоСпискуЗначений(СписокФизическихЛиц, Дата) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("СпискокФизическихЛиц", СписокФизическихЛиц);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК ФизическоеЛицо,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаДляЗаполнения
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка В(&СпискокФизическихЛиц)";
	
	Запрос.Выполнить();
	
	Возврат ДанныеФизическихЛицПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц, Дата);	
КонецФункции	

Функция ИмяФайла(Организация, Дата, УИД = Неопределено) Экспорт
	
	Если УИД = Неопределено Тогда
		УИД = Новый УникальныйИдентификатор;
	КонецЕсли;	
	
	Параметры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрационныйНомерПФР, КодОрганаПФР");
	
	Возврат "ПФР"
			+ "_" + ?(ЗначениеЗаполнено(Параметры.РегистрационныйНомерПФР), Параметры.РегистрационныйНомерПФР, "")
			+ "_" + ?(ЗначениеЗаполнено(Параметры.КодОрганаПФР),СтрЗаменить(Параметры.КодОрганаПФР, "-", ""),"")
			+ "_СЗВ-М"
			+ "_" + Формат(Дата, "ДФ=ггггММдд")
			+ "_" + УИД;

КонецФункции	

Функция ВыборкаПоШапкеДокумента(МассивСсылок)	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.СведенияОЗастрахованныхЛицахСЗВ_М";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "ОкончаниеОтчетногоПериода";
	ОписаниеИсточникаДанных.СписокСсылок = МассивСсылок;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка КАК Ссылка,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Номер КАК Номер,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Дата КАК Дата,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Организация КАК Организация,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ОтчетныйПериод КАК ОтчетныйПериод,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ТипФормы КАК ТипФормы,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ДокументПринятВПФР КАК ДокументПринятВПФР,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Руководитель КАК Руководитель,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ФайлСформирован КАК ФайлСформирован,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ответственный КАК Ответственный,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ОкончаниеОтчетногоПериода КАК ОкончаниеОтчетногоПериода,
	|	КОЛИЧЕСТВО(СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Сотрудник) КАК КоличествоСотрудников
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.СведенияОЗастрахованныхЛицахСЗВ_М.Сотрудники КАК СведенияОЗастрахованныхЛицахСЗВ_МСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОЗастрахованныхЛицахСЗВ_М КАК СведенияОЗастрахованныхЛицахСЗВ_М
	|		ПО СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Ссылка = СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка
	|ГДЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Номер,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Дата,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Организация,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ОтчетныйПериод,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ТипФормы,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ДокументПринятВПФР,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ИмяФайлаДляПФР,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Руководитель,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ДолжностьРуководителя,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ФайлСформирован,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ответственный,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ОкончаниеОтчетногоПериода";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	УчетСтраховыхВзносов.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Дата,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Номер,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Организация,
	|	СведенияОбОрганизациях.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОбОрганизациях.Наименование,
	|	СведенияОбОрганизациях.НаименованиеПолное,
	|	СведенияОбОрганизациях.ИНН,
	|	СведенияОбОрганизациях.КПП,
	|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
	|	СведенияОбОрганизациях.ОГРН,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ответственный,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка КАК Ссылка,
	|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	СведенияОбОрганизациях.КодПоОКПО,
	|	СведенияОбОрганизациях.НаименованиеОКОПФ,
	|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеСокращенное,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ИмяФайлаДляПФР,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ТипФормы,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.ОтчетныйПериод,
	|	СведенияОЗастрахованныхЛицахСЗВ_М.КоличествоСотрудников,
	|	ЕСТЬNULL(СведенияОЗастрахованныхЛицахСЗВ_М.ДолжностьРуководителя, """") КАК РуководительДолжность,
	|	ЕСТЬNULL(СведенияОЗастрахованныхЛицахСЗВ_М.Руководитель, """") КАК Руководитель
	|ИЗ
	|	ВТДанныеДокументов КАК СведенияОЗастрахованныхЛицахСЗВ_М
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
	|		ПО СведенияОЗастрахованныхЛицахСЗВ_М.Организация = СведенияОбОрганизациях.Организация
	|			И СведенияОЗастрахованныхЛицахСЗВ_М.ОкончаниеОтчетногоПериода = СведенияОбОрганизациях.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
	|		ПО СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка = ФИООтветственныхЛиц.Ссылка
	|			И СведенияОЗастрахованныхЛицахСЗВ_М.Руководитель = ФИООтветственныхЛиц.ФизическоеЛицо
	|ГДЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";

	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаПоСотрудникам(МассивСсылок)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.НомерСтроки,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Сотрудник,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Фамилия,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Имя,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Отчество,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.ИНН,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.СтраховойНомерПФР
	|ИЗ
	|	Документ.СведенияОЗастрахованныхЛицахСЗВ_М КАК СведенияОЗастрахованныхЛицахСЗВ_М
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОЗастрахованныхЛицахСЗВ_М.Сотрудники КАК СведенияОЗастрахованныхЛицахСЗВ_МСотрудники
	|		ПО СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Ссылка = СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка
	|ГДЕ
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Ссылка В(&МассивСсылок)
	|	И СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.НомерСтроки,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Сотрудник,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Фамилия,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Имя,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.Отчество,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.ИНН,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.СтраховойНомерПФР
	|
	|УПОРЯДОЧИТЬ ПО
	|	СведенияОЗастрахованныхЛицахСЗВ_М.Ссылка,
	|	СведенияОЗастрахованныхЛицахСЗВ_МСотрудники.НомерСтроки";
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции	

// Формирует файл, который можно будет сохранить
//
Функция СформироватьВыходнойФайл(Ссылка, ИмяСформированногоФайла)  Экспорт
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ВыборкаПоШапкеДокумента = ВыборкаПоШапкеДокумента(МассивСсылок);
	ВыборкаПоШапкеДокумента.Следующий();
		
	ВыборкаПоРаботникиОрганизации =	ВыборкаПоСотрудникам(МассивСсылок);;
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР_2016XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ФорматСЗВ_М = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_М");
	
	НаборЗаписейДатаЗаполнения = Новый Структура("ДатаЗаполнения", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ_М.ДатаЗаполнения));
	ФорматСЗВ_М.Удалить("ДатаЗаполнения");
	ФорматЗЛ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ_М.СписокЗЛ.Значение);
	ФорматСЗВ_М.Удалить("СписокЗЛ");
	
	// Создаем начальное дерево
	ДеревоВыгрузки = СправкиПоНДФЛ.СоздатьДеревоXML();
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("xmlns", "http://пф.рф/ВС/СЗВ-М/2017-01-01");
	Атрибуты.Вставить("xmlns:АФ", "http://пф.рф/АФ");
	Атрибуты.Вставить("xmlns:АФ2", "http://пф.рф/АФ/2017-01-01");
	Атрибуты.Вставить("xmlns:УТ", "http://пф.рф/унифицированныеТипы/2014-01-01");
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ЭДПФР", "", Атрибуты);
	
	// Данные формы и страхователя
	Если ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Исходная Тогда
		ФорматСЗВ_М.ТипФормы.Значение = 1;	
	ИначеЕсли ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Дополняющая Тогда
		ФорматСЗВ_М.ТипФормы.Значение = 2;	
	ИначеЕсли ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Отменяющая Тогда
		ФорматСЗВ_М.ТипФормы.Значение = 3;	
	КонецЕсли;	
	НаборЗаписейСтрахователь = ФорматСЗВ_М.Страхователь.Значение;
	НаборЗаписейСтрахователь.РегНомер = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФР;
	НаименованиеКраткое = СокрЛП(ВРег(ВыборкаПоШапкеДокумента.НаименованиеСокращенное));
	ПерсонифицированныйУчет.УдалитьПробелыРядомСДефисом(НаименованиеКраткое);
	НаборЗаписейСтрахователь.НаименованиеКраткое = НаименованиеКраткое;
	НаборЗаписейСтрахователь.ИНН = ВыборкаПоШапкеДокумента.ИНН;
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КПП) Тогда
		НаборЗаписейСтрахователь.КПП = ВыборкаПоШапкеДокумента.КПП;
	Иначе
		НаборЗаписейСтрахователь.Удалить("КПП");
		
		СтрокаПоляКПП = ФорматСЗВ_М.Страхователь.Поля.Найти("КПП", "ИмяПоля");
		Если СтрокаПоляКПП <> Неопределено Тогда
			ФорматСЗВ_М.Страхователь.Поля.Удалить(СтрокаПоляКПП);
		КонецЕсли;		
	КонецЕсли;
	НаборЗаписейОтчетныйПериод = ФорматСЗВ_М.ОтчетныйПериод.Значение;
	НаборЗаписейОтчетныйПериод.Месяц = Месяц(ВыборкаПоШапкеДокумента.ОтчетныйПериод);
	НаборЗаписейОтчетныйПериод.КалендарныйГод = Год(ВыборкаПоШапкеДокумента.ОтчетныйПериод);
	
	УзелФормы = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "СЗВ-М", "");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелФормы, ФорматСЗВ_М);
	
	// Служебная информация о файле
	НаборЗаписейСлужебнаяИнформация = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СлужебнаяИнформация");
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР) Тогда
		ЧастиИмениФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР),"_");
		НаборЗаписейСлужебнаяИнформация.АФ__GUID.Значение = ЧастиИмениФайла[ЧастиИмениФайла.ВГраница()];
	КонецЕсли;
	НаборЗаписейСлужебнаяИнформация.АФ__ДатаВремя.Значение = ПерсонифицированныйУчет.ПредставлениеДатыВФорматеdateTimeСЧасовымПоясом(ВыборкаПоШапкеДокумента.Дата);
	НаборЗаписейСлужебнаяИнформация.АФ2__ПрограммаПодготовки.Значение = ВРег(РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "СлужебнаяИнформация",""), НаборЗаписейСлужебнаяИнформация);
	
	Если ВыборкаПоРаботникиОрганизации.Количество() > 0 Тогда
		УзелСпискаЗЛ = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелФормы, "СписокЗЛ", "");
	
		
		СписокОбработанныхАнкет = Новый Соответствие;
		
		НомерДокумента = 0;
		Пока ВыборкаПоРаботникиОрганизации.Следующий()	Цикл
			
			НомерДокумента = НомерДокумента + 1;
			
							
			НаборЗаписейЗЛ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматЗЛ);
			НаборЗаписейФИО = НаборЗаписейЗЛ.ФИО.Значение;
			НаборЗаписейФИО.УТ__Фамилия = ВРег(ВыборкаПоРаботникиОрганизации.Фамилия);
			НаборЗаписейФИО.УТ__Имя = ВРег(ВыборкаПоРаботникиОрганизации.Имя);
			НаборЗаписейФИО.УТ__Отчество = ВРег(ВыборкаПоРаботникиОрганизации.Отчество);
			
			НаборЗаписейЗЛ.СНИЛС.Значение = ВыборкаПоРаботникиОрганизации.СтраховойНомерПФР;
			Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ИНН) Тогда
				НаборЗаписейЗЛ.ИНН.Значение = ВыборкаПоРаботникиОрганизации.ИНН;
			Иначе
				НаборЗаписейЗЛ.Удалить("ИНН")
			КонецЕсли;
			
			Атрибуты = Новый Соответствие;
			Атрибуты.Вставить("НомерПП", Формат(НомерДокумента, "ЧГ=0"));
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСпискаЗЛ, "ЗЛ", "", Атрибуты), НаборЗаписейЗЛ);
			
		КонецЦикла;
	КонецЕсли;
	
	НаборЗаписейДатаЗаполнения.ДатаЗаполнения.Значение = Формат(ВыборкаПоШапкеДокумента.Дата,"ДФ=yyyy-MM-dd");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейДатаЗаполнения);
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = СправкиПоНДФЛ.СоздатьПотокXML(, "UTF-8");
	СправкиПоНДФЛ.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance",Ложь);
	ТекстФайла = ПотокВыгрузкиXML.Закрыть();
	
	ИмяСформированногоФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ИмяФайлаДляПФР");
	Возврат СтрЗаменить(ТекстФайла, "__", ":");
	
КонецФункции // СформироватьВыходнойФайл()


Функция СформироватьПечатнуюФормуСЗВ_М(МассивОбъектов, ОбъектыПечати, РазбиватьПоСотрудникам = Ложь)	

	ВыборкаПоШапкеДокумента = ВыборкаПоШапкеДокумента(МассивОбъектов); 
	ВыборкаПоРаботникиОрганизации =	ВыборкаПоСотрудникам(МассивОбъектов);
	
	Макет2016 = ПолучитьМакет("ФормаСЗВ_М");
	Макет2021 = ПолучитьМакет("ФормаСЗВ_М_2021");
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЗВ_М";
	ДокументРезультат.ПолеСлева = 0;
	ДокументРезультат.ПолеСправа = 0;
	
	ОбластьМакетаШапка2016 = Макет2016.ПолучитьОбласть("Шапка"); 
	ОбластьМакетаПодвал2016 = Макет2016.ПолучитьОбласть("Подвал");
	ОбластьМакета2016 = Макет2016.ПолучитьОбласть("СтрокаРаботник"); 
	ОбластьМакетаПустаяСтрока2016 = Макет2016.ПолучитьОбласть("ПустаяСтрокаРаботник");
	ОбластьМакетаКолонтитул2016 = Макет2016.ПолучитьОбласть("Колонтитул");
	ОбластьМакетаШапка2021 = Макет2021.ПолучитьОбласть("Шапка"); 
	ОбластьМакетаПодвал2021 = Макет2021.ПолучитьОбласть("Подвал");
	ОбластьМакета2021 = Макет2021.ПолучитьОбласть("СтрокаРаботник"); 
	ОбластьМакетаПустаяСтрока2021 = Макет2021.ПолучитьОбласть("ПустаяСтрокаРаботник");
	ОбластьМакетаКолонтитул2021 = Макет2021.ПолучитьОбласть("Колонтитул");
	
	ЭтоПервыйДокументКоллекции = Истина;
	Пока ВыборкаПоШапкеДокумента.Следующий() Цикл
		
		ЭтоФорма2016Года = ВыборкаПоШапкеДокумента.Дата < '20210530';
		Если ЭтоФорма2016Года Тогда 
			ОбластьМакетаШапка = ОбластьМакетаШапка2016;
			ОбластьМакетаПодвал = ОбластьМакетаПодвал2016;
			ОбластьМакета = ОбластьМакета2016;
			ОбластьМакетаПустаяСтрока = ОбластьМакетаПустаяСтрока2016;
			ОбластьМакетаКолонтитул = ОбластьМакетаКолонтитул2016;
		Иначе
			ОбластьМакетаШапка = ОбластьМакетаШапка2021; 
			ОбластьМакетаПодвал = ОбластьМакетаПодвал2021;
			ОбластьМакета = ОбластьМакета2021; 
			ОбластьМакетаПустаяСтрока = ОбластьМакетаПустаяСтрока2021;
			ОбластьМакетаКолонтитул = ОбластьМакетаКолонтитул2021;
		КонецЕсли;
		
		НачалоФормы = ДокументРезультат.ВысотаТаблицы + 1;
		
		Если ЭтоПервыйДокументКоллекции Тогда
			ЭтоПервыйДокументКоллекции = Ложь;
		Иначе
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ВыборкаПоРаботникиОрганизации.СледующийПоЗначениюПоля("ССылка");
		
		ВыводимыеОбласти = Новый Массив;
		ВыводимыеОбласти.Добавить(ОбластьМакета);
		
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		
		Если ЭтоФорма2016Года Тогда
			Если ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Исходная Тогда
				ОбластьМакетаШапка.Параметры.ТипФормыСтрокой = "исхд";	
			ИначеЕсли ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Дополняющая Тогда
				ОбластьМакетаШапка.Параметры.ТипФормыСтрокой = "доп";
			ИначеЕсли ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Отменяющая Тогда
				ОбластьМакетаШапка.Параметры.ТипФормыСтрокой = "отмн";	
			КонецЕсли;	
		Иначе
			Если ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Исходная Тогда
				ОбластьМакетаШапка.Параметры.ТипФормыСтрокой = "Исходная";	
			ИначеЕсли ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Дополняющая Тогда
				ОбластьМакетаШапка.Параметры.ТипФормыСтрокой = "Дополняющая";
			ИначеЕсли ВыборкаПоШапкеДокумента.ТипФормы = Перечисления.ТипыСведенийСЗВ_М.Отменяющая Тогда
				ОбластьМакетаШапка.Параметры.ТипФормыСтрокой = "Отменяющая";	
			КонецЕсли;	
		КонецЕсли;
		
		Если Не РазбиватьПоСотрудникам Тогда
			
			ВыведеноСтрок = 0;
			НомерСтраницы = 0;
			
			ТекущийЛист = НовыйПечатныйЛистСЗВМ(ВыборкаПоШапкеДокумента, ДокументРезультат, ОбластьМакетаКолонтитул, НомерСтраницы);
			ТекущийЛист.Вывести(ОбластьМакетаШапка);
			
		КонецЕсли;
		
		Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл
			
			Если РазбиватьПоСотрудникам Тогда
				
				НачалоБланка = ДокументРезультат.ВысотаТаблицы + 1;
				
				ВыведеноСтрок = 0;
				НомерСтраницы = 0;
				
				ТекущийЛист = НовыйПечатныйЛистСЗВМ(ВыборкаПоШапкеДокумента, ДокументРезультат, ОбластьМакетаКолонтитул, НомерСтраницы);
				ТекущийЛист.Вывести(ОбластьМакетаШапка);
				
			КонецЕсли;
			
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоРаботникиОрганизации);
			ОбластьМакета.Параметры.НомерПП = ВыведеноСтрок;
			Если ВыборкаПоШапкеДокумента.КоличествоСотрудников > 25 Тогда
				Если ВыведеноСтрок = ВыборкаПоШапкеДокумента.КоличествоСотрудников Тогда 
					ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				КонецЕсли;
				Если ТекущийЛист.ПроверитьВывод(ВыводимыеОбласти) Тогда 
					ТекущийЛист.Вывести(ОбластьМакета);
				Иначе 
					ДокументРезультат.Вывести(ТекущийЛист);
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ТекущийЛист = НовыйПечатныйЛистСЗВМ(ВыборкаПоШапкеДокумента, ДокументРезультат, ОбластьМакетаКолонтитул, НомерСтраницы);
					ТекущийЛист.Вывести(ОбластьМакета);
				КонецЕсли;
			Иначе 
				ТекущийЛист.Вывести(ОбластьМакета);
			КонецЕсли;
			
			Если РазбиватьПоСотрудникам Тогда
				
				Если ВыведеноСтрок < 25 Тогда
					Для Сч = ВыведеноСтрок + 1 По 25 Цикл
						ТекущийЛист.Вывести(ОбластьМакетаПустаяСтрока);
					КонецЦикла;
				КонецЕсли;
				ТекущийЛист.Вывести(ОбластьМакетаПодвал);
				ДокументРезультат.Вывести(ТекущийЛист);
				
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НачалоБланка, ОбъектыПечати, ВыборкаПоРаботникиОрганизации.Сотрудник);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не РазбиватьПоСотрудникам Тогда
			
			Если ВыведеноСтрок < 25 Тогда
				Для Сч = ВыведеноСтрок + 1 По 25 Цикл
					ТекущийЛист.Вывести(ОбластьМакетаПустаяСтрока);
				КонецЦикла;
			КонецЕсли;
			ТекущийЛист.Вывести(ОбластьМакетаПодвал);
			ДокументРезультат.Вывести(ТекущийЛист);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НачалоФормы, ОбъектыПечати, ВыборкаПоШапкеДокумента.Ссылка);
		
	КонецЦикла;	
	
	Возврат ДокументРезультат 
	
КонецФункции	


Функция НовыйПечатныйЛистСЗВМ(ВыборкаПоШапкеДокумента, ДокументРезультат, ОбластьМакетаКолонтитул, НомерСтраницы)
	
	ТекущийЛист = Новый ТабличныйДокумент;
	ТекущийЛист.ПолеСлева = 0;
	ТекущийЛист.ПолеСправа = 0;
	ТекущийЛист.ОриентацияСтраницы = ДокументРезультат.ОриентацияСтраницы;
	
	Если ВыборкаПоШапкеДокумента.КоличествоСотрудников <= 25 Тогда 
		Возврат ТекущийЛист;
	КонецЕсли;
	
	РегистрационныйНомерПФР = СтрЗаменить(ВыборкаПоШапкеДокумента.РегистрационныйНомерПФР," ","");
	РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
	ПерсонифицированныйУчет.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьМакетаКолонтитул, "НомРег", 12);
	
	НомерСтраницы = НомерСтраницы + 1;
	НомерДляПечати = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(НомерСтраницы, 5);
	ПерсонифицированныйУчет.ВывестиДанныеПоБуквенно(НомерДляПечати, ОбластьМакетаКолонтитул, "НомСтр", 5);
	
	ТекущийЛист.Вывести(ОбластьМакетаКолонтитул);
	
	Возврат ТекущийЛист;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЭДОКлиент Экспорт;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.НалоговыйПериод = Год(ТекущаяДатаСеанса())-1;
		Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		Объект.Дата = ТекущаяДатаСеанса();
		ПриИзмененииОрганизации();
	КонецЕсли;
	УстановитьВидимостьДанныхРеорганизации(ЭтаФорма);
	УстановитьОписаниеКорректировки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПослеПолученияКонтекста", ЭтаФорма);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПосмотретьСправку(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена организация. Просмотр невозможен.'"));
		Возврат;
	КонецЕсли;
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка) ИЛИ Модифицированность) И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.СправкиНДФЛДляПередачиВНалоговыйОрган", "Справки2НДФЛ", МассивОбъектов, ЭтаФорма, Новый Структура());
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьРеестр(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена организация. Просмотр невозможен.'"));
		Возврат;
	КонецЕсли;
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка) ИЛИ Модифицированность) И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	
	Если Объект.НалоговыйПериод >2017 Тогда
		ИмяМакета =  "ПФ_MXL_Реестр2019"
	Иначе
		ИмяМакета =  "Реестр2011";
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.СправкиНДФЛДляПередачиВНалоговыйОрган", ИмяМакета, МассивОбъектов, ЭтаФорма, Новый Структура());
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиОрганизацииСотрудникПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СотрудникиОрганизации.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Сотрудник)Тогда
		ДанныеСотрудника = ДанныеСотрудникаНаСервере(ТекущиеДанные.Сотрудник);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСотрудника);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПриИзмененииОрганизации();
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйПериодПриИзменении(Элемент)
	УстановитьВариантыВидовСправок(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	УстановитьВариантыВидовСправок(Истина);
КонецПроцедуры


&НаКлиенте
Процедура ОснованиеДляПредставленияСправокПриИзменении(Элемент)
		УстановитьВидимостьДанныхРеорганизации(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена организация. Просмотр невозможен.'"));
		Возврат;
	КонецЕсли;
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка) ИЛИ Модифицированность) И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ПолучитьИмяФайлаНДФЛ(Объект.Ссылка)+".xml";
	АдресФайла = СправкиПоНДФЛ.СохранитьФайлВыгрузкиСправки2НДФЛ(Объект.Ссылка);
	ПолучитьФайл(АдресФайла, ИмяФайла, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнена организация. Просмотр невозможен.'"));
		Возврат;
	КонецЕсли;
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка) ИЛИ Модифицированность) И Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправкаВКонтролирующийОрганПослеОтправки", ЭтаФорма);
	
	КонтекстЭДОКлиент.ОтправкаРегламентированногоОтчетаВФНС(Объект.Ссылка, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаПриИзменении(Элемент)
	НомерКорректировкиДоИзменений = Объект.НомерКорректировки;
	Если Корректировка = "Исходная" Тогда
		Объект.НомерКорректировки = 0
	ИначеЕсли Корректировка = "Корректирующая" Тогда
		Объект.НомерКорректировки = Макс(Объект.НомерКорректировки, 1)
	ИначеЕсли Корректировка = "Аннулирующая" Тогда
		ОчиститьАннулирующуюСправкуНаСервере();
		Объект.НомерКорректировки = 99;
	Иначе
		Корректировка = "Исходная"; 
		Объект.НомерКорректировки = 0;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОчиститьАннулирующуюСправкуНаСервере()
	Объект.СведенияОДоходах.Очистить();
	Объект.СведенияОВычетах.Очистить();
	Объект.СуммыНалогов.Очистить();
	Объект.УведомленияНОоПравеНаВычеты.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура НомерКорректировкиПриИзменении(Элемент)
	НомерКорректировкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НомерКорректировкиПриИзмененииНаСервере()
	УстановитьОписаниеКорректировки(ЭтаФорма);
	Если Объект.НомерКорректировки = 99 Тогда
		ОчиститьАннулирующуюСправкуНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОписаниеКорректировки(Форма)
	
	Если Форма.Объект.НомерКорректировки = 0 Тогда
		Форма.Корректировка = "Исходная"
	ИначеЕсли Форма.Объект.НомерКорректировки = 99 Тогда
		Форма.Корректировка = "Аннулирующая"
	Иначе
		Форма.Корректировка = "Корректирующая"
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФайлаНДФЛ(СправкаНДФЛ)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СправкаНДФЛ, "ИмяФайла");
КонецФункции

&НаКлиенте
Процедура ПриОткрытииПослеПолученияКонтекста(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаВКонтролирующийОрганПослеОтправки(РезультатОтправки, ДополнительныеПараметры) Экспорт
	СообщениеОтправлено = (РезультатОтправки<>Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеСотрудникаНаСервере(Сотрудник)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФИОФизЛиц.Фамилия,
	|	ФИОФизЛиц.Имя,
	|	ФИОФизЛиц.Отчество,
	|	Сотрудники.Физлицо.ИНН КАК ИНН,
	|	Сотрудники.Физлицо.ДатаРождения КАК ДатаРождения,
	|	Сотрудники.Физлицо.Гражданство КАК Гражданство,
	|	ДокументыФизическихЛиц.Серия КАК СерияДокумента,
	|	ДокументыФизическихЛиц.Номер КАК НомерДокумента,
	|	ДокументыФизическихЛиц.ВидДокумента,
	|	КонтактнаяИнформация.ЗначенияПолей КАК АдресРФ
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛиц
	|		ПО Сотрудники.Физлицо = ФИОФизЛиц.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
	|		ПО Сотрудники.Физлицо = ДокументыФизическихЛиц.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Ссылка = Сотрудники.Физлицо)
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресФизЛицаПоПрописке)) ГДЕ Сотрудники.Ссылка = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	ДанныеСотрудника = Новый Структура("Фамилия, Имя, Отчество, ИНН, ДатаРождения, Гражданство, ВидДокумента, СерияДокумента, НомерДокумента, АдресРФ");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеСотрудника ,Выборка);
	КонецЕсли;
	
	Возврат ДанныеСотрудника;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииОрганизации()
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗапросПоОрганизации = Новый Запрос;
		ЗапросПоОрганизации.Текст =
		"ВЫБРАТЬ
		|	Организации.ИНН КАК ИНН,
		|	Организации.КПП КАК КПП,
		|	Организации.КодПоОКАТО КАК КодПоОКАТО,
		|	Организации.КодНалоговогоОрганаПолучателя КАК КодНалоговогоОрганаПолучателя,
		|	Организации.КодНалоговогоОрганаПолучателя КАК КодИФНСПолучателя,
		|	Организации.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Ссылка";
		ЗапросПоОрганизации.УстановитьПараметр("Ссылка", Объект.Организация);
		Выборка = ЗапросПоОрганизации.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ЭтоЮрЛицо = Выборка.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
			Объект.ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(Выборка, Объект.Дата, ЭтоЮрЛицо);
			Объект.Телефон = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(Объект.Организация,
				Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации, , ТекущаяДатаСеанса());
			ЗаполнитьЗначенияСвойств(Объект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Объект.Организация, Объект.Дата));
			Объект.ОКАТО_КПП = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(Выборка.КодПоОКАТО, 11) + "/" + РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(Выборка.КПП, 9);
		КонецЕсли;
		Объект.РегистрацияВНалоговомОргане = РегламентированнаяОтчетностьУСН.ПолучитьРегистрациюВИФНС(Объект.Организация);
	КонецЕсли;
	УстановитьВариантыВидовСправок(Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДанныхРеорганизации(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ГруппаРеорганизованнойОрганизации", "Видимость", Форма.Объект.ОснованиеДляПредставленияСправок = ПредопределенноеЗначение("Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию") Или Форма.Объект.ОснованиеДляПредставленияСправок = ПредопределенноеЗначение("Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию"))
КонецПроцедуры

&НаСервере
Процедура УстановитьВариантыВидовСправок(КорректироватьОснование = Ложь)
	СписокВыбора = Элементы.ОснованиеДляПредставленияСправок.СписокВыбора;
	СписокВыбора.Очистить();
	Если СправкиПоНДФЛ.ВыводитьФорму2НДФЛ2018Года(Объект.НалоговыйПериод, Объект.Дата) И РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОснованиеДляПредставленияСправок", "РежимВыбораИзСписка", Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОснованиеДляПредставленияСправок", "РежимВыбораИзСписка", Истина);
		СписокВыбора.Добавить(Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность);
		СписокВыбора.Добавить(Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ);
		Если КорректироватьОснование Тогда
			Если Объект.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию Тогда
				Объект.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность;
				УстановитьВидимостьДанныхРеорганизации(ЭтаФорма);
			КонецЕсли;
			Если Объект.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию Тогда
				Объект.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ;
				УстановитьВидимостьДанныхРеорганизации(ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

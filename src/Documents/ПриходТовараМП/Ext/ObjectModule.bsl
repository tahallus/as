#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбщегоНазначения

Процедура ЗаполнитьОплату()
	
	Если СуммаОплаты = 0 Тогда
		ОбщегоНазначенияМПСервер.УдалитьСвязанныеДокументы("РасходДенегМП", Ссылка);
		Возврат;
	КонецЕсли;
	
	НайденнаяСсылка = Документы.РасходДенегМП.НайтиПоРеквизиту("Основание", Ссылка);
	Если НайденнаяСсылка.Пустая() Тогда
		ОплатаОбъект = Документы.РасходДенегМП.СоздатьДокумент();
		ОплатаОбъект.Дата = ТекущаяДата();
		ОплатаОбъект.УстановитьНовыйНомер();
	Иначе
		ОплатаОбъект = НайденнаяСсылка.ПолучитьОбъект();
	КонецЕсли;
	
	Если ОбщегоНазначенияМПСервер.ЕстьПредопределенныйВДанных("СтатьиМП", "Прочее") Тогда
		ОплатаОбъект.Статья = Справочники.СтатьиМП.ОплатаПоставщику;
	КонецЕсли;
	ОплатаОбъект.Сумма = СуммаОплаты;
	ОплатаОбъект.Контрагент = Поставщик;
	ОплатаОбъект.Основание = Ссылка;
	
	Если ОбменДанными.Загрузка Тогда
		ОплатаОбъект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
	КонецЕсли;
	
	Если ОплатаОбъект.ПометкаУдаления <> ПометкаУдаления Тогда
		ОплатаОбъект.Записать();
		ОплатаОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
	КонецЕсли;
	
	Если Проведен Тогда
		ОплатаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ИначеЕсли ОплатаОбъект.Проведен Тогда
		ОплатаОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Иначе
		ОплатаОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Движения по регистру ОстаткиТоваров Приход.
	Движения.ОстаткиТоваровМП.Записывать = Истина;
	Для каждого ТекСтрокаТовары Из Товары Цикл
		
		Если ТекСтрокаТовары.Товар.Вид = Перечисления.ВидыТоваровМП.Товар Тогда
			
			Движение = Движения.ОстаткиТоваровМП.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Товар = ТекСтрокаТовары.Товар;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Операция = Перечисления.ТоварныеОперацииМП.Закупка;
			
		КонецЕсли;
		
		НоваяЗапись = РегистрыСведений.ЦеныПоставщиковМП.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Поставщик = Поставщик;
		НоваяЗапись.Товар = ТекСтрокаТовары.Товар;
		НоваяЗапись.Цена = ТекСтрокаТовары.Цена;
		НоваяЗапись.Записать(Истина);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Поставщик) Тогда
		Движения.ВзаиморасчетыСКонтрагентамиМП.Записывать = Истина;
		Движение = Движения.ВзаиморасчетыСКонтрагентамиМП.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Поставщик;
		Движение.Сумма = Товары.Итог("Сумма");
	КонецЕсли;
	
	Движения.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПометкаУдаления Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Комментарий = "";
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЗапретитьОперацииСоСвязаннымиДокументами")
		И ДополнительныеСвойства.ЗапретитьОперацииСоСвязаннымиДокументами Тогда
	Иначе
		ЗаполнитьОплату();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
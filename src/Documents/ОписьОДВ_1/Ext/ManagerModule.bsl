#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяФайла(Организация, Дата, УИД = Неопределено) Экспорт

	Если УИД = Неопределено Тогда
		УИД = Новый УникальныйИдентификатор;
	КонецЕсли;	
	
	Параметры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрационныйНомерПФР, КодОрганаПФР");
	
	Возврат "ПФР"
			+ "_" + ?(ЗначениеЗаполнено(Параметры.РегистрационныйНомерПФР), Параметры.РегистрационныйНомерПФР, "")
			+ "_" + ?(ЗначениеЗаполнено(Параметры.КодОрганаПФР),СтрЗаменить(Параметры.КодОрганаПФР, "-", ""),"")
			+ "_ОДВ-1"
			+ "_" + Формат(Дата, "ДФ=ггггММдд")
			+ "_" + УИД;
			
КонецФункции	

Процедура ОбработкаФормированияФайла(Объект) Экспорт
	
	ТекстФайла = СформироватьВыходнойФайл(Объект.Ссылка);
	СправкиПоНДФЛ.ЗаписатьФайлВАрхив(Объект.Ссылка, Объект.ИмяФайлаДляПФР, ТекстФайла, , "UTF-8", Ложь);
	
КонецПроцедуры

Функция СформироватьВыходнойФайл(Ссылка)
	
	СписокДокументов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ссылка);
	ВыборкаПоШапкеДокумента = ПерсонифицированныйУчет.ЗапросПоШапкеДляПечатиОДВ_1(СписокДокументов, "ОписьОДВ_1").Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоДаннымДНП = ПерсонифицированныйУчет.ЗапросПоДаннымДосрочногоНазначенияПенсииОДВ_1(СписокДокументов, "ОписьОДВ_1").Выбрать();
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР_2017XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = СправкиПоНДФЛ.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ФорматОДВ_1 = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "ОДВ_1");
	
	НаборЗаписейДатаЗаполнения = Новый Структура("ДатаЗаполнения", ОбщегоНазначения.СкопироватьРекурсивно(ФорматОДВ_1.ДатаЗаполнения));
	ФорматОДВ_1.Удалить("ДатаЗаполнения");
	НаборЗаписейРуководитель = Новый Структура("Руководитель", ОбщегоНазначения.СкопироватьРекурсивно(ФорматОДВ_1.Руководитель));
	ФорматОДВ_1.Удалить("Руководитель");
	ФорматОснованияДНП = ОбщегоНазначения.СкопироватьРекурсивно(ФорматОДВ_1.ОснованияДНП.Значение);
	ФорматОДВ_1.Удалить("ОснованияДНП");
	
	ФорматОДВ_1.Удалить("Страховая");
	ФорматОДВ_1.Удалить("Накопительная");
	ФорматОДВ_1.Удалить("ТарифСВ");
	ФорматОДВ_1.Удалить("Уплата");
	ФорматОДВ_1.Удалить("КоличествоЗЛ");
	
	// Создаем начальное дерево
	ДеревоВыгрузки = СправкиПоНДФЛ.СоздатьДеревоXML();
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("xmlns", "http://пф.рф/ВС/ОДВ-1/2017-01-01");
	Атрибуты.Вставить("xmlns:АФ", "http://пф.рф/АФ");
	Атрибуты.Вставить("xmlns:АФ2", "http://пф.рф/АФ/2016-06-21");
	Атрибуты.Вставить("xmlns:УТ", "http://пф.рф/унифицированныеТипы/2014-01-01");
	Атрибуты.Вставить("xmlns:ВС", "http://пф.рф/ВС/типы/2014-01-01");
	Атрибуты.Вставить("xmlns:РВ", "http://пф.рф/ВС/типыРВ/2014-01-01");
	Атрибуты.Вставить("xmlns:ИС", "http://пф.рф/ВС/типыИС/2017-01-01");
	
	УзелПФР = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ЭДПФР", "", Атрибуты);
	
	// Служебная информация о файле
	НаборЗаписейСлужебнаяИнформация = СправкиПоНДФЛ.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СлужебнаяИнформация");
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР) Тогда
		ЧастиИмениФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР),"_");
		НаборЗаписейСлужебнаяИнформация.АФ__GUID.Значение = ЧастиИмениФайла[ЧастиИмениФайла.ВГраница()];
	КонецЕсли;
	НаборЗаписейСлужебнаяИнформация.АФ__ДатаВремя.Значение = ПерсонифицированныйУчет.ПредставлениеДатыВФорматеdateTimeСЧасовымПоясом(ВыборкаПоШапкеДокумента.Дата);
	НаборЗаписейСлужебнаяИнформация.АФ2__ПрограммаПодготовки.Значение = ВРег(РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "СлужебнаяИнформация",""), НаборЗаписейСлужебнаяИнформация);
	
	// Данные формы и страхователя
	ФорматОДВ_1.Тип.Значение = ?(ВыборкаПоШапкеДокумента.ТипСведений = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, 1, 2);	
	НаборЗаписейСтрахователь = ФорматОДВ_1.Страхователь.Значение;
	НаборЗаписейСтрахователь.ИС__Наименование = ВРег(ВыборкаПоШапкеДокумента.НаименованиеСокращенное);
	НаборЗаписейСтрахователь.УТ__РегНомер = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФР;
	НаборЗаписейСтрахователь.УТ__ИНН = ВыборкаПоШапкеДокумента.ИНН;
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КПП) Тогда
		НаборЗаписейСтрахователь.УТ__КПП = ВыборкаПоШапкеДокумента.КПП;
	Иначе
		НаборЗаписейСтрахователь.Удалить("УТ__КПП");
		СтрокаПоляКПП = ФорматОДВ_1.Страхователь.Поля.Найти("УТ__КПП", "ИмяПоля");
		Если СтрокаПоляКПП <> Неопределено Тогда
			ФорматОДВ_1.Страхователь.Поля.Удалить(СтрокаПоляКПП);
		КонецЕсли;		
	КонецЕсли;
	НаборЗаписейОтчетныйПериод = ФорматОДВ_1.ОтчетныйПериод.Значение;
	НаборЗаписейОтчетныйПериод.Код = ПерсонифицированныйУчетКлиентСервер.КодОтчетногоПериода(ВыборкаПоШапкеДокумента.ОтчетныйПериод);
	НаборЗаписейОтчетныйПериод.Год = Год(ВыборкаПоШапкеДокумента.ОтчетныйПериод);
	
	УзелФормы = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелПФР, "ОДВ-1", "");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелФормы, ФорматОДВ_1);
	
	Если ВыборкаПоДаннымДНП.Количество() > 0 Тогда 
		УзелСпискаОснованияДНП = СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелФормы, "ОснованияДНП", "");
		ФорматОснование = ОбщегоНазначения.СкопироватьРекурсивно(ФорматОснованияДНП.ИС__Основание.Значение);
		ФорматОснованияДНП.Удалить("ИС__Основание");
		ВсегоШтат = 0;
		ВсегоФакт = 0;
		Пока ВыборкаПоДаннымДНП.Следующий() Цикл 
			НаборЗаписейОснование = ОбщегоНазначения.СкопироватьРекурсивно(ФорматОснование);
			НаборЗаписейОснование.ИС__Подразделение.Значение =ВРег(ВыборкаПоДаннымДНП.НаименованиеПодразделения);
			НаборЗаписейОснование.ИС__ПрофессияДолжность.Значение = ВРег(ВыборкаПоДаннымДНП.НаименованиеДолжности);
			НаборЗаписейОснование.ИС__КоличествоШтат.Значение = ВыборкаПоДаннымДНП.КоличествоРабочихМест;
			НаборЗаписейОснование.ИС__КоличествоФакт.Значение = ВыборкаПоДаннымДНП.КоличествоРаботающих;
			НаборЗаписейОснование.ИС__Описание.Значение = ВРег(ВыборкаПоДаннымДНП.ХарактерВыполняемыхРабот);
			НаборЗаписейОснование.ИС__Документы.Значение = ВРег(ВыборкаПоДаннымДНП.ПервичныеДокументы);
			НаборЗаписейОУТ = НаборЗаписейОснование.ИС__ОУТ.Значение;
			НаборЗаписейОУТ.ИС__Код = ВыборкаПоДаннымДНП.ОснованиеВыслугиЛетКод;
			НаборЗаписейОУТ.ИС__ПозицияСписка = ВыборкаПоДаннымДНП.КодПозицииСпискаКод;
			СправкиПоНДФЛ.ДобавитьИнформациюВДерево(СправкиПоНДФЛ.ДобавитьУзелВДеревоXML(УзелСпискаОснованияДНП, "ИС__Основание", ""), НаборЗаписейОснование);
			ВсегоШтат = ВсегоШтат + ВыборкаПоДаннымДНП.КоличествоРабочихМест;
			ВсегоФакт = ВсегоФакт + ВыборкаПоДаннымДНП.КоличествоРаботающих;
		КонецЦикла;
		ФорматОснованияДНП.ИС__ВсегоШтат.Значение = ВсегоШтат;
		ФорматОснованияДНП.ИС__ВсегоФакт.Значение = ВсегоФакт;
		СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелСпискаОснованияДНП, ФорматОснованияДНП);
	КонецЕсли;
	
	НаборЗаписейРуководитель.Руководитель.Значение.Должность.Значение = ВРег(ВыборкаПоШапкеДокумента.ДолжностьРуководителя);
	НаборЗаписейФИО = НаборЗаписейРуководитель.Руководитель.Значение.ФИО.Значение;
	ФИООтдельно = СтрРазделить(ВыборкаПоШапкеДокумента.Руководитель, " ");
	Если ФИООтдельно.Количество() > 0 Тогда
		НаборЗаписейФИО.УТ__Фамилия = ВРег(ФИООтдельно[0]);
	КонецЕсли;
	Если ФИООтдельно.Количество() > 1 Тогда
		НаборЗаписейФИО.УТ__Имя = ВРег(ФИООтдельно[1]);
	КонецЕсли;
	Если ФИООтдельно.Количество() > 2 Тогда
		НаборЗаписейФИО.УТ__Отчество = ВРег(ФИООтдельно[2]);
	КонецЕсли;
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейРуководитель);
	
	НаборЗаписейДатаЗаполнения.ДатаЗаполнения.Значение = Формат(ВыборкаПоШапкеДокумента.Дата, "ДФ=yyyy-MM-dd");
	СправкиПоНДФЛ.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейДатаЗаполнения);
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = СправкиПоНДФЛ.СоздатьПотокXML(, "UTF-8");
	СправкиПоНДФЛ.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance", Ложь);
	ТекстФайла = ПотокВыгрузкиXML.Закрыть();
	
	Возврат СтрЗаменить(ТекстФайла, "__", ":");
	
КонецФункции

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт
	
	ДанныеФайла = УчетСтраховыхВзносов.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Ложь;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ФормаОДВ_1";
	КомандаПечати.Представление = НСтр("ru = 'ОДВ-1'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ФормаОДВ_1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПФ_MXL_ФормаОДВ_1", 
			"ОДВ-1", 
			ПерсонифицированныйУчет.ПечатнаяФормаОДВ_1(МассивОбъектов, ОбъектыПечати, "ОписьОДВ_1"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
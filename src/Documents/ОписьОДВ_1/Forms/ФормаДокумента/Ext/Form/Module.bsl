#Область ОписаниеПеременных

&НаКлиенте
Перем НомерТекущейСтроиЗаписиОСтаже;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ОтчетныйПериод = НачалоГода(ТекущаяДатаСеанса());
		Объект.ОкончаниеОтчетногоПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаСтажаПерсУчета(Объект.ОтчетныйПериод);
		Объект.ТипСведений = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьДоступностьДанныхФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.ОписьОДВ_1"));
	
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда 
		Отказ = Истина;
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПроверяемыеРеквизиты, "Объект");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетныйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	МассивИменТаблиц = КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении();
	Для каждого ИмяТаблицы Из МассивИменТаблиц Цикл
		Таблица  = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(ЭтаФорма, ИмяТаблицы);
		Таблица.Очистить();
	КонецЦикла; 
	КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма, ОтображениеПредупрежденияПриРедактировании.НеОтображать);
	ОтчетныйПериодРегулированиеОбработка(Объект.ОтчетныйПериод, ПериодСтрока, Направление);
	Объект.ОкончаниеОтчетногоПериода = ПерсонифицированныйУчетКлиентСервер.ОкончаниеОтчетногоПериодаСтажаПерсУчета(Объект.ОтчетныйПериод);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСведенийПриИзменении(Элемент)
	
	ТипСведенийПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагБлокировкиДокументаПриИзменении(Элемент)
	
	ФлагБлокировкиДокументаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыДосрочноеНазначениеПенсии

&НаКлиенте
Процедура ДосрочноеНазначениеПенсииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ДосрочноеНазначениеПенсии.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока И Не Копирование Тогда 
		ТекущиеДанные.ОснованиеВыслугиЛет = ПредопределенноеЗначение("Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДосрочноеНазначениеПенсииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДосрочноеНазначениеПенсииПослеУдаления(Элемент)
	
	КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(
		ЭтаФорма, , 
		КлючевыеРеквизитыОписаниеКлючевыхРеквизитов(), 
		КлючевыеРеквизитыТаблицыОчищаемыеПриИзменении());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	Оповещение = Новый ОписаниеОповещения("ВыполнитьПодключаемуюКомандуЗавершение", ЭтотОбъект, Команда);
	ПроверитьСЗапросомДальнейшегоДействия(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодключаемуюКомандуЗавершение(Результат, Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	ОчиститьСообщения();

	Отказ = Ложь;
	ПроверкаЗаполненияДокумента(Отказ);
	Если Отказ Тогда
		ТекстСообщения = НСтр("ru = 'При проверке встроенной проверкой обнаружены ошибки.'")
	Иначе	
		ТекстСообщения = НСтр("ru = 'При проверке встроенной проверкой ошибок не обнаружено.'");
	КонецЕсли;
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;

	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма, "ПФР");	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВПФР(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);	
	ПроверитьСЗапросомДальнейшегоДействия(Оповещение);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Результат, Параметры) Экспорт
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;

	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма, "ПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаДиск(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗаписатьНаДискЗавершение", ЭтотОбъект);	
	ПроверитьСЗапросомДальнейшегоДействия(Оповещение);			
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаДискЗавершение(Результат, Параметры) Экспорт
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;

	ДанныеФайла = ПолучитьДанныеФайлаНаСервере(Объект.Ссылка, УникальныйИдентификатор);
	РаботаСФайламиКлиент.СохранитьФайлКак(ДанныеФайла);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ФлагБлокировкиДокумента = Объект.ДокументПринятВПФР;
	ПериодСтрока = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(Объект.ОтчетныйПериод);
	
	УстановитьДоступностьДанныхФормы();
	УстановитьСвойстваЭлементовФормы();
	
	КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма, КлючевыеРеквизитыОписаниеКлючевыхРеквизитов());
	КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма, , КлючевыеРеквизитыОписаниеКлючевыхРеквизитов(), КлючевыеРеквизитыТаблицыОчищаемыеПриИзменении());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьДанныхФормы()
	
	Если Объект.ДокументПринятВПФР Тогда  
		ТолькоПросмотр = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, 
		"ДосрочноеНазначениеПенсии", 
		"ТолькоПросмотр", 
		Ложь);
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, 
		"ДосрочноеНазначениеПенсииЗаполнить", 
		"Доступность", 
		Ложь);
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, 
		"ДосрочноеНазначениеПенсииЗаполнить", 
		"Видимость", 
		ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы.ПерсонифицированныйУчетРасширенная"));
			
КонецПроцедуры


&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Объект.ДосрочноеНазначениеПенсии.Очистить();
	
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ТипСведенийПриИзмененииНаСервере()
	
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ФлагБлокировкиДокументаПриИзмененииНаСервере()
	
	Модифицированность = Истина;
	Объект.ДокументПринятВПФР = ФлагБлокировкиДокумента;
	Если Не ФлагБлокировкиДокумента Тогда
		ТолькоПросмотр = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ОписаниеЭлементовСИндикациейОшибок() Экспорт
	ОписаниеЭлементовИндикацииОшибок = Новый Соответствие;	
	Возврат ОписаниеЭлементовИндикацииОшибок;
КонецФункции	

&НаСервере
Процедура ПроверкаЗаполненияДокумента(Отказ = Ложь)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПроверитьДанныеДокумента(Отказ);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПроверитьСЗапросомДальнейшегоДействия(ОповещениеЗавершения = Неопределено)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	ПроверкаЗаполненияДокумента(Отказ);	
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	
	Если Отказ Тогда 
		ТекстВопроса = НСтр("ru = 'В комплекте обнаружены ошибки.
							|Продолжить (не рекомендуется)?'");
							
		Оповещение = Новый ОписаниеОповещения("ПроверитьСЗапросомДальнейшегоДействияЗавершение", ЭтотОбъект, ДополнительныеПараметры);					
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Предупреждение.'"));
	Иначе 
		ПроверитьСЗапросомДальнейшегоДействияЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);				
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПроверитьСЗапросомДальнейшегоДействияЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;			
	
	Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьКомандуПечатиЗавершение(Результат, Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайлаНаСервере(Ссылка, УникальныйИдентификатор)
	
	Возврат УчетСтраховыхВзносов.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	Массив = КлючевыеРеквизитыТаблицыОчищаемыеПриИзменении();
	Возврат Массив;
	
КонецФункции 

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = КлючевыеРеквизитыОписаниеКлючевыхРеквизитов();
	Возврат Массив;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КлючевыеРеквизитыТаблицыОчищаемыеПриИзменении() 
	
	Массив = Новый Массив;
	Массив.Добавить("Объект.ДосрочноеНазначениеПенсии");
	
	Возврат Массив;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция КлючевыеРеквизитыОписаниеКлючевыхРеквизитов() 
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",		НСтр("ru = 'организации'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ОтчетныйПериод", 	НСтр("ru = 'периода'")));
	
	Возврат Массив;
	
КонецФункции

// Механизм КлючевыеРеквизитыЗаполненияФормы
// Процедуры и функции для предупреждения об очистке таблиц формы при редактировании "ключевых" реквизитов.
//
// Для работы механизма в форме должны быть определены экспортные процедуры: 
// 		КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении()
// 		КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов().
//

// Процедура определяет нужно ли отображать предупреждение при редактировании для ключевых реквизитов формы.
&НаКлиентеНаСервереБезКонтекста
Процедура КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(Форма, ОтображатьПредупреждение = Неопределено, МассивОписанийРеквизитов = Неопределено, МассивИменТаблиц = Неопределено) Экспорт
	
	Если ОтображатьПредупреждение = Неопределено Тогда
		Если МассивИменТаблиц = Неопределено Тогда 
			МассивИменТаблиц = Форма.КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении();
		КонецЕсли;	
		ОтображатьПредупреждение = КлючевыеРеквизитыЗаполненияФормыОтображатьПредупреждениеПриРедактировании(Форма, МассивИменТаблиц);
	КонецЕсли;
	
	Если МассивОписанийРеквизитов = Неопределено Тогда 
		МассивОписанийРеквизитов = Форма.КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов();
	КонецЕсли;	
	Для каждого Описание Из МассивОписанийРеквизитов Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			Описание.ЭлементФормы,
			"ОтображениеПредупрежденияПриРедактировании",
			ОтображатьПредупреждение);
	КонецЦикла;
КонецПроцедуры

// Функция определяет есть ли данные в таблицах документа, подключенных к механизму.
&НаКлиентеНаСервереБезКонтекста
Функция КлючевыеРеквизитыЗаполненияФормыОтображатьПредупреждениеПриРедактировании(Форма, МассивИменТаблиц)
	ОтображатьПредупреждениеПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	Для каждого ИмяТаблицы Из МассивИменТаблиц Цикл
		Таблица  = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ИмяТаблицы);
		Если Таблица.Количество() > 0 Тогда
			ОтображатьПредупреждениеПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ОтображатьПредупреждениеПриРедактировании;
КонецФункции

&НаСервереБезКонтекста
// Процедура заполняет текст предупреждения при редактировании для ключевых реквизитов.
Процедура КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(Форма, МассивОписанийРеквизитов = Неопределено, ДействиеПриИзмененииОчистка = Истина) Экспорт
	
	Если МассивОписанийРеквизитов = Неопределено Тогда 
		МассивОписанийРеквизитов = Форма.КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов();
	КонецЕсли;	
	
	Для Каждого Описание Из МассивОписанийРеквизитов Цикл
		Если Описание.Свойство("ПредупреждениеПриРедактировании") Тогда
			ПредупреждениеПриРедактировании = Описание.ПредупреждениеПриРедактировании;
		Иначе
			ПредупреждениеПриРедактировании = КлючевыеРеквизитыПредставлениеПредупреждения(Описание.Представление, ДействиеПриИзмененииОчистка)
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		Описание.ЭлементФормы,
		"ПредупреждениеПриРедактировании",
		ПредупреждениеПриРедактировании);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Функция возвращает текст предупреждения для конкретного реквизита.
Функция КлючевыеРеквизитыПредставлениеПредупреждения(ПредставлениеРеквизита, ДействиеПриИзмененииОчистка)
	
	ПредставлениеПредупреждения = НСтр("ru = 'Редактирование %1 приведет к %2 табличных частей документа'");
	
	Если ДействиеПриИзмененииОчистка Тогда
		ПредставлениеДействияПриИзменении = НСтр("ru = 'очистке'");
	Иначе 
		ПредставлениеДействияПриИзменении = НСтр("ru = 'перезаполнению'");
	КонецЕсли;
	
	ПредставлениеПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеПредупреждения, ПредставлениеРеквизита, ПредставлениеДействияПриИзменении);
	
	Возврат	ПредставлениеПредупреждения;
	
КонецФункции 

&НаКлиенте
Процедура ОтчетныйПериодРегулированиеОбработка(ОтчетныйПериод, ПредставлениеОтчетногоПериода, Направление, МинимальныйПериод = '00010101', МаксимальныйПериод = '00010101', Отказ = Ложь) Экспорт 
	
	Если ЗначениеЗаполнено(МинимальныйПериод) 
		И ОтчетныйПериод = МинимальныйПериод
		И Направление = -1 Тогда
		
		ТекстПредупрежденияШаблон = НСтр("ru = 'Период не может быть меньше чем %1'");
		ПериодПредставление = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(МинимальныйПериод);
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупрежденияШаблон, ПериодПредставление);
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
		Отказ = Истина;
		Возврат;
		
	ИначеЕсли  ЗначениеЗаполнено(МаксимальныйПериод) 
		И ОтчетныйПериод = МаксимальныйПериод
		И Направление = 1 Тогда
		
		ТекстПредупрежденияШаблон = НСтр("ru = 'Период не может быть больше чем %1'");
		ПериодПредставление = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(МаксимальныйПериод);
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупрежденияШаблон, ПериодПредставление);
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;	
	
	Если Не (ОтчетныйПериод = '19960101' И Направление = -1) Тогда
		
		Если ОтчетныйПериод > '20170101' Или (ОтчетныйПериод = '20170101' И Направление = 1) Тогда  
			Шаг = 12;
		ИначеЕсли ОтчетныйПериод > '20110101' Или (ОтчетныйПериод = '20110101' И Направление = 1) Тогда 
			Шаг = 3;
		ИначеЕсли ОтчетныйПериод > '20100101' Или (ОтчетныйПериод = '20100101' И Направление = 1) Тогда
			Шаг = 6;
		ИначеЕсли ОтчетныйПериод > '20020101' Или (ОтчетныйПериод = '20020101' И Направление = 1) Тогда 
			Шаг = 12;
		ИначеЕсли ОтчетныйПериод > '20010101' Или (ОтчетныйПериод = '20010101' И Направление = 1) Тогда 
			Шаг = 3;
		ИначеЕсли ОтчетныйПериод > '19970101' Или (ОтчетныйПериод = '19970101' И Направление = 1) Тогда 
			Шаг = 6;
		ИначеЕсли ОтчетныйПериод > '19961001' Или (ОтчетныйПериод = '19961001' И Направление = 1) Тогда 
			Шаг = 3;
		Иначе 
			Шаг = 9;
		КонецЕсли;	
		
		ОтчетныйПериод = ДобавитьМесяц(ОтчетныйПериод, Направление * Шаг);
		ПредставлениеОтчетногоПериода = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ОтчетныйПериод);
		
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

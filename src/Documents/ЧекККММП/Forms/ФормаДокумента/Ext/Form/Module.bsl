#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуОплатыЕслиНужно(СПредупреждением = Ложь)
	
	Если Объект.СуммаОплаты > (Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки) Тогда
		Если СПредупреждением Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("СкорректироватьСуммуОплатыЕслиНужноЗавершение", ЭтаФорма), НСтр("ru='Сумма оплаты не может быть больше суммы документа со скидкой!';en='Payment amount cannot be greater than the sum of the document at a discount!'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
			Возврат;
		КонецЕсли;
		Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуОплатыЕслиНужноЗавершение(ДополнительныеПараметры) Экспорт
	
	Объект.СуммаОплаты = Объект.Товары.Итог("Сумма") - Объект.СуммаСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуСкидкиЕслиНужно(СПредупреждением = Ложь)
	
	Если Объект.СуммаСкидки > Объект.Товары.Итог("Сумма")Тогда
		Если СПредупреждением Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("СкорректироватьСуммуСкидкиЕслиНужноЗавершение", ЭтаФорма), НСтр("ru='Сумма скидки не может быть больше суммы документа!';en='Discount amount cannot be greater than the sum of the document!'"),,ОбщегоНазначенияМПВызовСервераПовтИсп.ПолучитьСинонимКонфигурации());
			Возврат;
		КонецЕсли;
		Объект.СуммаСкидки = Объект.Товары.Итог("Сумма");
	КонецЕсли;
	
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьСуммуСкидкиЕслиНужноЗавершение(ДополнительныеПараметры) Экспорт
	
	Объект.СуммаСкидки = Объект.Товары.Итог("Сумма");
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентСкидки()
	
	ТоварыИтог = Объект.Товары.Итог("Сумма");
	Если ТоварыИтог <> 0 Тогда
		Скидка = Окр(Объект.СуммаСкидки / ТоварыИтог * 100, 0);
		ПроцентСкидки = Строка(Скидка) + "%";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеТоварПриИзменении(СтруктураДанных)
	
	ТоварСсылка = СтруктураДанных.Товар;
	
	Если ЗначениеЗаполнено(ТоварСсылка) Тогда
		ТоварОбъект = ТоварСсылка.ПолучитьОбъект();
		ТоварЦена = ?(СтруктураДанных.ПриходТовара, ТоварОбъект.ПолучитьЦенуПоставщиков(), ТоварОбъект.ПолучитьЦенуПродажи());
	Иначе
		ТоварОбъект = Неопределено;
		ТоварЦена = 0;
	КонецЕсли;
	
	СтруктураДанных.Вставить("Цена", ТоварЦена);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтроке(ТекущаяСтрока)
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики
	
	#Если МобильноеПриложениеСервер Тогда
		Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
			Объект.КассаККМ = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("КассаККММобильногоПриложения");
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.КассаККМ)
			И НЕ ЗначениеЗаполнено(Объект.РозничнаяТочка) Тогда
			Объект.РозничнаяТочка = Объект.КассаККМ.РозничнаяТочка;
		КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Чек ККТ';en='Retail Sales'"), "Мужской");
	ОбновитьЗаписиПоСтрокамТЧ();
	
	#Если МобильноеПриложениеСервер Тогда
		ОборудованиеПечатиМП = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ОборудованиеПечати");
	#Иначе
		ОборудованиеПечатиМП = Неопределено;
	#КонецЕсли
	
	Если ЗначениеЗаполнено(ОборудованиеПечатиМП) Тогда
		Элементы.Номер.Видимость = Ложь;
		Элементы.НомерЧекаККТ.Видимость = Истина;
	Иначе
		Элементы.Номер.Видимость = Истина;
		Элементы.НомерЧекаККТ.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.СуммаКартой > 0 И Объект.СуммаОплаты = 0 Тогда
		Элементы.СуммаДокумента.Заголовок = НСтр("ru='ИТОГО картой'");
		Элементы.Получено.Видимость = Ложь;
	ИначеЕсли Объект.СуммаКартой = 0 И Объект.СуммаОплаты > 0 Тогда
		Элементы.СуммаДокумента.Заголовок = НСтр("ru='ИТОГО наличными'");
		Элементы.Получено.Видимость = Ложь;
	Иначе
		Элементы.Получено.Видимость = Истина;
	КонецЕсли;
	
	УстановитьВидимостьКнопок();
	
	УстановитьОтображениеНомера();
	
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Элементы.Декорация1.Видимость = Ложь;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопок()
	
	Если Объект.Статус = Перечисления.СтатусЧекаККММП.Пробит Тогда
		Элементы.ПринятьОплату.Видимость = Ложь;
		Элементы.ОформитьВозврат.Видимость = Истина;
	Иначе
		Элементы.ПринятьОплату.Видимость = Истина;
		Элементы.ОформитьВозврат.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбщегоНазначенияМПСервер.УстановитьЗаголовокФормы(ЭтаФорма, НСтр("ru='Чек ККТ';en='Retail Sales'"));
	ОбновитьЗаписиПоСтрокамТЧ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменилосьКоличествоТовара");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ВстроенныеПокупкиКлиент.ЕстьПодписка() Then
	// 	Отказ = Истина;
	// 	Возврат;
	// КонецЕсли;
	
	УстановитьПроцентСкидки();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Если ВРег(Метаданные.Имя) = ВРег("УправлениеНебольшойФирмойНаМобильном") Тогда
			Возврат;
		КонецЕсли;
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульСинхронизацияПушУведомленияМПУНФ = Вычислить("СинхронизацияПушУведомленияМПУНФ");
		// АПК:488-вкл
		Если ТипЗнч(МодульСинхронизацияПушУведомленияМПУНФ) = Тип("ОбщийМодуль") Тогда
			МодульСинхронизацияПушУведомленияМПУНФ.ОтправитьПушУведомление("001");
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СуммаОплатыПриИзменении(Элемент)
	
	СкорректироватьСуммуОплатыЕслиНужно(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	СкорректироватьСуммуСкидкиЕслиНужно();
	СкорректироватьСуммуОплатыЕслиНужно();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	СтруктураДанных = Новый Структура("Товар, ПриходТовара", ТекущаяСтрока.Товар, Ложь);
	ПолучитьДанныеТоварПриИзменении(СтруктураДанных);
	
	Если СтруктураДанных.Цена <> 0 Тогда
		ТекущаяСтрока.Цена = СтруктураДанных.Цена;
	КонецЕсли;
	Если ТекущаяСтрока.Количество = 0 Тогда
		ТекущаяСтрока.Количество = 1;
	КонецЕсли;
	
	РассчитатьСуммуВСтроке(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьТоварныйЧек(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ЗаписатьЧекНаСервере();
	ПечатнаяФорма = СформироватьПечатнуюФорму();;
	ПечатнаяФорма.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()
	
	Возврат Документы.ЧекККММП.СформироватьПечатнуюФорму(Объект.Ссылка);
	
КонецФункции

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/tovarnye-dokumenty/kartochka-dokumenta-check/");
	// АПК:534-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РозничныеПродажиМПКлиент.ВыполнитьЗакрытиеИОткрытиеСменыЕслиНужно(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьОплату(Команда)
	
	РозничныеПродажиМПКлиент.Оплатить(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОплатыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура")
		И РезультатЗакрытия.Успешно Тогда
		Если РезультатЗакрытия.ВвестиНовуюПродажу Тогда
			ОткрытьФорму("Документ.ЧекККММП.Форма.ФормаПродажа");
		КонецЕсли;
		Закрыть();
	КонецЕсли;
	
	Если РезультатЗакрытия = Неопределено
		И ЗакрыватьПоЗавершенииОплаты Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолучениеРезультатаПоПлатежнойСистеме(Сумма, РезультатОперацииПоПлатежнойСистеме) Экспорт
	
	Если НЕ РезультатОперацииПоПлатежнойСистеме.Успешно Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаписатьЧек();
	КонецЕсли;
	
	Если РезультатОперацииПоПлатежнойСистеме.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежнойСистемыМП.Оплата")
		ИЛИ РезультатОперацииПоПлатежнойСистеме.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежнойСистемыМП.ВозвратОплаты") Тогда
		
		ДобавитьОперациюПоПлатежнойСистеме(РезультатОперацииПоПлатежнойСистеме);
		Оповестить("ЗаписанЧек", Объект.Ссылка);
		
	ИначеЕсли РезультатОперацииПоПлатежнойСистеме.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежнойСистемыМП.ОтменаОплаты") Тогда
		
		ДобавитьОперациюПоПлатежнойСистеме(РезультатОперацииПоПлатежнойСистеме);
		УдалитьОплатуПоПлатежнойКарте();
		Оповестить("ЗаписанЧек", Объект.Ссылка)
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОперациюПоПлатежнойСистеме(РезультатОперации)
	
	ЧекОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.ЧекККММП"));
	
	ЧекОбъект.КодАвторизации = РезультатОперации.КодАвторизации;
	ЧекОбъект.СсылочныйНомер = РезультатОперации.НомерСсылкиОперации;
	ЧекОбъект.НомерПлатежнойКарты = РезультатОперации.НомерКарты;
	ЧекОбъект.ДатаОперацииЭТ = РезультатОперации.ДатаОперации;
	ЧекОбъект.СлипЧек = Новый ХранилищеЗначения(РезультатОперации.СлипЧек, Новый СжатиеДанных(9));
	
	ЧекОбъект.Записать();
	ЭтаФорма.Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОплатуПоПлатежнойКарте()
	
	Объект.КодАвторизации = Неопределено;
	Объект.СсылочныйНомер = Неопределено;
	Объект.НомерПлатежнойКарты = Неопределено;
	Объект.ДатаОперацииЭТ = Неопределено;
	Объект.СлипЧек = Неопределено;
	Объект.СуммаКартой = Неопределено;
	
	ЗаписатьЧек();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНовыйНомер() Экспорт
	
	ЧекОбъект = РеквизитФормыВЗначение("Объект");
	ЧекОбъект.УстановитьНовыйНомер();
	ЗначениеВРеквизитФормы(ЧекОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЧек(Отказ = Ложь) Экспорт
	
	РозничныеПродажиМПКлиент.ВыполнитьЗакрытиеИОткрытиеСменыЕслиНужно(ЭтаФорма, Отказ);
	Если НЕ Отказ Тогда
		ЗаписатьЧекНаСервере();
		ОбновитьЗаписиПоСтрокамТЧ();
		Оповестить("ЗаписанЧек");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЧекНаСервере()
	
	ЧекОбъект = РеквизитФормыВЗначение("Объект");
	ЧекОбъект.Дата = ТекущаяДата();
	ЧекОбъект.Записать();
	ЗначениеВРеквизитФормы(ЧекОбъект, "Объект");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСсылочныйНомер() Экспорт
	
	Возврат Объект.СсылочныйНомер;
	
КонецФункции

&НаСервере
Процедура ОбновитьЗаписьПоСтроке(Знач Строка, ИдентификаторСтроки = Неопределено)
	
	Если ИдентификаторСтроки = Неопределено Тогда
		СтрокаТЧ = Строка;
	Иначе
		СтрокаТЧ = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
	КонецЕсли;
	
	ЗаписьПоСтроке = "%Цена% x %Количество%";
	
	ЗаписьПоСтроке = СтрЗаменить(ЗаписьПоСтроке, "%Количество%", Формат(СтрокаТЧ.Количество, "ЧЦ=15; ЧДЦ=%ТочностьОтображенияКоличества%; ЧН=0; ЧРД=.; ЧГ=0"));
	ЗаписьПоСтроке = СтрЗаменить(ЗаписьПоСтроке, "%Цена%",       Формат(СтрокаТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"));
	СтрокаТЧ.ЗаписьПоСтроке = ЗаписьПоСтроке;
	
	СуммаПоСтроке = "=%Сумма%";
	СуммаПоСтроке = СтрЗаменить(СуммаПоСтроке, "%Сумма%",      Формат(СтрокаТЧ.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"));
	СтрокаТЧ.СуммаПоСтроке = СуммаПоСтроке;
	
	НомерПоСтроке = "#%НомерСтроки%";
	НомерПоСтроке = СтрЗаменить(НомерПоСтроке, "%НомерСтроки%", Формат(СтрокаТЧ.НомерСтроки, "ЧЦ=15; ЧДЦ=%ТочностьОтображенияКоличества%; ЧН=0; ЧРД=.; ЧГ=0"));
	СтрокаТЧ.НомерПоСтроке = НомерПоСтроке;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаписиПоСтрокамТЧ()
	
	Для каждого СтрокаТЧ Из Объект.Товары Цикл
		ОбновитьЗаписьПоСтроке(СтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьТоварныйЧекВPDF(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ЗаписатьЧекНаСервере();
	СтруктураВозврата = ЗаписатьВPDF(КаталогДокументов());
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект), СтруктураВозврата.ПолноеИмяФайла);
	
КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Возврат; // Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры


&НаСервере
Функция ЗаписатьВPDF(КаталогДокументов)
	
	ПечатнаяФорма = СформироватьПечатнуюФорму();
	
	ИмяФайла = НСтр("ru='Товарный чек ';en='Sales Invoice '")
		+ Объект.Номер + НСтр("ru=' от ';en=' of '")
		+ ОбщегоНазначенияМПКлиентСервер.ПолучитьФорматированнуюСтрокуДатыДляФайла(Объект.Дата) + ".pdf";
	ПолноеИмяФайла = ОбщегоНазначенияМПКлиентСервер.ПолучитьПолноеИмяФайла(КаталогДокументов, ИмяФайла);     
	ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);             
	
	Возврат Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла, ПолноеИмяФайла);

КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеНомера()
	
	Если Константы.СинхронизацияВключенаМП.Получить() И Объект.НомерПодтвержден = Ложь Тогда
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Истина;
		ЭтаФорма.Элементы.Номер.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.НомерНеПодтвержденЦБ.Видимость = Ложь;
		ЭтаФорма.Элементы.Номер.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
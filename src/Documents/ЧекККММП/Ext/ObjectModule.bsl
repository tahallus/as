#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ОстаткиТоваровМП.Записывать = Истина;
	Движения.ПродажиМП.Записывать = Истина;
	
	КонтролироватьОстатки = НЕ Константы.НеКонтролироватьОстаткиМП.Получить()
		И НЕ ДополнительныеСвойства.Свойство("НеКонтролироватьОстатки");
	
	Остатки = РегистрыНакопления.ОстаткиТоваровМП.Остатки();
	
	ВсегоСкидкиРаспределено = 0;
	КоличествоСтрок = Товары.Количество();
	ТекущаяСтрока = 0;
	
	// Движения по регистру ОстаткиТоваров Расход.
	Для каждого ТекСтрокаТовары Из Товары Цикл
		
		Если ТекСтрокаТовары.Товар.Вид = Перечисления.ВидыТоваровМП.Товар Тогда
			
			Движение = Движения.ОстаткиТоваровМП.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Товар = ТекСтрокаТовары.Товар;
			Движение.Количество = ТекСтрокаТовары.Количество;
			
			НайденнаяСтрокаОстатков = Остатки.Найти(Движение.Товар, "Товар");
			Если НайденнаяСтрокаОстатков = Неопределено Тогда
				КоличествоНаСкладе = 0;
				СебестоимостьНаЕдиницу = 0;
			Иначе
				КоличествоНаСкладе = НайденнаяСтрокаОстатков.Количество;
				СебестоимостьНаЕдиницу = ?(КоличествоНаСкладе = 0, 0, НайденнаяСтрокаОстатков.Сумма / КоличествоНаСкладе);
			КонецЕсли;
			
			Движение.Сумма = СебестоимостьНаЕдиницу * Движение.Количество;
			Движение.Операция = Перечисления.ТоварныеОперацииМП.Продажа;
			
		КонецЕсли;
		
		ТекущаяСтрока = ТекущаяСтрока + 1;
		
		Если ТекущаяСтрока = КоличествоСтрок Тогда // Для последней строки распределяется весь остаток.
			СкидкаНаТовар = СуммаСкидки - ВсегоСкидкиРаспределено;
			ВсегоСкидкиРаспределено = СуммаСкидки;
		Иначе
			ДоляСуммыТовараВОбщей = ТекСтрокаТовары.Сумма / ?(СуммаДокумента = 0, 1, СуммаДокумента);
			СкидкаНаТовар = СуммаСкидки * ДоляСуммыТовараВОбщей;
			ВсегоСкидкиРаспределено = ВсегоСкидкиРаспределено + СкидкаНаТовар;
		КонецЕсли;
		
		Движение = Движения.ПродажиМП.Добавить();
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаТовары.Товар;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.Сумма - СкидкаНаТовар;
		
	КонецЦикла;
	
	// Движения по регистру ДенежныеСредства Приход.
	Движение = Движения.ДенежныеСредстваМП.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Статья = Справочники.СтатьиМП.ОплатаОтПокупателя;
	Движение.Сумма = СуммаДокумента;
	
	Движения.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПометкаУдаления Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Сумма") - СуммаСкидки;
	
	#Если МобильноеПриложениеСервер Тогда
		ОборудованиеПечатиМП = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ОборудованиеПечати");
	#Иначе
		ОборудованиеПечатиМП = Неопределено;
	#КонецЕсли
	
	Если НЕ ЗначениеЗаполнено(ОборудованиеПечатиМП)
		И СуммаОплаты + СуммаКартой >= СуммаДокумента Тогда
		Статус = Перечисления.СтатусЧекаККММП.Пробит;
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусЧекаККММП.Пробит 
		И (НомерЧекаККМ = "0"
		ИЛИ ПустаяСтрока(НомерЧекаККМ)) Тогда
		НомерЧекаККМ = "1";
	КонецЕсли;
	
	#Если МобильноеПриложениеСервер Тогда
		
		Если НЕ ЗначениеЗаполнено(КассаККМ) Тогда
			КассаККМ = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("КассаККММобильногоПриложения");
		КонецЕсли;
		Если ЗначениеЗаполнено(КассаККМ)
			И НЕ ЗначениеЗаполнено(РозничнаяТочка) Тогда
			РозничнаяТочка = КассаККМ.РозничнаяТочка;
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОтчетОРозничныхПродажах = Неопределено;
	Статус = Перечисления.СтатусЧекаККММП.НеПробит;
	Комментарий = "";
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
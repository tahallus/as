#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НомерЧекаККМ = ОбщегоНазначенияМПСервер.ЗначениеРеквизитаОбъекта(Данные.Ссылка, "НомерЧекаККМ");
	Если НЕ ЗначениеЗаполнено(НомерЧекаККМ) Тогда
		НомерЧекаККМ = 0;
	КонецЕсли;
	Представление = НСтр("en='Retail Sales of';ru='Чек ККТ № '") + ОбщегоНазначенияМПКлиентСервер.ПолучитьПредставлениеНомера(?(Число(НомерЧекаККМ) > 1, НомерЧекаККМ, Данные.Номер)) + НСтр("ru=' от ';en=' of '") + Формат(Данные.Дата, "ДФ=dd.MM.yyyy");
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СформироватьПечатнуюФорму(Ссылка) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЧекККМ.Ссылка,
	|	ЧекККМ.ВерсияДанных,
	|	ЧекККМ.ПометкаУдаления,
	|	ЧекККМ.Номер,
	|	ЧекККМ.Дата,
	|	ЧекККМ.Проведен,
	|	ЧекККМ.ОтчетОРозничныхПродажах,
	|	ЧекККМ.СуммаДокумента,
	|	ЧекККМ.Комментарий,
	|	ЧекККМ.СуммаОплаты,
	|	ЧекККМ.СуммаСкидки,
	|	ЧекККМ.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Товар,
	|		Цена,
	|		Количество,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ЧекККММП КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	ТабличныйДокумент = Новый ТабличныйДокумент();
	Макет = Документы.ЧекККММП.ПолучитьМакет("ТоварныйЧек");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ТекстЗаголовка =
		НСтр("ru='Товарный чек №';en='RETAIL SALE #'")
		+ Док.Номер
		+ НСтр("ru=' от ';en=' DATE '")
		+ Формат(Док.Дата, "ДЛФ=DD");
	
	ОбластьМакета.Параметры.ПредставлениеПоставщика = Константы.НазваниеОрганизацииМП.Получить();
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ВыборкаСтрокТовары = Док.Товары.Выбрать();
	
	Количество = 0;
	
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Количество = Количество + 1;
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.НомерСтроки = Количество;
		ОбластьМакета.Параметры.Товар = ВыборкаСтрокТовары.Товар.Наименование;
		ОбластьМакета.Параметры.Количество = ВыборкаСтрокТовары.Количество;
		ОбластьМакета.Параметры.Цена = ВыборкаСтрокТовары.Цена;
		ОбластьМакета.Параметры.Сумма = ВыборкаСтрокТовары.Сумма;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если Док.СуммаСкидки <> 0 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоСкидка");
		ОбластьМакета.Параметры.ВсегоБезСкидки = Док.СуммаДокумента + Док.СуммаСкидки;
		ОбластьМакета.Параметры.СуммаСкидки = Док.СуммаСкидки;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоКОплате");
	ОбластьМакета.Параметры.Итого = Док.СуммаДокумента;
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если НСтр("ru='ru';en='en'") = "ru" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеОплатыПоПлатежнойКарте(ДокументСсылка) Экспорт
	
	ДанныеОплаты = Новый Структура;
	//ДанныеОплаты.Вставить("ВидОплаты",           Оплата.ВидОплаты);
	ДанныеОплаты.Вставить("Сумма",               ДокументСсылка.СуммаКартой);
	ДанныеОплаты.Вставить("ТипОплаты",           Перечисления.ТипыОплатыМП.ПлатежнаяКарта);
	ДанныеОплаты.Вставить("КодАвторизации",      ДокументСсылка.КодАвторизации);
	ДанныеОплаты.Вставить("НомерКарты",          ДокументСсылка.НомерПлатежнойКарты);
	ДанныеОплаты.Вставить("НомерСсылкиОперации", ДокументСсылка.СсылочныйНомер);
	ДанныеОплаты.Вставить("ДатаОперации",        ДокументСсылка.ДатаОперацииЭТ);
	ДанныеОплаты.Вставить("СлипЧек",             ДокументСсылка.СлипЧек.Получить());
	
	Возврат ДанныеОплаты;
	
КонецФункции

#КонецОбласти

#КонецЕсли

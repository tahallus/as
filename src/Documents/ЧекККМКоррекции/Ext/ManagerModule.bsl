#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру (ОбщиеПараметры) для фискализации чека коррекции
//
// Параметры:
//  ЧекКоррекции			 - 	 ЧекКоррекцииСсылка 
//  ИдентификаторУстройства	 - 	 Неопределено - заполняется в теле функции 
// 
// Возвращаемое значение:
//   Структура, Неопределено - ОбщиеПараметры см. МенеджерОборудованияКлиентСервер.ПараметрыОперацииЧекаКоррекции(),
//   Неопределено в случае ошибки
//
Функция ПодготовитьДанныеДляПробитияЧека(ЧекКоррекции, ИдентификаторУстройства) Экспорт
	
	// Общие параметры чека
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("КассаККМ");
	СтруктураРеквизитов.Вставить("СтруктурнаяЕдиница");
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Покупатель");
	СтруктураРеквизитов.Вставить("Дата");
	СтруктураРеквизитов.Вставить("Ответственный");
	СтруктураРеквизитов.Вставить("АдресМагазина");
	СтруктураРеквизитов.Вставить("АдресРасчетов");
	СтруктураРеквизитов.Вставить("МестоРасчетов"); 
	СтруктураРеквизитов.Вставить("СистемаНалогообложения");
	СтруктураРеквизитов.Вставить("ТипРасчета");
	СтруктураРеквизитов.Вставить("ТипКоррекции");
	СтруктураРеквизитов.Вставить("ОписаниеКоррекции");
	СтруктураРеквизитов.Вставить("ДатаКоррекции");
	СтруктураРеквизитов.Вставить("НомерПредписания");
	СтруктураРеквизитов.Вставить("НеприменениеККТ");
	СтруктураРеквизитов.Вставить("ДокументОснование");
	СтруктураРеквизитов.Вставить("ПробитЧек");
	СтруктураРеквизитов.Вставить("Кассир");
	СтруктураРеквизитов.Вставить("КассирИНН");
	СтруктураРеквизитов.Вставить("ДополнительныйРеквизит");
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЧекКоррекции, СтруктураРеквизитов);
	
	Если РеквизитыДокумента.ПробитЧек Тогда
		ТекстСообщения = НСтр("ru = '%1 уже пробит'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ЧекКоррекции);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	ОбщиеПараметры = МенеджерОборудованияКлиентСервер.ПараметрыОперацииЧекаКоррекции();
	
	ЗаполнитьЗначенияСвойств(ОбщиеПараметры, РеквизитыДокумента);
	
	ОбщиеПараметры.ТорговыйОбъект = РеквизитыДокумента.СтруктурнаяЕдиница;
	
	СтруктураРеквизитов = Новый Структура("ПодключаемоеОборудование");
	РеквизитыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.КассаККМ, СтруктураРеквизитов);

	ИдентификаторУстройства 	= РеквизитыКассыККМ.ПодключаемоеОборудование;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("НаименованиеПолное");
	СтруктураРеквизитов.Вставить("ИНН");
	СтруктураРеквизитов.Вставить("КПП");
	РеквизитыОрганизация = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.Организация, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ЭлектронныйЧекSMSПередаютсяПрограммой1С");
	СтруктураРеквизитов.Вставить("ЭлектронныйЧекEmailПередаютсяПрограммой1С");
	СтруктураРеквизитов.Вставить("ПодключаемоеОборудование");
	СтруктураРеквизитов.Вставить("СпособФорматноЛогическогоКонтроля", "ПодключаемоеОборудование.СпособФорматноЛогическогоКонтроля");
	СтруктураРеквизитов.Вставить("ДопустимоеРасхождениеФорматноЛогическогоКонтроля", "ПодключаемоеОборудование.ДопустимоеРасхождениеФорматноЛогическогоКонтроля");
	СтруктураРеквизитов.Вставить("ТипОборудования", "ПодключаемоеОборудование.ТипОборудования");
	СтруктураРеквизитов.Вставить("Код");
	РеквизитыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.КассаККМ, СтруктураРеквизитов);
	
	ОбщиеПараметры.Вставить("ИмяКассира", РеквизитыДокумента.Кассир);
	ОбщиеПараметры.Кассир          = РеквизитыДокумента.Кассир;
	ОбщиеПараметры.КассирИНН       = РеквизитыДокумента.КассирИНН;
	
	ОбщиеПараметры.Организация    = РеквизитыДокумента.Организация;
	ОбщиеПараметры.ОрганизацияНазвание = РеквизитыОрганизация.НаименованиеПолное;
	ОбщиеПараметры.ОрганизацияИНН = РеквизитыОрганизация.ИНН;
	ОбщиеПараметры.ОрганизацияКПП = РеквизитыОрганизация.КПП;
	
	СерийныйНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыКассыККМ.ПодключаемоеОборудование, "СерийныйНомер");
	Если НЕ ЗначениеЗаполнено(СерийныйНомер) Тогда
		СерийныйНомер = "1";
	КонецЕсли;
	
	ОбщиеПараметры.НаименованиеМагазина = Строка(РеквизитыДокумента.СтруктурнаяЕдиница);
	ОбщиеПараметры.СерийныйНомер = СерийныйНомер;
	
	ОбщиеПараметры.ДокументОснование = ЧекКоррекции;
	
	Для Каждого ПозицияЧека Из ЧекКоррекции.ПозицииЧека Цикл
		
		СтрокаПозицииЧека = МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		
		ЗаполнитьЗначенияСвойств(СтрокаПозицииЧека, ПозицияЧека);
		ЗаполнитьЗначенияСвойств(СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры, ПозицияЧека);
		
		ДанныеАгента = СтрокаПозицииЧека.ДанныеАгента;
		
		ОператорПеревода = ДанныеАгента.ОператорПеревода;
		ОператорПеревода.Адрес 			= ПозицияЧека.ОператорПереводаАдрес;
		ОператорПеревода.ИНН 			= ПозицияЧека.ОператорПереводаИНН;
		ОператорПеревода.Наименование 	= ПозицияЧека.ОператорПереводаНаименование;
		ОператорПеревода.Телефон 		= ПозицияЧека.ОператорПереводаТелефон;
		
		ДанныеАгента.ОператорПоПриемуПлатежей.Телефон = ПозицияЧека.ОператорПоПриемуПлатежейТелефон;
		
		ДанныеАгента.ПлатежныйАгент.Операция 	= ПозицияЧека.ПлатежныйАгентОперация;
		ДанныеАгента.ПлатежныйАгент.Телефон 	= ПозицияЧека.ПлатежныйАгентТелефон;
		
		ДанныеКодаТоварнойНоменклатуры = СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры;
		ЗаполнитьЗначенияСвойств(ДанныеКодаТоварнойНоменклатуры, ПозицияЧека);
		
		ДанныеПоставщика = СтрокаПозицииЧека.ДанныеПоставщика;
		ДанныеПоставщика.ИНН 			= ПозицияЧека.ДанныеПоставщикаИНН;
		ДанныеПоставщика.Наименование 	= ПозицияЧека.ДанныеПоставщикаНаименование;
		ДанныеПоставщика.Телефон 		= ПозицияЧека.ДанныеПоставщикаТелефон;
		
		СтрокаПозицииЧека.Наименование = Строка(ПозицияЧека.НаименованиеПредметаРасчета);
		
		СтрокаПозицииЧека.Сумма 	= ПозицияЧека.СуммаСоСкидками;
		
		ЭтоАванс = ПозицияЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс
				ИЛИ ПозицияЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаПолная
				ИЛИ ПозицияЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаЧастичная;
		
		СтрокаПозицииЧека.СтавкаНДС =  УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДСДляККТ(ПозицияЧека.СтавкаНДС, ЭтоАванс);
		СтрокаПозицииЧека.СуммаНДС = ПозицияЧека.СуммаНДС;
		
		ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
		
	КонецЦикла;
	
	Для Каждого СтрокаОплаты Из ЧекКоррекции.Оплата Цикл
		
		СтруктураОплаты = МенеджерОборудованияКлиентСервер.ПараметрыСтрокиОплаты();
		ЗаполнитьЗначенияСвойств(СтруктураОплаты, СтрокаОплаты);
		ОбщиеПараметры.ТаблицаОплат.Добавить(СтруктураОплаты);
		
	КонецЦикла;
	
	ОбщиеПараметры.КорректируемыйДокумент				= РеквизитыДокумента.ДокументОснование;
	ОбщиеПараметры.ДанныеКоррекции.ТипКоррекции			= РеквизитыДокумента.ТипКоррекции;
	ОбщиеПараметры.ДанныеКоррекции.ОписаниеКоррекции	= РеквизитыДокумента.ОписаниеКоррекции;
	ОбщиеПараметры.ДанныеКоррекции.ДатаКоррекции		= РеквизитыДокумента.ДатаКоррекции;
	ОбщиеПараметры.ДанныеКоррекции.НомерПредписания		= РеквизитыДокумента.НомерПредписания;
	ОбщиеПараметры.НеприменениеККТ 						= РеквизитыДокумента.НеприменениеККТ;
	
	ОбщиеПараметры.Вставить("СформироватьЧекКоррекции", Истина);
	
	ОбщиеПараметры.СпособФорматноЛогическогоКонтроля 				= РеквизитыКассыККМ.СпособФорматноЛогическогоКонтроля;
	ОбщиеПараметры.ДопустимоеРасхождениеФорматноЛогическогоКонтроля = РеквизитыКассыККМ.ДопустимоеРасхождениеФорматноЛогическогоКонтроля;
	ОбщиеПараметры.ИндивидуальныйРежимПодготовкиДанныхКПередачеВОФД = Истина;
	
	ОписаниеОшибки = "";
	
	Если НЕ ФорматноЛогическийКонтрольВызовСервера.ВыполненаПроверкаОбязательностиИПравильностиЗаполненияТэгов(ОбщиеПараметры, ИдентификаторУстройства, ОписаниеОшибки) Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось сформировать данные для печати чека.
									| %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ОписаниеОшибки);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если ФорматноЛогическийКонтрольКлиентСервер.НуженФорматноЛогическийКонтроль(ОбщиеПараметры) Тогда
		ФорматноЛогическийКонтрольКлиентСервер.ПровестиФорматноЛогическийКонтроль(ОбщиеПараметры);
	КонецЕсли;
	
	Возврат ОбщиеПараметры;
	
КонецФункции

#КонецОбласти

#КонецЕсли
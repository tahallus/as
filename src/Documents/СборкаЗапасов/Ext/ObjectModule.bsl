#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	// Прослеживаемость
	СведенияПрослеживаемости.Очистить();
	// Конец Прослеживаемость
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказНаПроизводство")] = "ЗаполнитьПоЗаказуНаПроизводство";
	СтратегияЗаполнения[Тип("ДокументСсылка.СборкаЗапасов")] = "ЗаполнитьПоСборкеЗапасов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетОРозничныхПродажах")] = "ЗаполнитьПоОтчетуОРозничныхПродажах";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПроизводственнаяОперацияВЕТИС")] = "ЗаполнитьПоПроизводственнойОперации";
	
	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
		ИсключаяСвойства = "";
	Иначе
		ИсключаяСвойства = "ЗаказПокупателя";
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ЗаказНаПроизводство") ИЛИ ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.СборкаЗапасов") Тогда
		ИсключаяСвойства = ИсключаяСвойства + ?(ПустаяСтрока(ИсключаяСвойства), "", ", ") + "РучноеРаспределение";
	КонецЕсли; 
	
	Если ПолучитьФункциональнуюОпцию("РезервированиеЗапасов")
		И НЕ ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.СборкаЗапасов")
		И НЕ ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ИсключаяСвойства = ИсключаяСвойства + ?(ПустаяСтрока(ИсключаяСвойства), "", ", ") + "ДокументОснование";
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.СборкаЗапасов") Тогда
		ИсключаяСвойства = ИсключаяСвойства + ?(ПустаяСтрока(ИсключаяСвойства), "", ", ") + "ЗаказНаПроизводство";
	КонецЕсли; 
		
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, ИсключаяСвойства);
	
	ЗаполнениеОтветственныхЛиц();
	
	// Прослеживаемость
	Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		ПрослеживаемостьУНФ.ОбновитьПризнакПрослеживаемости(Продукция, Дата);
		Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
			СтрокаТабличнойЧасти.ПрослеживаемыйТовар = Ложь;
		КонецЦикла; 
	Иначе
		ПрослеживаемостьУНФ.ОбновитьПризнакПрослеживаемости(Запасы, Дата);
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			СтрокаТабличнойЧасти.ПрослеживаемыйТовар = Ложь;
		КонецЦикла; 
	КонецЕсли;
	// Конец Прослеживаемость
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ПередЗаписью.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроизводствоСервер.ЗаполнитьКлючиСвязи(Запасы);
	ПроизводствоСервер.ЗаполнитьКлючиСвязи(Продукция);
	
	СписокНоменклатуры = "";
	ФОИспользоватьХарактеристики = Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить();
	Для каждого СтрокаПродукция Из Продукция Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаПродукция.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		ХарактеристикаПредставление = "";
		Если ФОИспользоватьХарактеристики И ЗначениеЗаполнено(СтрокаПродукция.Характеристика) Тогда
			ХарактеристикаПредставление = " (" + СокрЛП(СтрокаПродукция.Характеристика) + ")";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СписокНоменклатуры) Тогда
			СписокНоменклатуры = СписокНоменклатуры + Символы.ПС;
		КонецЕсли;
		СписокНоменклатуры = СписокНоменклатуры + СокрЛП(СтрокаПродукция.Номенклатура) + ХарактеристикаПредставление + ", " + СтрокаПродукция.Количество + " " + СокрЛП(СтрокаПродукция.ЕдиницаИзмерения);
		
	КонецЦикла;
	
	Если ПоложениеСклада=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ТЧ = ?(ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка, Продукция, Запасы);
		СтруктураПолей = ЗаполнениеОбъектовУНФ.СтруктурнаяЕдиницаИЯчейкаДляШапки(ТЧ);
		СтруктурнаяЕдиницаЗапасов = СтруктураПолей.СтруктурнаяЕдиница;
		ЯчейкаЗапасов = СтруктураПолей.Ячейка;
	ИначеЕсли ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
			СтрокаТабличнойЧасти.Ячейка = ЯчейкаЗапасов;
		КонецЦикла; 
	ИначеЕсли ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
			СтрокаТабличнойЧасти.Ячейка = ЯчейкаЗапасов;
		КонецЦикла; 
	КонецЕсли;
	
	Если ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ЗаказПокупателя = ЗаполнениеОбъектовУНФ.ЗначениеДляШапки(Продукция, "ЗаказПокупателя");
	Иначе
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			СтрокаТабличнойЧасти.ЗаказПокупателя = ЗаказПокупателя;
		КонецЦикла; 
		Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
			СтрокаТабличнойЧасти.ЗаказПокупателя = ЗаказПокупателя;
		КонецЦикла;
		Если РучноеРаспределение Тогда
			Для каждого СтрокаТабличнойЧасти Из РаспределениеЗапасов Цикл
				СтрокаТабличнойЧасти.ЗаказПокупателя = ЗаказПокупателя;
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли; 
	
	ТЧ = ?(ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка, Запасы, Продукция);
	Для каждого СтрокаТабличнойЧасти Из ТЧ Цикл
		СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаПродукции;
		СтрокаТабличнойЧасти.Ячейка = ЯчейкаПродукции;
	КонецЦикла;
	Если РучноеРаспределение Тогда
		Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
			Для каждого СтрокаТабличнойЧасти Из РаспределениеЗапасов Цикл
				СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаПродукции;
				СтрокаТабличнойЧасти.Ячейка = ЯчейкаПродукции;
			КонецЦикла;
		ИначеЕсли ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда 
			Для каждого СтрокаТабличнойЧасти Из РаспределениеЗапасов Цикл
				СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
				СтрокаТабличнойЧасти.Ячейка = ЯчейкаЗапасов;
			КонецЦикла;
		КонецЕсли; 
	ИначеЕсли НЕ РучноеРаспределение 
		И РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		ПроизводствоСервер.РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, ВыполненныеЭтапы, ЗаказНаПроизводство, ВидОперации);
	КонецЕсли; 
	
	// Этапы производства
	ТипСтруктурнойЕдиницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ТипСтруктурнойЕдиницы", Истина);
	Если НЕ Отказ 
		И РежимЗаписи = РежимЗаписиДокумента.Проведение
		И ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства")
		И ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка
		И ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		ПроверяемыеСпецификации = Новый Массив;
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
				Продолжить;
			КонецЕсли; 
			ПроверяемыеСпецификации.Добавить(СтрокаТабличнойЧасти.Спецификация);
		КонецЦикла;
		СпецификацииСЭтапами = ПроизводствоСервер.СпецификацииСПоэтапнымПроизводством(ПроверяемыеСпецификации);
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
				СтрокаТабличнойЧасти.ПодразделениеЗавершающегоЭтапа = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
			ИначеЕсли НЕ ПолучитьФункциональнуюОпцию("ВыполнениеЭтаповРазнымиПодразделениями")
				ИЛИ СпецификацииСЭтапами.Найти(СтрокаТабличнойЧасти.Спецификация) = Неопределено Тогда 
				// При производстве на одной структурной единице завершающие подразделения заполняются изготовителем
				СтрокаТабличнойЧасти.ПодразделениеЗавершающегоЭтапа = СтруктурнаяЕдиница;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	// Прослеживаемость
	СтруктураПоиска = Новый Структура("ПрослеживаемыйТовар", Истина);
	ЕстьПрослеживаемыйТовар = (Запасы.НайтиСтроки(СтруктураПоиска).Количество() <> 0 
		ИЛИ Продукция.НайтиСтроки(СтруктураПоиска).Количество() <> 0);
	Если ЕстьПрослеживаемыйТовар Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ПрослеживаемостьУНФ.ПодобратьРНПТОстатки(ЭтотОбъект, Отказ);
		КонецЕсли; 
	Иначе
		СведенияПрослеживаемости.Очистить();
	КонецЕсли;
	
	ТЧ = ?(ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Сборка, Запасы, Продукция);
	Для каждого СтрокаТабличнойЧасти Из ТЧ Цикл
		Если СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			СтрокаТабличнойЧасти.НомерГТД = Ложь;
		КонецЕсли;
	КонецЦикла;
	// Конец Прослеживаемость
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриКопировании(ОбъектКопирования)
	
	// Прослеживаемость
	СведенияПрослеживаемости.Очистить();
	Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		ПрослеживаемостьУНФ.ОбновитьПризнакПрослеживаемости(Продукция, Дата);
		Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
			СтрокаТабличнойЧасти.ПрослеживаемыйТовар = Ложь;
		КонецЦикла; 
	Иначе
		ПрослеживаемостьУНФ.ОбновитьПризнакПрослеживаемости(Запасы, Дата);
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			СтрокаТабличнойЧасти.ПрослеживаемыйТовар = Ложь;
		КонецЦикла; 
	КонецЕсли;
	// Конец Прослеживаемость
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Запасы.Итог("Резерв") > 0 Тогда
		
		Если НЕ ЗначениеЗаполнено(ЗаказПокупателя) Тогда
			ТекстСообщения = НСтр("ru = 'Не указан заказ покупателя- источник резерва.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЗаказПокупателя", , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
			
			Для каждого СтрокаЗапасы Из Запасы Цикл
				
				Если СтрокаЗапасы.Резерв > СтрокаЗапасы.Количество Тогда

					ТекстСообщения = СтрШаблон(НСтр(
						"ru = 'В строке №%1 табл. части ""Запасы"" количество позиций к списанию из резерва превышает общее количество запасов.'"),
						СтрокаЗапасы.НомерСтроки);
					КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы",
						СтрокаЗапасы.НомерСтроки, "Резерв");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			Для каждого СтрокаПродукция Из Продукция Цикл
				
				Если СтрокаПродукция.Резерв > СтрокаПродукция.Количество Тогда
					ТекстСообщения = СтрШаблон(НСтр(
						"ru = 'В строке №%1 табл. части ""Продукция"" количество позиций к списанию из резерва превышает общее количество продукции.'"),
						СтрокаПродукция.НомерСтроки);
					КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция",
						СтрокаПродукция.НомерСтроки, "Резерв");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Серии номенклатуры
	СерииНоменклатурыУНФ.ПроверкаЗаполненияСерийНоменклатуры(Отказ, Запасы, СерииНоменклатуры, СтруктурнаяЕдиницаЗапасов, ЭтотОбъект);
	СерииНоменклатурыУНФ.ПроверкаЗаполненияСерийНоменклатуры(Отказ, Продукция, СерииНоменклатурыПродукция, СтруктурнаяЕдиницаПродукции, ЭтотОбъект);
	
	НоменклатураВДокументахСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, Отказ, Истина);
	
	Если ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ПроверяемыеРеквизиты.Добавить("СтруктурнаяЕдиницаЗапасов");
	Иначе
		Если ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
			ТабличнаяЧасть = Продукция;
			ИмяТЧ = "Продукция";
		Иначе
			ТабличнаяЧасть = Запасы;
			ИмяТЧ = "Запасы";
		КонецЕсли; 
		Для Каждого ТекСтрокаТЧ Из ТабличнаяЧасть Цикл
			Если ЗначениеЗаполнено(ТекСтрокаТЧ.СтруктурнаяЕдиница) Тогда
				Продолжить;
			КонецЕсли;
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнена колонка ""Склад""  в строке %1 списка ""%2""'"),
				ТекСтрокаТЧ.НомерСтроки, ИмяТЧ);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, ТекСтрокаТЧ.НомерСтроки,
				"СтруктурнаяЕдиница");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
		КонецЦикла;
	КонецЕсли;
	
	// Сравнение таблицы материалов и распределения
	Если РучноеРаспределение Тогда
		ПроизводствоСервер.СравнитьЗапасыИРаспределение(ЭтотОбъект, Отказ);
	Иначе
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РаспределениеЗапасов.Количество");
	КонецЕсли;
	
	Если ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ПроверитьЗаказыТЧ(Отказ);
	КонецЕсли;
	
	ИменаТабличныхЧастей = Новый Массив(1);
	ИменаТабличныхЧастей[0] = "Продукция";
	Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		
		ИменаТабличныхЧастей[0] = "Запасы";
		
	КонецЕсли;
	
	ГрузовыеТаможенныеДекларацииСервер.ПриОбработкеПроверкиЗаполнения(Отказ, ЭтотОбъект, ИменаТабличныхЧастей);
	
	// Этапы производства
	ПустаяСпецификация = Справочники.Спецификации.ПустаяСсылка();
	ТипСтруктурнойЕдиницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ТипСтруктурнойЕдиницы");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") 
		И ВидОперации<>Перечисления.ВидыОперацийСборкаЗапасов.Разборка
		И ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		МассивСпецификаций = Новый Массив;
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			Если МассивСпецификаций.Найти(СтрокаТабличнойЧасти.Спецификация)=Неопределено Тогда
				МассивСпецификаций.Добавить(СтрокаТабличнойЧасти.Спецификация);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
				Прервать;
			КонецЕсли;
			Если (ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке И НЕ ЗначениеЗаполнено(ЗаказПокупателя)) ИЛИ
				(ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЗаказПокупателя)) Тогда
				МассивСпецификаций.Добавить(ПустаяСпецификация);
			КонецЕсли; 
		КонецЦикла; 
		Если МассивСпецификаций.Найти(ПустаяСпецификация)=Неопределено Тогда
			МассивЭтапов = ПроизводствоСервер.ЭтапыПроизводстваСпецификаций(МассивСпецификаций);
			Если МассивЭтапов.Найти(Справочники.ЭтапыПроизводства.ПустаяСсылка())=Неопределено Тогда
				ПроверяемыеРеквизиты.Добавить("Запасы.Этап");
				Если РучноеРаспределение Тогда
					ПроверяемыеРеквизиты.Добавить("РаспределениеЗапасов.Этап");
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьТЧНаСовпадениеНоменклатуры(Отказ);
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Этапы производства
	ПроверитьЗаполнениеЭтаповПроизводства(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.СборкаЗапасов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ПроведениеДокументовУНФ.ОтразитьДвижения("Запасы", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыВРазрезеГТД", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыНаСкладах", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыКПоступлениюНаСклады", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыКРасходуСоСкладов", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ВыпускПродукции", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗапасыИАгентскиеУслугиПринятые", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ПотребностьВЗапасах", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗаказыНаПроизводство", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РазмещениеЗаказов", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	
	// СерииНоменклатуры
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатурыГарантии", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДвиженияСерииНоменклатуры", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("СерииНоменклатуры", ТаблицыДляДвижений, Движения, Отказ);
	
	// Этапы производства
	Если ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		ПроведениеДокументовУНФ.ОтразитьДвижения("ЭтапыПроизводства", ТаблицыДляДвижений, Движения, Отказ);
	КонецЕсли;
	
	// Прослеживаемость
	УправлениеНебольшойФирмойСервер.ОтразитьПрослеживаемыеТовары(ДополнительныеСвойства, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ОперацииСПрослеживаемымиТоварами", ТаблицыДляДвижений, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.СборкаЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Этапы производства
	ПроверитьЗаполнениеЭтаповПроизводства(Отказ, Истина);
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.СборкаЗапасов.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#Область ПроцедурыЗаполненияДокумента

// АПК:299-выкл процедуры вызываются см. ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент

Процедура ЗаполнитьПоЗаказуНаПроизводство(ДанныеЗаполнения) Экспорт
	
	// Заполнение шапки.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаПроизводство.Ссылка КАК ОснованиеСсылка,
	|	ЗаказНаПроизводство.Проведен КАК ОснованиеПроведен,
	|	ЗаказНаПроизводство.СостояниеЗаказа КАК СостояниеЗаказа,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Сборка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|	КОНЕЦ КАК ВидОперации,
	|	ЗаказНаПроизводство.Старт КАК Старт,
	|	ЗаказНаПроизводство.Финиш КАК Финиш,
	|	ЗаказНаПроизводство.Ссылка КАК ЗаказНаПроизводство,
	|	ЗаказНаПроизводство.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводство.ЗаказПокупателя КАК ДокументОснование,
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.ПоложениеЗаказаПокупателя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				И (ЗаказНаПроизводство.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ИЛИ ЗаказНаПроизводство.УчетПотребностиПоСкладам)
	|				И ЗаказНаПроизводство.СтруктурнаяЕдиницаПродукции <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиницаПродукции
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.ПоложениеЗаказаПокупателя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				И (ЗаказНаПроизводство.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ИЛИ ЗаказНаПроизводство.УчетПотребностиПоСкладам)
	|				И ЗаказНаПроизводство.СтруктурнаяЕдиницаПродукции <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ЯчейкаПолучателяПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.ПоложениеЗаказаПокупателя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				И (ЗаказНаПроизводство.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ИЛИ ЗаказНаПроизводство.УчетПотребностиПоСкладам)
	|				И ЗаказНаПроизводство.СтруктурнаяЕдиницаРезерв <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиницаРезерв
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаЗапасов,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводство.ПоложениеЗаказаПокупателя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|				И (ЗаказНаПроизводство.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|					ИЛИ ЗаказНаПроизводство.УчетПотребностиПоСкладам)
	|				И ЗаказНаПроизводство.СтруктурнаяЕдиницаРезерв <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|		КОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказНаПроизводство.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказНаПроизводство.СтруктурнаяЕдиница.ЯчейкаИсточникаПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаЗапасов,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница.ПолучательОтходов КАК СтруктурнаяЕдиницаОтходов,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница.ЯчейкаПолучателяОтходов КАК ЯчейкаОтходов,
	|	ЗаказНаПроизводство.ПоложениеСклада КАК ПоложениеСклада,
	|	ЗаказНаПроизводство.ПоложениеЗаказаПокупателя КАК ПоложениеЗаказаПокупателя,
	|	ЗаказНаПроизводство.УчетПотребностиПоСкладам КАК УчетПотребностиПоСкладам,
	|	ЗаказНаПроизводство.УчетПотребностиПоЗаказам КАК УчетПотребностиПоЗаказам,
	|	ЗаказНаПроизводство.РучноеРаспределение КАК РучноеРаспределение
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка = &ЗаказНаПроизводство";
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ДанныеЗаполнения);
	
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	Пока ВыборкаШапка.Следующий() Цикл
		ЗначенияПроверяемыхРеквизитов = Новый Структура("СостояниеЗаказа, Проведен", ВыборкаШапка.СостояниеЗаказа, ВыборкаШапка.ОснованиеПроведен);
		Документы.ЗаказНаПроизводство.ПроверитьВозможностьВводаНаОснованииЗаказаНаПроизводство(ВыборкаШапка.ОснованиеСсылка, ЗначенияПроверяемыхРеквизитов);
	КонецЦикла;
	
	ПромСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаПродукции) Тогда
			СтруктурнаяЕдиницаПродукции = СтруктурнаяЕдиница;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаЗапасов) Тогда
			СтруктурнаяЕдиницаЗапасов = СтруктурнаяЕдиница;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаОтходов) Тогда
			СтруктурнаяЕдиницаОтходов = СтруктурнаяЕдиница;
		КонецЕсли;
	КонецЕсли;
	
	Если ПромСтруктурнаяЕдиница <> СтруктурнаяЕдиница Тогда
		Ячейка = Неопределено;
	КонецЕсли;
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика КАК Характеристика,
	|		ЗаказыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|				,
	|				ЗаказНаПроизводство = &ЗаказНаПроизводство
	|					И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗаказыНаПроизводство.ЗаказНаПроизводство,
	|		ДвиженияДокументаЗаказыНаПроизводство.Номенклатура,
	|		ДвиженияДокументаЗаказыНаПроизводство.Характеристика,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗаказыНаПроизводство.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗаказыНаПроизводство.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗаказыНаПроизводство.Количество, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство КАК ДвиженияДокументаЗаказыНаПроизводство
	|	ГДЕ
	|		ДвиженияДокументаЗаказыНаПроизводство.Регистратор = &Ссылка) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.ЗаказНаПроизводство,
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаПроизводство.Продукция.(
	|		НомерСтроки КАК НомерСтрокиПродукция,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводство.Продукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				ТОГДА ЗаказНаПроизводство.Продукция.ЕдиницаИзмерения.Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Коэффициент,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		ПодразделениеЗавершающегоЭтапа КАК ПодразделениеЗавершающегоЭтапа,
	|		ВЫБОР
	|			КОГДА ЗаказНаПроизводство.Продукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Разборка)
	|					И (ЗаказНаПроизводство.Продукция.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ИЛИ ЗаказНаПроизводство.УчетПотребностиПоСкладам)
	|					И ЗаказНаПроизводство.Продукция.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|				ТОГДА ЗаказНаПроизводство.Продукция.СтруктурнаяЕдиница
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		КОНЕЦ КАК СтруктурнаяЕдиница,
	|		ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка) КАК Ячейка,
	|		ЗаказПокупателя КАК ЗаказПокупателя,
	|		КлючСвязи КАК КлючСвязи
	|	) КАК Продукция,
	|	ЗаказНаПроизводство.Запасы.(
	|		НомерСтроки КАК НомерСтрокиЗапасы,
	|		ВЫБОР
	|			КОГДА ФункциональнаяОпцияИспользоватьЭтапыПроизводства.Значение
	|					И ЗаказНаПроизводство.Запасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Сборка)
	|				ТОГДА ЗаказНаПроизводство.Запасы.Этап
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|		КОНЕЦ КАК Этап,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводство.Запасы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				ТОГДА ЗаказНаПроизводство.Запасы.ЕдиницаИзмерения.Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Коэффициент,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		ВЫБОР
	|			КОГДА ЗаказНаПроизводство.Запасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Сборка)
	|					И (ЗаказНаПроизводство.Запасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ИЛИ ЗаказНаПроизводство.УчетПотребностиПоСкладам)
	|					И ЗаказНаПроизводство.Запасы.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|				ТОГДА ЗаказНаПроизводство.Запасы.СтруктурнаяЕдиница
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		КОНЕЦ КАК СтруктурнаяЕдиница,
	|		ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка) КАК Ячейка,
	|		ВЫБОР
	|			КОГДА ЗаказНаПроизводство.Запасы.ДоляСтоимости = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЗаказНаПроизводство.Запасы.ДоляСтоимости
	|		КОНЕЦ КАК ДоляСтоимости,
	|		ЗаказПокупателя КАК ЗаказПокупателя,
	|		КлючСвязи КАК КлючСвязи
	|	) КАК Запасы
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Константа.ФункциональнаяОпцияИспользоватьЭтапыПроизводства КАК ФункциональнаяОпцияИспользоватьЭтапыПроизводства
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка = &ЗаказНаПроизводство
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиПродукция,
	|	НомерСтрокиЗапасы";
	
	Запрос.Текст = Запрос.Текст + ";";
	
	Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка Тогда
		
		ИмяТабличнойЧасти = "Запасы";
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПотребностьВЗапасахОстатки.Номенклатура КАК Номенклатура,
		|	ПотребностьВЗапасахОстатки.Характеристика КАК Характеристика,
		|	СУММА(ПотребностьВЗапасахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	ПотребностьВЗапасахОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ПотребностьВЗапасахОстатки.Склад КАК Склад
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПотребностьВЗапасахОстатки.Номенклатура КАК Номенклатура,
		|		ПотребностьВЗапасахОстатки.Характеристика КАК Характеристика,
		|		ПотребностьВЗапасахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|		ПотребностьВЗапасахОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
		|		ПотребностьВЗапасахОстатки.Склад КАК Склад
		|	ИЗ
		|		РегистрНакопления.ПотребностьВЗапасах.Остатки(
		|				,
		|				ЗаказНаПроизводство = &ЗаказНаПроизводство
		|					И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
		|					И ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженийЗапасов.Отгрузка)) КАК ПотребностьВЗапасахОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияДокументаПотребностьВЗапасах.Номенклатура,
		|		ДвиженияДокументаПотребностьВЗапасах.Характеристика,
		|		ВЫБОР
		|			КОГДА ДвиженияДокументаПотребностьВЗапасах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ЕСТЬNULL(ДвиженияДокументаПотребностьВЗапасах.Количество, 0)
		|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаПотребностьВЗапасах.Количество, 0)
		|		КОНЕЦ,
		|		ДвиженияДокументаПотребностьВЗапасах.ЗаказПокупателя,
		|		ДвиженияДокументаПотребностьВЗапасах.Склад
		|	ИЗ
		|		РегистрНакопления.ПотребностьВЗапасах КАК ДвиженияДокументаПотребностьВЗапасах
		|	ГДЕ
		|		ДвиженияДокументаПотребностьВЗапасах.Регистратор = &Ссылка
		|		И ДвиженияДокументаПотребностьВЗапасах.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженийЗапасов.Отгрузка)) КАК ПотребностьВЗапасахОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПотребностьВЗапасахОстатки.Номенклатура,
		|	ПотребностьВЗапасахОстатки.Характеристика,
		|	ПотребностьВЗапасахОстатки.ЗаказПокупателя,
		|	ПотребностьВЗапасахОстатки.Склад
		|
		|ИМЕЮЩИЕ
		|	СУММА(ПотребностьВЗапасахОстатки.КоличествоОстаток) > 0";
		
	Иначе
		
		ИмяТабличнойЧасти = "Продукция";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("РучноеРаспределение", РучноеРаспределение);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[0].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("ЗаказНаПроизводство,Номенклатура,Характеристика");
	
	Продукция.Очистить();
	Запасы.Очистить();
	РаспределениеЗапасов.Очистить();
	ВыполненныеЭтапы.Очистить();
	Отходы.Очистить();
	СерииНоменклатуры.Очистить();
	СерииНоменклатурыПродукция.Очистить();
	
	ВыборкаТЧ = МассивРезультатов[1].Выбрать();
	ВыборкаТЧ.Следующий(); 
	
	Если ТаблицаОстатков.Количество() > 0 Тогда
		
		ВыборкаПродукция = ВыборкаТЧ[ИмяТабличнойЧасти].Выбрать();
		Пока ВыборкаПродукция.Следующий() Цикл
			
			Если ВыборкаПродукция.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("ЗаказНаПроизводство", ДанныеЗаполнения);
			СтруктураДляПоиска.Вставить("Номенклатура", ВыборкаПродукция.Номенклатура);
			СтруктураДляПоиска.Вставить("Характеристика", ВыборкаПродукция.Характеристика);
			
			МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
			Если МассивСтрокОстатков.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПродукция);
			
			КоличествоКСписанию = ВыборкаПродукция.Количество * ВыборкаПродукция.Коэффициент;
			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоКСписанию;
			Если МассивСтрокОстатков[0].КоличествоОстаток < 0 Тогда
				
				НоваяСтрока.Количество = (КоличествоКСписанию + МассивСтрокОстатков[0].КоличествоОстаток) / ВыборкаПродукция.Коэффициент;
				
			КонецЕсли;
			
			Если МассивСтрокОстатков[0].КоличествоОстаток <= 0 Тогда
				ТаблицаОстатков.Удалить(МассивСтрокОстатков[0]);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если СборкаСЭтапами() Тогда
		ОпределитьВыполненныеЭтапы(ДанныеЗаполнения);
	КонецЕсли;
	
	Если ДанныеЗаполнения.ВидОперации <> Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка И Продукция.Количество() > 0 Тогда
		
		ПроизводствоСервер.ЗаполнитьКлючиСвязи(Продукция);
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ДобавитьВременныеТаблицы(Запрос);
		ДобавитьОстаткиРаспределенияПоЗаказуНаПроизводство(Запрос);
		ЗаполнитьЗапасыПоЭтапам(Запрос);
		
	ИначеЕсли ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка И Запасы.Количество() > 0 Тогда
		
		ОстаткиПродукция = МассивРезультатов[2].Выгрузить();
		ВыборкаПродукция = ВыборкаТЧ.Продукция.Выбрать();
		Пока ВыборкаПродукция.Следующий() Цикл
			
			Если ВыборкаПродукция.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", ВыборкаПродукция.ЗаказПокупателя);
			СтруктураДляПоиска.Вставить("Номенклатура", ВыборкаПродукция.Номенклатура);
			СтруктураДляПоиска.Вставить("Характеристика", ВыборкаПродукция.Характеристика);
			Если ВыборкаШапка.УчетПотребностиПоСкладам И ЗначениеЗаполнено(ВыборкаПродукция.СтруктурнаяЕдиница) Тогда
				СтруктураДляПоиска.Вставить("Склад", ВыборкаПродукция.СтруктурнаяЕдиница);
			КонецЕсли;
			МассивСтрокОстатков = ОстаткиПродукция.НайтиСтроки(СтруктураДляПоиска);
			Если МассивСтрокОстатков.Количество() = 0 Тогда
				СтруктураДляПоиска.Удалить("Склад");
				МассивСтрокОстатков = ОстаткиПродукция.НайтиСтроки(СтруктураДляПоиска);
			КонецЕсли;
			Если МассивСтрокОстатков.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ПерваяСтрока = Истина;
			КРазборке = ВыборкаПродукция.Количество * ВыборкаПродукция.Коэффициент;
			Для каждого СтрокаОстатка Из МассивСтрокОстатков Цикл
				Если СтрокаОстатка.КоличествоОстаток <= 0 Тогда
					Продолжить;
				КонецЕсли;
				Если ПерваяСтрока ИЛИ ВыборкаШапка.УчетПотребностиПоСкладам Тогда
					НоваяСтрока = Продукция.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПродукция, , "Количество");
					ПерваяСтрока = Ложь;	
				КонецЕсли;
				Если ВыборкаШапка.УчетПотребностиПоСкладам И ЗначениеЗаполнено(СтрокаОстатка.Склад) Тогда
					НоваяСтрока.СтруктурнаяЕдиница = СтрокаОстатка.Склад;
				КонецЕсли;
				КоличествоКСписанию = Мин(КРазборке, СтрокаОстатка.КоличествоОстаток);
				НоваяСтрока.Количество = НоваяСтрока.Количество + КоличествоКСписанию / ВыборкаПродукция.Коэффициент;
				СтрокаОстатка.КоличествоОстаток = СтрокаОстатка.КоличествоОстаток - КоличествоКСписанию;
				КРазборке = КРазборке - КоличествоКСписанию;
				Если КРазборке <= 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		ПроизводствоСервер.ЗаполнитьКлючиСвязи(Продукция);
		
	КонецЕсли;
	
	// Заполнение по спецификации.
	Если Продукция.Количество() > 0 И ДанныеЗаполнения.Запасы.Количество() = 0 Тогда
		ЗаполнитьТабличнуюЧастьПоСпецификации();
	КонецЕсли;
	
	Если РучноеРаспределение И РаспределениеЗапасов.Количество()=0 Тогда
		ПроизводствоСервер.РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, ВыполненныеЭтапы, ЗаказНаПроизводство, ВидОперации);
	КонецЕсли; 
	
	ЗаполнитьСкладыИРезервы();
	
КонецПроцедуры

Процедура ЗаполнитьПоСборкеЗапасов(ДанныеЗаполнения) Экспорт
	
	РучноеРаспределение = Константы.ИспользоватьРучноеРаспределениеМатериаловПоУмолчанию.Получить()<>Перечисления.ДаНет.Нет;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СборкаЗапасов.ВидОперации КАК ВидОперации,
	|	СборкаЗапасов.Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|			ТОГДА СборкаЗапасов.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	СборкаЗапасов.Организация КАК Организация,
	|	СборкаЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасов.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА СборкаЗапасов.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ СборкаЗапасов.СтруктурнаяЕдиница.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА СборкаЗапасов.СтруктурнаяЕдиница.ИсточникПеремещения
	|		ИНАЧЕ СборкаЗапасов.СтруктурнаяЕдиницаЗапасов
	|	КОНЕЦ КАК СтруктурнаяЕдиницаЗапасов,
	|	СборкаЗапасов.СтруктурнаяЕдиницаЗапасов КАК СтруктурнаяЕдиницаПродукции,
	|	СборкаЗапасов.ЯчейкаЗапасов КАК ЯчейкаПродукции,
	|	СборкаЗапасов.ПоложениеСклада КАК ПоложениеСклада,
	|	СборкаЗапасов.ПоложениеЗаказаПокупателя КАК ПоложениеЗаказаПокупателя,
	|	СборкаЗапасов.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СборкаЗапасов.Запасы.Количество - СборкаЗапасов.Запасы.Резерв КАК Количество,
	|		Спецификация КАК Спецификация,
	|		Партия КАК Партия,
	|		ВЫБОР
	|			КОГДА СборкаЗапасов.Запасы.Ссылка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|					И СборкаЗапасов.Запасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Сборка)
	|				ТОГДА СборкаЗапасов.Запасы.Ссылка.СтруктурнаяЕдиница
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		КОНЕЦ КАК ПодразделениеЗавершающегоЭтапа,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Номенклатура.СпособПополнения КАК СпособПополнения,
	|		ЗаказПокупателя КАК ЗаказПокупателя,
	|		КлючСвязи КАК КлючСвязи,
	|		ПОДСТРОКА(ВЫБОР
	|				КОГДА ИспользоватьСерииНоменклатуры.Значение
	|					ТОГДА СборкаЗапасов.Запасы.СерииНоменклатуры
	|				ИНАЧЕ """"
	|			КОНЕЦ, 1, 1024) КАК СерииНоменклатуры
	|	) КАК Запасы,
	|	СборкаЗапасов.СерииНоменклатуры.(
	|		КлючСвязи КАК КлючСвязи,
	|		Серия КАК Серия
	|	) КАК ТаблицаСерииНоменклатуры
	|ИЗ
	|	Документ.СборкаЗапасов КАК СборкаЗапасов,
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов,
	|	Константа.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ГДЕ
	|	СборкаЗапасов.Ссылка = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	Продукция.Очистить();
	Запасы.Очистить();
	РаспределениеЗапасов.Очистить();
	ВыполненныеЭтапы.Очистить();
	Отходы.Очистить();
	СерииНоменклатуры.Очистить();
	СерииНоменклатурыПродукция.Очистить();
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
		ВыборкаИзРезультатаЗапроса.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
		
		ТаблицаЗапасы = ВыборкаИзРезультатаЗапроса.Запасы.Выгрузить();
		ТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения, Спецификация, Партия, ПодразделениеЗавершающегоЭтапа, ТипНоменклатуры, СпособПополнения, ЗаказПокупателя, КлючСвязи, СерииНоменклатуры", "Количество");
		Для каждого СтрокаЗапасы Из ТаблицаЗапасы Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаЗапасы.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаЗапасы.Количество<=0 Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаЗапасы.Спецификация) 
				И СтрокаЗапасы.СпособПополнения=Перечисления.СпособыПополненияЗапасов.Закупка Тогда
				Продолжить;
			КонецЕсли; 
			НоваяСтрока = Продукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасы);
			Если ПоложениеЗаказаПокупателя<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
				НоваяСтрока.ЗаказПокупателя = ЗаказПокупателя;
			КонецЕсли; 
			Если ПоложениеСклада=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти
				И ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка
				Тогда
				НоваяСтрока.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
			КонецЕсли; 
		КонецЦикла;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
			ТаблицаСерииНоменклатуры = ВыборкаИзРезультатаЗапроса.ТаблицаСерииНоменклатуры.Выгрузить();
			Для каждого СтрокаСерия Из ТаблицаСерииНоменклатуры Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаСерия.КлючСвязи) Тогда
					Продолжить;
				КонецЕсли; 
				СтрокиПродукция = ТабличныеЧастиУНФКлиентСервер.СтрокиПоКлючуСвязи(Продукция, СтрокаСерия.КлючСвязи);
				Если СтрокиПродукция.Количество()=0 Тогда
					Продолжить;
				КонецЕсли; 
				НоваяСтрока = СерииНоменклатурыПродукция.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСерия);
			КонецЦикла; 
		КонецЕсли; 
		
		Если Продукция.Количество() > 0 Тогда
			ЗаполнитьТабличнуюЧастьПоСпецификации();
			Если РучноеРаспределение Тогда
				ПроизводствоСервер.РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, , ЗаказНаПроизводство, ВидОперации);
			КонецЕсли; 
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения) Экспорт
	
	РучноеРаспределение = Константы.ИспользоватьРучноеРаспределениеМатериаловПоУмолчанию.Получить()<>Перечисления.ДаНет.Нет;
	ЗаказПокупателя = ДанныеЗаполнения;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Проведен, ОжидаетсяВыборВариантаКП, ВидОперации");
	Иначе
		ЗначенияРеквизитов = Новый Структура("Проведен, ОжидаетсяВыборВариантаКП, ВидОперации", Истина, Ложь, Перечисления.ВидыОперацийЗаказПокупателя.ПустаяСсылка());
	КонецЕсли; 
	Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(ДанныеЗаполнения, ЗначенияРеквизитов);
	ПоЗаказуНаПереработку = (ЗначенияРеквизитов.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку);
	ЭтоРазборка = (ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка);
	
	Если ЭтоРазборка Тогда
		ИмяТабличнойЧасти = "Запасы";
	Иначе
		ИмяТабличнойЧасти = "Продукция";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ЗаказыОстатки.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|		ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|		(ЗаказПокупателяЗапасы.Количество - ЗаказПокупателяЗапасы.Резерв) * ВЫБОР
	|			КОГДА ЗаказПокупателяЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК КоличествоОстаток,
	|		ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|	ИЗ
	|		Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|	ГДЕ
	|		ЗаказПокупателяЗапасы.Ссылка = &ЗаказПокупателя
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВыпускПродукции.Номенклатура,
	|		ВыпускПродукции.Характеристика,
	|		-ВыпускПродукции.КоличествоОборот,
	|		0
	|	ИЗ
	|		РегистрНакопления.ВыпускПродукции.Обороты(, , Авто, ЗаказПокупателя = &ЗаказПокупателя) КАК ВыпускПродукции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаВыпускПродукции.Номенклатура,
	|		ДвиженияДокументаВыпускПродукции.Характеристика,
	|		ДвиженияДокументаВыпускПродукции.Количество,
	|		0
	|	ИЗ
	|		РегистрНакопления.ВыпускПродукции КАК ДвиженияДокументаВыпускПродукции
	|	ГДЕ
	|		ДвиженияДокументаВыпускПродукции.Регистратор = &Ссылка
	|		И ДвиженияДокументаВыпускПродукции.ЗаказПокупателя = &ЗаказПокупателя) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ДОБАВИТЬКДАТЕ(ЗаказПокупателяЗапасы.ДатаОтгрузки, ДЕНЬ, -ЗаказПокупателяЗапасы.Номенклатура.СрокПополнения) КАК Старт,
	|	ЗаказПокупателяЗапасы.ДатаОтгрузки КАК Финиш,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация КАК Организация,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаРезерв <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаРезерв
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаПолучателяПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаПродукции,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиницаЗапасов,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаИсточникаПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ КАК ЯчейкаЗапасов,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательОтходов КАК СтруктурнаяЕдиницаОтходов,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаПолучателяОтходов КАК ЯчейкаОтходов,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|				ТОГДА ЗаказПокупателяЗапасы.Количество
	|			ИНАЧЕ ЗаказПокупателяЗапасы.Количество - ЗаказПокупателяЗапасы.Резерв
	|		КОНЕЦ) КАК Количество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаказПокупателяЗапасы.Спецификация КАК Спецификация,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЗаказПокупателяЗапасы.Спецификация.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ИспользуютсяЭтапы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ЗаказПокупателяЗапасы.Спецификация.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ, ЛОЖЬ)
	|				И &ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|			ТОГДА ЕСТЬNULL(ЭтапыПроизводстваСтруктурныеЕдиницы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК ПодразделениеЗавершающегоЭтапа,
	|	ЗаказПокупателяЗапасы.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	ВТЗаказПокупателяЗапасы КАК ЗаказПокупателяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства.СтруктурныеЕдиницы КАК ЭтапыПроизводстваСтруктурныеЕдиницы
	|		ПО (ЭтапыПроизводстваСтруктурныеЕдиницы.Ссылка = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ЗавершениеПроизводства))
	|			И (ЭтапыПроизводстваСтруктурныеЕдиницы.ПоУмолчанию),
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &ЗаказПокупателя
	|	И (ЗаказПокупателяЗапасы.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура.СпособПополнения = ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)
	|			ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяЗапасы.ДатаОтгрузки,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательОтходов,
	|	ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаПолучателяОтходов,
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.СтранаПроисхождения,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.Характеристика,
	|	ЗаказПокупателяЗапасы.Партия,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.Спецификация,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЗаказПокупателяЗапасы.Спецификация.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ),
	|	ВЫБОР
	|		КОГДА ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДОБАВИТЬКДАТЕ(ЗаказПокупателяЗапасы.ДатаОтгрузки, ДЕНЬ, -ЗаказПокупателяЗапасы.Номенклатура.СрокПополнения),
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаРезерв <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаРезерв
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ПолучательПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаПолучателяПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	|				ИЛИ ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ИсточникПеремещения.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.СтруктурнаяЕдиницаПродажи.ЯчейкаИсточникаПеремещения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ЗаказПокупателяЗапасы.Спецификация.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ, ЛОЖЬ)
	|				И &ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|			ТОГДА ЕСТЬNULL(ЭтапыПроизводстваСтруктурныеЕдиницы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ,
	|	ЗаказПокупателяЗапасы.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|				ТОГДА ЗаказПокупателяЗапасы.Количество
	|			ИНАЧЕ ЗаказПокупателяЗапасы.Количество - ЗаказПокупателяЗапасы.Резерв
	|		КОНЕЦ) > 0";
	
	Если ПоЗаказуНаПереработку Тогда
		
		Запрос.Текст = Запрос.Текст + "; " +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказыОстатки.Характеристика КАК Характеристика,
		|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	ЗаказыОстатки.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
		|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
		|		ЗапасыОстатки.Характеристика КАК Характеристика,
		|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|		0 КАК КлючСвязи
		|	ИЗ
		|		РегистрНакопления.Запасы.Остатки(
		|				,
		|				ЗаказПокупателя = &ЗаказПокупателя
		|					И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)) КАК ЗапасыОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РазмещениеОстатки.ЗаказПокупателя,
		|		РазмещениеОстатки.Номенклатура,
		|		РазмещениеОстатки.Характеристика,
		|		РазмещениеОстатки.КоличествоОстаток,
		|		0
		|	ИЗ
		|		РегистрНакопления.РазмещениеЗаказов.Остатки(
		|				,
		|				ЗаказПокупателя = &ЗаказПокупателя
		|					И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)) КАК РазмещениеОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СборкаЗапасовЗапасы.ЗаказПокупателя,
		|		СборкаЗапасовЗапасы.Номенклатура,
		|		СборкаЗапасовЗапасы.Характеристика,
		|		-СборкаЗапасовЗапасы.Количество,
		|		СборкаЗапасовЗапасы.КлючСвязи
		|	ИЗ
		|		Документ.СборкаЗапасов.Запасы КАК СборкаЗапасовЗапасы
		|	ГДЕ
		|		СборкаЗапасовЗапасы.Ссылка <> &Ссылка
		|		И СборкаЗапасовЗапасы.Ссылка.Проведен
		|		И СборкаЗапасовЗапасы.ЗаказПокупателя = &ЗаказПокупателя) КАК ЗаказыОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыОстатки.ЗаказПокупателя,
		|	ЗаказыОстатки.Номенклатура,
		|	ЗаказыОстатки.Характеристика,
		|	ЗаказыОстатки.КлючСвязи
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗаказыОстатки.КоличествоОстаток) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказПокупателяМатериалыЗаказчика.Ссылка КАК ЗаказПокупателя,
		|	МИНИМУМ(ЗаказПокупателяМатериалыЗаказчика.НомерСтроки) КАК НомерСтроки,
		|	ЗаказПокупателяМатериалыЗаказчика.Номенклатура КАК Номенклатура,
		|	ЗаказПокупателяМатериалыЗаказчика.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяМатериалыЗаказчика.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|			ТОГДА 1
		|		ИНАЧЕ ЗаказПокупателяМатериалыЗаказчика.ЕдиницаИзмерения.Коэффициент
		|	КОНЕЦ КАК Коэффициент,
		|	ЗаказПокупателяМатериалыЗаказчика.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗаказПокупателяМатериалыЗаказчика.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	СУММА(ВЫБОР
		|			КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказНаПроизводство.Разборка)
		|				ТОГДА ЗаказПокупателяМатериалыЗаказчика.Количество
		|			ИНАЧЕ ЗаказПокупателяМатериалыЗаказчика.Количество
		|		КОНЕЦ) КАК Количество,
		|	ЕСТЬNULL(ЭтапыПроизводстваСтруктурныеЕдиницы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ПодразделениеЗавершающегоЭтапа,
		|	ЗаказПокупателяМатериалыЗаказчика.Номенклатура.Склад КАК СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ЗаказПокупателя.МатериалыЗаказчика КАК ЗаказПокупателяМатериалыЗаказчика
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства.СтруктурныеЕдиницы КАК ЭтапыПроизводстваСтруктурныеЕдиницы
		|		ПО (ЭтапыПроизводстваСтруктурныеЕдиницы.Ссылка = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ЗавершениеПроизводства))
		|			И (ЭтапыПроизводстваСтруктурныеЕдиницы.ПоУмолчанию)
		|ГДЕ
		|	ЗаказПокупателяМатериалыЗаказчика.Ссылка = &ЗаказПокупателя
		|	И ЗаказПокупателяМатериалыЗаказчика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказПокупателяМатериалыЗаказчика.Ссылка,
		|	ЗаказПокупателяМатериалыЗаказчика.Номенклатура,
		|	ЗаказПокупателяМатериалыЗаказчика.Характеристика,
		|	ЗаказПокупателяМатериалыЗаказчика.ЕдиницаИзмерения,
		|	ЗаказПокупателяМатериалыЗаказчика.Номенклатура.ТипНоменклатуры,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяМатериалыЗаказчика.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|			ТОГДА 1
		|		ИНАЧЕ ЗаказПокупателяМатериалыЗаказчика.ЕдиницаИзмерения.Коэффициент
		|	КОНЕЦ,
		|	ЕСТЬNULL(ЭтапыПроизводстваСтруктурныеЕдиницы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		|	ЗаказПокупателяМатериалыЗаказчика.Номенклатура.Склад
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗаказПокупателяМатериалыЗаказчика.Количество) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Если ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.СборкаЗапасов.Запасы", "Документ.СборкаЗапасов.Продукция");
		КонецЕсли; 
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДанныеЗаполнения, Запрос.МенеджерВременныхТаблиц, Ложь);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[0].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("Номенклатура,Характеристика");
	
	Продукция.Очистить();
	Запасы.Очистить();
	РаспределениеЗапасов.Очистить();
	ВыполненныеЭтапы.Очистить();
	Отходы.Очистить();
	СерииНоменклатуры.Очистить();
	СерииНоменклатурыПродукция.Очистить();
	
	ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
	Если ТаблицаОстатков.Количество() = 0 ИЛИ ВыборкаИзРезультатаЗапроса.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
		
	ВыборкаИзРезультатаЗапроса.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаПродукции) Тогда
			СтруктурнаяЕдиницаПродукции = СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаЗапасов) Тогда
			СтруктурнаяЕдиницаЗапасов = СтруктурнаяЕдиница;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаОтходов) Тогда
			СтруктурнаяЕдиницаОтходов = СтруктурнаяЕдиница;
		КонецЕсли;
		
	КонецЕсли;
	
	СборкаВПодразделении = (ВидОперации <> Перечисления.ВидыОперацийСборкаЗапасов.Разборка
	И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ТипСтруктурнойЕдиницы") = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение);
	
	ВыборкаИзРезультатаЗапроса.Сбросить();
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
	
		Если ЗначениеЗаполнено(ВыборкаИзРезультатаЗапроса.Номенклатура) Тогда
		
			Если ВыборкаИзРезультатаЗапроса.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("Номенклатура", ВыборкаИзРезультатаЗапроса.Номенклатура);
			СтруктураДляПоиска.Вставить("Характеристика", ВыборкаИзРезультатаЗапроса.Характеристика);
			
			МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
			Если МассивСтрокОстатков.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаИзРезультатаЗапроса);
			
			Если Не ЗначениеЗаполнено(НоваяСтрока.Спецификация) Тогда
				НоваяСтрока.Спецификация = Справочники.Спецификации.СпецификацияПоУмолчанию(НоваяСтрока.Номенклатура,
					НоваяСтрока.Характеристика);
			КонецЕсли;
			
			КоличествоКСписанию = ВыборкаИзРезультатаЗапроса.Количество * ВыборкаИзРезультатаЗапроса.Коэффициент;
			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоКСписанию;
			Если МассивСтрокОстатков[0].КоличествоОстаток < 0 Тогда
				
				НоваяСтрока.Количество = (КоличествоКСписанию + МассивСтрокОстатков[0].КоличествоОстаток) / ВыборкаИзРезультатаЗапроса.Коэффициент;
				
			КонецЕсли;
			
			Если МассивСтрокОстатков[0].КоличествоОстаток <= 0 Тогда
				ТаблицаОстатков.Удалить(МассивСтрокОстатков[0]);
			КонецЕсли;
			
			НоваяСтрока.ЗаказПокупателя = ЗаказПокупателя;
			
			Если ИмяТабличнойЧасти = "Продукция"
				И СборкаВПодразделении
				И ВыборкаИзРезультатаЗапроса.ИспользуютсяЭтапы
				И НЕ ЗначениеЗаполнено(НоваяСтрока.ПодразделениеЗавершающегоЭтапа) Тогда
				НоваяСтрока.ПодразделениеЗавершающегоЭтапа = СтруктурнаяЕдиница;
			КонецЕсли; 
			
		КонецЕсли;
	
	КонецЦикла;
	
	СборкаСЭтапами = СборкаСЭтапами();
	
	Если ПоЗаказуНаПереработку Тогда
		
		Если ИмяТабличнойЧасти="Запасы" Тогда
			ИмяТабличнойЧастиМатериалы = "Продукция";
		Иначе
			ИмяТабличнойЧастиМатериалы = "Запасы";
		КонецЕсли; 
		
		ТаблицаОстатков = МассивРезультатов[2].Выгрузить();
		ТаблицаОстатков.Индексы.Добавить("ЗаказПокупателя, Номенклатура, Характеристика");
		
		Выборка = МассивРезультатов[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
			СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
			СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
			
			МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
			Если МассивСтрокОстатков.Количество() = 0 Тогда
				Остаток = 0;
			Иначе
				Остаток = МассивСтрокОстатков[0].КоличествоОстаток / Выборка.Коэффициент;
			КонецЕсли;
			Если Остаток<=0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если Остаток<Выборка.Количество Тогда
				КСписанию = Остаток;
			Иначе
				КСписанию = Выборка.Количество;
			КонецЕсли; 
			
			НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧастиМатериалы].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Спецификация = Справочники.Спецификации.СпецификацияПоУмолчанию(НоваяСтрока.Номенклатура,
				НоваяСтрока.Характеристика);
			НоваяСтрока.Количество = КСписанию;
			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КСписанию * Выборка.Коэффициент;
			
		КонецЦикла;
		
		Если ИмяТабличнойЧастиМатериалы="Запасы" Тогда
			ПроизводствоСервер.ЗаполнитьЭтапыМатериалов(Продукция.Выгрузить(), Запасы);
		КонецЕсли; 
		
	КонецЕсли;
	
	ПроизводствоСервер.ЗаполнитьКлючиСвязи(Продукция);
	Если СборкаСЭтапами Тогда
		ОпределитьВыполненныеЭтапы(ДанныеЗаполнения);
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДобавитьВременныеТаблицы(Запрос);
	
	Если ПоЗаказуНаПереработку Тогда
		ДобавитьОстаткиРаспределенияПоЗаказуНаПереработку(Запрос);
	Иначе	
		ДобавитьОстаткиРаспределенияПоЗаказуПокупателя(Запрос);
	КонецЕсли; 
	
	ЗаполнитьЗапасыПоЭтапам(Запрос);
	Если РучноеРаспределение И Запасы.Количество()>0 Тогда
		ПроизводствоСервер.РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, ВыполненныеЭтапы, ЗаказНаПроизводство, ВидОперации);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		
		СерииНоменклатуры.Очистить();
		
		ТаблицаСерииНоменклатуры = ДанныеЗаполнения.СерииНоменклатуры.Выгрузить();
		Для Каждого СтрокаСерия Из ТаблицаСерииНоменклатуры Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаСерия.КлючСвязи) Тогда
				Продолжить;
			КонецЕсли;
			СтрокиПродукция = ТабличныеЧастиУНФКлиентСервер.СтрокиПоКлючуСвязи(Продукция, СтрокаСерия.КлючСвязи);
			Если СтрокиПродукция.Количество()=0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = СерииНоменклатурыПродукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСерия);
		КонецЦикла;
	КонецЕсли;
	
	СерииНоменклатурыУНФ.УдалитьСерииНоменклатурыВТабличнойЧастиВЗависимостиОтПолитики(ЭтотОбъект, "Продукция",, "СерииНоменклатурыПродукция");
	СерииНоменклатурыУНФ.УдалитьСерииНоменклатурыВТабличнойЧастиВЗависимостиОтПолитики(ЭтотОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьПоОтчетуОРозничныхПродажах(ДанныеЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения.Запасы) Тогда
		Возврат;
	КонецЕсли;
	
	РучноеРаспределение = Константы.ИспользоватьРучноеРаспределениеМатериаловПоУмолчанию.Получить()<>Перечисления.ДаНет.Нет;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерВходящегоДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаВходящегоДокумента,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПродукции,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Запасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|	И ТаблицаДокумента.Запасы.Номенклатура.СпособПополнения = ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаЗапасы.Ссылка КАК Ссылка,
	|	ТаблицаЗапасы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СпецификацииПоУмолчанию.Спецификация, ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)) КАК Спецификация,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаЗапасы.Количество КАК Количество,
	|	ТаблицаЗапасы.СерииНоменклатуры КАК СерииНоменклатуры,
	|	ТаблицаЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Запасы КАК ТаблицаЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииПоУмолчанию КАК СпецификацииПоУмолчанию
	|		ПО ТаблицаЗапасы.Номенклатура = СпецификацииПоУмолчанию.Номенклатура
	|			И ТаблицаЗапасы.Характеристика = СпецификацииПоУмолчанию.Характеристика
	|ГДЕ
	|	ТаблицаЗапасы.Ссылка = &Ссылка
	|	И ТаблицаЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|	И ТаблицаЗапасы.Номенклатура.СпособПополнения = ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Продукция.Очистить();
	Запасы.Очистить();
	РаспределениеЗапасов.Очистить();
	ВыполненныеЭтапы.Очистить();
	Отходы.Очистить();
	СерииНоменклатуры.Очистить();
	СерииНоменклатурыПродукция.Очистить();
	
	Если РезультатЗапроса.Получить(0).Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Шапка = РезультатЗапроса.Получить(0).Выбрать();
	Шапка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Шапка);
	
	Продукция.Загрузить(РезультатЗапроса.Получить(1).Выгрузить());
	
	СерииНоменклатурыУНФ.ЗаполнитьТЧСерииНоменклатурыПоКлючуСвязи(ЭтотОбъект, ДанныеЗаполнения, , , "СерииНоменклатурыПродукция");
	СерииНоменклатурыУНФ.УдалитьСерииНоменклатурыВТабличнойЧастиВЗависимостиОтПолитики(ЭтотОбъект, "Продукция",, "СерииНоменклатурыПродукция");
	
	// Заполнение по спецификации.
	Если Продукция.Количество() > 0 Тогда
		СвернутьПродукциюСУчетомПодчиненныхТЧ();
		ПроизводствоСервер.ЗаполнитьКлючиСвязи(Продукция);
		Если СборкаСЭтапами() Тогда
			ОпределитьВыполненныеЭтапы(ДанныеЗаполнения);
		КонецЕсли; 
		ЗаполнитьТабличнуюЧастьПоСпецификации();
		ТаблицаЗаказы = Продукция.Выгрузить();
		ТаблицаЗаказы.Свернуть("ЗаказПокупателя");
		Если ТаблицаЗаказы.Количество()>1 Тогда
			ПоложениеЗаказаПокупателя = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
		КонецЕсли; 
		Если РучноеРаспределение Тогда
			ПроизводствоСервер.РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, ВыполненныеЭтапы, ЗаказНаПроизводство, ВидОперации);
		КонецЕсли; 
	КонецЕсли;	
	
КонецПроцедуры

// Заполнение документа на основании производственной операции ВЕТИС.
//
// Параметры:
//	ДанныеЗаполнения - Структура - Данные заполнения документа
//	
Процедура ЗаполнитьПоПроизводственнойОперации(ДанныеЗаполнения) Экспорт
	
	Реквизиты = ИнтеграцияВЕТИСУНФ.ДанныеПрикладныхДокументовИзПроизводственнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
		Если ЗначениеЗаполнено(Реквизиты.Подразделение) Тогда
			СтруктурнаяЕдиница = Реквизиты.Подразделение;
		КонецЕсли;
		
	КонецЕсли;
	
	Товары = Реквизиты.Товары.Выгрузить();
	Сырье = Реквизиты.Сырье.Выгрузить();
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		НоваяСтрокаЗапасы = Продукция.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаТовары);
		
	КонецЦикла;
	
	Для Каждого СтрокаСырье Из Сырье Цикл
		
		НоваяСтрокаЗапасы = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗапасы, СтрокаСырье);
		
	КонецЦикла;
	
КонецПроцедуры

// АПК:299-вкл

Процедура ЗаполнитьТабличнуюЧастьПоСпецификации() Экспорт
	
	ЭтоРазборка = (ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДобавитьВременныеТаблицы(Запрос);
	ДобавитьРаспределениеПоСпецификации(Запрос);
	ЗаполнитьЗапасыПоЭтапам(Запрос);
	
	СтатусПартии = Новый СписокЗначений;
	СтатусПартии.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыПартий.СобственныеЗапасы"));
	СтатусПартии.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыПартий.ДавальческоеСырье"));
	
	Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
		
		СтрокаТабличнойЧасти.Партия = ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура)
		, НоменклатураВДокументахСервер.ЗначенияПартийНоменклатурыПоУмолчанию(СтрокаТабличнойЧасти.Номенклатура,СтатусПартии)
		, Неопределено);
		
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтруктурнаяЕдиница) И ПоложениеСклада=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.СтруктурнаяЕдиница = ?(ЭтоРазборка, СтруктурнаяЕдиницаПродукции, СтруктурнаяЕдиницаЗапасов);
		СтрокаТабличнойЧасти.Ячейка = ?(ЭтоРазборка, ЯчейкаПродукции, ЯчейкаЗапасов);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПоОстаткам() Экспорт
	
	Запасы.Очистить();
	СерииНоменклатуры.Очистить();
	
	МассивЗаказов = Новый Массив;
	Если ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ТаблицаЗначений = Продукция.Выгрузить(, "ЗаказПокупателя");
		ТаблицаЗначений.Свернуть("ЗаказПокупателя");
		Для каждого СтрокаЗаказа Из ТаблицаЗначений Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаЗаказа.ЗаказПокупателя) Тогда
				Продолжить;
			КонецЕсли; 
			МассивЗаказов.Добавить(СтрокаЗаказа.ЗаказПокупателя);
		КонецЦикла; 
	ИначеЕсли ЗначениеЗаполнено(ЗаказПокупателя) Тогда 
		МассивЗаказов.Добавить(ЗаказПокупателя);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказы", МассивЗаказов);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиницаЗапасов);
	Запрос.УстановитьПараметр("Ячейка", ЯчейкаЗапасов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Если ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Запрос.УстановитьПараметр("ЗаказПокупателяШапки", Документы.ЗаказПокупателя.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("ЗаказПокупателяШапки", ЗаказПокупателя);
	КонецЕсли; 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА &ЗаказПокупателяШапки = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|		ИНАЧЕ &ЗаказПокупателяШапки
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ ВложенныйЗапрос.Количество
	|		КОНЕЦ) КАК Резерв,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.КоличествоОстаток КАК Количество
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				Организация = &Организация
	|					И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И (ЗаказПокупателя В (&Заказы)
	|						ИЛИ ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
	|					И ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)) КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Запасы.СтруктурнаяЕдиница,
	|		Запасы.Номенклатура,
	|		Запасы.Характеристика,
	|		Запасы.Партия,
	|		Запасы.ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество
	|			ИНАЧЕ -Запасы.Количество
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК Запасы
	|	ГДЕ
	|		Запасы.Регистратор = &Ссылка
	|		И Запасы.Организация = &Организация
	|		И Запасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|		И (Запасы.ЗаказПокупателя В (&Заказы)
	|				ИЛИ Запасы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
	|		И Запасы.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ЗаказПокупателяШапки = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|		ИНАЧЕ &ЗаказПокупателяШапки
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Номенклатура.СтранаПроисхождения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Партия КАК Партия,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВложенныйЗапрос.Ячейка КАК Ячейка,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыНаСкладахОстатки.Характеристика КАК Характеристика,
	|		ЗапасыНаСкладахОстатки.Партия КАК Партия,
	|		ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыНаСкладахОстатки.Ячейка КАК Ячейка,
	|		ЗапасыНаСкладахОстатки.КоличествоОстаток КАК Количество
	|	ИЗ
	|		РегистрНакопления.ЗапасыНаСкладах.Остатки(
	|				,
	|				Организация = &Организация
	|					И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И Ячейка = &Ячейка) КАК ЗапасыНаСкладахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗапасыНаСкладах.Номенклатура,
	|		ЗапасыНаСкладах.Характеристика,
	|		ЗапасыНаСкладах.Партия,
	|		ЗапасыНаСкладах.СтруктурнаяЕдиница,
	|		ЗапасыНаСкладах.Ячейка,
	|		ВЫБОР
	|			КОГДА ЗапасыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЗапасыНаСкладах.Количество
	|			ИНАЧЕ -ЗапасыНаСкладах.Количество
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗапасыНаСкладах КАК ЗапасыНаСкладах
	|	ГДЕ
	|		ЗапасыНаСкладах.Регистратор = &Ссылка
	|		И ЗапасыНаСкладах.Организация = &Организация
	|		И ЗапасыНаСкладах.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|		И ЗапасыНаСкладах.Ячейка = &Ячейка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Ячейка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0";
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = Результат.Получить(1).Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("Номенклатура, Характеристика, СтруктурнаяЕдиница, Партия");
	
	Выборка = Результат.Получить(0).Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, СтруктурнаяЕдиница, Партия");
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Выборка);
		СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
		КСписанию = Выборка.Количество;
		Резерв = Выборка.Резерв;
		Для каждого СтрокаОстатков Из СтрокиОстатков Цикл
			Списать = Мин(СтрокаОстатков.Количество, КСписанию);
			Если Списать=0 Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаОстатков.Количество = СтрокаОстатков.Количество - Списать;
			КСписанию = КСписанию - Списать;
			НоваяСтрока = Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Ячейка = СтрокаОстатков.Ячейка;
			НоваяСтрока.Резерв = Мин(НоваяСтрока.Количество, Резерв);
			Резерв = Резерв - НоваяСтрока.Резерв;
			Если КСписанию<=0 Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла;  
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьКолонкуРезервПоРезервам() Экспорт
	
	Если Запасы.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	
	Запасы.ЗагрузитьКолонку(Новый Массив(Запасы.Количество()), "Резерв");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТаблицаЗапасы = Запасы.Выгрузить();
	Если ПоложениеСклада<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Для каждого СтрокаТабличнойЧасти Из ТаблицаЗапасы Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
		КонецЦикла; 
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ТаблицаЗапасы);
	Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаЗапасы.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫРАЗИТЬ(ТаблицаЗапасы.СтруктурнаяЕдиница КАК Справочник.СтруктурныеЕдиницы) КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Партия КАК Партия,
	|	ТабличнаяЧасть.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТабличнаяЧасть.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть";
	
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Если ПоложениеСклада<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиницаЗапасов);
	Иначе
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
	КонецЕсли;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				(Организация, СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						&Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ТаблицаЗапасы.ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|					ГДЕ
	|						ТаблицаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))) КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.ЗаказПокупателя,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДвиженияДокументаЗапасы.Количество
	|			ИНАЧЕ -ДвиженияДокументаЗапасы.Количество
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		И (ДвиженияДокументаЗапасы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				ИЛИ &СтруктурнаяЕдиница = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.ЗаказПокупателя,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", Выборка.Партия);
		Если ПоложениеЗаказаПокупателя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
		КонецЕсли; 
		Если ПолучитьФункциональнуюОпцию("УчетПоНесколькимСкладам") 
			И ПоложениеСклада=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
			СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", Выборка.СтруктурнаяЕдиница);
		КонецЕсли; 
		
		ВсегоОстаток = Выборка.КоличествоОстаток;
		МассивСтрокЗапасы = Запасы.НайтиСтроки(СтруктураДляПоиска);
		Для каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			
			ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток / СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент);
			Если СтрокаЗапасы.Количество >= ВсегоОстаток Тогда
				СтрокаЗапасы.Резерв = ВсегоОстаток;
				ВсегоОстаток = 0;
			Иначе
				СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
				ВсегоОстаток = ВсегоОстаток - СтрокаЗапасы.Количество;
				ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток * СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеОтветственныхЛиц()
	
	ЭтоСборка = (ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка);
	
	Отправитель = ?(ЭтоСборка, СтруктурнаяЕдиницаЗапасов, СтруктурнаяЕдиницаПродукции);
	Получатель = ?(ЭтоСборка, СтруктурнаяЕдиницаПродукции, СтруктурнаяЕдиницаЗапасов);
	
	Если ЗначениеЗаполнено(Отправитель) Тогда
		
		ПодписьКладовщикаОтправил = Отправитель.ПодписьМОЛ;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Получатель) Тогда
		
		ПодписьКладовщикаПолучил = Получатель.ПодписьМОЛ;
		
	КонецЕсли;
	
	ПодписьКонтролера = СтруктурнаяЕдиница.ПодписьМОЛ;
	
КонецПроцедуры

Процедура ЗаполнитьЗапасыПоЭтапам(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА НЕ ПродукцияИЭтапы.ИспользуютсяЭтапы
	|				ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|				ИЛИ &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|					И ВЫБОР
	|						КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|							ТОГДА ПродукцияИЭтапы.ЗаказПокупателя
	|						ИНАЧЕ &ЗаказПокупателя
	|					КОНЕЦ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|		ИНАЧЕ РаспределениеЗапасов.Этап
	|	КОНЕЦ КАК Этап,
	|	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	РаспределениеЗапасов.Характеристика КАК Характеристика,
	|	РаспределениеЗапасов.Спецификация КАК Спецификация,
	|	РаспределениеЗапасов.Партия КАК Партия,
	|	РаспределениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ВЫРАЗИТЬ(РаспределениеЗапасов.Количество * ВЫБОР
	|				КОГДА РаспределениеЗапасов.КоличествоПродукции = 0
	|					ТОГДА 1
	|				ИНАЧЕ ПродукцияИЭтапы.Количество * ВЫБОР
	|						КОГДА ПродукцияИЭтапы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|							ТОГДА ВЫРАЗИТЬ(ПродукцияИЭтапы.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|						ИНАЧЕ 1
	|					КОНЕЦ / РаспределениеЗапасов.КоличествоПродукции
	|			КОНЕЦ КАК ЧИСЛО(15, 3))) КАК Количество,
	|	СУММА(РаспределениеЗапасов.ДоляСтоимости) КАК ДоляСтоимости,
	|	РаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(РаспределениеЗапасов.Номенклатура КАК Справочник.Номенклатура).СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	ПродукцияИЭтапы КАК ПродукцияИЭтапы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспределениеЗапасов КАК РаспределениеЗапасов
	|		ПО ПродукцияИЭтапы.КлючСвязи = РаспределениеЗапасов.КлючСвязиПродукция
	|			И (ПродукцияИЭтапы.Этап = РаспределениеЗапасов.Этап
	|				ИЛИ НЕ ПродукцияИЭтапы.ИспользуютсяЭтапы
	|				ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|				ИЛИ &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|					И ВЫБОР
	|						КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|							ТОГДА ПродукцияИЭтапы.ЗаказПокупателя
	|						ИНАЧЕ &ЗаказПокупателя
	|					КОНЕЦ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
	|ГДЕ
	|	НЕ РаспределениеЗапасов.Номенклатура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеЗапасов.ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА НЕ ПродукцияИЭтапы.ИспользуютсяЭтапы
	|				ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
	|				ИЛИ &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|					И ВЫБОР
	|						КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|							ТОГДА ПродукцияИЭтапы.ЗаказПокупателя
	|						ИНАЧЕ &ЗаказПокупателя
	|					КОНЕЦ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|		ИНАЧЕ РаспределениеЗапасов.Этап
	|	КОНЕЦ,
	|	РаспределениеЗапасов.Номенклатура,
	|	РаспределениеЗапасов.Характеристика,
	|	РаспределениеЗапасов.Спецификация,
	|	РаспределениеЗапасов.Партия,
	|	РаспределениеЗапасов.СтруктурнаяЕдиница,
	|	РаспределениеЗапасов.ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(РаспределениеЗапасов.Номенклатура КАК Справочник.Номенклатура).СтранаПроисхождения
	|
	|УПОРЯДОЧИТЬ ПО
	|	МИНИМУМ(ПродукцияИЭтапы.НомерСтроки),
	|	МИНИМУМ(РаспределениеЗапасов.НомерСтроки)";
	Запасы.Загрузить(Запрос.Выполнить().Выгрузить());
	Для каждого СтрокаЗапасов Из Запасы Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаЗапасов.СтруктурнаяЕдиница) Тогда
			СтрокаЗапасов.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
			СтрокаЗапасов.Ячейка = ЯчейкаЗапасов;
		КонецЕсли; 
	КонецЦикла;
	
	Если РучноеРаспределение Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаспределениеЗапасов.КлючСвязиПродукция КАК КлючСвязиПродукция,
		|	РаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ВЫБОР
		|		КОГДА НЕ ПродукцияИЭтапы.ИспользуютсяЭтапы
		|				ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
		|				ИЛИ &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|					И ВЫБОР
		|						КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
		|							ТОГДА ПродукцияИЭтапы.ЗаказПокупателя
		|						ИНАЧЕ &ЗаказПокупателя
		|					КОНЕЦ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|		ИНАЧЕ РаспределениеЗапасов.Этап
		|	КОНЕЦ КАК Этап,
		|	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
		|	РаспределениеЗапасов.Характеристика КАК Характеристика,
		|	РаспределениеЗапасов.Спецификация КАК Спецификация,
		|	РаспределениеЗапасов.Партия КАК Партия,
		|	РаспределениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	СУММА(ВЫРАЗИТЬ(РаспределениеЗапасов.Количество * ВЫБОР
		|				КОГДА РаспределениеЗапасов.КоличествоПродукции = 0
		|					ТОГДА 1
		|				ИНАЧЕ ПродукцияИЭтапы.Количество * ВЫБОР
		|						КОГДА ПродукцияИЭтапы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
		|							ТОГДА ВЫРАЗИТЬ(ПродукцияИЭтапы.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
		|						ИНАЧЕ 1
		|					КОНЕЦ / РаспределениеЗапасов.КоличествоПродукции
		|			КОНЕЦ КАК ЧИСЛО(15, 3))) КАК Количество,
		|	РаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	ПродукцияИЭтапы КАК ПродукцияИЭтапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспределениеЗапасов КАК РаспределениеЗапасов
		|		ПО ПродукцияИЭтапы.КлючСвязи = РаспределениеЗапасов.КлючСвязиПродукция
		|			И (ПродукцияИЭтапы.Этап = РаспределениеЗапасов.Этап
		|				ИЛИ НЕ ПродукцияИЭтапы.ИспользуютсяЭтапы
		|				ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
		|				ИЛИ &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|					И ВЫБОР
		|						КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
		|							ТОГДА ПродукцияИЭтапы.ЗаказПокупателя
		|						ИНАЧЕ &ЗаказПокупателя
		|					КОНЕЦ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
		|ГДЕ
		|	НЕ РаспределениеЗапасов.Номенклатура ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	РаспределениеЗапасов.КлючСвязиПродукция,
		|	РаспределениеЗапасов.ЗаказПокупателя,
		|	ВЫБОР
		|		КОГДА НЕ ПродукцияИЭтапы.ИспользуютсяЭтапы
		|				ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка)
		|				ИЛИ &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|					И ВЫБОР
		|						КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
		|							ТОГДА ПродукцияИЭтапы.ЗаказПокупателя
		|						ИНАЧЕ &ЗаказПокупателя
		|					КОНЕЦ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|		ИНАЧЕ РаспределениеЗапасов.Этап
		|	КОНЕЦ,
		|	РаспределениеЗапасов.Номенклатура,
		|	РаспределениеЗапасов.Характеристика,
		|	РаспределениеЗапасов.Спецификация,
		|	РаспределениеЗапасов.Партия,
		|	РаспределениеЗапасов.СтруктурнаяЕдиница,
		|	РаспределениеЗапасов.ЕдиницаИзмерения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	МИНИМУМ(РаспределениеЗапасов.НомерСтроки)";
		РаспределениеЗапасов.Загрузить(Запрос.Выполнить().Выгрузить());
		Для каждого СтрокаЗапасов Из РаспределениеЗапасов Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаЗапасов.СтруктурнаяЕдиница) Тогда
				СтрокаЗапасов.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
				СтрокаЗапасов.Ячейка = ЯчейкаЗапасов;
			КонецЕсли; 
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьСкладыИРезервы()
	
	Если ВидОперации=Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		ИмяТЧ = "Продукция";
	Иначе
		ИмяТЧ = "Запасы";
	КонецЕсли;
	
	Если ПоложениеЗаказаПокупателя <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Для каждого СтрокаТабличнойЧасти Из ЭтотОбъект[ИмяТЧ] Цикл
			СтрокаТабличнойЧасти.ЗаказПокупателя = ЗаказПокупателя;
		КонецЦикла; 
	КонецЕсли;
	РазрешитьСкладыВТабличныхЧастях = ПолучитьФункциональнуюОпцию("РазрешитьСкладыВТабличныхЧастях");
	Если НЕ РазрешитьСкладыВТабличныхЧастях Тогда
		ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	КонецЕсли; 
	Если ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Для каждого СтрокаТабличнойЧасти Из ЭтотОбъект[ИмяТЧ] Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиницаЗапасов;
			СтрокаТабличнойЧасти.Ячейка = ЯчейкаЗапасов;
		КонецЦикла; 
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ЭтотОбъект[ИмяТЧ].Выгрузить());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Константы.УчетПоКомпании.Компания(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Ячейка", Ячейка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Партия КАК Партия,
	|	ТабличнаяЧасть.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТабличнаяЧасть.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТабличнаяЧасть.Ячейка КАК Ячейка
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Партия КАК Партия,
	|	ВложенныйЗапрос.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	1 КАК Порядок,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка) КАК Ячейка
	|ИЗ
	|	(ВЫБРАТЬ
	|		Запасы.Номенклатура КАК Номенклатура,
	|		Запасы.Характеристика КАК Характеристика,
	|		Запасы.Партия КАК Партия,
	|		Запасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ВЫБОР
	|			КОГДА Запасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Запасы.Количество
	|			ИНАЧЕ -Запасы.Количество
	|		КОНЕЦ КАК Количество,
	|		Запасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|	ИЗ
	|		РегистрНакопления.Запасы КАК Запасы
	|	ГДЕ
	|		Запасы.Регистратор = &Ссылка
	|		И (Запасы.Номенклатура, Запасы.Характеристика, Запасы.Партия, Запасы.ЗаказПокупателя, Запасы.Организация, Запасы.ЗаказНаПроизводство) В
	|				(ВЫБРАТЬ
	|					Запасы.Номенклатура,
	|					Запасы.Характеристика,
	|					Запасы.Партия,
	|					Запасы.ЗаказПокупателя,
	|					&Организация КАК Организация,
	|					ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство
	|				ИЗ
	|					Запасы
	|				ГДЕ
	|					Запасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗапасыОстатки.Номенклатура,
	|		ЗапасыОстатки.Характеристика,
	|		ЗапасыОстатки.Партия,
	|		ЗапасыОстатки.ЗаказПокупателя,
	|		ЗапасыОстатки.КоличествоОстаток,
	|		ЗапасыОстатки.СтруктурнаяЕдиница
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				(Номенклатура, Характеристика, Партия, ЗаказПокупателя, Организация, ЗаказНаПроизводство) В
	|					(ВЫБРАТЬ
	|						Запасы.Номенклатура,
	|						Запасы.Характеристика,
	|						Запасы.Партия,
	|						Запасы.ЗаказПокупателя,
	|						&Организация КАК Организация,
	|						ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство
	|					ИЗ
	|						Запасы
	|					ГДЕ
	|						Запасы.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))) КАК ЗапасыОстатки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.ЗаказПокупателя,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.СтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	Запасы.ЗаказПокупателя,
	|	0,
	|	2,
	|	Запасы.СтруктурнаяЕдиница,
	|	Запасы.Ячейка
	|ИЗ
	|	Запасы КАК Запасы
	|ГДЕ
	|	Запасы.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	Запасы.ЗаказПокупателя,
	|	0,
	|	3,
	|	Запасы.Номенклатура.Склад,
	|	Запасы.Номенклатура.Ячейка
	|ИЗ
	|	Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Номенклатура.Склад <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	Запасы.ЗаказПокупателя,
	|	0,
	|	4,
	|	ВложенныйЗапрос.ИсточникПеремещения,
	|	ВложенныйЗапрос.ЯчейкаИсточникаПеремещения
	|ИЗ
	|	Запасы КАК Запасы,
	|	(ВЫБРАТЬ
	|		СтруктурныеЕдиницы.ИсточникПеремещения КАК ИсточникПеремещения,
	|		СтруктурныеЕдиницы.ЯчейкаИсточникаПеремещения КАК ЯчейкаИсточникаПеремещения
	|	ИЗ
	|		Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|	ГДЕ
	|		СтруктурныеЕдиницы.Ссылка = &СтруктурнаяЕдиница) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИсточникПеремещения <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Запасы.Номенклатура,
	|	Запасы.Характеристика,
	|	Запасы.Партия,
	|	Запасы.ЗаказПокупателя,
	|	0,
	|	5,
	|	&СтруктурнаяЕдиница,
	|	&Ячейка
	|ИЗ
	|	Запасы КАК Запасы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	ИменаКолонокПоиска = "Номенклатура, Характеристика, Партия, ЗаказПокупателя";
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	ТаблицаДанных.Индексы.Добавить(ИменаКолонокПоиска);
	Если НЕ РазрешитьСкладыВТабличныхЧастях Тогда
		ИменаКолонокПоиска = СтрШаблон("%1, СтруктурнаяЕдиница", ИменаКолонокПоиска);
	КонецЕсли; 
	
	Для каждого СтрокаТабличнойЧасти Из ЭтотОбъект[ИмяТЧ] Цикл
		СтруктураОтбора = Новый Структура(ИменаКолонокПоиска);
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТабличнойЧасти);
		Строки = ТаблицаДанных.НайтиСтроки(СтруктураОтбора);
		Для каждого СтрокаДанных Из Строки Цикл
			Если СтрокаДанных.Количество < 0 Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаДанных.Порядок = 1 И СтрокаДанных.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти
				И ЗначениеЗаполнено(СтрокаДанных.СтруктурнаяЕдиница)
				И СтрокаДанных.СтруктурнаяЕдиница <> СтруктурнаяЕдиницаЗапасов
				И РазрешитьСкладыВТабличныхЧастях Тогда
				ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
			КонецЕсли;
			Если ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
				Коэффициент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ЕдиницаИзмерения, "Коэффициент", Истина);
			Иначе
				Коэффициент = 1;
			КонецЕсли; 
			Количество = СтрокаТабличнойЧасти.Количество * Коэффициент;
			Если СтрокаДанных.Порядок = 1 
				И СтрокаДанных.Количество < Количество
				И СтрокаДанных.СтруктурнаяЕдиница <> СтруктурнаяЕдиницаЗапасов Тогда
				НоваяСтрока = ЭтотОбъект[ИмяТЧ].Вставить(ЭтотОбъект[ИмяТЧ].Индекс(СтрокаТабличнойЧасти));
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
				НоваяСтрока.Количество = СтрокаДанных.Количество / Коэффициент;
				НоваяСтрока.Резерв = НоваяСтрока.Количество;
				СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество - НоваяСтрока.Количество;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных, "СтруктурнаяЕдиница, Ячейка");
				СтрокаДанных.Количество = 0;
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаДанных, "СтруктурнаяЕдиница, Ячейка");
			Если СтрокаДанных.Порядок = 1 Тогда
				СтрокаТабличнойЧасти.Резерв = Мин(СтрокаДанных.Количество / Коэффициент, СтрокаТабличнойЧасти.Количество);
				СтрокаДанных.Количество = СтрокаДанных.Количество - СтрокаТабличнойЧасти.Резерв * Коэффициент;
			КонецЕсли;
			Прервать;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаказыТЧ(Отказ)
	
	Заказы = Новый Массив;
	Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
		Если Заказы.Найти(СтрокаТабличнойЧасти.ЗаказПокупателя)=Неопределено Тогда
			Заказы.Добавить(СтрокаТабличнойЧасти.ЗаказПокупателя);
		КонецЕсли; 
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из Запасы Цикл
		Если Заказы.Найти(СтрокаТабличнойЧасти.ЗаказПокупателя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'В строке №%1 табл. части ""Материалы"" используется заказ покупателя, отсутствующий в табл. части ""Продукция"".'"),
			СтрокаТабличнойЧасти.НомерСтроки);
		КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Запасы", СтрокаТабличнойЧасти.НомерСтроки,
			"ЗаказПокупателя");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
	КонецЦикла; 
	
КонецПроцедуры

Функция СборкаСЭтапами()
	
	Если ПоложениеЗаказаПокупателя=ПредопределенноеЗначение("Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти") Тогда
		ПодЗаказ = Ложь;
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЗаказПокупателя) Тогда
				ПодЗаказ = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла;
	Иначе
		ПодЗаказ = ЗначениеЗаполнено(ЗаказПокупателя);
	КонецЕсли; 
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") 
	И ВидОперации<>ПредопределенноеЗначение("Перечисление.ВидыОперацийСборкаЗапасов.Разборка") 
	И (ПодЗаказ ИЛИ ЗначениеЗаполнено(ЗаказНаПроизводство));		
	
КонецФункции

Процедура ОпределитьВыполненныеЭтапы(ДанныеЗаполнения)
	
	ВыполненныеЭтапы.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Продукция", Продукция.Выгрузить());
	Запрос.УстановитьПараметр("ПоложениеЗаказаПокупателя", ПоложениеЗаказаПокупателя);
	Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ПоЗаказуНаПроизводство", ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ЗаказНаПроизводство"));
	Запрос.УстановитьПараметр("ПоЗаказуПокупателя", ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ЗаказПокупателя"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Партия КАК Партия,
	|	ВЫРАЗИТЬ(Продукция.Спецификация КАК Справочник.Спецификации) КАК Спецификация,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	ВЫБОР
	|		КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА Продукция.ЗаказПокупателя
	|		ИНАЧЕ &ЗаказПокупателя
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	&ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ПОМЕСТИТЬ Продукция
	|ИЗ
	|	&Продукция КАК Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Партия КАК Партия,
	|	Продукция.Спецификация КАК Спецификация,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Продукция.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ВЫБОР
	|		КОГДА Спецификации.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуютсяЭтапы,
	|	ВидыПроизводстваЭтапы.Этап КАК Этап,
	|	1 КАК ВыполненоПлан
	|ПОМЕСТИТЬ ПродукцияИЭтапыПлан
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации КАК Спецификации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПроизводства.Этапы КАК ВидыПроизводстваЭтапы
	|			ПО Спецификации.ВидПроизводства = ВидыПроизводстваЭтапы.Ссылка
	|		ПО Продукция.Спецификация = Спецификации.Ссылка
	|ГДЕ
	|	Спецификации.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|	И (Продукция.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ Продукция.ЗаказНаПроизводство <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СборкаЗапасовПродукция.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовПродукция.Характеристика КАК Характеристика,
	|	СборкаЗапасовПродукция.Партия КАК Партия,
	|	СборкаЗапасовПродукция.Спецификация КАК Спецификация,
	|	СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	СборкаЗапасовПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СборкаЗапасовВыполненныеЭтапы.Этап КАК Этап
	|ПОМЕСТИТЬ ПродукцияИЭтапыФакт
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.ВыполненныеЭтапы КАК СборкаЗапасовВыполненныеЭтапы
	|		ПО СборкаЗапасовПродукция.Ссылка = СборкаЗапасовВыполненныеЭтапы.Ссылка
	|			И СборкаЗапасовПродукция.КлючСвязи = СборкаЗапасовВыполненныеЭтапы.КлючСвязи
	|ГДЕ
	|	&ПоЗаказуНаПроизводство
	|	И СборкаЗапасовПродукция.Ссылка <> &Ссылка
	|	И СборкаЗапасовПродукция.Ссылка.Проведен
	|	И СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство = &Основание
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СборкаЗапасовПродукция.Номенклатура,
	|	СборкаЗапасовПродукция.Характеристика,
	|	СборкаЗапасовПродукция.Партия,
	|	СборкаЗапасовПродукция.Спецификация,
	|	СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство,
	|	СборкаЗапасовПродукция.ЗаказПокупателя,
	|	СборкаЗапасовВыполненныеЭтапы.Этап
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.ВыполненныеЭтапы КАК СборкаЗапасовВыполненныеЭтапы
	|		ПО СборкаЗапасовПродукция.Ссылка = СборкаЗапасовВыполненныеЭтапы.Ссылка
	|			И СборкаЗапасовПродукция.КлючСвязи = СборкаЗапасовВыполненныеЭтапы.КлючСвязи
	|ГДЕ
	|	&ПоЗаказуПокупателя
	|	И СборкаЗапасовПродукция.Ссылка <> &Ссылка
	|	И СборкаЗапасовПродукция.Ссылка.Проведен
	|	И СборкаЗапасовПродукция.ЗаказПокупателя = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродукцияИЭтапыПлан.Номенклатура КАК Номенклатура,
	|	ПродукцияИЭтапыПлан.Характеристика КАК Характеристика,
	|	ПродукцияИЭтапыПлан.Партия КАК Партия,
	|	ПродукцияИЭтапыПлан.Спецификация КАК Спецификация,
	|	ПродукцияИЭтапыПлан.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПродукцияИЭтапыПлан.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ПродукцияИЭтапыПлан.Этап КАК Этап,
	|	ПродукцияИЭтапыПлан.ВыполненоПлан КАК Выполнено
	|ПОМЕСТИТЬ ВыполненныеЭтапы
	|ИЗ
	|	ПродукцияИЭтапыПлан КАК ПродукцияИЭтапыПлан
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Партия,
	|	ВложенныйЗапрос.Спецификация,
	|	ВложенныйЗапрос.ЗаказПокупателя,
	|	ВложенныйЗапрос.ЗаказНаПроизводство,
	|	ВложенныйЗапрос.Этап,
	|	-1
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПродукцияИЭтапыФакт.Номенклатура КАК Номенклатура,
	|		ПродукцияИЭтапыФакт.Характеристика КАК Характеристика,
	|		ПродукцияИЭтапыФакт.Партия КАК Партия,
	|		ПродукцияИЭтапыФакт.Спецификация КАК Спецификация,
	|		ПродукцияИЭтапыФакт.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ПродукцияИЭтапыФакт.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ПродукцияИЭтапыФакт.Этап КАК Этап
	|	ИЗ
	|		ПродукцияИЭтапыФакт КАК ПродукцияИЭтапыФакт
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПродукцияИЭтапыФакт.Номенклатура,
	|		ПродукцияИЭтапыФакт.ЗаказПокупателя,
	|		ПродукцияИЭтапыФакт.Характеристика,
	|		ПродукцияИЭтапыФакт.Спецификация,
	|		ПродукцияИЭтапыФакт.ЗаказНаПроизводство,
	|		ПродукцияИЭтапыФакт.Партия,
	|		ПродукцияИЭтапыФакт.Этап) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыполненныеЭтапы.Номенклатура КАК Номенклатура,
	|	ВыполненныеЭтапы.Характеристика КАК Характеристика,
	|	ВыполненныеЭтапы.Партия КАК Партия,
	|	ВыполненныеЭтапы.Спецификация КАК Спецификация,
	|	ВыполненныеЭтапы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВыполненныеЭтапы.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ВыполненныеЭтапы.Этап КАК Этап,
	|	СУММА(ВыполненныеЭтапы.Выполнено) КАК Выполнено,
	|	Продукция.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	ВыполненныеЭтапы КАК ВыполненныеЭтапы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Продукция КАК Продукция
	|		ПО ВыполненныеЭтапы.Номенклатура = Продукция.Номенклатура
	|			И ВыполненныеЭтапы.Характеристика = Продукция.Характеристика
	|			И ВыполненныеЭтапы.Партия = Продукция.Партия
	|			И ВыполненныеЭтапы.Спецификация = Продукция.Спецификация
	|			И ВыполненныеЭтапы.ЗаказПокупателя = Продукция.ЗаказПокупателя
	|			И ВыполненныеЭтапы.ЗаказНаПроизводство = Продукция.ЗаказНаПроизводство
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыполненныеЭтапы.Характеристика,
	|	ВыполненныеЭтапы.Этап,
	|	ВыполненныеЭтапы.Спецификация,
	|	ВыполненныеЭтапы.Партия,
	|	ВыполненныеЭтапы.ЗаказПокупателя,
	|	ВыполненныеЭтапы.Номенклатура,
	|	ВыполненныеЭтапы.ЗаказНаПроизводство,
	|	Продукция.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВыполненныеЭтапы.Выполнено) > 0 И
	|	НЕ Продукция.КлючСвязи ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ВыполненныеЭтапы.Добавить();
		НоваяСтрока.КлючСвязи = Выборка.КлючСвязи;
		НоваяСтрока.Этап = Выборка.Этап;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ДобавитьВременныеТаблицы(Запрос)
	
	Запрос.УстановитьПараметр("Продукция", Продукция.Выгрузить());
	Запрос.УстановитьПараметр("ВыполненныеЭтапы", ВыполненныеЭтапы.Выгрузить());
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);
	Запрос.УстановитьПараметр("ПоложениеЗаказаПокупателя", ПоложениеЗаказаПокупателя);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Продукция.НомерСтроки КАК НомерСтроки,
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Партия КАК Партия,
	|	ВЫРАЗИТЬ(Продукция.Спецификация КАК Справочник.Спецификации) КАК Спецификация,
	|	ВЫБОР
	|		КОГДА &ПоложениеЗаказаПокупателя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА Продукция.ЗаказПокупателя
	|		ИНАЧЕ &ЗаказПокупателя
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	Продукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Продукция.Количество КАК Количество
	|ПОМЕСТИТЬ Продукция
	|ИЗ
	|	&Продукция КАК Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыполненныеЭтапы.КлючСвязи КАК КлючСвязи,
	|	ВыполненныеЭтапы.Этап КАК Этап
	|ПОМЕСТИТЬ ВыполненныеЭтапы
	|ИЗ
	|	&ВыполненныеЭтапы КАК ВыполненныеЭтапы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.НомерСтроки КАК НомерСтроки,
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Партия КАК Партия,
	|	Продукция.Спецификация КАК Спецификация,
	|	Продукция.КлючСвязи КАК КлючСвязи,
	|	Продукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Продукция.Количество КАК Количество,
	|	Продукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА Спецификации.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуютсяЭтапы,
	|	ЕСТЬNULL(ВыполненныеЭтапы.Этап, ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)) КАК Этап
	|ПОМЕСТИТЬ ПродукцияИЭтапы
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации КАК Спецификации
	|		ПО Продукция.Спецификация = Спецификации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыполненныеЭтапы КАК ВыполненныеЭтапы
	|		ПО Продукция.КлючСвязи = ВыполненныеЭтапы.КлючСвязи";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДобавитьРаспределениеПоСпецификации(Запрос)
	
	ТаблицаСостава = ПроизводствоСервер.СоставСпецификаций(Продукция.Выгрузить(), Истина, , , Ложь);
	
	Запрос.УстановитьПараметр("ТаблицаСостава", ТаблицаСостава);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСостава.КлючСвязи КАК КлючСвязи,
	|	ТаблицаСостава.НомерСтроки КАК НомерСтрокиПродукция,
	|	ТаблицаСостава.Номенклатура КАК НоменклатураПродукция,
	|	ТаблицаСостава.Характеристика КАК ХарактеристикаПродукция,
	|	ТаблицаСостава.Спецификация КАК СпецификацияПродукция,
	|	ТаблицаСостава.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаСостава.Этап КАК Этап,
	|	ТаблицаСостава.НомерСтрокиСостава КАК НомерСтроки,
	|	ТаблицаСостава.НоменклатураСостава КАК Номенклатура,
	|	ТаблицаСостава.ХарактеристикаСостава КАК Характеристика,
	|	ТаблицаСостава.СпецификацияСостава КАК Спецификация,
	|	ТаблицаСостава.КоличествоСостава КАК Количество,
	|	ТаблицаСостава.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаСостава.ЕдиницаИзмеренияСостава КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаСостава
	|ИЗ
	|	&ТаблицаСостава КАК ТаблицаСостава
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСостава.КлючСвязи КАК КлючСвязиПродукция,
	|	ЕСТЬNULL(Продукция.Количество * ВЫБОР
	|			КОГДА Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 1) КАК КоличествоПродукции,
	|	ТаблицаСостава.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаСостава.Этап КАК Этап,
	|	ТаблицаСостава.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСостава.Номенклатура КАК Номенклатура,
	|	ТаблицаСостава.Характеристика КАК Характеристика,
	|	ТаблицаСостава.Спецификация КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиница,
	|	ТаблицаСостава.Количество КАК Количество,
	|	ТаблицаСостава.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаСостава.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	ТаблицаСостава КАК ТаблицаСостава
	|		ЛЕВОЕ СОЕДИНЕНИЕ Продукция КАК Продукция
	|		ПО ТаблицаСостава.КлючСвязи = Продукция.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСостава";
	Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура ДобавитьОстаткиРаспределенияПоЗаказуНаПроизводство(Запрос)
	
	// Получение данных заказа на производство
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоПродукция.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоПродукция.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоПродукция.Количество КАК Количество,
	|	ЗаказНаПроизводствоПродукция.Резерв КАК Резерв,
	|	ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
	|	ЗаказНаПроизводствоПродукция.Партия КАК Партия,
	|	ЗаказНаПроизводствоПродукция.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоПродукция.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|ГДЕ
	|	ЗаказНаПроизводствоПродукция.Ссылка = &ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаПроизводствоЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоЗапасы.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоЗапасы.Количество КАК Количество,
	|	ЗаказНаПроизводствоЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоЗапасы.Спецификация КАК Спецификация,
	|	ЗаказНаПроизводствоЗапасы.Резерв КАК Резерв,
	|	ЗаказНаПроизводствоЗапасы.Партия КАК Партия,
	|	ЗаказНаПроизводствоЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоЗапасы.КлючСвязи КАК КлючСвязи,
	|	ЗаказНаПроизводствоЗапасы.Этап КАК Этап
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Запасы КАК ЗаказНаПроизводствоЗапасы
	|ГДЕ
	|	ЗаказНаПроизводствоЗапасы.Ссылка = &ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПроизводствоРаспределениеЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Количество КАК Количество,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.КлючСвязиПродукция КАК КлючСвязиПродукция,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Спецификация КАК Спецификация,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Партия КАК Партия,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Этап КАК Этап
	|ИЗ
	|	Документ.ЗаказНаПроизводство.РаспределениеЗапасов КАК ЗаказНаПроизводствоРаспределениеЗапасов
	|ГДЕ
	|	ЗаказНаПроизводствоРаспределениеЗапасов.Ссылка = &ЗаказНаПроизводство
	|	И ЗаказНаПроизводствоРаспределениеЗапасов.Ссылка.РучноеРаспределение";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаПродукции = РезультатЗапроса[0].Выгрузить();
	ТаблицаЗапасы = РезультатЗапроса[1].Выгрузить();
	Если РезультатЗапроса[2].Пустой() Тогда
		// Распределение в заказе не выполнено
		ТаблицаРаспределение = РаспределениеЗапасов.ВыгрузитьКолонки();
		ПроизводствоСервер.РаспределитьМатериалы(ТаблицаПродукции, ТаблицаЗапасы, ТаблицаРаспределение, , Истина, ВидОперации);
		ТаблицаРаспределение.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
		НомерСтроки = 0;
		Для каждого СтрокаРаспределения Из ТаблицаРаспределение Цикл
			НомерСтроки = НомерСтроки + 1;
			СтрокаРаспределения.НомерСтроки = НомерСтроки;
		КонецЦикла; 
	Иначе
		ТаблицаРаспределение = РезультатЗапроса[2].Выгрузить();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводствоРаспределение", ТаблицаРаспределение);
	Запрос.УстановитьПараметр("ЗаказНаПроизводствоПродукция", ТаблицаПродукции);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоПродукция.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоПродукция.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоПродукция.Количество КАК Количество,
	|	ЗаказНаПроизводствоПродукция.Резерв КАК Резерв,
	|	ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(ЗаказНаПроизводствоПродукция.Спецификация КАК Справочник.Спецификации) КАК Спецификация,
	|	ЗаказНаПроизводствоПродукция.Партия КАК Партия,
	|	ЗаказНаПроизводствоПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоПродукция.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ЗаказНаПроизводствоПродукция
	|ИЗ
	|	&ЗаказНаПроизводствоПродукция КАК ЗаказНаПроизводствоПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПроизводствоРаспределение.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаПроизводствоРаспределение.Количество КАК Количество,
	|	ЗаказНаПроизводствоРаспределение.КлючСвязиПродукция КАК КлючСвязиПродукция,
	|	ВЫРАЗИТЬ(ЗаказНаПроизводствоРаспределение.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ЗаказНаПроизводствоРаспределение.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоРаспределение.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоРаспределение.Спецификация КАК Спецификация,
	|	ЗаказНаПроизводствоРаспределение.Партия КАК Партия,
	|	ЗаказНаПроизводствоРаспределение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоРаспределение.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоРаспределение.Этап КАК Этап
	|ПОМЕСТИТЬ ЗаказНаПроизводствоРаспределение
	|ИЗ
	|	&ЗаказНаПроизводствоРаспределение КАК ЗаказНаПроизводствоРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПроизводствоРаспределение.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаПроизводствоРаспределение.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоРаспределение.Характеристика КАК Характеристика,
	|	ЗаказНаПроизводствоРаспределение.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоРаспределение.Спецификация КАК Спецификация,
	|	ЗаказНаПроизводствоРаспределение.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ЗаказНаПроизводствоРаспределение.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И ЗаказНаПроизводствоРаспределение.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказНаПроизводствоРаспределение.СтруктурнаяЕдиница
	|		КОГДА ЗаказНаПроизводствоРаспределение.Номенклатура.Склад <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ЗаказНаПроизводствоРаспределение.Номенклатура.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоРаспределение.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказНаПроизводствоРаспределение.Этап КАК Этап,
	|	ЗаказНаПроизводствоРаспределение.Количество КАК Количество,
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК НоменклатураПродукция,
	|	ЗаказНаПроизводствоПродукция.Характеристика КАК ХарактеристикаПродукция,
	|	ЗаказНаПроизводствоПродукция.Спецификация КАК СпецификацияПродукция,
	|	ЗаказНаПроизводствоПродукция.Партия КАК ПартияПродукция,
	|	ЗаказНаПроизводствоПродукция.ЗаказПокупателя КАК ЗаказПокупателяПродукция,
	|	ЗаказНаПроизводствоПродукция.Количество * ВЫБОР
	|		КОГДА ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ВЫРАЗИТЬ(ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоПродукции,
	|	ЗаказНаПроизводствоПродукция.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ РаспределениеИПродукция
	|ИЗ
	|	ЗаказНаПроизводствоРаспределение КАК ЗаказНаПроизводствоРаспределение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказНаПроизводствоПродукция КАК ЗаказНаПроизводствоПродукция
	|		ПО ЗаказНаПроизводствоРаспределение.КлючСвязиПродукция = ЗаказНаПроизводствоПродукция.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеИПродукция.НомерСтроки КАК НомерСтроки,
	|	РаспределениеИПродукция.Номенклатура КАК Номенклатура,
	|	РаспределениеИПродукция.Характеристика КАК Характеристика,
	|	РаспределениеИПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РаспределениеИПродукция.Спецификация КАК Спецификация,
	|	РаспределениеИПродукция.Партия КАК Партия,
	|	МАКСИМУМ(РаспределениеИПродукция.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|	РаспределениеИПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеИПродукция.Этап КАК Этап,
	|	СУММА(РаспределениеИПродукция.Количество) КАК Количество,
	|	1 КАК ДоляСтоимости,
	|	РаспределениеИПродукция.КоличествоПродукции КАК КоличествоПродукции,
	|	РаспределениеИПродукция.КлючСвязи КАК КлючСвязиПродукция
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	РаспределениеИПродукция КАК РаспределениеИПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеИПродукция.НомерСтроки,
	|	РаспределениеИПродукция.ЕдиницаИзмерения,
	|	РаспределениеИПродукция.Партия,
	|	РаспределениеИПродукция.Этап,
	|	РаспределениеИПродукция.Номенклатура,
	|	РаспределениеИПродукция.Спецификация,
	|	РаспределениеИПродукция.Характеристика,
	|	РаспределениеИПродукция.ЗаказПокупателя,
	|	РаспределениеИПродукция.КоличествоПродукции,
	|	РаспределениеИПродукция.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(РаспределениеИПродукция.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаказНаПроизводствоРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаказНаПроизводствоПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РаспределениеИПродукция";
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") Тогда
		УчестьДлительноеВыполнениеЭтапов(Запрос);
	КонецЕсли; 
		
КонецПроцедуры

Процедура ДобавитьОстаткиРаспределенияПоЗаказуПокупателя(Запрос)
	
	ТаблицаПродукция = Продукция.Выгрузить();
	ТаблицаСостава = ПроизводствоСервер.СоставСпецификаций(ТаблицаПродукция, Истина, , , Ложь);
	
	Запрос.УстановитьПараметр("ТаблицаСостава", ТаблицаСостава);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСостава.КлючСвязи КАК КлючСвязи,
	|	ТаблицаСостава.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаСостава.Этап КАК Этап,
	|	ТаблицаСостава.НомерСтрокиСостава КАК НомерСтроки,
	|	ТаблицаСостава.НоменклатураСостава КАК Номенклатура,
	|	ТаблицаСостава.ХарактеристикаСостава КАК Характеристика,
	|	ТаблицаСостава.СпецификацияСостава КАК Спецификация,
	|	ТаблицаСостава.КоличествоСостава КАК Количество,
	|	ТаблицаСостава.ЕдиницаИзмеренияСостава КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаСостава
	|ИЗ
	|	&ТаблицаСостава КАК ТаблицаСостава
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСостава.Номенклатура КАК Номенклатура,
	|	ТаблицаСостава.Характеристика КАК Характеристика,
	|	ТаблицаСостава.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаСостава.Спецификация КАК Спецификация,
	|	ТаблицаСостава.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаСостава.Этап КАК Этап,
	|	ТаблицаСостава.Количество КАК Количество,
	|	Продукция.Количество * ВЫБОР
	|		КОГДА Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоПродукции,
	|	Продукция.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ РаспределениеИПродукция
	|ИЗ
	|	ТаблицаСостава КАК ТаблицаСостава
	|		ЛЕВОЕ СОЕДИНЕНИЕ Продукция КАК Продукция
	|		ПО ТаблицаСостава.КлючСвязи = Продукция.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	РаспределениеИПродукция.Номенклатура КАК Номенклатура,
	|	РаспределениеИПродукция.Характеристика КАК Характеристика,
	|	РаспределениеИПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РаспределениеИПродукция.Спецификация КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиница,
	|	РаспределениеИПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеИПродукция.Этап КАК Этап,
	|	СУММА(РаспределениеИПродукция.Количество) КАК Количество,
	|	1 КАК ДоляСтоимости,
	|	РаспределениеИПродукция.КоличествоПродукции КАК КоличествоПродукции,
	|	РаспределениеИПродукция.КлючСвязи КАК КлючСвязиПродукция
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	РаспределениеИПродукция КАК РаспределениеИПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеИПродукция.ЕдиницаИзмерения,
	|	РаспределениеИПродукция.Этап,
	|	РаспределениеИПродукция.Номенклатура,
	|	РаспределениеИПродукция.Спецификация,
	|	РаспределениеИПродукция.Характеристика,
	|	РаспределениеИПродукция.ЗаказПокупателя,
	|	РаспределениеИПродукция.КоличествоПродукции,
	|	РаспределениеИПродукция.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(РаспределениеИПродукция.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСостава
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РаспределениеИПродукция";
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") Тогда
		УчестьДлительноеВыполнениеЭтапов(Запрос);
	КонецЕсли; 
		
КонецПроцедуры

Процедура ДобавитьОстаткиРаспределенияПоЗаказуНаПереработку(Запрос)
	
	ПроизводствоСервер.РаспределитьМатериалы(Продукция, Запасы, РаспределениеЗапасов, , ЗаказНаПроизводство, ВидОперации);
	Запрос.УстановитьПараметр("РаспределениеЗапасов", РаспределениеЗапасов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеЗапасов.КлючСвязиПродукция КАК КлючСвязи,
	|	РаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеЗапасов.Этап КАК Этап,
	|	РаспределениеЗапасов.НомерСтроки КАК НомерСтроки,
	|	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	РаспределениеЗапасов.Характеристика КАК Характеристика,
	|	РаспределениеЗапасов.Спецификация КАК Спецификация,
	|	РаспределениеЗапасов.Количество КАК Количество,
	|	РаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаСостава
	|ИЗ
	|	&РаспределениеЗапасов КАК РаспределениеЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСостава.Номенклатура КАК Номенклатура,
	|	ТаблицаСостава.Характеристика КАК Характеристика,
	|	ТаблицаСостава.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаСостава.Спецификация КАК Спецификация,
	|	ТаблицаСостава.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаСостава.Этап КАК Этап,
	|	ТаблицаСостава.Количество КАК Количество,
	|	Продукция.Количество * ВЫБОР
	|		КОГДА Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоПродукции,
	|	Продукция.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ РаспределениеИПродукция
	|ИЗ
	|	ТаблицаСостава КАК ТаблицаСостава
	|		ЛЕВОЕ СОЕДИНЕНИЕ Продукция КАК Продукция
	|		ПО ТаблицаСостава.КлючСвязи = Продукция.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	РаспределениеИПродукция.Номенклатура КАК Номенклатура,
	|	РаспределениеИПродукция.Характеристика КАК Характеристика,
	|	РаспределениеИПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РаспределениеИПродукция.Спецификация КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия,
	|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК СтруктурнаяЕдиница,
	|	РаспределениеИПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеИПродукция.Этап КАК Этап,
	|	СУММА(РаспределениеИПродукция.Количество) КАК Количество,
	|	1 КАК ДоляСтоимости,
	|	РаспределениеИПродукция.КоличествоПродукции КАК КоличествоПродукции,
	|	РаспределениеИПродукция.КлючСвязи КАК КлючСвязиПродукция
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	РаспределениеИПродукция КАК РаспределениеИПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеИПродукция.ЕдиницаИзмерения,
	|	РаспределениеИПродукция.Этап,
	|	РаспределениеИПродукция.Номенклатура,
	|	РаспределениеИПродукция.Спецификация,
	|	РаспределениеИПродукция.Характеристика,
	|	РаспределениеИПродукция.ЗаказПокупателя,
	|	РаспределениеИПродукция.КоличествоПродукции,
	|	РаспределениеИПродукция.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(РаспределениеИПродукция.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСостава
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РаспределениеИПродукция";
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") Тогда
		УчестьДлительноеВыполнениеЭтапов(Запрос);
	КонецЕсли; 
		
КонецПроцедуры

// Процедура - При поэтапном производстве возможен сценарий выполнения этапа несколькими документами.
// 	При заполнении таблицы запасов исключаются данные прочих документов производства по выполняемым этапам
//
// Параметры:
//  Запрос	 - 	Запрос - Запрос, в менеджере временных таблиц которого будут учтено поэтапное производство
//
Процедура УчестьДлительноеВыполнениеЭтапов(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СборкаЗапасовРаспределениеЗапасов.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовРаспределениеЗапасов.Характеристика КАК Характеристика,
	|	СборкаЗапасовРаспределениеЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СборкаЗапасовРаспределениеЗапасов.Спецификация КАК Спецификация,
	|	СборкаЗапасовРаспределениеЗапасов.Партия КАК Партия,
	|	СборкаЗапасовРаспределениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасовРаспределениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СборкаЗапасовРаспределениеЗапасов.Этап КАК Этап,
	|	СУММА(-СборкаЗапасовРаспределениеЗапасов.Количество) КАК Количество,
	|	ЕСТЬNULL(Продукция.Количество * ВЫБОР
	|		КОГДА Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ, 0) КАК КоличествоПродукции,
	|	ЕСТЬNULL(Продукция.КлючСвязи, 0) КАК КлючСвязи
	|ПОМЕСТИТЬ ОстаткиРаспределения
	|ИЗ
	|	Документ.СборкаЗапасов.РаспределениеЗапасов КАК СборкаЗапасовРаспределениеЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|			ЛЕВОЕ СОЕДИНЕНИЕ Продукция КАК Продукция
	|			ПО СборкаЗапасовПродукция.Номенклатура = Продукция.Номенклатура
	|				И СборкаЗапасовПродукция.Характеристика = Продукция.Характеристика
	|				И СборкаЗапасовПродукция.Спецификация = Продукция.Спецификация
	|				И СборкаЗапасовПродукция.Партия = Продукция.Партия
	|				И СборкаЗапасовПродукция.ЗаказПокупателя = Продукция.ЗаказПокупателя
	|		ПО СборкаЗапасовРаспределениеЗапасов.Ссылка = СборкаЗапасовПродукция.Ссылка
	|			И СборкаЗапасовРаспределениеЗапасов.КлючСвязиПродукция = СборкаЗапасовПродукция.КлючСвязи
	|ГДЕ
	|	СборкаЗапасовРаспределениеЗапасов.Ссылка.ЗаказНаПроизводство = &ЗаказНаПроизводство
	|	И СборкаЗапасовРаспределениеЗапасов.Ссылка <> &Ссылка
	|	И СборкаЗапасовРаспределениеЗапасов.Ссылка.Проведен
	|	И СборкаЗапасовРаспределениеЗапасов.Спецификация.ВидПроизводства <> ЗНАЧЕНИЕ(Справочник.ВидыПроизводства.ПустаяСсылка)
	|	И ЕСТЬNULL(Продукция.КлючСвязи, 0) <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	СборкаЗапасовРаспределениеЗапасов.Номенклатура,
	|	СборкаЗапасовРаспределениеЗапасов.СтруктурнаяЕдиница,
	|	СборкаЗапасовРаспределениеЗапасов.Характеристика,
	|	СборкаЗапасовРаспределениеЗапасов.Партия,
	|	СборкаЗапасовРаспределениеЗапасов.ЕдиницаИзмерения,
	|	СборкаЗапасовРаспределениеЗапасов.ЗаказПокупателя,
	|	СборкаЗапасовРаспределениеЗапасов.Этап,
	|	СборкаЗапасовРаспределениеЗапасов.Спецификация,
	|	ЕСТЬNULL(Продукция.Количество * ВЫБОР
	|		КОГДА Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА ВЫРАЗИТЬ(Продукция.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ, 0),
	|	ЕСТЬNULL(Продукция.КлючСвязи, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРаспределения.Номенклатура КАК Номенклатура,
	|	ОстаткиРаспределения.Характеристика КАК Характеристика,
	|	ОстаткиРаспределения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОстаткиРаспределения.Спецификация КАК Спецификация,
	|	ОстаткиРаспределения.Партия КАК Партия,
	|	ОстаткиРаспределения.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОстаткиРаспределения.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОстаткиРаспределения.Этап КАК Этап,
	|	ОстаткиРаспределения.Количество КАК Количество,
	|	ОстаткиРаспределения.КоличествоПродукции КАК КоличествоПродукции,
	|	ОстаткиРаспределения.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ РаспределениеСУчетомОстатков
	|ИЗ
	|	ОстаткиРаспределения КАК ОстаткиРаспределения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаспределениеЗапасов.Номенклатура,
	|	РаспределениеЗапасов.Характеристика,
	|	РаспределениеЗапасов.ЕдиницаИзмерения,
	|	РаспределениеЗапасов.Спецификация,
	|	РаспределениеЗапасов.Партия,
	|	РаспределениеЗапасов.СтруктурнаяЕдиница,
	|	РаспределениеЗапасов.ЗаказПокупателя,
	|	РаспределениеЗапасов.Этап,
	|	РаспределениеЗапасов.Количество,
	|	РаспределениеЗапасов.КоличествоПродукции,
	|	РаспределениеЗапасов.КлючСвязиПродукция
	|ИЗ
	|	РаспределениеЗапасов КАК РаспределениеЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиРаспределения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РаспределениеЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	МАКСИМУМ(РаспределениеСУчетомОстатков.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|	РаспределениеСУчетомОстатков.Номенклатура КАК Номенклатура,
	|	РаспределениеСУчетомОстатков.Характеристика КАК Характеристика,
	|	РаспределениеСУчетомОстатков.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РаспределениеСУчетомОстатков.Спецификация КАК Спецификация,
	|	РаспределениеСУчетомОстатков.Партия КАК Партия,
	|	РаспределениеСУчетомОстатков.ЗаказПокупателя КАК ЗаказПокупателя,
	|	РаспределениеСУчетомОстатков.Этап КАК Этап,
	|	СУММА(РаспределениеСУчетомОстатков.Количество) КАК Количество,
	|	1 КАК ДоляСтоимости,
	|	РаспределениеСУчетомОстатков.КоличествоПродукции КАК КоличествоПродукции,
	|	РаспределениеСУчетомОстатков.КлючСвязи КАК КлючСвязиПродукция
	|ПОМЕСТИТЬ РаспределениеЗапасов
	|ИЗ
	|	РаспределениеСУчетомОстатков КАК РаспределениеСУчетомОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеСУчетомОстатков.Номенклатура,
	|	РаспределениеСУчетомОстатков.Характеристика,
	|	РаспределениеСУчетомОстатков.ЕдиницаИзмерения,
	|	РаспределениеСУчетомОстатков.Спецификация,
	|	РаспределениеСУчетомОстатков.Партия,
	|	РаспределениеСУчетомОстатков.ЗаказПокупателя,
	|	РаспределениеСУчетомОстатков.Этап,
	|	РаспределениеСУчетомОстатков.КоличествоПродукции,
	|	РаспределениеСУчетомОстатков.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(РаспределениеСУчетомОстатков.Количество) > 0";
	
	Если Запрос.Параметры.Свойство("ЗаказПокупателя") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"СборкаЗапасовРаспределениеЗапасов.Ссылка.ЗаказНаПроизводство = &ЗаказНаПроизводство", 
		"СборкаЗапасовРаспределениеЗапасов.ЗаказПокупателя = &ЗаказПокупателя");
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура ПроверитьЗаполнениеЭтаповПроизводства(Отказ, ОтменаПроведения = Ложь)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") Тогда
		Возврат;
	КонецЕсли;
	
	// Формирование таблицы продукции, использующей этапы производства
	Если ОтменаПроведения Тогда
		ТаблицаПродукции = Продукция.ВыгрузитьКолонки();
	Иначе
		ТаблицаПродукции = Продукция.Выгрузить();
	КонецЕсли; 
	ТаблицаПродукции.Колонки.Добавить("ИмяТЧ", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));
	ТаблицаПродукции.ЗаполнитьЗначения("Продукция", "ИмяТЧ");
	ТаблицаПродукции.Колонки.Добавить("ЗаказНаПроизводство", Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство"));
	ТаблицаПродукции.ЗаполнитьЗначения(ЗаказНаПроизводство, "ЗаказНаПроизводство");
	Если ПоложениеЗаказаПокупателя<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ТаблицаПродукции.ЗаполнитьЗначения(ЗаказПокупателя, "ЗаказПокупателя");
	КонецЕсли;
	МассивСпецификаций = Новый Массив;
	Для каждого СтрокаТабличнойЧасти Из ТаблицаПродукции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
			Продолжить;
		КонецЕсли;
		Если МассивСпецификаций.Найти(СтрокаТабличнойЧасти.Спецификация)=Неопределено Тогда
			МассивСпецификаций.Добавить(СтрокаТабличнойЧасти.Спецификация);
		КонецЕсли; 
	КонецЦикла; 
	МассивСпецификаций = ПроизводствоСервер.СпецификацииСПоэтапнымПроизводством(МассивСпецификаций);
	ПроверяемаяПродукция = ТаблицаПродукции.СкопироватьКолонки();
	Для Каждого СтрокаПродукция Из ТаблицаПродукции Цикл
		Если Не ЗначениеЗаполнено(СтрокаПродукция.Спецификация) Тогда
			Продолжить;
		КонецЕсли;
		Если МассивСпецификаций.Найти(СтрокаПродукция.Спецификация) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ПроверяемаяПродукция.Добавить(), СтрокаПродукция);
	КонецЦикла;
	
	// Поэтапное производство выполняется только на подразделениях
	ТипСтруктурнойЕдиницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "ТипСтруктурнойЕдиницы");
	Если ПроверяемаяПродукция.Количество() > 0 
		И ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		ТекстСообщения = НСтр("ru = 'Изготовителем при поэтапном производстве может быть только подразделение.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СтруктурнаяЕдиница", , Отказ);
	КонецЕсли; 
	
	// Для поэтапного производства доступен только вид операции "Сборка"
	Если ПроверяемаяПродукция.Количество() > 0 
		И ВидОперации <> Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		ТекстСообщения = НСтр("ru = 'При поэтапном производстве доступен только вид операции ""Сборка"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидОперации", , Отказ);
	КонецЕсли; 
	
	// Запрет проведения без указания этапов
	Если ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка
		И ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		Для каждого СтрокаПродукция Из ПроверяемаяПродукция Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("КлючСвязи", СтрокаПродукция.КлючСвязи);
			Если ВыполненныеЭтапы.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не выбраны выполняемые этапы в строке %1.'"),
					СтрокаПродукция.НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция",
					СтрокаПродукция.НомерСтроки, "Этапы");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЗаказНаПроизводство) И НЕ ЗначениеЗаполнено(СтрокаПродукция.ЗаказПокупателя) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Для использования поэтапной сборки требуется указать заказ покупателя или заказ на производство (строка %1).'"),
					СтрокаПродукция.НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция",
					СтрокаПродукция.НомерСтроки, "Спецификация");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	// Запрет дублирования продукции
	ТаблицаКонтроляДублей = ПроверяемаяПродукция.Скопировать();
	ТаблицаКонтроляДублей.Колонки.Добавить("КоличествоСтрок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
	ТаблицаКонтроляДублей.ЗаполнитьЗначения(1, "КоличествоСтрок");
	ТаблицаКонтроляДублей.Свернуть("ЗаказПокупателя, ЗаказНаПроизводство, Номенклатура, Характеристика, Партия", "КоличествоСтрок");
	Для каждого СтрокаПродукция Из ТаблицаКонтроляДублей Цикл
		Если СтрокаПродукция.КоличествоСтрок > 1 Тогда
			СтруктураОтбора = Новый Структура("ЗаказПокупателя, ЗаказНаПроизводство, Номенклатура, Характеристика, Партия");
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаПродукция);
			СтрокиТЧ = ТаблицаПродукции.НайтиСтроки(СтруктураОтбора);
			Для каждого НайденнаяСтрока Из СтрокиТЧ Цикл
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Дублирующаяся продукция, использующая этапы производства, в строке %1.'"),
					НайденнаяСтрока.НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция",
					НайденнаяСтрока.НомерСтроки, "Номенклатура");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
			КонецЦикла; 
		КонецЕсли; 
	КонецЦикла; 
	
	Если ПолучитьФункциональнуюОпцию("ВыполнениеЭтаповРазнымиПодразделениями") 
		И НЕ ОтменаПроведения
		И ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		Для каждого СтрокаПродукция Из ПроверяемаяПродукция Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПродукция.ПодразделениеЗавершающегоЭтапа) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Не заполнена колонка ""Завершающее подразделение""  в строке %1 списка ""Продукция"".'"),
					СтрокаПродукция.НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция",
					СтрокаПродукция.НомерСтроки, "ПодразделениеЗавершающегоЭтапа");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	// Проверка уникальности завершающего подразделения и количества продукции
	ПроизводствоСервер.ПроверкаПоэтапногоПроизводства(ЭтотОбъект, ПроверяемаяПродукция, Отказ);
		
КонецПроцедуры

Процедура СвернутьПродукциюСУчетомПодчиненныхТЧ()
	
	ИменаКолонок = "Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Спецификация, СтранаПроисхождения, НомерГТД, СтруктурнаяЕдиница, Ячейка, ЗаказПокупателя, ПодразделениеЗавершающегоЭтапа";
	
	ТабличнаяЧасть = Продукция.Выгрузить();
	Продукция.Свернуть(ИменаКолонок, "Количество, Резерв");
	Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
		СтруктураПоиска = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТабличнойЧасти);
		Строки = ТабличнаяЧасть.НайтиСтроки(СтруктураПоиска);
		Если Строки.Количество()=1 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Строки[0], "КлючСвязи, СерииНоменклатуры");
		Иначе
			ПерваяСтрока = Неопределено;
			ПредставлениеСерииНоменклатуры = "";
			Для каждого НайденнаяСтрока Из Строки Цикл
				Если ПерваяСтрока=Неопределено Тогда
					ПерваяСтрока = НайденнаяСтрока;
					ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Строки[0], "КлючСвязи");
					ПредставлениеСерииНоменклатуры = Строки[0].СерииНоменклатуры;
					Продолжить;
				КонецЕсли; 
				СтруктураОтбора = Новый Структура;
				СтруктураОтбора.Вставить("КлючСвязи", НайденнаяСтрока.КлючСвязи);
				СтрокиСерииНоменклатуры = СерииНоменклатурыПродукция.НайтиСтроки(СтруктураОтбора);
				Для каждого СтрокаСерия Из СтрокиСерииНоменклатуры Цикл
					СтрокаСерия.КлючСвязи = ПерваяСтрока.КлючСвязи;
					ПредставлениеСерииНоменклатуры = ПредставлениеСерииНоменклатуры + ?(ПустаяСтрока(ПредставлениеСерииНоменклатуры), "", "; ") + Строка(СтрокаСерия.Серия);
				КонецЦикла; 
			КонецЦикла;
			СтрокаТабличнойЧасти.СерииНоменклатуры = ПредставлениеСерииНоменклатуры;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

// Процедура - Проверка использования в продукции и материалах одинаковых запасов
//
// Параметры:
//  Отказ	 - 	Булево - Признак отказа проведения, устанавливается, если проверка не пройдена
//
Процедура ПроверитьТЧНаСовпадениеНоменклатуры(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Продукция", Продукция.Выгрузить());
	Запрос.УстановитьПараметр("Запасы", Запасы.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Продукция.Номенклатура КАК Номенклатура,
	|	Продукция.Характеристика КАК Характеристика,
	|	Продукция.Партия КАК Партия,
	|	Продукция.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Продукция
	|ИЗ
	|	&Продукция КАК Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Партия КАК Партия
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&Запасы КАК Запасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукция.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Запасы КАК Запасы
	|		ПО Продукция.Номенклатура = Запасы.Номенклатура
	|			И Продукция.Характеристика = Запасы.Характеристика
	|			И Продукция.Партия = Запасы.Партия
	|ГДЕ
	|	НЕ Запасы.Номенклатура ЕСТЬ NULL";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстСообщения = НСтр(
		"ru = 'В табличных частях продукции и материалов присутствуют одинаковые запасы. Такой режим
		|производства не поддерживается, он может приводить к ошибкам расчета фактической себестоимости
		|при закрытии месяца. Следует использовать дополнительные разрезы учета для разделения продукции
		|и материалов (характеристики, партии) или выполнить списание материалов на продукцию с помощью
		|документа ""Распределение затрат""'");
		КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Продукция", Выборка.НомерСтроки,
			"Номенклатура");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле);
	КонецЕсли; 
 
КонецПроцедуры

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежа() Экспорт
	
	Компания = Константы.УчетПоКомпании.Компания(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Справочники.СтавкиНДС.СтавкаНДС(Организация.ВидСтавкиНДСПоУмолчанию);
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасчетыСПоставщикамиОстатки.Организация КАК Организация,
	|	РасчетыСПоставщикамиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПоставщикамиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПоставщикамиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(РасчетыСПоставщикамиОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РасчетыСПоставщикамиОстатки.СуммаВалОстаток) КАК СуммаВалОстаток,
	|	РасчетыСПоставщикамиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПоставщикамиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	РасчетыСПоставщикамиОстатки.Договор.СтатьяДДСПоУмолчанию КАК СтатьяДДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПоставщикамиОстатки.Организация КАК Организация,
	|		РасчетыСПоставщикамиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПоставщикамиОстатки.Договор КАК Договор,
	|		РасчетыСПоставщикамиОстатки.Документ КАК Документ,
	|		РасчетыСПоставщикамиОстатки.Заказ КАК Заказ,
	|		РасчетыСПоставщикамиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.Остатки(
	|				,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					И (НЕ &НуженОтборПоВидуДоговора
	|						ИЛИ &НуженОтборПоВидуДоговора
	|							И Договор.ВидДоговора В (&СписокВидовДоговоров))
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПоставщикамиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПоставщиками.Организация,
	|		ДвиженияДокументаРасчетыСПоставщиками.Контрагент,
	|		ДвиженияДокументаРасчетыСПоставщиками.Договор,
	|		ДвиженияДокументаРасчетыСПоставщиками.Документ,
	|		ДвиженияДокументаРасчетыСПоставщиками.Заказ,
	|		ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками КАК ДвиженияДокументаРасчетыСПоставщиками
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПоставщиками.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПоставщиками.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПоставщиками.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПоставщиками.Контрагент = &Контрагент
	|		И ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПоставщикамиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПоставщикамиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	РасчетыСПоставщикамиОстатки.СуммаВалОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщикамиОстатки.Организация,
	|	РасчетыСПоставщикамиОстатки.Контрагент,
	|	РасчетыСПоставщикамиОстатки.Договор,
	|	РасчетыСПоставщикамиОстатки.Документ,
	|	РасчетыСПоставщикамиОстатки.Заказ,
	|	РасчетыСПоставщикамиОстатки.ТипРасчетов,
	|	РасчетыСПоставщикамиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	Запрос.УстановитьПараметр("НуженОтборПоВидуДоговора", (НуженОтборПоДоговорам И Контрагент.ВестиРасчетыПоДоговорам));
	
	ДоговорПоУмолчанию = Справочники.ДоговорыКонтрагентов.ПолучитьДоговорПоУмолчаниюПоОрганизацииВидуДоговора(
		Контрагент,
		Организация,
		СписокВидовДоговоров
	);
	
	СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
		Дата,
		Новый Структура("Валюта", ДоговорПоУмолчанию.ВалютаРасчетов)
	);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	РасшифровкаПлатежа.Очистить();
	
	СуммаОсталосьРаспределить = СуммаДокумента;
	
	Пока СуммаОсталосьРаспределить > 0 Цикл
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.СпособЗачета = Перечисления.СпособыЗачетаИРаспределенияПлатежей.Вручную;
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
			
			Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
				
				НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
				НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
				
			Иначе // сумма остатка больше чем нужно распределить
				
				НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
					ВыборкаРезультатаЗапроса.Курс,
					ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
					ВыборкаРезультатаЗапроса.Кратность
				);
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока.Договор = ДоговорПоУмолчанию;
			
			НоваяСтрока.Курс = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Курс
			);
			НоваяСтрока.Кратность = ?(
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
				1,
				СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
			);
			НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
				СуммаОсталосьРаспределить,
				КурсВалютыДС,
				НоваяСтрока.Курс,
				КратностьВалютыДС,
				НоваяСтрока.Кратность
			);
			НоваяСтрока.ПризнакАванса = Истина;
			НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
			НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
			НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
			НоваяСтрока.СтатьяДДС = ДвиженияДенежныхСредствВызовСервера.ПолучитьСтатьюДДСПоУмолчаниюДляСтрокиРасшифровки(НоваяСтрока.Договор,
				НоваяСтрока.ДокументПланирования,
				НоваяСтрока.СтатьяДДС);
			СуммаОсталосьРаспределить = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

// Процедура заполняет расшифровку платежа.
//
Процедура ЗаполнитьРасшифровкуПлатежаАвтоЗачетДолгов() Экспорт
	
	Компания = Константы.УчетПоКомпании.Компания(Организация);
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = Справочники.СтавкиНДС.СтавкаНДС(Организация.ВидСтавкиНДСПоУмолчанию);
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
	Иначе
		СтавкаНДСПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
	КонецЕсли;
	
	СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", ВалютаДенежныхСредств));
	
	КурсВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Курс
	);
	КратностьВалютыДС = ?(
		СтруктураПоВалюте.Курс = 0,
		1,
		СтруктураПоВалюте.Кратность
	);
	
	// Заполнение расшифровки расчетов по умолчанию.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	РасходСоСчетаДоговорыАвтоЗачетаДолгов.Договор,
	|	РасходСоСчетаДоговорыАвтоЗачетаДолгов.СуммаПлатежа КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная
	|ИЗ
	|	&ДоговорыАвтоЗачетаДолгов КАК РасходСоСчетаДоговорыАвтоЗачетаДолгов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор,
	|	СУММА(ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.СуммаПлатежа) КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаДоговорыАвтоЗачета
	|ИЗ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная КАК ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная
	|ГДЕ
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор <> Неопределено
	|	И ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор <> Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаДоговорыАвтоЗачетаПредварительная.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщикамиОстатки.Организация КАК Организация,
	|	РасчетыСПоставщикамиОстатки.Контрагент КАК Контрагент,
	|	РасчетыСПоставщикамиОстатки.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	РасчетыСПоставщикамиОстатки.ТипРасчетов КАК ТипРасчетов,
	|	СУММА(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0)) КАК СуммаОстаток,
	|	СУММА(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0)) КАК СуммаВалОстаток,
	|	РасчетыСПоставщикамиОстатки.Документ.Дата КАК ДокументДата,
	|	СУММА(ВЫРАЗИТЬ(РасчетыСПоставщикамиОстатки.СуммаВалОстаток * КурсыВалютРасчетов.Курс * КурсыВалютДокумента.Кратность / (КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаВалДокумента,
	|	КурсыВалютДокумента.Курс КАК КурсДенежныхСредств,
	|	КурсыВалютДокумента.Кратность КАК КратностьДенежныхСредств,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.СуммаПлатежа КАК СуммаПлатежаАвто,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.Договор КАК ДоговорАвто
	|ИЗ
	|	ВременнаяТаблицаДоговорыАвтоЗачета КАК ВременнаяТаблицаДоговорыАвтоЗачета
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		РасчетыСПоставщикамиОстатки.Организация КАК Организация,
	|		РасчетыСПоставщикамиОстатки.Контрагент КАК Контрагент,
	|		РасчетыСПоставщикамиОстатки.Договор КАК Договор,
	|		РасчетыСПоставщикамиОстатки.Документ КАК Документ,
	|		РасчетыСПоставщикамиОстатки.Заказ КАК Заказ,
	|		РасчетыСПоставщикамиОстатки.ТипРасчетов КАК ТипРасчетов,
	|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.Остатки(
	|				,
	|				Организация = &Организация
	|					И Контрагент = &Контрагент
	|					// ТекстДоговорОтбор
	|					// ТекстДоговорАвтозаполнениеОтбор
	|					И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПоставщикамиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРасчетыСПоставщиками.Организация,
	|		ДвиженияДокументаРасчетыСПоставщиками.Контрагент,
	|		ДвиженияДокументаРасчетыСПоставщиками.Договор,
	|		ДвиженияДокументаРасчетыСПоставщиками.Документ,
	|		ДвиженияДокументаРасчетыСПоставщиками.Заказ,
	|		ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.Сумма, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаРасчетыСПоставщиками.СуммаВал, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками КАК ДвиженияДокументаРасчетыСПоставщиками
	|	ГДЕ
	|		ДвиженияДокументаРасчетыСПоставщиками.Регистратор = &Ссылка
	|		И ДвиженияДокументаРасчетыСПоставщиками.Период <= &Период
	|		И ДвиженияДокументаРасчетыСПоставщиками.Организация = &Организация
	|		И ДвиженияДокументаРасчетыСПоставщиками.Контрагент = &Контрагент
	|		// ТекстДоговорДвиженийАвтозаполнениеОтбор
	|		И ДвиженияДокументаРасчетыСПоставщиками.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)) КАК РасчетыСПоставщикамиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсыВалютРасчетов
	|		ПО РасчетыСПоставщикамиОстатки.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|	ПО ВременнаяТаблицаДоговорыАвтоЗачета.Договор = РасчетыСПоставщикамиОстатки.Договор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщикамиОстатки.Организация,
	|	РасчетыСПоставщикамиОстатки.Контрагент,
	|	РасчетыСПоставщикамиОстатки.Договор,
	|	РасчетыСПоставщикамиОстатки.Документ,
	|	РасчетыСПоставщикамиОстатки.Заказ,
	|	РасчетыСПоставщикамиОстатки.ТипРасчетов,
	|	РасчетыСПоставщикамиОстатки.Документ.Дата,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	КурсыВалютРасчетов.Курс,
	|	КурсыВалютРасчетов.Кратность,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиОстатки.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА РасчетыСПоставщикамиОстатки.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.Договор,
	|	ВременнаяТаблицаДоговорыАвтоЗачета.СуммаПлатежа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата
	|ИТОГИ
	|	СУММА(СуммаОстаток),
	|	СУММА(СуммаВалОстаток),
	|	СУММА(СуммаВалДокумента),
	|	МАКСИМУМ(СуммаПлатежаАвто)
	|ПО
	|	ДоговорАвто";
		
	Запрос.УстановитьПараметр("Организация", Компания);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта", ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДоговорыАвтоЗачетаДолгов", ДоговорыАвтоЗачетаДолгов.Выгрузить());
	
	НуженОтборПоДоговорам = УправлениеНебольшойФирмойПовтИсп.ТребуетсяКонтрольДоговоровКонтрагентов();
	СписокВидовДоговоров = Справочники.ДоговорыКонтрагентов.ПолучитьСписокВидовДоговораДляДокумента(Ссылка, ВидОперации);
	Если НуженОтборПоДоговорам
	   И Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорОтбор", "И Договор.ВидДоговора В (&СписокВидовДоговоров)");
		Запрос.УстановитьПараметр("СписокВидовДоговоров", СписокВидовДоговоров);
	КонецЕсли;
	
	Если Контрагент.ВестиРасчетыПоДоговорам Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорАвтозаполнениеОтбор", "И Договор В (&ТаблицаДоговоровАвтоЗачета)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "// ТекстДоговорДвиженийАвтозаполнениеОтбор", "И ДвиженияДокументаРасчетыСПоставщиками.Договор В (&ТаблицаДоговоровАвтоЗачета)");
		Запрос.УстановитьПараметр("ТаблицаДоговоровАвтоЗачета", ДоговорыАвтоЗачетаДолгов.ВыгрузитьКолонку("Договор"));
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РасшифровкаПлатежа.Очистить();
	
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() Цикл
		
		ТекущийДоговор = ВыборкаИтоги.ДоговорАвто;
		
		СтруктураКурсВалютыДоговораПоУмолчанию = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(
			Дата,
			Новый Структура("Валюта", ТекущийДоговор.ВалютаРасчетов)
		);
		
		ВыборкаРезультатаЗапроса = ВыборкаИтоги.Выбрать();
		
		СуммаОсталосьРаспределить = ВыборкаИтоги.СуммаПлатежаАвто;
		
		Пока СуммаОсталосьРаспределить > 0 Цикл
			
			Если ВыборкаРезультатаЗапроса.Следующий() Тогда
				
				Если ВыборкаРезультатаЗапроса.СуммаВалОстаток <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
				
				Если ВыборкаРезультатаЗапроса.СуммаВалДокумента <= СуммаОсталосьРаспределить Тогда // сумма остатка меньше или равна чем осталось распределить
					
					НоваяСтрока.СуммаРасчетов = ВыборкаРезультатаЗапроса.СуммаВалОстаток;
					НоваяСтрока.СуммаПлатежа = ВыборкаРезультатаЗапроса.СуммаВалДокумента;
					НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
					НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
					СуммаОсталосьРаспределить = СуммаОсталосьРаспределить - ВыборкаРезультатаЗапроса.СуммаВалДокумента;
					
				Иначе // сумма остатка больше чем нужно распределить
					
					НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
						СуммаОсталосьРаспределить,
						ВыборкаРезультатаЗапроса.КурсДенежныхСредств,
						ВыборкаРезультатаЗапроса.Курс,
						ВыборкаРезультатаЗапроса.КратностьДенежныхСредств,
						ВыборкаРезультатаЗапроса.Кратность
					);
					НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
					НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
					НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
					СуммаОсталосьРаспределить = 0;
					
				КонецЕсли;
				
			Иначе
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Договор = ТекущийДоговор;
				
				НоваяСтрока.Курс = ?(
					СтруктураКурсВалютыДоговораПоУмолчанию.Курс = 0,
					1,
					СтруктураКурсВалютыДоговораПоУмолчанию.Курс
				);
				НоваяСтрока.Кратность = ?(
					СтруктураКурсВалютыДоговораПоУмолчанию.Кратность = 0,
					1,
					СтруктураКурсВалютыДоговораПоУмолчанию.Кратность
				);
				НоваяСтрока.СуммаРасчетов = ЦенообразованиеСервер.ПересчитатьИзВалютыВВалюту(
					СуммаОсталосьРаспределить,
					КурсВалютыДС,
					НоваяСтрока.Курс,
					КратностьВалютыДС,
					НоваяСтрока.Кратность
				);
				НоваяСтрока.ПризнакАванса = Истина;
				НоваяСтрока.СуммаПлатежа = СуммаОсталосьРаспределить;
				НоваяСтрока.СтавкаНДС = СтавкаНДСПоУмолчанию;
				НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаПлатежа - (НоваяСтрока.СуммаПлатежа) / ((СтавкаНДСПоУмолчанию.Ставка + 100) / 100);
				СуммаОсталосьРаспределить = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; // Пока ВыборкаИтоги.Следующий() Цикл
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
		РасшифровкаПлатежа[0].СуммаПлатежа = СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРасшифровкуПлатежа()

// Обработчик заполнения документа по структуре.
//
// Параметры:
//  ДанныеЗаполнения - Структура.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("Основание") Тогда
		
		ЗаполнитьПоСвойствуОснование(ДанныеЗаполнения);
		
	ИначеЕсли ДанныеЗаполнения.Свойство("Документ") Тогда
		
		ЗаполнитьПоСвойствуДокумент(ДанныеЗаполнения);
		
	ИначеЕсли ДанныеЗаполнения.Свойство("ВидОперации") И ТипЗнч(ДанныеЗаполнения.ВидОперации) = Тип("ФиксированныйМассив") Тогда
		
		Для Каждого ТекущийВидОперации Из ДанныеЗаполнения.ВидОперации Цикл
			Если ТипЗнч(ТекущийВидОперации) = Тип("ПеречислениеСсылка.ВидыОперацийРасходСоСчета") Тогда
				ДанныеЗаполнения.Вставить("ВидОперации", ТекущийВидОперации);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоСвойствуОснование(ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("УчитыватьОстатки") 
		И ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ЗаполнитьПоЗаказуПоставщикуСУчетомОстатковКОплате(ДанныеЗаполнения.Основание);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		
		ЗаполнитьПоСчетНаОплатуПоставщика(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание)= Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ЗаполнитьПоЗаказПоставщику(ДанныеЗаполнения, ДанныеЗаполнения.НомерСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоСвойствуДокумент(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		
		ЗаполнитьПоСчетНаОплатуПоставщика(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ЗаполнитьПоЗаказПоставщику(ДанныеЗаполнения.Документ, Неопределено, ДанныеЗаполнения.Сумма);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.РасходДСПлан") Тогда
		
		ЗаполнитьПоРасходДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.ПеремещениеДСПлан") Тогда
		
		ЗаполнитьПоПеремещениеДСПлан(ДанныеЗаполнения.Документ, ДанныеЗаполнения.Сумма);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения.Документ) = Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам") Тогда
		
		ЗаполнитьПоНачисленияПоКредитамИЗаймам(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения на основании документа РасходДСПлан.
//
// Параметры:
//	ДокументСсылкаРасходДСПлан - ДокументСсылка.РасходДСПлан.
//	
Процедура ЗаполнитьПоРасходДСПлан(ДокументСсылкаРасходДСПлан, Сумма = Неопределено) Экспорт
	
	Если ДокументСсылкаРасходДСПлан.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести расход денег на основании неутвержденной заявки!'");
	КонецЕсли;
	Если ДокументСсылкаРасходДСПлан.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести расход денег. В заявке указан не верный способ оплаты (тип денежных средств)!'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСсылкаРасходДСПлан.ДокументОснование) Тогда
		
		ЗаполненПоОснованиюЗаявкиНаРасход = Истина;
		
		Если ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.ДоговорКредитаИЗайма") Тогда
			ЗаполнитьПоДоговоруКредитаЗайма(ДокументСсылкаРасходДСПлан.ДокументОснование);
		ИначеЕсли ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.ПлатежнаяВедомость") Тогда
			ЗаполнитьПоПлатежнаяВедомость(ДокументСсылкаРасходДСПлан.ДокументОснование);
		ИначеЕсли ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.НачислениеНалогов") Тогда
			ЗаполнитьПоНачислениеНалогов(ДокументСсылкаРасходДСПлан.ДокументОснование);
		Иначе
			ЗаполненПоОснованиюЗаявкиНаРасход = Ложь;
		КонецЕсли;
		
		Если ЗаполненПоОснованиюЗаявкиНаРасход Тогда
			Статья = ДокументСсылкаРасходДСПлан.СтатьяДвиженияДенежныхСредств;
			ДокументОснование = ДокументСсылкаРасходДСПлан;
			СуммаДокумента = ДокументСсылкаРасходДСПлан.СуммаДокумента;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходДСПлан);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.ДокументОснование КАК ДокументОснованиеЗаявки,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.БанковскийСчет
		|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ВТСтавкиНДСОрганизация.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДСОрганизация.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
		|ИЗ
		|	Документ.РасходДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДСОрганизация
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДСОрганизация.ВидСтавкиНДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
		|			БанковскиеСчета.Владелец КАК Владелец,
		|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
		|		ИЗ
		|			Документ.РасходДСПлан КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
		|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
		|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе

		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.ДокументОснование КАК ДокументОснованиеЗаявки,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.БанковскийСчет
		|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Договор КАК Договор,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ВТСтавкиНДСОрганизация.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * ВЫБОР
		|			КОГДА ТаблицаДокумента.ВалютаДокумента <> ТаблицаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДСОрганизация.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
		|ИЗ
		|	Документ.РасходДСПлан КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДСОрганизация
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДСОрганизация.ВидСтавкиНДС)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
		|			БанковскиеСчета.Владелец КАК Владелец,
		|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
		|		ИЗ
		|			Документ.РасходДСПлан КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
		|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
		|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Если ЗначениеЗаполнено(Выборка.ДокументОснованиеЗаявки) Тогда
		
		Если ТипЗнч(Выборка.ДокументОснованиеЗаявки) = Тип("ДокументСсылка.НачислениеЗарплаты") Тогда
			ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Зарплата;
		ИначеЕсли ТипЗнч(Выборка.ДокументОснованиеЗаявки) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Подотчетнику;
		КонецЕсли;
		
	КонецЕсли;
	
	НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
	
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	НоваяСтрока.ПризнакАванса = Истина;
	НоваяСтрока.ДокументПланирования = ДокументСсылкаРасходДСПлан;
	
	Если ЗначениеЗаполнено(ДокументСсылкаРасходДСПлан.ДокументОснование)
		И ТипЗнч(ДокументСсылкаРасходДСПлан.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику")
		И Контрагент.ВестиРасчетыПоЗаказам Тогда
		
		НоваяСтрока.Заказ = ДокументСсылкаРасходДСПлан.ДокументОснование;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ДокументОснованиеЗаявки)
		И ТипЗнч(Выборка.ДокументОснованиеЗаявки) = Тип("ДокументСсылка.СчетНаОплатуПоставщика")
		И Контрагент.ВестиУчетОплатыПоСчетам Тогда
		
		НоваяСтрока.СчетНаОплату = Выборка.ДокументОснованиеЗаявки;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоРасходДСПлан()

// Обработчик заполнения на основании документа ПеремещениеДСПлан.
//
// Параметры:
//	ДокументСсылкаПеремещениеДСПлан - ДокументСсылка.ПеремещениеДСПлан.
//	
Процедура ЗаполнитьПоПеремещениеДСПлан(ДокументСсылкаПеремещениеДСПлан, Сумма = Неопределено) Экспорт
	
	Если ДокументСсылкаПеремещениеДСПлан.СтатусУтвержденияПлатежа = Перечисления.СтатусыУтвержденияПлатежей.НеУтвержден Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя ввести перемещение денег на основании неутвержденного планового документа!'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПеремещениеДСПлан);
	
	// Заполним данные шапки документа.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				И ТаблицаДокумента.ТипДенежныхСредствПолучатель = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.СнятиеНаличных)
	|		КОГДА ТаблицаДокумента.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				И ТаблицаДокумента.ТипДенежныхСредствПолучатель = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ПереводНаДругойСчет)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Прочее)
	|	КОНЕЦ КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС) КАК НалогообложениеНДС,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК Статья,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.БанковскийСчетПолучатель КАК СчетКонтрагента,
	|	ТаблицаДокумента.КассаПолучатель КАК Касса,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС
	|ИЗ
	|	Документ.ПеремещениеДСПлан КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
	Если Сумма <> Неопределено Тогда
		ЭтотОбъект.СуммаДокумента = Сумма;
	КонецЕсли;
	РасшифровкаПлатежа.Очистить();
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	НоваяСтрока.ДокументПланирования = ДокументСсылкаПеремещениеДСПлан;
	
КонецПроцедуры // ЗаполнитьПоПеремещениеДСПлан()

// Обработчик заполнения на основании документа ПлатежноеПоручение
//
// Параметры:
//	ДокументСсылкаПлатежноеПоручение - ДокументСсылка.ПлатежноеПоручение.
//	
Процедура ЗаполнитьПоПлатежноеПоручение(ДокументСсылкаПлатежноеПоручение) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПлатежноеПоручение);
	Запрос.УстановитьПараметр("ОснованиеПлатежногоПоручения", ДокументСсылкаПлатежноеПоручение.ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Налоги)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Зарплата)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Зарплата)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ЛичныеСредстваПредпринимателя)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.НаРасходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.НаРасходы)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПереводНаДругойСчет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ПереводНаДругойСчет)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Покупателю)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Прочее)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Прочее)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПрочиеРасчеты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ПрочиеРасчеты)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Подотчетнику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Подотчетнику)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ЗарплатаСотруднику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ЗарплатаСотруднику)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.РасчетыПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.РасчетыПоКредитам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Статья = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.Прочее)
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаДокумента.Статья
	|	КОНЕЦ КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДС) КАК НалогообложениеНДС,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокумента.Ссылка) КАК Основание,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	СУММА(ТаблицаДокумента.СуммаДокумента) КАК СуммаРасчетов,
	|	КурсыВалютДокумента.Курс КАК Курс,
	|	КурсыВалютДокумента.Кратность КАК Кратность,
	|	СУММА(ТаблицаДокумента.СуммаДокумента) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СтавкаНДС.Ставка КАК ЗначениеСтавкиНДС,
	|	СУММА(ТаблицаДокумента.СуммаНДС) КАК СуммаНДС,
	|	ТаблицаДокумента.СчетКонтрагента КАК СчетКонтрагента,
	|	ТаблицаДокумента.ДокументОснование КАК ОснованиеОснования,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Налог = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокументаНалоги.ВидНалога
	|		ИНАЧЕ ТаблицаДокумента.Налог
	|	КОНЕЦ КАК ВидНалога,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.НазначениеПлатежа КАК СТРОКА(210)) КАК НазначениеПлатежа,
	|	ТаблицаДокументаНалоги.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.АналитикаПрочихДоходовИРасходов КАК АналитикаПрочихДоходовИРасходов,
	|	ТаблицаДокумента.Заказ КАК Заказ,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.НераспределеннаяПрибыль)
	|		ИНАЧЕ ТаблицаДокумента.Корреспонденция
	|	КОНЕЦ КАК Корреспонденция,
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ТаблицаДокумента.Договор КАК ДоговорПП,
	|	ТаблицаДокумента.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ТаблицаДокумента.Подотчетник КАК Подотчетник,
	|	ТаблицаДокумента.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаДокумента.Документ КАК Документ
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокумента.Ссылка КАК Ссылка,
	|			ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|			ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|		ИЗ
	|			Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &ОснованиеПлатежногоПоручения) КАК ТаблицаДокументаНалоги
	|		ПО ТаблицаДокумента.ДокументОснование = ТаблицаДокументаНалоги.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Налоги)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Зарплата)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Зарплата)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ЛичныеСредстваПредпринимателя)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.НаРасходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.НаРасходы)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПереводНаДругойСчет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ПереводНаДругойСчет)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Покупателю)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Прочее)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Прочее)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПрочиеРасчеты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ПрочиеРасчеты)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Подотчетнику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Подотчетнику)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ЗарплатаСотруднику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ЗарплатаСотруднику)
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.РасчетыПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.РасчетыПоКредитам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Статья = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Оплата)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.Прочее)
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаДокумента.Статья
	|	КОНЕЦ,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.Ссылка,
	|	КурсыВалютДокумента.Курс,
	|	КурсыВалютДокумента.Кратность,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.БанковскийСчет,
	|	ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.СтавкаНДС.Ставка,
	|	ТаблицаДокументаНалоги.ВидНалога,
	|	ТаблицаДокументаНалоги.НаправлениеДеятельности,
	|	ТаблицаДокумента.СчетКонтрагента,
	|	ТаблицаДокумента.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Налог = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокументаНалоги.ВидНалога
	|		ИНАЧЕ ТаблицаДокумента.Налог
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.НазначениеПлатежа КАК СТРОКА(210)),
	|	ТаблицаДокумента.АналитикаПрочихДоходовИРасходов,
	|	ТаблицаДокумента.Заказ,
	|	ТаблицаДокумента.Подразделение,
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.Договор,
	|	ТаблицаДокумента.Подотчетник,
	|	ТаблицаДокумента.ПериодРегистрации,
	|	ТаблицаДокумента.Документ,
	|	ТаблицаДокумента.ДоговорКредитаЗайма,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.НераспределеннаяПрибыль)
	|		ИНАЧЕ ТаблицаДокумента.Корреспонденция
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	РасшифровкаПлатежа.Очистить();
	ВыплатаЗаработнойПлаты.Очистить();
	
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Зарплата Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПлатежноеПоручениеВыплатаЗаработнойПлаты.НомерСтроки КАК НомерСтроки,
			|	ПлатежноеПоручениеВыплатаЗаработнойПлаты.Ведомость КАК Ведомость,
			|	ПлатежноеПоручениеВыплатаЗаработнойПлаты.СуммаПлатежа КАК СуммаПлатежа,
			|	ПлатежноеПоручениеВыплатаЗаработнойПлаты.ДокументПланирования КАК ДокументПланирования
			|ИЗ
			|	Документ.ПлатежноеПоручение.ВыплатаЗаработнойПлаты КАК ПлатежноеПоручениеВыплатаЗаработнойПлаты
			|ГДЕ
			|	ПлатежноеПоручениеВыплатаЗаработнойПлаты.Ссылка = &ДокументСсылкаПлатежноеПоручение";
		
		Запрос.УстановитьПараметр("ДокументСсылкаПлатежноеПоручение", ДокументСсылкаПлатежноеПоручение);
		
		ВыборкаРасшифровка = Запрос.Выполнить().Выбрать();

		Пока ВыборкаРасшифровка.Следующий() Цикл
			НоваяСтрока = ВыплатаЗаработнойПлаты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРасшифровка);
		КонецЦикла;
		
	Иначе
		
		//Для совместимости с предыдущей версией, оставляем старое заполнение расшифровки
		Если ДокументОснование.РасшифровкаПлатежа.Количество() = 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ЗначениеЗаполнено(Выборка.ОснованиеОснования)
					И ТипЗнч(Выборка.ОснованиеОснования) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
					НоваяСтрока.Заказ = Выборка.ОснованиеОснования;
					НоваяСтрока.Договор = ?(ЗначениеЗаполнено(Выборка.ОснованиеОснования.Договор), Выборка.ОснованиеОснования.Договор, НоваяСтрока.Договор);
				ИначеЕсли ЗначениеЗаполнено(Выборка.ОснованиеОснования)
					И ТипЗнч(Выборка.ОснованиеОснования) = Тип("ДокументСсылка.РасходДСПлан") Тогда
					Если ТипЗнч(Выборка.ОснованиеОснования.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
						НоваяСтрока.Заказ = Выборка.ОснованиеОснования.ДокументОснование;
					КонецЕсли;
					НоваяСтрока.Договор = ?(ЗначениеЗаполнено(Выборка.ОснованиеОснования.Договор), Выборка.ОснованиеОснования.Договор, НоваяСтрока.Договор);
				КонецЕсли;
				Пока Выборка.Следующий() Цикл
					НоваяСтрока = РасшифровкаПлатежа.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
					Если ЗначениеЗаполнено(Выборка.ОснованиеОснования)
						И ТипЗнч(Выборка.ОснованиеОснования) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
						НоваяСтрока.Заказ = Выборка.ОснованиеОснования;
						НоваяСтрока.Договор = ?(ЗначениеЗаполнено(Выборка.ОснованиеОснования.Договор), Выборка.ОснованиеОснования.Договор, НоваяСтрока.Договор);
					КонецЕсли;
				КонецЦикла;
				Если НЕ ЗначениеЗаполнено(Выборка.ОснованиеОснования) Тогда
					НоваяСтрока.Договор = Выборка.ДоговорПП;
				ИначеЕсли ТипЗнч(Выборка.ОснованиеОснования) = Тип("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
					Если Выборка.ОснованиеОснования.Контрагент = Контрагент Тогда
						НоваяСтрока.СчетНаОплату = Выборка.ОснованиеОснования;
					КонецЕсли;
				КонецЕсли;
				// Контрагент в ПП отличается от контрагента в основании ПП.
				Если НоваяСтрока.Договор.Владелец <> Контрагент Тогда
					НоваяСтрока.Договор = Выборка.ДоговорПП;
				КонецЕсли;
		Иначе
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Ссылка КАК Ссылка,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Договор КАК Договор,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.ПризнакАванса КАК ПризнакАванса,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Документ КАК Документ,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СуммаРасчетов КАК СуммаРасчетов,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Курс КАК Курс,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Кратность КАК Кратность,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СуммаПлатежа КАК СуммаПлатежа,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Заказ КАК Заказ,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СчетНаОплату КАК СчетНаОплату,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.ДокументПланирования КАК ДокументПланирования,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СуммаРасчетовКомиссии КАК СуммаРасчетовКомиссии,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СуммаПлатежаКомиссии КАК СуммаПлатежаКомиссии,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.ТипСуммы КАК ТипСуммы,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СтатьяДДС КАК СтатьяДДС,
				|	ПлатежноеПоручениеРасшифровкаПлатежа.СпособЗачета КАК СпособЗачета
				|ИЗ
				|	Документ.ПлатежноеПоручение.РасшифровкаПлатежа КАК ПлатежноеПоручениеРасшифровкаПлатежа
				|ГДЕ
				|	ПлатежноеПоручениеРасшифровкаПлатежа.Ссылка = &ДокументСсылкаПлатежноеПоручение";
			
			Запрос.УстановитьПараметр("ДокументСсылкаПлатежноеПоручение", ДокументСсылкаПлатежноеПоручение);
			
			ВыборкаРасшифровка = Запрос.Выполнить().Выбрать();
	
			Пока ВыборкаРасшифровка.Следующий() Цикл
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРасшифровка);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Если ЭтотОбъект.ВидНалога = Справочники.ВидыНалогов.Патент Тогда
		ЭтотОбъект.УчитыватьВНУ = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПлатежноеПоручение()

// Обработчик заполнения на основании документа ПриходнаяНакладная.
//
// Параметры:
//	ДокументСсылкаПриходнаяНакладная - ДокументСсылка.ПриходнаяНакладная.
//	
Процедура ЗаполнитьПоПриходнаяНакладная(ДокументСсылкаПриходнаяНакладная) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходнаяНакладная);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ЗапросБанковскиеСчета.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|						ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|					ИНАЧЕ ВложенныйЗапрос.ЗаказПоставщику
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							И ВложенныйЗапрос.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					ИНАЧЕ ВложенныйЗапрос.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаРасчетов, 0)) КАК СуммаРасчетов,
	|	ВложенныйЗапрос.Курс КАК Курс,
	|	ВложенныйЗапрос.Кратность КАК Кратность,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаПлатежа, 0)) КАК СуммаПлатежа,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				ИНАЧЕ ТаблицаДокумента.Заказ
	|			КОНЕЦ КАК ЗаказПоставщику,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ТаблицаДокумента.Заказ
	|			КОНЕЦ КАК ЗаказПокупателя,
	|			ТаблицаДокумента.Ссылка.ДокументОснование КАК ДокументОснование,
	|			&Ссылка КАК Документ,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ КАК Курс,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ КАК Кратность,
	|			ТаблицаДокумента.Всего КАК СуммаПлатежа,
	|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС КАК СуммаНДС
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Запасы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.ЗаказПоставщику,
	|			ТаблицаДокумента.Заказ,
	|			ТаблицаДокумента.Ссылка.ДокументОснование,
	|			&Ссылка,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)),
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ,
	|			ТаблицаДокумента.Всего,
	|			ТаблицаДокумента.СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Расходы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ПриходнаяНакладная.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И ПриходнаяНакладная.Организация = БанковскиеСчета.Владелец
	|		ГДЕ
	|			ПриходнаяНакладная.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ЗапросБанковскиеСчета
	|		ПО ШапкаДокумента.Организация = ЗапросБанковскиеСчета.Владелец
	|			И ШапкаДокумента.ВалютаДокумента = ЗапросБанковскиеСчета.ВалютаДенежныхСредств
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|						ТОГДА ВложенныйЗапрос.ЗаказПокупателя
	|					ИНАЧЕ ВложенныйЗапрос.ЗаказПоставщику
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|					ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ШапкаДокумента.Договор,
	|	ВложенныйЗапрос.Документ,
	|	ВложенныйЗапрос.Курс,
	|	ВложенныйЗапрос.Кратность,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходнаяНакладная.ВозвратОтПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ЗапросБанковскиеСчета.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.РасходнаяНакладная)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ДокументОснование) = ТИП(Документ.ЗаказПокупателя)
	|							И ВложенныйЗапрос.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							И ВложенныйЗапрос.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|						ТОГДА ВложенныйЗапрос.ДокументОснование
	|					ИНАЧЕ ВложенныйЗапрос.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.РасходДСПлан КАК РасходДСПлан
	|ГДЕ
	|	РасходДСПлан.ДокументОснование = &Ссылка
	|	И РасходДСПлан.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов[0];
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 1);
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	
	// Попробуем найти планируемое поступление, созданное по тому же документу основанию
	ДокументПланирования = Документы.РасходДСПлан.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[2].Пустой() Тогда
		
		ВыборкаПланирование = МассивРезультатов[2].Выбрать();
		Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
			ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		НоваяСтрока.ДокументПланирования = ДокументПланирования;
	КонецЦикла;
	
	ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоПриходнаяНакладная()

// Обработчик заполнения на основании документа ПередачаТоваровМеждуОрганизациями.
//
// Параметры:
//	ДокументСсылкаПриходнаяНакладная - ДокументСсылка.ПриходнаяНакладная.
//	
Процедура ЗаполнитьПоПередачаТоваровМеждуОрганизациями(ДокументСсылкаПередачаТоваровМеждуОрганизациями) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылкаПередачаТоваровМеждуОрганизациями, "ОрганизацияПолучатель"));
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.НашейОрганизации) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам) КАК Статья,
	|	&Ссылка КАК ДокументОснование,
	|	ШапкаДокумента.ОрганизацияПолучатель КАК Организация,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ОрганизацияПолучатель.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.ОрганизацияПолучатель.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ЗапросБанковскиеСчета.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.КонтрагентВладелец КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка) КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ЛОЖЬ КАК ПризнакАванса,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.КонтрагентВладелец.ВестиРасчетыПоДокументам
	|			ТОГДА ВложенныйЗапрос.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаРасчетов, 0)) КАК СуммаРасчетов,
	|	ВложенныйЗапрос.Курс КАК Курс,
	|	ВложенныйЗапрос.Кратность КАК Кратность,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаПлатежа, 0)) КАК СуммаПлатежа,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка) КАК ЗаказПоставщику,
	|			ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|			ТаблицаДокумента.Ссылка.ДокументОснование КАК ДокументОснование,
	|			&Ссылка КАК Документ,
	|			ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ТаблицаДокумента.Ссылка.Кратность / (ТаблицаДокумента.Ссылка.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Курс
	|				ИНАЧЕ КурсыВалютыРасчетов.Курс
	|			КОНЕЦ КАК Курс,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|					ТОГДА ТаблицаДокумента.Ссылка.Кратность
	|				ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|			КОНЕЦ КАК Кратность,
	|			ТаблицаДокумента.Всего КАК СуммаПлатежа,
	|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|			ТаблицаДокумента.СуммаНДС КАК СуммаНДС
	|		ИЗ
	|			Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|						&Дата,
	|						Валюта В
	|							(ВЫБРАТЬ
	|								КонстантаНациональнаяВалюта.Значение
	|							ИЗ
	|								Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|				ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта,
	|			Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.Ссылка = ВложенныйЗапрос.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = БанковскиеСчета.Владелец
	|		ГДЕ
	|			ПередачаТоваровМеждуОрганизациями.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ЗапросБанковскиеСчета
	|		ПО ШапкаДокумента.ОрганизацияПолучатель = ЗапросБанковскиеСчета.Владелец
	|			И ШапкаДокумента.ВалютаДокумента = ЗапросБанковскиеСчета.ВалютаДенежныхСредств
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.ОрганизацияПолучатель,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.КонтрагентВладелец,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.Договор,
	|	ВложенныйЗапрос.Документ,
	|	ВложенныйЗапрос.Курс,
	|	ВложенныйЗапрос.Кратность,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ОрганизацияПолучатель.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.ОрганизацияПолучатель.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ЗапросБанковскиеСчета.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.КонтрагентВладелец.ВестиРасчетыПоДокументам
	|			ТОГДА ВложенныйЗапрос.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты КАК ОплаченоВалДок
	|ИЗ
	|	РегистрНакопления.ОплатаДокументов КАК ОплатаДокументов
	|ГДЕ
	|	ОплатаДокументов.Документ = &Ссылка
	|	И ОплатаДокументов.Регистратор <> &СсылкаНаТекущийДокумент
	|	И ОплатаДокументов.Организация = &Организация
	|	И ОплатаДокументов.СуммаАванса + ОплатаДокументов.СуммаОплаты <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходДСПлан.Ссылка КАК ДокументПланирования
	|ИЗ
	|	Документ.РасходДСПлан КАК РасходДСПлан
	|ГДЕ
	|	РасходДСПлан.ДокументОснование = &Ссылка
	|	И РасходДСПлан.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов[0];
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 1);
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	РасшифровкаПлатежа.Очистить();
	
	// Попробуем найти планируемое поступление, созданное по тому же документу основанию
	ДокументПланирования = Документы.РасходДСПлан.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") И НЕ МассивРезультатов[2].Пустой() Тогда
		
		ВыборкаПланирование = МассивРезультатов[2].Выбрать();
		Если ВыборкаПланирование.Количество() = 1 И ВыборкаПланирование.Следующий() Тогда
			ДокументПланирования = ВыборкаПланирование.ДокументПланирования;
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		НоваяСтрока.ДокументПланирования = ДокументПланирования;
	КонецЦикла;
	
	ЭтотОбъект.СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоПриходнаяНакладная()

// Обработчик заполнения на основании документа ДокументСсылкаДополнительныеРасходы.
//
// Параметры:
//	ДокументСсылкаДополнительныеРасходы - ДокументСсылка.ДополнительныеРасходы.
//	
Процедура ЗаполнитьПоДополнительныеРасходы(ДокументСсылкаДополнительныеРасходы) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаДополнительныеРасходы);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ШапкаДокумента.ЗаказПоставщику
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.Всего, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ДополнительныеРасходы КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительныеРасходы.Расходы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ДополнительныеРасходы КАК ДополнительныеРасходы
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ДополнительныеРасходы.Организация = БанковскиеСчета.Владелец
	|					И ДополнительныеРасходы.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ДополнительныеРасходы.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ШапкаДокумента.ЗаказПоставщику,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ШапкаДокумента.ЗаказПоставщику
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоДополнительныеРасходы()

// Обработчик заполнения на основании документа ОтчетКомиссионера.
//
// Параметры:
//	ДокументСсылкаОтчетКомиссионера - ДокументСсылка.ОтчетКомиссионера.
//	
Процедура ЗаполнитьПоОтчетКомиссионера(ДокументСсылкаОтчетКомиссионера) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетКомиссионера);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|	КОНЕЦ КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|			ТОГДА ШапкаДокумента.Договор.ДоговорУслугиКомиссионногоВознаграждения
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах)
	|			ТОГДА ШапкаДокумента.Договор
	|	КОНЕЦ КАК Договор,
	|	СУММА(ВЫБОР
	|			КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|				ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА ШапкаДокумента.СуммаВключаетНДС
	|									ТОГДА ТаблицаДокумента.СуммаВознаграждения
	|								ИНАЧЕ ТаблицаДокумента.СуммаВознаграждения + ТаблицаДокумента.СуммаНДСВознаграждения
	|							КОНЕЦ * ВЫБОР
	|								КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|									ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|								ИНАЧЕ 1
	|							КОНЕЦ КАК ЧИСЛО(15, 2)), 0)
	|			ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ВЫБОР
	|							КОГДА ШапкаДокумента.СуммаВключаетНДС
	|								ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаВознаграждения
	|							ИНАЧЕ ТаблицаДокумента.Сумма - (ТаблицаДокумента.СуммаВознаграждения + ТаблицаДокумента.СуммаНДСВознаграждения)
	|						КОНЕЦ * ВЫБОР
	|							КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|								ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|							ИНАЧЕ 1
	|						КОНЕЦ КАК ЧИСЛО(15, 2)), 0)
	|		КОНЕЦ) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ВЫБОР
	|			КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|				ТОГДА ЕСТЬNULL(ВЫБОР
	|							КОГДА ШапкаДокумента.СуммаВключаетНДС
	|								ТОГДА ТаблицаДокумента.СуммаВознаграждения
	|							ИНАЧЕ ТаблицаДокумента.СуммаВознаграждения + ТаблицаДокумента.СуммаНДСВознаграждения
	|						КОНЕЦ, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВЫБОР
	|						КОГДА ШапкаДокумента.СуммаВключаетНДС
	|							ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаВознаграждения
	|						ИНАЧЕ ТаблицаДокумента.Сумма - (ТаблицаДокумента.СуммаВознаграждения + ТаблицаДокумента.СуммаНДСВознаграждения)
	|					КОНЕЦ, 0)
	|		КОНЕЦ) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|				ТОГДА ЕСТЬNULL(ТаблицаДокумента.СуммаНДСВознаграждения, 0)
	|			ИНАЧЕ ЕСТЬNULL(ТаблицаДокумента.СуммаНДС, 0) - ЕСТЬNULL(ТаблицаДокумента.СуммаНДСВознаграждения, 0)
	|		КОНЕЦ) КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Запасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ОтчетКомиссионера КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.СтавкаНДС,
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|			ТОГДА ШапкаДокумента.Договор.ДоговорУслугиКомиссионногоВознаграждения
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах)
	|			ТОГДА ШапкаДокумента.Договор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионера)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику)
	|		КОГДА ШапкаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетКомиссионераОВозвратах)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Покупателю)
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПоДополнительныеРасходы()

// Обработчик заполнения на основании документа ОтчетКомитенту.
//
// Параметры:
//	ДокументСсылкаОтчетКомитенту - ДокументСсылка.ОтчетКомитенту.
//	
Процедура ЗаполнитьПоОтчетКомитенту(ДокументСсылкаОтчетКомитенту) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаОтчетКомитенту);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПоставщику
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	СУММА(ЕСТЬNULL(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НЕ ШапкаДокумента.СуммаВключаетНДС
	|						ТОГДА ВЫБОР
	|								КОГДА ШапкаДокумента.УдержатьКомиссионноеВознаграждение
	|									ТОГДА ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения
	|								ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ШапкаДокумента.УдержатьКомиссионноеВознаграждение
	|								ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаВознаграждения
	|							ИНАЧЕ ТаблицаДокумента.Сумма
	|						КОНЕЦ
	|				КОНЕЦ * ВЫБОР
	|					КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|						ТОГДА КурсыРегВалют.Курс * ШапкаДокумента.Кратность / (ШапкаДокумента.Курс * ЕСТЬNULL(КурсыРегВалют.Кратность, 1))
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2)), 0)) КАК СуммаРасчетов,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ КАК Кратность,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА НЕ ШапкаДокумента.СуммаВключаетНДС
	|					ТОГДА ВЫБОР
	|							КОГДА ШапкаДокумента.УдержатьКомиссионноеВознаграждение
	|								ТОГДА ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения
	|							ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ШапкаДокумента.УдержатьКомиссионноеВознаграждение
	|							ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаВознаграждения
	|						ИНАЧЕ ТаблицаДокумента.Сумма
	|					КОНЕЦ
	|			КОНЕЦ, 0)) КАК СуммаПлатежа,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА ШапкаДокумента.УдержатьКомиссионноеВознаграждение
	|					ТОГДА ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДСВознаграждения
	|				ИНАЧЕ ТаблицаДокумента.СуммаНДС
	|			КОНЕЦ, 0)) КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту.Запасы КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&Дата,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						КонстантаНациональнаяВалюта.Значение
	|					ИЗ
	|						Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта)) КАК КурсыРегВалют
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютыРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ОтчетКомитенту КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ШапкаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ШапкаДокумента.Организация,
	|	ШапкаДокумента.НалогообложениеНДС,
	|	ШапкаДокумента.Контрагент,
	|	ШапкаДокумента.ВалютаДокумента,
	|	ТаблицаДокумента.ЗаказПоставщику,
	|	ШапкаДокумента.Договор,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Курс
	|		ИНАЧЕ КурсыВалютыРасчетов.Курс
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ВалютаДокумента = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ШапкаДокумента.Кратность
	|		ИНАЧЕ КурсыВалютыРасчетов.Кратность
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА ТаблицаДокумента.ЗаказПоставщику
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		РасшифровкаПлатежа.Очистить();
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ЭтотОбъект.СуммаДокумента = Выборка.СуммаПлатежа;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЭтотОбъект.СуммаДокумента = ЭтотОбъект.СуммаДокумента + Выборка.СуммаПлатежа;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоОтчетКомитенту()

// Обработчик заполнения на основании документа СчетНаОплатуПоставщика.
//
// Параметры:
//	ДокументСсылкаСчетНаОплатуПоставщика - ДокументСсылка.СчетНаОплатуПоставщика.
//	
Процедура ЗаполнитьПоСчетНаОплатуПоставщика(ДокументСсылкаСчетНаОплатуПоставщика, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплатуПоставщика);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Если ТипЗнч(ДокументСсылкаСчетНаОплатуПоставщика.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Запрос.УстановитьПараметр("Заказ", ДокументСсылкаСчетНаОплатуПоставщика.ДокументОснование);
		Иначе
			Запрос.УстановитьПараметр("Заказ", Документы.ЗаказПоставщику.ПустаяСсылка());
		КонецЕсли;
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Заказ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПоставщика.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплатуПоставщика КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда // Ввод на основании из формы списка.
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплатуПоставщика);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Если ТипЗнч(ДокументСсылкаСчетНаОплатуПоставщика.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Запрос.УстановитьПараметр("Заказ", ДокументСсылкаСчетНаОплатуПоставщика.ДокументОснование);
		Иначе
			Запрос.УстановитьПараметр("Заказ", Документы.ЗаказПоставщику.ПустаяСсылка());
		КонецЕсли;
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Заказ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПоставщика.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплатуПоставщика КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ШапкаДокумента.ДокументОснование,
		|	ТаблицаДокумента.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ШапкаДокумента.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|	КОНЕЦ,
		|	КурсыВалютДокумента.Курс,
		|	КурсыВалютБанковскогоСчета.Курс,
		|	КурсыВалютРасчетов.Курс";
		
	Иначе // Ввод на основании из формы элемента
	
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаСчетНаОплатуПоставщика.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Если ТипЗнч(ДокументСсылкаСчетНаОплатуПоставщика.Основание.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Запрос.УстановитьПараметр("Заказ", ДокументСсылкаСчетНаОплатуПоставщика.Основание.ДокументОснование);
		Иначе
			Запрос.УстановитьПараметр("Заказ", Документы.ЗаказПоставщику.ПустаяСсылка());
		КонецЕсли;
	
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам
		|			ТОГДА ТаблицаДокумента.Ссылка.ДокументОснование
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам
		|			ТОГДА ТаблицаДокумента.Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
		|	КОНЕЦ КАК СчетНаОплату,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДСОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Заказ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокумента.Ссылка КАК Ссылка,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			Документ.СчетНаОплатуПоставщика.Запасы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.СчетНаОплатуПоставщика КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ТаблицаДокумента.Ссылка.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Заказ) Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////"
		+ Символы.ПС +
		"ВЫБРАТЬ
		|	ПриходнаяНакладная.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Заказ = &Заказ
		|	И ПриходнаяНакладная.СуммаДокумента = &СуммаЗаказа
		|	И ПриходнаяНакладная.Проведен
		|	И ПриходнаяНакладная.Контрагент.ВестиРасчетыПоДокументам";
		
		Запрос.УстановитьПараметр("СуммаЗаказа", Запрос.Параметры.Заказ.СуммаДокумента);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		Выборка = МассивРезультатов[0].Выбрать();
		ЭтоПакетЗапросов = Истина;
	Иначе
		Выборка = Запрос.Выполнить().Выбрать();
		ЭтоПакетЗапросов = Ложь;
	КонецЕсли;
	
	РасшифровкаПлатежа.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
		КонецЕсли;
		
		Если ЭтоПакетЗапросов Тогда
			ВыборкаДокумент = МассивРезультатов[1].Выбрать();
			Если ВыборкаДокумент.Следующий() Тогда
				НоваяСтрока.Документ = ВыборкаДокумент.Ссылка;
				НоваяСтрока.ПризнакАванса = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоСчетНаОплатуПоставщика()

// Обработчик заполнения на основании документа ЗаказПоставщику.
//
// Параметры:
//	ДокументСсылкаЗаказПоставщику - ДокументСсылка.ЗаказПоставщику.
//	
Процедура ЗаполнитьПоЗаказПоставщику(ДокументСсылкаЗаказПоставщику, НомерСтроки = Неопределено, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос();
	
	ВыполнятьПакет = Ложь;
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		// Заполним данные табличных частей документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(&Сумма * ВЫБОР
		|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПоставщику КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 1) = 1";
		
	ИначеЕсли НомерСтроки = Неопределено Тогда
		
		ВыполнятьПакет = Истина;
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("СсылкаНаТекущийДокумент", Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ШапкаДокумента.Организация КАК Организация,
		|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ШапкаДокумента.Контрагент КАК Контрагент,
		|	ШапкаДокумента.Договор КАК Договор,
		|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ЕСТЬNULL(КурсыВалютДокумента.Курс, 1) КАК КурсДокумента,
		|	ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1) КАК КратностьДокумента,
		|	ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) КАК КурсСчета,
		|	ЕСТЬNULL(КурсыВалютБанковскогоСчета.Кратность, 1) КАК КратностьСчета,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
		|						И КурсыВалютРасчетов.Курс <> 0
		|						И КурсыВалютДокумента.Кратность <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаРасчетов,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаПлатежа,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
		|	СУММА(ВЫРАЗИТЬ(ТаблицаДокумента.Всего * ВЫБОР
		|				КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|						И КурсыВалютДокумента.Кратность <> 0
		|						И КурсыВалютБанковскогоСчета.Курс <> 0
		|					ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаДокумента,
		|	ШапкаДокумента.Договор.ВалютаРасчетов КАК ВалютаРасчетов
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ШапкаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Запасы КАК ТаблицаДокумента
		|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПоставщику КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ),
		|			Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И (НЕ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					ИЛИ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И БанковскиеСчета.ВалютаДенежныхСредств = НациональнаяВалюта.Значение)) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ШапкаДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ШапкаДокумента.Организация,
		|	ШапкаДокумента.НалогообложениеНДС,
		|	ШапкаДокумента.ВалютаДокумента,
		|	ШапкаДокумента.Контрагент,
		|	ШапкаДокумента.Договор,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет,
		|	ТаблицаДокумента.СтавкаНДС,
		|	КурсыВалютРасчетов.Курс,
		|	КурсыВалютРасчетов.Кратность,
		|	КурсыВалютДокумента.Курс,
		|	КурсыВалютДокумента.Кратность,
		|	КурсыВалютБанковскогоСчета.Курс,
		|	КурсыВалютБанковскогоСчета.Кратность,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ШапкаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|			ТОГДА ШапкаДокумента.БанковскийСчет
		|		КОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ШапкаДокумента.Договор.ВалютаРасчетов
		|			ТОГДА ШапкаДокумента.Организация.БанковскийСчетПоУмолчанию
		|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
		|	КОНЕЦ,
		|	ШапкаДокумента.Договор.ВалютаРасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты КАК ОплаченоВалДок
		|ИЗ
		|	РегистрНакопления.ОплатаСчетовИЗаказов КАК ОплатаСчетовИЗаказов
		|ГДЕ
		|	ОплатаСчетовИЗаказов.СчетНаОплату = &Ссылка
		|	И ОплатаСчетовИЗаказов.Регистратор <> &СсылкаНаТекущийДокумент
		|	И ОплатаСчетовИЗаказов.СуммаАванса + ОплатаСчетовИЗаказов.СуммаОплаты <> 0";
		
	Иначе
	
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику.Основание);
		Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		
		// Заполним данные шапки документа.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам
		|			ТОГДА &Ссылка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|	КОНЕЦ КАК Заказ,
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
		|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
		|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
		|	ТаблицаДокумента.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	ИСТИНА КАК ПризнакАванса,
		|	ЕСТЬNULL(ТаблицаДокументаСтавкиНДС.СтавкаНДС, СтавкиНДС.СтавкаНДС) КАК СтавкаНДС,
		|	КурсыВалютРасчетов.Курс КАК Курс,
		|	КурсыВалютРасчетов.Кратность КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов
		|					И КурсыВалютРасчетов.Курс <> 0
		|					И КурсыВалютДокумента.Кратность <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДСОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаОплаты * ВЫБОР
		|			КОГДА ТаблицаДокумента.Ссылка.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
		|					И КурсыВалютДокумента.Кратность <> 0
		|					И КурсыВалютБанковскогоСчета.Курс <> 0
		|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
		|ИЗ
		|	Документ.ЗаказПоставщику.ПлатежныйКалендарь КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			СтавкиНДС.Ссылка КАК СтавкаНДС
		|		ИЗ
		|			Справочник.СтавкиНДС КАК СтавкиНДС
		|		ГДЕ
		|			СтавкиНДС.Ставка = 18
		|			И СтавкиНДС.ПометкаУдаления = ЛОЖЬ
		|			И СтавкиНДС.Расчетная = ЛОЖЬ) КАК СтавкиНДС
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ТаблицаДокумента.Ссылка КАК Ссылка,
		|			ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС
		|		ИЗ
		|			Документ.ЗаказПоставщику.Запасы КАК ТаблицаДокумента
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаСтавкиНДС
		|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаСтавкиНДС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
		|		ПО ТаблицаДокумента.Ссылка.ВалютаДокумента = КурсыВалютДокумента.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
		|			КОНЕЦ КАК БанковскийСчет,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
		|			КОНЕЦ КАК ВалютаДенежныхСредств,
		|			ВЫБОР
		|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
		|				КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = НациональнаяВалюта.Значение
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
		|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
		|					ТОГДА БанковскиеСчета.Ссылка.Владелец
		|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
		|			КОНЕЦ КАК Владелец
		|		ИЗ
		|			Документ.ЗаказПоставщику КАК ТаблицаДокумента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
		|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ),
		|			Константа.НациональнаяВалюта КАК НациональнаяВалюта
		|		ГДЕ
		|			ТаблицаДокумента.Ссылка = &Ссылка
		|			И (НЕ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
		|					ИЛИ ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
		|						И БанковскиеСчета.ВалютаДенежныхСредств = НациональнаяВалюта.Значение)) КАК ВложенныйЗапрос
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
		|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
		|		ПО ТаблицаДокумента.Ссылка.Организация = ВложенныйЗапрос.Владелец
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И ТаблицаДокумента.НомерСтроки = &НомерСтроки";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Ссылка) Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////"
		+ Символы.ПС +
		"ВЫБРАТЬ
		|	ПриходнаяНакладная.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Заказ = &Ссылка
		|	И ПриходнаяНакладная.СуммаДокумента = &СуммаЗаказа
		|	И ПриходнаяНакладная.Проведен
		|	И ПриходнаяНакладная.Контрагент.ВестиРасчетыПоДокументам;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПоставщикамиОстатки.Документ КАК Документ
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками.Остатки(
		|			,
		|			Заказ = &Ссылка
		|				И ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
		|				И Документ.МоментВремени < &ДатаОплаты) КАК РасчетыСПоставщикамиОстатки";
		
		Запрос.УстановитьПараметр("СуммаЗаказа", Запрос.Параметры.Ссылка.СуммаДокумента);
		Запрос.УстановитьПараметр("ДатаОплаты", Новый МоментВремени(Запрос.Параметры.Дата, Ссылка));
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		Выборка = МассивРезультатов[0].Выбрать();
		ЕстьПараметрСсылка = Истина;
	Иначе
		Выборка = Запрос.Выполнить().Выбрать();
		ЕстьПараметрСсылка = Ложь;
	КонецЕсли;
	
	РасшифровкаПлатежа.Очистить();
	
	Если ВыполнятьПакет Тогда
		
		Если ЕстьПараметрСсылка Тогда
			РезультатЗапроса = МассивРезультатов[0];
		Иначе
			МассивРезультатов = Запрос.ВыполнитьПакет();
			РезультатЗапроса = МассивРезультатов[0];
			Выборка = РезультатЗапроса.Выбрать();
		КонецЕсли;
		
		РасшифровкаПлатежа.Очистить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка.Следующий();
			
			ТаблицаДанных = РасчетыСлужебный.УчестьОплатуДругимиДокументами(МассивРезультатов, 1, Выборка);
			
			ДокументДляСтроки = Неопределено;
			Если ЕстьПараметрСсылка Тогда
				ВыборкаДокумент = МассивРезультатов[2].Выбрать();
				Если ВыборкаДокумент.Следующий() Тогда
					ДокументДляСтроки = ВыборкаДокумент.Ссылка;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ДокументДляСтроки) Тогда
					ВыборкаДокумент = МассивРезультатов[3].Выбрать();
					Если ВыборкаДокумент.Количество() = 1 И ВыборкаДокумент.Следующий() Тогда
						ДокументДляСтроки = ВыборкаДокумент.Документ;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			// Заполним реквизиты шапки.
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
				ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
			КонецЕсли;
			
			// Заполним расшифровку платежа
			Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
				
				Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
					РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
				КонецЕсли;
				
				Если ДокументДляСтроки <> Неопределено Тогда
					НоваяСтрока.Документ = ДокументДляСтроки;
					НоваяСтрока.ПризнакАванса = Ложь;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
	
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
				ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
			КонецЕсли;
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
				РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
			КонецЕсли;
			
			Если ЕстьПараметрСсылка Тогда
				ВыборкаДокумент = МассивРезультатов[1].Выбрать();
				Если ВыборкаДокумент.Следующий() Тогда
					НоваяСтрока.Документ = ВыборкаДокумент.Ссылка;
					НоваяСтрока.ПризнакАванса = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьАналитикуПоЗаказу(ДокументСсылкаЗаказПоставщику);
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоЗаказПоставщику()

// Процедура заполнения на основании документа ЗаказПоставщику
//
// Параметры:
//	ДокументСсылкаЗаказПоставщику - ДокументСсылка.ЗаказПоставщику.
//
Процедура ЗаполнитьПоЗаказуПоставщикуСУчетомОстатковКОплате(ДокументСсылкаЗаказПоставщику)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказПоставщику);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Поставщику) КАК ВидОперации,
	|	&Дата КАК Дата,
	|	&Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.Контрагент.ВестиРасчетыПоЗаказам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ШапкаДокумента.Организация КАК Организация,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВложенныйЗапрос.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВложенныйЗапрос.БанковскийСчет КАК БанковскийСчет,
	|	ШапкаДокумента.Контрагент КАК Контрагент,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ИСТИНА КАК ПризнакАванса,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	КурсыВалютРасчетов.Курс КАК Курс,
	|	КурсыВалютРасчетов.Кратность КАК Кратность,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ШапкаДокумента.Договор.ВалютаРасчетов
	|					И КурсыВалютРасчетов.Курс <> 0
	|					И КурсыВалютДокумента.Кратность <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютРасчетов.Кратность / (ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * (1 - 1 / ((ЕСТЬNULL(ТаблицаДокумента.СтавкаНДС.Ставка, 0) + 100) / 100)) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ОплатаСчетовИЗаказовОбороты.СуммаОборот - ОплатаСчетовИЗаказовОбороты.СуммаОплатыОборот - ОплатаСчетовИЗаказовОбороты.СуммаАвансаОборот) * ВЫБОР
	|			КОГДА ШапкаДокумента.ВалютаДокумента <> ВложенныйЗапрос.ВалютаДенежныхСредств
	|					И КурсыВалютДокумента.Кратность <> 0
	|					И КурсыВалютБанковскогоСчета.Курс <> 0
	|				ТОГДА КурсыВалютДокумента.Курс * КурсыВалютБанковскогоСчета.Кратность / (ЕСТЬNULL(КурсыВалютБанковскогоСчета.Курс, 1) * ЕСТЬNULL(КурсыВалютДокумента.Кратность, 1))
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			&Ссылка КАК Ссылка,
	|			ЗаказПоставщикуЗапасы.СтавкаНДС КАК СтавкаНДС
	|		ИЗ
	|			Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
	|		ГДЕ
	|			ЗаказПоставщикуЗапасы.Ссылка = &Ссылка) КАК ТаблицаДокумента
	|		ПО ШапкаДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОплатаСчетовИЗаказов.Обороты КАК ОплатаСчетовИЗаказовОбороты
	|		ПО ШапкаДокумента.Ссылка = ОплатаСчетовИЗаказовОбороты.СчетНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ШапкаДокумента.Договор.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютДокумента
	|		ПО ШапкаДокумента.ВалютаДокумента = КурсыВалютДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|			КОНЕЦ КАК БанковскийСчет,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.ВалютаДенежныхСредств
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			КОНЕЦ КАК ВалютаДенежныхСредств,
	|			ВЫБОР
	|				КОГДА ТаблицаДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.БанковскийСчет.Владелец
	|				КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = ТаблицаДокумента.Договор.ВалютаРасчетов
	|					ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|				КОГДА ЕСТЬNULL(БанковскиеСчета.Ссылка, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|					ТОГДА БанковскиеСчета.Ссылка.Владелец
	|				ИНАЧЕ ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.Владелец
	|			КОНЕЦ КАК Владелец
	|		ИЗ
	|			Документ.ЗаказПоставщику КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|					И (БанковскиеСчета.ПометкаУдаления = ЛОЖЬ)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютБанковскогоСчета
	|			ПО ВложенныйЗапрос.ВалютаДенежныхСредств = КурсыВалютБанковскогоСчета.Валюта
	|		ПО ШапкаДокумента.Организация = ВложенныйЗапрос.Владелец
	|ГДЕ
	|	ШапкаДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
			ВалютаДенежныхСредств = Выборка.ВалютаДокумента;
		КонецЕсли;
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если НЕ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
			РасчетыПроведениеДокументов.ЗаполнитьСтавкуНДСПоНалогообложениеНДС(НоваяСтрока, НалогообложениеНДС);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьАналитикуПоЗаказу(ДокументСсылкаЗаказПоставщику);
	
	СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры // ЗаполнитьПоЗаказуПоставщикуСУчетомОстатковКОплате()

// Обработчик заполнения на основании документа ПлатежнаяВедомость.
//
// Параметры:
//	ДокументСсылкаПлатежнаяВедомость - ДокументСсылка.ПлатежнаяВедомость.
//	
Процедура ЗаполнитьПоПлатежнаяВедомость(ДокументСсылкаПлатежнаяВедомость) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПлатежнаяВедомость);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.СтруктурнаяЕдиница КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Зарплата) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	&Ссылка КАК Ведомость,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВалютаДокумента = ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств
	|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокумента.Ссылка) КАК Основание,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
	|	ТаблицаДокумента.ВалютаДокумента КАК ВалютаДенежныхСредств
	|ИЗ
	|	Документ.ПлатежнаяВедомость КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.ПлатежнаяВедомость КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И ТаблицаДокумента.ВалютаДокумента = БанковскиеСчета.ВалютаДенежныхСредств
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ТаблицаДокумента.ВалютаДокумента = ВложенныйЗапрос.ВалютаДенежныхСредств
	|			И ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ВыплатаЗаработнойПлаты.Очистить();
	НоваяСтрока = ВыплатаЗаработнойПлаты.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	
КонецПроцедуры // ЗаполнитьПоПлатежнаяВедомость()

// Обработчик заполнения на основании документа НачислениеНалогов.
//
// Параметры:
//	ДокументСсылкаНачислениеНалогов - ДокументСсылка.НачислениеНалогов.
//	
Процедура ЗаполнитьПоНачислениеНалогов(ДокументСсылкаНачислениеНалогов) Экспорт
	
	Если ДокументСсылкаНачислениеНалогов.ВидОперации <> Перечисления.ВидыОперацийНачислениеНалогов.Начисление Тогда
		ВызватьИсключение НСтр("ru='Расход со счета можно ввести только на основании начисления налогов, а не возмещения.'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаНачислениеНалогов);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("КонстантаНациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("КонстантаВалютаУчета", Константы.ВалютаУчета.Получить());
	
	Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Налоги) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.Прочее) КАК Статья,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта
	|			ТОГДА ТаблицаДокумента.Организация.БанковскийСчетПоУмолчанию
	|		ИНАЧЕ ВложенныйЗапрос.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	&КонстантаНациональнаяВалюта КАК ВалютаДенежныхСредств,
	|	ВТСтавкиНДСОрганизация.СтавкаНДС КАК СтавкаНДС,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютУчета.Курс * 1 / (1 * ЕСТЬNULL(КурсыВалютУчета.Кратность, 1)) КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
	|	ТаблицаДокументаНалоги.ВидНалога КАК ВидНалога,
	|	ТаблицаДокументаНалоги.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.НачислениеНалогов КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаДокумента.Ссылка КАК Ссылка,
	|			ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|			ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|		ИЗ
	|			Документ.НачислениеНалогов.Налоги КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка) КАК ТаблицаДокументаНалоги
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаНалоги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &КонстантаВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДСОрганизация
	|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДСОрганизация.ВидСтавкиНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			БанковскиеСчета.Ссылка КАК БанковскийСчет,
	|			БанковскиеСчета.Владелец КАК Владелец,
	|			БанковскиеСчета.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|		ИЗ
	|			Документ.НачислениеНалогов КАК ТаблицаДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|				ПО ТаблицаДокумента.Организация = БанковскиеСчета.Владелец
	|					И (БанковскиеСчета.ВалютаДенежныхСредств = &КонстантаНациональнаяВалюта)
	|		ГДЕ
	|			ТаблицаДокумента.Ссылка = &Ссылка
	|			И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ТаблицаДокумента.Организация = ВложенныйЗапрос.Владелец
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		РасшифровкаПлатежа.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоНачислениеНалогов()

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходДСПлан")] = "ЗаполнитьПоРасходДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеДСПлан")] = "ЗаполнитьПоПеремещениеДСПлан";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПлатежноеПоручение")] = "ЗаполнитьПоПлатежноеПоручение";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПриходнаяНакладная")] = "ЗаполнитьПоПриходнаяНакладная";
	СтратегияЗаполнения[Тип("ДокументСсылка.ДополнительныеРасходы")] = "ЗаполнитьПоДополнительныеРасходы";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетКомиссионера")] = "ЗаполнитьПоОтчетКомиссионера";
	СтратегияЗаполнения[Тип("ДокументСсылка.ОтчетКомитенту")] = "ЗаполнитьПоОтчетКомитенту";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПлатежнаяВедомость")] = "ЗаполнитьПоПлатежнаяВедомость";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПоставщику")] = "ЗаполнитьПоЗаказПоставщику";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплатуПоставщика")] = "ЗаполнитьПоСчетНаОплатуПоставщика";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачислениеНалогов")] = "ЗаполнитьПоНачислениеНалогов";
	СтратегияЗаполнения[Тип("ДокументСсылка.ДоговорКредитаИЗайма")] = "ЗаполнитьПоДоговоруКредитаЗайма";
	СтратегияЗаполнения[Тип("ДокументСсылка.НачисленияПоКредитамИЗаймам")] = "ЗаполнитьПоНачисленияПоКредитамИЗаймам";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")] = "ЗаполнитьПоПередачаТоваровМеждуОрганизациями";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, "АналитикаПрочихДоходовИРасходов");
	РасчетыПроведениеДокументов.ЗаполнитьСпособЗачетаВРасшифровкеПлатежа(ЭтотОбъект);
	
	Если ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ЛичныеСредстваПредпринимателя
		И Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
	    Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВозвратОплатыНаПлатежныеКарты
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВозвратПродажиВКредит
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Зарплата Тогда
		ПоложениеСтатьи = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьДокументыПланирования = Истина;
	
	// Удаление проверяемых реквизитов из структуры, в зависимости от вида
	// операции.
	Если ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Поставщику
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Покупателю
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.НашейОрганизации  Тогда
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
		Если НЕ ((ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Поставщику ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.НашейОрганизации) И
			ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.СПомощником) Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		Иначе
			// Если нет строки с авансом, то и договор аванса заполнять не нужно.
			ЕстьАванс = Ложь;
			Для Каждого ТекущаяСтрока Из РасшифровкаПлатежа Цикл
				Если ТекущаяСтрока.ПризнакАванса Тогда
					ЕстьАванс = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ЕстьАванс Тогда
				ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
			КонецЕсли;
		КонецЕсли;
		
		ПогашатьАвтоматически = ((ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Поставщику 
			ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.НашейОрганизации) И 
			ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.Автоматически);
			
		Если Не ПогашатьАвтоматически Тогда
			
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
			
		Иначе
			
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
			
			Для каждого СтрокаДоговоры Из ДоговорыАвтоЗачетаДолгов Цикл
				
				Если (СтрокаДоговоры.Договор.Пустая() И СтрокаДоговоры.СуммаПлатежа > 0) ИЛИ
					(НЕ СтрокаДоговоры.Договор.Пустая() И СтрокаДоговоры.СуммаПлатежа = 0) Тогда
					
					ТекстСообщения = СтрШаблон(НСтр(
						"ru = 'Для договора под №%1 нужно очистить сумму или выбрать договор.'"),
						СтрокаДоговоры.НомерСтроки);
					КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаПлатежа",
						СтрокаДоговоры.НомерСтроки, "Документ");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ПогашатьАвтоматическиСРазнесениемПоДоговорам = (ПогашатьАвтоматически И (ДоговорыАвтоЗачетаДолгов.Количество() > 1));
		Если ПогашатьАвтоматическиСРазнесениемПоДоговорам Тогда
			СуммаПлатежа = ДоговорыАвтоЗачетаДолгов.Итог("СуммаПлатежа");
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей по договорам: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
		Иначе
			СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
		КонецЕсли;
		
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		Если НЕ Контрагент.ВестиРасчетыПоДоговорам Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		КонецЕсли;
		
		// В случае возврата нужно обязательно указать документ, если учет по документам ведется.
		Если Контрагент.ВестиРасчетыПоДокументам
			И ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Покупателю Тогда
			Для Каждого СтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаРасшифровкаПлатежа.Документ) Тогда
					Если РасшифровкаПлатежа.Количество() = 1 Тогда
						ТекстСообщения = НСтр("ru = 'Укажите документ расчетов.'");
					Иначе
						ТекстСообщения = СтрШаблон(НСтр(
							"ru = 'Укажите документ расчетов в строке %НомерСтроки% списка ""Расшифровка платежа"".'"),
							СтрокаРасшифровкаПлатежа.НомерСтроки);
					КонецЕсли;
					КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаПлатежа",
						СтрокаРасшифровкаПлатежа.НомерСтроки, "Документ");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Подотчетнику Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Зарплата Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
		СуммаПлатежа = ВыплатаЗаработнойПлаты.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		Для Каждого СтрокаВедомости Из ВыплатаЗаработнойПлаты Цикл
			Если СтрокаВедомости.Ведомость.ВалютаДокумента <> ВалютаДенежныхСредств Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Валюта документа (%1) не соответствует валюте платежной ведомости (%2)'"),
					СокрЛП(ВалютаДенежныхСредств), СтрокаВедомости.Ведомость.ВалютаДокумента);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыплатаЗаработнойПлаты",
					СтрокаВедомости.НомерСтроки, "Ведомость");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, КонтекстноеПоле, , Отказ);
			КонецЕсли;
		КонецЦикла;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ЗарплатаСотруднику Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");

	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Прочее Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.КомиссияБанка Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ЛичныеСредстваПредпринимателя Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.НаРасходы Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	// Эквайринг
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВозвратОплатыНаПлатежныеКарты
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВозвратПродажиВКредит Тогда
		
		ПараметрыЭквайринга = ЭквайринговыеОперацииСервер.ПолучитьПараметрыЭквайрингаДляДокумента(ЭтотОбъект);
		
		Если НЕ ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
			СчПроверяемыхРеквизитов = ПроверяемыеРеквизиты.Количество();
			Пока СчПроверяемыхРеквизитов > 0 Цикл
				Если СтрНайти(ПроверяемыеРеквизиты[СчПроверяемыхРеквизитов-1], "ЭквайринговыеОперации") Тогда
					ПроверяемыеРеквизиты.Удалить(СчПроверяемыхРеквизитов-1);
				КонецЕсли;
					
				СчПроверяемыхРеквизитов = СчПроверяемыхРеквизитов - 1;
			КонецЦикла;
		КонецЕсли;
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Документ");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "СуммаУчета");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
		Если ПоложениеНастроекНалоговогоУчета = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "НалогообложениеНДС");
		Иначе
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации.НалогообложениеНДС");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ПоложениеЭквайринговогоТерминала) ИЛИ ПоложениеЭквайринговогоТерминала = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации.ЭквайринговыйТерминал");
		Иначе
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		КонецЕсли;
		
		СчПроверяемыхРеквизитов = ПроверяемыеРеквизиты.Количество();
		Пока СчПроверяемыхРеквизитов > 0 Цикл
			Если СтрНайти(ПроверяемыеРеквизиты[СчПроверяемыхРеквизитов-1], "РасшифровкаПлатежа") Тогда
				ПроверяемыеРеквизиты.Удалить(СчПроверяемыхРеквизитов-1);
			КонецЕсли;
				
			СчПроверяемыхРеквизитов = СчПроверяемыхРеквизитов - 1;
		КонецЦикла;
		
		Если ЭквайринговыйТерминал.СчетЗатрат.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		КонецЕсли;
		
		Если ПараметрыЭквайринга.КонтрольВзаиморасчетовЭквайринг Тогда
			
			//Проверим сумму платежа
			СуммаПлатежа = ЭквайринговыеОперации.Итог("СуммаПлатежаИтогоПоСтроке");
			Если СуммаПлатежа <> СуммаДокумента Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3'"),
					СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
			КонецЕсли;
		Иначе
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации.Документ");
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	// Конец Эквайринг
	// Прочие расчеты
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВыдачаЗаймаСотруднику Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		Если Подотчетник.Пустая() Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Сотрудник"" не заполнено.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Подотчетник", Отказ);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.РасчетыПоКредитам Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ПрочиеРасчеты Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Подразделение");
		КонецЕсли;
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
		СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		Если СуммаПлатежа <> СуммаДокумента Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Сумма документа: %1 %3, не соответствует сумме разнесенных платежей в табличной части: %2 %3.'"),
				СуммаДокумента, СуммаПлатежа, СокрЛП(ВалютаДенежныхСредств));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
		КонецЕсли;
		
		ПроверитьДокументыПланирования = Ложь;
		
	// Конец Прочие расчеты
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.СнятиеНаличных Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ПереводНаДругойСчет Тогда
		
		ПроверяемыеРеквизиты.Добавить("СчетКонтрагента");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидНалога");
		Если Корреспонденция.ТипСчета <> Перечисления.ТипыСчетов.Расходы Тогда
			ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Налоги Тогда
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	Иначе
		
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подотчетник");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Контрагент");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Корреспонденция");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Подразделение");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Договор");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ПризнакАванса");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СуммаРасчетов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Курс");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.Кратность");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.СтавкаНДС");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыйТерминал");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПодразделениеЗатраты");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ЭквайринговыеОперации");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорКредитаЗайма");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "РасшифровкаПлатежа.ТипСуммы");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорДляЗачетаАвансаСПомощником");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ДоговорыАвтоЗачетаДолгов");
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПериодРегистрации");
		
	КонецЕсли;
	
	// Платежный календарь
	Если ПроверитьДокументыПланирования Тогда
		Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
			
			ЕстьОшибка = Ложь;
			СуммаПлатежа = РасшифровкаПлатежа.Итог("СуммаПлатежа");
			СуммаДляСообщения = 0;
			
			Если СуммаПлатежа > СуммаДокумента Тогда
				ЕстьОшибка = Истина;
				СуммаДляСообщения = СуммаПлатежа;
			КонецЕсли;
			
			Если ЕстьОшибка Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'Сумма документа: %1 %3 меньше суммы разнесенных платежей в табличной части: %2 %3'"),
					СуммаДокумента, СуммаДляСообщения, СокрЛП(ВалютаДенежныхСредств));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СуммаДокумента", , Отказ);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьЗаполнениеКорреспонденцииПоДоговоруОбслуживания(Отказ);
	
	Если ПоложениеСтатьи = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Статья");
		ПроверяемыеРеквизиты.Добавить("РасшифровкаПлатежа.СтатьяДДС");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимНаправлениямДеятельности.Получить()
		  И Корреспонденция.ТипСчета = Перечисления.ТипыСчетов.Расходы Тогда
		
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;
		
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(Контрагент)
		И НЕ Контрагент.ВестиРасчетыПоДоговорам
		И НЕ ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
			СтрокаТЧ.Договор = Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(Контрагент);
		КонецЕсли;
		
		// Прочие расчеты
		Если (ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ПрочиеРасчеты
			ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.РасчетыПоКредитам)
			И СтрокаТЧ.СтавкаНДС.Пустая() Тогда
			СтрокаТЧ.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
			СтрокаТЧ.СуммаНДС = 0;
		КонецЕсли;
		// Конец Прочие расчеты
	КонецЦикла;
	
	// Эквайринг
	Если ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВозвратОплатыНаПлатежныеКарты
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ВозвратПродажиВКредит Тогда
		ЭквайринговыеОперацииСервер.ПередЗаписьюОтчетаЭквайера(ЭтотОбъект);
	Иначе
		
		//Для остальных операций просто переносим данные по НУ из шапки документа
		Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
			
			СтрокаРасшифровки.УчитыватьВНУ = УчитыватьВНУ;
			СтрокаРасшифровки.НалогообложениеНДС = НалогообложениеНДС;
			
		КонецЦикла; 
		
	КонецЕсли;
	// Конец Эквайринг
	
	Если ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.ПереводНаДругойСчет Тогда
		Если РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(Дата,Константы.УчетПоКомпании.Компания(Организация)) Тогда
			Корреспонденция = ПланыСчетов.Управленческий.ПереводыВПути;
		Иначе
			Корреспонденция = СчетКонтрагента.СчетУчета;
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.СнятиеНаличных Тогда
		Если РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(Дата,Константы.УчетПоКомпании.Компания(Организация)) Тогда
			Корреспонденция = ПланыСчетов.Управленческий.ПереводыВПути;
		Иначе
			Корреспонденция = ПланыСчетов.Управленческий.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	// Зачет долгов. Авто
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И
		
		ВариантЗаполненияРасшифровки = Перечисления.ВариантыЗаполненияРасшифровкиПлатежа.Автоматически И
		ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Поставщику Тогда
		
		РасшифровкаПлатежа.Очистить();
		ЗаполнитьРасшифровкуПлатежаАвтоЗачетДолгов();
		
	КонецЕсли;
	// Конец Зачет долгов. Авто
	
	// Взаиморасчеты
	РасчетыПроведениеДокументов.ОбработатьРасшифровкуПлатежаПередЗаписью(ЭтотОбъект);
	// Конец Взаиморасчеты
	
	РасчетыПроведениеДокументов.ОбработатьРеквизитыШапкаТабличнаяЧастьПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	// Взаиморасчеты
	РасчетыПроведениеДокументов.ИнициализироватьДополнительныеСвойстваДляПроведения(ЭтотОбъект, ДополнительныеСвойства, Отказ, Истина);
	// Конец Взаиморасчеты
	
	// Инициализация данных документа
	Документы.РасходСоСчета.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Взаиморасчеты
	// Проверим, можно ли продолжать и не было ли отказа в процедурах
	// формирования движений по взаиморасчетам.
	Отказ = ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// Конец Взаиморасчеты
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДенежныеСредства", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДвиженияДенежныхСредств", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПодотчетниками", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПокупателями", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПоставщиками", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыСПерсоналом", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходы", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыПоНалогам", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыКассовыйМетод", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыНераспределенные", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыОтложенные", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ПлатежныйКалендарь", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДенежныеСредстваВРезерве", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ОплатаСчетовИЗаказов", ТаблицыДляДвижений, Движения, Отказ);
	// Эквайринг
	ПроведениеДокументовУНФ.ОтразитьДвижения("РасчетыПоЭквайрингу", ТаблицыДляДвижений, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ДоходыИРасходыКассовыйМетодЭквайринг", ТаблицыДляДвижений, Движения, Отказ);
	// Конец Эквайринг
	// Прочие расчеты
	ПрочиеРасчетыУНФ.ОтразитьРасчетыСПрочимиКонтрагентами(ДополнительныеСвойства, Движения, Отказ);
	ПрочиеРасчетыУНФ.ОтразитьРасчетыПоКредитамИЗаймам(ДополнительныеСвойства, Движения, Отказ);
	// Конец Прочие расчеты
	
	Сотрудники.ОтразитьРасчетыСФондамиПоСтраховымВзносам(ДополнительныеСвойства, Движения, Отказ);
	Сотрудники.ОтразитьНДФЛРасчетыНалоговыхАгентовСБюджетом(ДополнительныеСвойства, Движения, Отказ);
	ПроведениеДокументовУНФ.ОтразитьДвижения("ЗакупкиДляКУДиР", ТаблицыДляДвижений, Движения, Отказ);
	
	// Биллинг
	Если ТаблицыДляДвижений.Свойство("ТаблицаВыполнениеДоговоровОбслуживания") Тогда
		ПроведениеДокументовУНФ.ОтразитьДвижения("ВыполнениеДоговоровОбслуживания", ТаблицыДляДвижений, Движения, Отказ);
	КонецЕсли;
	
	ПроведениеДокументовУНФ.ОтразитьДвижения("ОплатаДокументов", ТаблицыДляДвижений, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Взаиморасчеты
	Если ДополнительныеСвойства.Свойство("ТаблицаДокументовДляИзменения")
		И ДополнительныеСвойства.ТаблицаДокументовДляИзменения.Количество() > 0 Тогда
		РасчетыПроведениеДокументов.ОбработатьТаблицуДокументовДляИзмененияПриОплате(ДополнительныеСвойства, Отказ);
	КонецЕсли;
	// Конец Взаиморасчеты
	
	// Контроль возникновения отрицательного остатка по поступлению денежных средств
	Документы.РасходСоСчета.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
	// Отметка об оплате
	Если НЕ Отказ Тогда
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение")
			И ЗначениеЗаполнено(ДокументОснование) Тогда
			ДокументОснованиеОбъект = ДокументОснование.ПолучитьОбъект();
			ДокументОснованиеОбъект.Оплачено = Истина;
			ДокументОснованиеОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Взаиморасчеты
	Если ДополнительныеСвойства.Свойство("ТаблицаДокументовДляИзменения")
		И ДополнительныеСвойства.ТаблицаДокументовДляИзменения.Количество() > 0 Тогда
		РасчетыПроведениеДокументов.ОбработатьТаблицуДокументовДляИзмененияПриОплате(ДополнительныеСвойства, Отказ);
	КонецЕсли;
	// Конец Взаиморасчеты
	
	// Контроль возникновения отрицательного остатка по поступлению денежных средств
	Документы.РасходСоСчета.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
	// Подчиненный счет-фактура (полученный)
	Если Не Отказ Тогда
		СчетаФактурыУНФ.ОтменитьПроведениеПодчиненногоСчетаФактуры(Ссылка, Номер, Дата, ДополнительныеСвойства, Истина);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СчетаФактурыУНФ.ПриЗаписиДокументаОснованияСчетаФактуры(Ссылка, ДополнительныеСвойства, Истина);
	
КонецПроцедуры

// Процедура - обработчик события При копировании.
//
Процедура ПриКопировании(ОбъектКопирования)
	
	НомерЧекаККМ = 0;
	Телефон = "";
	АдресЭП = "";

КонецПроцедуры // ПриКопировании()

#КонецОбласти

#Область ПрочиеРасчеты

// Обработчик заполнения на основании документа ДоговорКредитаИЗайма
//
// Параметры:
//	ДокументСсылкаДоговорКредитаИЗайма - ДокументСсылка.ДоговорКредитаИЗайма.
//	Сумма - Число - сумма документа. Заполняется, когда процедура вызывается из формы документа.
//	
Процедура ЗаполнитьПоДоговоруКредитаЗайма(ДокументСсылкаДоговорКредитаИЗайма, Сумма = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаДоговорКредитаИЗайма);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику);
	
	Если Сумма <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.РасчетыПоКредитам)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ВыдачаЗаймаСотруднику)
		|	КОНЕЦ КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	&Ссылка КАК ДоговорКредитаЗайма,
		|	&Сумма КАК СуммаДокумента,
		|	&Сумма КАК СуммаПлатежа,
		|	ВТСтавкиНДСОрганизация.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(&Сумма КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(&Сумма * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДСОрганизация.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ДоговорКредитаИЗайма КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДСОрганизация
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДСОрганизация.ВидСтавкиНДС)
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	Иначе
		
		Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.РасчетыПоКредитам)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.ВыдачаЗаймаСотруднику)
		|	КОНЕЦ КАК ВидОперации,
		|	&Ссылка КАК ДокументОснование,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
		|	ТаблицаДокумента.Сотрудник КАК Подотчетник,
		|	ТаблицаДокумента.Контрагент КАК Контрагент,
		|	&Ссылка КАК ДоговорКредитаЗайма,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокумента.СуммаДокумента КАК СуммаПлатежа,
		|	ВТСтавкиНДСОрганизация.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
		|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДСОрганизация.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС
		|ИЗ
		|	Документ.ДоговорКредитаИЗайма КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
		|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДСОрганизация
		|		ПО (ТаблицаДокумента.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДСОрганизация.ВидСтавкиНДС)
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
	
	РасшифровкаПлатежа.Очистить();
	Если ДокументСсылкаДоговорКредитаИЗайма.ВидДоговора = Перечисления.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику Тогда
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	Иначе
		СуммаДокумента = 0;
	КонецЕсли;
	
	Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

// Процедура заполнения документа на основании договора кредита (займа).
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ДоговорКредитаИЗайма - условия получения кредита (выдачи займа).
//	Сумма - Число - сумма документа. Заполняется, когда процедура вызывается из формы документа.
//	
Процедура ЗаполнитьПоНачисленияПоКредитамИЗаймам(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Документ);
		Запрос.УстановитьПараметр("Сотрудник", ДанныеЗаполнения.Сотрудник);
		Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Контрагент);
		Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДанныеЗаполнения.ДоговорКредитаЗайма);
		Запрос.УстановитьПараметр("ВалютаРасчетов", ДанныеЗаполнения.ВалютаРасчетов);
	ИначеЕсли ДанныеЗаполнения.Начисления.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Сотрудник", ДанныеЗаполнения.Начисления[0].Сотрудник);
		Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Начисления[0].Контрагент);
		Запрос.УстановитьПараметр("ДоговорКредитаЗайма", ДанныеЗаполнения.Начисления[0].ДоговорКредитаЗайма);
		Запрос.УстановитьПараметр("ВалютаРасчетов", ДанныеЗаполнения.Начисления[0].ВалютаРасчетов);
	Иначе
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));
	
	Запрос.Текст = Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())) +
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(&Ссылка) КАК Основание,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.РасчетыПоКредитам) КАК ВидОперации,
	|	&Ссылка КАК ДокументОснование,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.ВалютаРасчетов КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ТаблицаДокумента.ТипСуммы КАК ТипСуммы,
	|	ТаблицаДокумента.Сумма КАК СуммаПлатежа,
	|	ВТСтавкиНДСОрганизация.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютРасчетов.Кратность, 1) КАК Кратность,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма КАК ЧИСЛО(15, 2)) КАК СуммаРасчетов,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * (1 - 1 / ((ЕСТЬNULL(ВТСтавкиНДСОрганизация.СтавкаНДС.Ставка, 0) + 100) / 100)) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	&Контрагент КАК Контрагент,
	|	&Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.НачисленияПоКредитамИЗаймам.Начисления КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.ВалютаРасчетов = КурсыВалютРасчетов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНДСОрганизация
	|		ПО (ТаблицаДокумента.Ссылка.Организация.ВидСтавкиНДСПоУмолчанию  = ВТСтавкиНДСОрганизация.ВидСтавкиНДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ДоговорКредитаЗайма = &ДоговорКредитаЗайма
	|	И ТаблицаДокумента.ВалютаРасчетов = &ВалютаРасчетов
	|	И ТаблицаДокумента.Контрагент = &Контрагент
	|	И ТаблицаДокумента.Сотрудник = &Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		НалогообложениеНДС = НалогиУНФ.НалогообложениеНДС(Организация, , Дата);
		
		РасшифровкаПлатежа.Очистить();
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
		СуммаДокумента = РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПоступлениеДСПлан()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьАналитикуПоЗаказу(Заказ)
	
	Аналитика = ДвижениеДенежныхСредствСервер.АналитикаДокументаДляДвиженияДенежныхСредств(Заказ);
	Проект = Аналитика.Проект;
	Подразделение = Аналитика.Подразделение;
	
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Заказ) Тогда
			Аналитика = ДвижениеДенежныхСредствСервер.АналитикаДокументаДляДвиженияДенежныхСредств(СтрокаРасшифровки.Заказ);
			СтрокаРасшифровки.Проект = Аналитика.Проект;
			СтрокаРасшифровки.Подразделение = Аналитика.Подразделение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеКорреспонденцииПоДоговоруОбслуживания(Отказ)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьБиллинг") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Константы.БиллингВестиУчетРасходовПоДоговорамОбслуживания.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоОперацияПоДоговоруОбслуживания = ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.НаРасходы
		Или ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Прочее;
	Если Не ЭтоОперацияПоДоговоруОбслуживания Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ЭтоДоговорОбслуживания
	|	И ДоговорыКонтрагентов.ДоговорОбслуживанияНаправлениеДеятельности = &НаправлениеДеятельности";
	Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДеятельности);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		РазрешеноПроведениеКорреспонденции = Справочники.ДоговорыКонтрагентов.РазрешенаПродажаНоменклатурыПоДоговоруОбслуживания(
			Выборка.Ссылка, Корреспонденция);
		Если Не РазрешеноПроведениеКорреспонденции Тогда
			ТекстСообщения = НСтр("ru = 'Запрещено проводить незапланированные расходы по текущему договору обслуживания.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Корреспонденция", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Касса)
	|	И ВЫБОР КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|	ИЛИ ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику) ТОГДА ЗначениеРазрешено(Контрагент)
	|	КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк) ТОГДА ЗначениеРазрешено(СчетОрганизации)
	|	КОГДА ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ) ТОГДА ЗначениеРазрешено(КассаККМ)
	|	ИНАЧЕ ИСТИНА КОНЕЦ ";

КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДенежныеСредства(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("РасходДенежныхСредств", НСтр("ru='Расход денежных средств'"));
	Запрос.УстановитьПараметр("ПеремещениеДенежныхСредств", НСтр("ru = 'Перемещение денежных средств'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	
	Запрос.УстановитьПараметр("ВалютаУчета",	Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаРасходИзКассы.ВалютаДенежныхСредств);
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		Итог = ДокументСсылкаРасходИзКассы.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Иначе
		Итог = 0;
	КонецЕсли;
	ОстатокСуммы = ДокументСсылкаРасходИзКассы.СуммаДокумента - Итог;
	Запрос.УстановитьПараметр("ПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ОстатокСуммы", ОстатокСуммы);
	Запрос.УстановитьПараметр("УчетВалютныхОпераций", ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА &ПеремещениеДенежныхСредств
	|		ИНАЧЕ &РасходДенежныхСредств
	|	КОНЕЦ КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.Касса КАК БанковскийСчетКасса,
	|	ТаблицаДокумента.АналитикаДДС КАК Аналитика,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(&ОстатокСуммы) КАК СуммаВал,
	|	-СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаДляОстатка,
	|	-СУММА(&ОстатокСуммы) КАК СуммаВалДляОстатка,
	|	ТаблицаДокумента.КассаСчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ВременнаяТаблицаДенежныеСредства
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта = &ВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|		ПО ТаблицаДокумента.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|ГДЕ
	|	(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк))
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.КассаСчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА &ПеремещениеДенежныхСредств
	|		ИНАЧЕ &РасходДенежныхСредств
	|	КОНЕЦ,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА &ПеремещениеДенежныхСредств
	|		ИНАЧЕ &РасходДенежныхСредств
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк))
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА &ПеремещениеДенежныхСредств
	|		ИНАЧЕ &РасходДенежныхСредств
	|	КОНЕЦ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&РасходДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВыплатаЗаработнойПлаты.НомерСтроки),
	|	&РасходДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВыплатаЗаработнойПлаты.Ссылка.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ВыплатаЗаработнойПлаты.Ссылка.Статья,
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник,
	|	ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств,
	|	СУММА(ВЫРАЗИТЬ(ПлатежнаяВедомостьСотрудники.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(ПлатежнаяВедомостьСотрудники.СуммаПлатежа),
	|	-СУММА(ВЫРАЗИТЬ(ПлатежнаяВедомостьСотрудники.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))),
	|	-СУММА(ПлатежнаяВедомостьСотрудники.СуммаПлатежа),
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса.СчетУчета,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ПлатежнаяВедомость.Сотрудники КАК ПлатежнаяВедомостьСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК ВыплатаЗаработнойПлаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|			ПО ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|		ПО ПлатежнаяВедомостьСотрудники.Ссылка = ВыплатаЗаработнойПлаты.Ведомость
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|	И ВыплатаЗаработнойПлаты.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаЗаработнойПлаты.Ссылка.Дата,
	|	ВыплатаЗаработнойПлаты.Ссылка.Статья,
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса,
	|	ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств,
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса.СчетУчета,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	&ПеремещениеДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.СчетОрганизации,
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(&ОстатокСуммы),
	|	-СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))),
	|	-СУММА(&ОстатокСуммы),
	|	ТаблицаДокумента.КассаСчетУчета,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|	И НЕ &ИспользуютсяПереводыВПути
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.КассаСчетУчета,
	|	ТаблицаДокумента.СчетОрганизации,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&ПеремещениеДенежныхСредств,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СчетОрганизации,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	-СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|	И НЕ &ИспользуютсяПереводыВПути
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СчетОрганизации,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ДоговорПлатежногоАгента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипДенежныхСредств,
	|	БанковскийСчетКасса,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаДенежныеСредства.Организация КАК Организация,
	|	ВременнаяТаблицаДенежныеСредства.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ВременнаяТаблицаДенежныеСредства.Валюта КАК Валюта
	|ИЗ
	|	ВременнаяТаблицаДенежныеСредства КАК ВременнаяТаблицаДенежныеСредства";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДенежныеСредства");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыДенежныеСредства(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредства", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредства()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДенежныеСредстваВКассахККМ(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.КассаККМ КАК КассаККМ,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаДляОстатка,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВалДляОстатка,
	|	ТаблицаДокумента.КассаККМСчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента КАК ДоговорКонтрагента,
	|	&ПоступлениеДенежныхСредств КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаДенежныеСредстваВКассахККМ
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|	И НЕ ТаблицаДокумента.НовыйМеханизмИнкассации
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.КассаККМ,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.КассаККМСчетУчета,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	КассаККМ,
	|	Валюта,
	|	СчетУчета";
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("ПоступлениеДенежныхСредств", НСтр("ru = 'Поступление денежных средств в кассу ККМ'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаДенежныеСредстваВКассахККМ.Организация КАК Организация,
	|	ВременнаяТаблицаДенежныеСредстваВКассахККМ.КассаККМ КАК КассаККМ
	|ИЗ
	|	ВременнаяТаблицаДенежныеСредстваВКассахККМ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваВКассахККМ");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыДенежныеСредстваВКассахККМ(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваВКассахККМ", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредстваВКассахККМ()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПодотчетниками(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеДолгаПодотчетника", НСтр("ru='Возникновение долга подотчетника'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	&ВозникновениеДолгаПодотчетника КАК СодержаниеПроводки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.АвансовыйОтчет.ПустаяСсылка)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ТаблицаДокумента.Документ
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Подотчетник КАК Сотрудник,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаДляОстатка,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВалДляОстатка,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.АвансовыйОтчет.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Подотчетник.СчетРасчетовСПодотчетниками
	|		ИНАЧЕ ТаблицаДокумента.Подотчетник.СчетРасчетовПоПерерасходу
	|	КОНЕЦ КАК СчетУчета
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПодотчетниками
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.Подотчетник,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.АвансовыйОтчет.ПустаяСсылка)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ТаблицаДокумента.Документ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ = ЗНАЧЕНИЕ(Документ.АвансовыйОтчет.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Подотчетник.СчетРасчетовСПодотчетниками
	|		ИНАЧЕ ТаблицаДокумента.Подотчетник.СчетРасчетовПоПерерасходу
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	Валюта,
	|	Документ,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Сотрудник КАК Сотрудник,
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Валюта КАК Валюта,
	|	ВременнаяТаблицаРасчетыСПодотчетниками.Документ КАК Документ
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПодотчетниками КАК ВременнаяТаблицаРасчетыСПодотчетниками";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПодотчетниками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПодотчетниками(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПодотчетниками", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПодотчетниками()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеАвансаПоставщику", "Возникновение аванса поставщику");
	Запрос.УстановитьПараметр("ПогашениеОбязательствПередПоставщиком", "Погашение обязательств перед поставщиком");
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
		
	Если ДокументСсылкаРасходИзКассы.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Поставщику
		ИЛИ ДокументСсылкаРасходИзКассы.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.НашейОрганизации Тогда
		РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетам(СтруктураДополнительныеСвойства, ДокументСсылкаРасходИзКассы, , "Касса, ВалютаДенежныхСредств");
		ПолучатьРеквизитыРасчетов = Истина;
	Иначе
		ЭтоРасчетыСПоставщиком = СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = Истина;
		РасчетыПроведениеДокументов.СформироватьПустуюВременнуюТаблицуРасчетов(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства, Запрос.Параметры, "Касса, ВалютаДенежныхСредств");
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = ЭтоРасчетыСПоставщиком;
		ПолучатьРеквизитыРасчетов = Ложь;
	КонецЕсли;
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПоставщиками.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПоставщиками(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса, ПолучатьРеквизитыРасчетов);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", МассивРезультатов[НомерЗапроса].Выгрузить());
		
КонецПроцедуры // СформироватьТаблицаРасчетыСПоставщиками()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ПогашениеАвансаПокупателя", НСтр("ru='Погашение аванса покупателя'"));
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПокупателя", НСтр("ru='Возникновение обязательств покупателя'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Если ДокументСсылкаРасходИзКассы.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Покупателю Тогда
		РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетам(СтруктураДополнительныеСвойства, ДокументСсылкаРасходИзКассы, , "Касса, ВалютаДенежныхСредств");
		ПолучатьРеквизитыРасчетов = Истина;
	Иначе
		ЭтоРасчетыСПоставщиком = СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком;
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = Ложь;
		РасчетыПроведениеДокументов.СформироватьПустуюВременнуюТаблицуРасчетов(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства, Запрос.Параметры, "Касса, ВалютаДенежныхСредств");
		СтруктураДополнительныеСвойства.ПараметрыДокумента.ЭтоРасчетыСПоставщиком = ЭтоРасчетыСПоставщиком;
		ПолучатьРеквизитыРасчетов = Ложь;
	КонецЕсли;
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПокупателями.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПокупателями.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПокупателями.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПокупателями.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПокупателями.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса, ПолучатьРеквизитыРасчетов);
	МассивРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПокупателями()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПерсоналом(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("УчетПоНесколькимПодразделениям", ПолучитьФункциональнуюОпцию("УчетПоНесколькимПодразделениям"));
	Запрос.УстановитьПараметр("ПогашениеОбязательствПередПерсоналом", НСтр("ru='Погашение обязательств перед персоналом'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлатежнаяВедомость.Ссылка
	|ИЗ
	|	Документ.ПлатежнаяВедомость КАК ПлатежнаяВедомость
	|ГДЕ
	|	ПлатежнаяВедомость.Ссылка В
	|			(ВЫБРАТЬ
	|				ВыплатаЗаработнойПлаты.Ведомость
	|			ИЗ
	|				Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК ВыплатаЗаработнойПлаты
	|			ГДЕ
	|				ВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|				И ВыплатаЗаработнойПлаты.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата))";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Документ.ПлатежнаяВедомость");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВыплатаЗаработнойПлаты.НомерСтроки) КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	ВыплатаЗаработнойПлаты.Ссылка.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ПлатежнаяВедомостьСотрудники.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник КАК Сотрудник,
	|	ПлатежнаяВедомостьСотрудники.Ссылка.ВалютаРасчетов КАК Валюта,
	|	ПлатежнаяВедомостьСотрудники.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	СУММА(ВЫРАЗИТЬ(ПлатежнаяВедомостьСотрудники.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ПлатежнаяВедомостьСотрудники.СуммаРасчетов) КАК СуммаВал,
	|	-СУММА(ВЫРАЗИТЬ(ПлатежнаяВедомостьСотрудники.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаДляОстатка,
	|	-СУММА(ПлатежнаяВедомостьСотрудники.СуммаРасчетов) КАК СуммаВалДляОстатка,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник.СчетРасчетовСПерсоналом КАК СчетУчета,
	|	&ПогашениеОбязательствПередПерсоналом КАК СодержаниеПроводки,
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса.СчетУчета КАК КассаСчетУчета
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыСПерсоналом
	|ИЗ
	|	Документ.ПлатежнаяВедомость.Сотрудники КАК ПлатежнаяВедомостьСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК ВыплатаЗаработнойПлаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|			ПО ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|		ПО ПлатежнаяВедомостьСотрудники.Ссылка = ВыплатаЗаработнойПлаты.Ведомость
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|	И ВыплатаЗаработнойПлаты.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаЗаработнойПлаты.Ссылка.Дата,
	|	ПлатежнаяВедомостьСотрудники.Ссылка.СтруктурнаяЕдиница,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник,
	|	ПлатежнаяВедомостьСотрудники.Ссылка.ВалютаРасчетов,
	|	ПлатежнаяВедомостьСотрудники.Ссылка.ПериодРегистрации,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник.СчетРасчетовСПерсоналом,
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса,
	|	ВыплатаЗаработнойПлаты.Ссылка.Касса.СчетУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	&Организация,
	|	ТаблицаДокумента.Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ВЫБОР
	|		КОГДА &УчетПоНесколькимПодразделениям
	|			ТОГДА ТаблицаДокумента.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ОсновноеПодразделение)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Подотчетник,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ПериодРегистрации,
	|	СУММА(ТаблицаДокумента.Сумма),
	|	СУММА(ТаблицаДокумента.СуммаВал),
	|	-СУММА(ТаблицаДокумента.Сумма),
	|	-СУММА(ТаблицаДокумента.СуммаВал),
	|	ТаблицаДокумента.ПодотчетникСчетРасчетовСПерсоналом,
	|	&ПогашениеОбязательствПередПерсоналом,
	|	ТаблицаДокумента.КассаСчетУчета
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ВЫБОР
	|		КОГДА &УчетПоНесколькимПодразделениям
	|			ТОГДА ТаблицаДокумента.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ОсновноеПодразделение)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Подотчетник,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ПериодРегистрации,
	|	ТаблицаДокумента.ПодотчетникСчетРасчетовСПерсоналом,
	|	ТаблицаДокумента.КассаСчетУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурнаяЕдиница,
	|	Сотрудник,
	|	Валюта,
	|	ПериодРегистрации,
	|	СчетУчета";
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПерсоналом.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПерсоналом.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаРасчетыСПерсоналом.Сотрудник КАК Сотрудник,
	|	ВременнаяТаблицаРасчетыСПерсоналом.Валюта КАК Валюта,
	|	ВременнаяТаблицаРасчетыСПерсоналом.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПерсоналом КАК ВременнаяТаблицаРасчетыСПерсоналом";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПерсоналом");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПерсоналом(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПерсоналом", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПерсоналом()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОтражениеРасходов", НСтр("ru='Отражение расходов'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	2 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КорреспонденцияТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ТОГДА ТаблицаДокумента.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КорреспонденцияТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ТОГДА ТаблицаДокумента.Проект
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КорреспонденцияТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КорреспонденцияТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ТОГДА ТаблицаДокумента.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Корреспонденция КАК СчетУчета,
	|	ШапкаДокумента.АналитикаДоходовИРасходов КАК Аналитика,
	|	&ОтражениеРасходов КАК СодержаниеПроводки,
	|	0 КАК СуммаДоходов,
	|	ТаблицаДокумента.Сумма КАК СуммаРасходов,
	|	ТаблицаДокумента.Сумма КАК Сумма

	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ШапкаДокумента
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Расходы)
	|			ИЛИ ТаблицаДокумента.Корреспонденция.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.ПрочиеРасходы))
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ

	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницДенежныеСредства КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ

	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПерсоналом КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницДенежныеСредстваВКассахККМ КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыПоКредитамИЗаймам КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницПрочиеРасчеты КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("ВидОперации", ДокументСсылкаРасходИзКассы.ВидОперации);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("Содержание", НСтр("ru = 'Списание денежных средств на произвольный счет'"));
	Запрос.УстановитьПараметр("СодержаниеВыдачаЗаймаСотруднику", НСтр("ru = 'Выдача займа сотруднику'"));
	Запрос.УстановитьПараметр("СодержаниеПеремещениеВКассуККМ", НСтр("ru = 'Перемещение денежных средств в кассу ККМ'"));
	Запрос.УстановитьПараметр("СодержаниеЛичныеСредства", НСтр("ru = 'Перевод собственных денежных средств'"));
	Запрос.УстановитьПараметр("ОплатаНалога", НСтр("ru='Оплата налога'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаДокумента.Корреспонденция КАК СчетДт,
	|	ТаблицаДокумента.КассаСчетУчета КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Корреспонденция.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалДт,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ВЫРАЗИТЬ(&СодержаниеЛичныеСредства КАК СТРОКА(100))
	|		ИНАЧЕ ВЫРАЗИТЬ(&Содержание КАК СТРОКА(100))
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НовыйМеханизмИнкассации
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПереводыВПути)
	|		ИНАЧЕ ТаблицаДокумента.КассаККМСчетУчета
	|	КОНЕЦ,
	|	ТаблицаДокумента.КассаСчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НовыйМеханизмИнкассации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ТаблицаДокумента.КассаККМСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КассаСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НовыйМеханизмИнкассации
	|			ТОГДА 0
	|		КОГДА ТаблицаДокумента.КассаККМСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КассаСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ВЫРАЗИТЬ(&СодержаниеПеремещениеВКассуККМ КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.ВидНалогаСчетУчета,
	|	ТаблицаДокумента.КассаСчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидНалога.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидНалога.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ВЫРАЗИТЬ(&ОплатаНалога КАК СТРОКА(100))
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Касса.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПодотчетниками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Касса.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Касса.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	10,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницДенежныеСредства КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	11,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницДенежныеСредстваВКассахККМ КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	12,
	|	ТаблицаДокумента.НомерСтроки,
	|	ВЫРАЗИТЬ(&Ссылка КАК Документ.РасходИзКассы).Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.КассаСчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КассаСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.КассаСчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПерсоналом КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	13,
	|	ТаблицаДокумента.НомерСтроки,
	|	ВЫРАЗИТЬ(&Ссылка КАК Документ.РасходИзКассы).Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПерсоналом КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	14,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Касса.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	15,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыПоКредитамИЗаймам КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	16,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СчетУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеРасходы)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПрочиеДоходы)
	|		ИНАЧЕ ТаблицаДокумента.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы < 0
	|				И ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	&КурсоваяРазница
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницПрочиеРасчеты КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	17,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.Касса.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Касса.СчетУчета.Валютный
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Сумма,
	|	ТаблицаДокумента.СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаПрочиеРасчеты КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаУправленческий", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.УстановитьПараметр("ВалютаУчета",	Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаРасходИзКассы.ВалютаДенежныхСредств);
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		Итог = ДокументСсылкаРасходИзКассы.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Иначе
		Итог = 0;
	КонецЕсли;
	ОстатокСуммы = ДокументСсылкаРасходИзКассы.СуммаДокумента - Итог;
	Запрос.УстановитьПараметр("ПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ОстатокСуммы", ОстатокСуммы);
	Запрос.УстановитьПараметр("УчетВалютныхОпераций", ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	0 КАК СуммаДоходов,
	|	ТаблицаДокумента.СуммаУчета КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|		ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|	И (ТаблицаДокумента.ПризнакАванса
	|			ИЛИ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	0,
	|	Таблица.СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|ГДЕ
	|	Таблица.СуммаРасходов > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	0,
	|	ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютРасчетов.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютРасчетов.Кратность) КАК ЧИСЛО(15, 2))
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта = &ВалютаУчета) КАК КурсыВалютУчетаСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютРасчетов
	|		ПО ТаблицаДокумента.ВалютаДенежныхСредств = КурсыВалютРасчетов.Валюта
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги))
	|	И &ОстатокСуммы > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	0,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги))
	|	И ТаблицаДокумента.СуммаПлатежа > 0
	|	И &ПлатежныйКалендарь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|			ТОГДА ТаблицаДокумента.ДоговорОбслуживанияНаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	-ТаблицаДокумента.СуммаУчета,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|	И (ТаблицаДокумента.ПризнакАванса
	|			ИЛИ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	-Таблица.СуммаДоходов,
	|	0
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица
	|ГДЕ
	|	Таблица.СуммаДоходов > 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	0 КАК СуммаДоходов,
	|	ТаблицаДокумента.СуммаУчета КАК СуммаРасходов
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|		ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья,
	|	-ТаблицаДокумента.СуммаУчета,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И ТаблицаДокумента.ПризнакАванса
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И (ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|		ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|	И НЕ ТаблицаДокумента.ВестиУчетРасходовПоДоговорамОбслуживания
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДоходыИРасходыОтложенные");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Документ", "Документ");
	Блокировка.Заблокировать();
	
	ТаблицаСуммыКСписанию = РезультатЗапроса.Выгрузить();
	
	// Формирование таблицы с остатками.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка) КАК Статья,
	|	0 КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	-СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток) КАК СуммаДоходовОстаток,
	|	СУММА(ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток) КАК СуммаРасходовОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоходыИРасходыОтложенныеОстатки.Организация КАК Организация,
	|		ДоходыИРасходыОтложенныеОстатки.Документ КАК Документ,
	|		ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаДоходовОстаток КАК СуммаДоходовОстаток,
	|		ДоходыИРасходыОтложенныеОстатки.СуммаРасходовОстаток КАК СуммаРасходовОстаток
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные.Остатки(
	|				,
	|				Организация = &Организация
	|					И Документ В
	|						(ВЫБРАТЬ
	|							ТаблицаДокумента.Документ
	|						ИЗ
	|							ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|						ГДЕ
	|							(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|								ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|								ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации)))) КАК ДоходыИРасходыОтложенныеОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Организация,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Документ,
	|		ДвиженияДокументаДоходыИРасходыОтложенные.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаДоходов, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаДоходыИРасходыОтложенные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|			ИНАЧЕ ЕСТЬNULL(ДвиженияДокументаДоходыИРасходыОтложенные.СуммаРасходов, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДоходыИРасходыОтложенные КАК ДвиженияДокументаДоходыИРасходыОтложенные
	|	ГДЕ
	|		ДвиженияДокументаДоходыИРасходыОтложенные.Регистратор = &Ссылка) КАК ДоходыИРасходыОтложенныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыОтложенныеОстатки.Организация,
	|	ДоходыИРасходыОтложенныеОстатки.Документ,
	|	ДоходыИРасходыОтложенныеОстатки.НаправлениеДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ";
	
	ТаблицаСуммыОстатки = Запрос.Выполнить().Выгрузить();

	ТаблицаСуммыОстатки.Индексы.Добавить("Документ");
	
	// Расчет сумм списания.
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СтрокаСуммыОстатки.СуммаРасходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаРасходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаРасходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаРасходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование таблицы с суммами к списанию.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	СУММА(ТаблицаДокумента.СуммаУчета) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|	И НЕ ТаблицаДокумента.ПризнакАванса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА ТаблицаДокумента.Документ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаДокумента.Статья"; 
	
	ТаблицаСуммыКСписанию = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаСуммыКСписанию Из ТаблицаСуммыКСписанию Цикл
		СуммаКСписанию = СтрокаСуммыКСписанию.СуммаКСписанию;
		Отбор = Новый Структура("Документ", СтрокаСуммыКСписанию.Документ);
		МассивСтрокСуммыОстатки = ТаблицаСуммыОстатки.НайтиСтроки(Отбор);
		Для каждого СтрокаСуммыОстатки Из МассивСтрокСуммыОстатки Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток < СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СтрокаСуммыОстатки.СуммаДоходовОстаток;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = СуммаКСписанию - СтрокаСуммыОстатки.СуммаДоходовОстаток;
			ИначеЕсли СтрокаСуммыОстатки.СуммаДоходовОстаток >= СуммаКСписанию Тогда
				СтрокаСуммыОстатки.СуммаДоходов = СуммаКСписанию;
				СтрокаСуммыОстатки.Статья = СтрокаСуммыКСписанию.Статья;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Формирование временной таблицы с суммами, статьями и направлениями
	// деятельности. Понадобится для формирования движений по доходам и расходам
	// кассовым методом.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	Таблица.СуммаДоходов КАК СуммаДоходов,
	|	Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	(Таблица.СуммаДоходов > 0
	|			ИЛИ Таблица.СуммаРасходов > 0)";
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаСуммыОстатки);
	
	Запрос.Выполнить();
	
	// Формирование таблицы для записи в регистр.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	Таблица.Статья КАК Статья,
	|	-Таблица.СуммаДоходов КАК СуммаДоходов,
	|	Таблица.СуммаРасходов КАК СуммаРасходов,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВременнаяТаблицаТаблицаДоходыИРасходыОтложенные КАК Таблица";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()  

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыПоНалогам(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("ОрганизацияДляРегОтчетности", СтруктураДополнительныеСвойства.ДляПроведения.ОрганизацияДляРегОтчетности);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОплатаНалога", НСтр("ru='Оплата налога'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияДляРегОтчетности КАК Организация,
	|	ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.ВидНалогаСчетУчета КАК СчетУчета,
	|	ТаблицаДокумента.СрокУплаты КАК СрокУплаты,
	|	&ОплатаНалога КАК СодержаниеПроводки
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоНалогам", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыПоНалогам()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьПлатежныйКалендарь", Константы.ФункциональнаяОпцияПлатежныйКалендарь.Получить());
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	Запрос.УстановитьПараметр("БанковскийСчетКасса", СтруктураДополнительныеСвойства.ДляПроведения.Ссылка.Касса);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден) КАК СтатусУтвержденияПлатежа,
	|	ТаблицаДокумента.Касса КАК БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря КАК СчетНаОплату,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА -ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА -ТаблицаДокумента.СуммаПлатежа
	|			ИНАЧЕ -ТаблицаДокумента.СуммаРасчетов
	|		КОНЕЦ) КАК СуммаОплаты
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|	И ТаблицаДокумента.СпособЗачета = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Вручную)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Касса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.Касса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА -ТаблицаДокумента.СуммаПлатежа
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА -ТаблицаДокумента.СуммаПлатежа
	|			ИНАЧЕ -ТаблицаДокумента.СуммаРасчетов
	|		КОНЕЦ)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|	И ТаблицаДокумента.СпособЗачета = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Авто)
	|	И ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Касса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаДенежныхСредств
	|		ИНАЧЕ ТаблицаДокумента.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Период,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	&БанковскийСчетКасса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаПлатежа
	|		ИНАЧЕ ТаблицаДокумента.Договор.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ВалютаПлатежа = ТаблицаДокумента.Договор.ВалютаРасчетов
	|				ТОГДА -ТаблицаДокумента.СуммаВал
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|						ТОГДА -ТаблицаДокумента.Сумма
	|					ИНАЧЕ -ТаблицаДокумента.СуммаВал
	|				КОНЕЦ
	|		КОНЕЦ)
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.СпособЗачета = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаИРаспределенияПлатежей.Авто)
	|	И ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Заказ) = ТИП(Документ.ЗаказПоставщику)
	|	И ТаблицаДокумента.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Период,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаПлатежа
	|		ИНАЧЕ ТаблицаДокумента.Договор.ВалютаРасчетов
	|	КОНЕЦ,
	|	ТаблицаДокумента.Заказ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.СчетОрганизации,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ ТаблицаДокумента.ВалютаДенежныхСредств
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|				ТОГДА ТаблицаДокумента.СуммаРасчетов
	|			ИНАЧЕ ТаблицаДокумента.СуммаПлатежа
	|		КОНЕЦ)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|	И НЕ &ИспользуютсяПереводыВПути
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Касса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.РасчетыВУсловныхЕдиницах
	|			ТОГДА ТаблицаДокумента.ВалютаРасчетов
	|		ИНАЧЕ ТаблицаДокумента.ВалютаДенежныхСредств
	|	КОНЕЦ,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.СчетОрганизации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Ссылка.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Ссылка.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.Ссылка.Касса,
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ДокументПланирования,
	|	СУММА(-ТаблицаДокумента.СуммаПлатежа)
	|ИЗ
	|	Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК ТаблицаДокумента
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.ДокументПланирования,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ТаблицаДокумента.Ссылка.Статья,
	|	ТаблицаДокумента.Ссылка.Касса,
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	&Организация,
	|	ТаблицаДокумента.Статья,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияПлатежей.Утвержден),
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	-ТаблицаДокумента.СуммаДокумента
	|ИЗ
	|	Документ.РасходИзКассы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(ЕСТЬNULL(ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки, 0)) КАК Количество
	|		ИЗ
	|			ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа) КАК ВложенныйЗапрос
	|		ПО (ИСТИНА)
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.Ссылка = &Ссылка
	|	И ВложенныйЗапрос.Количество = 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДенежныеСредстваВРезерве(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользоватьПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ИспользоватьРезервированиеДенежныхСредств", ПолучитьФункциональнуюОпцию("ИспользоватьРезервированиеДенежныхСредств"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДенежныеСредстваВРезервеОстатки.Организация КАК Организация,
	|	ДенежныеСредстваВРезервеОстатки.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредстваВРезервеОстатки.Валюта КАК Валюта,
	|	ДенежныеСредстваВРезервеОстатки.Документ КАК Документ,
	|	ДенежныеСредстваВРезервеОстатки.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиРезервовБезУчетаДвижений
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВРезерве.Остатки(, ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)) КАК ДенежныеСредстваВРезервеОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредстваВРезерве.Организация,
	|	ДенежныеСредстваВРезерве.ТипДенежныхСредств,
	|	ДенежныеСредстваВРезерве.БанковскийСчетКасса,
	|	ДенежныеСредстваВРезерве.Валюта,
	|	ДенежныеСредстваВРезерве.Документ,
	|	ДенежныеСредстваВРезерве.Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВРезерве КАК ДенежныеСредстваВРезерве
	|ГДЕ
	|	ДенежныеСредстваВРезерве.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРезервовБезУчетаДвижений.Организация КАК Организация,
	|	ОстаткиРезервовБезУчетаДвижений.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ОстаткиРезервовБезУчетаДвижений.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ОстаткиРезервовБезУчетаДвижений.Валюта КАК Валюта,
	|	ОстаткиРезервовБезУчетаДвижений.Документ КАК Документ,
	|	СУММА(ОстаткиРезервовБезУчетаДвижений.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиРезервов
	|ИЗ
	|	ОстаткиРезервовБезУчетаДвижений КАК ОстаткиРезервовБезУчетаДвижений
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРезервовБезУчетаДвижений.Организация,
	|	ОстаткиРезервовБезУчетаДвижений.ТипДенежныхСредств,
	|	ОстаткиРезервовБезУчетаДвижений.БанковскийСчетКасса,
	|	ОстаткиРезервовБезУчетаДвижений.Валюта,
	|	ОстаткиРезервовБезУчетаДвижений.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса, ТаблицаДокумента.Касса) КАК БанковскийСчетКасса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря КАК Документ,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.СуммаПлатежа < ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.СуммаОстаток, 0)
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			ИНАЧЕ ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.СуммаОстаток, 0)
	|		КОНЕЦ) КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРезервов КАК ДенежныеСредстваВРезервеОстатки
	|		ПО ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря = ДенежныеСредстваВРезервеОстатки.Документ
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И &ИспользоватьРезервированиеДенежныхСредств
	|	И ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря.РезервироватьДенежныеСредства
	|	И ТаблицаДокумента.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|	И ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.СуммаОстаток, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса, ТаблицаДокумента.Касса),
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.СчетНаОплатуДляПлатежногоКалендаря
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки),
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса, ТаблицаДокумента.Ссылка.Касса),
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ДокументПланирования,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.СуммаПлатежа < ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.СуммаОстаток, 0)
	|				ТОГДА ТаблицаДокумента.СуммаПлатежа
	|			ИНАЧЕ ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.СуммаОстаток, 0)
	|		КОНЕЦ)
	|ИЗ
	|	Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРезервов КАК ДенежныеСредстваВРезервеОстатки
	|		ПО ТаблицаДокумента.ДокументПланирования = ДенежныеСредстваВРезервеОстатки.Документ
	|ГДЕ
	|	&ИспользоватьПлатежныйКалендарь
	|	И ТаблицаДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьРезервированиеДенежныхСредств
	|	И ТаблицаДокумента.ДокументПланирования.РезервироватьДенежныеСредства
	|	И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|	И ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.СуммаОстаток, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.ДокументПланирования,
	|	ТаблицаДокумента.Ссылка.Дата,
	|	ЕСТЬNULL(ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса, ТаблицаДокумента.Ссылка.Касса),
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваВРезерве",
		РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

// Формирует таблицу значений, содержащую данные для проведения по регистру "ОплатаДокументов".
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаОплатаДокументов(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	МассивДоступныхОпераций = Новый Массив;
	МассивДоступныхОпераций.Добавить(Перечисления.ВидыОперацийРасходИзКассы.Поставщику);
	МассивДоступныхОпераций.Добавить(Перечисления.ВидыОперацийРасходИзКассы.НашейОрганизации);
	
	РасчетыПроведениеДокументов.СформироватьТаблицаОплатаДокументовДенежныеДокументы(ДокументСсылка, СтруктураДополнительныеСвойства, МассивДоступныхОпераций);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьНДФЛРасчетыНалоговыхАгентовСБюджетом(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыСНДФЛ.Период,
	|	РасчетыСНДФЛ.Организация,
	|	РасчетыСНДФЛ.ВидДвижения,
	|	РасчетыСНДФЛ.ПериодРегистрации,
	|	РасчетыСНДФЛ.Сумма
	|ИЗ
	|	ВТРасчетыСНДФЛ КАК РасчетыСНДФЛ"; 	
	
	// Обрабатываем НДФЛ
	ВыборкаПоНДФЛ = Запрос.Выполнить().Выбрать();
	ТаблицаПоНДФЛ = Новый ТаблицаЗначений();
	ТаблицаПоНДФЛ.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата"));
	ТаблицаПоНДФЛ.Колонки.Добавить("Организация",Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПоНДФЛ.Колонки.Добавить("ВидДвижения",Новый ОписаниеТипов("ВидДвиженияНакопления"));
	ТаблицаПоНДФЛ.Колонки.Добавить("ПериодРегистрации",Новый ОписаниеТипов("Дата"));
	ТаблицаПоНДФЛ.Колонки.Добавить("Сотрудник",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаПоНДФЛ.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"),Новый КвалификаторыЧисла(15,2));
	ТаблицаПоНДФЛ.Колонки.Добавить("СуммаСПревышения",Новый ОписаниеТипов("Число"),Новый КвалификаторыЧисла(15,2));
	
	Если ВыборкаПоНДФЛ.Следующий() Тогда
		РасчетПоПрогрессивнойШкале = ПолучитьФункциональнуюОпцию("ВыполнятьРасчетНДФЛПоПрогрессивнойШкале") 
		И ДокументСсылкаРасходИзКассы.ПериодРегистрации > УчетНДФЛПредпринимателяКлиентСервер.ДатаНачалаПрогрессивнойШкалы()
		И ДокументСсылкаРасходИзКассы.ВидНалога = Справочники.ВидыНалогов.НДФЛДоходыСвышеПредельнойВеличины; 
		
		Если РасчетПоПрогрессивнойШкале Тогда
			СтрокиРаспределения = Сотрудники.РаспределитьПеречисленныйНалогПоФизическимЛицамСПревышения(ДокументСсылкаРасходИзКассы, ДокументСсылкаРасходИзКассы.Организация,ВыборкаПоНДФЛ.Период , ВыборкаПоНДФЛ.Сумма, ВыборкаПоНДФЛ.ПериодРегистрации);
		Иначе
			СтрокиРаспределения = Сотрудники.РаспределитьПеречисленныйНалогПоФизическимЛицам(ДокументСсылкаРасходИзКассы, ДокументСсылкаРасходИзКассы.Организация,ВыборкаПоНДФЛ.Период , ВыборкаПоНДФЛ.Сумма, ВыборкаПоНДФЛ.ПериодРегистрации);
		КонецЕсли; 
		
		Для Каждого СтрокаТЗ Из СтрокиРаспределения Цикл
			НоваяСтрока = ТаблицаПоНДФЛ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНДФЛ, , "Сумма");				
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДФЛРасчетыНалоговыхАгентовСБюджетом", ТаблицаПоНДФЛ);
	
КонецПроцедуры // СформироватьНДФЛРасчетыНалоговыхАгентовСБюджетом()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьРасчетыСФондамиПоСтраховымВзносам(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыСФондамиПоСтраховымВзносам.Период,
	|	РасчетыСФондамиПоСтраховымВзносам.Организация,
	|	РасчетыСФондамиПоСтраховымВзносам.ВидДвижения,
	|	РасчетыСФондамиПоСтраховымВзносам.ЭтоСтраховыеВзносы,
	|	РасчетыСФондамиПоСтраховымВзносам.ВидОбязательногоСтрахованияСотрудников,
	|	РасчетыСФондамиПоСтраховымВзносам.Сумма
	|ИЗ
	|	ВТРасчетыСФондамиПоСтраховымВзносам КАК РасчетыСФондамиПоСтраховымВзносам";
	
	
	// Обрабатываем НДФЛ
	ВыборкаПоВзносам = Запрос.Выполнить().Выбрать();
	ТаблицаПоВзносам = Новый ТаблицаЗначений();
	ТаблицаПоВзносам.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата"));
	ТаблицаПоВзносам.Колонки.Добавить("Организация",Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПоВзносам.Колонки.Добавить("ВидДвижения",Новый ОписаниеТипов("ВидДвиженияНакопления"));
	ТаблицаПоВзносам.Колонки.Добавить("ЭтоСтраховыеВзносы",Новый ОписаниеТипов("Булево"));
	ТаблицаПоВзносам.Колонки.Добавить("ВидОбязательногоСтрахованияСотрудников",Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОбязательногоСтрахованияСотрудников"));
	ТаблицаПоВзносам.Колонки.Добавить("Сотрудник",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаПоВзносам.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"),Новый КвалификаторыЧисла(15,2));
	
	Если ВыборкаПоВзносам.Следующий() Тогда
		СтрокиРаспределения = Сотрудники.РаспределитьПеречисленныйВзносПоФизическимЛицам(ДокументСсылкаРасходИзКассы, ДокументСсылкаРасходИзКассы.Организация,ВыборкаПоВзносам.Период , ВыборкаПоВзносам.Сумма, ВыборкаПоВзносам.ВидОбязательногоСтрахованияСотрудников);
		Для Каждого СтрокаТЗ Из СтрокиРаспределения Цикл
			НоваяСтрока = ТаблицаПоВзносам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоВзносам, , "Сумма");
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		КонецЦикла;
	КонецЕсли;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСФондамиПоСтраховымВзносам", ТаблицаПоВзносам);
	
КонецПроцедуры // СформироватьРасчетыСФондамиПоСтраховымВзносам()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗакупкиПоставщиковДляКУДиР(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("ДатаДокумента", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("МоментВремени", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПоставщиками.Дата КАК Период,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Дата КАК ДатаДокумента,
	|	ВременнаяТаблицаРасчетыСПоставщиками.НомерСтроки КАК НомерСтроки,
	|	ДопРеквизитыДокумента.Организация КАК Организация,
	|	&Ссылка КАК ДенежныйДокумент,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК ТоварныйДокумент,
	|	ДопРеквизитыДокумента.УчитыватьВНУ КАК УчитыватьВНУ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.СтавкаНДС.Ставка КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоТоварыКРеализации,
	|	СУММА(ВременнаяТаблицаРасчетыСПоставщиками.СуммаВал) КАК СуммаВал,
	|	ВременнаяТаблицаРасчетыСПоставщиками.ВалютаПлатежа КАК Валюта
	|ПОМЕСТИТЬ ВременнаяТаблицаЗакупкиПоставщиковДляКУДиР
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ВременнаяТаблицаРасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы КАК ДопРеквизитыДокумента
	|		ПО (ДопРеквизитыДокумента.Ссылка = &Ссылка)
	|ГДЕ
	|	(ДопРеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|			ИЛИ ДопРеквизитыДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|	И ДопРеквизитыДокумента.Контрагент.ВестиРасчетыПоДокументам
	|	И ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|	И ДопРеквизитыДокумента.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасчетыСПоставщиками.НомерСтроки,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Дата,
	|	ДопРеквизитыДокумента.Организация,
	|	ДопРеквизитыДокумента.УчитыватьВНУ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.СтавкаНДС.Ставка,
	|	ВременнаяТаблицаРасчетыСПоставщиками.ВалютаПлатежа,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Документ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТоварныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент КАК ТоварныйДокумент
	|ПОМЕСТИТЬ ВТТоварныеДокументы
	|ИЗ
	|	ВременнаяТаблицаЗакупкиПоставщиковДляКУДиР КАК ВТЗакупкиПоставщиковДляКУДиР
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ДокументПриходнаяНакладная
	|		ПО (ДокументПриходнаяНакладная.Ссылка = ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПримененияЕНВД.СрезПоследних(&ДатаДокумента, ) КАК ПримененияЕНВД
	|		ПО ВТЗакупкиПоставщиковДляКУДиР.Организация = ПримененияЕНВД.Организация
	|			И (ПримененияЕНВД.СтруктурнаяЕдиница = ДокументПриходнаяНакладная.СтруктурнаяЕдиница)
	|ГДЕ
	|	(ДокументПриходнаяНакладная.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ ЕСТЬNULL(ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД, ЛОЖЬ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварныеДокументы.ТоварныйДокумент КАК ТоварныйДокумент,
	|	ЗакупкиДляКУДиР.Номенклатура КАК Номенклатура,
	|	ЗакупкиДляКУДиР.ЭтоТоварыКРеализации КАК ЭтоТоварыКРеализации,
	|	СУММА(ЗакупкиДляКУДиР.СуммаВал) КАК Сумма,
	|	СУММА(ЗакупкиДляКУДиР.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТУчтенныеТовары
	|ИЗ
	|	РегистрНакопления.ЗакупкиДляКУДиР КАК ЗакупкиДляКУДиР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварныеДокументы КАК ВТТоварныеДокументы
	|		ПО (ВТТоварныеДокументы.ТоварныйДокумент = ЗакупкиДляКУДиР.ТоварныйДокумент)
	|			И (ЗакупкиДляКУДиР.Регистратор <> &Ссылка)
	|ГДЕ
	|	ЗакупкиДляКУДиР.МоментВремени < &МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТоварныеДокументы.ТоварныйДокумент,
	|	ЗакупкиДляКУДиР.Номенклатура,
	|	ЗакупкиДляКУДиР.ЭтоТоварыКРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗакупкиПоставщиковДляКУДиР.Период КАК Период,
	|	ВТЗакупкиПоставщиковДляКУДиР.ДатаДокумента КАК ДатаДокумента,
	|	ВТЗакупкиПоставщиковДляКУДиР.НомерСтроки КАК НомерСтроки,
	|	ВТЗакупкиПоставщиковДляКУДиР.Организация КАК Организация,
	|	ВТЗакупкиПоставщиковДляКУДиР.ДенежныйДокумент КАК ДенежныйДокумент,
	|	ВТЗакупкиПоставщиковДляКУДиР.ТоварныйДокумент КАК ТоварныйДокумент,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ВТЗакупкиПоставщиковДляКУДиР.УчитыватьВНУ КАК УчитыватьВНУ,
	|	ВТЗакупкиПоставщиковДляКУДиР.ЭтоТоварыКРеализации КАК ЭтоТоварыКРеализации,
	|	ВТЗакупкиПоставщиковДляКУДиР.СуммаВал КАК СуммаВал,
	|	ВТЗакупкиПоставщиковДляКУДиР.СуммаВал КАК Сумма,
	|	ВТЗакупкиПоставщиковДляКУДиР.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК Количество,
	|	0 КАК СуммаНДС
	|ИЗ
	|	ВременнаяТаблицаЗакупкиПоставщиковДляКУДиР КАК ВТЗакупкиПоставщиковДляКУДиР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварныеДокументы.ТоварныйДокумент КАК ТоварныйДокумент,
	|	Закупки.Номенклатура КАК Номенклатура,
	|	Закупки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(Закупки.Количество) КАК Количество,
	|	СУММА(Закупки.Всего) КАК Всего,
	|	ЕСТЬNULL(Закупки.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	НЕ Закупки.ТоварыДляПроизводства КАК ЭтоТоварыКРеализации
	|ПОМЕСТИТЬ ВТЗакупки
	|ИЗ
	|	ВТТоварныеДокументы КАК ВТТоварныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Запасы КАК Закупки
	|		ПО (Закупки.Ссылка = ВТТоварныеДокументы.ТоварныйДокумент)
	|			И (Закупки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТоварныеДокументы.ТоварныйДокумент,
	|	Закупки.Номенклатура,
	|	Закупки.ЕдиницаИзмерения,
	|	ЕСТЬNULL(Закупки.СтавкаНДС.Ставка, 0),
	|	Закупки.ТоварыДляПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Закупки.ТоварныйДокумент КАК ТоварныйДокумент,
	|	Закупки.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Закупки.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|			ТОГДА Закупки.Количество * Закупки.ЕдиницаИзмерения.Коэффициент - ЕСТЬNULL(ВТУчтенныеТовары.Количество, 0)
	|		ИНАЧЕ Закупки.Количество - ЕСТЬNULL(ВТУчтенныеТовары.Количество, 0)
	|	КОНЕЦ КАК Количество,
	|	Закупки.Всего - ЕСТЬNULL(ВТУчтенныеТовары.Сумма, 0) КАК Сумма,
	|	Закупки.СтавкаНДС КАК СтавкаНДС,
	|	Закупки.ЭтоТоварыКРеализации КАК ЭтоТоварыКРеализации
	|ИЗ
	|	ВТЗакупки КАК Закупки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчтенныеТовары КАК ВТУчтенныеТовары
	|		ПО (ВТУчтенныеТовары.ТоварныйДокумент = Закупки.ТоварныйДокумент)
	|			И (ВТУчтенныеТовары.Номенклатура = Закупки.Номенклатура)
	|ГДЕ
	|	Закупки.Всего - ЕСТЬNULL(ВТУчтенныеТовары.Сумма, 0) <> 0
	|ИТОГИ ПО
	|	ТоварныйДокумент";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаОплаты = РезультатЗапроса[3].Выгрузить();
	ТаблицаРезультат = ТаблицаОплаты.Скопировать(Новый Массив());
	ВыборкаДокументовСТоварами = РезультатЗапроса[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	УчетВалюты = ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций");
	НацВалюта = Константы.НациональнаяВалюта.Получить();
	ВалютаДокумента = ДокументСсылкаРасходИзКассы.ВалютаДенежныхСредств;
	
	Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
		ТекущийКурс = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, ДокументСсылкаРасходИзКассы.Дата);
	КонецЕсли;
	
	Пока ВыборкаДокументовСТоварами.Следующий() Цикл
		СвободныеОплаты = ТаблицаОплаты.НайтиСтроки(Новый Структура("ТоварныйДокумент", ВыборкаДокументовСТоварами.ТоварныйДокумент));
		ВыборкаЗаписей = ВыборкаДокументовСТоварами.Выбрать();
		СуммаЗаписи = 0;
		Для Каждого ДокументОплаты Из СвободныеОплаты Цикл
			Если СуммаЗаписи > 0 Тогда
				НовСтр = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаЗаписей);
				ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты,,"ЭтоТоварыКРеализации");
				Если ДокументОплаты.Сумма >= СуммаЗаписи Тогда
					НовСтр.Сумма = СуммаЗаписи;
				Иначе
					НовСтр.Сумма = ДокументОплаты.Сумма;
				КонецЕсли;
				НовСтр.Количество = ?(ВыборкаЗаписей.Сумма = 0, 0, ВыборкаЗаписей.Количество*НовСтр.Сумма/ВыборкаЗаписей.Сумма);
				ДокументОплаты.Сумма = ДокументОплаты.Сумма - НовСтр.Сумма;
				НовСтр.СуммаВал = НовСтр.Сумма;
				
				Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
					НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
				КонецЕсли;
				НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ВыборкаЗаписей.СтавкаНДС)/100);
				НовСтр.Номенклатура = ВыборкаЗаписей.Номенклатура;
				НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
				СуммаЗаписи = СуммаЗаписи - НовСтр.Сумма - НовСтр.СуммаНДС;
				Если СуммаЗаписи > 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Пока ДокументОплаты.Сумма <> 0 И ВыборкаЗаписей.Следующий() Цикл
				СуммаЗаписи = ВыборкаЗаписей.Сумма;
				НовСтр = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаЗаписей);
				ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты,,"ЭтоТоварыКРеализации");
				Если ДокументОплаты.Сумма >= ВыборкаЗаписей.Сумма Тогда
					НовСтр.Сумма = ВыборкаЗаписей.Сумма;
					НовСтр.Количество =  ВыборкаЗаписей.Количество;
				Иначе
					НовСтр.Сумма = ДокументОплаты.Сумма;
					НовСтр.Количество =  ВыборкаЗаписей.Количество*ДокументОплаты.Сумма/ВыборкаЗаписей.Сумма;
				КонецЕсли;
				ДокументОплаты.Сумма = ДокументОплаты.Сумма - НовСтр.Сумма;
				НовСтр.СуммаВал = НовСтр.Сумма;
				
				Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
					НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
				КонецЕсли;
				НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ВыборкаЗаписей.СтавкаНДС)/100);
				НовСтр.Номенклатура = ВыборкаЗаписей.Номенклатура;
				НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
				СуммаЗаписи = СуммаЗаписи - НовСтр.Сумма - НовСтр.СуммаНДС;
			КонецЦикла;
			Если ДокументОплаты.Сумма <> 0 Тогда
				НовСтр = ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты);
				ДокументОплаты.Сумма = 0;
				НовСтр.СуммаВал = НовСтр.Сумма;
				Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
					НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
				КонецЕсли;
				НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ДокументОплаты.СтавкаНДС)/100);
				НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ДокументОплаты Из ТаблицаОплаты Цикл
		Если ДокументОплаты.Сумма <> 0 Тогда
			НовСтр = ТаблицаРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, ДокументОплаты);
			НовСтр.СуммаВал = НовСтр.Сумма;
			Если УчетВалюты И ВалютаДокумента <> НацВалюта Тогда
				НовСтр.Сумма = НовСтр.Сумма * ТекущийКурс.Курс / ТекущийКурс.Кратность;
			КонецЕсли;
			НовСтр.СуммаНДС = НовСтр.Сумма - НовСтр.Сумма /((100+ ДокументОплаты.СтавкаНДС)/100);
			НовСтр.Сумма = НовСтр.Сумма - НовСтр.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗакупкиДляКУДиР", ТаблицаРезультат);
	
КонецПроцедуры // СформироватьТаблицаЗакупкиПоставщиковДляКУДиР()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДвиженияДенежныхСредств(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ИспользуютсяПереводыВПути",РегистрыСведений.ПрименениеПереводовВПути.ИспользуютсяПереводыВПути(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата,СтруктураДополнительныеСвойства.ДляПроведения.Организация));
	Запрос.УстановитьПараметр("ВалютаУчета", УправлениеНебольшойФирмойПовтИсп.ПолучитьВалютуУчета());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаРасходИзКассы.ВалютаДенежныхСредств);
	
	Если ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь") Тогда
		Итог = ДокументСсылкаРасходИзКассы.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	Иначе
		Итог = 0;
	КонецЕсли;
	ОстатокСуммы = ДокументСсылкаРасходИзКассы.СуммаДокумента - Итог;
	Запрос.УстановитьПараметр("ПлатежныйКалендарь", ПолучитьФункциональнуюОпцию("ПлатежныйКалендарь"));
	Запрос.УстановитьПараметр("ОстатокСуммы", ОстатокСуммы);
	Запрос.УстановитьПараметр("УчетВалютныхОпераций", ПолучитьФункциональнуюОпцию("УчетВалютныхОпераций"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.АналитикаДДС КАК Аналитика,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	ТаблицаДокумента.Проект КАК Проект,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))) КАК СуммаРасход,
	|	СУММА(&ОстатокСуммы) КАК СуммаРасходВал,
	|	0 КАК СуммаПриход,
	|	0 КАК СуммаПриходВал
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта = &ВалютаУчета) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|		ПО ТаблицаДокумента.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|ГДЕ
	|	(ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк))
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.АналитикаДДС,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк))
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.АналитикаДДС,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа),
	|	0,
	|	0
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|			ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.БанковскийСчетКассаСчетУчета,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВыплатаЗаработнойПлаты.НомерСтроки),
	|	ВыплатаЗаработнойПлаты.Ссылка.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
	|	ВыплатаЗаработнойПлаты.Ссылка.Статья,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник,
	|	ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств,
	|	ВыплатаЗаработнойПлаты.Проект,
	|	ВыплатаЗаработнойПлаты.Подразделение,
	|	СУММА(ВЫРАЗИТЬ(ПлатежнаяВедомостьСотрудники.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(ПлатежнаяВедомостьСотрудники.СуммаПлатежа),
	|	0,
	|	0
	|ИЗ
	|	Документ.ПлатежнаяВедомость.Сотрудники КАК ПлатежнаяВедомостьСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК ВыплатаЗаработнойПлаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютКассы
	|			ПО ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств = КурсыВалютКассы.Валюта
	|		ПО ПлатежнаяВедомостьСотрудники.Ссылка = ВыплатаЗаработнойПлаты.Ведомость
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ
	|						Константы.ВалютаУчета
	|					ИЗ
	|						Константы КАК Константы)) КАК КурсыВалютУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|	И ВыплатаЗаработнойПлаты.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Зарплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаЗаработнойПлаты.Ссылка.Дата,
	|	ВыплатаЗаработнойПлаты.Ссылка.Статья,
	|	ПлатежнаяВедомостьСотрудники.Сотрудник,
	|	ВыплатаЗаработнойПлаты.Ссылка.ВалютаДенежныхСредств,
	|	ВыплатаЗаработнойПлаты.Проект,
	|	ВыплатаЗаработнойПлаты.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.СчетОрганизации,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение,
	|	0,
	|	0,
	|	СУММА(ВЫРАЗИТЬ(&ОстатокСуммы * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))),
	|	СУММА(&ОстатокСуммы)
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|	И НЕ &ИспользуютсяПереводыВПути
	|	И &ОстатокСуммы > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Статья,
	|	ТаблицаДокумента.СчетОрганизации,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Проект,
	|	ТаблицаДокумента.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.БезНаличные),
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СчетОрганизации,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение,
	|	0,
	|	0,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность)),
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа)
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|	И НЕ &ИспользуютсяПереводыВПути
	|	И &ПлатежныйКалендарь
	|	И ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Статья,
	|	ВременнаяТаблицаРасшифровкаПлатежа.СчетОрганизации,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Проект,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Подразделение";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияДенежныхСредств", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

#Область Биллинг

// Формирует таблицу значений, содержащую данные для проведения по регистру ВыполнениеДоговоровОбслуживания.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаВыполнениеДоговораОбслуживания(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылкаРасходИзКассы.НаправлениеДеятельности)
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьБиллинг")
		ИЛИ НЕ Константы.БиллингВестиУчетРасходовПоДоговорамОбслуживания.Получить() Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыполнениеДоговоровОбслуживания", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаШапка.Дата КАК Период,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ВременнаяТаблицаШапка.Корреспонденция КАК ОбъектДоговораОбслуживания,
	|	ИСТИНА КАК УказанаСтоимость,
	|	1 КАК Количество,
	|	ВременнаяТаблицаШапка.СуммаПоДоговоруОбслуживания КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ВременнаяТаблицаШапка.НаправлениеДеятельности = ДоговорыКонтрагентов.ДоговорОбслуживанияНаправлениеДеятельности
	|ГДЕ
	|	(ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|			ИЛИ ВременнаяТаблицаШапка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы))
	|	И ДоговорыКонтрагентов.ЭтоДоговорОбслуживания";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаВыполнениеДоговоровОбслуживания", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьТекстЗапросаИнициализироватьДанныеДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта В (&ВалютаУчета, &ВалютаДС, &ВалютаДоговораКредитаЗайма, &ВалютаДоговораОбслуживания)) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НачислениеНалоговНалоги.СрокУплаты КАК СрокУплаты
	|ПОМЕСТИТЬ ВременнаяТаблицаСрокУплаты
	|ИЗ
	|	Документ.НачислениеНалогов.Налоги КАК НачислениеНалоговНалоги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходИзКассы КАК РасходИзКассы
	|		ПО (РасходИзКассы.Ссылка = &Ссылка)
	|			И НачислениеНалоговНалоги.Ссылка = РасходИзКассы.ДокументОснование
	|			И (РасходИзКассы.ВидНалога = НачислениеНалоговНалоги.ВидНалога)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.Ссылка.ВидОперации КАК ВидОперации,
	|	ТаблицаДокумента.Ссылка.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДоговорам КАК ВестиРасчетыПоДоговорам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.Ссылка.Контрагент.ВестиУчетОплатыПоСчетам КАК ВестиУчетОплатыПоСчетам,
	|	ТаблицаДокумента.Ссылка.УчитыватьВНУ КАК УчитыватьВНУ,
	|	ТаблицаДокумента.Ссылка.Организация КАК ОрганизацияВНУ,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Договор.ЭтоДоговорОбслуживания
	|				И ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетРасходовПоДоговорамОбслуживания,
	|	ТаблицаДокумента.Договор.ДоговорОбслуживанияНаправлениеДеятельности КАК ДоговорОбслуживанияНаправлениеДеятельности,
	|	ТаблицаДокумента.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ТаблицаДокумента.Ссылка.Касса КАК Касса,
	|	ТаблицаДокумента.Ссылка.Корреспонденция КАК Корреспонденция,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиДДС
	|				ИЛИ ТаблицаДокумента.СтатьяДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Ссылка.Статья
	|		ИНАЧЕ ТаблицаДокумента.СтатьяДДС
	|	КОНЕЦ КАК Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Заказ = НЕОПРЕДЕЛЕНО
	|				И (ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|					ИЛИ ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Покупателю)
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		КОГДА (ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Поставщику)
	|				ИЛИ ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НашейОрганизации))
	|				И ТаблицаДокумента.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДокумента.Заказ
	|	КОНЕЦ КАК Заказ,
	|	ТаблицаДокумента.ПризнакАванса КАК ПризнакАванса,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА &ВалютаУчета = &ВалютаДС
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		КОГДА &ВалютаУчета = ТаблицаДокумента.Договор.ВалютаРасчетов
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		КОГДА &ВалютаУчета = &НациональнаяВалюта
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаПлатежа * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУчета,
	|	ТаблицаДокумента.СуммаРасчетов КАК СуммаРасчетов,
	|	ТаблицаДокумента.СуммаПлатежа КАК СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.РасходДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.РасходДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.ДокументПланирования) = ТИП(Документ.ПеремещениеДСПлан)
	|				И ТаблицаДокумента.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ПеремещениеДСПлан.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.ДокументПланирования
	|		КОГДА ТаблицаДокумента.СчетНаОплату.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.СчетНаОплату
	|		КОГДА ТаблицаДокумента.Заказ.ЗапланироватьОплату
	|			ТОГДА ТаблицаДокумента.Заказ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетНаОплатуДляПлатежногоКалендаря,
	|	ТаблицаДокумента.СчетНаОплату КАК СчетНаОплату,
	|	ТаблицаДокумента.Ссылка.Касса.СчетУчета КАК БанковскийСчетКассаСчетУчета,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПокупателя КАК СчетУчетаАвансовПокупателя,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаДокумента.Ссылка.Контрагент.СчетУчетаАвансовПоставщику КАК СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.ТипСуммы КАК ТипСуммы,
	|	ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	ТаблицаДокумента.Ссылка.СчетОрганизации КАК СчетОрганизации,
	|	ТаблицаДокумента.Ссылка.Подотчетник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма.СчетУчета
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма.СчетУчетаПроцентов
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.Ссылка.ДоговорКредитаЗайма.СчетУчетаКомиссии
	|	КОНЕЦ КАК СчетУчетаПоТипуСуммы,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ""Оплата основного долга по кредиту""
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ""Оплата процентов по кредиту""
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ""Оплата комиссии по кредиту""
	|	КОНЕЦ КАК СодержаниеПоТипуСуммы,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|			ТОГДА ТаблицаДокумента.Ссылка.Подотчетник
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|				ИЛИ ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ТОГДА ТаблицаДокумента.Ссылка.Корреспонденция
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ТаблицаДокумента.Ссылка.Касса
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ТОГДА ТаблицаДокумента.Ссылка.Подотчетник
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|			ТОГДА ТаблицаДокумента.Ссылка.КассаККМ
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|			ТОГДА ТаблицаДокумента.Ссылка.ВидНалога
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ТОГДА ТаблицаДокумента.Ссылка.Подотчетник
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА ТаблицаДокумента.Ссылка.СчетОрганизации
	|		КОГДА ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА ТаблицаДокумента.Ссылка.Касса
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Контрагент
	|	КОНЕЦ КАК АналитикаДДС,
	|	ТаблицаДокумента.Ссылка.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.СпособЗачета КАК СпособЗачета,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Курс КАК Курс,
	|	ТаблицаДокумента.Кратность КАК Кратность,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Проект
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Проект
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Подразделение
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	ТаблицаДокумента.Ссылка.ДоговорПлатежногоАгента
	|ПОМЕСТИТЬ ВременнаяТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.РасходИзКассы.РасшифровкаПлатежа КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
	|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ТаблицаДокумента.ВидОперации КАК ВидОперации,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Статья КАК Статья,
	|	ТаблицаДокумента.Касса КАК Касса,
	|	ТаблицаДокумента.КассаККМ КАК КассаККМ,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА &ВалютаДоговораОбслуживания <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|					И &ВалютаДоговораОбслуживания = ТаблицаДокумента.ВалютаДенежныхСредств
	|				ТОГДА ТаблицаДокумента.СуммаДокумента
	|			КОГДА &ВалютаДоговораОбслуживания <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|					И &ВалютаДоговораОбслуживания <> ТаблицаДокумента.ВалютаДенежныхСредств
	|				ТОГДА ТаблицаДокумента.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчетаСрезПоследних.Кратность * КурсыВалютДоговорОбслуживания.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * КурсыВалютКассы.Кратность * КурсыВалютДоговорОбслуживания.Курс)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаПоДоговоруОбслуживания,
	|	ТаблицаДокумента.Касса.СчетУчета КАК КассаСчетУчета,
	|	ТаблицаДокумента.КассаККМ.СчетУчета КАК КассаККМСчетУчета,
	|	ТаблицаДокумента.ВидНалога КАК ВидНалога,
	|	ТаблицаДокумента.ВидНалога.СчетУчета КАК ВидНалогаСчетУчета,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.НаправлениеДеятельности.СчетУчетаВыручкиОтПродаж КАК НаправлениеДеятельностиСчетУчетаВыручкиОтПродаж,
	|	ТаблицаДокумента.НаправлениеДеятельности.СчетУчетаСебестоимостиПродаж КАК НаправлениеДеятельностиСчетУчетаСебестоимостиПродаж,
	|	ТаблицаДокумента.Заказ КАК Заказ,
	|	ТаблицаДокумента.Корреспонденция КАК Корреспонденция,
	|	ТаблицаДокумента.Корреспонденция.ТипСчета КАК КорреспонденцияТипСчета,
	|	ТаблицаДокумента.Подотчетник КАК Подотчетник,
	|	ТаблицаДокумента.Подотчетник.СчетРасчетовСПерсоналом КАК ПодотчетникСчетРасчетовСПерсоналом,
	|	ТаблицаДокумента.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаДокумента.Подотчетник.СчетРасчетовСПодотчетниками КАК ПодотчетникСчетРасчетовСПодотчетниками,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ТаблицаДокумента.ДокументОснование КАК ДокументОснование,
	|	ТаблицаДокумента.АналитикаПрочихДоходовИРасходов КАК АналитикаДоходовИРасходов,
	|	ТаблицаДокумента.СчетОрганизации КАК СчетОрганизации,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчетПрочихРасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СрокУплаты = &ПустаяДата
	|			ТОГДА ТаблицаСрокУплаты.СрокУплаты
	|		ИНАЧЕ ТаблицаДокумента.СрокУплаты
	|	КОНЕЦ КАК СрокУплаты,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Подотчетнику)
	|			ТОГДА ТаблицаДокумента.Подотчетник
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Прочее)
	|				ИЛИ ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.НаРасходы)
	|			ТОГДА ТаблицаДокумента.Корреспонденция
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЛичныеСредстваПредпринимателя)
	|			ТОГДА ТаблицаДокумента.Касса
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|			ТОГДА ТаблицаДокумента.Контрагент
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ТОГДА ТаблицаДокумента.Контрагент
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|			ТОГДА ТаблицаДокумента.Подотчетник
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|			ТОГДА ТаблицаДокумента.КассаККМ
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|			ТОГДА ТаблицаДокумента.ВидНалога
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику)
	|			ТОГДА ТаблицаДокумента.Подотчетник
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА ТаблицаДокумента.Ссылка.СчетОрганизации
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк)
	|			ТОГДА ТаблицаДокумента.Ссылка.Касса
	|		ИНАЧЕ ТаблицаДокумента.Контрагент
	|	КОНЕЦ КАК АналитикаДДС,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоДокументам КАК ВестиРасчетыПоДокументам,
	|	ТаблицаДокумента.Контрагент.ВестиРасчетыПоЗаказам КАК ВестиРасчетыПоЗаказам,
	|	ТаблицаДокумента.НовыйМеханизмИнкассации
	|		И ТаблицаДокумента.КассаККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор) КАК НовыйМеханизмИнкассации,
	|	ТаблицаДокумента.Проект КАК Проект,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.РасходИзКассы КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСрокУплаты КАК ТаблицаСрокУплаты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютДоговорОбслуживания
	|		ПО (КурсыВалютДоговорОбслуживания.Валюта = &ВалютаДоговораОбслуживания)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходИзКассы.Дата КАК Период,
	|	&ОрганизацияДляРегОтчетности КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА РасходИзКассы.ДокументОснование.Дата ЕСТЬ NULL
	|			ТОГДА &ПериодРегистрацииНДФЛ
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасходИзКассы.ДокументОснование.Дата, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодРегистрации,
	|	РасходИзКассы.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТРасчетыСНДФЛ
	|ИЗ
	|	ВременнаяТаблицаШапка КАК РасходИзКассы
	|ГДЕ
	|	РасходИзКассы.Сумма <> 0
	|	И (РасходИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.НДФЛСотрудники)
	|			ИЛИ РасходИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.НДФЛДоходыСвышеПредельнойВеличины))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходДенежныхСредствИзКассы.Дата КАК Период,
	|	&ОрганизацияДляРегОтчетности КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ИСТИНА КАК ЭтоСтраховыеВзносы,
	|	ВЫБОР
	|		КОГДА РасходДенежныхСредствИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ПФРНакопительнаяСотрудники)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная)
	|		КОГДА РасходДенежныхСредствИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ПФРСтраховаяСотрудники)
	|			ТОГДА ВЫБОР
	|					КОГДА &ОбъединятьНакопительнуюИСтраховуюЧасть
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРПоСуммарномуТарифу)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРСтраховая)
	|				КОНЕЦ
	|		КОГДА РасходДенежныхСредствИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФОМССотрудники)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФФОМС)
	|		КОГДА РасходДенежныхСредствИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФСССотрудники)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|		КОГДА РасходДенежныхСредствИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФССТравматизмСотрудники)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)
	|	КОНЕЦ КАК ВидОбязательногоСтрахованияСотрудников,
	|	РасходДенежныхСредствИзКассы.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТРасчетыСФондамиПоСтраховымВзносам
	|ИЗ
	|	ВременнаяТаблицаШапка КАК РасходДенежныхСредствИзКассы
	|ГДЕ
	|	РасходДенежныхСредствИзКассы.Сумма <> 0
	|	И РасходДенежныхСредствИзКассы.ВидНалога В(&СтраховыеВидыВзаиморасчетов)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ОрганизацияДляРегОтчетности", ДокументСсылкаРасходИзКассы.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НациональнаяВалюта", СтруктураДополнительныеСвойства.НациональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаУчета", СтруктураДополнительныеСвойства.ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаРасходИзКассы.ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("ВалютаДоговораКредитаЗайма", ДокументСсылкаРасходИзКассы.ДоговорКредитаЗайма.ВалютаРасчетов);
	Если НЕ ЗначениеЗаполнено(ДокументСсылкаРасходИзКассы.НаправлениеДеятельности)
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьБиллинг")
		ИЛИ НЕ Константы.БиллингВестиУчетРасходовПоДоговорамОбслуживания.Получить() Тогда
		Запрос.УстановитьПараметр("ВалютаДоговораОбслуживания", Справочники.Валюты.ПустаяСсылка());
	Иначе
		ДоговорОбслуживания = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ДоговорОбслуживанияНаправлениеДеятельности", ДокументСсылкаРасходИзКассы.НаправлениеДеятельности);
		Запрос.УстановитьПараметр("ВалютаДоговораОбслуживания", ?(ЗначениеЗаполнено(ДоговорОбслуживания), ДоговорОбслуживания.ВалютаРасчетов, Справочники.Валюты.ПустаяСсылка()));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОбъединятьНакопительнуюИСтраховуюЧасть", ?(ЗначениеЗаполнено(ДокументСсылкаРасходИзКассы.ДокументОснование), ДокументСсылкаРасходИзКассы.ДокументОснование.Дата >= УчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР(), Истина));
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));
	Запрос.УстановитьПараметр("ПериодРегистрацииНДФЛ", НачалоМесяца(ДобавитьМесяц(ДокументСсылкаРасходИзКассы.СрокУплаты, -1)));
	
	СтраховыеВидыВзаиморасчетов = Новый Массив();
	СтраховыеВидыВзаиморасчетов.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	СтраховыеВидыВзаиморасчетов.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	СтраховыеВидыВзаиморасчетов.Добавить(Справочники.ВидыНалогов.ФОМССотрудники);
	СтраховыеВидыВзаиморасчетов.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
	СтраховыеВидыВзаиморасчетов.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
	
	Запрос.УстановитьПараметр("СтраховыеВидыВзаиморасчетов",СтраховыеВидыВзаиморасчетов);
	
	Запрос.УстановитьПараметр("ИспользоватьСтатьиДДС", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиДвиженияДенежныхСредств"));
	
	Запрос.Текст = ПолучитьТекстЗапросаИнициализироватьДанныеДокумента();
	
	Запрос.Выполнить();
	
	// Формирование таблиц движений по разделам учета.
	СформироватьТаблицаДенежныеСредства(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДенежныеСредстваВКассахККМ(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДенежныеСредстваКПоступлению(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПодотчетниками(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыСПерсоналом(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	// Прочие расчеты
	СформироватьТаблицаРасчетыСПрочимиКонтрагентами(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыПоКредитамИЗаймам(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	// Конец Прочие расчеты
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаРасчетыПоНалогам(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаУправленческий(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПлатежныйКалендарь(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДенежныеСредстваВРезерве(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	РасчетыПроведениеДокументов.СформироватьТаблицаОплатаСчетовИЗаказовДенежныеДокументы(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьНДФЛРасчетыНалоговыхАгентовСБюджетом(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьРасчетыСФондамиПоСтраховымВзносам(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	// Биллинг
	СформироватьТаблицаВыполнениеДоговораОбслуживания(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗакупкиПоставщиковДляКУДиР(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаОплатаДокументов(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДвиженияДенежныхСредств(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаРасходИзКассы, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если НЕ Константы.КонтролироватьОстаткиПриПроведении.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	// МобильноеПриложение
	Если МобильноеПриложениеВызовСервера.НужноОграничитьФункциональность() Тогда
		Возврат;
	КонецЕсли;
	// Конец МобильноеПриложение
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы содержат записи, необходимо выполнить контроль
	// отрицательных остатков.
	Если СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПодотчетникамиИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПоставщикамиИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваВКассахККМИзменение 
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваКПоступлениюИзменение
	 ИЛИ СтруктураВременныеТаблицы.ДвиженияДенежныеСредстваВРезервеИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияДенежныеСредстваИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияДенежныеСредстваИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияДенежныеСредстваИзменение.БанковскийСчетКасса КАК БанковскийСчетКассаПредставление,
		|	ДвиженияДенежныеСредстваИзменение.Валюта КАК ВалютаПредставление,
		|	ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств КАК ТипДенежныхСредствПредставление,
		|	ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств КАК ТипДенежныхСредств,
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалИзменение + ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) КАК ОстатокДенежныхСредств,
		|	ДвиженияДенежныеСредстваИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияДенежныеСредстваИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияДенежныеСредстваИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияДенежныеСредстваИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияДенежныеСредстваИзменение КАК ДвиженияДенежныеСредстваИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредства.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваОстатки
		|		ПО ДвиженияДенежныеСредстваИзменение.Организация = ДенежныеСредстваОстатки.Организация
		|			И ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств = ДенежныеСредстваОстатки.ТипДенежныхСредств
		|			И ДвиженияДенежныеСредстваИзменение.БанковскийСчетКасса = ДенежныеСредстваОстатки.БанковскийСчетКасса
		|			И ДвиженияДенежныеСредстваИзменение.Валюта = ДенежныеСредстваОстатки.Валюта
		|			И ДвиженияДенежныеСредстваИзменение.ДоговорКонтрагента = ДенежныеСредстваОстатки.ДоговорКонтрагента
		|ГДЕ
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПодотчетникамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник КАК СотрудникПредставление,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Валюта КАК ВалютаПредставление,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.Документ КАК ДокументПредставление,
		|	ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) КАК ОстатокУПодотчетногоЛица,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПодотчетникамиИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияРасчетыСПодотчетникамиИзменение КАК ДвиженияРасчетыСПодотчетникамиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПодотчетниками.Остатки(&МоментКонтроля, ) КАК РасчетыСПодотчетникамиОстатки
		|		ПО ДвиженияРасчетыСПодотчетникамиИзменение.Организация = РасчетыСПодотчетникамиОстатки.Организация
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Сотрудник = РасчетыСПодотчетникамиОстатки.Сотрудник
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Валюта = РасчетыСПодотчетникамиОстатки.Валюта
		|			И ДвиженияРасчетыСПодотчетникамиИзменение.Документ = РасчетыСПодотчетникамиОстатки.Документ
		|ГДЕ
		|	(ТИПЗНАЧЕНИЯ(РасчетыСПодотчетникамиОстатки.Документ) = ТИП(Документ.АвансовыйОтчет)
		|				И ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) > 0
		|			ИЛИ ТИПЗНАЧЕНИЯ(РасчетыСПодотчетникамиОстатки.Документ) <> ТИП(Документ.АвансовыйОтчет)
		|				И ЕСТЬNULL(РасчетыСПодотчетникамиОстатки.СуммаВалОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПоставщикамиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПоставщикамиИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыСПоставщикамиИзменение.Контрагент КАК КонтрагентПредставление,
		|	ДвиженияРасчетыСПоставщикамиИзменение.Договор КАК ДоговорПредставление,
		|	ДвиженияРасчетыСПоставщикамиИзменение.Договор.ВалютаРасчетов КАК ВалютаПредставление,
		|	ДвиженияРасчетыСПоставщикамиИзменение.Документ КАК ДокументПредставление,
		|	ДвиженияРасчетыСПоставщикамиИзменение.Заказ КАК ЗаказПредставление,
		|	ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов КАК ТипРасчетовПредставление,
		|	ИСТИНА КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаОстаткаЗадолженности,
		|	-(ДвиженияРасчетыСПоставщикамиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0)) КАК СуммаНепогашенныхАвансов,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПоставщикамиИзменение КАК ДвиженияРасчетыСПоставщикамиИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.Остатки(&МоментКонтроля, ) КАК РасчетыСПоставщикамиОстатки
		|		ПО ДвиженияРасчетыСПоставщикамиИзменение.Организация = РасчетыСПоставщикамиОстатки.Организация
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Контрагент = РасчетыСПоставщикамиОстатки.Контрагент
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Договор = РасчетыСПоставщикамиОстатки.Договор
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Документ = РасчетыСПоставщикамиОстатки.Документ
		|			И ДвиженияРасчетыСПоставщикамиИзменение.Заказ = РасчетыСПоставщикамиОстатки.Заказ
		|			И ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов = РасчетыСПоставщикамиОстатки.ТипРасчетов
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ДвиженияРасчетыСПоставщикамиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|				ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) > 0
		|			ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаВалОстаток, 0) < 0
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.КассаККМ КАК КассаККМПредставление,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.КассаККМ.ВалютаДенежныхСредств КАК ВалютаПредставление,
		|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалИзменение + ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток, 0) КАК ОстатокДенежныхСредств,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияДенежныеСредстваВКассахККМИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияДенежныеСредстваВКассахККМИзменение КАК ДвиженияДенежныеСредстваВКассахККМИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваВКассахККМОстатки
		|		ПО ДвиженияДенежныеСредстваВКассахККМИзменение.Организация = ДенежныеСредстваВКассахККМОстатки.Организация
		|			И ДвиженияДенежныеСредстваВКассахККМИзменение.КассаККМ = ДенежныеСредстваВКассахККМОстатки.КассаККМ
		|			И ДвиженияДенежныеСредстваВКассахККМИзменение.ДоговорКонтрагента = ДенежныеСредстваВКассахККМОстатки.ДоговорКонтрагента
		|ГДЕ
		|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаВалОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.Касса КАК КассаПредставление,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.ДокументПередачи КАК ДокументПередачиПредставление,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.ДокументПередачи.ВалютаДенежныхСредств КАК ВалютаПредставление,
		|	ЕСТЬNULL(ДенежныеСредстваКПоступлениюОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ДенежныеСредстваКПоступлениюОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаВалИзменение + ЕСТЬNULL(ДенежныеСредстваКПоступлениюОстатки.СуммаВалОстаток, 0) КАК ОстатокДенежныхСредств,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|ИЗ
		|	ДвиженияДенежныеСредстваКПоступлениюИзменение КАК ДвиженияДенежныеСредстваКПоступлениюИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКПоступлению.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваКПоступлениюОстатки
		|		ПО ДвиженияДенежныеСредстваКПоступлениюИзменение.Организация = ДенежныеСредстваКПоступлениюОстатки.Организация
		|			И ДвиженияДенежныеСредстваКПоступлениюИзменение.Касса = ДенежныеСредстваКПоступлениюОстатки.Касса
		|			И ДвиженияДенежныеСредстваКПоступлениюИзменение.ДоговорКонтрагента = ДенежныеСредстваКПоступлениюОстатки.ДоговорКонтрагента
		|ГДЕ
		|	ЕСТЬNULL(ДенежныеСредстваКПоступлениюОстатки.СуммаВалОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ДенежныеСредстваИРезервы.НомерСтроки) КАК НомерСтроки,
		|	ДенежныеСредстваИРезервы.Организация КАК Организация,
		|	ДенежныеСредстваИРезервы.БанковскийСчетКасса КАК БанковскийСчетКасса,
		|	ДенежныеСредстваИРезервы.Валюта КАК Валюта,
		|	ДенежныеСредстваИРезервы.ТипДенежныхСредств КАК ТипДенежныхСредствПредставление,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаВалОстаток) КАК СуммаВалОстаток,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаВалИзменение) КАК ОстатокДенежныхСредств,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаПередЗаписью) КАК СуммаПередЗаписью,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаПриЗаписи) КАК СуммаПриЗаписи,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаИзменение) КАК СуммаИзменение,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаВалПередЗаписью) КАК СуммаВалПередЗаписью,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаВалПриЗаписи) КАК СуммаВалПриЗаписи,
		|	СУММА(ДенежныеСредстваИРезервы.СуммаВалИзменение) КАК СуммаВалИзменение
		|ПОМЕСТИТЬ ИзменениеДенежныхСредствИРезервов
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДвиженияДенежныеСредстваИзменение.НомерСтроки КАК НомерСтроки,
		|		ДвиженияДенежныеСредстваИзменение.Организация КАК Организация,
		|		ДвиженияДенежныеСредстваИзменение.БанковскийСчетКасса КАК БанковскийСчетКасса,
		|		ДвиженияДенежныеСредстваИзменение.Валюта КАК Валюта,
		|		ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств КАК ТипДенежныхСредствПредставление,
		|		ДвиженияДенежныеСредстваИзменение.ТипДенежныхСредств КАК ТипДенежныхСредств,
		|		0 КАК СуммаОстаток,
		|		0 КАК СуммаВалОстаток,
		|		ДвиженияДенежныеСредстваИзменение.СуммаВалИзменение КАК ОстатокДенежныхСредств,
		|		ДвиженияДенежныеСредстваИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|		ДвиженияДенежныеСредстваИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|		ДвиженияДенежныеСредстваИзменение.СуммаИзменение КАК СуммаИзменение,
		|		ДвиженияДенежныеСредстваИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|		ДвиженияДенежныеСредстваИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|		ДвиженияДенежныеСредстваИзменение.СуммаВалИзменение КАК СуммаВалИзменение
		|	ИЗ
		|		ДвиженияДенежныеСредстваИзменение КАК ДвиженияДенежныеСредстваИзменение
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияДенежныеСредстваВРезервеИзменение.НомерСтроки,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.Организация,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.БанковскийСчетКасса,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.Валюта,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.ТипДенежныхСредств,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.ТипДенежныхСредств,
		|		0,
		|		0,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаИзменение,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаПередЗаписью,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаПриЗаписи,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаИзменение,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаПередЗаписью,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаПриЗаписи,
		|		ДвиженияДенежныеСредстваВРезервеИзменение.СуммаИзменение
		|	ИЗ
		|		ДвиженияДенежныеСредстваВРезервеИзменение КАК ДвиженияДенежныеСредстваВРезервеИзменение) КАК ДенежныеСредстваИРезервы
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваИРезервы.Организация,
		|	ДенежныеСредстваИРезервы.БанковскийСчетКасса,
		|	ДенежныеСредстваИРезервы.Валюта,
		|	ДенежныеСредстваИРезервы.ТипДенежныхСредств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияВременнаяТаблицаДенежныеСредства.НомерСтроки КАК НомерСтроки,
		|	ДвиженияВременнаяТаблицаДенежныеСредства.Организация КАК ОрганизацияПредставление,
		|	ДвиженияВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса КАК БанковскийСчетКассаПредставление,
		|	ДвиженияВременнаяТаблицаДенежныеСредства.ТипДенежныхСредствПредставление КАК ТипДенежныхСредств,
		|	ДвиженияВременнаяТаблицаДенежныеСредства.Валюта КАК ВалютаПредставление,
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ДвиженияВременнаяТаблицаДенежныеСредства.СуммаВалОстаток + ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) КАК ОстатокДенежныхСредств,
		|	ЕСТЬNULL(РезервыПоДокументам.СуммаОстаток, 0) + ЕСТЬNULL(НеснижаемыеОстаткиДенежныхСредствСрезПоследних.СуммаНеснижаемогоОстатка, 0) КАК ВРезерве,
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) КАК СвободныйОстаток
		|ИЗ
		|	ИзменениеДенежныхСредствИРезервов КАК ДвиженияВременнаяТаблицаДенежныеСредства
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредства.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваОстатки
		|		ПО ДвиженияВременнаяТаблицаДенежныеСредства.Организация = ДенежныеСредстваОстатки.Организация
		|			И ДвиженияВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса = ДенежныеСредстваОстатки.БанковскийСчетКасса
		|			И ДвиженияВременнаяТаблицаДенежныеСредства.Валюта = ДенежныеСредстваОстатки.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НеснижаемыеОстаткиДенежныхСредств.СрезПоследних(&МоментКонтроля, ) КАК НеснижаемыеОстаткиДенежныхСредствСрезПоследних
		|		ПО ДвиженияВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса = НеснижаемыеОстаткиДенежныхСредствСрезПоследних.БанковскийСчетКасса
		|			И ДвиженияВременнаяТаблицаДенежныеСредства.Валюта = НеснижаемыеОстаткиДенежныхСредствСрезПоследних.Валюта
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДенежныеСредстваВРезервеОстатки.Организация КАК Организация,
		|			ДенежныеСредстваВРезервеОстатки.ТипДенежныхСредств КАК ТипДенежныхСредств,
		|			ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
		|			ДенежныеСредстваВРезервеОстатки.Валюта КАК Валюта,
		|			СУММА(ДенежныеСредстваВРезервеОстатки.СуммаОстаток) КАК СуммаОстаток
		|		ИЗ
		|			РегистрНакопления.ДенежныеСредстваВРезерве.Остатки(&МоментКонтроля, ) КАК ДенежныеСредстваВРезервеОстатки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ДенежныеСредстваВРезервеОстатки.Организация,
		|			ДенежныеСредстваВРезервеОстатки.ТипДенежныхСредств,
		|			ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса,
		|			ДенежныеСредстваВРезервеОстатки.Валюта) КАК РезервыПоДокументам
		|		ПО ДвиженияВременнаяТаблицаДенежныеСредства.Организация = РезервыПоДокументам.Организация
		|			И ДвиженияВременнаяТаблицаДенежныеСредства.БанковскийСчетКасса = РезервыПоДокументам.БанковскийСчетКасса
		|			И ДвиженияВременнаяТаблицаДенежныеСредства.Валюта = РезервыПоДокументам.Валюта
		|ГДЕ
		|	ЕСТЬNULL(ДенежныеСредстваОстатки.СуммаВалОстаток, 0) - (ЕСТЬNULL(НеснижаемыеОстаткиДенежныхСредствСрезПоследних.СуммаНеснижаемогоОстатка, 0) + ЕСТЬNULL(РезервыПоДокументам.СуммаОстаток, 0)) < 0");

		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			ИЛИ НЕ МассивРезультатов[4].Пустой()
			ИЛИ НЕ МассивРезультатов[6].Пустой()Тогда
			ДокументОбъектРасходИзКассы = ДокументСсылкаРасходИзКассы.ПолучитьОбъект()
		КонецЕсли;
		
		// Отрицательный остаток по денежным средствам.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			КонтрольОстатковУНФ.ДенежныеСредства(ДокументОбъектРасходИзКассы, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с подотчетными лицами.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			КонтрольОстатковУНФ.РасчетыСПодотчетниками(ДокументОбъектРасходИзКассы, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по расчетам с поставщиками.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[2].Выбрать();
			КонтрольОстатковУНФ.РасчетыСПоставщиками(ДокументОбъектРасходИзКассы, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по кассе ККМ.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[3].Выбрать();
			КонтрольОстатковУНФ.ДенежныеСредстваВКассахККМ(ДокументОбъектРасходИзКассы, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по средствам к поступлению.
		Если НЕ МассивРезультатов[4].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[4].Выбрать();
			КонтрольОстатковУНФ.ДенежныеСредстваКПоступлению(ДокументОбъектРасходИзКассы, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по денежным средствам с учетом резервов.
		Если МассивРезультатов[0].Пустой() И НЕ МассивРезультатов[6].Пустой() Тогда //Если остатка денежных средств не хватает, то выводить ошибку по резервам нет смысла
			Если ДвижениеДенежныхСредствСервер.КонтролироватьРезервыДенежныхСредств() Тогда
				ВыборкаИзРезультатаЗапроса = МассивРезультатов[6].Выбрать();
				КонтрольОстатковУНФ.ДенежныеСредстваСУчетомРезервов(ДокументОбъектРасходИзКассы, ВыборкаИзРезультатаЗапроса, Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

#Область ВерсионированиеОбъектов

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ИнтерфейсПечати

Процедура СформироватьРКО(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати)
	Перем ПервыйДокумент, НомерСтрокиНачало, Ошибки;
	
	ТабличныйДокумент = ОписаниеПечатнойФормы.ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ДанныеПечати = Новый Структура;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Если ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Поставщику
			ИЛИ ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.НашейОрганизации Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Контрагент.СчетУчетаРасчетовСПоставщиком.Код КАК ДебетСубСчет,
								  |РасходИзКассы.Контрагент.СчетУчетаАвансовПоставщику.Код КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Подотчетнику Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Подотчетник.СчетРасчетовСПодотчетниками.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Налоги Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.ВидНалога.СчетУчета.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Покупателю Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Контрагент.СчетУчетаРасчетовСПокупателем.Код КАК ДебетСубСчет,
								  |РасходИзКассы.Контрагент.СчетУчетаАвансовПокупателя.Код КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Прочее ИЛИ
			ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.НаРасходы Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Корреспонденция.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.ПрочиеРасчеты Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Корреспонденция.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.РасчетыПоКредитам Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Корреспонденция.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Корреспонденция.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.КассаККМ.СчетУчета.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.ЗарплатаСотруднику Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Подотчетник.СчетРасчетовСПерсоналом.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Зарплата Тогда
			
			ЗапросСчетСотрудника = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПлатежнаяВедомостьСотрудники.Сотрудник.СчетРасчетовСПерсоналом.Код КАК ДебетСубСчет
			|ИЗ
			|	Документ.РасходИзКассы.ВыплатаЗаработнойПлаты КАК РасходИзКассыВыплатаЗаработнойПлаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПлатежнаяВедомость.Сотрудники КАК ПлатежнаяВедомостьСотрудники
			|		ПО РасходИзКассыВыплатаЗаработнойПлаты.Ведомость = ПлатежнаяВедомостьСотрудники.Ссылка
			|ГДЕ
			|	РасходИзКассыВыплатаЗаработнойПлаты.Ссылка = &Ссылка");
			ЗапросСчетСотрудника.УстановитьПараметр("Ссылка", ТекущийДокумент);
			РезультатЗапроса = ЗапросСчетСотрудника.Выполнить();
			
			Если РезультатЗапроса.Пустой() Тогда
				СтрокаДебетСубСчет = "НЕОПРЕДЕЛЕНО КАК ДебетСубСчет,
									  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
			Иначе
				СтрокаДебетСубСчет = Лев(РезультатЗапроса.Выгрузить()[0].ДебетСубСчет, 2)
									+ " КАК ДебетСубСчет,
									  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
			КонецЕсли; 
			
		ИначеЕсли ТекущийДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк Тогда
			СтрокаДебетСубСчет = "РасходИзКассы.Корреспонденция.Код КАК ДебетСубСчет,
								  |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		Иначе
			СтрокаДебетСубСчет = "НЕОПРЕДЕЛЕНО КАК ДебетСубСчет,
								 |НЕОПРЕДЕЛЕНО КАК ДебетСубСчетАвансов";
		КонецЕсли;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходИзКассы.Номер КАК Номер,
		|	РасходИзКассы.Дата КАК ДатаДокумента,
		|	РасходИзКассы.Организация КАК Организация,
		|	РасходИзКассы.Организация.ЮридическоеФизическоеЛицо КАК ЮрФизЛицо,
		|	РасходИзКассы.Организация.Префикс КАК Префикс,
		|	РасходИзКассы.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
		|	РасходИзКассы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
		|	РасходИзКассы.Выдать КАК Выдать,
		|	РасходИзКассы.Основание КАК Основание,
		|	РасходИзКассы.Приложение КАК Приложение,
		|	РасходИзКассы.СуммаДокумента КАК СуммаДокумента,
		|	РасходИзКассы.ПоДокументу КАК РеквизитыДокументаУдостоверяющегоЛичность,
		|	РасходИзКассы.Касса.СчетУчета.Код КАК КредитСубСчет,
		|	РасходИзКассы.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	РасходИзКассы.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
		|	РасходИзКассы.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
		|	РасходИзКассы.ПодписьГлавногоБухгалтера.Должность КАК ДолжностьГлавногоБухгалтера,
		|	РасходИзКассы.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
		|	РасходИзКассы.ПодписьКассира.Должность КАК ДолжностьКассира,
		|	РасходИзКассы.ПодписьКассира.РасшифровкаПодписи КАК РасшифровкаПодписиКассира,
		|	ПРЕДСТАВЛЕНИЕ(РасходИзКассы.ВалютаДенежныхСредств) КАК ВалютаПредставление,
		|	" + СтрокаДебетСубСчет + "
		|ИЗ
		|	Документ.РасходИзКассы КАК РасходИзКассы
		|ГДЕ
		|	РасходИзКассы.Ссылка = &ТекущийДокумент";
		
		ВыборкаДляПечати = Запрос.Выполнить().Выбрать();
		ВыборкаДляПечати.Следующий();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ДанныеПечати.Вставить("Сумма", ПечатьДокументовУНФ.ФорматироватьСуммуПлатежногоДокумента(ВыборкаДляПечати.СуммаДокумента, Ложь));
		ДанныеПечати.Вставить("НомерДокумента", ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ВыборкаДляПечати.ДатаДокумента, ВыборкаДляПечати.Номер, ВыборкаДляПечати.Префикс));
		ДанныеПечати.Вставить("СуммаПрописью", ПечатьДокументовУНФ.ФорматироватьСуммуПрописьюПлатежногоДокумента(ВыборкаДляПечати.СуммаДокумента, ВыборкаДляПечати.ВалютаДенежныхСредств, Ложь));
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуКвитанцияКСумке(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент();
	СинонимДокумента  = НСтр("ru='Квитанция к сумке'");
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_КвитанцияКСумке";
	
	ТабличныйДокумент.ПолеСлева  = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСнизу  = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РасходИзКассы.Ссылка КАК Ссылка,
	               |	РасходИзКассы.Дата КАК ДатаДокумента,
	               |	РасходИзКассы.Организация КАК Организация,
	               |	РасходИзКассы.СчетОрганизации КАК БанковскийСчет,
				   |	РасходИзКассы.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	               |	РасходИзКассы.ВидОперации КАК ВидОперации,
	               |	РасходИзКассы.СуммаДокумента КАК СуммаДокумента,
	               |	РасходИзКассы.НомерСумки КАК НомерСумки
	               |ИЗ
	               |	Документ.РасходИзКассы КАК РасходИзКассы
	               |ГДЕ
	               |	РасходИзКассы.Ссылка В(&МассивОбъектов)";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РасходИзКассы.ПФ_MXL_КвитанцияКСумке");
	ОбластьМакетаСекцияОсновнаяЧасть          = Макет.ПолучитьОбласть("СекцияОсновнаяЧасть");
	ОбластьМакетаСекцияТаблицаОсновнаяЧасть   = Макет.ПолучитьОбласть("СекцияТаблицаОсновнаяЧасть");
	ОбластьМакетаСекцияТаблицаСтрока          = Макет.ПолучитьОбласть("СекцияТаблицаСтрока");
	ОбластьМакетаСекцияОкончаниеТаблицы       = Макет.ПолучитьОбласть("СекцияОкончаниеТаблицы");
	ОбластьШапкаОборотнаяСторона = Макет.ПолучитьОбласть("ШапкаОборотнаяСторона");
	ТаблицаРасшифровкаПлатежа = МассивОбъектов[0].РасшифровкаПлатежа;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ЕстьОшибкиПечатиИнкассации(ДанныеПечати) Тогда
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			СведенияООрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента, , ДанныеПечати.БанковскийСчет);
			СведенияООрганизации.Вставить("ЮрФизЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеПечати.Организация, "ЮридическоеФизическоеЛицо"));
			ЗаполнитьПараметрыМакетаДляПечатиЛицевойСтороныИнкассации(ОбластьМакетаСекцияОсновнаяЧасть, ОбластьМакетаСекцияТаблицаОсновнаяЧасть, СведенияООрганизации, ДанныеПечати);
			ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НаименованиеДокумента = Нстр("ru='Квитанция к сумке'");
			ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ЗаголовокДокумента    = Нстр("ru='Квитанция к сумке №'");
			
			ТабличныйДокументТаблицыРасшифровки = Новый ТабличныйДокумент;
			ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьМакетаСекцияТаблицаОсновнаяЧасть);
				
			Для Каждого Строка Из ТаблицаРасшифровкаПлатежа Цикл
				ОбластьМакетаСекцияТаблицаСтрока.Параметры.КассовыйСимвол = ?(СведенияООрганизации.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"), "02", "19");
				ОбластьМакетаСекцияТаблицаСтрока.Параметры.СуммаНаСимвол  = Строка.СуммаПлатежа;
				ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьМакетаСекцияТаблицаСтрока);
			КонецЦикла;
			ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ТорговаяВыручка = ?(СведенияООрганизации.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"),Нстр("ru='Поступление от продажи товаров.'"), Нстр("ru='Поступления на счета индивидуальных предпринимателей.'"));
			
			ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьМакетаСекцияОкончаниеТаблицы);
			ТабличныйДокумент.Вывести(ОбластьМакетаСекцияОсновнаяЧасть);
			ТабличныйДокумент.Присоединить(ТабличныйДокументТаблицыРасшифровки);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьШапкаОборотнаяСторона);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция СформироватьПечатнуюФормуПрепроводительнаяВедомостьНакладнаяКСумке(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	// Печать "Препроводительной ведомости к сумке" и "Накладной к сумке" может выполняться отдельно каждая на своем листе
	//                     // или на одном листе обе ведомости
	//                     //                                            //
	// Как будет выполнена печать, устанавливает команда печати, параметр ПараметрыПечати.ВариантПечати
	//                     //
	// ?(ВариантПечати = ПрепроводительнаяВедомостьНакладная - то на листе будет совмещено две ведомости Препроводительная
	// и накладная к сумке //
	// ?(ВариантПечати = ПрепроводительнаяВедомость - то на листе будет выведена одна печатная форма Препроводительная
	// ведомость               //
	// ?(ВариантПечати = Накладная - то на листе будет выведена одна печатная форма Накладная к сумке
	//                     //
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РасходИзКассы.ПФ_MXL_ПрепроводительнаяВедомостьНакладнаяКСумке");
	ТабличныйДокумент = Новый ТабличныйДокумент();
	ОбластьМакетаСекцияОсновнаяЧасть          = Макет.ПолучитьОбласть("СекцияОсновнаяЧасть");
	ОбластьМакетаСекцияТаблицаОсновнаяЧасть   = Макет.ПолучитьОбласть("СекцияТаблицаОсновнаяЧасть");
	ОбластьМакетаСекцияТаблицаСтрока          = Макет.ПолучитьОбласть("СекцияТаблицаСтрока");
	ОбластьМакетаСекцияОкончаниеТаблицы       = Макет.ПолучитьОбласть("СекцияОкончаниеТаблицы");
		
	Если ПараметрыПечати.ВариантПечати = "ПрепроводительнаяВедомостьНакладная" Тогда
		СинонимДокумента  = НСтр("ru='Препроводительная ведомость и накладная к сумке'");
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_ПрепроводительнаяВедомостьИНакладнаяКСумке";
		ОбластьМакетаОборотнаяСторона             = Макет.ПолучитьОбласть("ОборотнаяСторонаДваЭкземпляра|ВертикальнаяСекция");
	ИначеЕсли ПараметрыПечати.ВариантПечати = "ПрепроводительнаяВедомость" Тогда
		СинонимДокумента  = НСтр("ru='Препроводительная ведомость к сумке'");
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_ПрепроводительнаяВедомостьКСумке";
		ОбластьМакетаОборотнаяСторона             = Макет.ПолучитьОбласть("ОборотнаяСторона|ВертикальнаяСекция");
	ИначеЕсли ПараметрыПечати.ВариантПечати = "Накладная" Тогда
		СинонимДокумента  = НСтр("ru='Накладная к сумке'");
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_НакладнаяКСумке";
		ОбластьМакетаОборотнаяСторона             = Макет.ПолучитьОбласть("ОборотнаяСторона|ВертикальнаяСекция");
	КонецЕсли;
	
	ТабличныйДокумент.ПолеСлева  = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСнизу  = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ОбъектПечати = Неопределено;
	Если НЕ МассивОбъектов.Количество() = 0 Тогда
		
		ОбъектПечати = МассивОбъектов[0];
		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасходИзКассы.Ссылка КАК Ссылка,
		|	РасходИзКассы.Дата КАК ДатаДокумента,
		|	РасходИзКассы.Организация КАК Организация,
		|	РасходИзКассы.СчетОрганизации КАК БанковскийСчет,
		|	РасходИзКассы.ВидОперации КАК ВидОперации,
		|	РасходИзКассы.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
		|	РасходИзКассы.СуммаДокумента КАК СуммаДокумента,
		|	РасходИзКассы.НомерСумки КАК НомерСумки,
		|	РасходИзКассы.Касса КАК Касса
		|ИЗ
		|	Документ.РасходИзКассы КАК РасходИзКассы
		|ГДЕ
		|	РасходИзКассы.Ссылка = &ОбъектПечати";
		Запрос.УстановитьПараметр("ОбъектПечати", ОбъектПечати);
		ДанныеПечати = Запрос.Выполнить().Выбрать();
		ПервыйДокумент = Истина;
		
		Если НЕ ПараметрыПечати.Свойство("ТекстОшибки") Тогда
			ПараметрыПечати.Вставить("ТекстОшибки", "");
		КонецЕсли;
		
		ТаблицаОписьСдаваемыхНаличныхДенег = ОбъектПечати.ОписьСдаваемыхНаличныхДенег;
		ТаблицаРасшифровкаПлатежа          = ОбъектПечати.РасшифровкаПлатежа;
		
		Пока ДанныеПечати.Следующий() Цикл
			Если НЕ ЕстьОшибкиПечатиИнкассации(ДанныеПечати, ПараметрыПечати.ТекстОшибки, ТаблицаОписьСдаваемыхНаличныхДенег, ТаблицаРасшифровкаПлатежа) Тогда
				Если Не ПервыйДокумент Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйДокумент = Ложь;
				
				НомерСтрокиНачало    = ТабличныйДокумент.ВысотаТаблицы + 1;
				СведенияООрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента, , ДанныеПечати.БанковскийСчет);
				СведенияООрганизации.Вставить("ЮрФизЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеПечати.Организация, "ЮридическоеФизическоеЛицо"));
				
				ЗаполнитьПараметрыМакетаДляПечатиЛицевойСтороныИнкассации(ОбластьМакетаСекцияОсновнаяЧасть, ОбластьМакетаСекцияТаблицаОсновнаяЧасть, СведенияООрганизации, ДанныеПечати);
				ЗаполнитьQRКодДляПечатиЛицевойСтороныИнкассации(ОбластьМакетаСекцияОсновнаяЧасть, ТаблицаОписьСдаваемыхНаличныхДенег, ТаблицаРасшифровкаПлатежа, ДанныеПечати, СведенияООрганизации);
				
				ТабличныйДокументТаблицыРасшифровки = Новый ТабличныйДокумент;
				ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьМакетаСекцияТаблицаОсновнаяЧасть);
				
				Для Каждого Строка Из ТаблицаРасшифровкаПлатежа Цикл
					ОбластьМакетаСекцияТаблицаСтрока.Параметры.КассовыйСимвол = ?(СведенияООрганизации.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"), "02", "19");
					ОбластьМакетаСекцияТаблицаСтрока.Параметры.СуммаНаСимвол  = Строка.СуммаПлатежа;
					ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьМакетаСекцияТаблицаСтрока);
				КонецЦикла;
				ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ТорговаяВыручка = ?(СведенияООрганизации.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"),Нстр("ru='Поступление от продажи товаров.'"), Нстр("ru='Поступления на счета индивидуальных предпринимателей.'"));
				
				ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьМакетаСекцияОкончаниеТаблицы);
				Если ПараметрыПечати.ВариантПечати = "Накладная" Тогда
					ОбластьШифр = Макет.ПолучитьОбласть("СекцияОкончаниеШифр");
					ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьШифр);
					ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НаименованиеДокумента = Нстр("ru='Накладная к сумке'");
					ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ЗаголовокДокумента = Нстр("ru='Накладная к сумке №'");
				Иначе
					ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НаименованиеДокумента = Нстр("ru='Препроводительная ведомость к сумке'");
					ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ЗаголовокДокумента = Нстр("ru='Ведомость к сумке №'");
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСекцияОсновнаяЧасть);
				ТабличныйДокумент.Присоединить(ТабличныйДокументТаблицыРасшифровки);
				
				Если ПараметрыПечати.ВариантПечати = "ПрепроводительнаяВедомостьНакладная" Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьШифр        = Макет.ПолучитьОбласть("СекцияОкончаниеШифр");
					ОбластьРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
					
					ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НаименованиеДокумента = Нстр("ru='Накладная к сумке'");
					ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ЗаголовокДокумента = Нстр("ru='Накладная к сумке №'");
					
					ТабличныйДокументТаблицыРасшифровки.Вывести(ОбластьШифр);
					ТабличныйДокумент.Вывести(ОбластьРазделитель);
					ТабличныйДокумент.Вывести(ОбластьМакетаСекцияОсновнаяЧасть);
					ТабличныйДокумент.Присоединить(ТабличныйДокументТаблицыРасшифровки);
					
				КонецЕсли;
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				Для Каждого СтрокаНоминалаБанкноты Из ТаблицаОписьСдаваемыхНаличныхДенег Цикл
					ОбластьМакетаОборотнаяСторона.Параметры[СтрокаНоминалаБанкноты.ПараметрКоличествоБанкнот] = СтрокаНоминалаБанкноты.КоличествоБанкнот;
					ОбластьМакетаОборотнаяСторона.Параметры[СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот] = СтрокаНоминалаБанкноты.Сумма;
				КонецЦикла;
				
				ОбластьМакетаОборотнаяСторона.Параметры.СуммаИтог = ТаблицаОписьСдаваемыхНаличныхДенег.Итог("Сумма");
				ТабличныйДокумент.Вывести(ОбластьМакетаОборотнаяСторона);
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
		
	КонецЕсли;

КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РКО") Тогда
		ОписаниеПечатнойФормы = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "РКО");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			
			ОписаниеПечатнойФормы.ТабличныйДокумент = Новый ТабличныйДокумент;
			ОписаниеПечатнойФормы.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходИзКассы_РКО";
			ОписаниеПечатнойФормы.ПолныйПутьКМакету = "Документ.РасходИзКассы.ПФ_MXL_РКО";
			ОписаниеПечатнойФормы.СинонимМакета = НСтр("ru = 'КО-2 (Расходный кассовый ордер)'");
			
			СформироватьРКО(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати);
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьПрепроводительнаяВедомостьНакладнаяКСумке") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПечатьПрепроводительнаяВедомостьНакладнаяКСумке",
				ПараметрыПечати.Представление, 
				СформироватьПечатнуюФормуПрепроводительнаяВедомостьНакладнаяКСумке(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КвитанцияКСумке") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КвитанцияКСумке",
				ПараметрыПечати.Представление, 
				СформироватьПечатнуюФормуКвитанцияКСумке(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РКО";
	КомандаПечати.Представление = НСтр("ru = 'КО-2 (Расходный кассовый ордер)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	// Метод получения данных СчетФактураПолученный.ДанныеПолученныхАвансовыхДокументовРегУчет()
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (аванс, за поставщика)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОписьСдаваемыхДенег") Тогда
	
		// Квитанция к сумке
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "КвитанцияКСумке";
		КомандаПечати.Представление = НСтр("ru = 'Квитанция к сумке'");
		КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 60;
		
		// Накладная к сумке
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьПрепроводительнаяВедомостьНакладнаяКСумке";
		КомандаПечати.Представление = НСтр("ru = 'Накладная к сумке'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВариантПечати", "Накладная");
		КомандаПечати.Порядок = 70;
		
		// Препроводительная ведомость к сумке.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьПрепроводительнаяВедомостьНакладнаяКСумке";
		КомандаПечати.Представление = НСтр("ru = 'Препроводительная ведомость к сумке'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВариантПечати", "ПрепроводительнаяВедомость");
		КомандаПечати.Порядок = 75;
		
		// Препроводительная ведомость к сумке.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьПрепроводительнаяВедомостьНакладнаяКСумке";
		КомандаПечати.Представление = НСтр("ru = 'Препроводительная ведомость и накладная к сумке'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВариантПечати", "ПрепроводительнаяВедомостьНакладная");
		КомандаПечати.Порядок = 80;
	
	КонецЕсли;
	
КонецПроцедуры

// Функция проверяет корректность заполнения документа для печати форм сопровождающих инкассацию.
// Параметры:
//           ДанныеДокумента      - ВыборкаИзРезультатаЗапроса - Содержит данные документа выводимого на печать.
//           ТекстОшибки          - Строка - Параметр формирует команда объекта документа печати, будет заполнен если
//                                           печать выполняется из формы списка документа.
//                                           Правильное поведение, выполнять из открытой формы документа, так как форма
//                                           содержит не сохраняемую в объекте таблицу с перечнем банкнот.
//           ТаблицаСпискаБанкнот - ДанныеФормыКоллекция - Коллекция строк таблицы (с банкнотами) расположенной на
//                                                         форме документа.
// Возвращаемое значение:
//           РезультатОтрицательнойПроверки - Булево - Если ошибки ИСТИНА, необходимо не выполнять печать.
Функция ЕстьОшибкиПечатиИнкассации(ДанныеДокумента, ТекстОшибки = "", ТаблицаСпискаБанкнот = Неопределено, ТаблицаРасшифровкиПлатежей = Неопределено)
	
	Если ДанныеДокумента.ВидОперации <> Перечисления.ВидыОперацийРасходИзКассы.ВзносНаличнымиВБанк Тогда
		РезультатОтрицательнойПроверки = Истина;
		ТекстОшибки = НСтр("ru = 'Хозяйственная операция документа не соответствует выбранной печатной форме'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	Иначе
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			РезультатОтрицательнойПроверки = Истина;
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		ИначеЕсли ЗначениеЗаполнено(ТаблицаСпискаБанкнот) И ТаблицаСпискаБанкнот.Итог("Сумма") <> ДанныеДокумента.СуммаДокумента Тогда
			РезультатОтрицательнойПроверки = Истина;
			ТекстОшибки = НСтр("ru = 'Сумма документа не соответствует сумме банкнот'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		ИначеЕсли ЗначениеЗаполнено(ТаблицаСпискаБанкнот) И ТаблицаРасшифровкиПлатежей.Итог("СуммаПлатежа") <> ДанныеДокумента.СуммаДокумента Тогда
			РезультатОтрицательнойПроверки = Истина;
			ТекстОшибки = НСтр("ru = 'Сумма документа не соответствует сумме платежей'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Иначе
			РезультатОтрицательнойПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат РезультатОтрицательнойПроверки;
	
КонецФункции

// Процедура заполняет параметры области макета табличного документа выводимого на печать.
// Параметры:
//           ОбластьМакетаЛицеваяСторона - ТабличныйДокумент - Область табличного документа для которой необходимо
//                                                             заполнить параметры.
//           СведенияООрганизации        - Структура - Содержит значения для заполнения параметров.
//           ДанныеПечати                - ВыборкаИзРезультатаЗапроса - Содержит данные документа выводимого на печать.
Процедура ЗаполнитьПараметрыМакетаДляПечатиЛицевойСтороныИнкассации(ОбластьМакетаСекцияОсновнаяЧасть, ОбластьМакетаСекцияТаблицаОсновнаяЧасть, СведенияООрганизации, ДанныеПечати)
	
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ПредставлениеОрганизации = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияООрганизации, "ПолноеНаименование", Ложь);
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ИНН = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияООрганизации, "ИНН", Ложь);
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.РасчетныйСчет = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияООрганизации, "НомерСчета", Ложь);
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НаименованиеБанкаВносителя = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияООрганизации, "Банк", Ложь);
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.БИК = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияООрганизации, "БИК", Ложь);
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НаименованиеБанкаПолучателя = ПечатьДокументовУНФ.ОписаниеОрганизации(СведенияООрганизации, "Банк", Ложь);
	Копеек = (ДанныеПечати.СуммаДокумента - Цел(ДанныеПечати.СуммаДокумента)) * 100;
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.КопеекЦифрами = Формат(Копеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.СуммаПрописью = ПечатьДокументовУНФ.СформироватьСуммуПрописью(Цел(ДанныеПечати.СуммаДокумента), ДанныеПечати.ВалютаДенежныхСредств);
	ОбластьМакетаСекцияТаблицаОсновнаяЧасть.Параметры.СуммаЦифрами = ПечатьДокументовУНФ.ФорматСумм(ДанныеПечати.СуммаДокумента, ДанныеПечати.ВалютаДенежныхСредств);
	ОбластьМакетаСекцияТаблицаОсновнаяЧасть.Параметры.НомерСумки = Сред(ДанныеПечати.НомерСумки, Найти(ДанныеПечати.НомерСумки, "/") + 1.00);
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.НомерВедомости = ДанныеПечати.НомерСумки;
	ОбластьМакетаСекцияОсновнаяЧасть.Параметры.ДатаВедомости = Формат(ДанныеПечати.ДатаДокумента, "ДЛФ=DD");
	
КонецПроцедуры

// Процедура формирует QR код на лицевой стороне табличного документа выводимого на печать
Процедура ЗаполнитьQRКодДляПечатиЛицевойСтороныИнкассации(ОбластьМакетаСекцияОсновнаяЧасть, ТаблицаОписьСдаваемыхНаличныхДенег, ТаблицаРасшифровкаПлатежа, ДанныеПечати, СведенияООрганизации)
	
	XMLШтрихКода = СоздатьXMLШтрихкода(ТаблицаОписьСдаваемыхНаличныхДенег, ДанныеПечати, СведенияООрганизации, ТаблицаРасшифровкаПлатежа);
	Если XMLШтрихКода <> Неопределено Тогда
		ОбластьМакетаСекцияОсновнаяЧасть.Рисунки.Рисунок.Картинка = СформироватьШтрихкодПечатнойФормы(XMLШтрихКода, ОбластьМакетаСекцияОсновнаяЧасть.Рисунки.Рисунок);
	Иначе
		ОбластьМакетаСекцияОсновнаяЧасть.Рисунки.Удалить("Рисунок");
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьXMLШтрихкода(ТаблицаОписьСдаваемыхНаличныхДенег, ДанныеПечати, СведенияООрганизации, ТаблицаРасшифровкаПлатежа)
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("bag_sheet");
	ЗаписьXML.ЗаписатьНачалоЭлемента("date");
	ЗаписьXML.ЗаписатьТекст(XMLСтрока(Формат(ОбщегоНазначения.ТекущаяДатаПользователя(), "ДФ=yyyy-MM-dd")));
	ЗаписьXML.ЗаписатьКонецЭлемента();//date
	ЗаписьXML.ЗаписатьНачалоЭлемента("client_ink");
	ЗаписьXML.ЗаписатьТекст(XMLСтрока(ДанныеПечати.Касса.ИндивидуальныйНомерОбъектаИнкассации));
	ЗаписьXML.ЗаписатьКонецЭлемента();//clientink
	ЗаписьXML.ЗаписатьНачалоЭлемента("number");
	ЗаписьXML.ЗаписатьТекст(XMLСтрока(Сред(ДанныеПечати.НомерСумки, Найти(ДанныеПечати.НомерСумки, "/") + 1.00)));
	ЗаписьXML.ЗаписатьКонецЭлемента();//number (номер сумки)
	// По логике Сбербанка здесь необходим цикл, если оплата идет в несколько банков, в Рознице в этом нет необходимости.
	ЗаписьXML.ЗаписатьНачалоЭлемента("sum_by_acc");
	
		ЗаписьXML.ЗаписатьНачалоЭлемента("account");
		ЗаписьXML.ЗаписатьТекст(XMLСтрока(СведенияООрганизации.НомерСчета));
		ЗаписьXML.ЗаписатьКонецЭлемента(); //account
		ЗаписьXML.ЗаписатьНачалоЭлемента("bic");
		ЗаписьXML.ЗаписатьТекст(XMLСтрока(СведенияООрганизации.БИК));
		ЗаписьXML.ЗаписатьКонецЭлемента();//bic
		
		Для Каждого Строка Из ТаблицаРасшифровкаПлатежа Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("sum_by_symb");
			ЗаписьXML.ЗаписатьНачалоЭлемента("symbol");
			ЗаписьXML.ЗаписатьТекст(XMLСтрока(?(СведенияООрганизации.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"), "02", "19")));
			ЗаписьXML.ЗаписатьКонецЭлемента();//symbol
			ЗаписьXML.ЗаписатьНачалоЭлемента("sum");
			СуммаСтроки = СтрЗаменить(Строка(Строка.СуммаПлатежа), Символы.НПП, "");
			ЗаписьXML.ЗаписатьТекст(XMLСтрока(СуммаСтроки + ".00"));
			ЗаписьXML.ЗаписатьКонецЭлемента();//sum
			ЗаписьXML.ЗаписатьКонецЭлемента();//sumbysymb
		КонецЦикла;
		
	ЗаписьXML.ЗаписатьКонецЭлемента(); //sum_by_acc
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("extra");
	Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.Комментарий) Тогда
		ЗаписьXML.ЗаписатьТекст(XMLСтрока(ДанныеПечати.Ссылка.Комментарий));
	КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Для Каждого СтрокаНоминалаБанкноты Из ТаблицаОписьСдаваемыхНаличныхДенег Цикл
		
		Если СтрокаНоминалаБанкноты.КоличествоБанкнот <> 0 Тогда
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("inventory");
			ЗаписьXML.ЗаписатьНачалоЭлемента("nominal");
			НоминалСтроки = СтрЗаменить(Строка(СтрокаНоминалаБанкноты.Номинал), Символы.НПП, "");
			ЗаписьXML.ЗаписатьТекст(XMLСтрока(НоминалСтроки + ".00"));
			ЗаписьXML.ЗаписатьКонецЭлемента();//nominal
			ЗаписьXML.ЗаписатьНачалоЭлемента("quantity");
			ЗаписьXML.ЗаписатьТекст(XMLСтрока(СтрокаНоминалаБанкноты.КоличествоБанкнот));
			ЗаписьXML.ЗаписатьКонецЭлемента(); //quantity
			ЗаписьXML.ЗаписатьНачалоЭлемента("cur_code");
			ЗаписьXML.ЗаписатьТекст(XMLСтрока("810"));
			ЗаписьXML.ЗаписатьКонецЭлемента();//cur_code
			ЗаписьXML.ЗаписатьНачалоЭлемента("cash_type");
			Если СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот = "СуммаРуб_5000" ИЛИ СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот = "СуммаРуб_1000" 
				ИЛИ СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот = "СуммаРуб_500" ИЛИ СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот = "СуммаРуб_100"
				ИЛИ СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот = "СуммаРуб_50" ИЛИ СтрокаНоминалаБанкноты.ПараметрСуммаБанкнот = "СуммаРуб_10_1" Тогда
				ЗаписьXML.ЗаписатьТекст(XMLСтрока("01"));//cash_type
			Иначе
				ЗаписьXML.ЗаписатьТекст(XMLСтрока("02"));//cash_type
			КонецЕсли;
			ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьКонецЭлемента();//inventory
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();//bag sheet
	
	ТекстXML = ЗаписьXML.Закрыть();
	ТекстXMLСжатый = Неопределено;
	
	КомпонентаСжатия = ОбщегоНазначения.ПодключитьКомпонентуИзМакета("DataCompression", "ОбщийМакет.КомпонентаСжатияДанных");
	Если КомпонентаСжатия <> Неопределено Тогда
		Результат = КомпонентаСжатия.DeflateКодировать(ТекстXML, ТекстXMLСжатый);
		ТекстXMLСжатый = "@02@" + ТекстXMLСжатый;
	КонецЕсли;
	
	Возврат ТекстXMLСжатый;
	
КонецФункции

Функция СформироватьШтрихкодПечатнойФормы(XMLШтрихКода, Рисунок)
	
	УстановитьПривилегированныйРежим(Истина);
	Эталон = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("Эталон");
	УстановитьПривилегированныйРежим(Ложь);
	КоличествоМиллиметровВПикселеВысота = Эталон.Рисунки.Квадрат100Пикселей.Высота / 200;
	КоличествоМиллиметровВПикселеШирина = Эталон.Рисунки.Квадрат100Пикселей.Ширина / 200;
	
	ПараметрыШтрихкода = Новый Структура;
	ПараметрыШтрихкода.Вставить("Ширина"            , Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселеШирина));
	ПараметрыШтрихкода.Вставить("Высота"            , Окр(Рисунок.Высота / КоличествоМиллиметровВПикселеВысота));
	ПараметрыШтрихкода.Вставить("ТипКода"           , 16);
	ПараметрыШтрихкода.Вставить("ОтображатьТекст"   , Истина);
	ПараметрыШтрихкода.Вставить("РазмерШрифта"      , 16);
	ПараметрыШтрихкода.Вставить("УголПоворота"      , Число(0));
	ПараметрыШтрихкода.Вставить("Штрихкод"          , XMLШтрихКода);
	ПараметрыШтрихкода.Вставить("ПрозрачныйФон"     , Истина);
	ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", 0);
	
	Возврат МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
	
КонецФункции

#КонецОбласти

#Область ПрочиеРасчеты

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПрочимиКонтрагентами(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("УчетРасчетовПоПрочимОперациям", НСтр("ru='Учет расчетов по прочим операциям'"));
	Запрос.УстановитьПараметр("Комментарий", НСтр("ru='Увеличение долга контрагента'"));
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = НЕОПРЕДЕЛЕНО
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов КАК Валюта,
	|	ВременнаяТаблицаШапка.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Дата,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК Сумма,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВал,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаУчета) КАК СуммаДляОстатка,
	|	СУММА(ВременнаяТаблицаРасшифровкаПлатежа.СуммаРасчетов) КАК СуммаВалДляОстатка,
	|	&УчетРасчетовПоПрочимОперациям КАК СодержаниеПроводки,
	|	&Комментарий КАК Комментарий,
	|	ВременнаяТаблицаШапка.Корреспонденция КАК СчетУчета,
	|	ВременнаяТаблицаШапка.Касса КАК Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата КАК Период
	|ПОМЕСТИТЬ ВременнаяТаблицаПрочиеРасчеты
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ВременнаяТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|		ПО (ВременнаяТаблицаШапка.УчетПрочихРасчетов)
	|ГДЕ
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПрочиеРасчеты)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Контрагент,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Договор,
	|	ВременнаяТаблицаРасшифровкаПлатежа.ВалютаРасчетов,
	|	ВременнаяТаблицаШапка.ВалютаДенежныхСредств,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоДокументам
	|			ТОГДА ВЫБОР
	|					КОГДА ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ВременнаяТаблицаРасшифровкаПлатежа.Документ = НЕОПРЕДЕЛЕНО
	|						ТОГДА &Ссылка
	|					ИНАЧЕ ВременнаяТаблицаРасшифровкаПлатежа.Документ
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаРасшифровкаПлатежа.ВестиРасчетыПоЗаказам
	|			ТОГДА ВременнаяТаблицаРасшифровкаПлатежа.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВременнаяТаблицаШапка.Корреспонденция,
	|	ВременнаяТаблицаШапка.Касса,
	|	ВременнаяТаблицаРасшифровкаПлатежа.Дата";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаПрочиеРасчеты.СчетУчета КАК СчетУчета,
	|	ВременнаяТаблицаПрочиеРасчеты.Организация КАК Организация,
	|	ВременнаяТаблицаПрочиеРасчеты.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаПрочиеРасчеты.Договор КАК Договор
	|ИЗ
	|	ВременнаяТаблицаПрочиеРасчеты КАК ВременнаяТаблицаПрочиеРасчеты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПрочимиКонтрагентами");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыПоПрочимОперациям(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПрочимиКонтрагентами", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаРасчетыСПрочимиКонтрагентами()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыПоКредитамИЗаймам(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("УчетРасчетовПоЗаймамСотрудникам", НСтр("ru='Выдача займа сотруднику'"));
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаДС", ДокументСсылкаРасходИзКассы.ВалютаДенежныхСредств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику)
	|	КОНЕЦ КАК ВидДоговора,
	|	РасходИзКассы.Дата КАК Дата,
	|	РасходИзКассы.Дата КАК Период,
	|	&УчетРасчетовПоЗаймамСотрудникам КАК СодержаниеПроводки,
	|	РасходИзКассы.Подотчетник КАК Контрагент,
	|	РасходИзКассы.СуммаДокумента КАК СуммаПлатежа,
	|	ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютДоговора.Кратность / (КурсыВалютДоговора.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолгВал,
	|	ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолг,
	|	ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютДоговора.Кратность / (КурсыВалютДоговора.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолгВалДляОстатка,
	|	ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК ОсновнойДолгДляОстатка,
	|	0 КАК ПроцентыВал,
	|	0 КАК Проценты,
	|	0 КАК ПроцентыВалДляОстатка,
	|	0 КАК ПроцентыДляОстатка,
	|	0 КАК КомиссияВал,
	|	0 КАК Комиссия,
	|	0 КАК КомиссияВалДляОстатка,
	|	0 КАК КомиссияДляОстатка,
	|	ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютДоговора.Кратность / (КурсыВалютДоговора.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК СуммаВал,
	|	ВЫРАЗИТЬ(РасходИзКассы.СуммаДокумента * КурсыВалютКассы.Курс * КурсыВалютУчета.Кратность / (КурсыВалютУчета.Курс * КурсыВалютКассы.Кратность) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	РасходИзКассы.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма,
	|	РасходИзКассы.ДоговорКредитаЗайма.ВалютаРасчетов КАК Валюта,
	|	РасходИзКассы.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	РасходИзКассы.ДоговорКредитаЗайма.СчетУчета КАК СчетУчета,
	|	РасходИзКассы.Касса,
	|	ЛОЖЬ КАК УдержаноИзЗарплаты
	|ПОМЕСТИТЬ ВременнаяТаблицаРасчетыПоКредитамИЗаймам
	|ИЗ
	|	Документ.РасходИзКассы КАК РасходИзКассы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчета
	|		ПО (КурсыВалютУчета.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютКассы
	|		ПО (КурсыВалютКассы.Валюта = &ВалютаДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютДоговора
	|		ПО (КурсыВалютДоговора.Валюта = РасходИзКассы.ДоговорКредитаЗайма.ВалютаРасчетов)
	|ГДЕ
	|	РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ВыдачаЗаймаСотруднику)
	|	И РасходИзКассы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.КредитПолученный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКредитаИЗайма.ДоговорЗаймаСотруднику)
	|	КОНЕЦ,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.СодержаниеПоТипуСуммы,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.СуммаПлатежа,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.СуммаУчета
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.СуммаРасчетов,
	|	ТаблицаДокумента.СуммаУчета,
	|	ТаблицаДокумента.ДоговорКредитаЗайма,
	|	ТаблицаДокумента.ДоговорКредитаЗайма.ВалютаРасчетов,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.ОсновнойДолг)
	|			ТОГДА ТаблицаДокумента.ДоговорКредитаЗайма.СчетУчета
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Проценты)
	|			ТОГДА ТаблицаДокумента.ДоговорКредитаЗайма.СчетУчетаПроцентов
	|		КОГДА ТаблицаДокумента.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИЗаймов.Комиссия)
	|			ТОГДА ТаблицаДокумента.ДоговорКредитаЗайма.СчетУчетаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаДокумента.Касса,
	|	ЛОЖЬ
	|ИЗ
	|	ВременнаяТаблицаРасшифровкаПлатежа КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.РасчетыПоКредитам)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков расчетов с подотчетными лицами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам.ДоговорКредитаЗайма КАК ДоговорКредитаЗайма
	|ИЗ
	|	ВременнаяТаблицаРасчетыПоКредитамИЗаймам КАК ВременнаяТаблицаРасчетыПоКредитамИЗаймам";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыПоКредитамИЗаймам");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыПоКредитамИЗаймам(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоКредитамИЗаймам", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры

#КонецОбласти

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДенежныеСредстваКПоступлению(ДокументСсылкаРасходИзКассы, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.КассаККМ КАК Касса,
	|	ТаблицаДокумента.Касса КАК КассаОтправитель,
	|	&Ссылка КАК ДокументПередачи,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВал,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаДляОстатка,
	|	СУММА(ТаблицаДокумента.СуммаВал) КАК СуммаВалДляОстатка,
	|	ТаблицаДокумента.ВалютаДенежныхСредств КАК Валюта,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента КАК ДоговорКонтрагента,
	|	&Передача КАК СодержаниеПроводки
	|ПОМЕСТИТЬ ВременнаяТаблицаДенежныеСредстваКПоступлению
	|ИЗ
	|	ВременнаяТаблицаШапка КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.ПеремещениеВКассуККМ)
	|	И ТаблицаДокумента.НовыйМеханизмИнкассации
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.КассаККМ,
	|	ТаблицаДокумента.Касса,
	|	ТаблицаДокумента.ВалютаДенежныхСредств,
	|	ТаблицаДокумента.ДокументОснование,
	|	ТаблицаДокумента.ДоговорПлатежногоАгента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	КассаОтправитель,
	|	Валюта";
	
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходИзКассы);
	Запрос.УстановитьПараметр("СчетУчета", ПланыСчетов.Управленческий.ПереводыВПути);
	Запрос.УстановитьПараметр("Передача", НСтр("ru = 'Передача денежных средств в кассу ККМ'"));
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Запрос.Выполнить();
	
	// Установка исключительной блокировки контролируемых остатков денежных средств к поступлению.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаДенежныеСредстваКПоступлению.Организация КАК Организация,
	|	ВременнаяТаблицаДенежныеСредстваКПоступлению.Касса КАК Касса,
	|	ВременнаяТаблицаДенежныеСредстваКПоступлению.ДокументПередачи КАК ДокументПередачи
	|ИЗ
	|	ВременнаяТаблицаДенежныеСредстваКПоступлению";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваКПоступлению");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = КурсовыеРазницыУНФ.ПолучитьТекстЗапросаКурсовыеРазницыДенежныеСредстваКПоступлению(Запрос.МенеджерВременныхТаблиц, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваКПоступлению", МассивРезультатов[НомерЗапроса].Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаДенежныеСредстваКПоступлению()

#КонецЕсли
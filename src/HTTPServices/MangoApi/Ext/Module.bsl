
#Область ОбработчикиМетодовHTTP

#Область PING

Функция ОбработатьPING(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("ok");
	Возврат Ответ;
	
КонецФункции

Функция pingGET(Запрос)
	
	Возврат ОбработатьPING(Запрос);
	
КонецФункции

#КонецОбласти

#Область MangoOffice

Функция EventsCallPOST(Запрос)
	
	ИмяСобытияДляЖурналаРегистрации = "/events/call";
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОблачнуюТелефонию") Тогда
		Возврат СообщениеОбОшибке(
			500,
			ИмяСобытияДляЖурналаРегистрации,
			НСтр("ru='Использование телефонии Манго отключено в настройках'"));
	КонецЕсли;
	
	ТелоЗапроса = РаскодироватьСтроку(Запрос.ПолучитьТелоКакСтроку(), СпособКодированияСтроки.КодировкаURL);
	
	ТелефонияСервер.ЗаписатьЗапросВЖурналРегистрации(ИмяСобытияДляЖурналаРегистрации, ТелоЗапроса);
	
	ПараметрыТела = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(ТелоЗапроса, "&");
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ТелефонияСервер.КорректнаяПодписьЗапроса(Перечисления.ДоступныеАТС.MangoOffice, ПараметрыТела.sign, ПараметрыТела) Тогда
		Возврат СообщениеОбОшибке(
			400,
			ИмяСобытияДляЖурналаРегистрации,
			СтрШаблон(НСтр("ru='Неверно указана подпись запроса sign=%1'"), ПараметрыТела.sign));
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ПараметрыТела.json);
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("timestamp");
	ПараметрыЗапроса = ПрочитатьJSON(ЧтениеJSON,,,,"ВосстановлениеJSON",ТелефонияСервер,,МассивИмен);
	ЧтениеJSON.Закрыть();
	
	ОбязательныеПараметры = Новый Массив;
	ОбязательныеПараметры.Добавить("entry_id");
	ОбязательныеПараметры.Добавить("call_id");
	ОбязательныеПараметры.Добавить("timestamp");
	ОбязательныеПараметры.Добавить("seq");
	ОбязательныеПараметры.Добавить("call_state");
	ОбязательныеПараметры.Добавить("location");
	ОбязательныеПараметры.Добавить("to");
	ОбязательныеПараметры.Добавить("from");
	
	Для Каждого ОбязательныйПараметр Из ОбязательныеПараметры Цикл
		Если Не ПараметрыЗапроса.Свойство(ОбязательныйПараметр) Тогда
			Возврат СообщениеОбОшибке(
				400,
				ИмяСобытияДляЖурналаРегистрации,
				СтрШаблон(НСтр("ru='Отсутствует обязательный параметр %1.'"), ОбязательныйПараметр));
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		Если НРег(ПараметрыЗапроса.location) = "ivr" Тогда
			
			Если ПараметрыЗапроса.call_state = "Appeared" Тогда
				
				НастройкиТелефонии = ТелефонияСервер.ПолучитьНастройкиТелефонии();
				Если НастройкиТелефонии.МаршрутизироватьВходящиеНаОтветственных Тогда
					
					Если ПараметрыЗапроса.from.Свойство("number") Тогда
						
						ДанныеЗвонка = ТелефонияСервер.НовыйДанныеЗвонка();
						// Для перенаправления вызова использовать внутренний идентификатор плеча вызова.
						ДанныеЗвонка.ИдентификаторЗвонкаВАТС = ПараметрыЗапроса.call_id;
						ДанныеЗвонка.НомерКонтакта = ПараметрыЗапроса.from.number;
						ДанныеЗвонка.ДатаНачалаЗвонка = ПараметрыЗапроса.timestamp;
						
						ТелефонияСервер.МаршрутизироватьЗвонокНаОтветственного(ДанныеЗвонка);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли НРег(ПараметрыЗапроса.location) = "abonent" Тогда
		
			Если ПараметрыЗапроса.call_state = "Appeared" Тогда
				
				Если ПараметрыЗапроса.from.Свойство("extension") И ПараметрыЗапроса.to.Свойство("number") Тогда
					
					ДанныеЗвонка = ТелефонияСервер.НовыйДанныеЗвонка();
					ДанныеЗвонка.ИдентификаторЗвонкаВАТС = ПараметрыЗапроса.entry_id;
					ДанныеЗвонка.НомерКонтакта = ПараметрыЗапроса.to.number;
					ДанныеЗвонка.Пользователь.ВнутреннийНомер = ПараметрыЗапроса.from.extension;
					ДанныеЗвонка.ДатаНачалаЗвонка = ПараметрыЗапроса.timestamp;
					
					ТелефонияСервер.ОбработатьИсходящийЗвонок(ДанныеЗвонка);
					
				ИначеЕсли ПараметрыЗапроса.from.Свойство("number") И ПараметрыЗапроса.to.Свойство("extension") Тогда
					
					ДанныеЗвонка = ТелефонияСервер.НовыйДанныеЗвонка();
					ДанныеЗвонка.ИдентификаторЗвонкаВАТС = ПараметрыЗапроса.entry_id;
					ДанныеЗвонка.НомерКонтакта = ПараметрыЗапроса.from.number;
					ДанныеЗвонка.Пользователь.ВнутреннийНомер = ПараметрыЗапроса.to.extension;
					ДанныеЗвонка.ДатаНачалаЗвонка = ПараметрыЗапроса.timestamp;
					Если ПараметрыЗапроса.to.Свойство("line_number") Тогда
						ДанныеЗвонка.НомерОрганизации = ПараметрыЗапроса.to.line_number;
					КонецЕсли;
					
					ТелефонияСервер.ОбработатьВходящийЗвонок(ДанныеЗвонка, Истина);
					
				КонецЕсли;
				
			ИначеЕсли ПараметрыЗапроса.call_state = "Connected" Тогда
				
				Если ПараметрыЗапроса.to.Свойство("extension") Тогда
					Пользователь = ПараметрыЗапроса.to.extension;
				ИначеЕсли ПараметрыЗапроса.from.Свойство("extension") Тогда
					Пользователь = ПараметрыЗапроса.from.extension;
				КонецЕсли;
				
				ДанныеЗвонка = ТелефонияСервер.НовыйДанныеЗвонка();
				ДанныеЗвонка.ИдентификаторЗвонкаВАТС = ПараметрыЗапроса.entry_id;
				ДанныеЗвонка.Пользователь.ВнутреннийНомер = Пользователь;
				ДанныеЗвонка.ДатаНачалаРазговора = ПараметрыЗапроса.timestamp;
				
				ТелефонияСервер.ОбработатьИзменениеЗвонка(ДанныеЗвонка);
				
			ИначеЕсли ПараметрыЗапроса.call_state = "Disconnected" Тогда
				
				Пользователь = Неопределено;
				Если ПараметрыЗапроса.to.Свойство("extension") Тогда
					Пользователь = ПараметрыЗапроса.to.extension;
				ИначеЕсли ПараметрыЗапроса.from.Свойство("extension") Тогда
					Пользователь = ПараметрыЗапроса.from.extension;
				КонецЕсли;
				
				ДанныеЗвонка = ТелефонияСервер.НовыйДанныеЗвонка();
				ДанныеЗвонка.ИдентификаторЗвонкаВАТС = ПараметрыЗапроса.entry_id;
				ДанныеЗвонка.Пользователь.ВнутреннийНомер = Пользователь;
				ДанныеЗвонка.ДатаЗавершенияРазговора = ПараметрыЗапроса.timestamp;
				ДанныеЗвонка.ОпределятьНеотвеченный = Истина;
				
				ТелефонияСервер.ОбработатьЗавершениеЗвонка(ДанныеЗвонка);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Исключение
		Возврат СообщениеОбОшибке(
			500,
			ИмяСобытияДляЖурналаРегистрации,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции

Функция EventsRecordingPOST(Запрос)
	
	ИмяСобытияДляЖурналаРегистрации = "/events/recording";
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОблачнуюТелефонию") Тогда
		Возврат СообщениеОбОшибке(
			500,
			ИмяСобытияДляЖурналаРегистрации,
			НСтр("ru='Использование телефонии Манго отключено в настройках'"));
	КонецЕсли;
	
	ТелоЗапроса = РаскодироватьСтроку(Запрос.ПолучитьТелоКакСтроку(), СпособКодированияСтроки.КодировкаURL);
	ПараметрыТела = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(ТелоЗапроса, "&");
	
	ТелефонияСервер.ЗаписатьЗапросВЖурналРегистрации(ИмяСобытияДляЖурналаРегистрации, ПараметрыТела.json);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ТелефонияСервер.КорректнаяПодписьЗапроса(Перечисления.ДоступныеАТС.MangoOffice, ПараметрыТела.sign, ПараметрыТела) Тогда
		Возврат СообщениеОбОшибке(
			400,
			ИмяСобытияДляЖурналаРегистрации,
			СтрШаблон(НСтр("ru='Неверно указана подпись запроса sign=%1'"), ПараметрыТела.sign));
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ПараметрыТела.json);
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("timestamp");
	ПараметрыЗапроса = ПрочитатьJSON(ЧтениеJSON,,,,"ВосстановлениеJSON",ТелефонияСервер,,МассивИмен);
	ЧтениеJSON.Закрыть();
	
	ОбязательныеПараметры = Новый Массив;
	ОбязательныеПараметры.Добавить("recording_id");
	ОбязательныеПараметры.Добавить("recording_state");
	ОбязательныеПараметры.Добавить("seq");
	ОбязательныеПараметры.Добавить("entry_id");
	ОбязательныеПараметры.Добавить("call_id");
	ОбязательныеПараметры.Добавить("timestamp");
	
	Для Каждого ОбязательныйПараметр Из ОбязательныеПараметры Цикл
		Если Не ПараметрыЗапроса.Свойство(ОбязательныйПараметр) Тогда
			Возврат СообщениеОбОшибке(
				400,
				ИмяСобытияДляЖурналаРегистрации,
				СтрШаблон(НСтр("ru='Отсутствует обязательный параметр %1.'"), ОбязательныйПараметр));
		КонецЕсли;
	КонецЦикла;
	
	НеобходимоОбработатьУведомление =
		ВРег(ПараметрыЗапроса.recording_state) = ВРег("Completed")
		И ПараметрыЗапроса.completion_code = 1000; // 1000 - Действие успешно выполнено
	
	Если НЕ НеобходимоОбработатьУведомление Тогда
		Ответ = Новый HTTPСервисОтвет(200);
		Возврат Ответ;
	КонецЕсли;
	
	Попытка
		ДанныеЗвонка = ТелефонияСервер.НовыйДанныеЗвонка();
		ДанныеЗвонка.ИдентификаторЗвонкаВАТС = ПараметрыЗапроса.entry_id;
		ДанныеЗвонка.ЗаписьРазговора.Ссылка = ПараметрыЗапроса.recording_id;
		ТелефонияСервер.ОбработатьЗавершениеЗвонка(ДанныеЗвонка);
	Исключение
		Возврат СообщениеОбОшибке(500,
			ИмяСобытияДляЖурналаРегистрации,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции

Функция ResultCallbackPOST(Запрос)
	
	ИмяСобытияДляЖурналаРегистрации = "/result/callback";
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОблачнуюТелефонию") Тогда
		Возврат СообщениеОбОшибке(
			500,
			ИмяСобытияДляЖурналаРегистрации,
			НСтр("ru='Использование телефонии отключено в настройках'"));
	КонецЕсли;
	
	Ответ = Новый HTTPСервисОтвет(501); // Not implemented
	Возврат Ответ;
	
КонецФункции

Функция ResultStatsPOST(Запрос)
	
	ИмяСобытияДляЖурналаРегистрации = "/result/stats";
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОблачнуюТелефонию") Тогда
		Возврат СообщениеОбОшибке(
			500,
			ИмяСобытияДляЖурналаРегистрации,
			НСтр("ru='Использование телефонии отключено в настройках'"));
	КонецЕсли;
	
	Ответ = Новый HTTPСервисОтвет(501); // Not implemented
	Возврат Ответ;
	
КонецФункции

Функция ResultRoutePOST(Запрос)
	
	ИмяСобытияДляЖурналаРегистрации = "/result/route";
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОблачнуюТелефонию") Тогда
		Возврат СообщениеОбОшибке(
			500,
			ИмяСобытияДляЖурналаРегистрации,
			НСтр("ru='Использование телефонии отключено в настройках'"));
	КонецЕсли;
	
	Ответ = Новый HTTPСервисОтвет(501); // Not implemented
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СообщениеОбОшибке(КодСостояния, ВложенноеИмяСобытия, Комментарий = Неопределено, Заголовки = Неопределено)
	
	ЗаписьЖурналаРегистрации(
		ТелефонияСервер.СобытиеЖурналаРегистрации() + "." + ВложенноеИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,,,
		Комментарий);
	
	Возврат НовыйHTTPСервисОтвет(КодСостояния, Заголовки);
	
КонецФункции

Функция НовыйHTTPСервисОтвет(КодСостояния, Заголовки = Неопределено)
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния);
	
	Если Заголовки <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(Ответ.Заголовки, Заголовки);
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

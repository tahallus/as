
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КассаККМ");
	ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Ложь;
	
	КоличествоКассККМ = Справочники.КассыККММП.ПолучитьКоличествоКассККМ();
	
	Если КоличествоКассККМ <= 1 Тогда
		Элементы.Фильтровать.Видимость = Ложь;
		Элементы.ФормаОтменитьФильтр.Видимость = Ложь;
	Иначе
		ФильтрПоКассеККМ = Константы.ФильтрПоКассеККММП.Получить();
		УстановитьФильтр(ФильтрПоКассеККМ, Ложь);
	КонецЕсли;
	
	#Если МобильноеПриложениеСервер Тогда
		ОборудованиеПечатиМП = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ОборудованиеПечати");
	#Иначе
		ОборудованиеПечатиМП = Неопределено;
	#КонецЕсли
	
	Список.Параметры.УстановитьЗначениеПараметра("СимволНомера", НСтр("ru='№ ';en='# '"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕстьКассаККТ", ОборудованиеПечатиМП);
	ПолучитьСтатусСменыИОбновитьВидимостьЭлементов();
	УстановитьФильтрИДоступностьОтменыФильтра();
	
	Элементы.ДекорацияНетСоединения.Видимость = Ложь;
	Элементы.ДекорацияСинхронизация.Видимость = Ложь;
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		Элементы.Справка.Видимость = Ложь;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ДекорацияСинхронизация.Видимость = Ложь;
	Элементы.ДекорацияНетСоединения.Видимость = Ложь;
	#Если МобильноеПриложениеКлиент Тогда
		
		Если НЕ ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СоединениеСЦБУстановленоМП") Тогда
			Оповестить("ПрошелОбмен");
			Возврат;
		КонецЕсли;
		
		ОжиданиеВыполненияОбмена();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	#Если МобильноеПриложениеКлиент Тогда
		
		ОтключитьОбработчикОжидания("ОжиданиеВыполненияОбмена");
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьКассыККМ" Тогда
		УстановитьФильтрИДоступностьОтменыФильтра();
	КонецЕсли;
	
	Если ИмяСобытия = "ПрошелОбмен"
		ИЛИ ИмяСобытия = "ДействиеСКорзиной"
		ИЛИ ИмяСобытия = "ЗаписанЧек" Тогда
		Элементы.Список.Обновить();
		ПолучитьСтатусСменыИОбновитьВидимостьЭлементов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ОчиститьСообщения();
	ВходныеПараметры = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	РозничныеПродажиМПКлиент.ДобавитьПостоянныеПараметрыЧека(ВходныеПараметры);
	ВыходныеПараметры = Неопределено;
	ОборудованиеУстройстваПечати = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ОборудованиеПечати");	
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульМенеджерОборудованияКлиент = Вычислить("МенеджерОборудованияКлиент");
		// АПК:488-вкл
		Если ТипЗнч(МодульМенеджерОборудованияКлиент) = Тип("ОбщийМодуль") Тогда
			РезультатВыполнения = МодульМенеджерОборудованияКлиент.ВыполнитьОткрытиеСменыНаФискальномУстройстве(УникальныйИдентификатор, ОборудованиеУстройстваПечати, ВходныеПараметры, ВыходныеПараметры);
		КонецЕсли;
	#Иначе
		РезультатВыполнения = Ложь;
	#КонецЕсли
	
	Если ((ЗначениеЗаполнено(ОборудованиеУстройстваПечати) И РезультатВыполнения)
		ИЛИ НЕ ЗначениеЗаполнено(ОборудованиеУстройстваПечати)) Тогда
		РозничныеПродажиМПСервер.ОткрытьКассовуюСмену();
		ПолучитьСтатусСменыИОбновитьВидимостьЭлементов()
	Иначе
		Сообщить(ВыходныеПараметры.ТекстОшибки);
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ОчиститьСообщения();
	//ВходныеПараметры  = Новый Структура();
	ВходныеПараметры = Новый Структура("ОтчетСГашением", Истина);
	РозничныеПродажиМПКлиент.ДобавитьПостоянныеПараметрыЧека(ВходныеПараметры);
	ВыходныеПараметры = Неопределено;
	ОборудованиеУстройстваПечати = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("ОборудованиеПечати");
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:488-выкл методы безопасного запуска обеспечиваются этой функцией
		МодульМенеджерОборудованияКлиент = Вычислить("МенеджерОборудованияКлиент");
		// АПК:488-вкл
		Если ТипЗнч(МодульМенеджерОборудованияКлиент) = Тип("ОбщийМодуль") Тогда
			РезультатВыполнения = МодульМенеджерОборудованияКлиент.ВыполнитьЗакрытиеСменыНаФискальномУстройстве(УникальныйИдентификатор, ОборудованиеУстройстваПечати, ВходныеПараметры, ВыходныеПараметры);
		КонецЕсли;
	#Иначе
		РезультатВыполнения = Ложь;
	#КонецЕсли
	
	
	Если ((ЗначениеЗаполнено(ОборудованиеУстройстваПечати) И РезультатВыполнения)
		ИЛИ НЕ ЗначениеЗаполнено(ОборудованиеУстройстваПечати)) Тогда
		РозничныеПродажиМПСервер.ЗакрытьКассовуюСмену();
		ПолучитьСтатусСменыИОбновитьВидимостьЭлементов();
	Иначе
		Сообщить(ВыходныеПараметры.ТекстОшибки);
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЧек(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	Если СменаОткрыта Тогда
		ПараметрыОткрытия = Новый Структура("Основание", Новый Структура("ОтчетОРозничныхПродажах", ТекущийОтчетОРозничныхПродажах));
		ОткрытьФорму("Документ.ЧекККММП.Форма.ФормаПродажа", ПараметрыОткрытия, ЭтаФорма, Истина);
	Иначе
		ОткрытьФорму("Документ.ЧекККММП.Форма.ФормаПродажа", , ЭтаФорма, Истина);
		ПолучитьСтатусСменыИОбновитьВидимостьЭлементов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозврат(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	Если СменаОткрыта Тогда
		ПараметрыОткрытия = Новый Структура("Основание", Новый Структура("ОтчетОРозничныхПродажах", ТекущийОтчетОРозничныхПродажах));
		ОткрытьФорму("Документ.ЧекККМВозвратМП.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма, Истина);
	Иначе
		ОткрытьФорму("Документ.ЧекККМВозвратМП.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма, Истина);
		ПолучитьСтатусСменыИОбновитьВидимостьЭлементов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоКонкретнойКассе(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ОткрытьФорму("Справочник.КассыККММП.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоМоейКассе(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	УстановитьФильтр("ПоМоейКассе");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьФильтр(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	УстановитьФильтр(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьФильтрИДоступностьОтменыФильтра()
	
	КоличествоКассККМ = Справочники.КассыККММП.ПолучитьКоличествоКассККМ();
	
	Если КоличествоКассККМ <= 1 Тогда
		Элементы.Фильтровать.Видимость = Ложь;
		Элементы.ФормаОтменитьФильтр.Видимость = Ложь;
		Элементы.КассаККМ.Видимость = Ложь;
	Иначе
		Элементы.КассаККМ.Видимость = Истина;
		Элементы.Фильтровать.Видимость = Истина;
		Элементы.ФормаОтменитьФильтр.Видимость = Истина;
		ФильтрПоКассеККМ = Константы.ФильтрПоКассеККММП.Получить();
		УстановитьФильтр(ФильтрПоКассеККМ, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСтатусСменыИОбновитьВидимостьЭлементов()
	
	СтруктураСостояниеКассовойСмены = РозничныеПродажиМПСервер.ПолучитьСостояниеКассовойСмены();
	
	СменаОткрыта = СтруктураСостояниеКассовойСмены.СменаОткрыта;
	ТекущийОтчетОРозничныхПродажах = СтруктураСостояниеКассовойСмены.ОтчетОРозничныхПродажах;
	
	Элементы.ФормаОткрытьСмену.Видимость = НЕ СменаОткрыта;
	Элементы.ФормаЗакрытьСмену.Видимость = СменаОткрыта;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ПолучитьСтатусСменыИОбновитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФильтр(Фильтр, СохранитьНастройку = Истина)
	
	Если Фильтр = "ПоМоейКассе" Тогда
		#Если МобильноеПриложениеСервер Тогда

		ФильтрПоКассеККМ = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("КассаККММобильногоПриложения");
		#КонецЕсли
	Иначе
		ФильтрПоКассеККМ = Фильтр;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФильтрПоКассеККМ) Тогда
		Список.Отбор.Элементы[0].Использование = Истина;
		Список.Отбор.Элементы[0].ПравоеЗначение = ФильтрПоКассеККМ;
	Иначе
		Список.Отбор.Элементы[0].Использование = Ложь;
		Список.Отбор.Элементы[0].ПравоеЗначение = Неопределено;
	КонецЕсли;
	
	Элементы.ФормаОтменитьФильтр.Доступность = ЗначениеЗаполнено(ФильтрПоКассеККМ);
	
	Если СохранитьНастройку Тогда
		СохранитьНастройкиНаСервере(ФильтрПоКассеККМ);
	КонецЕсли;
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере(ФильтрПоКассеККМ)
	
	Константы.ФильтрПоКассеККММП.Установить(ФильтрПоКассеККМ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КассыККММП") Тогда
		УстановитьФильтр(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЗначениеЗаполнено(ФильтрПоКассеККМ) Тогда
		Заголовок = НСтр("ru='Розничные продажи (';en='Retail Sales ('") + ФильтрПоКассеККМ.Наименование + ")";
	Иначе
		Заголовок = НСтр("ru='Розничные продажи';en='Retail Sales'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Синхронизация

&НаКлиенте
Процедура СписокОбработкаЗапросаОбновления()
	
	Оповестить("ПрошелОбмен");
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Элементы.ДекорацияСинхронизация.Видимость Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СоединениеСЦБУстановленоМП") Тогда
			Возврат;
		КонецЕсли;
		
		Если ИнформацияОбИнтернетСоединении.ПолучитьТипСоединения() = ТипИнтернетСоединения.НетСоединения Тогда
			Элементы.ДекорацияНетСоединения.Видимость = Истина;
			ПодключитьОбработчикОжидания("ОтключитьОповещениеОбОтсутствииИнтернета", 3, Истина);
			Возврат;
		КонецЕсли;
		
		
		Элементы.ДекорацияСинхронизация.Видимость = Истина;
		
		ОбщегоНазначенияМПВызовСервера.УстановитьЗначениеКонстанты("СинхронизацияВыполняется", Истина);
		ОбщегоНазначенияМПВызовСервера.УстановитьЗначениеКонстанты("НачатьСинхронизацию", Истина);
		
		ПодключитьОбработчикОжидания("ОжиданиеВыполненияОбмена", 0.1, Истина);
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеВыполненияОбмена()
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ОбменВыполняется = ОбщегоНазначенияМПВызовСервера.ПолучитьЗначениеКонстанты("СинхронизацияВыполняется");
		Если ОбменВыполняется Тогда
			Элементы.ДекорацияСинхронизация.Видимость = Истина;
			ПодключитьОбработчикОжидания("ОжиданиеВыполненияОбмена", 3, Истина);
		ИначеЕсли Элементы.ДекорацияСинхронизация.Видимость Тогда
			Элементы.ДекорацияСинхронизация.Видимость = Ложь;
			Если ИнформацияОбИнтернетСоединении.ПолучитьТипСоединения() = ТипИнтернетСоединения.НетСоединения Тогда
				Элементы.ДекорацияНетСоединения.Видимость = Истина;
				ПодключитьОбработчикОжидания("ОтключитьОповещениеОбОтсутствииИнтернета", 3, Истина);
				Возврат;
			КонецЕсли;
			Оповестить("ПрошелОбмен");
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОповещениеОбОтсутствииИнтернета()
	
	#Если МобильноеПриложениеКлиент Тогда
		Элементы.ДекорацияНетСоединения.Видимость = Ложь;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти


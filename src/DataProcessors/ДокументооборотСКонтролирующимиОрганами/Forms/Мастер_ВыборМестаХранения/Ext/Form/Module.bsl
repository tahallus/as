
#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЭДОКлиент;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Инициализация(Параметры);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособПодтвержденияКриптооперацийПриИзменении(Элемент)
	ОбработкаЗаявленийАбонентаКлиентСервер.УстановитьМодифицированность(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВключатьЛицензиюКриптоПроВСертификатПриИзменении(Элемент)
	
	Если ВключатьЛицензиюКриптоПроВСертификат И ПредупреждатьПроНаличиеЛицензииКриптоПро Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВключатьЛицензиюКриптоПроВСертификатПриИзменении_Завершение", 
			ЭтотОбъект);
			
		ТекстВопроса = НСтр("ru = 'На компьютере уже имеется общая лицензия КриптоПро CSP.
                             |Вы уверены, что хотите включить лицензию в сертификат (потребуется доп. оплата) ?'");
			
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ОбработкаЗаявленийАбонентаКлиентСервер.УстановитьМодифицированность(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранноеМестоХраненияКлючаПриИзменении(Элемент)

	ОбработкаЗаявленийАбонентаКлиентСервер.УстановитьМодифицированность(ЭтотОбъект);
	ОбработкаЗаявленийАбонентаКлиентСервер.ОпределитьИзменениеВМестеХраненияКлючей(ЭтотОбъект);
	ОбработкаЗаявленийАбонентаКлиентСервер.ПроверитьНеобходимостьУстановкиГалки_ВключатьЛицензиюКриптоПроВСертификат(ЭтотОбъект);
	
	Если ВыбранноеМестоХраненияКлюча = ПредопределенноеЗначение("Перечисление.МодельРаботыСКлючами.ВМоделиСервиса") Тогда
		ЗаполнитьИспользованиеДолговременногоТокена();
		ВключатьЛицензиюКриптоПроВСертификат = Ложь;
	Иначе
		СпособПодтвержденияКриптоопераций = Неопределено;
		ПроверенДоступДляТокена			  = Ложь;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ МестоХраненияКорректное() Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура(ПараметрыФормы);
	ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ЭтотОбъект, ПараметрыФормы); 
	ДополнительныеПараметры.Вставить("ПараметрыФормы", 		ПараметрыФормы);
	ДополнительныеПараметры.Вставить("Модифицированность", 	Модифицированность);
	
	ОбработкаЗаявленийАбонентаКлиентСервер.СнятьМодифицированность(ЭтотОбъект);
	
	Закрыть(ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция МестоХраненияКорректное()
	
	Корректное = Истина;
	
	Если ЕстьВыборМестаХраненияКлючей 
		И НЕ ЗначениеЗаполнено(ВыбранноеМестоХраненияКлюча) 
		И НЕ ИспользоватьСуществующий(ЭтотОбъект)
		И ИзменитьМестоХранения Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите место хранения ключа'"), ,"ВыбранноеМестоХраненияКлюча");
		Корректное = Ложь;
		
	КонецЕсли;
	
	Возврат Корректное; 
	
КонецФункции

&НаКлиенте
Процедура ВключатьЛицензиюКриптоПроВСертификатПриИзменении_Завершение(Ответ, ВходящийКонтекст) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОбработкаЗаявленийАбонентаКлиентСервер.УстановитьМодифицированность(ЭтотОбъект);
	Иначе
		ВключатьЛицензиюКриптоПроВСертификат = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Инициализация(Параметры)
	
	ПараметрыФормы = Параметры.ПараметрыФормы;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, ПараметрыФормы);
	
	Элементы.СпособПодтвержденияКриптоопераций.Подсказка = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьОписаниеСпособовПодтвержденияКриптоопераций();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ИспользоватьСуществующий = ИспользоватьСуществующий(Форма); 
	Элементы.ВыборМестаХраненияКлючей.Доступность = НЕ ИспользоватьСуществующий;
	Если ИспользоватьСуществующий Тогда
		Возврат;
	КонецЕсли;
	
	УстановленТолькоОдинКриптопровайдер = Форма.КомпонентаУстановлена 
		И (Форма.ViPNetCSPУстановлен ИЛИ Форма.CryptoProCSPУстановлен)
		И НЕ (Форма.ViPNetCSPУстановлен И Форма.CryptoProCSPУстановлен);
		
	Если УстановленТолькоОдинКриптопровайдер И НЕ Форма.ДоступнаЭлектроннаяПодписьВМоделиСервиса Тогда
		// Нет выбора 
		
		Форма.ЕстьВыборМестаХраненияКлючей = Ложь;
		Элементы.ВыборМестаХраненияКлючей.ТекущаяСтраница = Элементы.НетВыбораМестаХранения;
		Элементы.НетВыбораМестаХранения.Видимость = Истина;
		Элементы.ЕстьВыборМестаХранения.Видимость = Ложь;
		
		Если Форма.ViPNetCSPУстановлен Тогда
			Форма.КриптопровайдерПредставление = Новый ФорматированнаяСтрока(НСтр("ru = 'Программа защиты информации: ViPNet CSP'"));
		Иначе
			Форма.КриптопровайдерПредставление = Новый ФорматированнаяСтрока(НСтр("ru = 'Программа защиты информации: CryptoPro CSP'"));
		КонецЕсли;
		
	Иначе
		
		// Есть выбор
		Форма.ЕстьВыборМестаХраненияКлючей = Истина;
		Элементы.ВыборМестаХраненияКлючей.ТекущаяСтраница = Элементы.ЕстьВыборМестаХранения;
		Элементы.НетВыбораМестаХранения.Видимость = Ложь;
		Элементы.ЕстьВыборМестаХранения.Видимость = Истина;
		
		Элементы.ВыбранноеМестоХраненияКлюча.СписокВыбора.Очистить();
		
		Если Форма.ДоступнаЭлектроннаяПодписьВМоделиСервиса Тогда
		
			Элементы.ВыбранноеМестоХраненияКлюча.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.МодельРаботыСКлючами.ВМоделиСервиса"),
				НСтр("ru = 'В защищенном хранилище сервиса'"));
			
		КонецЕсли;
		
		ПоказыватьОбаКриптопровайдера = НЕ Форма.КомпонентаУстановлена
			ИЛИ Форма.КомпонентаУстановлена И НЕ Форма.ViPNetCSPУстановлен И НЕ Форма.CryptoProCSPУстановлен; // не установлено ни одно криптопровайдера
				
		Если Форма.ViPNetCSPУстановлен ИЛИ ПоказыватьОбаКриптопровайдера Тогда
			Элементы.ВыбранноеМестоХраненияКлюча.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКриптоПровайдеров.VipNet"),
				НСтр("ru = 'На рабочем компьютере (ViPNet CSP)'"));
		КонецЕсли;
			
		Если Форма.CryptoProCSPУстановлен ИЛИ ПоказыватьОбаКриптопровайдера Тогда
			Элементы.ВыбранноеМестоХраненияКлюча.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКриптоПровайдеров.CryptoPro"),
				НСтр("ru = 'На рабочем компьютере (CryptoPro CSP)'"));
		КонецЕсли;
			
	КонецЕсли;
	
	ЭтоОблако = Форма.ЭтоУчетнаяЗаписьВМоделиСервиса И НЕ Форма.ЭтоПереходВКоробку;
	
	Элементы.СпособПодтвержденияКриптоопераций.Видимость = 
		Форма.ИзменитьМестоХранения И (ЭтоОблако ИЛИ Форма.ЭтоПереходВОблако);
	
	ИзменитьОформлениеФлагаДобавитьЛицензиюКриптоПро(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФлагаДобавитьЛицензиюКриптоПро(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоОблако = Форма.ЭтоУчетнаяЗаписьВМоделиСервиса И НЕ Форма.ЭтоПереходВКоробку;
	
	Видимость = 
		Форма.ПоказыватьФлагВключатьЛицензиюКриптоПроВСертификат
		И Форма.ИзменитьМестоХранения 
		И НЕ ЭтоОблако 
		И НЕ Форма.ЭтоПереходВОблако;
	
	Элементы.ВключатьЛицензиюКриптоПроВСертификат.Доступность = НЕ ИспользоватьСуществующий(Форма);
	Элементы.ВключатьЛицензиюКриптоПроВСертификат.Видимость = Видимость;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИспользованиеДолговременногоТокена()
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.ЗаполнитьИспользованиеДолговременногоТокена(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИспользоватьСуществующий(Форма)
	Возврат ОбработкаЗаявленийАбонентаКлиентСервер.ИспользоватьСуществующий(Форма);
КонецФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;

КонецПроцедуры

#КонецОбласти


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Функция заполняет первые два шага в помощнике получения РНПТ
// Провести инвентаризацию и Создать уведомления
//
// Параметры:
//  Параметры - Структура: 
//						- Организация - СправочникСсылка - организация
//						- Период - Дата - дата помощника получения РНПТ
//  АдресРезультата - строка - адрес, куда будет помещен результат 
// 
Функция ДанныеЗаполненияПомощникаПолученияРНПТ(Параметры, АдресРезультата) Экспорт
	
	ДанныеЗаполнения = ПолучитьДанныеЗаполнения(
		Параметры.Период,
		Параметры.Организация);
	
	ПоместитьВоВременноеХранилище(ДанныеЗаполнения, АдресРезультата);
	
КонецФункции

// Создает документы "Уведомление об остатках прослеживаемых товаров"
// и "Уведомление о ввозе прослеживаемых товаров" в фоне.
// 
// Параметры:
//  ПараметрыCоздания - Структура:
//						Дата - Дата - текущая дата
//						Организация - СправочникСсылка.Организации - организация
//						ПериодСобытия - Дата - дата в помощнике, начало месяца
//						ТаблицаОстатков - ТаблицаЗначений - таблица данных, по которым нужно сформировать уведомления об остатках
//						ТаблицаВвоза - ТаблицаЗначений - таблица данных, по которым нужно сформировать уведомления о ввозе
//  АдресРезультата - строка - адрес, куда будет помещен результат 
//
Функция СоздатьУведомленияВФоне(ПараметрыСоздания, АдресРезультата) Экспорт
	
	ТаблицаОстатковСПервичнымиДокументами = ПараметрыСоздания.ТаблицаОстатков;
	ТаблицаВвоза = ПараметрыСоздания.ТаблицаВвоза;
	Организация  = ПараметрыСоздания.Организация;
	
	СоздатьУведомленияОбОстатках(ТаблицаОстатковСПервичнымиДокументами, Организация);
	
	СоздатьУведомленияОВвозе(ТаблицаВвоза, Организация);
	
КонецФункции

// Записывает полученные РНПТ в документ Уведомление об остатках прослеживаемых товаров 
//  и в документ Уведомление о ввозе прослеживаемых товаров
// 
// Параметры:
//  ПараметрыСоздания - Структура:
//						- Организация - СправочникСсылка - организация
//						- ПериодСобытия - Дата - дата помощника получения РНПТ
//  АдресРезультата - строка - адрес, куда будет помещен результат 
// 
Функция ЗаписьПолученныхРНПТВФоне(ПараметрыСоздания, АдресРезультата) Экспорт

	Организация = ПараметрыСоздания.Организация;
	Период = ПараметрыСоздания.ПериодСобытия;
	
	ЗаписатьПолученныеРНПТ(Организация, Период);
	
КонецФункции

// Создает документы по инвентаризации товаров из помощника получения РНПТ
// 
// Параметры:
//  ПараметрыCоздания - Структура:
//						Дата - Дата - текущая дата
//						Организация - СправочникСсылка.Организации - организация
//						ПериодСобытия - Дата - дата в помощнике, начало месяца
//						ТаблицаОстатков - ТаблицаЗначений - таблица данных, по которым нужно сформировать уведомления
//  АдресРезультата - строка - адрес, куда будет помещен результат
//
Функция СоздатьИнвентаризациюОбОстаткахВФоне(ПараметрыСоздания, АдресРезультата) Экспорт

	ТаблицаОстатков = ПараметрыСоздания.ТаблицаОстатков;
	Организация = ПараметрыСоздания.Организация;
	Дата = ПараметрыСоздания.Дата;
	
	СоздатьИнвентаризациюОбОстатках(Дата, Организация, ТаблицаОстатков, АдресРезультата);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьИнвентаризациюОбОстатках(Дата, Организация, ТаблицаОстатков, АдресРезультата)
	
	МассивСкладов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаОстатков.ВыгрузитьКолонку("Склад"));
	ФильтрПоСкладу = Новый Структура("Склад");
	СписокНоменклатуры = Новый Массив();
	СозданныеДокументы = Новый Массив();
	
	Для каждого ТекущийСклад Из МассивСкладов Цикл
		
		ФильтрПоСкладу.Склад = ТекущийСклад;
		НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(ФильтрПоСкладу);
		
		Для каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			СписокНоменклатуры.Добавить(ТекущаяСтрока.Номенклатура);
		КонецЦикла;
		
		СсылкаНаДокумент = СоздатьИнвентаризациюТовара(Дата, Организация, ТекущийСклад, СписокНоменклатуры);
		
		СозданныеДокументы.Добавить(СсылкаНаДокумент);
		
		СписокНоменклатуры.Очистить();
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(СозданныеДокументы, АдресРезультата);
	
КонецПроцедуры

Функция СоздатьИнвентаризациюТовара(Дата, Организация, ТекущийСклад, СписокНоменклатуры)
	
	НовыйДокумент = Документы.ИнвентаризацияЗапасов.СоздатьДокумент();
	НовыйДокумент.Дата = Дата;
	
	ДанныеЗаполнения = ДанныеЗаполненияИнвентаризации(Дата, Организация, ТекущийСклад, СписокНоменклатуры);
	
	НовыйДокумент.Заполнить(ДанныеЗаполнения);
	
	НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции

Функция ДанныеЗаполненияИнвентаризации(Дата, Организация, Склад, СписокНоменклатуры)
	
	ДанныеЗаполнения = Новый Структура();
	
	ДанныеЗаполнения.Вставить("Дата",                 Дата);
	ДанныеЗаполнения.Вставить("Организация",          Организация);
	ДанныеЗаполнения.Вставить("СтруктурнаяЕдиница",                Склад);
	ДанныеЗаполнения.Вставить("СписокНоменклатуры",   СписокНоменклатуры);
	
	Возврат ДанныеЗаполнения;
КонецФункции

Процедура ЗаписатьПолученныеРНПТ(Организация, Период)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтатусОтправки", Перечисления.СтатусыОтправки.Сдан);
	Запрос.УстановитьПараметр("ПустойРНПТ", ПрослеживаемостьПереопределяемый.ПустоеЗначениеРНПТ());
	
	ТекстЗапросаУведомлениеОбОСтатках = ИнтерфейсыВзаимодействияБРОВызовСервера.ТекстыДляЗапросаДокументовРеализацииПолномочийНО(
		"УведомлениеОбОстаткахПрослеживаемыхТоваров");
	ТекстЗапросаУведомлениеОВвозе = ИнтерфейсыВзаимодействияБРОВызовСервера.ТекстыДляЗапросаДокументовРеализацииПолномочийНО(
		"УведомлениеОВвозеПрослеживаемыхТоваров");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка КАК Ссылка,
	|	СтатусыОтправки.Статус КАК Статус,
	|	" + ТекстЗапросаУведомлениеОбОСтатках.ПеречислениеКолонок + "
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
	|		ПО УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка = СтатусыОтправки.Объект
	|	" + ТекстЗапросаУведомлениеОбОСтатках.СоединениеСДокументом + "
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Организация = &Организация
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен
	|	И ДокументыРеализацииПолномочийНалоговыхОрганов.РНПТ <> """"
	|	И ДокументыРеализацииПолномочийНалоговыхОрганов.РНПТ ЕСТЬ НЕ NULL
	|	И СтатусыОтправки.Статус = &СтатусОтправки
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.РНПТ = &ПустойРНПТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка,
	|	СтатусыОтправки.Статус,
	|	" + ТекстЗапросаУведомлениеОВвозе.ПеречислениеКолонок + "
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
	|		ПО УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка = СтатусыОтправки.Объект
	|	" + ТекстЗапросаУведомлениеОВвозе.СоединениеСДокументом + "
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация = &Организация
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И СтатусыОтправки.Статус = &СтатусОтправки
	|	И ДокументыРеализацииПолномочийНалоговыхОрганов.РНПТ <> """"
	|	И ДокументыРеализацииПолномочийНалоговыхОрганов.РНПТ ЕСТЬ НЕ NULL
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ = &ПустойРНПТ";
	
	Выбор = Запрос.Выполнить().Выбрать();
	
	Пока Выбор.Следующий() Цикл
		
		ДокументОбъект = Выбор.Ссылка.ПолучитьОбъект();
		
		ДокументОбъект.РНПТ = 
			ПрослеживаемостьПереопределяемый.ПолучитьРНПТНаСервере(Выбор.ДокументыРеализацииПолномочийНО_РНПТ);
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьУведомленияОбОстатках(ТаблицаОстатковСПервичнымиДокументами, Организация)
	
	ТаблицаТНВЭД = ТаблицаОстатковСПервичнымиДокументами.Скопировать(,"КодТНВЭД,Основание,ЕдиницаИзмерения,ЕдиницаПрослеживаемости");
	ТаблицаТНВЭД.Свернуть("КодТНВЭД,Основание,ЕдиницаИзмерения,ЕдиницаПрослеживаемости");
	Фильтр = Новый Структура("КодТНВЭД, Основание, ЕдиницаИзмерения");
	
	Если НЕ ЗначениеЗаполнено(ТаблицаОстатковСПервичнымиДокументами) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ТекущаяСтрокТНВЭД Из ТаблицаТНВЭД Цикл
		
		ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСтрокТНВЭД.Основание, "Дата");
		
		НовыйДокумент = Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.СоздатьДокумент();
		
		ЗаполнитьЗначенияСвойств(НовыйДокумент, ТекущаяСтрокТНВЭД);
		
		НовыйДокумент.Дата = ДатаОснования + 1;
		НовыйДокумент.ПервичныйДокумент = ТекущаяСтрокТНВЭД.Основание;
		НовыйДокумент.Организация = Организация;
		
		ТаблицаТовары = НовыйДокумент.Товары;
		
		ЗаполнитьЗначенияСвойств(Фильтр, ТекущаяСтрокТНВЭД);
		НайденныеСтроки = ТаблицаОстатковСПервичнымиДокументами.НайтиСтроки(Фильтр);
		
		Для каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			
		КонецЦикла;
		
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьУведомленияОВвозе(ТаблицаВвоза, Организация)
	
	ТаблицаТНВЭД = ТаблицаВвоза.Скопировать(,"КодТНВЭД,Основание,ЕдиницаИзмерения,ЕдиницаПрослеживаемости");
	ТаблицаТНВЭД.Свернуть("КодТНВЭД,Основание,ЕдиницаИзмерения,ЕдиницаПрослеживаемости");
	Фильтр = Новый Структура("КодТНВЭД, Основание, ЕдиницаИзмерения");
	
	Если НЕ ЗначениеЗаполнено(ТаблицаВвоза) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ТекущаяСтрокТНВЭД Из ТаблицаТНВЭД Цикл
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущаяСтрокТНВЭД.Основание, "Дата, Контрагент");
		
		НовыйДокумент = Документы.УведомлениеОВвозеПрослеживаемыхТоваров.СоздатьДокумент();
		
		ЗаполнитьЗначенияСвойств(НовыйДокумент, ТекущаяСтрокТНВЭД);
		
		НовыйДокумент.Дата = РеквизитыОснования.Дата + 1;
		НовыйДокумент.Контрагент = РеквизитыОснования.Контрагент;
		НовыйДокумент.ПервичныйДокумент = ТекущаяСтрокТНВЭД.Основание;
		НовыйДокумент.Организация = Организация;
		
		ТаблицаТовары = НовыйДокумент.Товары;
		
		ЗаполнитьЗначенияСвойств(Фильтр, ТекущаяСтрокТНВЭД);
		НайденныеСтроки = ТаблицаВвоза.НайтиСтроки(Фильтр);
		
		Для каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		КонецЦикла;
		
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеЗаполнения(Период, Организация)
	
	Результат = Новый Структура("НачальныеДанные");
	
	Результат.НачальныеДанные = ПрослеживаемостьПереопределяемый.ПолучитьНачальныеДанныеДляПомощникаПолученияРНПТ(Период, Организация);

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли

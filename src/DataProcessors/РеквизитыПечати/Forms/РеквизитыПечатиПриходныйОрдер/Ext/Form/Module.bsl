
#Область ОписаниеПеременных

&НаКлиенте
Перем МассивИзмененныхРеквизитов;

#КонецОбласти

#Область Служебные

&НаКлиенте
Процедура ЗафиксироватьИзменениеЗначенияРеквизита(ИмяРеквизита)
	
	Если МассивИзмененныхРеквизитов.Найти(ИмяРеквизита) = Неопределено Тогда
		
		МассивИзмененныхРеквизитов.Добавить(ИмяРеквизита);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеталиПоКомиссии(Комиссия)
	
	ЗаполнитьДеталиПоКомиссииНаСервере(Комиссия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзмененияИЗакрытьФорму(Команда = Неопределено)
	
	ПараметрыЗакрытия = Новый Структура;
	Если Команда <> Неопределено Тогда
		
		ПараметрыЗакрытия.Вставить("Команда", Команда);
		
	КонецЕсли;
	
	ИзмененныеРеквизиты = Новый Структура;
	Для каждого ЭлементМассива Из МассивИзмененныхРеквизитов Цикл
		
		ИзмененныеРеквизиты.Вставить(ЭлементМассива, КонтекстПечати[ЭлементМассива]);
		
	КонецЦикла;
	ПараметрыЗакрытия.Вставить("ИзмененныеРеквизиты", ИзмененныеРеквизиты);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеталиПоКомиссииНаСервере(Комиссия)
	Перем Итератор;
	
	Если НЕ ЗначениеЗаполнено(Комиссия) Тогда
		
		КомиссияПредседатель = Неопределено;
		КомиссияЧлен1 = Неопределено;
		КомиссияЧлен2 = Неопределено;
		КомиссияЧлен3 = Неопределено;
		Возврат;
		
	КонецЕсли;
	
	ДанныеКомиссии = Справочники.Комиссии.ПодписиКомиссииМассивом(Комиссия);
	Если ДанныеКомиссии.РазмерКомиссии > 0 Тогда
		
		Если ЗначениеЗаполнено(ДанныеКомиссии.ПодписьПредседателя) Тогда
			
			КомиссияПредседатель = ДанныеКомиссии.ПодписьПредседателя;
			
		КонецЕсли;
		
		БлижайшийСвободныйРеквизитФормы = 1;
		Для каждого ЭлементМассива Из ДанныеКомиссии.ПодписиКомиссии Цикл
			
			Если ДанныеКомиссии.ПодписьПредседателя = ЭлементМассива Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ЭтотОбъект["КомиссияЧлен" + БлижайшийСвободныйРеквизитФормы] = ЭлементМассива;
			
			БлижайшийСвободныйРеквизитФормы = БлижайшийСвободныйРеквизитФормы + 1;
			Если БлижайшийСвободныйРеквизитФормы > 3 Тогда
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаголовокФормы()
	
	ЭтаФорма.Заголовок = Обработки.РеквизитыПечати.ЗаголовокФормы();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПодписиПоУмолчаниюНаСервере()
	
	ДокументОбъект = ДанныеФормыВЗначение(КонтекстПечати, Тип("ДокументОбъект.ПриходныйОрдер"));
	Обработки.РеквизитыПечати.ПодписиПоУмолчанию(ДокументОбъект);
	ЗначениеВДанныеФормы(ДокументОбъект, КонтекстПечати);
	
КонецФункции

&НаСервере
Процедура ДоступностьКомандФормы()
	
	Если НЕ ПравоДоступа("Изменение", КонтекстПечати.Ссылка.Метаданные()) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаВосстановитьПодписиПоУмолчанию", "Доступность", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивОбъектовМетаданных = Новый Массив(1);
	МассивОбъектовМетаданных[0] = Параметры.КонтекстПечати.Ссылка.Метаданные();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.Источники = МассивОбъектовМетаданных;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	ПечатьДокументовУНФ.УстановитьОтображениеПодменюПечати(Элементы.ПодменюПечать);
	
	ЗаполнитьЗначенияСвойств(КонтекстПечати, Параметры.КонтекстПечати, "Организация, СтруктурнаяЕдиница, ПодписьРуководителя, ПодписьКладовщика, ПодписьСдающегоЗапасы, Комиссия");
	
	ЗаголовокФормы();
	ЗаполнитьДеталиПоКомиссииНаСервере(КонтекстПечати.Комиссия);
	ДоступностьКомандФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивИзмененныхРеквизитов = Новый Массив;
	
КонецПроцедуры

#КонецОбласти

#Область Библиотеки

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ЗаписатьИзмененияИЗакрытьФорму(Команда);
	
	Возврат; // работа типового метода не предусмотрена
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, КонтекстПечати);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	Возврат; // работа типового метода не предусмотрена
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, КонтекстПечати, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	Возврат; // работа типового метода не предусмотрена
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, КонтекстПечати);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьИзмененияИЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьПодписиПоУмолчанию(Команда)
	
	ПредыдущиеЗначения = Новый Структура("Комиссия, ПодписьРуководителя, ПодписьКладовщика, ПодписьСдающегоЗапасы");
	ЗаполнитьЗначенияСвойств(ПредыдущиеЗначения, КонтекстПечати);
	
	ПолучитьПодписиПоУмолчаниюНаСервере();
	
	Для каждого ЭлементСтруктуры Из ПредыдущиеЗначения Цикл
		
		Если ЭлементСтруктуры.Значение <> КонтекстПечати[ЭлементСтруктуры.Ключ] Тогда
			
			ЗафиксироватьИзменениеЗначенияРеквизита(ЭлементСтруктуры.Ключ);
			
			Если ЭлементСтруктуры.Ключ = "Комиссия" Тогда
				
				ЗаполнитьДеталиПоКомиссии(КонтекстПечати.Комиссия);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Реквизиты

&НаКлиенте
Процедура КонтекстПечатиПодписьРуководителяПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита("ПодписьРуководителя");
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстПечатиПодписьКладовщикаПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита("ПодписьКладовщика");
	
КонецПроцедуры

&НаКлиенте
Процедура КонтекстПечатиПодписьСдающегоЗапасыПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита("ПодписьСдающегоЗапасы");
	
КонецПроцедуры

&НаКлиенте
Процедура КомиссияПриИзменении(Элемент)
	
	ЗафиксироватьИзменениеЗначенияРеквизита(Элемент.Имя);
	
	ЗаполнитьДеталиПоКомиссии(КонтекстПечати.Комиссия);
	
КонецПроцедуры

#КонецОбласти

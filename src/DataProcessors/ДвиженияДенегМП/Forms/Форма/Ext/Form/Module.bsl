#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура СформироватьНаСервере(ТабДокумент, ДляОтправки = Ложь, НаПечать = Ложь)
	
	ЭтоСмартфон = ОбщегоНазначенияМПВызовСервера.ЭтоСмартфон();
	ИмяМакета = "";
	
	Если ДляОтправки Тогда
		ИмяМакета = "МакетДляОтправки";
	ИначеЕсли ЭтоСмартфон Тогда
		Если ОбщегоНазначенияМПСервер.ПолучитьОриентациюЭкрана() = ОриентацияСтраницы.Ландшафт Тогда
			ИмяМакета = "Макет";
		Иначе
			ИмяМакета = "МакетСмартфон";
		КонецЕсли;
	Иначе
		ИмяМакета = "Макет";
	КонецЕсли;
	Макет = Обработки.ДвиженияДенегМП.ПолучитьМакет(ИмяМакета);
	ТабДокумент.Очистить();
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Дата"));
	КД = Новый КвалификаторыЧисла(12,2);
	ОписаниеТипов = Новый ОписаниеТипов(Массив, , ,КД);
	
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Дата", ОписаниеТипов);
	ТаблицаДвижений.Колонки.Добавить("Статья");
	ТаблицаДвижений.Колонки.Добавить("НаименованиеКонтрагента");
	ТаблицаДвижений.Колонки.Добавить("Сумма");
	
	ВыборкаДвижений = СформироватьНаСервереФрагмент();
	
	Пока ВыборкаДвижений.Следующий() Цикл
		Документ = ВыборкаДвижений.Регистратор;
		
		Если ЗначениеЗаполнено(ЭтаФорма.ЭлементОтбора) Тогда
			Если ТипЗнч(ЭтаФорма.ЭлементОтбора) = Тип("СправочникСсылка.КонтрагентыМП")
				И Документ.Контрагент <> ЭтаФорма.ЭлементОтбора Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(ЭтаФорма.ЭлементОтбора) = Тип("СправочникСсылка.СтатьиМП")
				И ВыборкаДвижений.Статья <> ЭтаФорма.ЭлементОтбора Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Дата = НачалоДня(Документ.Дата);
		НоваяСтрока.Статья = ВыборкаДвижений.Статья;
		НоваяСтрока.НаименованиеКонтрагента = Документ.Контрагент.Наименование;
		НоваяСтрока.Сумма = ВыборкаДвижений.Сумма;
		Если ВыборкаДвижений.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
			НоваяСтрока.Сумма = - НоваяСтрока.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДвижений.Свернуть("Дата, Статья, НаименованиеКонтрагента", "Сумма");
	ТаблицаДвижений.Сортировать("Дата, Статья, НаименованиеКонтрагента");
	
	Если НЕ ДляОтправки Тогда
		Если ТаблицаДвижений.Количество() = 0 Тогда
			Элементы.Содержимое.Видимость = Ложь;
			Элементы.ДекорацияПустойОтчет.Видимость = Истина;
			Возврат;
		Иначе
			Элементы.Содержимое.Видимость = Истина;
			Элементы.ДекорацияПустойОтчет.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ГруппироватьПоДате Тогда
		Колонки = "КолонкиБезДаты";
	Иначе
		Колонки = "ВсеКолонки";
	КонецЕсли;
	
	Если ИмяМакета = "МакетСмартфон" Тогда
		Колонки = "";
		ВидЗаголовка = ?(ГруппироватьПоДате, "Группировка", "");
	Иначе
		ВидЗаголовка = "";
	КонецЕсли;
	
	Если НаПечать Тогда
		Если ИмяМакета = "МакетСмартфон" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("НазваниеОтчета");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("НазваниеОтчета" + Колонки + "|" + Колонки);
		КонецЕсли;
		ОбластьМакета.Параметры.Период = ПериодОтчета;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок" + ВидЗаголовка + "|" + Колонки);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ГруппироватьПоДате Тогда
		ТабДокумент.НачатьАвтогруппировкуСтрок();
		ДатаГруппы = Неопределено;
	КонецЕсли;
	
	СераяСтрока = Ложь;
	Для каждого Движение Из ТаблицаДвижений Цикл
		
		Если ГруппироватьПоДате Тогда
			Если Движение.Дата <> ДатаГруппы Тогда
				ДатаГруппы = Движение.Дата;
				
				ИтогГруппыСумма = 0;
				Строки = ТаблицаДвижений.НайтиСтроки(Новый Структура("Дата", ДатаГруппы));
				Для каждого Строка Из Строки Цикл
					ИтогГруппыСумма = ИтогГруппыСумма + Строка.Сумма;
				КонецЦикла;
				
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокГруппы|" + Колонки);
				ОбластьМакета.Параметры.Дата = ДатаГруппы;
				ОбластьМакета.Параметры.Сумма = ИтогГруппыСумма;
				ТабДокумент.Вывести(ОбластьМакета, 1, "", Ложь);
				
				СераяСтрока = Истина;
			КонецЕсли;
		КонецЕсли;
		
		СледующаяОбласть = ?(СераяСтрока, "Серая", "");
		СераяСтрока = НЕ СераяСтрока;
		
		Если ИмяМакета = "МакетСмартфон" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Строка" + СледующаяОбласть + "Заголовок" + ВидЗаголовка + Колонки);
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Движение);
			ТабДокумент.Вывести(ОбластьМакета, 2, "", Ложь);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка" + СледующаяОбласть + "|" + Колонки);
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Движение);
		ТабДокумент.Вывести(ОбластьМакета, 2, "", Ложь);
	КонецЦикла;
	
	Если ГруппироватьПоДате Тогда
		ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги" + Колонки + "|" + Колонки);
	ОбластьМакета.Параметры.Сумма = ТаблицаДвижений.Итог("Сумма");
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервереФрагмент()
	
	Перем ВыборкаДвижений, КонецОтбора, НачалоОтбора;
	
	НачалоОтбора = ?(ЗначениеЗаполнено(НачалоПериода), НачалоДня(НачалоПериода), НачалоПериода);
	КонецОтбора = ?(ЗначениеЗаполнено(КонецПериода), КонецДня(КонецПериода), КонецПериода);
	
	ВыборкаДвижений = РегистрыНакопления.ДенежныеСредстваМП.Выбрать(НачалоОтбора, КонецОтбора);
	Возврат ВыборкаДвижений;

КонецФункции

&НаСервере
Процедура УстановитьГруппировкуПоДате(Группировать)
	
	ЭтаФорма.ГруппироватьПоДате = Группировать;
	
	Если ГруппироватьПоДате Тогда
		Элементы.ГруппироватьПоДате.ЦветФона = Новый Цвет(204, 192, 133);
	Иначе
		Элементы.ГруппироватьПоДате.ЦветФона = Новый Цвет(245, 242, 221);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор(ВыбранноеЗначение)
	
	ЭтаФорма.ЭлементОтбора = ВыбранноеЗначение;
	СформироватьНаСервере(Содержимое);
	Элементы.ГруппаФильтр.Видимость = Истина;
	Элементы.ДекорацияФильтр.Заголовок = Строка(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтбор()
	
	ЭтаФорма.ЭлементОтбора = Неопределено;
	СформироватьНаСервере(Содержимое);
	Элементы.ГруппаФильтр.Видимость = Ложь;
	Элементы.ДекорацияФильтр.Заголовок = "";
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	Константы.ДвиженияДенегГруппироватьПоДатеМП.Установить(ЭтаФорма.ГруппироватьПоДате);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики

	УстановитьГруппировкуПоДате(Константы.ДвиженияДенегГруппироватьПоДатеМП.Получить());
	Если Параметры.Свойство("ЭлементОтбора") Тогда
		УстановитьОтбор(Параметры.ЭлементОтбора);
	КонецЕсли;
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияМПКлиент.СформироватьТекстПериодОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНажатие(Элемент, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + "." + Элемент.Имя + ".Нажатие");
	// Конец Сбор статистики

	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Период", Период);
	СтруктураПараметры.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПараметры.Вставить("КонецПериода", КонецПериода);
	
	ОткрытьФорму("ОбщаяФорма.ВыборПериодаМП", СтруктураПараметры,,,,, Новый ОписаниеОповещения("ПериодОтчетаНажатиеЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураДанных = Результат;
	
	ПериодОтчетаНажатиеФрагмент(СтруктураДанных);

КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНажатиеФрагмент(Знач СтруктураДанных)
	
	Если СтруктураДанных <> Неопределено
		И ТипЗнч(СтруктураДанных) = Тип("Структура") Тогда
		НачалоПериода = СтруктураДанных.НачалоПериода;
		КонецПериода = СтруктураДанных.КонецПериода;
		Период = СтруктураДанных.Период;
		ОбщегоНазначенияМПКлиент.СформироватьТекстПериодОтчета(ЭтаФорма);
		СформироватьНаСервере(Содержимое);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КонтрагентыМП")
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СтатьиМП") Тогда
		УстановитьОтбор(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура ОчиститьПериод(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	НачалоПериода = Неопределено;
	КонецПериода = Неопределено;
	Период = Неопределено;
	ОбщегоНазначенияМПКлиент.СформироватьТекстПериодОтчета(ЭтаФорма);
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьПоДате(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	УстановитьГруппировкуПоДате(НЕ ЭтаФорма.ГруппироватьПоДате);
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура Фильтр(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("ОтборПоКонтрагенту", НСтр("ru='Отбор по контрагенту';en='Filter by Customers & Suppliers'"));
	СписокВыбора.Добавить("ОтборПоСтатье", НСтр("ru='Отбор по статье';en='Filter by cash flow items'"));
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		ВидОперации = ВыбратьИзМеню(СписокВыбора);
		// АПК:565-вкл
		ФильтрОткрытиеФормыВыбора(ВидОперации);
	#Иначе
		ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ФильтрЗавершение", ЭтотОбъект), СписокВыбора);
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ФильтрЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВидОперации = ВыбранныйЭлемент;
	ФильтрОткрытиеФормыВыбора(ВидОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрОткрытиеФормыВыбора(Знач ВидОперации)
	
	Если ВидОперации <> Неопределено Тогда
		Если ВидОперации.Значение = "ОтборПоКонтрагенту" Тогда
			ОткрытьФорму("Справочник.КонтрагентыМП.ФормаВыбора", Новый Структура("ПоказыватьУслуги, РежимВыбора", Ложь, Истина), ЭтаФорма);
		ИначеЕсли ВидОперации.Значение = "ОтборПоСтатье" Тогда
			ОткрытьФорму("Справочник.СтатьиМП.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтаФорма);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ОчиститьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ТабДокументДляОтправки = Новый ТабличныйДокумент;
	СформироватьНаСервере(ТабДокументДляОтправки, Истина);
	ТемаПисьма = Заголовок + " " + ПериодОтчета;
	ТемаПисьма = СтрЗаменить(ТемаПисьма, "<", "");
	ТемаПисьма = СтрЗаменить(ТемаПисьма, ">", "");
	
	ОбщегоНазначенияМПКлиент.ОтправитьОтчетВCSV(ТемаПисьма, ТабДокументДляОтправки);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ТабДокументДляПечати = Новый ТабличныйДокумент;
	СформироватьНаСервере(ТабДокументДляПечати, Ложь, Истина);
	ТабДокументДляПечати.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	Если ОбщегоНазначенияМПВызовСервера.ЭтоСмартфон() Тогда
		ОтключитьОбработчикОжидания("СформироватьПриИзмененииПараметровЭкрана");
		ПодключитьОбработчикОжидания("СформироватьПриИзмененииПараметровЭкрана", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПриИзмененииПараметровЭкрана()
	
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/razdel-otchety/otchet-dvizhenie-deneg/");
	// АПК:534-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВPDF(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	СтруктураВозврата = ЗаписатьВPDF(КаталогДокументов());
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект), СтруктураВозврата.ПолноеИмяФайла);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьВPDF(КаталогДокументов)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	СформироватьНаСервере(ПечатнаяФорма, Ложь, Истина);
	
	ИмяФайла = НСтр("ru='Отчет по движению денежных средств от ';en='Movement of Money of '")
		+ ОбщегоНазначенияМПКлиентСервер.ПолучитьФорматированнуюСтрокуДатыДляФайла(ТекущаяДата()) + ".pdf";
	ПолноеИмяФайла = ОбщегоНазначенияМПКлиентСервер.ПолучитьПолноеИмяФайла(КаталогДокументов, ИмяФайла);     
	ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);             
	
	Возврат Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла, ПолноеИмяФайла);

КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Возврат; // Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры

#КонецОбласти
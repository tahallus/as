
#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьНастройки();
	
	ОбновитьАдресПубликации();
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		ШаблонПодсказки = "https://[АдресСервера]/[АдресПубликации]/[ОбластьДанных]/hs/%1";
	Иначе
		ШаблонПодсказки = "https://[АдресСервера]/[АдресПубликации]/hs/%1";
	КонецЕсли;
	
	СтрокаАвторизацииVRDФайла = ЧатботСервер.СтрокаАвторизацииФайлVRDТекстПодсказки();
	
	Если СертификатФайл = "" Тогда
		СертификатФайл = НСтр("ru = 'Не выбран'");
	КонецЕсли;
	
	Элементы.СертификатФайл.Видимость = Переключатель;
	Элементы.СертификатТекст.Видимость = НЕ Переключатель;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("Запись_НаборКонстант",, "АдресУНФ");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовУправленияФормы

&НаКлиенте
Процедура АдресРесурсаОсновнойПубликацииTelegramПриИзменении(Элемент)
	
	ОбновитьАдресПубликации();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераПриИзменении(Элемент)
	
	Если СтрЗаканчиваетсяНа(АдресСервераОсновнойПубликации, "/") Тогда
		АдресСервераОсновнойПубликации = Лев(АдресСервераОсновнойПубликации, СтрДлина(АдресСервераОсновнойПубликации) - 1);
	КонецЕсли;
	
	ОбновитьАдресПубликации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьНастройки();
	Закрыть(Истина);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьАдресПубликации()
	
	ПолныйПутьПубликацииTelegram = ПолныйПутьПубликации(Перечисления.ЧатБоты.Telegram, АдресРесурсаОсновнойПубликацииTelegram);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройки()
	
	Настройки = Константы.ОбщиеНастройкиЧатботов.Получить().Получить();
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Свойство("АдресСервераОсновнойПубликации", ЭтаФорма.АдресСервераОсновнойПубликации);
	Настройки.Свойство("СистемныйПроксиСервер", ЭтаФорма.СистемныйПроксиСервер);
	Настройки.Свойство("ПроксиЛогин", ЭтаФорма.ПроксиЛогин);
	Настройки.Свойство("ПроксиПароль", ЭтаФорма.ПроксиПароль);
	
	Если Настройки.Свойство("СертификатSSL") Тогда
		Если Настройки.СертификатSSL.Свойство("СертификатФайл") Тогда
			СертификатФайл = Настройки.СертификатSSL.СертификатФайл;
			СертификатАдресВХранилище = ПоместитьВоВременноеХранилище(Настройки.СертификатSSL.ДанныеФайла, УникальныйИдентификатор);
			Переключатель = Истина;
		ИначеЕсли Настройки.СертификатSSL.Свойство("СертификатТекст") Тогда
			СертификатТекст = Настройки.СертификатSSL.СертификатТекст;
			Переключатель = Ложь;
		КонецЕсли; 
	КонецЕсли;
	
	НастройкиПубликации = Неопределено;
	Настройки.Свойство("НастройкиПубликации", НастройкиПубликации);
	
	Если НастройкиПубликации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Telegram
	НастройкиПубликацииTelegram = НастройкиПубликации.Получить(Перечисления.ЧатБоты.Telegram);
	Если ТипЗнч(НастройкиПубликацииTelegram) = Тип("Структура") Тогда
		НастройкиПубликацииTelegram.Свойство("АдресРесурсаОсновнойПубликации", АдресРесурсаОсновнойПубликацииTelegram);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	Если НЕ ЗначениеЗаполнено(АдресСервераОсновнойПубликации) Тогда
		
		Настройки = Неопределено;
		
	Иначе
		
		Настройки = Новый Структура;
		Настройки.Вставить("АдресСервераОсновнойПубликации", АдресСервераОсновнойПубликации);
		Настройки.Вставить("СистемныйПроксиСервер", СистемныйПроксиСервер);
		Настройки.Вставить("ПроксиЛогин", ПроксиЛогин);
		Настройки.Вставить("ПроксиПароль", ПроксиПароль);
		
	    СтруктураДанныхФайла = Новый Структура;
		Если Переключатель Тогда
		    СтруктураДанныхФайла.Вставить("СертификатФайл", СертификатФайл);
			Если ЗначениеЗаполнено(СертификатАдресВХранилище) Тогда
				СтруктураДанныхФайла.Вставить("ДанныеФайла", ПолучитьИзВременногоХранилища(СертификатАдресВХранилище));
			Иначе
				СтруктураДанныхФайла.Вставить("ДанныеФайла", Неопределено);
			КонецЕсли;
		Иначе
		    СтруктураДанныхФайла.Вставить("СертификатТекст", СертификатТекст);
		КонецЕсли; 
		Настройки.Вставить("СертификатSSL", СтруктураДанныхФайла);
		
		НастройкиПубликации = Новый Соответствие;
		НастройкиПубликации.Вставить(Перечисления.ЧатБоты.Telegram, Новый Структура("АдресРесурсаОсновнойПубликации", АдресРесурсаОсновнойПубликацииTelegram));
		
		Настройки.Вставить("НастройкиПубликации", НастройкиПубликации);
		
	КонецЕсли;
	
	Константы.ОбщиеНастройкиЧатботов.Установить(Новый ХранилищеЗначения(Настройки));
	
КонецПроцедуры

&НаСервере
Функция ПолныйПутьПубликации(Чатбот, АдресПубликации)
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Шаблон = "[АдресСервера]/[АдресПубликации]/[ОбластьДанных]/hs/[КорневойURLСервиса]";
	Иначе
		Шаблон = "[АдресСервера]/[АдресПубликации]/hs/[КорневойURLСервиса]";
	КонецЕсли;
	
	ПараметрыСтроки = Новый Структура;
	Если ЗначениеЗаполнено(АдресСервераОсновнойПубликации) Тогда
		ПараметрыСтроки.Вставить("АдресСервера", АдресСервераОсновнойПубликации);
	КонецЕсли;
	Если ЗначениеЗаполнено(АдресПубликации) Тогда
		ПараметрыСтроки.Вставить("АдресПубликации", АдресПубликации);
	КонецЕсли;
	ПараметрыСтроки.Вставить("КорневойURLСервиса", ЧатботСервер.КорневойURLСервисаОсновнойПубликации(Чатбот));
	
	Возврат СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
	
КонецФункции

&НаКлиенте
Процедура СертификатФайлНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ДобавитьФайл", ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.МножественныйВыбор = Ложь;
	
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОбработчикЗавершения, ПараметрыЗагрузки, "*.crt");

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл(ПомещенныйФайл, Параметры) Экспорт
	
	Если ПомещенныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СертификатФайл = ПомещенныйФайл.Имя;
	СертификатАдресВХранилище = ПомещенныйФайл.Хранение;

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатПриИзменении(Элемент)
	
	Элементы.СертификатФайл.Видимость = Переключатель;
	Элементы.СертификатТекст.Видимость = НЕ Переключатель;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("УчетВРазличныхЕдиницахИзмерения");
	ИспользоватьАлкогольнуюПродукцию       = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции");
	ВыгружатьРеквизитыАлкогольнойПродукции = Ложь;
	
	ЗагрузитьНастройкиОтбораПоУмолчанию();
	
	Элементы.Вариант.СписокВыбора.Добавить("ПоОтбору",      НСтр("ru = 'По отбору'"));
	Элементы.Вариант.СписокВыбора.Добавить("ПоДокументу",   НСтр("ru = 'По товарам документа'"));
	
	ИмяТаблицыВыборки = "Запасы";
	
	Если ЗначениеЗаполнено(Параметры.ВариантЗаполнения) И (Параметры.ВариантЗаполнения = "ПоДокументу") Тогда
		
		Документ = Параметры.Документ;
		Если Параметры.Свойство("ИмяТаблицыВыборки")
			И ЗначениеЗаполнено(Параметры.ИмяТаблицыВыборки) Тогда
			ИмяТаблицыВыборки = Параметры.ИмяТаблицыВыборки;
		КонецЕсли;
		ВариантЗаполнения = "ПоДокументу";
		Если Параметры.Свойство("ВыгружатьЦену") Тогда
			ВыгружатьЦену = Параметры.ВыгружатьЦену;
		КонецЕсли;
		Если Параметры.Свойство("ВидЦены") Тогда
			Объект.ВидЦены = Параметры.ВидЦены;
		КонецЕсли;
		Параметры.Свойство("ПрефиксРаздела", ПрефиксРаздела);
		Параметры.Свойство("АдресТоваровВХранилище", АдресТоваровВХранилище);
		Параметры.Свойство("ЭтоСсылочныйОбъект", ЭтоСсылочныйОбъект);
		ЗаполнитьНаСервере();
		Элементы.ОтборТоваров.Видимость = Ложь;
		Элементы.Сообщение.Видимость = ЭтоСсылочныйОбъект;
		ЭтаФорма.Команды.ЗаполнитьТовары.Заголовок = НСтр("ru = 'Обновить'");
		ИспользоватьАлкогольнуюПродукцию = Ложь;
		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ВариантЗаполнения) И (Параметры.ВариантЗаполнения = "ПоСегменту") Тогда
		
		ВариантЗаполнения = Параметры.ВариантЗаполнения;
		Сегмент = Параметры.Сегмент;
		ЗаполнитьНаСервере();
		Элементы.ОтборТоваров.Видимость = Ложь;
		Элементы.Сообщение.Видимость = Ложь;
		ЭтаФорма.Команды.ЗаполнитьТовары.Заголовок = НСтр("ru = 'Обновить'");
		ИспользоватьАлкогольнуюПродукцию = Ложь;
		
	Иначе
		
		Элементы.ОтборТоваров.Видимость = Истина;
		Элементы.Сообщение.Видимость    = Ложь;
		ВариантЗаполнения = "ПоОтбору";
		Объект.ЦеныНаДату = ТекущаяДатаСеанса();
		
		ВыгружатьЦену  = Истина;
		
	КонецЕсли;
	
	Элементы.ВыгружатьРеквизитыАлкогольнойПродукции.Видимость = ИспользоватьАлкогольнуюПродукцию;
	
	Элементы.ТоварыЦена.Видимость = ВыгружатьЦену;
	Элементы.ТоварыХарактеристика.Видимость = ИспользоватьХарактеристикиНоменклатуры;
	Элементы.ТоварыУпаковка.Видимость       = ИспользоватьУпаковкиНоменклатуры;
	Элементы.ТоварыГруппаАлкоголь.Видимость       = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыМаркируемый.Видимость       = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыЕмкостьТары.Видимость       = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыКрепость.Видимость          = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыИННПроизводителя.Видимость  = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыКПППроизводителя.Видимость  = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыКодВидаАлкогольнойПродукции.Видимость = ВыгружатьРеквизитыАлкогольнойПродукции;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ВариантЗаполнения = Настройки["ВариантЗаполнения"];
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьВыполнитьЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтаФорма.Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("ОшибкиВыгрузки", Истина);
		Если Элементы.Товары.ВыделенныеСтроки.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Товары успешно выгружены.'"); 
		Иначе
			ТекстСообщения = НСтр("ru = 'Товары с незаданным штрихкодами не выгружены.'"); 
		КонецЕсли;
	Иначе
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВыполнить(Команда)
	
	ЭтаФорма.Доступность = Ложь;
	
	ОчиститьСообщения();
	
	Элементы.Товары.ОтборСтрок = Неопределено;
	Элементы.Товары.Обновить();
	
	ОповещенияПриЗавершение = Новый ОписаниеОповещения("ВыгрузитьВыполнитьЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьВыгрузкуДанныеВТСД(ОповещенияПриЗавершение, УникальныйИдентификатор, МассивБазыТоваров(), НЕ ВариантЗаполнения = "ПоДокументу");
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если ВариантЗаполнения = "ПоДокументу"
		И ЭтоСсылочныйОбъект
		И НЕ ЗначениеЗаполнено(Документ) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Документ""'"), , "Документ", , Отказ);
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
	
	Элементы.Товары.ОтборСтрок = Неопределено;
	Элементы.Товары.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанныеВТСДЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтаФорма.Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'Операция выполнена.'");
	Иначе
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанныеВТСД(Команда)
	
	ОчиститьСообщения();
	
	Элементы.Товары.ОтборСтрок = Неопределено;
	Элементы.Товары.Обновить();
	
	ЭтаФорма.Доступность = Ложь;
	ОповещенияПриЗавершение = Новый ОписаниеОповещения("ОчиститьДанныеВТСДЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьОчисткуДанныеВТСД(ОповещенияПриЗавершение, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПересчитатьЦеныСервер()
	
	Если Объект.Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("Период", Объект.ЦеныНаДату);
	Запрос.УстановитьПараметр("ВидЦены", Объект.ВидЦены);
	
	РежимПолученияЦен = "ПоВидуЦен";
	
	Запрос.Текст = ТекстЗапросаПересчетаЦен(Ложь);
	Выборка = Запрос.Выполнить().Выбрать();
	ОбработаноСтрок = 0;
	Пока Выборка.Следующий() Цикл
		ОбработаноСтрок = ОбработаноСтрок + 1;
		СтрокаТовары = Объект.Товары[Выборка.НомерСтроки - 1];
		СтрокаТовары.Цена = Выборка.Цена;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает текст запроса пересчета цен.
//
// Параметры:
//  Режим - Строка - режим пересчета цен строкой.
//  ПриводитьКМинимальнойЦене - Булево - признак приведения к минимальной цене.
//
// Возвращаемое значение:
// Строка - текст запроса для пересчета цен.
//
&НаСервере
Функция ТекстЗапросаПересчетаЦен(ПриводитьКМинимальнойЦене) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ВЫРАЗИТЬ(Товары.Упаковка КАК Справочник.ЕдиницыИзмерения) КАК Упаковка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЕСТЬNULL(Товары.Упаковка.Коэффициент, 0) = ЕСТЬNULL(ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент, 0)
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|			КОГДА ЕСТЬNULL(ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент, 0) = 0
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ЕСТЬNULL(Товары.Упаковка.Коэффициент, 0)
	|			ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ЕСТЬNULL(Товары.Упаковка.Коэффициент, 0) / ЕСТЬNULL(ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент, 0)
	|		КОНЕЦ КАК ЧИСЛО(17, 2)) КАК Цена
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО (ЦеныНоменклатуры.ВидЦен = &ВидЦены)
	|			И (ЦеныНоменклатуры.Номенклатура = Товары.Номенклатура)
	|			И (ЦеныНоменклатуры.Характеристика = Товары.Характеристика)
	|			И (ЦеныНоменклатуры.Период В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(Цены.Период)
	|				ИЗ
	|					РегистрСведений.ЦеныНоменклатуры КАК Цены
	|				ГДЕ
	|					Цены.ВидЦен = &ВидЦены
	|					И Цены.Номенклатура = Товары.Номенклатура
	|					И Цены.Характеристика = Товары.Характеристика
	|					И Цены.Период <= &Период))";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоОтборуНаСервере()
	
	Объект.Товары.Очистить();
	
	// Поля необходимые для вывода в таблицу товаров на форме.
	СтруктураНастроек = Обработки.ВыгрузкаТоваровВТСД.СтруктураНастроек();
	СтруктураНастроек.ОбязательныеПоля.Добавить("Цена");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Штрихкод");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Количество");
	СтруктураНастроек.ОбязательныеПоля.Добавить("Номенклатура");
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		СтруктураНастроек.ОбязательныеПоля.Добавить("Характеристика");
	КонецЕсли;
	Если ИспользоватьУпаковкиНоменклатуры Тогда
		СтруктураНастроек.ОбязательныеПоля.Добавить("Упаковка");
	КонецЕсли;
	СтруктураНастроек.ОбязательныеПоля.Добавить("Весовой");
	СтруктураНастроек.ОбязательныеПоля.Добавить("КоличествоОстаток");
	
	Если ИспользоватьАлкогольнуюПродукцию Тогда
		СтруктураНастроек.ОбязательныеПоля.Добавить("Алкоголь");
		СтруктураНастроек.ОбязательныеПоля.Добавить("Маркируемый");
		СтруктураНастроек.ОбязательныеПоля.Добавить("КодВидаАлкогольнойПродукции");
		СтруктураНастроек.ОбязательныеПоля.Добавить("ЕмкостьТары");
		СтруктураНастроек.ОбязательныеПоля.Добавить("Крепость");
		СтруктураНастроек.ОбязательныеПоля.Добавить("ИННПроизводителя");
		СтруктураНастроек.ОбязательныеПоля.Добавить("КПППроизводителя");
	КонецЕсли;
	
	// Шаблоны этикеток и ценников.
	СтруктураНастроек.КомпоновщикНастроек = КомпоновщикНастроек;
	
	СтруктураНастроек.ИмяМакетаСхемыКомпоновкиДанных = "ПоляШаблонаБДТовары";
	
	Объект.Товары.Очистить();
	
	// Загрузка сформированного списка товаров.
	Таблица = Обработки.ВыгрузкаТоваровВТСД.ПодготовитьСтруктуруДанных(СтруктураНастроек);
	
	Для Каждого СтрокаТЧ Из Таблица Цикл
	
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура = СтрокаТЧ.Номенклатура;
		
		Если ИспользоватьХарактеристикиНоменклатуры Тогда
			НоваяСтрока.Характеристика = СтрокаТЧ.Характеристика;
		КонецЕсли;
		Если ИспользоватьУпаковкиНоменклатуры Тогда
			НоваяСтрока.Упаковка             = СтрокаТЧ.Упаковка;
		КонецЕсли;
		НоваяСтрока.Штрихкод        = СтрокаТЧ.Штрихкод;
		НоваяСтрока.ОшибкиВыгрузки  = ПустаяСтрока(СтрокаТЧ.Штрихкод);
		НоваяСтрока.Количество      = СтрокаТЧ.КоличествоОстаток;
		НоваяСтрока.Цена            = 0;
		
		Если ИспользоватьАлкогольнуюПродукцию Тогда
			НоваяСтрока.КодВидаАлкогольнойПродукции = СтрокаТЧ.КодВидаАлкогольнойПродукции;
			НоваяСтрока.Алкоголь         = СтрокаТЧ.Алкоголь;
			НоваяСтрока.Маркируемый      = СтрокаТЧ.Маркируемый;
			НоваяСтрока.ЕмкостьТары      = СтрокаТЧ.ЕмкостьТары;
			НоваяСтрока.Крепость         = СтрокаТЧ.Крепость;
			НоваяСтрока.ИННПроизводителя = СтрокаТЧ.ИННПроизводителя;
			НоваяСтрока.КПППроизводителя = СтрокаТЧ.КПППроизводителя;
		КонецЕсли;
		
	КонецЦикла;
	
	ПересчитатьЦеныСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоТоварамДокументаНаСервере()
	
	Объект.Товары.Очистить();
	
	Если ЭтоСсылочныйОбъект Тогда
		ДокументИмяТипа = Документ.Метаданные().Имя;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресТоваровВХранилище) Тогда
		
		Запрос = Новый Запрос;
		ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
		
		Если ТаблицаТоваров.Колонки.Найти("Характеристика") = Неопределено Тогда
			СтрокаХарактеристика = "";
			СтрокаСоединениеХарактеристика = "";
		Иначе
			СтрокаХарактеристика = "ТаблицаТоваров.Характеристика КАК Характеристика";
			СтрокаСоединениеХарактеристика = "И ТаблицаТоваров.Характеристика = Штрихкоды.Характеристика";
		КонецЕсли;
		
		Если ТаблицаТоваров.Колонки.Найти("Упаковка") = Неопределено Тогда
			СтрокаУпаковка = "";
			СтрокаСоединениеУпаковка = "";
		Иначе
			СтрокаУпаковка = "ТаблицаТоваров.Упаковка КАК Упаковка";
			СтрокаСоединениеУпаковка = "И ТаблицаТоваров.Упаковка = Штрихкоды.Упаковка";
		КонецЕсли;
		
		Если ВыгружатьЦену Тогда
			СтрокаЦена = "ТаблицаТоваров.Цена КАК Цена";
		Иначе
			СтрокаЦена = "0 КАК Цена";
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	" + СтрокаХарактеристика + ",
		|	" + СтрокаУпаковка + ",
		|	" + СтрокаЦена + "
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ	
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	Штрихкоды.Характеристика КАК Характеристика,
		|	Штрихкоды.Упаковка КАК Упаковка,
		|	1 КАК КоличествоУпаковок,
		|	" + СтрокаЦена + ",
		|	Штрихкоды.Штрихкод
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО ТаблицаТоваров.Номенклатура = Штрихкоды.Владелец
		|			" + СтрокаСоединениеХарактеристика + "
		|			" + СтрокаСоединениеУпаковка + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТоваров.НомерСтроки,
		|	Штрихкоды.Штрихкод";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
		
	ИначеЕсли ДокументИмяТипа = "УстановкаЦенНоменклатуры" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Упаковка,
		|	ТаблицаТоваров.Характеристика,
		|	1 КАК КоличествоУпаковок,
		|	ТаблицаТоваров.Цена КАК Цена,
		|	Штрихкоды.Штрихкод
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.Товары КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО ТаблицаТоваров.Номенклатура = Штрихкоды.Владелец
		|			И ТаблицаТоваров.Характеристика = Штрихкоды.Характеристика
		|			И ТаблицаТоваров.Упаковка = Штрихкоды.Упаковка
		|ГДЕ
		|	ТаблицаТоваров.Ссылка = &Документ
		|	И ТаблицаТоваров.ВидЦены = &ВидЦены
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТоваров.НомерСтроки,
		|	Штрихкоды.Штрихкод";
		Запрос.УстановитьПараметр("ВидЦены", Объект.ВидЦены); 
		
	ИначеЕсли ДокументИмяТипа = "ЗапросАкцизныхМарокЕГАИС" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Упаковка КАК ЕдиницаИзмерения,
		|	1 КАК Количество,
		|	Штрихкоды.Штрихкод КАК Штрихкод
		|ИЗ
		|	Документ." + ДокументИмяТипа + "." + ИмяТаблицыВыборки + " КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
		|		ПО ТаблицаТоваров.Номенклатура = Штрихкоды.Номенклатура
		|			И ТаблицаТоваров.Характеристика = Штрихкоды.Характеристика
		|			И (ВЫБОР
		|				КОГДА ТаблицаТоваров.Упаковка = НЕОПРЕДЕЛЕНО ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаТоваров.Упаковка) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|					ТОГДА Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|				ИНАЧЕ ТаблицаТоваров.Упаковка = Штрихкоды.ЕдиницаИзмерения
		|			КОНЕЦ)
		|ГДЕ
		|	ТаблицаТоваров.Ссылка = &Документ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТоваров.НомерСтроки,
		|	Штрихкоды.Штрихкод";
		
	ИначеЕсли ДокументИмяТипа = "ВыводИзОборотаИСМП"
		ИЛИ ДокументИмяТипа = "ЗаказНаЭмиссиюКодовМаркировкиСУЗ"
		ИЛИ ДокументИмяТипа = "МаркировкаТоваровИСМП" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Упаковка КАК ЕдиницаИзмерения,
		|	ТаблицаТоваров.КоличествоУпаковок КАК Количество,
		|	%Цена%
		|	Штрихкоды.Штрихкод КАК Штрихкод
		|ИЗ
		|	Документ." + ДокументИмяТипа + "." + ИмяТаблицыВыборки + " КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
		|		ПО ТаблицаТоваров.Номенклатура = Штрихкоды.Номенклатура
		|			И ТаблицаТоваров.Характеристика = Штрихкоды.Характеристика
		|			И (ВЫБОР
		|				КОГДА ТаблицаТоваров.Упаковка = НЕОПРЕДЕЛЕНО ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаТоваров.Упаковка) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|					ТОГДА Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|				ИНАЧЕ ТаблицаТоваров.Упаковка = Штрихкоды.ЕдиницаИзмерения
		|			КОНЕЦ)
		|ГДЕ
		|	ТаблицаТоваров.Ссылка = &Документ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТоваров.НомерСтроки,
		|	Штрихкоды.Штрихкод";
			
		Если ВыгружатьЦену Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Цена%", "ТаблицаТоваров.Цена,");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Цена%", "");
		КонецЕсли;
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	%Цена%
		|	Штрихкоды.Штрихкод КАК Штрихкод
		|ИЗ
		|	Документ." + ДокументИмяТипа + "." + ИмяТаблицыВыборки + " КАК ТаблицаТоваров
//		|	Документ.ЗаказПокупателя.Запасы КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
		|		ПО ТаблицаТоваров.Номенклатура = Штрихкоды.Номенклатура
		|			И ТаблицаТоваров.Характеристика = Штрихкоды.Характеристика
		|			И (ВЫБОР
		|				КОГДА ТаблицаТоваров.ЕдиницаИзмерения = НЕОПРЕДЕЛЕНО ИЛИ ТИПЗНАЧЕНИЯ(ТаблицаТоваров.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|					ТОГДА Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|				ИНАЧЕ ТаблицаТоваров.ЕдиницаИзмерения = Штрихкоды.ЕдиницаИзмерения
		|			КОНЕЦ)
		|ГДЕ
		|	ТаблицаТоваров.Ссылка = &Документ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТоваров.НомерСтроки,
		|	Штрихкоды.Штрихкод";
			
		Если ВыгружатьЦену Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Цена%", "ТаблицаТоваров.Цена,");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Цена%", "");
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Документ", Документ); 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Штрихкод) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура         = Выборка.Номенклатура;
		НоваяСтрока.Характеристика       = Выборка.Характеристика;
		НоваяСтрока.Упаковка             = Выборка.ЕдиницаИзмерения;
		НоваяСтрока.Штрихкод             = Выборка.Штрихкод;
		НоваяСтрока.ОшибкиВыгрузки       = ПустаяСтрока(Выборка.Штрихкод);
		НоваяСтрока.Количество           = Выборка.Количество;
		Если ВыгружатьЦену Тогда
			НоваяСтрока.Цена             = Выборка.Цена;
		КонецЕсли
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСегментуНаСервере()
	
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка,
	|	1 КАК КоличествоУпаковок, 
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.НоменклатураСегмента КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТаблицаТоваров.Номенклатура = Штрихкоды.Владелец
	|			И ТаблицаТоваров.Характеристика = Штрихкоды.Характеристика
	|ГДЕ
	|	ТаблицаТоваров.Сегмент = &Сегмент
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТоваров.Номенклатура.Наименование,
	|	Штрихкоды.Штрихкод";
			
	Запрос.УстановитьПараметр("Сегмент", Сегмент); 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Штрихкод) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина); 
	
	Если ВариантЗаполнения = "ПоОтбору" Тогда
		ЗаполнитьПоОтборуНаСервере();
	ИначеЕсли ВариантЗаполнения = "ПоДокументу" Тогда
		ЗаполнитьПоТоварамДокументаНаСервере();
	ИначеЕсли ВариантЗаполнения = "ПоСегменту" Тогда
		ЗаполнитьПоСегментуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МассивБазыТоваров()
	
	МассивВыгрузки = Новый Массив();
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		ВыгружаемыйТовар = Новый Структура;
		ВыгружаемыйТовар.Вставить("Штрихкод",					СтрокаТЧ.Штрихкод);
		ВыгружаемыйТовар.Вставить("Номенклатура",				Строка(СтрокаТЧ.Номенклатура));
		ВыгружаемыйТовар.Вставить("ЕдиницаИзмерения",			Строка(СтрокаТЧ.Упаковка));
		ВыгружаемыйТовар.Вставить("ХарактеристикаНоменклатуры", Строка(СтрокаТЧ.Характеристика));
		ВыгружаемыйТовар.Вставить("Количество",					0);
		ВыгружаемыйТовар.Вставить("Цена",						СтрокаТЧ.Цена);
		
		Если ВыгружатьРеквизитыАлкогольнойПродукции Тогда
			ВыгружаемыйТовар.Вставить("Алкоголь"                   , СтрокаТЧ.Алкоголь);
			ВыгружаемыйТовар.Вставить("Маркируемый"                , СтрокаТЧ.Маркируемый);
			ВыгружаемыйТовар.Вставить("КодВидаАлкогольнойПродукции", СтрокаТЧ.КодВидаАлкогольнойПродукции);
			ВыгружаемыйТовар.Вставить("КодАлкогольнойПродукции"    , "");
			ВыгружаемыйТовар.Вставить("ЕмкостьТары"                , СтрокаТЧ.ЕмкостьТары);
			ВыгружаемыйТовар.Вставить("Крепость"                   , СтрокаТЧ.Крепость);
			ВыгружаемыйТовар.Вставить("ИННПроизводителя"           , СтрокаТЧ.ИННПроизводителя);
			ВыгружаемыйТовар.Вставить("КПППроизводителя"           , СтрокаТЧ.КПППроизводителя);
		КонецЕсли;
		
		МассивВыгрузки.Добавить(ВыгружаемыйТовар);
		
	КонецЦикла;
	
	Возврат МассивВыгрузки;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию()
	
	СхемаКомпоновкиДанных = Обработки.ВыгрузкаТоваровВТСД.ПолучитьМакет("ПоляШаблонаБДТовары");
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор)));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Объект.Товары.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Товары.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.Товары.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Результат = Объект.Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если НЕ (Результат = Неопределено) Тогда
		ПоказатьЗначение(,Результат.Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаПриИзменении(Элемент)
	
	Объект.Товары.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьРеквизитыАлкогольнойПродукцииПриИзменении(Элемент)
	
	Элементы.ТоварыГруппаАлкоголь.Видимость       = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыМаркируемый.Видимость       = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыЕмкостьТары.Видимость       = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыКрепость.Видимость          = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыИННПроизводителя.Видимость  = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыКПППроизводителя.Видимость  = ВыгружатьРеквизитыАлкогольнойПродукции;
	Элементы.ТоварыКодВидаАлкогольнойПродукции.Видимость = ВыгружатьРеквизитыАлкогольнойПродукции;

КонецПроцедуры

#КонецОбласти
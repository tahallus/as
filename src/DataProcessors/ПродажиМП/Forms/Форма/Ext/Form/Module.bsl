#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура СформироватьНаСервере(ТабДокумент, ДляОтправки = Ложь, НаПечать = Ложь)
	
	ЭтоСмартфон = ОбщегоНазначенияМПВызовСервера.ЭтоСмартфон();
	ИмяМакета = "";
	Если ДляОтправки Тогда
		ИмяМакета = "МакетДляОтправки";
	ИначеЕсли ЭтоСмартфон Тогда
		Если ОбщегоНазначенияМПСервер.ПолучитьОриентациюЭкрана() = ОриентацияСтраницы.Ландшафт Тогда
			ИмяМакета = "Макет";
		Иначе
			ИмяМакета = "МакетСмартфон";
		КонецЕсли;
	Иначе
		ИмяМакета = "Макет";
	КонецЕсли;
	Макет = Обработки.ПродажиМП.ПолучитьМакет(ИмяМакета);
	ТабДокумент.Очистить();
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Дата"));
	КД = Новый КвалификаторыЧисла(12,2);
	ОписаниеТипов = Новый ОписаниеТипов(Массив, , ,КД);
	
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Дата", ОписаниеТипов);
	ТаблицаДвижений.Колонки.Добавить("Товар");
	ТаблицаДвижений.Колонки.Добавить("Количество");
	ТаблицаДвижений.Колонки.Добавить("Сумма");
	ТаблицаДвижений.Колонки.Добавить("СуммаВЗакупочных");
	ТаблицаДвижений.Колонки.Добавить("ВаловаяПрибыль");
	ТаблицаДвижений.Колонки.Добавить("Рентабельность");
	ТаблицаДвижений.Колонки.Добавить("Покупатель");
	
	ВыборкаДвижений = СформироватьНаСервереФрагмент();
	
	Пока ВыборкаДвижений.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ЭтаФорма.ЭлементОтбора) Тогда
			Если ЭлементОтбора.ЭтоГруппа И ВыборкаДвижений.Товар.Родитель <> ЭлементОтбора Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЭлементОтбора.ЭтоГруппа И ВыборкаДвижений.Товар <> ЭлементОтбора Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Документ = ВыборкаДвижений.Регистратор;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Дата = НачалоДня(ВыборкаДвижений.Период);
		Если ВыборкаДвижений.Товар.ПолучитьОбъект() = Неопределено Тогда
			НоваяСтрока.Товар = НСтр("ru='<удален>';en='<deleted>'");
		Иначе
			НоваяСтрока.Товар = ВыборкаДвижений.Товар.Наименование;
		КонецЕсли;
		НоваяСтрока.Количество = ВыборкаДвижений.Количество;
		НоваяСтрока.Сумма = ВыборкаДвижений.Сумма;
		Если ЗначениеЗаполнено(ВыборкаДвижений.Товар)
			И ВыборкаДвижений.Товар.Вид = Перечисления.ВидыТоваровМП.Товар Тогда
			НоваяСтрока.СуммаВЗакупочных = ВыборкаДвижений.Количество * РегистрыСведений.ЦеныПоставщиковМП.ПолучитьЦенуТовара(ВыборкаДвижений.Период, ВыборкаДвижений.Товар);
		Иначе
			НоваяСтрока.СуммаВЗакупочных = 0;
		КонецЕсли;
		НоваяСтрока.ВаловаяПрибыль = НоваяСтрока.Сумма - НоваяСтрока.СуммаВЗакупочных;
		Рентабельность = ?(НоваяСтрока.Сумма = 0, 0, НоваяСтрока.ВаловаяПрибыль / НоваяСтрока.Сумма) * 100;
		НоваяСтрока.Рентабельность = "" + Строка(Формат(Рентабельность, "ЧДЦ=")) +"%";
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККММП")
			ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозвратМП") Тогда
			НоваяСтрока.Покупатель = НСтр("ru='Розничная продажа';en='Retail Sale'");
		Иначе
			НоваяСтрока.Покупатель = Документ.Покупатель;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтаФорма.ГруппироватьПоПокупателю Тогда
		ТаблицаДвижений.Свернуть("Покупатель, Дата, Товар, Рентабельность", "Количество, Сумма, СуммаВЗакупочных, ВаловаяПрибыль");
		ТаблицаДвижений.Сортировать("Покупатель, Дата, Товар");
	Иначе
		ТаблицаДвижений.Свернуть("Дата, Товар, Рентабельность", "Количество, Сумма, СуммаВЗакупочных, ВаловаяПрибыль");
		ТаблицаДвижений.Сортировать("Дата, Товар");
	КонецЕсли;
	
	Если НЕ ДляОтправки Тогда
		Если ТаблицаДвижений.Количество() = 0 Тогда
			Элементы.Содержимое.Видимость = Ложь;
			Элементы.ДекорацияПустойОтчет.Видимость = Истина;
			Возврат;
		Иначе
			Элементы.Содержимое.Видимость = Истина;
			Элементы.ДекорацияПустойОтчет.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ГруппироватьПоДате Тогда
		Колонки = "КолонкиБезДаты";
	Иначе
		Колонки = "ВсеКолонки";
	КонецЕсли;
	
	Если ИмяМакета = "МакетСмартфон" Тогда
		Колонки = "";
		ВидЗаголовка = ?(ГруппироватьПоДате, "Группировка", "");
	Иначе
		ВидЗаголовка = "";
	КонецЕсли;
	
	Если НаПечать Тогда
		Если ИмяМакета = "МакетСмартфон" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("НазваниеОтчета");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("НазваниеОтчета" + Колонки + "|" + Колонки);
		КонецЕсли;
		ОбластьМакета.Параметры.Период = ПериодОтчета;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок" + ВидЗаголовка + "|" + Колонки);
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	Если ГруппироватьПоПокупателю ИЛИ ГруппироватьПоДате Тогда
		ТабДокумент.НачатьАвтогруппировкуСтрок();
		ДатаГруппы = Неопределено;
		ПокупательГруппы = Неопределено;

	КонецЕсли;
	
	СераяСтрока = Ложь;
	Для каждого Движение Из ТаблицаДвижений Цикл
		
		Если ГруппироватьПоПокупателю
			И Движение.Покупатель <> ПокупательГруппы Тогда
			ПокупательГруппы = Движение.Покупатель;
			
			ИтогГруппыСумма = 0;
			ИтогГруппыСуммаВЗакупочных = 0;
			ИтогГруппыВаловаяПрибыль = 0;
			
			Строки = ТаблицаДвижений.НайтиСтроки(Новый Структура("Покупатель", ПокупательГруппы));
			Для каждого Строка Из Строки Цикл
				ИтогГруппыСумма            = ИтогГруппыСумма + Строка.Сумма;
				ИтогГруппыСуммаВЗакупочных = ИтогГруппыСуммаВЗакупочных + Строка.СуммаВЗакупочных;
				ИтогГруппыВаловаяПрибыль   = ИтогГруппыВаловаяПрибыль + Строка.ВаловаяПрибыль;
			КонецЦикла;
			ИтогГруппыРентабельность = ?(ИтогГруппыСумма = 0, 0, ИтогГруппыВаловаяПрибыль / ИтогГруппыСумма) * 100;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокГруппыПокупатель|" + Колонки);
			Если ИмяМакета = "МакетСмартфон" Тогда
				ОбластьМакета.Параметры.Покупатель       = ПокупательГруппы;
				ОбластьМакета.Параметры.Сумма            = ИтогГруппыСумма;
			Иначе
				ОбластьМакета.Параметры.Покупатель       = ПокупательГруппы;
				ОбластьМакета.Параметры.Сумма            = ИтогГруппыСумма;
				ОбластьМакета.Параметры.СуммаВЗакупочных = ИтогГруппыСуммаВЗакупочных;
				ОбластьМакета.Параметры.ВаловаяПрибыль   = ИтогГруппыВаловаяПрибыль;
				ОбластьМакета.Параметры.Рентабельность   = "" + Строка(Формат(ИтогГруппыРентабельность, "ЧДЦ=")) +"%";;
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета, 1, "", Ложь);
			
			СераяСтрока = Истина;
		КонецЕсли;

		
		//Если ГруппироватьПоДате Тогда
			Если ГруппироватьПоДате
				И Движение.Дата <> ДатаГруппы Тогда
				ДатаГруппы = Движение.Дата;
				
				ИтогГруппыСумма = 0;
				ИтогГруппыСуммаВЗакупочных = 0;
				ИтогГруппыВаловаяПрибыль = 0;
				
				Если ГруппироватьПоПокупателю Тогда
					Строки = ТаблицаДвижений.НайтиСтроки(Новый Структура("Дата, Покупатель", ДатаГруппы, ПокупательГруппы));
				Иначе
					Строки = ТаблицаДвижений.НайтиСтроки(Новый Структура("Дата", ДатаГруппы));
				КонецЕсли;
				Для каждого Строка Из Строки Цикл
					ИтогГруппыСумма            = ИтогГруппыСумма + Строка.Сумма;
					ИтогГруппыСуммаВЗакупочных = ИтогГруппыСуммаВЗакупочных + Строка.СуммаВЗакупочных;
					ИтогГруппыВаловаяПрибыль   = ИтогГруппыВаловаяПрибыль + Строка.ВаловаяПрибыль;
				КонецЦикла;
				ИтогГруппыРентабельность = ?(ИтогГруппыСумма = 0, 0, ИтогГруппыВаловаяПрибыль / ИтогГруппыСумма) * 100;
				
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокГруппы|" + Колонки);
				Если ИмяМакета = "МакетСмартфон" Тогда
					ОбластьМакета.Параметры.Дата             = ДатаГруппы;
					ОбластьМакета.Параметры.Сумма            = ИтогГруппыСумма;
				Иначе
					ОбластьМакета.Параметры.Дата             = ДатаГруппы;
					ОбластьМакета.Параметры.Сумма            = ИтогГруппыСумма;
					ОбластьМакета.Параметры.СуммаВЗакупочных = ИтогГруппыСуммаВЗакупочных;
					ОбластьМакета.Параметры.ВаловаяПрибыль   = ИтогГруппыВаловаяПрибыль;
					ОбластьМакета.Параметры.Рентабельность   = "" + Строка(Формат(ИтогГруппыРентабельность, "ЧДЦ=")) +"%";;
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакета, 2, "", Ложь);
				
				СераяСтрока = Истина;
			КонецЕсли;
		//КонецЕсли;
		
		СледующаяОбласть = ?(СераяСтрока, "Серая", "");
		СераяСтрока = НЕ СераяСтрока;
		
		Если ИмяМакета = "МакетСмартфон" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Строка" + СледующаяОбласть + "Заголовок" + ВидЗаголовка + Колонки);
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Движение);
			ТабДокумент.Вывести(ОбластьМакета, 3, "", Ложь);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка" + СледующаяОбласть + ВидЗаголовка + "|" + Колонки);
		
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Движение);
		Если ИмяМакета = "МакетСмартфон" Тогда
			ТабДокумент.Присоединить(ОбластьМакета, 3, "", Ложь);
		Иначе
			ТабДокумент.Вывести(ОбластьМакета, 3, "", Ложь);
		КонецЕсли;
	КонецЦикла;
	
	Если ГруппироватьПоДате ИЛИ ГруппироватьПоПокупателю Тогда
		ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги" + Колонки + "|" + Колонки);
	
	ИтогСумма = ТаблицаДвижений.Итог("Сумма");
	ИтогСуммаВЗакупочных = ТаблицаДвижений.Итог("СуммаВЗакупочных");
	ИтогВаловаяПрибыль = ТаблицаДвижений.Итог("ВаловаяПрибыль");
	
	ОбластьМакета.Параметры.Сумма = ИтогСумма;
	ОбластьМакета.Параметры.СуммаВЗакупочных = ИтогСуммаВЗакупочных;
	ОбластьМакета.Параметры.ВаловаяПрибыль = ИтогВаловаяПрибыль;
	
	Рентабельность = ?(ИтогСумма = 0, 0, ИтогВаловаяПрибыль / ИтогСумма) * 100;
	ОбластьМакета.Параметры.Рентабельность = "" + Строка(Формат(Рентабельность, "ЧДЦ=")) +"%";
	
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервереФрагмент()
	
	Перем ВыборкаДвижений, КонецОтбора, НачалоОтбора;
	
	НачалоОтбора = ?(ЗначениеЗаполнено(НачалоПериода), НачалоДня(НачалоПериода), НачалоПериода);
	КонецОтбора = ?(ЗначениеЗаполнено(КонецПериода), КонецДня(КонецПериода), КонецПериода);
	
	ВыборкаДвижений = РегистрыНакопления.ПродажиМП.Выбрать(НачалоОтбора, КонецОтбора);
	Возврат ВыборкаДвижений;

КонецФункции

&НаСервере
Процедура УстановитьОтбор(ВыбранноеЗначение)
	
	ЭтаФорма.ЭлементОтбора = ВыбранноеЗначение;
	СформироватьНаСервере(Содержимое);
	Элементы.ГруппаФильтр.Видимость = Истина;
	Элементы.ДекорацияФильтр.Заголовок = Строка(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтбор()
	
	ЭтаФорма.ЭлементОтбора = Неопределено;
	СформироватьНаСервере(Содержимое);
	Элементы.ГруппаФильтр.Видимость = Ложь;
	Элементы.ДекорацияФильтр.Заголовок = "";
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГруппировкуПоДате(Группировать)
	
	ЭтаФорма.ГруппироватьПоДате = Группировать;
	
	Если ГруппироватьПоДате Тогда
		Элементы.ГруппироватьПоДате.ЦветФона = Новый Цвет(204, 192, 133);
	Иначе
		Элементы.ГруппироватьПоДате.ЦветФона = Новый Цвет(245, 242, 221);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГруппировкуПоПокупателю(Группировать)
	
	ЭтаФорма.ГруппироватьПоПокупателю = Группировать;
	
	Если ГруппироватьПоПокупателю Тогда
		Элементы.ГруппироватьПоДате.ЦветФона = Новый Цвет(204, 192, 133);
	Иначе
		Элементы.ГруппироватьПоДате.ЦветФона = Новый Цвет(245, 242, 221);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики

	УстановитьГруппировкуПоДате(Константы.ПродажиГруппироватьПоДатеМП.Получить());
	УстановитьГруппировкуПоПокупателю(Константы.ПродажиГруппироватьПоПокупателюМП.Получить());
	Если Параметры.Свойство("ЭлементОтбора") Тогда
		УстановитьОтбор(Параметры.ЭлементОтбора);
	КонецЕсли;
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияМПКлиент.СформироватьТекстПериодОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ТоварыМП") Тогда
		УстановитьОтбор(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	Константы.ПродажиГруппироватьПоДатеМП.Установить(ЭтаФорма.ГруппироватьПоДате);
	Константы.ПродажиГруппироватьПоПокупателюМП.Установить(ЭтаФорма.ГруппироватьПоПокупателю);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНажатие(Элемент, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + "." + Элемент.Имя + ".Нажатие");
	// Конец Сбор статистики
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Период", Период);
	СтруктураПараметры.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПараметры.Вставить("КонецПериода", КонецПериода);
	
	#Если МобильноеПриложениеКлиент Тогда
		
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		СтруктураДанных = ОткрытьФормуМодально("ОбщаяФорма.ВыборПериодаМП", СтруктураПараметры);
		// АПК:565-вкл
		ПериодОтчетаНажатиеФрагмент(СтруктураДанных);
		
	#Иначе
		
		ОткрытьФорму("ОбщаяФорма.ВыборПериодаМП", СтруктураПараметры,,,,, Новый ОписаниеОповещения("ПериодОтчетаНажатиеЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураДанных = Результат;
	
	ПериодОтчетаНажатиеФрагмент(СтруктураДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНажатиеФрагмент(Знач СтруктураДанных)
	
	Если СтруктураДанных <> Неопределено 
		И ТипЗнч(СтруктураДанных) = Тип("Структура") Тогда
		НачалоПериода = СтруктураДанных.НачалоПериода;
		КонецПериода = СтруктураДанных.КонецПериода;
		Период = СтруктураДанных.Период;
		ОбщегоНазначенияМПКлиент.СформироватьТекстПериодОтчета(ЭтаФорма);
		СформироватьНаСервере(Содержимое);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура ОчиститьПериод(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	НачалоПериода = Неопределено;
	КонецПериода = Неопределено;
	Период = Неопределено;
	ОбщегоНазначенияМПКлиент.СформироватьТекстПериодОтчета(ЭтаФорма);
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура Меню(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("ОтборПоЭлементу", НСтр("ru='Отбор по товару';en='Filter by nomenclature'"));
	СписокВыбора.Добавить("ОтборПоГруппе", НСтр("ru='Отбор по группе';en='Filter by group'"));
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		ВидОперации = ВыбратьИзМеню(СписокВыбора);
		// АПК:565-вкл
		ФильтрОткрытиеФормыВыбора(ВидОперации);
	#Иначе
		ПоказатьВыборИзМеню(Новый ОписаниеОповещения("МенюЗавершение", ЭтотОбъект), СписокВыбора);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура МенюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВидОперации = ВыбранныйЭлемент;
	
	ФильтрОткрытиеФормыВыбора(ВидОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрОткрытиеФормыВыбора(Знач ВидОперации)
	
	Если ВидОперации <> Неопределено Тогда
		Если ВидОперации.Значение = "ОтборПоЭлементу" Тогда
			ОткрытьФорму("Справочник.ТоварыМП.ФормаВыбора", Новый Структура("ПоказыватьУслуги, РежимВыбора", Ложь, Истина), ЭтаФорма);
		ИначеЕсли ВидОперации.Значение = "ОтборПоГруппе" Тогда
			ОткрытьФорму("Справочник.ТоварыМП.ФормаВыбораГруппы", , ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ОчиститьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьПоДате(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	УстановитьГруппировкуПоДате(НЕ ЭтаФорма.ГруппироватьПоДате);
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ТабДокументДляОтправки = Новый ТабличныйДокумент;
	СформироватьНаСервере(ТабДокументДляОтправки, Истина);
	ТемаПисьма = Заголовок + " " + ПериодОтчета;
	ТемаПисьма = СтрЗаменить(ТемаПисьма, "<", "");
	ТемаПисьма = СтрЗаменить(ТемаПисьма, ">", "");
	ОбщегоНазначенияМПКлиент.ОтправитьОтчетВCSV(ТемаПисьма, ТабДокументДляОтправки);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ТабДокументДляПечати = Новый ТабличныйДокумент;
	СформироватьНаСервере(ТабДокументДляПечати, Ложь, Истина);
	ТабДокументДляПечати.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	Если ОбщегоНазначенияМПВызовСервера.ЭтоСмартфон() Тогда
		ОтключитьОбработчикОжидания("СформироватьПриИзмененииПараметровЭкрана");
		ПодключитьОбработчикОжидания("СформироватьПриИзмененииПараметровЭкрана", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПриИзмененииПараметровЭкрана()
	
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьПоПокупателю(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	УстановитьГруппировкуПоПокупателю(НЕ ЭтаФорма.ГруппироватьПоПокупателю);
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/razdel-otchety/otchet-prodazhi/");
	// АПК:534-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВPDF(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	СтруктураВозврата = ЗаписатьВPDF(КаталогДокументов());
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект), СтруктураВозврата.ПолноеИмяФайла);

КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Возврат; // Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры

&НаСервере
Функция ЗаписатьВPDF(КаталогДокументов)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	СформироватьНаСервере(ПечатнаяФорма, Ложь, Истина);
	
	ИмяФайла = НСтр("ru='Отчет по продажам от ';en='Sales of '")
		+ ОбщегоНазначенияМПКлиентСервер.ПолучитьФорматированнуюСтрокуДатыДляФайла(ТекущаяДата()) + ".pdf";
	ПолноеИмяФайла = ОбщегоНазначенияМПКлиентСервер.ПолучитьПолноеИмяФайла(КаталогДокументов, ИмяФайла);     
	ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);             
	
	Возврат Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла, ПолноеИмяФайла);

КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

#КонецОбласти



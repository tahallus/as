#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Элементы.Организация.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	Элементы.ОткрытьФормуСопоставления.Видимость = Ложь;
	Элементы.ПодробныеРезультатыЗагрузки.Видимость = Ложь;
	Элементы.ЛогЗагрузкиССайта.Видимость = Ложь;
	ЗагружатьКартинки = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура.Ссылка) КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		СоздатьКаталогТоваров = Истина;	
	КонецЕсли;
	
	ИспользоватьСопоставлениеПередЗагрузкой = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ ЗначениеЗаполнено(ОсновнаяОрганизация) Тогда
		ОсновнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВидЦен) Тогда
		ЗагрузитьВидЦенССайта = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОсновнаяЕдиницаИзмерения) Тогда
		ОсновнаяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.шт;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(АдресСайта) Тогда
		АдресСайта = ПечатьДокументовУНФ.КонтактнаяИнформация(Пользователи.АвторизованныйПользователь(), Справочники.ВидыКонтактнойИнформации.СайтПользователя);	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипСайта) Тогда
		ТипСайта= ПредопределенноеЗначение("Перечисление.ПротоколыОбменаCMS.UMI");
	КонецЕсли;
	
	ОсновнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	Если ЗначениеЗаполнено(АдресСайта) Или ЗначениеЗаполнено(ИмяПользователя) Тогда
		АдресСайтаПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	Элементы.ВидЦен.ТолькоПросмотр = ЗагрузитьВидЦенССайта;
	Если ЗагрузитьВидЦенССайта Тогда
		ВидЦен = Неопределено;
	Иначе
		ВидЦен = ПредопределенноеЗначение("Справочник.ВидыЦен.Оптовая");
	КонецЕсли;
	
	Если СоздатьКаталогТоваров Тогда
		КаталогЗагруженныхТоваров = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		ИмяКаталогаИзСайта = СтрЗаменить(АдресСайта, "http://","");
		ИмяКаталогаИзСайта = СтрЗаменить(ИмяКаталогаИзСайта, "https://","");
		Элементы.КаталогЗагруженныхТоваров.ПодсказкаВвода = ИмяКаталогаИзСайта;
	Иначе
		Элементы.КаталогЗагруженныхТоваров.ПодсказкаВвода = "";
	КонецЕсли;
	Элементы.КаталогЗагруженныхТоваров.ТолькоПросмотр = СоздатьКаталогТоваров;
	
	Если ТипСайта= ПредопределенноеЗначение("Перечисление.ПротоколыОбменаCMS.Битрикс") Тогда
		Элементы.ТипСайтаUMI.Видимость = Ложь;
		Элементы.ТипСайтаБитрикс.Видимость = Истина;
		Элементы.ПроверьтеНастройкиCMS.Видимость = Истина;
		Элементы.ГруппаВидыЦен.Видимость = Ложь;
	ИначеЕсли ТипСайта= ПредопределенноеЗначение("Перечисление.ПротоколыОбменаCMS.UMI") Тогда
		Элементы.ТипСайтаUMI.Видимость = Истина;
		Элементы.ТипСайтаБитрикс.Видимость = Ложь;
		Элементы.ПроверьтеНастройкиCMS.Видимость = Ложь;
		Элементы.ГруппаВидыЦен.Видимость = Истина;
	Иначе
		Элементы.ПроверьтеНастройкиCMS.Видимость = Ложь;
		Элементы.ГруппаВидыЦен.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПрочитатьДанные(Команда)

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьЗагрузкуВФоне("ПредварительнаяЗагрузка");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидЦен) И НЕ ЗагрузитьВидЦенССайта Тогда
		ТекстОшибки = НСтр("ru = 'Не выбран вид цен товаров'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ЗапуститьЗагрузкуВФоне("ЗагрузитьДанные");	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЦеныССайтаПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогТоваровПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоединение(Команда)

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	АдресСайтаДляПодключения = АдресСайта;
	
	Если СтрНайти(АдресСайта, "http")=0 Тогда
		АдресСайтаДляПодключения = "http://"+АдресСайтаДляПодключения;
	КонецЕсли;
	
	Если ТипСайта=ПредопределенноеЗначение("Перечисление.ПротоколыОбменаCMS.Битрикс") Тогда
		АдресСайтаДляПодключения = АдресСайтаДляПодключения+"/bitrix/admin/1c_exchange.php";
	Иначе
		АдресСайтаДляПодключения = АдресСайтаДляПодключения+"/admin/exchange/autoimport/";
	КонецЕсли;
	
	ТекстСообщения = "";
	СтруктураПодключения = Новый Структура;
	СтруктураПодключения.Вставить("АдресСайта", АдресСайтаДляПодключения);
	СтруктураПодключения.Вставить("ИмяПользователя", ИмяПользователя);
	СтруктураПодключения.Вставить("Пароль", Пароль);
	
	ОбменССайтомСлужебныйВызовСервера.ВыполнитьТестовоеПодключениеКСайту(СтруктураПодключения, ТекстСообщения);
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

&НаКлиенте
Процедура ПодробныеРезультатыЗагрузкиНажатие(Элемент)
	
	#Если МобильныйКлиент Тогда
		ТабДок = МакетРезультатыЗагрузки(СтрокаЛогЗагрузкиССайтаПодробно);
		ТабДок.Показать();
	#Иначе
		Текст = Новый ТекстовыйДокумент;
		Текст.УстановитьТекст(СтрокаЛогЗагрузкиССайтаПодробно);
		Текст.Показать(НСтр("ru = 'Данные, полученные с сайта'"));
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Функция МакетРезультатыЗагрузки(СтрокаЛогЗагрузкиССайтаПодробно)

	ТабДок = Новый ТабличныйДокумент;
	Для Счетчик=1 По СтрЧислоСтрок(СтрокаЛогЗагрузкиССайтаПодробно) Цикл
		ТабДок.Область("R"+Счетчик+"C1").Текст = СтрПолучитьСтроку(СтрокаЛогЗагрузкиССайтаПодробно, Счетчик);
	КонецЦикла;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	Возврат ТабДок;

КонецФункции

&НаКлиенте
Процедура ПроверьтеНастройкиCMSНажатие(Элемент)
	
	ЭтотОбъект.ОткрытьСправкуФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСайтаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ИмяПользователя) Тогда
		ИмяПользователяИзСайта = СтрЗаменить(АдресСайта, "http://","");
		ИмяПользователяИзСайта = СтрЗаменить(ИмяПользователяИзСайта, "https://","");
		ЧастиСайта = СтрРазделить(ИмяПользователяИзСайта, ".", Ложь);
		Если ЧастиСайта.Количество()>0 Тогда
			ИмяПользователя = ЧастиСайта[0];
		КонецЕсли;
	КонецЕсли;
	
	АдресСайтаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АдресСайтаПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОбменУправлениеНебольшойФирмойСайт.Ссылка КАК ПланОбмена,
	|	ВЫБОР
	|		КОГДА ОбменУправлениеНебольшойФирмойСайт.ОбменТоварами
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Сортировка
	|ИЗ
	|	ПланОбмена.ОбменУправлениеНебольшойФирмойСайт КАК ОбменУправлениеНебольшойФирмойСайт
	|ГДЕ
	|	ОбменУправлениеНебольшойФирмойСайт.ИмяПользователя = &ИмяПользователя
	|	И ОбменУправлениеНебольшойФирмойСайт.АдресСайта ПОДОБНО &АдресСайта
	|	И НЕ ОбменУправлениеНебольшойФирмойСайт.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка";
	
	Запрос.УстановитьПараметр("ИмяПользователя", ИмяПользователя);
	Запрос.УстановитьПараметр("АдресСайта", "%"+АдресСайта+"%");
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	УзелОбменаССайтом = Выборка.ПланОбмена;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаВФоне

&НаКлиенте
Процедура ЗапуститьЗагрузкуВФоне(ИмяКоманды)
	
	Элементы.ЛогЗагрузкиССайта.Видимость = Истина;
	
	ДлительнаяОперация = ЗапуститьЗагрузкуВФонеСервер(ИмяКоманды);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ОбработатьРезультатВыполненияЗадания(ДлительнаяОперация);
		Возврат;
	КонецЕсли;
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ВыполнитьДействиеПрогрессВыполнения", ЭтотОбъект);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьДействиеЗавершение", ЭтотОбъект);
		
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НаименованиеФоновойЗагрузкиССайта();
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьЗагрузкуВФонеСервер(ИмяКоманды)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("АдресСайта", АдресСайта);
	ПараметрыЗадания.Вставить("УзелОбмена", УзелОбменаССайтом);
	ПараметрыЗадания.Вставить("ИмяПользователя", ИмяПользователя);
	ПараметрыЗадания.Вставить("Пароль", Пароль);
	ПараметрыЗадания.Вставить("ОсновнаяОрганизация", ОсновнаяОрганизация);
	ПараметрыЗадания.Вставить("ЗагружатьКартинки", ЗагружатьКартинки);
	ПараметрыЗадания.Вставить("ЕстьКартинки", ЕстьКартинки);
	ПараметрыЗадания.Вставить("КаталогЗагруженныхТоваров", КаталогЗагруженныхТоваров);
	ПараметрыЗадания.Вставить("СоздатьКаталогТоваров", СоздатьКаталогТоваров);
	ПараметрыЗадания.Вставить("ВидЦен", ВидЦен);
	ПараметрыЗадания.Вставить("ЗагрузитьВидЦенССайта", ЗагрузитьВидЦенССайта);
	ПараметрыЗадания.Вставить("ТипСайта", ТипСайта);
	ПараметрыЗадания.Вставить("НачалоЗагрузки", ТекущаяДата());
	ПараметрыЗадания.Вставить("ИспользоватьСопоставлениеПередЗагрузкой", ИспользоватьСопоставлениеПередЗагрузкой);
	ПараметрыЗадания.Вставить("СопоставлениеКатегорий", Объект.СопоставлениеКатегорий.Выгрузить());
	ПараметрыЗадания.Вставить("СопоставлениеТоваров", Объект.СопоставлениеТоваров.Выгрузить());
	ПараметрыЗадания.Вставить("СопоставлениеСвойств", Объект.СопоставлениеСвойств.Выгрузить());
	
	Если ИмяКоманды = "ПредварительнаяЗагрузка" Тогда
		
		СтрокаЛогЗагрузкиССайта = НСтр("ru = 'Подключение к сайту ...'");
		ИмяПроцедуры = "Обработки.ЗагрузитьДанныеСайта.ПрочитатьДанныеСайта";
		
	ИначеЕсли ИмяКоманды = "ЗагрузитьДанные" И ПредварительнаяЗагрузкаВыполнена Тогда
		
		ИмяПроцедуры = "Обработки.ЗагрузитьДанныеСайта.ЗагрузитьДанные";
		СтруктураКаталогов = Новый Структура;
		Для каждого стр Из ПакетыДанных Цикл
			СтруктураКаталогов.Вставить(стр.Представление, стр.Значение);
		КонецЦикла;
		ПараметрыЗадания.Вставить("СтруктураКаталогов", СтруктураКаталогов);
		
	Иначе
		// Прочитать и загрузить сразу
		ИмяПроцедуры = "Обработки.ЗагрузитьДанныеСайта.ПрочитатьИЗагрузитьДанные";		
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеФоновойЗагрузкиССайта();
	ПараметрыВыполнения.ЗапуститьНеВФоне    = Ложь;
	ПараметрыВыполнения.ЗапуститьВФоне      = Истина;
	
	Попытка
		Возврат ДлительныеОперации.ВыполнитьВФоне(			
					ИмяПроцедуры,
					ПараметрыЗадания,
					ПараметрыВыполнения);		
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьИсключениеНаСервере(ПредставлениеОшибки);
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьДействиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда  // отменено пользователем
		Возврат;
	КонецЕсли;
	
	ОбработатьРезультатВыполненияЗадания(Результат);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьДействиеПрогрессВыполнения(Прогресс, ДополнительныеПараметры) Экспорт
	
	Уведомление = "";
	СтрокаЛогЗагрузкиССайта = "";
	
	Если Прогресс.Сообщения <> Неопределено Тогда
		Для каждого СообщениеПользователю Из Прогресс.Сообщения Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс.Прогресс) = Тип("Структура") Тогда	
		Для каждого сообщение Из Прогресс.Прогресс Цикл
			СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + сообщение.Значение + " ";
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатВыполненияЗадания(Результат)
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ДанныеРезультат = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если ТипЗнч(ДанныеРезультат) = Тип("Структура") И ДанныеРезультат.Свойство("ДанныеУспешноЗагружены") Тогда
			
			// Данные загружены в 1С
			ОткрытьФорму("Справочник.Номенклатура.ФормаСписка");
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Данные успешно загружены'"));
			ОбновитьИнтерфейс();
			Закрыть();
			
		ИначеЕсли ТипЗнч(ДанныеРезультат) = Тип("Структура") И ДанныеРезультат.Свойство("СтруктураКаталогов")
			И ДанныеРезультат.СтруктураКаталогов.Количество()>0 Тогда
			// предварительная загрузка выполнена
			
			Для каждого стр Из ДанныеРезультат.СтруктураКаталогов Цикл
				ПакетыДанных.Добавить(стр.Значение, стр.Ключ);
			КонецЦикла;
			ЕстьКартинки = ДанныеРезультат.ЕстьКартинки;
			Элементы.ПодробныеРезультатыЗагрузки.Видимость = Истина;
			СтрокаЛогЗагрузкиССайта = ДанныеРезультат.СтрокаЛогЗагрузкиССайта;
			СтрокаЛогЗагрузкиССайтаПодробно = СокрЛП(ДанныеРезультат.СтрокаЛогЗагрузкиССайтаПодробно);
			
			ЗаполнитьТаблицыСопоставления(ДанныеРезультат, Истина);
			
			ОткрытьФормуСопоставленияНаКлиенте();
			
			ПредварительнаяЗагрузкаВыполнена = Истина;
			
		КонецЕсли;
		
		Если ТипЗнч(ДанныеРезультат) = Тип("Структура") И ДанныеРезультат.Свойство("ОписаниеОшибки") Тогда
			ОписаниеОшибки = ДанныеРезультат.ОписаниеОшибки;
			Если ТипЗнч(ОписаниеОшибки)=Тип("Массив") Тогда
				Для каждого стр Из ОписаниеОшибки Цикл
					СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + ?(СтрокаЛогЗагрузкиССайта="","",Символы.ПС) + стр;
					ОбщегоНазначенияКлиент.СообщитьПользователю(стр);
				КонецЦикла;
			ИначеЕсли ДанныеРезультат.ОписаниеОшибки<>"" Тогда
				СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + ?(СтрокаЛогЗагрузкиССайта="","",Символы.ПС) + ОписаниеОшибки;
				ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
			КонецЕсли;
			
		КонецЕсли;
		
		УдалитьИзВременногоХранилища(Результат.АдресРезультата);
		Результат = Неопределено;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		СтрокаЛогЗагрузкиССайта = СтрокаЛогЗагрузкиССайта + ?(СтрокаЛогЗагрузкиССайта="","",Символы.ПС) +
		Результат.КраткоеПредставлениеОшибки + " " + Результат.ПодробноеПредставлениеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Отменено" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Отменено пользователем");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицыСопоставления(ДанныеРезультат , ПомещатьВХранилище = Ложь)
	
	Если НЕ ИспользоватьСопоставлениеПередЗагрузкой Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СопоставлениеКатегорий.Очистить();
	Для Каждого Строка Из ДанныеРезультат.СопоставлениеКатегорий Цикл
		ЗаполнитьЗначенияСвойств(Объект.СопоставлениеКатегорий.Добавить(), Строка);
	КонецЦикла;
	
	Объект.СопоставлениеТоваров.Очистить();
	Для Каждого Строка Из ДанныеРезультат.СопоставлениеТоваров Цикл
		ЗаполнитьЗначенияСвойств(Объект.СопоставлениеТоваров.Добавить(), Строка);
	КонецЦикла;
	
	Объект.СопоставлениеСвойств.Очистить();
	Для Каждого Строка Из ДанныеРезультат.СопоставлениеСвойств Цикл
		ЗаполнитьЗначенияСвойств(Объект.СопоставлениеСвойств.Добавить(), Строка);
	КонецЦикла;
	
	Элементы.ОткрытьФормуСопоставления.Видимость = Истина;
	
	Если ПомещатьВХранилище Тогда
		
		СтруктураСопоставления = Новый Структура;
		СтруктураСопоставления.Вставить("СопоставлениеКатегорий" , ДанныеРезультат.СопоставлениеКатегорий);
		СтруктураСопоставления.Вставить("СопоставлениеТоваров" , ДанныеРезультат.СопоставлениеТоваров);
		СтруктураСопоставления.Вставить("СопоставлениеСвойств" , ДанныеРезультат.СопоставлениеСвойств);
		
		АдресВременногоХранилища = ПоместитьВоВременноеХранилище(СтруктураСопоставления,УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИсключениеНаСервере(Знач ПредставлениеОшибки)
	
	ЗаписьЖурналаРегистрации(НаименованиеФоновойЗагрузкиССайта(), УровеньЖурналаРегистрации.Ошибка, , , ПредставлениеОшибки);
	
КонецПроцедуры

&НаСервере
Функция НаименованиеФоновойЗагрузкиССайта() Экспорт
	
	Возврат НСтр("ru = 'Загрузка данных сайта'", ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

&НаКлиенте
Процедура ТипСайтаНажатие(ЭлементИмя)

	ОбновитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияФормаСопоставленияНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицыСопоставления(ПолучитьИзВременногоХранилища(Результат), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПользователяПриИзменении(Элемент)
	АдресСайтаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставления(Команда)
	
	ОткрытьФормуСопоставленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставленияНаКлиенте()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияФормаСопоставленияНажатиеЗавершение" , ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилища" , АдресВременногоХранилища);
	
	ОткрытьФорму("Обработка.ЗагрузитьДанныеСайта.Форма.ФормаСопоставления",ПараметрыФормы,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОткрытьФормуНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(УзелОбменаССайтом) Тогда
		ПараметрыФормы.Вставить("УзелОбменаССайтом" , УзелОбменаССайтом);
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.СоответствияОбъектовСайта.Форма.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры



#КонецОбласти

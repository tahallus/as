#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура СформироватьНаСервере(ТабДокумент, ДляОтправки = Ложь, НаПечать = Ложь)
	
	ПоказатьАртикул      = НЕ Константы.ОстаткиТоваровСкрыватьАртикулМП.Получить();
	ПоказатьЦенуЗакупки  = НЕ Константы.ОстаткиТоваровСкрыватьЦенуЗакупкиМП.Получить();
	ПоказатьЦенуПродажи  = НЕ Константы.ОстаткиТоваровСкрыватьЦенуПродажиМП.Получить();
	ПоказатьСуммуЗакупки = НЕ Константы.ОстаткиТоваровСкрыватьСуммуЗакупкиМП.Получить();
	ПоказатьСуммуПродажи = НЕ Константы.ОстаткиТоваровСкрыватьСуммуПродажиМП.Получить();
	
	ЭтоСмартфон = ОбщегоНазначенияМПВызовСервера.ЭтоСмартфон();
	ИмяМакета = "";
	
	Если ДляОтправки Тогда
		ИмяМакета = "МакетДляОтправки";
	ИначеЕсли ЭтоСмартфон Тогда
		Если ОбщегоНазначенияМПСервер.ПолучитьОриентациюЭкрана() = ОриентацияСтраницы.Ландшафт Тогда
			ИмяМакета = "Макет";
		Иначе
			ИмяМакета = "МакетСмартфон";
		КонецЕсли;
	Иначе
		ИмяМакета = "Макет";
	КонецЕсли;
	Макет = Обработки.ОстаткиТоваровНаСкладахМП.ПолучитьМакет(ИмяМакета);
	ТабДокумент.Очистить();
	
	ОстаткиТоваров = РегистрыНакопления.ОстаткиТоваровМП.ПолучитьОстаткиТоваров(ЭтаФорма.ЭлементОтбора);
	
	Если НЕ ДляОтправки Тогда
		Если ОстаткиТоваров.Количество() = 0 Тогда
			Элементы.Содержимое.Видимость = Ложь;
			Элементы.ДекорацияПустойОтчет.Видимость = Истина;
			Возврат;
		Иначе
			Элементы.Содержимое.Видимость = Истина;
			Элементы.ДекорацияПустойОтчет.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если НаПечать Тогда
		Если ИмяМакета = "МакетСмартфон" Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("НазваниеОтчета");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("НазваниеОтчета|НаименованиеТовара");
		КонецЕсли;
		ОбластьМакета.Параметры.Период = Строка(ТекущаяДата());
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Если ИмяМакета = "МакетСмартфон" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТабДокумент.Вывести(ОбластьМакета);
		ПоказатьКоличество = Ложь;
	Иначе
		ЗаголовокНаименованиеТовара = Макет.ПолучитьОбласть("Заголовок|НаименованиеТовара");
		ЗаголовокАртикул            = Макет.ПолучитьОбласть("Заголовок|Артикул");
		ЗаголовокЦенаЗакупки        = Макет.ПолучитьОбласть("Заголовок|ЦенаЗакупки");
		ЗаголовокЦенаПродажи        = Макет.ПолучитьОбласть("Заголовок|ЦенаПродажи");
		ЗаголовокКоличество         = Макет.ПолучитьОбласть("Заголовок|Количество");
		ЗаголовокСуммаЗакупки       = Макет.ПолучитьОбласть("Заголовок|СуммаЗакупки");
		ЗаголовокСуммаПродажи       = Макет.ПолучитьОбласть("Заголовок|СуммаПродажи");
		
		ТабДокумент.Вывести(ЗаголовокНаименованиеТовара);
		Если ПоказатьАртикул Тогда
			ТабДокумент.Присоединить(ЗаголовокАртикул);
		КонецЕсли;
		Если ПоказатьЦенуЗакупки Тогда
			ТабДокумент.Присоединить(ЗаголовокЦенаЗакупки);
		КонецЕсли;
		Если ПоказатьЦенуПродажи Тогда
			ТабДокумент.Присоединить(ЗаголовокЦенаПродажи);
		КонецЕсли;
		ТабДокумент.Присоединить(ЗаголовокКоличество);
		Если ПоказатьСуммуЗакупки Тогда
			ТабДокумент.Присоединить(ЗаголовокСуммаЗакупки);
		КонецЕсли;
		Если ПоказатьСуммуПродажи Тогда
			ТабДокумент.Присоединить(ЗаголовокСуммаПродажи);
		КонецЕсли;
		ПоказатьКоличество = Истина;
	КонецЕсли;
	
	ИтогоСуммаЗакупок = 0;
	ИтогоСуммаПродаж = 0;
	
	СераяСтрока = Ложь;
	Для каждого СтрокаОстатков Из ОстаткиТоваров Цикл
		
		СледующаяОбласть = (?(СераяСтрока, "СтрокаСерая", "Строка"));
		СераяСтрока = НЕ СераяСтрока;
		
		Если ИмяМакета = "Макет" ИЛИ ИмяМакета = "МакетДляОтправки" Тогда
			СледующаяОбласть = СледующаяОбласть + "|";
		КонецЕсли;
		
		ОбластьМакетаНаименованиеТовара = Макет.ПолучитьОбласть(СледующаяОбласть + "НаименованиеТовара");
		ОбластьМакетаАртикул            = Макет.ПолучитьОбласть(СледующаяОбласть + "Артикул");
		ОбластьМакетаЦенаЗакупки        = Макет.ПолучитьОбласть(СледующаяОбласть + "ЦенаЗакупки");
		ОбластьМакетаЦенаПродажи        = Макет.ПолучитьОбласть(СледующаяОбласть + "ЦенаПродажи");
		Если ПоказатьКоличество Тогда
			ОбластьМакетаКоличество         = Макет.ПолучитьОбласть(СледующаяОбласть + "Количество");
		КонецЕсли;
		ОбластьМакетаСуммаЗакупки       = Макет.ПолучитьОбласть(СледующаяОбласть + "СуммаЗакупки");
		ОбластьМакетаСуммаПродажи       = Макет.ПолучитьОбласть(СледующаяОбласть + "СуммаПродажи");
		
		ОбъектТовар = СтрокаОстатков.Товар.ПолучитьОбъект();
		
		ЦенаЗакупки = РегистрыСведений.ЦеныПоставщиковМП.ПолучитьЦенуТовара(, СтрокаОстатков.Товар);
		ЦенаПродажи = РегистрыСведений.ЦеныТоваровМП.ПолучитьЦенуТовара(СтрокаОстатков.Товар);
		
		ЗаполнитьЗначенияСвойств(ОбластьМакетаНаименованиеТовара.Параметры, СтрокаОстатков);
		Если ОбъектТовар = Неопределено Тогда
			ОбластьМакетаНаименованиеТовара.Параметры.НаименованиеТовара = НСтр("ru='<удален>';en='<deleted>'");
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаНаименованиеТовара);
		
		Если ПоказатьАртикул Тогда
			ОбластьМакетаАртикул.Параметры.Артикул = ?(ОбъектТовар <> Неопределено И ЗначениеЗаполнено(ОбъектТовар.Артикул), ОбъектТовар.Артикул, НСтр("ru='<не задан>';en='<unspecified>'"));
			ТабДокумент.Присоединить(ОбластьМакетаАртикул);
		КонецЕсли;
		Если ПоказатьЦенуЗакупки Тогда
			ОбластьМакетаЦенаЗакупки.Параметры.ЦенаЗакупки = ?(ЗначениеЗаполнено(ЦенаЗакупки), ЦенаЗакупки, НСтр("ru='<не задана>';en='<unspecified>'"));
			ТабДокумент.Присоединить(ОбластьМакетаЦенаЗакупки);
		КонецЕсли;
		Если ПоказатьЦенуПродажи Тогда
			ОбластьМакетаЦенаПродажи.Параметры.ЦенаПродажи = ?(ЗначениеЗаполнено(ЦенаПродажи), ЦенаПродажи, НСтр("ru='<не задана>';en='<unspecified>'"));
			ТабДокумент.Присоединить(ОбластьМакетаЦенаПродажи);
		КонецЕсли;
		Если ПоказатьКоличество Тогда
			ОбластьМакетаКоличество.Параметры.Количество = СтрокаОстатков.Количество;
			ТабДокумент.Присоединить(ОбластьМакетаКоличество);
		КонецЕсли;
		Если ПоказатьСуммуЗакупки Тогда
			СуммаЗакупки = ЦенаЗакупки * СтрокаОстатков.Количество;
			Если ЗначениеЗаполнено(СуммаЗакупки) Тогда
				ОбластьМакетаСуммаЗакупки.Параметры.СуммаЗакупки = СуммаЗакупки;
				ИтогоСуммаЗакупок = ИтогоСуммаЗакупок + СуммаЗакупки;
			Иначе
				ОбластьМакетаСуммаЗакупки.Параметры.СуммаЗакупки = НСтр("ru='<не задана>';en='<unspecified>'");
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьМакетаСуммаЗакупки);
		КонецЕсли;
		Если ПоказатьСуммуПродажи Тогда
			СуммаПродажи = ЦенаПродажи * СтрокаОстатков.Количество;
			Если ЗначениеЗаполнено(СуммаПродажи) Тогда
				ОбластьМакетаСуммаПродажи.Параметры.СуммаПродажи = СуммаПродажи;
				ИтогоСуммаПродаж = ИтогоСуммаПродаж + СуммаПродажи;
			Иначе
				ОбластьМакетаСуммаПродажи.Параметры.СуммаПродажи = НСтр("ru='<не задана>';en='<unspecified>'");
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьМакетаСуммаПродажи);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПоказатьСуммуЗакупки ИЛИ ПоказатьСуммуПродажи Тогда
		
		ИтогоСуммаЗакупок = ?(ЗначениеЗаполнено(ИтогоСуммаЗакупок), ИтогоСуммаЗакупок, НСтр("ru='<не задана>';en='<unspecified>'"));
		ИтогоСуммаПродаж = ?(ЗначениеЗаполнено(ИтогоСуммаПродаж), ИтогоСуммаПродаж, НСтр("ru='<не задана>';en='<unspecified>'"));
		
		Если ИмяМакета = "МакетСмартфон" Тогда
			ОбластьМакетаИтоги = Макет.ПолучитьОбласть("ИтогиЗаголовок");
			ТабДокумент.Вывести(ОбластьМакетаИтоги);
			Если ПоказатьСуммуЗакупки Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("ИтогиСуммаЗакупки");
				ОбластьМакетаИтоги.Параметры.СуммаЗакупки = ИтогоСуммаЗакупок;
				ТабДокумент.Вывести(ОбластьМакетаИтоги);
			КонецЕсли;
			Если ПоказатьСуммуПродажи Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("ИтогиСуммаПродажи");
				ОбластьМакетаИтоги.Параметры.СуммаПродажи = ИтогоСуммаПродаж;
				ТабДокумент.Вывести(ОбластьМакетаИтоги);
			КонецЕсли;
		Иначе
			ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|НаименованиеТовара");
			ТабДокумент.Вывести(ОбластьМакетаИтоги);
			Если ПоказатьАртикул Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|Артикул");
				ТабДокумент.Присоединить(ОбластьМакетаИтоги);
			КонецЕсли;
			Если ПоказатьЦенуЗакупки Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|ЦенаЗакупки");
				ТабДокумент.Присоединить(ОбластьМакетаИтоги);
			КонецЕсли;
			Если ПоказатьЦенуПродажи Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|ЦенаПродажи");
				ТабДокумент.Присоединить(ОбластьМакетаИтоги);
			КонецЕсли;
			ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|Количество");
			ТабДокумент.Присоединить(ОбластьМакетаИтоги);
			Если ПоказатьСуммуЗакупки Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|СуммаЗакупки");
				ОбластьМакетаИтоги.Параметры.СуммаЗакупки = ИтогоСуммаЗакупок;
				ТабДокумент.Присоединить(ОбластьМакетаИтоги);
			КонецЕсли;
			Если ПоказатьСуммуПродажи Тогда
				ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги|СуммаПродажи");
				ОбластьМакетаИтоги.Параметры.СуммаПродажи = ИтогоСуммаПродаж;
				ТабДокумент.Присоединить(ОбластьМакетаИтоги);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор(ВыбранноеЗначение)
	
	ЭтаФорма.ЭлементОтбора = ВыбранноеЗначение;
	СформироватьНаСервере(Содержимое);
	Элементы.ГруппаФильтр.Видимость = Истина;
	Элементы.ДекорацияФильтр.Заголовок = Строка(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтбор()
	
	ЭтаФорма.ЭлементОтбора = Неопределено;
	СформироватьНаСервере(Содержимое);
	Элементы.ГруппаФильтр.Видимость = Ложь;
	Элементы.ДекорацияФильтр.Заголовок = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьОткрытиеЭкранаВGA(ЭтаФорма.ИмяФормы);
	// Конец Сбор статистики

	Если Параметры.Свойство("ЭлементОтбора") Тогда
		УстановитьОтбор(Параметры.ЭлементОтбора);
	КонецЕсли;
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ТоварыМП") Тогда
		УстановитьОтбор(ВыбранноеЗначение);
	КонецЕсли;
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ОстаткиТоваровНастройкиОтчетаМП" Тогда
		СформироватьНаСервере(Содержимое);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеНастроекОтчета" Тогда
		СформироватьНаСервере(Содержимое);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура Меню(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("ОтборПоЭлементу", НСтр("ru='Отбор по товару';en='Filter by nomenclature'"));
	СписокВыбора.Добавить("ОтборПоГруппе", НСтр("ru='Отбор по группе товаров';en='Filter by group'"));
	
	#Если МобильноеПриложениеКлиент Тогда
		// АПК:565-выкл методы безопасного запуска обеспечиваются этой функцией
		ВидОперации = ВыбратьИзМеню(СписокВыбора);
		// АПК:565-вкл
		ФильтрОткрытиеФормыВыбора(ВидОперации);
	#Иначе
		ПоказатьВыборИзМеню(Новый ОписаниеОповещения("МенюЗавершение", ЭтотОбъект), СписокВыбора);
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура МенюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВидОперации = ВыбранныйЭлемент;
	
	ФильтрОткрытиеФормыВыбора(ВидОперации);

КонецПроцедуры

&НаКлиенте
Процедура ФильтрОткрытиеФормыВыбора(Знач ВидОперации)
	
	Если ВидОперации <> Неопределено Тогда
		Если ВидОперации.Значение = "ОтборПоЭлементу" Тогда
			ОткрытьФорму("Справочник.ТоварыМП.ФормаВыбора", Новый Структура("ПоказыватьУслуги, РежимВыбора", Ложь, Истина), ЭтаФорма);
		ИначеЕсли ВидОперации.Значение = "ОтборПоГруппе" Тогда
			ОткрытьФорму("Справочник.ТоварыМП.ФормаВыбораГруппы", , ЭтаФорма);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ОчиститьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ОткрытьФорму("ОбщаяФорма.ОстаткиТоваровНастройкиОтчетаМП",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	ТабДокументДляОтправки = Новый ТабличныйДокумент;
	СформироватьНаСервере(ТабДокументДляОтправки, Истина);
	ОбщегоНазначенияМПКлиент.ОтправитьОтчетВCSV(Заголовок + " на " + формат(ТекущаяДата(), "ДЛФ=Д"), ТабДокументДляОтправки);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	ТабДокументДляПечати = Новый ТабличныйДокумент;
	СформироватьНаСервере(ТабДокументДляПечати, Ложь, Истина);
	ТабДокументДляПечати.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	Если ОбщегоНазначенияМПВызовСервера.ЭтоСмартфон() Тогда
		ОтключитьОбработчикОжидания("СформироватьПриИзмененииПараметровЭкрана");
		ПодключитьОбработчикОжидания("СформироватьПриИзмененииПараметровЭкрана", 0.5, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПриИзмененииПараметровЭкрана()
	
	СформироватьНаСервере(Содержимое);
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики
	
	// АПК:534-выкл методы безопасного запуска обеспечиваются этой функцией
	ПерейтиПоНавигационнойСсылке("https://sbm.1c.ru/about/razdel-otchety/otchet-ostatki-tovarov/");
	// АПК:534-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВPDF(Команда)
	
	// Сбор статистики
	СборСтатистикиМПКлиентСерверПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Команда." + Команда.Имя);
	// Конец Сбор статистики

	СтруктураВозврата = ЗаписатьВPDF(КаталогДокументов());
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект), СтруктураВозврата.ПолноеИмяФайла);

КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Возврат; // Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры


&НаСервере
Функция ЗаписатьВPDF(КаталогДокументов)
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	СформироватьНаСервере(ПечатнаяФорма, Ложь, Истина);
	
	ИмяФайла = НСтр("ru='Отчет по остаткам на складах от ';en='Remains of Goods of '")
		+ ОбщегоНазначенияМПКлиентСервер.ПолучитьФорматированнуюСтрокуДатыДляФайла(ТекущаяДата()) + ".pdf";
	ПолноеИмяФайла = ОбщегоНазначенияМПКлиентСервер.ПолучитьПолноеИмяФайла(КаталогДокументов, ИмяФайла);     
	ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);             
	
	Возврат Новый Структура("ИмяФайла, ПолноеИмяФайла", ИмяФайла, ПолноеИмяФайла);

КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Сбор статистики
	СборСтатистикиМПКлиентПереопределяемый.ОтправитьДействиеВGA(ЭтаФорма.ИмяФормы + ".Закрытие",,,ЗавершениеРаботы);
	// Конец Сбор статистики
	
КонецПроцедуры

#КонецОбласти

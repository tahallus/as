
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Объект.ПериодРегистрации = КонецМесяца(Параметры.ПериодРегистрации);
	Иначе
		Объект.ПериодРегистрации = КонецМесяца(ТекущаяДатаСеанса());
	КонецЕсли; 
	ОтображениеПериодаРегистрации = Формат(Объект.ПериодРегистрации, "ДФ='MMMM yyyy'");
	ЗаполнитьОрганизацииСЗадолженностями();
	Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 1/3)'");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И СтрНайти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		Объект.ПериодРегистрации = КонецМесяца(ВыбранноеЗначение);
		УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
		ОбновитьПолучателейНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если СозданныеДокументы.Количество() > 0 Тогда
		Оповестить("СозданыДокументыПередачиМеждуОрганизациями");
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	Если ТаблицаПолучателей.Количество() = 1 Тогда
		Получатель = ТаблицаПолучателей[0].Получатель;
	Иначе
		Получатель = Элементы.ТаблицаПолучателей.ТекущиеДанные.Получатель;
	КонецЕсли;
	СформироватьДокументыСервер(Получатель);
	НастроитьЗаголовокИКнопкиПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПолучателей(Команда)
	ОбновитьПолучателейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКНастройкамФормирования(Команда)
	
	Если ТаблицаПолучателей.Количество() = 1 Тогда
		Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(НастройкиПередачи, "ОрганизацияПродавец", ТаблицаПолучателей[0].Получатель,
			ВидСравненияКомпоновкиДанных.Равно, НСтр("ru='Получатель'"), Истина);
		НастроитьЗаголовокИКнопкиПоУмолчанию();
	Иначе
		ТекДанные = Элементы.ТаблицаПолучателей.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
				Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи;
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка( НастройкиПередачи, "ОрганизацияПродавец", ТекДанные.Получатель,
					ВидСравненияКомпоновкиДанных.Равно, НСтр("ru='Получатель'"), Истина);
				НастроитьЗаголовокИКнопкиПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазадКВыборуОрганизации(Команда)
	Если Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи Тогда
		Элементы.Основная.ТекущаяСтраница = Элементы.ВыборОрганизации;
	Иначе
		Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи;
	КонецЕсли;
	НастроитьЗаголовокИКнопкиПоУмолчанию();
КонецПроцедуры

//Процедура обработчик события начала ввода данных поля Объект.ПериодРегистрации
//
&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
		ДатаКалендаряПриОткрытии = Объект.ПериодРегистрации;
	Иначе
		ДатаКалендаряПриОткрытии = ОбщегоНазначенияКлиент.ДатаСеанса();
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", ОбщегоНазначенияУНФКлиент.ПараметрыОткрытияФормыКалендаря(
		ДатаКалендаряПриОткрытии), ЭтотОбъект);
	
КонецПроцедуры

//Процедура обработчик события регулирования поля Объект.ПериодРегистрации
//
&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойКлиент.ПриРегулированииПериодаРегистрации(ЭтаФорма, Направление);
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	ОбновитьПолучателейНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СозданныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение( ,Элементы.СозданныеДокументы.ТекущиеДанные.ДокументПередачаТоваров);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОрганизацииСЗадолженностями()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РезервыТоваровОрганизаций.Организация КАК Получатель
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.ОстаткиИОбороты(
	|			,
	|			&ПериодРегистрации,
	|			Авто,
	|			,
	|			Организация В
	|				(ВЫБРАТЬ
	|					РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец
	|				ИЗ
	|					РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями)) КАК РезервыТоваровОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.Номенклатура,
	|	РезервыТоваровОрганизаций.Характеристика,
	|	РезервыТоваровОрганизаций.Партия,
	|	РезервыТоваровОрганизаций.СтруктурнаяЕдиница,
	|	РезервыТоваровОрганизаций.Ячейка,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.СтранаПроисхождения
	|
	|ИМЕЮЩИЕ
	|	СУММА(РезервыТоваровОрганизаций.КоличествоПриход) > 0");
	
	Запрос.УстановитьПараметр("ПериодРегистрации", КонецМесяца(Объект.ПериодРегистрации));
	ТаблицаПолучателей.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ТаблицаПолучателей.Количество() = 1 Тогда
		Элементы.ТаблицаПолучателей.Видимость  = Ложь;
		Элементы.ДекорацияПолучатель.Видимость = Истина;
		Элементы.ГруппаЗаголовок1Этап.Видимость = Ложь;
		Элементы.ДекорацияПолучатель.Заголовок = СтрШаблон(НСтр("ru = 'Организация-получатель: %1'"), 
			ТаблицаПолучателей[0].Получатель);
	Иначе
		Элементы.ТаблицаПолучателей.Видимость  = Истина;
		Элементы.ГруппаЗаголовок1Этап.Видимость = Истина;
		Элементы.ДекорацияПолучатель.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПолучателейНаСервере()
	ЗаполнитьОрганизацииСЗадолженностями();
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыСервер(ОрганизацияПолучатель)
	
	СозданныеДокументы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Получатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПериодРегистрации", КонецМесяца(Объект.ПериодРегистрации));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца КАК КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец КАК КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ВтНастройкаПередачиТоваровМеждуОрганизациями
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|ГДЕ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = &Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ) КАК Период,
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Документ,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца КАК КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец КАК КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены,
	|	Резервы.Номенклатура КАК Номенклатура,
	|	Резервы.Характеристика КАК Характеристика,
	|	Резервы.Партия КАК Партия,
	|	Резервы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Резервы.Ячейка КАК Ячейка,
	|	Резервы.НомерГТД КАК НомерГТД,
	|	Резервы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(Резервы.Количество) КАК Количество,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена / ВЫБОР
	|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЦеныНоменклатуры.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 0) КАК Цена
	|ПОМЕСТИТЬ ВТРезультирующаяТаблица
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|		ПО (Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Резервы.Период <= &ПериодРегистрации)
	|			И (Резервы.Организация = &Получатель)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = Резервы.Организация)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец = Резервы.КорОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|		ПО (ПередачаТоваровМеждуОрганизациями.Дата = НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ))
	|			И Резервы.Организация = ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель
	|			И Резервы.КорОрганизация = ПередачаТоваровМеждуОрганизациями.Организация
	|			И (ПередачаТоваровМеждуОрганизациями.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоТребуетЗаполнения))
	|			И (НЕ ПередачаТоваровМеждуОрганизациями.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РезервыТоваровОрганизаций.Период КАК Период,
	|			ЦеныНоменклатуры.ВидЦен КАК ВидЦен,
	|			РезервыТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|			РезервыТоваровОрганизаций.Характеристика КАК Характеристика,
	|			МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ПериодЦены
	|		ИЗ
	|			РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНастройкаПередачиТоваровМеждуОрганизациями КАК ВтНастройкаПередачиТоваровМеждуОрганизациями
	|				ПО РезервыТоваровОрганизаций.Организация = ВтНастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец
	|					И РезервыТоваровОрганизаций.КорОрганизация = ВтНастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|				ПО (ВтНастройкаПередачиТоваровМеждуОрганизациями.ВидЦены = ЦеныНоменклатуры.ВидЦен)
	|					И РезервыТоваровОрганизаций.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|					И РезервыТоваровОрганизаций.Характеристика = ЦеныНоменклатуры.Характеристика
	|					И (ЦеныНоменклатуры.Период <= РезервыТоваровОрганизаций.Период)
	|		ГДЕ
	|			РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РезервыТоваровОрганизаций.Период,
	|			РезервыТоваровОрганизаций.Номенклатура,
	|			РезервыТоваровОрганизаций.Характеристика,
	|			ЦеныНоменклатуры.ВидЦен) КАК ПериодыЦен
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ПериодыЦен.ПериодЦены = ЦеныНоменклатуры.Период
	|				И ПериодыЦен.ВидЦен = ЦеныНоменклатуры.ВидЦен
	|				И ПериодыЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ПериодыЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|		ПО Резервы.Период = ПериодыЦен.Период
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены = ПериодыЦен.ВидЦен)
	|			И Резервы.Номенклатура = ПериодыЦен.Номенклатура
	|			И Резервы.Характеристика = ПериодыЦен.Характеристика
	|ГДЕ
	|	Резервы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ),
	|	ПередачаТоваровМеждуОрганизациями.Ссылка,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров,
	|	Резервы.Номенклатура,
	|	Резервы.Характеристика,
	|	Резервы.Партия,
	|	Резервы.СтруктурнаяЕдиница,
	|	Резервы.Ячейка,
	|	Резервы.НомерГТД,
	|	Резервы.СтранаПроисхождения,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена / ВЫБОР
	|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЦеныНоменклатуры.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 0)
	|
	|ИМЕЮЩИЕ
	|	СУММА(Резервы.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРезультирующаяТаблица.Период КАК Период,
	|	ВТРезультирующаяТаблица.Документ КАК Документ,
	|	ВТРезультирующаяТаблица.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ВТРезультирующаяТаблица.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	ВТРезультирующаяТаблица.КонтрагентВладельца КАК КонтрагентВладельца,
	|	ВТРезультирующаяТаблица.КонтрагентПродавец КАК КонтрагентПродавец,
	|	ВТРезультирующаяТаблица.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВТРезультирующаяТаблица.Валюта КАК Валюта,
	|	ВТРезультирующаяТаблица.Договор КАК Договор,
	|	ВТРезультирующаяТаблица.Договор.СпособЗачетаПредоплатыПоУмолчанию КАК СпособЗачетаПредоплаты,
	|	ВТРезультирующаяТаблица.ВидЦены КАК ВидЦены,
	|	ВТРезультирующаяТаблица.Номенклатура КАК Номенклатура,
	|	ВТРезультирующаяТаблица.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТРезультирующаяТаблица.Номенклатура.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	ВТРезультирующаяТаблица.Характеристика КАК Характеристика,
	|	ВТРезультирующаяТаблица.Партия КАК Партия,
	|	ВТРезультирующаяТаблица.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТРезультирующаяТаблица.Ячейка КАК Ячейка,
	|	ВТРезультирующаяТаблица.НомерГТД КАК НомерГТД,
	|	ВТРезультирующаяТаблица.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТРезультирующаяТаблица.Количество КАК КоличествоПлан,
	|	ВТРезультирующаяТаблица.Количество КАК Количество,
	|	ВТРезультирующаяТаблица.Цена КАК Цена,
	|	ВТРезультирующаяТаблица.ВидЦены.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	ВТРезультирующаяТаблица КАК ВТРезультирующаяТаблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Период,
	|	ОрганизацияВладелец";
	
	ВыборкаПоПериоду = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПериоду.Следующий() Цикл
		ВыборкаПоОрганизации = ВыборкаПоПериоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоОрганизации.Следующий() Цикл
			
			ЕстьОшибкаЗаполнения = Ложь;
			ВыборкаПоНоменклатуре = ВыборкаПоОрганизации.Выбрать();
			ВыборкаПоНоменклатуре.Следующий();
			// заполнение документа по умолчанию
			Если Не ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Документ) Тогда
				// Создание нового документа
				ПередачаТоваровМеждуОрганизациями = Документы.ПередачаТоваровМеждуОрганизациями.СоздатьДокумент();
			Иначе
				ПередачаТоваровМеждуОрганизациями = ВыборкаПоНоменклатуре.Документ.ПолучитьОбъект();
				ПередачаТоваровМеждуОрганизациями.Запасы.Очистить();
			КонецЕсли;
			ПередачаТоваровМеждуОрганизациями.Заполнить(Неопределено);
			ПередачаТоваровМеждуОрганизациями.Дата = НачалоДня(ВыборкаПоНоменклатуре.Период);
			ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = ВыборкаПоНоменклатуре.Валюта;
			Если НЕ ЗначениеЗаполнено(ПередачаТоваровМеждуОрганизациями.ВалютаДокумента) Тогда
				ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = Константы.ВалютаУчета.Получить();
			КонецЕсли; 
			КурсыВалют = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				ПередачаТоваровМеждуОрганизациями.ВалютаДокумента, 
				ПередачаТоваровМеждуОрганизациями.Дата);
			ПередачаТоваровМеждуОрганизациями.Курс = КурсыВалют.Курс;
			ПередачаТоваровМеждуОрганизациями.Кратность = КурсыВалют.Кратность;
			ПередачаТоваровМеждуОрганизациями.Организация = ВыборкаПоНоменклатуре.ОрганизацияВладелец;
			ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = ВыборкаПоНоменклатуре.ОрганизацияПродавец;
			ПередачаТоваровМеждуОрганизациями.КонтрагентВладелец = ВыборкаПоНоменклатуре.КонтрагентВладельца;
			ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель = ВыборкаПоНоменклатуре.КонтрагентПродавец;
			ПередачаТоваровМеждуОрганизациями.НДСВключатьВСтоимость = Истина;
			ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница = ВыборкаПоНоменклатуре.СтруктурнаяЕдиница;
			ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС = Истина;
			ПередачаТоваровМеждуОрганизациями.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
			ПередачаТоваровМеждуОрганизациями.ВидЦен = ВыборкаПоНоменклатуре.ВидЦены;
			
			ПередачаТоваровМеждуОрганизациями.Договор = ВыборкаПоНоменклатуре.Договор;
			ПередачаТоваровМеждуОрганизациями.СпособЗачетаПредоплаты = ВыборкаПоНоменклатуре.СпособЗачетаПредоплаты;
			ПередачаТоваровМеждуОрганизациями.СпособЗачетаПредоплатыПолучатель = ВыборкаПоНоменклатуре.СпособЗачетаПредоплаты;
			ПередачаТоваровМеждуОрганизациями.Автор = Пользователи.ТекущийПользователь();
			ПередачаТоваровМеждуОрганизациями.ВидОперации = Перечисления.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоЗаполнен;
			
			ВыборкаПоНоменклатуре.Сбросить();
			
			Пока ВыборкаПоНоменклатуре.Следующий() Цикл
				
				НоваяСтрокаЗапасов = ПередачаТоваровМеждуОрганизациями.Запасы.Добавить();
				ЗаполнитьЗначенияСвойств(
					НоваяСтрокаЗапасов, 
					ВыборкаПоНоменклатуре,
					"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения, КоличествоПлан, Количество, Цена");
				НоваяСтрокаЗапасов.ТипНоменклатурыЗапас = Истина;
				НоваяСтрокаЗапасов.СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(ВыборкаПоНоменклатуре.ВидСтавкиНДС);
				Если НоваяСтрокаЗапасов.Цена = 0 Тогда
					ЕстьОшибкаЗаполнения = Истина;
				КонецЕсли;
				Если ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС <> ВыборкаПоНоменклатуре.ЦенаВключаетНДС Тогда
					НоваяСтрокаЗапасов.Цена = ЦенообразованиеСервер.ПересчитатьСуммуПриИзмененииФлаговНДС(
						НоваяСтрокаЗапасов.Цена,
						ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС, 
						НоваяСтрокаЗапасов.СтавкаНДС);
				КонецЕсли;
				НоваяСтрокаЗапасов.Сумма = НоваяСтрокаЗапасов.Цена * НоваяСтрокаЗапасов.Количество;
				ТабличныеЧастиУНФКлиентСервер.РассчитатьСуммуНДСИВсего(НоваяСтрокаЗапасов, Новый Структура("СуммаВключаетНДС", ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС));
				
				Если ВыборкаПоНоменклатуре.СтруктурнаяЕдиница <> ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница
					И ПередачаТоваровМеждуОрганизациями.ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
					ПередачаТоваровМеждуОрганизациями.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
				КонецЕсли; 
				
			КонецЦикла;
			
			УчестьОстаткиНаДатуПередачи(ПередачаТоваровМеждуОрганизациями);
			
			Если ПередачаТоваровМеждуОрганизациями.Запасы.Количество() = 0 
				И НЕ ЗначениеЗаполнено(ПередачаТоваровМеждуОрганизациями.Ссылка) Тогда
				// Пустой документ
				Продолжить;
			КонецЕсли; 
			
			Попытка
				ПередачаТоваровМеждуОрганизациями.Записать(?(ЕстьОшибкаЗаполнения, РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.Проведение));
			Исключение
				ПередачаТоваровМеждуОрганизациями.Записать(РежимЗаписиДокумента.Запись);
			КонецПопытки;
			
			НоваяСтрокаИтогов = СозданныеДокументы.Добавить();
			НоваяСтрокаИтогов.ДокументПередачаТоваров = ПередачаТоваровМеждуОрганизациями.Ссылка;
			Если ЕстьОшибкаЗаполнения Тогда
				НоваяСтрокаИтогов.Статус = НСтр("ru = 'Установите цены товаров в документе'");
			Иначе
				НоваяСтрокаИтогов.Статус = НСтр("ru = 'Документ создан успешно'");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Элементы.Основная.ТекущаяСтраница = Элементы.СформированныеДокументы;
	
КонецПроцедуры

&НаСервере
Процедура УчестьОстаткиНаДатуПередачи(ПередачаТоваровМеждуОрганизациями)
	
	ТаблицаЗапасов = ПередачаТоваровМеждуОрганизациями.Запасы.Выгрузить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЗапасов", ТаблицаЗапасов);
	Запрос.УстановитьПараметр("Ссылка", ПередачаТоваровМеждуОрганизациями.Ссылка);
	Запрос.УстановитьПараметр("Организация", ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ДатаСреза", 
		Новый Граница(КонецДня(ПередачаТоваровМеждуОрганизациями.Дата), ВидГраницы.Исключая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаЗапасов.Партия КАК Партия,
	|	ТаблицаЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасов.Ячейка КАК Ячейка,
	|	ТаблицаЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаЗапасов.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаИзмерений
	|ИЗ
	|	&ТаблицаЗапасов КАК ТаблицаЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизацийОстатки.Организация КАК Организация,
	|	РезервыТоваровОрганизацийОстатки.Номенклатура КАК Номенклатура,
	|	РезервыТоваровОрганизацийОстатки.Характеристика КАК Характеристика,
	|	РезервыТоваровОрганизацийОстатки.Партия КАК Партия,
	|	РезервыТоваровОрганизацийОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РезервыТоваровОрганизацийОстатки.Ячейка КАК Ячейка,
	|	РезервыТоваровОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизацийОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиРезервов
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			&ДатаСреза,
	|			Организация = &Организация
	|				И (Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения) В
	|					(ВЫБРАТЬ
	|						ТаблицаИзмерений.Номенклатура,
	|						ТаблицаИзмерений.Характеристика,
	|						ТаблицаИзмерений.Партия,
	|						ТаблицаИзмерений.СтруктурнаяЕдиница,
	|						ТаблицаИзмерений.Ячейка,
	|						ТаблицаИзмерений.НомерГТД,
	|						ТаблицаИзмерений.СтранаПроисхождения
	|					ИЗ
	|						ТаблицаИзмерений)) КАК РезервыТоваровОрганизацийОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.Номенклатура,
	|	РезервыТоваровОрганизаций.Характеристика,
	|	РезервыТоваровОрганизаций.Партия,
	|	РезервыТоваровОрганизаций.СтруктурнаяЕдиница,
	|	РезервыТоваровОрганизаций.Ячейка,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -РезервыТоваровОрганизаций.Количество
	|		ИНАЧЕ РезервыТоваровОрганизаций.Количество
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.Регистратор = &Ссылка
	|	И РезервыТоваровОрганизаций.Организация = &Организация
	|	И (РезервыТоваровОрганизаций.Номенклатура, РезервыТоваровОрганизаций.Характеристика, РезервыТоваровОрганизаций.Партия, РезервыТоваровОрганизаций.СтруктурнаяЕдиница, РезервыТоваровОрганизаций.Ячейка, РезервыТоваровОрганизаций.НомерГТД, РезервыТоваровОрганизаций.СтранаПроисхождения) В
	|			(ВЫБРАТЬ
	|				ТаблицаИзмерений.Номенклатура,
	|				ТаблицаИзмерений.Характеристика,
	|				ТаблицаИзмерений.Партия,
	|				ТаблицаИзмерений.СтруктурнаяЕдиница,
	|				ТаблицаИзмерений.Ячейка,
	|				ТаблицаИзмерений.НомерГТД,
	|				ТаблицаИзмерений.СтранаПроисхождения
	|			ИЗ
	|				ТаблицаИзмерений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРезервов.Организация КАК Организация,
	|	ОстаткиРезервов.Номенклатура КАК Номенклатура,
	|	ОстаткиРезервов.Характеристика КАК Характеристика,
	|	ОстаткиРезервов.Партия КАК Партия,
	|	ОстаткиРезервов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОстаткиРезервов.Ячейка КАК Ячейка,
	|	ОстаткиРезервов.НомерГТД КАК НомерГТД,
	|	ОстаткиРезервов.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ОстаткиРезервов.Количество) КАК Количество
	|ИЗ
	|	ОстаткиРезервов КАК ОстаткиРезервов
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРезервов.Организация,
	|	ОстаткиРезервов.Номенклатура,
	|	ОстаткиРезервов.Характеристика,
	|	ОстаткиРезервов.Партия,
	|	ОстаткиРезервов.СтруктурнаяЕдиница,
	|	ОстаткиРезервов.Ячейка,
	|	ОстаткиРезервов.НомерГТД,
	|	ОстаткиРезервов.СтранаПроисхождения";
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	ПоляПоиска = "Номенклатура, Характеристика, Партия, СтруктурнаяЕдиница, Ячейка, НомерГТД, СтранаПроисхождения";
	ТаблицаОстатков.Индексы.Добавить(ПоляПоиска);
	
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	Для каждого СтрокаТабличнойЧасти Из ПередачаТоваровМеждуОрганизациями.Запасы Цикл
		Коэффициент = ?(ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения"), 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ЕдиницаИзмерения, "Коэффициент", Истина), 1);
		Коэффициент = ?(Коэффициент = 0, 1, Коэффициент);	
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТабличнойЧасти);
		СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
		Остаток = 0;
		Для каждого СтрокаОстатка Из СтрокиОстатков Цикл
			Остаток = Остаток + СтрокаОстатка.Количество;
		КонецЦикла;
		Если Остаток < 0 Тогда
			Остаток = 0;
		КонецЕсли; 
		Зачтено = СтрокаТабличнойЧасти.Количество * Коэффициент;
		Если Зачтено > Остаток Тогда
			СтрокаТабличнойЧасти.КоличествоПлан = Остаток / Коэффициент;
			СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.КоличествоПлан;
			РассчитатьСуммыВСтрокеТЧ(СтрокаТабличнойЧасти, ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС);
			Зачтено = Остаток;
		КонецЕсли;
		Если Зачтено > 0 Тогда
			Для каждого СтрокаОстатка Из СтрокиОстатков Цикл
				ПоСтроке = Мин(Зачтено, СтрокаОстатка.Количество);
				СтрокаОстатка.Количество = СтрокаОстатка.Количество - ПоСтроке;
				Зачтено = Зачтено - ПоСтроке;
			КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
	
	УдалитьПустыеСтроки(ПередачаТоваровМеждуОрганизациями.Запасы); 
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммыВСтрокеТЧ(СтрокаТабличнойЧасти, СуммаВключаетНДС)
	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	Если СуммаВключаетНДС Тогда
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100);
	Иначе
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100;
	КонецЕсли; 
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПустыеСтроки(Запасы)
		
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Количество", 0);
	Строки = Запасы.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из Строки Цикл
		Запасы.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗаголовокИКнопкиПоУмолчанию()
	Если Элементы.Основная.ТекущаяСтраница = Элементы.ВыборОрганизации Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 1/3)'");
		Элементы.ПерейтиКНастройкамФормирования.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 2/3)'");
		Элементы.СформироватьДокументы.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.Основная.ТекущаяСтраница = Элементы.СформированныеДокументы Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 3/3)'");
		Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти


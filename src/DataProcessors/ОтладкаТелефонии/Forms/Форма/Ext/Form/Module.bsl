
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	Элементы.ГруппаПроверкаШаг3.Видимость = Не РазделениеВключено;
	ВключитьРежимЛогирования();
	ОтборДатаЛогирования = ТекущаяДатаСеанса();
	ПрочитатьНастройки();
	УстановитьОтборРегистраДанныеЗвонков();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" И Источник = "ОбщиеНастройкиТелефонии" Тогда
		ПрочитатьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ВыключитьРежимЛогирования();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьЛогЗапросов();
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьЛогиНаФорме();
	ПоказатьСобранныеЛоги();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДляТехподдержки(Команда)
	
	АдресДанных = СохранитьСобранныеЛогиВФайл();
	ИмяФайлаПоУмолчанию = НСтр("ru='telephony.logs'");
	ФайловаяСистемаКлиент.СохранитьФайл(, АдресДанных, ИмяФайлаПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСобытие(Команда)
	
	Если Элементы.СозданныеЗвонки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Событие = Элементы.СозданныеЗвонки.ТекущиеДанные.Событие;
	
	Если Не ЗначениеЗаполнено(Событие) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, Событие);
	
КонецПроцедуры

&НаКлиенте
Процедура Позвонить(Команда)
	
	ТелефонияКлиент.ПозвонитьПоНомеру(НомерТелефона);
	ОбновитьОтложенноЛогЗапросов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьАдресПубликации(Команда)
	Если Не ЗначениеЗаполнено(АдресПубликацииСервисаТелефонии) Тогда
		ТекстСообщения = НСтр("ru='Не заполнен адрес публикации сервиса телефонии.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "АдресПубликацииСервисаТелефонии");
		Возврат;
	КонецЕсли;
	ПроверитьАдресПубликацииСервер();
	ОбновитьОтложенноЛогЗапросов();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьНастройки()
	
	АдресПубликацииСервисаТелефонии = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония();
	ВнутреннийНомерТелефонаТекущегоПользователя = ТелефонияСервер.ВнутреннийНомерПользователя();
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьСобранныеЛоги()
	
	ТекстовыйДокумент.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеЗвонковЛогирование.Дата КАК Дата,
	|	ДанныеЗвонковЛогирование.ИдентификаторЗапроса КАК ИдентификаторЗапроса,
	|	ДанныеЗвонковЛогирование.ОписаниеЗапроса КАК ОписаниеЗапроса
	|ИЗ
	|	РегистрСведений.ДанныеЗвонковЛогирование КАК ДанныеЗвонковЛогирование
	|ГДЕ
	|	НЕ ДанныеЗвонковЛогирование.ЭтоОтвет
	|	И ДанныеЗвонковЛогирование.Дата >= &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	Запрос.УстановитьПараметр("Дата", ОтборДатаЛогирования);
	
	ДанныеЗвонковЛогированиеОтветы = ДанныеЗвонковЛогированиеОтветы();
	
	ОписаниеЗапроса = Запрос.Выполнить().Выбрать();
	Пока ОписаниеЗапроса.Следующий() Цикл
		
		ОписаниеОтвета = ДанныеЗвонковЛогированиеОтветы.Найти(ОписаниеЗапроса.ИдентификаторЗапроса, "ИдентификаторЗапроса");
		
		ТекстовыйДокумент.ДобавитьСтроку("//////////////////////////////////////////////////////////////////////");
		ТекстовыйДокумент.ДобавитьСтроку(ОписаниеЗапроса.Дата);
		ТекстовыйДокумент.ДобавитьСтроку(ОписаниеЗапроса.ОписаниеЗапроса);
		Если ОписаниеОтвета <> Неопределено Тогда
			ТекстовыйДокумент.ДобавитьСтроку(Символы.ПС);
			ТекстовыйДокумент.ДобавитьСтроку(ОписаниеОтвета.Дата);
			ТекстовыйДокумент.ДобавитьСтроку(ОписаниеОтвета.ОписаниеЗапроса);
		КонецЕсли;
		ТекстовыйДокумент.ДобавитьСтроку(Символы.ПС);
		ТекстовыйДокумент.ДобавитьСтроку(Символы.ПС);
		
	КонецЦикла;
	
	УстановитьОтборРегистраДанныеЗвонков();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСобранныеЛоги()
	
	ВсеЗаписиЛога = РегистрыСведений.ДанныеЗвонковЛогирование.СоздатьНаборЗаписей();
	ВсеЗаписиЛога.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Функция СохранитьСобранныеЛогиВФайл()
	
	ТекстЗаголовок = СтрШаблон(НСтр("ru='ФАЙЛ СОЗДАН %1'"), ТекущаяДатаСеанса());
	ТекстВнутреннийНомерТекущегоПользователя = СтрШаблон(
		НСтр("ru='Внутренний номер текущего пользователя: %1'"),
		ВнутреннийНомерТелефонаТекущегоПользователя);
	
	ДокументДляТехподдержки = Новый ТекстовыйДокумент;
	ДокументДляТехподдержки.ДобавитьСтроку(ТекстЗаголовок);
	ДокументДляТехподдержки.ДобавитьСтроку(ТекстВнутреннийНомерТекущегоПользователя);
	ДокументДляТехподдержки.ДобавитьСтроку(Символы.ПС);
	ДокументДляТехподдержки.ДобавитьСтроку(Символы.ПС);
	ДокументДляТехподдержки.ДобавитьСтроку(НСтр("ru='ЛОГ:'"));
	ДокументДляТехподдержки.ДобавитьСтроку(ТекстовыйДокумент.ПолучитьТекст());
	ДокументДляТехподдержки.ДобавитьСтроку(Символы.ПС);
	ДокументДляТехподдержки.ДобавитьСтроку(Символы.ПС);
	ДокументДляТехподдержки.ДобавитьСтроку(НСтр("ru='СОЗДАННЫЕ ЗВОНКИ:'"));
	ДокументДляТехподдержки.ДобавитьСтроку(ТекстТекущихСозданныхЗвонков());
	
	ВременныйФайл = ПолучитьИмяВременногоФайла(".txt");
	ДокументДляТехподдержки.Записать(ВременныйФайл);
	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ВременныйФайл);
	АдресДанных = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, УникальныйИдентификатор);
	УдалитьФайлы(ВременныйФайл);
	
	Возврат АдресДанных;
	
КонецФункции

&НаСервере
Процедура УстановитьОтборРегистраДанныеЗвонков()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СозданныеЗвонки, "ДатаСозданияЗаписи",
		ОтборДатаЛогирования, ВидСравненияКомпоновкиДанных.БольшеИлиРавно, , Истина);
	
КонецПроцедуры

&НаСервере
Функция ДанныеЗвонковЛогированиеОтветы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеЗвонковЛогирование.Дата КАК Дата,
	|	ДанныеЗвонковЛогирование.ИдентификаторЗапроса КАК ИдентификаторЗапроса,
	|	ДанныеЗвонковЛогирование.ОписаниеЗапроса КАК ОписаниеЗапроса
	|ИЗ
	|	РегистрСведений.ДанныеЗвонковЛогирование КАК ДанныеЗвонковЛогирование
	|ГДЕ
	|	ДанныеЗвонковЛогирование.ЭтоОтвет";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура ОчиститьЛогиНаФорме()
	
	УдалитьСобранныеЛоги();	
	ТекстовыйДокумент.Очистить();	
	ОтборДатаЛогирования = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаСервере
Процедура ВключитьРежимЛогирования()
	
	УстановитьПривилегированныйРежим(Истина);
	Константы.РежимОтладкиТелефонии.Установить(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ВыключитьРежимЛогирования()
	
	УстановитьПривилегированныйРежим(Истина);
	Константы.РежимОтладкиТелефонии.Установить(Ложь);
	УдалитьСобранныеЛоги();
	
КонецПроцедуры

&НаСервере
Функция ТекстТекущихСозданныхЗвонков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеЗвонков.Событие КАК Событие,
	|	ДанныеЗвонков.ИдентификаторЗвонкаВАТС КАК ИдентификаторЗвонкаВАТС,
	|	ДанныеЗвонков.ВходящееИсходящее КАК ВходящееИсходящее,
	|	ДанныеЗвонков.ДатаСобытия КАК ДатаСобытия,
	|	ДанныеЗвонков.НачалоРазговора КАК НачалоРазговора,
	|	ДанныеЗвонков.ДлительностьРазговора КАК ДлительностьРазговора,
	|	ДанныеЗвонков.Контрагент КАК Контрагент,
	|	ДанныеЗвонков.Неотвеченный КАК Неотвеченный,
	|	ДанныеЗвонков.НомерКому КАК НомерКому,
	|	ДанныеЗвонков.НомерОтКого КАК НомерОтКого,
	|	ДанныеЗвонков.НомерОрганизации КАК НомерОрганизации,
	|	ДанныеЗвонков.СсылкаНаЗаписьРазговора КАК СсылкаНаЗаписьРазговора,
	|	ДанныеЗвонков.ВызовЗавершен КАК ВызовЗавершен,
	|	ДанныеЗвонков.Сотрудник КАК Сотрудник,
	|	ДанныеЗвонков.ТребуетсяЗапроситьЗаписьРазговора КАК ТребуетсяЗапроситьЗаписьРазговора
	|ИЗ
	|	РегистрСведений.ДанныеЗвонков КАК ДанныеЗвонков
	|ГДЕ
	|	ДанныеЗвонков.ДатаСозданияЗаписи > &ДатаСозданияЗаписи";
	Запрос.УстановитьПараметр("ДатаСозданияЗаписи", ОтборДатаЛогирования);
	ДанныеЗвонков = Запрос.Выполнить().Выбрать();
	
	КолонкиРегистра = Новый Массив;
	МетаданныеРегистра = Метаданные.РегистрыСведений.ДанныеЗвонков;
	Для каждого Измерение Из МетаданныеРегистра.Измерения Цикл
		КолонкиРегистра.Добавить(Измерение.Имя);
	КонецЦикла;
	Для каждого Измерение Из МетаданныеРегистра.Ресурсы Цикл
		КолонкиРегистра.Добавить(Измерение.Имя);
	КонецЦикла;
	
	Строки = Новый Массив;
	
	Пока ДанныеЗвонков.Следующий() Цикл
		
		Строки.Добавить(Символы.ПС);
		Для каждого ИмяКолонки Из КолонкиРегистра Цикл
			Строки.Добавить(СтрШаблон("%1: %2", ИмяКолонки, Строка(ДанныеЗвонков[ИмяКолонки])));
		КонецЦикла;
		Строки.Добавить(Символы.ПС);
		
	КонецЦикла;
	
	Возврат СтрСоединить(Строки, Символы.ПС);
	
КонецФункции

&НаСервере
Процедура ПроверитьАдресПубликацииСервер()
	
	ТелефонияСервер.ПроверитьАдресПубликацииСервисаТелефонии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЛогЗапросов()
	
	ПоказатьСобранныеЛоги();
	Элементы.СозданныеЗвонки.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтложенноЛогЗапросов()
	
	ПодключитьОбработчикОжидания("ОбновитьЛогЗапросов", 4, Истина);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюРаздельныйКонтрольСтатусовВладельцевКМ(Параметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюРаздельныйКонтрольСтатусовВладельцевКМ(Параметры) Экспорт
	
	МетаданныеОбъекта  = Метаданные.Константы.ЗапрашиватьДанныеСервисаИСМП;
	ПолноеИмяОбъекта   = МетаданныеОбъекта.ПолноеИмя();
	ОбработкаЗавершена = Истина;
	
	ПредыдущееЗначениеКонтроляСтатусов        = Константы.ЗапрашиватьДанныеСервисаИСМП.Получить();
	ПредыдущееЗначениеКонтроляСтатусовРозница = Константы.УдалитьКонтролироватьСтатусыКодовМаркировкиВРозницеИСМП.Получить();
	
	Если ПредыдущееЗначениеКонтроляСтатусов
		Или ПредыдущееЗначениеКонтроляСтатусовРозница Тогда
		
		ПараметрыКонтроля = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ПараметрыКонтроля();
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки       = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки       = Блокировка.Добавить(Метаданные.Константы.НастройкиСканированияКодовМаркировкиИСМП.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НастройкиСканирования = ИнтеграцияИСМПВызовСервера.НастройкиСканированияКодовМаркировки();
		
			ГруппаНастроекКонтрольСтатусов = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
				НастройкиСканирования,
				ПараметрыКонтроля.ПараметрыКонтроляСтатусов);
			ГруппаНастроекКонтрольСтатусов.Включено   = Истина;
			ГруппаНастроекКонтрольСтатусов.Исключения = Новый Соответствие();
			
			ГруппаНастроекКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСервер.ЗначениеГруппыНастроек(
				НастройкиСканирования,
				ПараметрыКонтроля.ПараметрыКонтроляВладельцев);
			ГруппаНастроекКонтрольВладельцев.Включено   = Истина;
			ГруппаНастроекКонтрольВладельцев.Исключения = Новый Соответствие();
			
			УчитываемыеВидыТабак = ИнтеграцияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции(Ложь, Истина);
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка
			|ИЗ
			|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары
			|ГДЕ
			|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка.Проведен
			|	И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN <> """"
			|	И ПОДСТРОКА(ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN, 1, 3) <> ""029""
			|	И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка.ВидПродукции В (&УчитываемыеВидыТабак)";
			
			Запрос.УстановитьПараметр("УчитываемыеВидыТабак", УчитываемыеВидыТабак);
			
			ДобавитьИсключениеКонтрольВладельцевТабакАТП = (Не Запрос.Выполнить().Пустой());
			УчитываемыеВидыМаркируемойПродукции          = ИнтеграцияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции();
			ВсеОперации                                  = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ДопустимыеВидыОпераций().ВыгрузитьЗначения();
			ВариантОтображенияКонтрольСтатусов           = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции();
			ВариантОтображенияКонтрольВладельцев         = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции();
			
			ОперацииИсключений        = Новый Массив();
			ОперацииРозничнойТорговли = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ОперацииРозничнойТорговли();
			
			Если ПредыдущееЗначениеКонтроляСтатусов
				И Не ПредыдущееЗначениеКонтроляСтатусовРозница Тогда
				
				ОперацииИсключений                   = ОперацииРозничнойТорговли;
				ВариантОтображенияКонтрольСтатусов   = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				
			ИначеЕсли ПредыдущееЗначениеКонтроляСтатусовРозница
				И Не ПредыдущееЗначениеКонтроляСтатусов Тогда
				
				ОперацииИсключений                   = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВсеОперации, ОперацииРозничнойТорговли);
				ВариантОтображенияКонтрольСтатусов   = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				
			КонецЕсли;
			
			Для Каждого ВидПродукции Из УчитываемыеВидыМаркируемойПродукции Цикл
				
				Для Каждого Операция Из ОперацииИсключений Цикл
					
					НастройкаПараметровСканированияСлужебныйКлиентСервер.ДобавитьВИсключение(
						ГруппаНастроекКонтрольСтатусов,
						ВидПродукции,
						Операция);
					
					НастройкаПараметровСканированияСлужебныйКлиентСервер.ДобавитьВИсключение(
						ГруппаНастроекКонтрольВладельцев,
						ВидПродукции,
						Операция);
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если ДобавитьИсключениеКонтрольВладельцевТабакАТП Тогда
				
				Для Каждого ВидПродукции Из УчитываемыеВидыТабак Цикл
					
					ГруппаНастроекКонтрольВладельцев.Исключения.Вставить(ВидПродукции, Новый Соответствие());
					
				КонецЦикла;
				
				ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции();
				
			КонецЕсли;
			
			Если УчитываемыеВидыМаркируемойПродукции.Количество() = 1 Тогда
				Если ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции() Тогда
					ВариантОтображенияКонтрольВладельцев = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				КонецЕсли;
				Если ВариантОтображенияКонтрольСтатусов = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоВидамПродукции() Тогда
					ВариантОтображенияКонтрольСтатусов = НастройкаПараметровСканированияСлужебныйКлиентСерверПовтИсп.ВариантОтображенияПоОперациям();
				КонецЕсли;
			КонецЕсли;
			
			ГруппаНастроекКонтрольВладельцев.ВариантОтображения = ВариантОтображенияКонтрольВладельцев;
			ГруппаНастроекКонтрольСтатусов.ВариантОтображения   = ВариантОтображенияКонтрольСтатусов;
				
			ЗначениеКонстантыНастроек = Новый ХранилищеЗначения(НастройкиСканирования);
			Константы.НастройкиСканированияКодовМаркировкиИСМП.Установить(ЗначениеКонстантыНастроек);
			Константы.ЗапрашиватьДанныеСервисаИСМП.Установить(Истина);
			
			ОбновитьПовторноИспользуемыеЗначения();
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОбработкаЗавершена = Ложь;
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать переход на раздельный контроль статусов и кодов макрировки по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,,
			                         ТекстСообщения);
			
		КонецПопытки;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область Служебные

&НаСервере
Процедура ПоказатьСтрокиПользователю()
	
	РекомендуемоеКоличество = 500;
	
	КоличествоВидимыхСтрок = ?(КэшЗначений.Первые500Строк, МИН(РекомендуемоеКоличество, ЦеныНоменклатуры.Количество()), ЦеныНоменклатуры.Количество());
	
	РасчетныеДанные.Очистить();
	Для Счетчик = 0 По КоличествоВидимыхСтрок - 1 Цикл
		
		СтрокаДанных = ЦеныНоменклатуры.Получить(Счетчик);
		
		СтрокаФормы = РасчетныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаФормы, СтрокаДанных);
		
		СтрокаДанных.Автор = КэшЗначений.Ответственный;
		СтрокаДанных.УИДСтроки = СтрокаФормы.ПолучитьИдентификатор();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НовыеЦеныЗаПериод(Ошибки)
	
	ЦеныНоменклатуры.Очистить();
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ПериодЗаписи",		ПериодЗаписи);
	ПараметрыРасчета.Вставить("ВидЦенРасчетный",	ВидЦенРасчетный);
	ПараметрыРасчета.Вставить("НомерОчередиЦен",	0);
	ПараметрыРасчета.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыРасчета.Вставить("АдресВХранилище",	Неопределено);
	
	КурсВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ПараметрыРасчета.ВидЦенРасчетный.ВалютаЦены, ПараметрыРасчета.ПериодЗаписи);
	ПараметрыРасчета.Вставить("ВидЦенРасчетныйКурс", ?(ЗначениеЗаполнено(КурсВалюты.Курс), КурсВалюты.Курс, 1));
	ПараметрыРасчета.Вставить("ВидЦенРасчетныйКратность", ?(ЗначениеЗаполнено(КурсВалюты.Кратность), КурсВалюты.Кратность, 1));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", НачалоДня(ПараметрыРасчета.ПериодЗаписи));
	Запрос.УстановитьПараметр("ВидЦенРасчетный", ПараметрыРасчета.ВидЦенРасчетный);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОчередьЦен.ПериодЗаписи КАК ПериодЗаписи,
	|	ОчередьЦен.НомерОчередиЦен КАК НомерОчередиЦен,
	|	ОчередьЦен.ВидЦенРасчетный КАК ВидЦенРасчетный
	|ИЗ
	|	РегистрСведений.ОчередьРасчетаЦен КАК ОчередьЦен
	|ГДЕ
	|	ОчередьЦен.ПериодЗаписи = &Период
	|	И ОчередьЦен.ВидЦенРасчетный = &ВидЦенРасчетный
	|	И НЕ ОчередьЦен.ПересчетВыполнен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодЗаписи,
	|	НомерОчередиЦен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПараметрыРасчета.НомерОчередиЦен = Выборка.НомерОчередиЦен;
		
		ЦеныРассчитаны	= Ложь;
		ОписаниеОшибки	= "";
		Если ВидЦенРасчетный.ТипВидаЦен = Перечисления.ТипыВидовЦен.ДинамическийПроцент Тогда
			
			ЦенообразованиеСервер.РасчетДинамическихЦенНаПроцент(ПараметрыРасчета, ЦеныРассчитаны, ОписаниеОшибки, Ложь);
			
		ИначеЕсли ВидЦенРасчетный.ТипВидаЦен = Перечисления.ТипыВидовЦен.ДинамическийФормула Тогда
			
			ЦенообразованиеСервер.РасчетДинамическихЦенПоФормуле(ПараметрыРасчета, ЦеныРассчитаны, ОписаниеОшибки, Ложь);
			
		КонецЕсли;
		
		Если ЦеныРассчитаны Тогда
			
			КэшЗначений.ЗаписиРегистраЗаПериода = ПараметрыРасчета.АдресВХранилище;
			
			ЗаписиРегистраЗаПериода = ПолучитьИзВременногоХранилища(КэшЗначений.ЗаписиРегистраЗаПериода);
			Для каждого СтрокаТаблицы Из ЗаписиРегистраЗаПериода Цикл
				
				НоваяСтрока = ЦеныНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				
				НоваяСтрока.НомерОчередиЦен = ПараметрыРасчета.НомерОчередиЦен;
				
			КонецЦикла;
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ОписаниеОшибки, "");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ФормаУтвердитьЦены.Заголовок = НСтр("ru ='Утвердить цены ('") + Строка(ЦеныНоменклатуры.Количество()) + НСтр("ru =')'");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуНаСервере()
	
	ПоказатьСтрокиПользователю();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныеЧасти(Ошибки)
	
	НовыеЦеныЗаПериод(Ошибки);
	
	ОбновитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	
	ОбновитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНовыеЦены()
	
	Если ЦеныНоменклатуры.Количество() < 1 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив(1);
	МассивСтрок[0] = ЦеныНоменклатуры[0];
	
	ЗаписиРегистраЗаПериода = ЦеныНоменклатуры.Выгрузить(МассивСтрок, "Актуальность, Период, ВидЦен, Номенклатура, Характеристика, Цена, ЕдиницаИзмерения, ВключаяХарактеристики, Автор, НомерОчередиЦен");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЦеныНоменклатуры", ЦеныНоменклатуры.Выгрузить());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатуры.Актуальность КАК Актуальность,
	|	ЦеныНоменклатуры.Период КАК Период,
	|	ЦеныНоменклатуры.ВидЦен КАК ВидЦен,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЦеныНоменклатуры.ВключаяХарактеристики КАК ВключаяХарактеристики,
	|	ЦеныНоменклатуры.Автор КАК Автор,
	|	ЦеныНоменклатуры.НомерОчередиЦен КАК НомерОчередиЦен
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	&ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Актуальность КАК Актуальность,
	|	ЦеныНоменклатуры.Период КАК Период,
	|	ЦеныНоменклатуры.ВидЦен КАК ВидЦен,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЦеныНоменклатуры.ВключаяХарактеристики КАК ВключаяХарактеристики,
	|	ЦеныНоменклатуры.Автор КАК Автор,
	|	ЦеныНоменклатуры.НомерОчередиЦен КАК НомерОчередиЦен
	|ИЗ
	|	ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерОчередиЦен
	|ИТОГИ ПО
	|	НомерОчередиЦен";
	
	ВыборкаПоНомеруОчереди = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНомеруОчереди.Следующий() Цикл
		
		ЗаписиРегистраЗаПериода.Очистить();
		
		Выборка = ВыборкаПоНомеруОчереди.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ЗаписиРегистраЗаПериода.Добавить(), Выборка);
			
		КонецЦикла;
		
		Если ЗаписиРегистраЗаПериода.Количество() > 0 Тогда
			
			ЦенообразованиеСервер.ЗаписатьЦеныИОчиститьОчередьЦен(ПериодЗаписи, ВидЦенРасчетный, ВыборкаПоНомеруОчереди.НомерОчередиЦен, ЗаписиРегистраЗаПериода);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВидЦенРасчетныйОбъект = ВидЦенРасчетный.ПолучитьОбъект();
	ВидЦенРасчетныйОбъект.ЦеныАктуальны = ОчередьЦенПустая();
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидЦенРасчетныйОбъект, Ложь, Ложь);
	
	ШаблонТекста1 = НСтр("ru ='Новые цены записаны на дату '");
	ШаблонТекста2 = НСтр("ru ='по виду цен '");
	ШаблонДаты = "[" + Формат(ПериодЗаписи, "ДЛФ=DD") + "] ";
	ШаблонВидаЦен = "[" + Строка(ВидЦенРасчетный) + "].";
	
	МассивФорматированногоТекста = Новый Массив;
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонТекста1, , ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонДаты, Новый Шрифт(,,Истина), ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонТекста2, , ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	МассивФорматированногоТекста.Добавить(Новый ФорматированнаяСтрока(ШаблонВидаЦен, Новый Шрифт(,,Истина), ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет));
	
	Элементы.НадписьУведомление.Заголовок = Новый ФорматированнаяСтрока(МассивФорматированногоТекста);
	
	ЭтотОбъект.Доступность = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НадписьУведомление", "Видимость", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаОтборы", "Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПериодыИзОчередиЦен()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ РС.ПериодЗаписи ИЗ РегистрСведений.ОчередьРасчетаЦен КАК РС 
							|ГДЕ РС.ВидЦенРасчетный = &ВидЦенРасчетный И РС.ВидЦенРасчетный.КоличествоПопытокСлужебный < 2 И НЕ РС.ВидЦенРасчетный.РассчитыватьАвтоматически
							|УПОРЯДОЧИТЬ ПО РС.ПериодЗаписи УБЫВ");
	
	Запрос.УстановитьПараметр("ВидЦенРасчетный", ВидЦенРасчетный);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Элементы.ПериодЗаписи.СписокВыбора.Добавить(Выборка.ПериодЗаписи, Формат(Выборка.ПериодЗаписи, "ДЛФ=DD"));
		Если НЕ ЗначениеЗаполнено(ПериодЗаписи) Тогда
			
			ПериодЗаписи = Выборка.ПериодЗаписи;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОчередьЦенПустая()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ РС.ПериодЗаписи ИЗ РегистрСведений.ОчередьРасчетаЦен КАК РС 
							|ГДЕ РС.ВидЦенРасчетный = &ВидЦенРасчетный И РС.ВидЦенРасчетный.КоличествоПопытокСлужебный < 2 И НЕ РС.ВидЦенРасчетный.РассчитыватьАвтоматически
							|УПОРЯДОЧИТЬ ПО РС.ПериодЗаписи УБЫВ");
	
	Запрос.УстановитьПараметр("ВидЦенРасчетный", ВидЦенРасчетный);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВидЦен", ВидЦенРасчетный);
	
	Если НЕ ЗначениеЗаполнено(ВидЦенРасчетный) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	КэшЗначений = Новый Структура;
	КэшЗначений.Вставить("Ответственный", Пользователи.АвторизованныйПользователь()); // для передачи таблицы значений
	КэшЗначений.Вставить("ЗаписиРегистраЗаПериода", Неопределено); // адрес в хранилище
	КэшЗначений.Вставить("Первые500Строк", Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаПоказатьВсе", "Пометка", КэшЗначений.Первые500Строк);
	
	Ошибки = Неопределено;
	
	ЗаполнитьПериодыИзОчередиЦен();
	ЗаполнитьТабличныеЧасти(Ошибки);
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ПериодЗаписиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПериодЗаписи) Тогда
		
		Ошибки = Неопределено;
		ЗаполнитьТабличныеЧасти(Ошибки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияКоманд

&НаКлиенте
Процедура УтвердитьЦены(Команда)
	
	ЗаписатьНовыеЦены();
	
	Оповестить("ЗаписьРасчетныхЦен");
	
КонецПроцедуры

&НаКлиенте
Процедура Первые500Строк(Команда)
	
	КэшЗначений.Первые500Строк			= НЕ КэшЗначений.Первые500Строк;
	Элементы.ФормаПоказатьВсе.Пометка	= КэшЗначений.Первые500Строк;
	
	ОбновитьФорму();
	
КонецПроцедуры

#КонецОбласти
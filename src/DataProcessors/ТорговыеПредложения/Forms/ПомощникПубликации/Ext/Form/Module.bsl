
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НавигационнаяСсылка = "e1cib/app/" + ЭтотОбъект.ИмяФормы;
	
	Если Не ТорговыеПредложения.ПравоНастройкиТорговыхПредложений(Истина)
		Или Не БизнесСеть.ПравоНастройкиОбменаДокументами(Истина) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ТорговыеПредложенияСлужебный.ИспользоватьФункционалПубликации() Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Отсутствует функциональность публикации торговых предложений.'"),,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Ссылка", Соглашение);
	ОбновитьДанныеФормы();
	
	Элементы.ГруппаДлительнаяОперация.Видимость = Ложь;
	
	ТорговыеПредложенияСлужебный.НайтиДлительнуюОперациюТорговогоСинхронизацииТорговыхПредложений(ДлительнаяОперация);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбменБизнесСеть") Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ТорговыеПредложения_ПослеЗаписи"
		Или ИмяСобытия = "ТорговыеПредложение_СопоставлениеНоменклатуры"
		Или ИмяСобытия = "СинхронизацияТорговыхПредложений_ПриИзменении"
		Или ИмяСобытия = "ТорговыеПредложения_ИзменениеСинхронизации" Тогда
		ОбновитьСтатистикуПубликации(Ложь, Истина, Ложь, Ложь);
	ИначеЕсли ИмяСобытия = "БизнесСеть_РегистрацияОрганизаций" Тогда
		ОбновитьСтатистикуПубликации(Ложь, Ложь, Ложь, Истина);
	ИначеЕсли ИмяСобытия = "ТорговыеПредложения_СохранениеРегионовАбонента" Тогда
		ОбновитьСтатистикуПубликации(Ложь, Ложь, Истина, Ложь);
	ИначеЕсли Источник = "ИспользоватьСервисРаботаСНоменклатурой" Тогда
		ОбновитьСтатистикуПубликации(Истина, Ложь, Истина, Ложь);
	ИначеЕсли ИмяСобытия = "РаботаСНоменклатурой_СопоставлениеНоменклатуры" Тогда	
		ОбновитьСтатистикуПубликации(Истина, Ложь, Ложь, Ложь);
	КонецЕсли;
	
	ТорговыеПредложенияКлиент.ОбработкаОповещенияСинхронизацииТорговыхПредложений(ИмяСобытия, Источник, Параметр, ДлительнаяОперация, ПараметрыСинхронизации());
	Элементы.РезультатНадпись.Видимость = ДлительнаяОперация = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоказатьСкрытьПояснения(ПоказыватьПояснения, Элементы);
	ОбновитьСтатистикуПубликации(Истина, Истина, Истина, Истина);
	ТорговыеПредложенияКлиент.ОтобразитьСостояниеСинхронизацииТорговыхПредложений(ПараметрыСинхронизации(), ДлительнаяОперация);
	Элементы.РезультатНадпись.Видимость = ДлительнаяОперация = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УсловияПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаОтчетаПубликуемыхТоваровНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	ОчиститьСообщения();
	ОткрытьФорму("Отчет.ПубликуемыеТорговыеПредложения.Форма", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьОрганизациюПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическиСинхронизироватьПриИзменении(Элемент)
	
	УстановитьПараметрРегламентногоЗадания("Использование", АвтоматическаяПубликация);
	Элементы.РасписаниеПубликации.Доступность = АвтоматическаяПубликация;
	Элементы.НастроитьРасписание.Доступность     = АвтоматическаяПубликация;
	Оповестить("СинхронизацияТорговыхПредложений_ПриИзменении");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияЗаголовокНажатие(Элемент)
	
	ОчиститьСообщения();
	
	БизнесСетьСлужебныйКлиент.ОткрытьФормуРегистрацииОрганизаций();
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговыеПредложенияЗаголовокНажатие(Элемент)
	
	ОчиститьСообщения();
	ТорговыеПредложенияКлиент.ОткрытьФормуСпискаПубликаций(Неопределено, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьНоменклатуруСервисаНажатие(Элемент)
	
	ОчиститьСообщения();
	
	Если Не ИспользоватьСопоставление1СНоменклатура Тогда 
		
		ОбщийМодульРаботаСНоменклатуройКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСНоменклатуройКлиент");
		
		ПараметрыОткрытия = ОбщийМодульРаботаСНоменклатуройКлиент.ПараметрыФормыПанелиАдминистрирования();
		ПараметрыОткрытия.Раздел          =    "НастройкиРаботаСНоменклатурой";
		ПараметрыОткрытия.Заголовок       = НСтр("ru = 'Сервис 1С:Номенклатура'");
		ПараметрыОткрытия.ОписаниеРаздела = 
			НСтр("ru = 'Для возможности сопоставления номенклатуры необходимо включить использование сервиса 1С:Номенклатура.'");
			
		ОбщийМодульРаботаСНоменклатуройКлиент.ОткрытьФормуПанелиАдминистрирования(ПараметрыОткрытия, ЭтотОбъект, 
			Новый ОписаниеОповещения("СопоставитьНоменклатуруСервисаПродолжение", ЭтотОбъект), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	Иначе
		
		ОткрытьФормуСопоставленияНоменклатурыСервиса();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьНоменклатуруСРубрикаторомНажатие(Элемент)
	
	ОчиститьСообщения();
	
	Если Не ИспользоватьСопоставление1СНоменклатура Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Раздел",    "НастройкиРаботаСНоменклатурой");
		ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru = 'Сервис 1С:Номенклатура'"));
		ПараметрыОткрытия.Вставить("ОписаниеРаздела",
			НСтр("ru = 'Для возможности сопоставления номенклатуры необходимо включить использование сервиса 1С:Номенклатура.'"));
		
		
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПанельАдминистрирования", ПараметрыОткрытия, ЭтотОбъект,,,, 
			Новый ОписаниеОповещения("СопоставитьНоменклатуруСРубрикаторомПродолжение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	Иначе
		
		ОткрытьФормуСопоставленияНоменклатурыСРубрикатором();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииТорговыхПредложенийГиперссылкаНажатие(Элемент)
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИспользоватьСтатистикуПубликации", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьСтатистикуПубликацииПоОповещению", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыОткрытияФормы = ТорговыеПредложенияКлиент.ПараметрыОткрытияФормы();
	
	ПараметрыОткрытияФормы.ВладелецФормы      = ЭтотОбъект;
	ПараметрыОткрытияФормы.ОписаниеОповещения = ОписаниеОповещения;
	
	ТорговыеПредложенияКлиент.ОткрытьФормуСостоянияПубликацииТоваров(ПараметрыОткрытияФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияДлительнаяОперацияНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьФоновоеЗадание" Тогда
		СтандартнаяОбработка = Ложь;
		ТорговыеПредложенияВызовСервера.ОтменитьФоновоеЗадание(ДлительнаяОперация);
		Элементы.ГруппаДлительнаяОперация.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СинхронизироватьТорговыеПредложения(Команда)
	Элементы.РезультатНадпись.Видимость         = Ложь;
	ТорговыеПредложенияКлиент.ВыполнитьСинхронизациюТорговыхПредложений(ПараметрыСинхронизации(), ДлительнаяОперация);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСтатистикуПубликации(Истина, Истина, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ТекущееРасписание());
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	ДиалогРасписания.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПояснения(Команда)
	
	ПоказыватьПояснения = Не ПоказыватьПояснения;
	ПоказатьСкрытьПояснения(ПоказыватьПояснения, Элементы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасписаниеПубликации

&НаСервере
Функция ПолучитьПараметрРегламентногоЗадания(ИмяПараметра, ЗначениеПоУмолчанию)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.СинхронизацияТорговыхПредложений);
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		ПараметрыЗадания.Вставить("ИмяМетода", Метаданные.РегламентныеЗадания.СинхронизацияТорговыхПредложений.ИмяМетода);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(ПараметрыЗадания);
	Для каждого Задание Из СписокЗаданий Цикл
		Возврат Задание[ИмяПараметра];
	КонецЦикла;
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции

&НаСервере
Функция ТекущееРасписание()
	
	Возврат ПолучитьПараметрРегламентногоЗадания("Расписание", Новый РасписаниеРегламентногоЗадания);
	
КонецФункции

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрРегламентногоЗадания("Расписание", Расписание);
	Элементы.РасписаниеПубликации.Заголовок = Расписание;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрРегламентногоЗадания(ИмяПараметра, ЗначениеПараметра)
	
	УстановитьПривилегированныйРежим(Истина);
	БизнесСеть.ИзменитьРегламентноеЗадание(Метаданные.РегламентныеЗадания.СинхронизацияТорговыхПредложений.Имя,
		ИмяПараметра, ЗначениеПараметра);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеФормы

&НаСервере
Процедура ОбновитьДанныеФормы(АдресРезультата = Неопределено)
	
	Элементы.СопоставлениеНоменклатурыОбновление.Видимость = Ложь;
	
	// Получение статистики
	Если АдресРезультата <> Неопределено
		И АдресРезультатаПодсчетаСтатистики <> АдресРезультата
		И ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		АдресРезультатаПодсчетаСтатистики = АдресРезультата;
		Статистика = БизнесСеть.ПолучитьУдалитьИзВременногоХранилища(АдресРезультатаПодсчетаСтатистики);
		ПараметрыВыполнения = Статистика.ПараметрыВыполнения;
	ИначеЕсли Статистика = Неопределено Тогда
		Статистика = Новый Структура;
		
		ПараметрыВыполнения = Новый Структура;
		ПараметрыВыполнения.Вставить("ИспользоватьСтатистикуСопоставления", Истина);
		ПараметрыВыполнения.Вставить("ИспользоватьСтатистикуПубликации"   , Истина);
		ПараметрыВыполнения.Вставить("ИспользоватьСведенияАбонента"       , Истина);
		ПараметрыВыполнения.Вставить("ИспользоватьРегистрациюОрганизации" , Истина);
		
	КонецЕсли;
	
#Область СтатистикаСопоставления
	
	Если ПараметрыВыполнения.ИспользоватьСтатистикуСопоставления Тогда
	
		КоличествоТоваров                    = 0;
		КоличествоСопоставленнойНоменклатуры = 0;
		КоличествоСопоставленныхКатегорий    = 0;
		КоличествоНесопоставленных           = 0;
		
		Если ТипЗнч(Статистика) = Тип("Структура") Тогда
			КоличествоТоваров = ?(Статистика.Свойство("КоличествоПозиций"), Статистика.КоличествоПозиций, КоличествоТоваров);
			КоличествоСопоставленнойНоменклатуры = ?(Статистика.Свойство("КоличествоСопоставлено1СНоменклатура"),
				Статистика.КоличествоСопоставлено1СНоменклатура, КоличествоСопоставленнойНоменклатуры);
			КоличествоСопоставленныхКатегорий = ?(Статистика.Свойство("КоличествоСопоставленоБизнесСеть"),
				Статистика.КоличествоСопоставленоБизнесСеть, КоличествоСопоставленныхКатегорий);
		КонецЕсли;
		
		Подсистема1СНоменклатураСуществует = ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.РаботаСНоменклатурой");
		
		Элементы.СопоставлениеНоменклатуры.Видимость = Подсистема1СНоменклатураСуществует;
		
		Если Подсистема1СНоменклатураСуществует Тогда
			
			ИспользоватьСопоставление1СНоменклатура = ПолучитьФункциональнуюОпцию("ИспользоватьСервисРаботаСНоменклатурой");
			КоличествоНесопоставленнойНоменклатуры = 0;
		
			// Сопоставление с 1C:Номенклатура
			Элементы.СопоставлениеНоменклатурыУспех.Видимость = КоличествоСопоставленнойНоменклатуры <> 0
				И Не ПустаяСтрока(АдресРезультатаПодсчетаСтатистики);
			Элементы.СопоставлениеНоменклатурыОшибка.Видимость = КоличествоСопоставленнойНоменклатуры = 0
				И Не ПустаяСтрока(АдресРезультатаПодсчетаСтатистики);
			
			Если КоличествоСопоставленнойНоменклатуры Тогда
				ПроцентСопоставленоНоменклатуры = Окр(КоличествоСопоставленнойНоменклатуры/КоличествоТоваров*100, 1);
				Элементы.СопоставлениеНоменклатурыУспехНадпись.Заголовок = СтрШаблон(НСтр("ru = 'Сопоставлено %1%% (%2)'"),
					ПроцентСопоставленоНоменклатуры , КоличествоСопоставленнойНоменклатуры);
			Иначе
				ПроцентСопоставленоНоменклатуры = 0;
			КонецЕсли;
		
			Если ПроцентСопоставленоНоменклатуры = 100 Тогда 
				Элементы.СопоставлениеКатегорийЗаголовок.Подсказка = НСтр("ru = 'Сопоставление не требуется'");
			Иначе	
				Элементы.СопоставлениеКатегорийЗаголовок.Подсказка = "";
				ПроцентСопоставленоКатегорий = ?(КоличествоТоваров,
					Окр(КоличествоСопоставленныхКатегорий/КоличествоТоваров * 100, 1), 0);
				Элементы.СопоставлениеКатегорийУспехНадпись.Заголовок = СтрШаблон(НСтр("ru = 'Сопоставлено %1%% (%2)'"),
					ПроцентСопоставленоКатегорий, КоличествоСопоставленныхКатегорий);
			КонецЕсли;
		

			Если ПроцентСопоставленоНоменклатуры = 100 Тогда 
				Элементы.СопоставлениеНоменклатуры.РасширеннаяПодсказка.Заголовок = СтрШаблон(НСтр("ru = 'Сопоставлено с 1С:Номенклатура %1%% (%2)'"),
					ПроцентСопоставленоНоменклатуры, КоличествоСопоставленнойНоменклатуры);
			Иначе		
				Элементы.СопоставлениеНоменклатуры.РасширеннаяПодсказка.Заголовок = СтрШаблон(НСтр("ru = 'Сопоставлено с 1С:Номенклатура %1%% (%2), сопоставлено по категориям %3%% (%4)'"),
					ПроцентСопоставленоНоменклатуры, КоличествоСопоставленнойНоменклатуры, ПроцентСопоставленоКатегорий, КоличествоСопоставленныхКатегорий);
			КонецЕсли;
			
			Элементы.СопоставлениеНоменклатуры.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
			Элементы.СопоставлениеНоменклатуры.Поведение = ПоведениеОбычнойГруппы.Всплывающая;
			Элементы.СопоставлениеНоменклатуры.ОтображатьЗаголовок = Истина;
		КонецЕсли;
		
		Элементы.СопоставлениеРазноеГруппа.Видимость = Не ПустаяСтрока(АдресРезультатаПодсчетаСтатистики);
		
		Если Не ПустаяСтрока(АдресРезультатаПодсчетаСтатистики) Тогда
			КоличествоНесопоставленных = КоличествоТоваров - (КоличествоСопоставленнойНоменклатуры
			+ КоличествоСопоставленныхКатегорий);
			Элементы.СопоставлениеРазноеЗаголовок.Заголовок = СтрШаблон(НСтр("ru = 'Несопоставлено %1%% (%2)'"),
				?(КоличествоТоваров, Окр(КоличествоНесопоставленных/КоличествоТоваров*100, 1), 0),
				КоличествоНесопоставленных);
		КонецЕсли;
		
		Элементы.СопоставлениеРазноеЗаголовок.Видимость = КоличествоНесопоставленных > 0;	
		Элементы.СопоставлениеРазноеПояснение.Видимость = КоличествоНесопоставленных > 0;	 
		Элементы.СопоставлениеКатегорийУспех.Видимость = КоличествоСопоставленныхКатегорий <> 0
			И Не ПустаяСтрока(АдресРезультатаПодсчетаСтатистики);
		Элементы.СопоставлениеКатегорийОшибка.Видимость = КоличествоНесопоставленных > 0 
			И КоличествоСопоставленныхКатегорий = 0 И Не ПустаяСтрока(АдресРезультатаПодсчетаСтатистики);
	
	КонецЕсли; 
	
#КонецОбласти
	
#Область СтатистикаПубликации
	
	Если ПараметрыВыполнения.ИспользоватьСтатистикуПубликации Тогда
	
		Успех = Ложь;
		ТребуетсяСинхронизация = Ложь;
		Ошибка = Ложь;
		
		ОшибкаСинхронизации          = ?(Статистика.Свойство("ОшибкаСинхронизации"), Статистика.ОшибкаСинхронизации, 0);
		СинхронизированоЧастично     = ?(Статистика.Свойство("СинхронизированоЧастично"), Статистика.СинхронизированоЧастично, 0);
		Синхронизировано             = ?(Статистика.Свойство("Синхронизировано"), Статистика.Синхронизировано, 0);
		КоличествоТорговыхСоглашений = ?(Статистика.Свойство("КоличествоТорговыхСоглашений"), Статистика.КоличествоТорговыхСоглашений, 0);
		КоличествоОрганизаций        = ?(Статистика.Свойство("КоличествоОрганизаций"), Статистика.КоличествоОрганизаций, 0);
		ТорговоеПредложение          = ?(Статистика.Свойство("ТорговоеПредложение"), Статистика.ТорговоеПредложение, Неопределено);
		
		
		Если ОшибкаСинхронизации + СинхронизированоЧастично > 0 Тогда
			Ошибка = Истина;
			Элементы.ТорговыеПредложенияОшибкаНадпись.Заголовок = СтрШаблон(НСтр("ru = 'Есть ошибки синхронизации (%1)'"), 
				ОшибкаСинхронизации + СинхронизированоЧастично);
		ИначеЕсли ТребуетсяСинхронизация > 0 Тогда
			ТребуетсяСинхронизация = Истина;
			Элементы.ТорговыеПредложенияТребуетсяСинхронизацияНадпись.Заголовок = СтрШаблон(НСтр("ru = 'Требуется синхронизация (%1)'"),
				ТребуетсяСинхронизация);
		ИначеЕсли Синхронизировано > 0 Тогда
			Успех = Истина;
			Элементы.ТорговыеПредложенияУспехНадпись.Заголовок = СтрШаблон(НСтр("ru = 'Торговые предложения настроены (%1)'"), 
				Синхронизировано);
		Иначе
			Ошибка = Истина;
			Элементы.ТорговыеПредложенияОшибкаНадпись.Заголовок = НСтр("ru = 'Требуется настройка'");
		КонецЕсли; 
		
		Элементы.ТорговыеПредложенияУспех.Видимость = Успех;
		Элементы.ТорговыеПредложенияТребуетсяСинхронизация.Видимость = ТребуетсяСинхронизация;
		Элементы.ТорговыеПредложенияОшибка.Видимость = Ошибка;
		
		// Подсчет количества опубликованных и ошибочных позиций
		Элементы.ПозицииТорговыхПредложенийПояснениеГруппа.Видимость          = Истина;
		Элементы.ПозицииТорговыхПредложенийДлительнаяОперацияГруппа.Видимость = Ложь;
		Элементы.ТорговыеПредложенияОбновление.Видимость                      = Ложь;
		
		КоличествоОпубликованных = 0;
		КоличествоОшибок         = 0;
		
		Если ТипЗнч(Статистика) = Тип("Структура") И Статистика.Свойство("КоличествоОпубликованных") Тогда
			КоличествоОпубликованных = Статистика.КоличествоОпубликованных;
		КонецЕсли; 
		
		Если ТипЗнч(Статистика) = Тип("Структура") И Статистика.Свойство("КоличествоОшибок") Тогда
			КоличествоОшибок = Статистика.КоличествоОшибок;
		КонецЕсли;
		
		ЧастиЗаголовка = Новый Массив;
		
		Если КоличествоОпубликованных = 0 И КоличествоОшибок = 0 Тогда
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Отсутствуют предложения в сервисе'"), , ЦветаСтиля.ПоясняющийТекст));
		ИначеЕсли КоличествоОшибок = 0 Тогда
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'Опубликовано: %1'"), КоличествоОпубликованных), , ЦветаСтиля.ПоясняющийТекст));
		ИначеЕсли КоличествоОпубликованных = 0 И КоличествоОшибок = 1000 Тогда
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Ошибок: более 999'"), , ЦветаСтиля.ПоясняющийОшибкуТекст));
		ИначеЕсли КоличествоОпубликованных = 0 Тогда
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'Ошибок: %1'"), КоличествоОшибок), , ЦветаСтиля.ПоясняющийОшибкуТекст));
		ИначеЕсли КоличествоОшибок = 1000 Тогда
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'Опубликовано: %1'"), КоличествоОпубликованных), , ЦветаСтиля.ПоясняющийТекст));
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(", ", , ЦветаСтиля.ПоясняющийТекст));
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'ошибок: более 999'"), , ЦветаСтиля.ПоясняющийОшибкуТекст));
		Иначе
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'Опубликовано: %1'"), КоличествоОпубликованных), , ЦветаСтиля.ПоясняющийТекст));
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(", ", , ЦветаСтиля.ПоясняющийТекст));
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(НСтр("ru = 'ошибок: %1'"), КоличествоОшибок), , ЦветаСтиля.ПоясняющийОшибкуТекст));
		КонецЕсли;
		
		Элементы.ПозицииТорговыхПредложенийПояснение.Заголовок = Новый ФорматированнаяСтрока(ЧастиЗаголовка);
	
		ЕстьБлокирующиеОшибки = КоличествоТоваров = 0
			ИЛИ КоличествоОрганизаций = 0
			ИЛИ КоличествоТорговыхСоглашений = 0;
			
		Элементы.ОпубликоватьТорговыеПредложения.Доступность = Не ЕстьБлокирующиеОшибки;
		
		Если Не ТорговоеПредложение = Неопределено Тогда
			ЭлементСостояния = Элементы.РезультатНадпись;
			ТорговыеПредложения.ОбновитьДекорациюСостоянияПубликации(ТорговоеПредложение, ЭлементСостояния);
			Если ПустаяСтрока(ЭлементСостояния.Заголовок) Тогда
				ЭлементСостояния.Заголовок = НСтр("ru = 'Новая публикация'");
			КонецЕсли;
			Элементы.РезультатНадпись.Гиперссылка = Ложь;
		Иначе
			Элементы.РезультатНадпись.Заголовок = "";
		КонецЕсли;
	КонецЕсли;
	
#КонецОбласти
	
#Область РегистрацияОрганизаций
	
	Если ПараметрыВыполнения.ИспользоватьРегистрациюОрганизации Тогда
		
		Элементы.ОрганизацияОбновление.Видимость = Ложь;
		
		КоличествоОрганизаций = ?(Статистика.Свойство("КоличествоОрганизаций"), Статистика.КоличествоОрганизаций, 0);
		ИспользуетсяНесколькоОрганизаций = ?(Статистика.Свойство("ИспользуетсяНесколькоОрганизаций"), 
			Статистика.ИспользуетсяНесколькоОрганизаций, Ложь);
		
		Элементы.ОрганизацияУспех.Видимость = КоличествоОрганизаций <> 0;
		Элементы.ОрганизацияОшибка.Видимость  = КоличествоОрганизаций = 0;
		
		Если КоличествоОрганизаций <> 0 Тогда
			Если ИспользуетсяНесколькоОрганизаций Тогда
				Элементы.ОрганизацияУспехНадпись.Заголовок = СтрШаблон(НСтр("ru = 'Организации зарегистрированы (%1)'"),
				КоличествоОрганизаций);
			Иначе
				Элементы.ОрганизацияУспехНадпись.Заголовок = НСтр("ru = 'Организация зарегистрирована'");
			КонецЕсли;
		ИначеЕсли ИспользуетсяНесколькоОрганизаций Тогда
			Элементы.ОрганизацияОшибкаНадпись.Заголовок = НСтр("ru = 'Организации не зарегистрированы'");
		Иначе
			Элементы.ОрганизацияОшибкаНадпись.Заголовок = НСтр("ru = 'Организация не зарегистрирована'");
		КонецЕсли;
		
	КонецЕсли;
	
#КонецОбласти
	
#Область АвтоматическаяПубликация
	
	// Получение расписание задания публикации торговых предложений.
	АвтоматическаяПубликация = ?(Статистика.Свойство("АвтоматическаяПубликация"), Статистика.АвтоматическаяПубликация, Ложь);
	
	Элементы.РасписаниеПубликации.Заголовок   = ТекущееРасписание();
	Элементы.РасписаниеПубликации.Доступность = АвтоматическаяПубликация;
	Элементы.НастроитьРасписание.Доступность     = АвтоматическаяПубликация;
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Элементы.НастроитьРасписание.Видимость     = Ложь;
		Элементы.РасписаниеПубликации.Видимость = Ложь;
	КонецЕсли;
	
#КонецОбласти 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуПубликации(ИспользоватьСтатистикуСопоставления, ИспользоватьСтатистикуПубликации,
		ИспользоватьСведенияАбонента, ИспользоватьРегистрациюОрганизации)
	
	Если ИспользоватьСтатистикуСопоставления Тогда
		
		Элементы.СопоставлениеНоменклатурыУспех.Видимость  = Ложь;
		Элементы.СопоставлениеНоменклатурыОшибка.Видимость = Ложь;
		
		Элементы.СопоставлениеКатегорийУспех.Видимость  = Ложь;
		Элементы.СопоставлениеКатегорийОшибка.Видимость = Ложь;
		
		Элементы.СопоставлениеНоменклатурыОбновление.Видимость = Истина;
		
		Элементы.СопоставлениеНоменклатуры.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		
	КонецЕсли;
	
	Если ИспользоватьСтатистикуПубликации Тогда
		
		Элементы.ПозицииТорговыхПредложенийПояснениеГруппа.Видимость          = Ложь;
		
		Элементы.ТорговыеПредложенияУспех.Видимость                           = Ложь;
		Элементы.ТорговыеПредложенияТребуетсяСинхронизация.Видимость          = Ложь;
		Элементы.ТорговыеПредложенияОшибка.Видимость                          = Ложь;
		
		Элементы.ТорговыеПредложенияОбновление.Видимость                      = Истина;
		
		Элементы.ПозицииТорговыхПредложенийДлительнаяОперацияГруппа.Видимость = Истина;
		
	КонецЕсли;
	
	Если ИспользоватьРегистрациюОрганизации Тогда
		
		Элементы.ОрганизацияУспех.Видимость      = Ложь;
		Элементы.ОрганизацияОшибка.Видимость     = Ложь;
		
		Элементы.ОрганизацияОбновление.Видимость = Истина;
		
	КонецЕсли;
	
	ПараметрыПроцедуры = ТорговыеПредложенияКлиент.ПараметрыОбновленияСтатистикиСинхронизации(ЭтотОбъект);
	ПараметрыПроцедуры.ИспользоватьСтатистикуСопоставления = ИспользоватьСтатистикуСопоставления;
	ПараметрыПроцедуры.ИспользоватьСтатистикуПубликации    = ИспользоватьСтатистикуПубликации;
	ПараметрыПроцедуры.ИспользоватьСведенияАбонента        = ИспользоватьСведенияАбонента;
	ПараметрыПроцедуры.ИспользоватьРегистрациюОрганизации  = ИспользоватьРегистрациюОрганизации;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьСтатистикуПубликацииЗавершение", ЭтотОбъект);
	ТорговыеПредложенияКлиент.ОбновитьСтатистикуСинхронизации(ОповещениеОЗавершении, ПараметрыПроцедуры, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуПубликацииПоОповещению(Результат, ДополнительныеПараметры) Экспорт
	
	ИспользоватьСтатистикуСопоставления = Ложь;
	ИспользоватьСтатистикуПубликации    = Ложь;
	
	Если Не ДополнительныеПараметры = Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("ИспользоватьСтатистикуСопоставления") Тогда
			ИспользоватьСтатистикуСопоставления = ДополнительныеПараметры.ИспользоватьСтатистикуСопоставления;
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("ИспользоватьСтатистикуПубликации") Тогда
			ИспользоватьСтатистикуПубликации = ДополнительныеПараметры.ИспользоватьСтатистикуПубликации;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьСтатистикуПубликации(ИспользоватьСтатистикуСопоставления, ИспользоватьСтатистикуПубликации, Ложь, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуПубликацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Результат.Статус <> "Выполнено" Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьДанныеФормы(Результат.АдресРезультата);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьСкрытьПояснения(ПоказыватьПояснения, Элементы)
	
	Элементы.ПоказатьСкрытьПояснения.Заголовок = ?(ПоказыватьПояснения, НСтр("ru = 'Скрыть пояснения'"),
		НСтр("ru = 'Показать пояснения'"));
	Элементы.ПояснениеОрганизация.Видимость         = ПоказыватьПояснения;
	Элементы.ПояснениеСинхронизация.Видимость       = ПоказыватьПояснения;
	Элементы.ПояснениеКатегорийСопоставление.Видимость       = ПоказыватьПояснения;
	Элементы.ПояснениеТорговыеПредложения.Видимость = ПоказыватьПояснения;
	Элементы.ПояснениеНоменклатурыСопоставление.Видимость = ПоказыватьПояснения;
	
КонецПроцедуры

#КонецОбласти

#Область СопоставлениеНоменклатуры

&НаКлиенте
Процедура СопоставитьНоменклатуруСРубрикаторомПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Неопределено И Результат.ИспользоватьСервисРаботаСНоменклатурой Тогда
		ОткрытьФормуСопоставленияНоменклатурыСРубрикатором();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьНоменклатуруСервисаПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Неопределено И Результат.ИспользоватьСервисРаботаСНоменклатурой Тогда
		
		ОткрытьФормуСопоставленияНоменклатурыСервиса();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставленияНоменклатурыСервиса()
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИспользоватьСтатистикуСопоставления", Истина);
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьСтатистикуПубликацииПоОповещению", ЭтотОбъект, ДополнительныеПараметры);
	МодульРаботаСНоменклатуройКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСНоменклатуройКлиент");
	ПараметрыОткрытия = МодульРаботаСНоменклатуройКлиент.ПараметрыФормыСопоставленийНоменклатуры("ТорговыеПредложения");
	МодульРаботаСНоменклатуройКлиент.ОткрытьФормуСопоставленияНоменклатуры(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСопоставленияНоменклатурыСРубрикатором()
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИспользоватьСтатистикуСопоставления", Истина);
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьСтатистикуПубликацииПоОповещению", ЭтотОбъект, ДополнительныеПараметры);
	МодульРаботаСНоменклатуройКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСНоменклатуройКлиент");
	ПараметрыОткрытия = МодульРаботаСНоменклатуройКлиент.ПараметрыФормыСопоставленияНоменклатурыСРубрикатором();
	МодульРаботаСНоменклатуройКлиент.ОткрытьФормуСопоставленияНоменклатурыСРубрикатором(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СинхронизацияТорговыхПредложений

&НаКлиенте
Функция ПараметрыСинхронизации()
	
	ПараметрыСинхронизации = ТорговыеПредложенияКлиент.ПараметрыСинхронизацииТорговыхПредложений(ЭтотОбъект);
	ПараметрыСинхронизации.ВыводитьПрогрессВыполнения     = Истина;
	ПараметрыСинхронизации.ГруппаДлительнойОперации       = Элементы.ГруппаДлительнаяОперация;
	ПараметрыСинхронизации.НадписьПрогресса               = Элементы.ДекорацияДлительнаяОперацияНадпись;
	ПараметрыСинхронизации.ОповещениеОЗавершении          = 
		Новый ОписаниеОповещения("СинхронизироватьТорговыеПредложенияЗавершение", ЭтотОбъект);
	
	Возврат ПараметрыСинхронизации;
	
КонецФункции

&НаКлиенте
Процедура СинхронизироватьТорговыеПредложенияЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	Элементы.РезультатНадпись.Видимость         = Истина;
	ДлительнаяОперация                          = Неопределено;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

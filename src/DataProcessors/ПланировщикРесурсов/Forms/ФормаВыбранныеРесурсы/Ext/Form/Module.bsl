
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТаблицаРесурсов = Новый ТаблицаЗначений;
	ТаблицаРесурсов = Параметры.ВыбранныеРесурсы.Выгрузить();
	ТаблицаРесурсов.Свернуть("Ресурс, НачалоПериода, ОкончаниеПериода, ВидПовтора, Пн, Вт, Ср, Чт, Пт, Сб, Вс
							|, ИнтервалПовторения, ЗавершатьПосле, ВидЗавершения, Время, ДатаПовторения, ПоследнийДеньМесяца
							|, ДеньНеделиМесяца,НомерНеделиМесяца, КонтролироватьШаг, КратностьПланирования","Загрузка");
	
	Для Каждого СтрокаРесурс Из ТаблицаРесурсов Цикл 
		
		НоваяСтрока = ВыбранныеРесурсы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СТрокаРесурс);
		
	КонецЦикла;
	
	ЗаполнитьДлительностьВТаблицеВыбранныхРесурсов();
	ПланированиеРесурсовУНФ.УстановитьУсловноеОформлениеРесурсы("ВыбранныеРесурсы", ЭтотОбъект);
	
	ЭтоПодбор = Параметры.Свойство("ЭтоПодбор") И Параметры.ЭтоПодбор;
	
	Если ЭтоПодбор Тогда
		Элементы.ГруппаПодменю.Видимость = Ложь;
		Элементы.ПеренестиВДокумент.Видимость = Истина;
	Иначе
		
		Элементы.СоздатьЗаказНаПроизводство.Видимость = Параметры.ТолькоПоПодсистеме2;
		Элементы.ДобавитьВЗаказНаПроизводство.Видимость = Параметры.ТолькоПоПодсистеме2;
		
		Элементы.СоздатьСобытие.Видимость = Параметры.ТолькоПоПодсистеме3;
		Элементы.ДобавитьВСобытие.Видимость = Параметры.ТолькоПоПодсистеме3;
		
		Элементы.СоздатьЗаказНаряд.Видимость = Параметры.ТолькоПоПодсистеме1;
		Элементы.ДобавитьВЗаказНаряд.Видимость = Параметры.ТолькоПоПодсистеме1;
		Элементы.ПеренестиВДокумент.Видимость = Ложь;
		
		Элементы.ГруппаПодменю.Доступность = ВыбранныеРесурсы.Количество();
		
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Контрагент = Параметры.Контрагент;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьПовторов(Истина);
	СформироватьПредставлениеРасписания();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗакрытиеСКоманды Тогда
		
		Если ЕстьОшибкиЗаполнения() Тогда Возврат КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
		ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗаказНаряд(Команда)
	
	ЗначенияЗаполнения = Новый Структура("ВидОперации, Контрагент", ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд"), Контрагент);
	
	ПараметрыОткрытия = Новый Структура("ВыбранныеРесурсы, ЗначенияЗаполнения",ВыбранныеРесурсы, ЗначенияЗаполнения);
	ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда", ПараметрыОткрытия, ЭтаФорма);

	ВыбранныеРесурсы.Очистить();
	СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
	ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказНаПроизводство(Команда)
	
	ПараметрыОткрытия = Новый Структура("ВыбранныеРесурсы, ОткрытИзПланировщика",ВыбранныеРесурсы, Истина);
	ОткрытьФорму("Документ.ЗаказНаПроизводство.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);

	ВыбранныеРесурсы.Очистить();
	СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
	ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЗаказНаПроизводство(Команда)
	ПараметрыОткрытия = Новый Структура();
	ОткрытьФорму("Документ.ЗаказНаПроизводство.Форма.ФормаВыбора", ПараметрыОткрытия,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЗаказНаряд(Команда)
	ПараметрыОткрытия = Новый Структура("РежимВыбора",Истина);
	ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаСпискаЗаказНаряда", ПараметрыОткрытия, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКорзину(Команда)
	ЗакрытиеСКоманды = Истина;
	ВыбранныеРесурсы.Очистить();
	СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
	ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Если ЕстьОшибкиЗаполнения() Тогда Возврат КонецЕсли;
	
	ЗакрытиеСКоманды = Истина;
	
	СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
	ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСобытие(Команда)
	ПараметрыОткрытия = Новый Структура("ВыбранныеРесурсы, ОткрытИзПланировщика",ВыбранныеРесурсы, Истина);
	ОткрытьФорму("Документ.Событие.Форма.ФормаСобытияЗаписьКонтрагента", ПараметрыОткрытия, ЭтаФорма);
	
	ВыбранныеРесурсы.Очистить();
	СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
	ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСобытие(Команда)
	ПараметрыОткрытия = Новый Структура("РежимВыбора, ТипСобытия", Истина, ПредопределенноеЗначение("Перечисление.ТипыСобытий.Запись"));
	ОткрытьФорму("Документ.Событие.ФормаСписка", ПараметрыОткрытия, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Контроль(Команда)
	КонтрольНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ЗакрытиеСКоманды = Истина;
	
	СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы, ЗакрытьФорму", ВыбранныеРесурсы, Истина);
	ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыбранныеРесурсыПриИзменении(Элемент)
	
	Для Каждого СтрокаТаблицы Из ВыбранныеРесурсы Цикл
		СтрокаТаблицы.РасписаниеПредставление = ?(СтрокаТаблицы.РасписаниеПредставление = "", "Не повторять", СтрокаТаблицы.РасписаниеПредставление);
	КонецЦикла;
	
	УстановитьДоступностьПовторов();
	Элементы.ГруппаПодменю.Доступность = ВыбранныеРесурсы.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыВидЗавершенияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	Если ТекущиеДанные.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоДате") Тогда
		ТекущиеДанные.ЗавершатьПосле = ТекущиеДанные.ОкончаниеПериода;
		ТекущиеДанные.РасшифровкаСчетчика = "";
	ИначеЕсли ТекущиеДанные.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоСчетчику") Тогда
		ТекущиеДанные.ЗавершатьПосле = 1;
		ТекущиеДанные.РасшифровкаСчетчика = "раза";
	Иначе
		ТекущиеДанные.РасшифровкаСчетчика = "";
		ТекущиеДанные.ЗавершатьПосле = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыОкончаниеПериодаПриИзменении(Элемент)
	ПриИзмененииПериода()
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыОкончаниеПериодаВремяПриИзменении(Элемент)
	ПриИзмененииПериода();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыЗавершатьПослеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	Если ТекущиеДанные.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоСчетчику")
		И ЗначениеЗаполнено(ТекущиеДанные.ЗавершатьПосле) Тогда 
		
		РасшифровкаСчетчика = ПредметИсчисления(
		ТекущиеДанные.ЗавершатьПосле,
		НСтр("ru = 'раза'"),
		НСтр("ru = 'раз'"),
		НСтр("ru = 'раз'"),
		"м");
		
		ТекущиеДанные.РасшифровкаСчетчика = РасшифровкаСчетчика;
	Иначе
		ТекущиеДанные.РасшифровкаСчетчика = "";
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.ЗавершатьПосле) = Тип("Дата")
		И ЗначениеЗаполнено(ТекущиеДанные.ЗавершатьПосле)
		И ЗначениеЗаполнено(ТекущиеДанные.НачалоПериода)
		И ТекущиеДанные.ЗавершатьПосле<НачалоДня(ТекущиеДанные.НачалоПериода)
		Тогда
		ТекущиеДанные.ЗавершатьПосле=НачалоДня(ТекущиеДанные.НачалоПериода)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыДниПриИзменении(Элемент)
	ЗадатьОкончаниеПериода();
	УстановитьДоступностьПовторов();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыВремяПриИзменении(Элемент)
	ЗадатьОкончаниеПериода();
	УстановитьДоступностьПовторов();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияРедактированияРасписания(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда Возврат КонецЕсли;
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	ВидПовтора = РезультатВыполнения.ВидПовтора;
	
	ТекущиеДанные.ВидПовтора = ВидПовтора;
	
	Если ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять") Тогда
		 ПланированиеРесурсовУНФКлиент.ОчиститьДанныеСтроки(ТекущиеДанные, Ложь);
		 СформироватьПредставлениеРасписания();
		 Возврат;
	 КонецЕсли;
	 
	ТекущиеДанные.ИнтервалПовторения = РезультатВыполнения.ИнтервалПовторения;
	ТекущиеДанные.Пн = РезультатВыполнения.Пн;
	ТекущиеДанные.Вт = РезультатВыполнения.Вт;
	ТекущиеДанные.Ср = РезультатВыполнения.Ср;
	ТекущиеДанные.Чт = РезультатВыполнения.Чт;
	ТекущиеДанные.Пт = РезультатВыполнения.Пт;
	ТекущиеДанные.Сб = РезультатВыполнения.Сб;
	ТекущиеДанные.Вс = РезультатВыполнения.Вс;
	ТекущиеДанные.ПоследнийДеньМесяца = РезультатВыполнения.ПоследнийДеньМесяца;
	ТекущиеДанные.ДатаПовторения = РезультатВыполнения.ДатаПовторения;
	ТекущиеДанные.ДеньНеделиМесяца = РезультатВыполнения.ДеньНеделиМесяца;
	ТекущиеДанные.НомерНеделиМесяца = РезультатВыполнения.НомерНеделиМесяца;
	ТекущиеДанные.НомерМесяца = РезультатВыполнения.НомерМесяца;
	
	СформироватьПредставлениеРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыРасписаниеЗагрузкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	ДатаСтроки = День(ТекущиеДанные.НачалоПериода);
	
	ПараметрыОповещения = Новый Структура;
	
	Оповещение = Новый ОписаниеОповещения("ПослеОкончанияРедактированияРасписания", ЭтотОбъект, ПараметрыОповещения);
	
	СтруктураПовторов = Новый Структура("ИнтервалПовторения, Пн, Вт, Ср, Чт, Пт, Сб, Вс, ПоследнийДеньМесяца, ДатаПовторения, ДеньНеделиМесяца, ДатаСтроки, ТекДеньНедели, НомерНеделиМесяца, ПериодСтроки, НомерМесяца"
										,ТекущиеДанные.ИнтервалПовторения, ТекущиеДанные.Пн, ТекущиеДанные.Вт, ТекущиеДанные.Ср
										,ТекущиеДанные.Чт,ТекущиеДанные.Пт, ТекущиеДанные.Сб, ТекущиеДанные.Вс, ТекущиеДанные.ПоследнийДеньМесяца
										,ТекущиеДанные.ДатаПовторения, ТекущиеДанные.ДеньНеделиМесяца, ДатаСтроки, ДеньНедели(ТекущиеДанные.НачалоПериода), ТекущиеДанные.НомерНеделиМесяца, ТекущиеДанные.НачалоПериода, ТекущиеДанные.НомерМесяца);
	
	ПараметрыОткрытия = Новый Структура("Повторяемость, СтруктураПовторов", ТекущиеДанные.ВидПовтора, СтруктураПовторов);
	
	ОткрытьФорму("Обработка.ПланировщикРесурсов.Форма.ФормаРедактированияРасписания",ПараметрыОткрытия, ЭтаФорма,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыНачалоПериодаПриИзменении(Элемент)
	ПриИзмененииПериода(Истина)
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыНачалоПериодаВремяПриИзменении(Элемент)
	ПриИзмененииПериода(Истина)
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если Не ВыбранноеЗначение = Неопределено Тогда 
		Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			ПараметрыОткрытия = Новый Структура("Ключ, ВыбранныеРесурсы, ОткрытИзПланировщика",ВыбранноеЗначение, ВыбранныеРесурсы, Истина);
			ОткрытьФорму("Документ.ЗаказНаПроизводство.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
		КонецЕсли;
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ПараметрыОткрытия = Новый Структура("Ключ, ВыбранныеРесурсы, ОткрытИзПланировщика",ВыбранноеЗначение, ВыбранныеРесурсы, Истина);
			ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда", ПараметрыОткрытия, ЭтаФорма);
		КонецЕсли;
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Событие") Тогда
			ПараметрыОткрытия = Новый Структура("Ключ, ВыбранныеРесурсы, ОткрытИзПланировщика",ВыбранноеЗначение, ВыбранныеРесурсы, Истина);
			ОткрытьФорму("Документ.Событие.Форма.ФормаСобытияЗаписьКонтрагента", ПараметрыОткрытия, ЭтаФорма);
		КонецЕсли;
		
		ВыбранныеРесурсы.Очистить();
		СтруктураПараметровЗакрытия = Новый Структура("ВыбранныеРесурсы", ВыбранныеРесурсы);
		ЭтаФорма.Закрыть(СтруктураПараметровЗакрытия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеРасписания()
	
	Для Каждого ТекущиеДанные Из ВыбранныеРесурсы Цикл
		
		ВыбранныеДниНедели = ПланированиеРесурсовУНФКлиент.ПредставлениеДнейНедели(ТекущиеДанные);
		
		ДополнениеПоМесяцуГоду = "";
		
		Если ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно")
			ИЛИ ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно") Тогда
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ДатаПовторения) Тогда
				
				ДополнениеПоМесяцуГоду = СтрШаблон(НСтр("ru = ', каждое %1 %2.'"), Строка(ТекущиеДанные.ДатаПовторения), ПланированиеРесурсовУНФКлиент.ПолучитьМесяцПоНомеру(ТекущиеДанные.НомерМесяца));
				
			ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ДеньНеделиМесяца) Тогда
				
				Если ПланированиеРесурсовУНФКлиент.ЭтоПоследняяНеделяМесяца(ТекущиеДанные.НачалоПериода) Тогда
					
					ДополнениеПоМесяцуГоду = СтрШаблон(НСтр("ru = ', в послед. %1 месяца'"), ПланированиеРесурсовУНФКлиент.СоответствиеНомераДнюНедели(ТекущиеДанные.ДеньНеделиМесяца))
					
				Иначе
					
				НомерНеделиМесяца = НеделяГода(ТекущиеДанные.НачалоПериода)-НеделяГода(НачалоМесяца(ТекущиеДанные.НачалоПериода))+1;
				ДополнениеПоМесяцуГоду = СтрШаблон(НСтр("ru = ' %1 каждой %2 недели'"), ПланированиеРесурсовУНФКлиент.СоответствиеНомераДнюНедели(ТекущиеДанные.ДеньНеделиМесяца), Строка(НомерНеделиМесяца));
				
			КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.ПоследнийДеньМесяца = Истина Тогда
				ДополнениеПоМесяцуГоду = НСтр("ru = ', последний день месяца.'");
			КонецЕсли;
			
		КонецЕсли;
		
		Междометие = ?(ТекущиеДанные.ВидПовтора = "Еженедельно", НСтр("ru='каждую'"), НСтр("ru='каждый'"));
		
		Окончание = "";
		
		Если ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Еженедельно") Тогда
			Окончание = НСтр("ru='неделю'")
		ИначеЕсли ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежедневно") Тогда
			Окончание = НСтр("ru='день'")
		ИначеЕсли ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно") Тогда
			Окончание = НСтр("ru='месяц'")
		ИначеЕсли ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно") Тогда
			Окончание = НСтр("ru='год'")
		КонецЕсли;
		
		Если Не ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять")
			И ЗначениеЗаполнено(ТекущиеДанные.ВидПовтора) Тогда
			РасписаниеПредставление = Строка(ТекущиеДанные.ВидПовтора)+", "+Междометие+" "+Строка(ТекущиеДанные.ИнтервалПовторения)+
			" "+ Окончание+ВыбранныеДниНедели+ДополнениеПоМесяцуГоду;
		Иначе
			РасписаниеПредставление = НСтр("ru='Не повторять'");
		КонецЕсли;
		
		ТекущиеДанные.РасписаниеПредставление = РасписаниеПредставление;
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьПовторов(ОткрытиеФормы = Ложь)
	
	Если ОткрытиеФормы Тогда
		
		Для Каждого СтрокаВыбранныеРесурсы Из ВыбранныеРесурсы Цикл
			
			СтрокаВыбранныеРесурсы.РасписаниеПредставление = ?(СтрокаВыбранныеРесурсы.РасписаниеПредставление = "", "Не повторять", СтрокаВыбранныеРесурсы.РасписаниеПредставление);
			
			Если ЗначениеЗаполнено(СтрокаВыбранныеРесурсы.НачалоПериода) И ЗначениеЗаполнено(СтрокаВыбранныеРесурсы.ОкончаниеПериода) Тогда
				
				СтрокаВыбранныеРесурсы.ПериодРазличный = ?(Не НачалоДня(СтрокаВыбранныеРесурсы.НачалоПериода) = НачалоДня(СтрокаВыбранныеРесурсы.ОкончаниеПериода), Истина, Ложь);
				
				Если НачалоДня(СтрокаВыбранныеРесурсы.НачалоПериода) = НачалоДня(СтрокаВыбранныеРесурсы.ОкончаниеПериода) Тогда
					СтрокаВыбранныеРесурсы.ПовторыДоступны = Истина;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	ТекущиеДанные.ПовторыДоступны = Ложь;
	ТекущиеДанные.ПериодРазличный = Ложь;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.НачалоПериода) И ЗначениеЗаполнено(ТекущиеДанные.ОкончаниеПериода) Тогда
		
		ТекущиеДанные.ПериодРазличный = ?(Не НачалоДня(ТекущиеДанные.НачалоПериода) = НачалоДня(ТекущиеДанные.ОкончаниеПериода), Истина, Ложь);
		
		Если НачалоДня(ТекущиеДанные.НачалоПериода) = НачалоДня(ТекущиеДанные.ОкончаниеПериода) Тогда
			ТекущиеДанные.ПовторыДоступны = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроконтролироватьШагПланирования(ТекущиеДанные, ЭтоДатаНачала = Ложь, ИзменениеВремени = Ложь)
	
	КратностьПланирования = ТекущиеДанные.КратностьПланирования;
	
	ОкончаниеПериода = ?(ТекущиеДанные.ОкончаниеПериода = КонецДня(ТекущиеДанные.ОкончаниеПериода), ТекущиеДанные.ОкончаниеПериода +1, ТекущиеДанные.ОкончаниеПериода);
	
	Если ТекущиеДанные.КонтролироватьШаг И ЗначениеЗаполнено(КратностьПланирования) Тогда
		
		РазностьДат = ОкончаниеПериода - ТекущиеДанные.НачалоПериода;
		
		КратностьПланированияВСек = КратностьПланирования*60;
		КоличествоВхожденийКратностиВИнтервал = Окр(РазностьДат/КратностьПланированияВСек,0, РежимОкругления.Окр15как20);
		
		Если ЭтоДатаНачала Тогда
			ТекущиеДанные.НачалоПериода = ОкончаниеПериода - ?(КоличествоВхожденийКратностиВИнтервал <= 0,1,КоличествоВхожденийКратностиВИнтервал) * КратностьПланированияВСек;
		Иначе
			ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.НачалоПериода + ?(КоличествоВхожденийКратностиВИнтервал <= 0,1,КоличествоВхожденийКратностиВИнтервал) * КратностьПланированияВСек;
		КонецЕсли;
		
		ДлительностьВМинутах = (ТекущиеДанные.ОкончаниеПериода - ТекущиеДанные.НачалоПериода)/60;
		
		ТекущиеДанные.Дни = 0;
		ТекущиеДанные.Время = 0;
		
		Если ДлительностьВМинутах >= 1440 Тогда
			ТекущиеДанные.Дни = Цел(ДлительностьВМинутах/1440);
		КонецЕсли;
		
		ТекущиеДанные.Время = Дата(1,1,1)+((ДлительностьВМинутах - ТекущиеДанные.Дни*1440)*60);
		
	Иначе
		
		ДлительностьВМинутах = (ОкончаниеПериода - ТекущиеДанные.НачалоПериода)/60;
		
		Если Не ИзменениеВремени Тогда
			
			ТекущиеДанные.Дни = 0;
			ТекущиеДанные.Время = 0;
			
			Если ДлительностьВМинутах >= 1440 Тогда
				ТекущиеДанные.Дни = Цел(ДлительностьВМинутах/1440);
			КонецЕсли;
			
			ТекущиеДанные.Время = Дата(1,1,1)+((ДлительностьВМинутах - ТекущиеДанные.Дни*1440)*60);
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеДанные.ОкончаниеПериода = ?(НачалоДня(ТекущиеДанные.ОкончаниеПериода)> НачалоДня(ТекущиеДанные.НачалоПериода) И ТекущиеДанные.ОкончаниеПериода = НачалоДня(ТекущиеДанные.ОкончаниеПериода)
										, ТекущиеДанные.ОкончаниеПериода - 1, ТекущиеДанные.ОкончаниеПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПериода(ЭтоДатаНачала = Ложь)
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	ОстатокСекундДоКонцаДня = КонецДня(ТекущиеДанные.ОкончаниеПериода) - ТекущиеДанные.ОкончаниеПериода;
	
	Если ОстатокСекундДоКонцаДня = 59 Тогда ТекущиеДанные.ОкончаниеПериода = КонецДня(ТекущиеДанные.ОкончаниеПериода) КонецЕсли;
	Если ТекущиеДанные.ОкончаниеПериода = НачалоДня(ТекущиеДанные.ОкончаниеПериода) Тогда ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.ОкончаниеПериода-1 КонецЕсли;
	
		ТекущиеДанные.НачалоПериода = ?(Минута(ТекущиеДанные.НачалоПериода)%5 = 0, ТекущиеДанные.НачалоПериода, ТекущиеДанные.НачалоПериода - (Минута(ТекущиеДанные.НачалоПериода)%5*60));
		
		Если Не (Минута(ТекущиеДанные.ОкончаниеПериода)%5 = 0 ИЛИ ТекущиеДанные.ОкончаниеПериода = КонецДня(ТекущиеДанные.ОкончаниеПериода)) Тогда
			ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.ОкончаниеПериода - (Минута(ТекущиеДанные.ОкончаниеПериода)%5*60);
		КонецЕсли;
	
	Если ТекущиеДанные.НачалоПериода > ТекущиеДанные.ОкончаниеПериода Тогда 
		
		Если ЭтоДатаНачала Тогда 
			ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.НачалоПериода+ТекущиеДанные.КратностьПланирования*60;
		Иначе
			ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.НачалоПериода;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеДанные.НачалоПериода = ?(Секунда(ТекущиеДанные.НачалоПериода) = 0, ТекущиеДанные.НачалоПериода, ТекущиеДанные.НачалоПериода - Секунда(ТекущиеДанные.НачалоПериода));
	
	Если Не (Секунда(ТекущиеДанные.ОкончаниеПериода) = 0 ИЛИ ТекущиеДанные.ОкончаниеПериода = КонецДня(ТекущиеДанные.ОкончаниеПериода)) Тогда
		ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.ОкончаниеПериода - Секунда(ТекущиеДанные.ОкончаниеПериода)
	КонецЕсли;
		
	ПроконтролироватьШагПланирования(ТекущиеДанные, ЭтоДатаНачала);
	
	УстановитьДоступностьПовторов();
	
	Если ТекущиеДанные.ПовторыДоступны Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ДатаПовторения) Тогда
			ТекущиеДанные.ДатаПовторения = День(ТекущиеДанные.НачалоПериода);
		КонецЕсли;
		
		Если ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно") Тогда
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ДеньНеделиМесяца) Тогда
				
				Если КонецДня(ТекущиеДанные.НачалоПериода) = КонецМесяца(ТекущиеДанные.НачалоПериода) Тогда
					
					ТекущиеДанные.ДеньНеделиМесяца = 0;
					ТекущиеДанные.НомерНеделиМесяца = 0;
					ТекущиеДанные.ПоследнийДеньМесяца = Истина
					
				Иначе
					
					ТекущиеДанные.ДеньНеделиМесяца = ДеньНедели(ТекущиеДанные.НачалоПериода);
					
					ТекНомерНедели = НеделяГода(ТекущиеДанные.НачалоПериода)-НеделяГода(НачалоМесяца(ТекущиеДанные.НачалоПериода))+1;
					
					Если ЗначениеЗаполнено(ТекущиеДанные.НомерНеделиМесяца) И Не ТекущиеДанные.НомерНеделиМесяца = ТекНомерНедели  Тогда
						ТекущиеДанные.НомерНеделиМесяца = ТекНомерНедели;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ТекущиеДанные.ПоследнийДеньМесяца И Не КонецДня(ТекущиеДанные.НачалоПериода) = КонецМесяца(ТекущиеДанные.НачалоПериода) Тогда
				
				ТекущиеДанные.ПоследнийДеньМесяца = Ложь;
				ТекущиеДанные.ДеньНеделиМесяца = ДеньНедели(ТекущиеДанные.НачалоПериода);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно")
			И ЗначениеЗаполнено(ТекущиеДанные.НомерМесяца) Тогда
			
			ТекущиеДанные.НомерМесяца = Месяц(ТекущиеДанные.НачалоПериода);
			
		КонецЕсли;
		
	Иначе
		
		ТекущиеДанные.НомерНеделиМесяца = 0;
		ТекущиеДанные.НомерМесяца = 0;
		ТекущиеДанные.ДатаПовторения = 0;
		ТекущиеДанные.ДеньНеделиМесяца = 0;
		ТекущиеДанные.ПоследнийДеньМесяца = Ложь;
		
		ТекущиеДанные.ВидЗавершения = Неопределено;
		ТекущиеДанные.ЗавершатьПосле = Неопределено;
		
		ТекущиеДанные.ИнтервалПовторения = 0;
		ТекущиеДанные.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять");
		ТекущиеДанные.РасшифровкаСчетчика = "";
		
		ТекущиеДанные.Пн = Ложь;
		ТекущиеДанные.Вт = Ложь;
		ТекущиеДанные.Ср = Ложь;
		ТекущиеДанные.Чт = Ложь;
		ТекущиеДанные.Пт = Ложь;
		ТекущиеДанные.Сб = Ложь;
		ТекущиеДанные.Вс = Ложь;
		
	КонецЕсли;
	
	СформироватьПредставлениеРасписания();
	
	Если ЭтоДатаНачала Тогда
		Если ТипЗнч(ТекущиеДанные.ЗавершатьПосле) = Тип("Дата")
			И ЗначениеЗаполнено(ТекущиеДанные.ЗавершатьПосле)
			И ЗначениеЗаполнено(ТекущиеДанные.НачалоПериода)
			И ТекущиеДанные.ЗавершатьПосле<НачалоДня(ТекущиеДанные.НачалоПериода)
			Тогда
			ТекущиеДанные.ЗавершатьПосле=НачалоДня(ТекущиеДанные.НачалоПериода)
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеРесурсыОкончаниеПериодаВремяРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если Направление > 0 Тогда
		ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
		
		ОстатокСекундДоКонцаДня = КонецДня(ТекущиеДанные.ОкончаниеПериода) - ТекущиеДанные.ОкончаниеПериода;
		
		Если ОстатокСекундДоКонцаДня = 299 Тогда
			СтандартнаяОбработка = Ложь;
			ТекущиеДанные.ОкончаниеПериода = КонецДня(ТекущиеДанные.ОкончаниеПериода);
			ПриИзмененииПериода();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДлительностьВТаблицеВыбранныхРесурсов()
	
	Для Каждого СтрокаТаблицы Из ВыбранныеРесурсы Цикл
		
		ОкончаниеПериода = ?(СтрокаТаблицы.ОкончаниеПериода = КонецДня(СтрокаТаблицы.ОкончаниеПериода), СтрокаТаблицы.ОкончаниеПериода +1, СтрокаТаблицы.ОкончаниеПериода);
		
		ДлительностьВМинутах = (ОкончаниеПериода - СтрокаТаблицы.НачалоПериода)/60;
		
		СтрокаТаблицы.Дни = 0;
		
		Если ДлительностьВМинутах >= 1440 Тогда
			СтрокаТаблицы.Дни = Цел(ДлительностьВМинутах/1440);
		КонецЕсли;
		
		СтрокаТаблицы.Время = Дата(1,1,1)+((ДлительностьВМинутах - СтрокаТаблицы.Дни*1440)*60);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПредметИсчисления(Число, ПараметрыПредметаИсчисления1, ПараметрыПредметаИсчисления2, ПараметрыПредметаИсчисления3, Род)
	
	ФорматнаяСтрока = "Л = ru_RU";
	
	ПараметрыПредметаИсчисления = "%1,%2,%3,%4,,,,,0";
	ПараметрыПредметаИсчисления = СтрШаблон(
		ПараметрыПредметаИсчисления,
		ПараметрыПредметаИсчисления1,
		ПараметрыПредметаИсчисления2,
		ПараметрыПредметаИсчисления3,
		Род);
		
	ЧислоСтрокойИПредметИсчисления = НРег(ЧислоПрописью(Число, ФорматнаяСтрока, ПараметрыПредметаИсчисления));
	
	ЧислоПрописью = ЧислоСтрокойИПредметИсчисления;
	ЧислоПрописью = СтрЗаменить(ЧислоПрописью, ПараметрыПредметаИсчисления1, "");
	ЧислоПрописью = СтрЗаменить(ЧислоПрописью, ПараметрыПредметаИсчисления2, "");
		
	ПредметИсчисления = СтрЗаменить(ЧислоСтрокойИПредметИсчисления, ЧислоПрописью, "");
	
	Возврат ПредметИсчисления;
	
КонецФункции

&НаКлиенте
Процедура ЗадатьОкончаниеПериода()
	
	ТекущиеДанные = Элементы.ВыбранныеРесурсы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	СекундыПоВремени = ТекущиеДанные.Время - Дата(1,1,1);
	СекундыПоДням = ?(ЗначениеЗаполнено(ТекущиеДанные.Дни), ТекущиеДанные.Дни*1440*60, 0);
	
	ТекущиеДанные.ОкончаниеПериода = ТекущиеДанные.НачалоПериода + СекундыПоДням + СекундыПоВремени;
	ТекущиеДанные.ОкончаниеПериода = ?(Не СекундыПоДням = 0 И ТекущиеДанные.ОкончаниеПериода = НачалоДня(ТекущиеДанные.ОкончаниеПериода)
										, ТекущиеДанные.ОкончаниеПериода - 1, ТекущиеДанные.ОкончаниеПериода);
	
	ПроконтролироватьШагПланирования(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура КонтрольНаСервере()
	
	Если Не ВыбранныеРесурсы.Количество() Тогда Возврат КонецЕсли;
	
	Если ЕстьОшибкиЗаполнения() Тогда Возврат КонецЕсли;
	
	ТаблицаРесурсов = ВыбранныеРесурсы.Выгрузить(,"Ресурс");
	МассивРесурсов = ТаблицаРесурсов.ВыгрузитьКолонку("Ресурс");
	РазвернутаяТаблица = РазложитьСтрокиПоРасписанию(ВыбранныеРесурсы);
	ПериодПроверки = ПланированиеРесурсовУНФ.МаксимальныеГраницыИнтервала(РазвернутаяТаблица, "НачалоПериода", "ОкончаниеПериода");
	ПакетДанныхРесурсов = ПланированиеРесурсовУНФ.ПолучитьРасписаниеЗагрузкиРесурсов(МассивРесурсов, ПериодПроверки.НачалоИнтервала, ПериодПроверки.ОкончаниеИнтервала);
	
	РасписаниеЗагрузки = ПакетДанныхРесурсов.РасписаниеЗагрузки;
	
	ТаблицаРесурсов = РазвернутаяТаблица.Скопировать(,"Ресурс, Период, НачалоПериода, ОкончаниеПериода, Загрузка");
	ТаблицаРесурсов.Свернуть("Ресурс, Период, НачалоПериода, ОкончаниеПериода", "Загрузка");
	ТаблицаРесурсов.Сортировать("НачалоПериода Возр");
	
	МатрицаИнтервалов = ПланированиеРесурсовУНФ.СформироватьКолонкиИнтервалов();
	
	Для Каждого СтрокаТаблицы Из ТаблицаРесурсов Цикл
		
		ОкончаниеПериода = ?(СтрокаТаблицы.ОкончаниеПериода = КонецДня(СтрокаТаблицы.ОкончаниеПериода)
		, СтрокаТаблицы.ОкончаниеПериода + 1, СтрокаТаблицы.ОкончаниеПериода);
		
		КратностьПланирования = СтрокаТаблицы.Ресурс.КратностьПланирования;
		Мощность = СтрокаТаблицы.Ресурс.Мощность;
		
		ПараметрыОтбора = Новый Структура("РесурсПредприятия, Период",СтрокаТаблицы.Ресурс,СтрокаТаблицы.Период);
		НайденныеСтроки = РасписаниеЗагрузки.НайтиСтроки(ПараметрыОтбора);
		
		ДокументыЗаПериод = ПланированиеРесурсовУНФ.ТаблицаДокументовЗаПериод(НайденныеСтроки, СтрокаТаблицы.НачалоПериода, ОкончаниеПериода, КратностьПланирования);
		
		КоличествоЯчеекВИнтервале = (ОкончаниеПериода - СтрокаТаблицы.НачалоПериода)/300;
		ЗагрузкаЗаИнтервал = ПланированиеРесурсовУНФ.МаксимумПоЗагрузке(ДокументыЗаПериод, СтрокаТаблицы.НачалоПериода, ОкончаниеПериода, КоличествоЯчеекВИнтервале, МатрицаИнтервалов);
		
		ЕстьОшибки = Ложь;
		
		Если (ЗагрузкаЗаИнтервал+СтрокаТаблицы.Загрузка)>Мощность Тогда
			
			Сообщение = Новый СообщениеПользователю();
			
			Если ЗагрузкаЗаИнтервал = 0 Тогда
				Сообщение.Текст = НСтр("ru = 'Для %Ресурс% в период с %НачалоПериода% по %ОкончаниеПериода% текущее значение загрузки превышает допустимую. Доступная загрузка %ТекущаяЗагрузка%'");
				ЗагрузкаЗаИнтервал = Мощность;
			Иначе
				Сообщение.Текст = НСтр("ru = 'Для %Ресурс% в период с %НачалоПериода% по %ОкончаниеПериода% загрузка с учетом текущей превышает допустимую. Доступная загрузка %ТекущаяЗагрузка%'");
				ЗагрузкаЗаИнтервал = ?(Мощность - ЗагрузкаЗаИнтервал > 0, Мощность - ЗагрузкаЗаИнтервал, 0);
			КонецЕсли;
			
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Ресурс%", Строка(СтрокаТаблицы.Ресурс));
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%НачалоПериода%", Строка(СтрокаТаблицы.НачалоПериода));
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%ОкончаниеПериода%", Строка(СтрокаТаблицы.ОкончаниеПериода));
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%ТекущаяЗагрузка%", Строка(ЗагрузкаЗаИнтервал));
			Сообщение.Поле = "ВыбранныеРесурсы";
			Сообщение.УстановитьДанные(ЭтаФорма);
			Сообщение.Сообщить();
			
			ЕстьОшибки = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЕстьОшибки Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Ошибок не обнаружено.'");
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РазложитьСтрокиПоРасписанию(ТаблицаРасписания)
	
	РазвернутаяТаблица = Новый ТаблицаЗначений;
	
	РазвернутаяТаблица.Колонки.Добавить("Ресурс");
	РазвернутаяТаблица.Колонки.Добавить("НачалоПериода");
	РазвернутаяТаблица.Колонки.Добавить("ОкончаниеПериода");
	РазвернутаяТаблица.Колонки.Добавить("Загрузка");
	РазвернутаяТаблица.Колонки.Добавить("Период");
	
	Для Каждого СтрокаРасписания Из ТаблицаРасписания Цикл
		
		Ресурс = СтрокаРасписания.Ресурс;
		НачалоИнтервала = СтрокаРасписания.НачалоПериода;
		ОкончаниеИнтервала = СтрокаРасписания.ОкончаниеПериода;
		ЗавершатьПосле = СтрокаРасписания.ЗавершатьПосле;
		ИнтервалПовторения = СтрокаРасписания.ИнтервалПовторения;
		Загрузка = СтрокаРасписания.Загрузка;
		ИндексПовторения = 0;
		
		Если Не НачалоДня(НачалоИнтервала) = НачалоДня(ОкончаниеИнтервала) Тогда
			
			СчетчикДень = НачалоИнтервала;
			
			Пока СчетчикДень<= НачалоДня(ОкончаниеИнтервала) Цикл
				
				НоваяСтрока = РазвернутаяТаблица.Добавить();
				НоваяСтрока.НачалоПериода = СчетчикДень;
				
				НоваяСтрока.ОкончаниеПериода = ?(НачалоДня(СчетчикДень)= НачалоДня(ОкончаниеИнтервала), ОкончаниеИнтервала, КонецДня(СчетчикДень));
				
				НоваяСтрока.Загрузка = Загрузка;
				НоваяСтрока.Ресурс = Ресурс;
				НоваяСтрока.Период = НачалоДня(СчетчикДень);
				
				СчетчикДень = НачалоДня(СчетчикДень+86401);
			КонецЦикла;
			
			Продолжить;
		КонецЕсли;
		
		Если НачалоДня(НачалоИнтервала) = НачалоДня(ОкончаниеИнтервала) И СтрокаРасписания.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять") Тогда
				
				НоваяСтрока = РазвернутаяТаблица.Добавить();
				НоваяСтрока.НачалоПериода = НачалоИнтервала;
				НоваяСтрока.ОкончаниеПериода = ОкончаниеИнтервала;
				НоваяСтрока.Загрузка = Загрузка;
				НоваяСтрока.Ресурс = Ресурс;
				НоваяСтрока.Период = НачалоДня(НачалоИнтервала);
			
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРасписания.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежедневно") Тогда
			
			НачалоПериода = НачалоИнтервала;
			ОкончаниеПериода = ОкончаниеИнтервала;
			
			Если СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоДате") Тогда
				
				НачалоПериода = НачалоИнтервала;
				ОкончаниеПериода = ОкончаниеИнтервала;
				
				Пока НачалоДня(НачалоПериода) <= ЗавершатьПосле Цикл
					
					Если ИндексПовторения = 0 ИЛИ ИндексПовторения = ИнтервалПовторения Тогда
						НоваяСтрока = РазвернутаяТаблица.Добавить();
						НоваяСтрока.НачалоПериода = НачалоПериода;
						НоваяСтрока.ОкончаниеПериода = ОкончаниеПериода;
						НоваяСтрока.Загрузка = Загрузка;
						НоваяСтрока.Ресурс = Ресурс;
						НоваяСтрока.Период = НачалоДня(НачалоПериода);
						
						ИндексПовторения = 0;
					КонецЕсли;
					
					ИндексПовторения = ИндексПовторения + 1;
					НачалоПериода = НачалоПериода + 86400;
					ОкончаниеПериода = ОкончаниеПериода + 86400;
				КонецЦикла;
				
			ИначеЕсли СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоСчетчику") Тогда
				
				КоличествоПовторений = 1;
				
				Пока КоличествоПовторений <= ЗавершатьПосле Цикл
					
					Если ИндексПовторения = 0 ИЛИ ИндексПовторения = ИнтервалПовторения Тогда
						НоваяСтрока = РазвернутаяТаблица.Добавить();
						НоваяСтрока.НачалоПериода = НачалоПериода;
						НоваяСтрока.ОкончаниеПериода = ОкончаниеПериода;
						НоваяСтрока.Загрузка = Загрузка;
						НоваяСтрока.Ресурс = Ресурс;
						НоваяСтрока.Период = НачалоДня(НачалоПериода);
						
						КоличествоПовторений = КоличествоПовторений + 1;
						ИндексПовторения = 0;
					КонецЕсли;
					
					ИндексПовторения = ИндексПовторения + 1;
					НачалоПериода = НачалоПериода + 86400;
					ОкончаниеПериода = ОкончаниеПериода + 86400;
					
				КонецЦикла;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		ВремяСекНачалаИнтервала = НачалоИнтервала - НачалоДня(НачалоИнтервала);
		ВремяСекОкончанияИнтервала = ОкончаниеИнтервала - НачалоДня(ОкончаниеИнтервала);
		ГодПериода = Год(НачалоИнтервала);
		
		Если СтрокаРасписания.ВидПовтора = "Еженедельно" Тогда
			
			МассивДнейНедели = МассивДнейНеделиДляПовторов(СтрокаРасписания);
			
			НомерТекущейНедели = НеделяГода(НачалоИнтервала);
			
			Если СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоДате") Тогда
				
				НомерНеделиЗавершения = НеделяГода(ЗавершатьПосле);
				ГодЗавершения = Год(ЗавершатьПосле);
				
				Пока ГодПериода <= ГодЗавершения Цикл
					
					ПоследняяНеделяГода = НеделяГода(Дата(ГодПериода,12,31,1,1,1));
					НеделяЗавершенияЗаГодПериода = ?(ГодПериода <ГодЗавершения, ПоследняяНеделяГода,НомерНеделиЗавершения);
					
					Пока НомерТекущейНедели < НеделяЗавершенияЗаГодПериода Цикл
						
						Если ИндексПовторения = 0 ИЛИ ИндексПовторения = ИнтервалПовторения Тогда
							
							НачалоНедели = ДатаНачалаНеделиПоНомеру(ГодПериода,НомерТекущейНедели);
							
							Для Каждого ДеньНедели Из МассивДнейНедели Цикл
								
								ДатаПоНомеру = НачалоДня(НачалоНедели-1+(86400*ДеньНедели));
								
								Если ДатаПоНомеру < НачалоДня(НачалоИнтервала) Тогда Продолжить КонецЕсли;
								Если ДатаПоНомеру > НачалоДня(ЗавершатьПосле) Тогда Прервать КонецЕсли;
								
								НоваяСтрока = РазвернутаяТаблица.Добавить();
								НоваяСтрока.НачалоПериода = ДатаПоНомеру + ВремяСекНачалаИнтервала;
								НоваяСтрока.ОкончаниеПериода = ДатаПоНомеру + ВремяСекОкончанияИнтервала;
								НоваяСтрока.Загрузка = Загрузка;
								НоваяСтрока.Ресурс = Ресурс;
								НоваяСтрока.Период = НачалоДня(ДатаПоНомеру);
								
							КонецЦикла;
							
							ИндексПовторения = 0;
						КонецЕсли;
						
						ИндексПовторения = ИндексПовторения + 1;
						НомерТекущейНедели = НомерТекущейНедели +1;
					КонецЦикла;
					
					НомерТекущейНедели = 1;
					ГодПериода = ГодПериода + 1;
				КонецЦикла;
				
			ИначеЕсли СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоСчетчику") Тогда
				
				ПоследняяНеделяГода = НеделяГода(Дата(ГодПериода,12,31,1,1,1));
					
				Пока ИндексПовторения < ЗавершатьПосле Цикл
							
							НачалоНедели = ДатаНачалаНеделиПоНомеру(ГодПериода,НомерТекущейНедели);
							
							Для Каждого ДеньНедели Из МассивДнейНедели Цикл
								
								ДатаПоНомеру = НачалоДня(НачалоНедели-1+(86400*ДеньНедели));
								
								Если ДатаПоНомеру < НачалоДня(НачалоИнтервала) Тогда Продолжить КонецЕсли;
								
								НоваяСтрока = РазвернутаяТаблица.Добавить();
								НоваяСтрока.НачалоПериода = ДатаПоНомеру + ВремяСекНачалаИнтервала;
								НоваяСтрока.ОкончаниеПериода = ДатаПоНомеру + ВремяСекОкончанияИнтервала;
								НоваяСтрока.Загрузка = Загрузка;
								НоваяСтрока.Ресурс = Ресурс;
								НоваяСтрока.Период = НачалоДня(ДатаПоНомеру);
								
							КонецЦикла;
						
						ИндексПовторения = ИндексПовторения + 1;
						НомерТекущейНедели = НомерТекущейНедели +ИнтервалПовторения;
						
						Если НомерТекущейНедели > ПоследняяНеделяГода Тогда
							ГодПериода = ГодПериода+1;
							ПоследняяНеделяГода = НеделяГода(Дата(ГодПериода,12,31,1,1,1));
							НомерТекущейНедели = 1+ИнтервалПовторения;
						КонецЕсли;
						
					КонецЦикла;
					
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРасписания.ВидПовтора =ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно") Тогда
			
			Если СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоДате") Тогда
				
				РазложитьСтрокиМесяцПоДате(СтрокаРасписания,РазвернутаяТаблица);
				
			ИначеЕсли СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоСчетчику") Тогда
				
				РазложитьСтрокиМесяцПоСчетчику(СтрокаРасписания,РазвернутаяТаблица)
				
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРасписания.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно") Тогда
			
			НомерМесяца = СтрокаРасписания.НомерМесяца;
			ДатаПовторения = СтрокаРасписания.ДатаПовторения;
			
			Если СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоДате") Тогда
				
				Если ЗначениеЗаполнено(ДатаПовторения) И ЗначениеЗаполнено(НомерМесяца) Тогда
					
					ГодПериода = Год(НачалоИнтервала);
					ГодЗавершения = Год(ЗавершатьПосле);
					
					Пока ГодПериода<=ГодЗавершения Цикл
						
						СчетчикПериода = Дата(ГодПериода, НомерМесяца, ДатаПовторения, 0,0,0);
						
						НоваяСтрока = РазвернутаяТаблица.Добавить();
						НоваяСтрока.НачалоПериода = СчетчикПериода + ВремяСекНачалаИнтервала;
						НоваяСтрока.ОкончаниеПериода = СчетчикПериода + ВремяСекОкончанияИнтервала;
						НоваяСтрока.Загрузка = Загрузка;
						НоваяСтрока.Ресурс = Ресурс;
						НоваяСтрока.Период = НачалоДня(СчетчикПериода);
						
						ГодПериода = ГодПериода + ИнтервалПовторения;
					КонецЦикла;
					
				КонецЕсли;
				
			ИначеЕсли СтрокаРасписания.ВидЗавершения = ПредопределенноеЗначение("Перечисление.ВидыЗавершенияПовторовРасписания.ПоСчетчику") Тогда
				
				Если ЗначениеЗаполнено(ДатаПовторения) И ЗначениеЗаполнено(НомерМесяца) Тогда
					
					ИндексПовторения = 1;
					
					Пока ИндексПовторения<=ЗавершатьПосле Цикл
						
						СчетчикПериода = Дата(ГодПериода, НомерМесяца, ДатаПовторения, 0,0,0);
						
						НоваяСтрока = РазвернутаяТаблица.Добавить();
						НоваяСтрока.НачалоПериода = СчетчикПериода + ВремяСекНачалаИнтервала;
						НоваяСтрока.ОкончаниеПериода = СчетчикПериода + ВремяСекОкончанияИнтервала;
						НоваяСтрока.Загрузка = Загрузка;
						НоваяСтрока.Ресурс = Ресурс;
						НоваяСтрока.Период = НачалоДня(СчетчикПериода);
						
						ГодПериода = ГодПериода + ИнтервалПовторения;
						
						ИндексПовторения = ИндексПовторения + 1;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РазвернутаяТаблица;
	
КонецФункции

&НаСервере
Функция ЕстьОшибкиЗаполнения()
	
	ЕстьОшибка = Ложь;
	НомерСтроки = 1;
	
	Для Каждого СтрокаРесурс Из ВыбранныеРесурсы Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаРесурс.Ресурс) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке №%1 табл. части не указан ресурс.'"), НомерСтроки);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеРесурсы", НомерСтроки,
				"Ресурс");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , КонтекстноеПоле, , ЕстьОшибка);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаРесурс.Загрузка) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке №%1 табл. части не указано значение загрузки.'"),
				НомерСтроки);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеРесурсы", НомерСтроки,
				"Загрузка");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , КонтекстноеПоле, , ЕстьОшибка);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаРесурс.НачалоПериода) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке №%1 табл. части не указано начало периода (Старт)'"),
				НомерСтроки);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеРесурсы", НомерСтроки,
				"НачалоПериода");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , КонтекстноеПоле, , ЕстьОшибка);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаРесурс.ОкончаниеПериода) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке №%1 табл. части не указано окончание периода (Финиш).'"),
				НомерСтроки);
			КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеРесурсы", НомерСтроки,
				"ОкончаниеПериода");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , КонтекстноеПоле, , ЕстьОшибка);
		КонецЕсли;
		
		Если НачалоДня(СтрокаРесурс.НачалоПериода) = НачалоДня(СтрокаРесурс.ОкончаниеПериода) 
			И ЗначениеЗаполнено(СтрокаРесурс.ВидПовтора)
			И Не СтрокаРесурс.ВидПовтора = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять") Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаРесурс.ВидЗавершения) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке №%1 табл. части не указан вид завершения.'"),
					НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеРесурсы", НомерСтроки,
					"ВидЗавершения");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , КонтекстноеПоле, , ЕстьОшибка);
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаРесурс.ЗавершатьПосле) Тогда
				ТекстСообщения = СтрШаблон(НСтр(
					"ru = 'В строке №%1 табл. части не указан параметр окончания повторов.'"), НомерСтроки);
				КонтекстноеПоле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеРесурсы", НомерСтроки,
					"ЗавершатьПосле");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , КонтекстноеПоле, , ЕстьОшибка);
			КонецЕсли;
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки +1;
		
	КонецЦикла;
	
	Возврат ЕстьОшибка;
	
КонецФункции

&НаСервере
Процедура РазложитьСтрокиМесяцПоДате(СтрокаРасписания, РазвернутаяТаблица)
	
	Ресурс = СтрокаРасписания.Ресурс;
	
	НачалоИнтервала = СтрокаРасписания.НачалоПериода;
	ОкончаниеИнтервала = СтрокаРасписания.ОкончаниеПериода;
	ЗавершатьПосле = СтрокаРасписания.ЗавершатьПосле;
	
	ИнтервалПовторения = СтрокаРасписания.ИнтервалПовторения;
	Загрузка = СтрокаРасписания.Загрузка;
	
	ДатаПовторения = СтрокаРасписания.ДатаПовторения;
	ДеньНеделиМесяца = СтрокаРасписания.ДеньНеделиМесяца;
	
	ВремяСекНачалаИнтервала = НачалоИнтервала - НачалоДня(НачалоИнтервала);
	ВремяСекОкончанияИнтервала = ОкончаниеИнтервала - НачалоДня(ОкончаниеИнтервала);
	
	ПоследнийДеньМесяца = СтрокаРасписания.ПоследнийДеньМесяца;
	
	ТекМесяц = Месяц(НачалоИнтервала);
	ТекГод = Год(НачалоИнтервала);
	
	ОкончаниеОтсчета = НачалоМесяца(ЗавершатьПосле);
	
	Если ЗначениеЗаполнено(ДатаПовторения) Тогда
		
		СчетчикПериода = Дата(ТекГод, ТекМесяц, ДатаПовторения, 0,0,0);
		
		Пока СчетчикПериода <= ОкончаниеОтсчета Цикл
			
			ТекМесяц = ТекМесяц + ИнтервалПовторения;
			
			НоваяСтрока = РазвернутаяТаблица.Добавить();
			НоваяСтрока.НачалоПериода = СчетчикПериода + ВремяСекНачалаИнтервала;
			НоваяСтрока.ОкончаниеПериода = СчетчикПериода + ВремяСекОкончанияИнтервала;
			НоваяСтрока.Загрузка = Загрузка;
			НоваяСтрока.Ресурс = Ресурс;
			НоваяСтрока.Период = НачалоДня(СчетчикПериода);
			
			Если ТекМесяц>12 Тогда
				ТекГод = ТекГод+1;
				ТекМесяц = ТекМесяц - 12;
			КонецЕсли;
			
			СчетчикПериода = Дата(ТекГод, ТекМесяц, ДатаПовторения, 0,0,0);
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДеньНеделиМесяца) Тогда
		
		СчетчикПериода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
		
		НомерНеделиМесяца = СтрокаРасписания.НомерНеделиМесяца;
	
		Пока СчетчикПериода <= ОкончаниеОтсчета Цикл
			
			НеделяНачалаМесяцаПоСчетчику = НеделяГода(НачалоМесяца(СчетчикПериода));
			ИскомаяНеделя = НеделяНачалаМесяцаПоСчетчику + НомерНеделиМесяца - 1;
			
			ДатаНачалаНедели = ДатаНачалаНеделиПоНомеру(ТекГод,ИскомаяНеделя);
			ИскомаяДата =  НачалоДня(ДатаНачалаНедели-1+(86400*ДеньНеделиМесяца));
			
			Если ИскомаяДата > ЗавершатьПосле Тогда Прервать КонецЕсли;
			
			ТекМесяц = ТекМесяц + ИнтервалПовторения;
			
			НоваяСтрока = РазвернутаяТаблица.Добавить();
			НоваяСтрока.НачалоПериода = ИскомаяДата + ВремяСекНачалаИнтервала;
			НоваяСтрока.ОкончаниеПериода = ИскомаяДата + ВремяСекОкончанияИнтервала;
			НоваяСтрока.Загрузка = Загрузка;
			НоваяСтрока.Ресурс = Ресурс;
			НоваяСтрока.Период = НачалоДня(ИскомаяДата);
			
			Если ТекМесяц>12 Тогда
				ТекГод = ТекГод+1;
				ТекМесяц = ТекМесяц - 12;
			КонецЕсли;
			
			СчетчикПериода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Если ПоследнийДеньМесяца Тогда
		
		СчетчикПериода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
		
		Пока СчетчикПериода <= ОкончаниеОтсчета Цикл
		
			
			ИскомаяДата = НачалоДня(КонецМесяца(СчетчикПериода));
			
			Если ИскомаяДата > ЗавершатьПосле Тогда Прервать КонецЕсли;
			
			ТекМесяц = ТекМесяц + ИнтервалПовторения;
			
			НоваяСтрока = РазвернутаяТаблица.Добавить();
			НоваяСтрока.НачалоПериода = ИскомаяДата + ВремяСекНачалаИнтервала;
			НоваяСтрока.ОкончаниеПериода = ИскомаяДата + ВремяСекОкончанияИнтервала;
			НоваяСтрока.Загрузка = Загрузка;
			НоваяСтрока.Ресурс = Ресурс;
			НоваяСтрока.Период = НачалоДня(ИскомаяДата);
			
			Если ТекМесяц>12 Тогда
				ТекГод = ТекГод+1;
				ТекМесяц = ТекМесяц - 12;
			КонецЕсли;
			
			СчетчикПериода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазложитьСтрокиМесяцПоСчетчику(СтрокаРасписания, РазвернутаяТаблица)
	
	Ресурс = СтрокаРасписания.Ресурс;
	
	НачалоИнтервала = СтрокаРасписания.НачалоПериода;
	ОкончаниеИнтервала = СтрокаРасписания.ОкончаниеПериода;
	ЗавершатьПосле = СтрокаРасписания.ЗавершатьПосле;
	
	ИнтервалПовторения = СтрокаРасписания.ИнтервалПовторения;
	Загрузка = СтрокаРасписания.Загрузка;
	
	ДатаПовторения = СтрокаРасписания.ДатаПовторения;
	ДеньНеделиМесяца = СтрокаРасписания.ДеньНеделиМесяца;
	
	ВремяСекНачалаИнтервала = НачалоИнтервала - НачалоДня(НачалоИнтервала);
	ВремяСекОкончанияИнтервала = ОкончаниеИнтервала - НачалоДня(ОкончаниеИнтервала);
	
	ПоследнийДеньМесяца = СтрокаРасписания.ПоследнийДеньМесяца;
	
	ТекМесяц = Месяц(НачалоИнтервала);
	ТекГод = Год(НачалоИнтервала);

	ОкончаниеОтсчета = ЗавершатьПосле;
	СчетчикПериода = 1;
	
	Если ЗначениеЗаполнено(ДатаПовторения) Тогда
		
		ПериодВывода = Дата(ТекГод, ТекМесяц, ДатаПовторения, 0,0,0);
		
		Пока СчетчикПериода <= ОкончаниеОтсчета Цикл
			
			ТекМесяц = ТекМесяц + ИнтервалПовторения;
			
			НоваяСтрока = РазвернутаяТаблица.Добавить();
			НоваяСтрока.НачалоПериода = ПериодВывода + ВремяСекНачалаИнтервала;
			НоваяСтрока.ОкончаниеПериода = ПериодВывода + ВремяСекОкончанияИнтервала;
			НоваяСтрока.Загрузка = Загрузка;
			НоваяСтрока.Ресурс = Ресурс;
			НоваяСтрока.Период = НачалоДня(ПериодВывода);
			
			Если ТекМесяц>12 Тогда
				ТекГод = ТекГод+1;
				ТекМесяц = ТекМесяц - 12;
			КонецЕсли;
			
			ПериодВывода = Дата(ТекГод, ТекМесяц, ДатаПовторения, 0,0,0);
			СчетчикПериода = СчетчикПериода +1;
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДеньНеделиМесяца) Тогда
		
		ПериодВывода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
		
		НомерНеделиМесяца = СтрокаРасписания.НомерНеделиМесяца;
	
		Пока СчетчикПериода <= ОкончаниеОтсчета Цикл
			
			НеделяНачалаМесяцаПоСчетчику = НеделяГода(НачалоМесяца(ПериодВывода));
			ИскомаяНеделя = НеделяНачалаМесяцаПоСчетчику + НомерНеделиМесяца - 1;
			
			ДатаНачалаНедели = ДатаНачалаНеделиПоНомеру(ТекГод,ИскомаяНеделя);
			ИскомаяДата =  НачалоДня(ДатаНачалаНедели-1+(86400*ДеньНеделиМесяца));
			
			ТекМесяц = ТекМесяц + ИнтервалПовторения;
			
			НоваяСтрока = РазвернутаяТаблица.Добавить();
			НоваяСтрока.НачалоПериода = ИскомаяДата + ВремяСекНачалаИнтервала;
			НоваяСтрока.ОкончаниеПериода = ИскомаяДата + ВремяСекОкончанияИнтервала;
			НоваяСтрока.Загрузка = Загрузка;
			НоваяСтрока.Ресурс = Ресурс;
			НоваяСтрока.Период = НачалоДня(ИскомаяДата);
			
			Если ТекМесяц>12 Тогда
				ТекГод = ТекГод+1;
				ТекМесяц = ТекМесяц - 12;
			КонецЕсли;
			
			ПериодВывода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
			
			СчетчикПериода = СчетчикПериода +1;
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Если ПоследнийДеньМесяца Тогда
		
		ПериодВывода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
		
		Пока СчетчикПериода <= ОкончаниеОтсчета Цикл
		
			ИскомаяДата = НачалоДня(КонецМесяца(ПериодВывода));
			
			ТекМесяц = ТекМесяц + ИнтервалПовторения;
			
			НоваяСтрока = РазвернутаяТаблица.Добавить();
			НоваяСтрока.НачалоПериода = ИскомаяДата + ВремяСекНачалаИнтервала;
			НоваяСтрока.ОкончаниеПериода = ИскомаяДата + ВремяСекОкончанияИнтервала;
			НоваяСтрока.Загрузка = Загрузка;
			НоваяСтрока.Ресурс = Ресурс;
			НоваяСтрока.Период = НачалоДня(ИскомаяДата);
			
			Если ТекМесяц>12 Тогда
				ТекГод = ТекГод+1;
				ТекМесяц = ТекМесяц - 12;
			КонецЕсли;
			
			ПериодВывода = Дата(ТекГод, ТекМесяц, 1, 0,0,0);
			
			СчетчикПериода = СчетчикПериода +1;
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДатаНачалаНеделиПоНомеру(НомерГода,НомерНедели)
	Возврат НачалоНедели(Дата(НомерГода,1,1))+604800*(НомерНедели-1); 
КонецФункции

&НаСервере
Функция МассивДнейНеделиДляПовторов(ТекущиеДанные)

	МассивДней = Новый Массив;
	
	Если ТекущиеДанные.Пн Тогда
		МассивДней.Добавить(1);
	КонецЕсли;
	Если ТекущиеДанные.Вт Тогда
		МассивДней.Добавить(2);
	КонецЕсли;
	Если ТекущиеДанные.Ср Тогда
		МассивДней.Добавить(3);
	КонецЕсли;
	Если ТекущиеДанные.Чт Тогда
		МассивДней.Добавить(4);
	КонецЕсли;
	Если ТекущиеДанные.Пт Тогда
		МассивДней.Добавить(5);
	КонецЕсли;
	Если ТекущиеДанные.Сб Тогда
		МассивДней.Добавить(6);
	КонецЕсли;
	Если ТекущиеДанные.Вс Тогда
		МассивДней.Добавить(7);
	КонецЕсли;
	
	Возврат МассивДней;
	
КонецФункции

#КонецОбласти

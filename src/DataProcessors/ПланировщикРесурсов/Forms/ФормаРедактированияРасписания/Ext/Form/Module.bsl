
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Повторяемость = Параметры.Повторяемость;
	
	ЗаполнитьПараметрыФормыИзСтруктуры(Параметры.СтруктураПовторов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять") ИЛИ Не ЗначениеЗаполнено(Повторяемость) Тогда
		Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежедневно");
	КонецЕсли;
	
ВыполнитьДействияПриИзмененииПовторяемости();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПовторяемостьПриИзменении(Элемент)
	ВыполнитьДействияПриИзмененииПовторяемости()
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалПовторенияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если ИнтервалПовторения = 0 Тогда ИнтервалПовторения = 1 КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалПовторенияПриИзменении(Элемент)
	Если ИнтервалПовторения = 0 Тогда ИнтервалПовторения = 1 КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПовтораПредставлениеПриИзменении(Элемент)
	
	Если Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно") Тогда
		Если Не ЗначениеЗаполнено(НомерМесяца) Тогда НомерМесяца = Месяц(ДатаРесурса) КонецЕсли;
		
		Элементы.ВидПовтораПредставление.СписокВыбора.очистить();
		
		Элементы.ВидПовтораПредставление.СписокВыбора.Добавить("Число",Строка(ТекДатаСтроки)+"-ого "+ ПолучитьМесяцПоНомеру(НомерМесяца)+"." );
		ВидПовтораПредставление = Элементы.ВидПовтораПредставление.СписокВыбора[0].Представление;
		ДатаПовторения = ТекДатаСтроки;
		
		Возврат 
	КонецЕсли;
	
	ЭлементСписка = Элементы.ВидПовтораПредставление.СписокВыбора.НайтиПоЗначению(ВидПовтораПредставление);
	ВидПовтораПредставление = ЭлементСписка.Представление;
	
	ДатаПовторения = 0;
	ТекДеньНедели = 0;
	ПоследнийДеньМесяца = Ложь;
	
	Если ЭлементСписка.Значение = "Число" Тогда
		ДатаПовторения = ТекДатаСтроки;
	ИначеЕсли ЭлементСписка.Значение = "ДеньНедели" Тогда
		ТекДеньНедели = ТекДеньНеделиСтроки;
	ИначеЕсли ЭлементСписка.Значение = "ПоследнийДень" Тогда
		ПоследнийДеньМесяца = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	Если Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Еженедельно") И Не ДеньНеделиВыбран() Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Необходимо выбрать день недели.'");
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
	
	СтруктураРезультатаЗакрытия = СтруктураРезультата();
	ЭтаФорма.Закрыть(СтруктураРезультатаЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СтруктураРезультата()
	
	СтруктураРезультатаЗакрытия = Новый Структура("ВидПовтора, ИнтервалПовторения, Пн, Вт, Ср, Чт, Пт, Сб, Вс, ПоследнийДеньМесяца, ДатаПовторения, ДеньНеделиМесяца, НомерНеделиМесяца, НомерМесяца"
												,Повторяемость, ИнтервалПовторения, Пн, Вт, Ср, Чт, Пт, Сб, Вс, ПоследнийДеньМесяца, ДатаПовторения, ТекДеньНедели, НомерНеделиМесяца, НомерМесяца);

	Возврат СтруктураРезультатаЗакрытия;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметрыФормыИзСтруктуры(СтруктураПовторов)
	
	Пн = СтруктураПовторов.Пн;
	Вт = СтруктураПовторов.Вт;
	Ср = СтруктураПовторов.Ср;
	Чт = СтруктураПовторов.Чт;
	Пт = СтруктураПовторов.Пт;
	Сб = СтруктураПовторов.Сб;
	Вс = СтруктураПовторов.Вс;
	
	
	ТекДатаСтроки = СтруктураПовторов.ДатаСтроки;
	ДатаПовторения = СтруктураПовторов.ДатаПовторения;
	ДатаРесурса = СтруктураПовторов.ПериодСтроки;
	
	ТекДеньНедели = СтруктураПовторов.ДеньНеделиМесяца;
	ТекДеньНеделиСтроки = СтруктураПовторов.ТекДеньНедели;
	НомерНеделиМесяца = СтруктураПовторов.НомерНеделиМесяца;
	
	ПоследнийДеньМесяца = СтруктураПовторов.ПоследнийДеньМесяца;
	
	ИнтервалПовторения = СтруктураПовторов.ИнтервалПовторения;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействияПриИзмененииПовторяемости()
	
	Элементы.ВидПовтораПредставление.СписокВыбора.очистить();
	
	Если Не ЗначениеЗаполнено(Повторяемость) Тогда 
		Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять");
	КонецЕсли;
	
	Повторять = ?(Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.НеПовторять"), Ложь, Истина);
	
	Элементы.Декорация2.Видимость = Повторять;
	Элементы.Декорация3.Видимость = Повторять;
	Элементы.ИнтервалПовторения.Видимость = Повторять;
	Элементы.ГруппаДниНедели.Видимость = Повторять;
	
	Элементы.ГруппаВидПовтора.Видимость = Ложь;
	
	Если Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно") 
		ИЛИ Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно") Тогда
	
		Элементы.ГруппаДниНедели.Видимость = Ложь;
		Элементы.ГруппаВидПовтора.Видимость = Истина;
		
		Если Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно") Тогда
			
			Элементы.ВидПовтораПредставление.СписокВыбора.Добавить("Число",Строка(ТекДатаСтроки)+"-ого числа.");
			
			Если Не КонецМесяца(ДатаРесурса) = КонецДня(ДатаРесурса) Тогда
				
				ПредставлениеРасписания = СоответствиеНомераДнюНедели(ТекДеньНеделиСтроки);
				
				Если ЭтоПоследняяНеделяМесяца(ДатаРесурса) Тогда
					ПредставлениеРасписания = СтрШаблон(НСтр("ru = 'в последний %1'"), ПредставлениеРасписания);
				Иначе
					
					НомерНеделиМесяца = НеделяГода(ДатаРесурса)-НеделяГода(НачалоМесяца(ДатаРесурса))+1;
					ДополнениеПоМесяцуГоду = СтрШаблон(НСтр("ru = ' %1 каждой %2 -ой недели'"), ПредставлениеРасписания, Строка(НомерНеделиМесяца));
					
				КонецЕсли;
				
				Элементы.ВидПовтораПредставление.СписокВыбора.Добавить("ДеньНедели",ПредставлениеРасписания);
				
			Иначе
				
				Элементы.ВидПовтораПредставление.СписокВыбора.Добавить("ПоследнийДень",НСтр("ru = 'в последний день'"));
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаПовторения) Тогда
				ВидПовтораПредставление = Элементы.ВидПовтораПредставление.СписокВыбора[0].Представление;
			ИначеЕсли ЗначениеЗаполнено(ТекДеньНедели) Тогда
				ВидПовтораПредставление = Элементы.ВидПовтораПредставление.СписокВыбора[1].Представление;
			ИначеЕсли ПоследнийДеньМесяца = Истина Тогда
				ВидПовтораПредставление = Элементы.ВидПовтораПредставление.СписокВыбора[1].Представление;
			Иначе
				ВидПовтораПредставление = Элементы.ВидПовтораПредставление.СписокВыбора[0].Представление;
				ДатаПовторения = ТекДатаСтроки;
			КонецЕсли;
		Иначе
			
			Если Не ЗначениеЗаполнено(НомерМесяца) Тогда НомерМесяца = Месяц(ДатаРесурса) КонецЕсли;
			
			Элементы.ВидПовтораПредставление.СписокВыбора.Добавить("Число",Строка(ТекДатаСтроки)+"-ого "+ ПолучитьМесяцПоНомеру(НомерМесяца)+"." );
			ВидПовтораПредставление = Элементы.ВидПовтораПредставление.СписокВыбора[0].Представление;
			ДатаПовторения = ТекДатаСтроки;
		КонецЕсли;
		
	Иначе
		
		ДатаПовторения = 0;
		ТекДеньНедели = 0;
		ПоследнийДеньМесяца = Ложь;
		НомерНеделиМесяца = 0;
		НомерМесяца = 0;
		
	КонецЕсли;
	
	Элементы.ВидПовтораПредставление.КнопкаВыпадающегоСписка = Истина;
	
	Если Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежедневно") Тогда
		Элементы.Декорация2.Заголовок = НСтр("ru='каждый'");
		Элементы.Декорация3.Заголовок = НСтр("ru='день'");
		Элементы.ГруппаДниНедели.Видимость = Ложь;
		ДатаПовторения = 0;
		ПоследнийДеньМесяца = Ложь;
		ДеньНеделиМесяца = Ложь;
	ИначеЕсли Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Еженедельно") Тогда
		Элементы.Декорация2.Заголовок = НСтр("ru='каждую'");
		Элементы.Декорация3.Заголовок = НСтр("ru='неделю'");
		Элементы.ГруппаДниНедели.Видимость = Истина;
		ДатаПовторения = 0;
		ПоследнийДеньМесяца = Ложь;
		ДеньНеделиМесяца = Ложь;
		УстановитьТекДеньНедели();
	ИначеЕсли Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежемесячно") Тогда
		Элементы.Декорация2.Заголовок = НСтр("ru='каждый'");
		Элементы.Декорация3.Заголовок = НСтр("ru='месяц'");
	ИначеЕсли Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Ежегодно") Тогда
		Элементы.Декорация2.Заголовок = НСтр("ru='каждый'");
		Элементы.Декорация3.Заголовок = НСтр("ru='год'");
		Элементы.ВидПовтораПредставление.КнопкаВыпадающегоСписка = Ложь;
	КонецЕсли;
	
	Если ИнтервалПовторения = 0 Тогда ИнтервалПовторения = 1 КонецЕсли;
	
	Если Не Повторяемость = ПредопределенноеЗначение("Перечисление.ВидыПовторовРасписания.Еженедельно") Тогда ОчиститьДниНедели() КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМесяцПоНомеру(НомерМесяца)
	
	СоответствиеМесяцев = Новый Соответствие();
	СоответствиеМесяцев.Вставить(1, "Января");
	СоответствиеМесяцев.Вставить(2, "Февраля");
	СоответствиеМесяцев.Вставить(3, "Марта");
	СоответствиеМесяцев.Вставить(4, "Апреля");
	СоответствиеМесяцев.Вставить(5, "Мая");
	СоответствиеМесяцев.Вставить(6, "Июня");
	СоответствиеМесяцев.Вставить(7, "Июля");
	СоответствиеМесяцев.Вставить(8, "Августа");
	СоответствиеМесяцев.Вставить(9, "Сентября");
	СоответствиеМесяцев.Вставить(10, "Октября");
	СоответствиеМесяцев.Вставить(11, "Ноября");
	СоответствиеМесяцев.Вставить(12, "Декабря");
	
	Возврат СоответствиеМесяцев.Получить(НомерМесяца); 
	
КонецФункции

&НаКлиенте
Функция ЭтоПоследняяНеделяМесяца(ДатаНедели)
	
	МесяцДатыНедели = Месяц(ДатаНедели);
	
	Если Не МесяцДатыНедели = Месяц(КонецНедели(ДатаНедели)) 
		Или Не МесяцДатыНедели = Месяц(КонецНедели(ДатаНедели+10)) Тогда
		Возврат Истина
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция СоответствиеНомераДнюНедели(НомерДня)
	
	СоответствиеВозврата = Новый Соответствие;
	
	СоответствиеВозврата.Вставить(1,"понедельник");
	СоответствиеВозврата.Вставить(2,"вторник");
	СоответствиеВозврата.Вставить(3,"среда");
	СоответствиеВозврата.Вставить(4,"четверг");
	СоответствиеВозврата.Вставить(5,"пятница");
	СоответствиеВозврата.Вставить(6,"суббота");
	СоответствиеВозврата.Вставить(7,"воскресенье");
	
	Возврат СоответствиеВозврата.Получить(НомерДня);
	
КонецФункции

&НаКлиенте
Процедура УстановитьТекДеньНедели()
	
	Если Не ДеньНеделиВыбран() Тогда
		
		НомерДня = ?(ЗначениеЗаполнено(ДатаРесурса), ДеньНедели(ДатаРесурса), ДеньНедели(ТекущаяДата()));
		
		Если НомерДня = 1 Тогда Пн = Истина
		ИначеЕсли НомерДня = 2 Тогда Вт = Истина
		ИначеЕсли НомерДня = 3 Тогда Ср = Истина
		ИначеЕсли НомерДня = 4 Тогда Чт = Истина
		ИначеЕсли НомерДня = 5 Тогда Пт = Истина
		ИначеЕсли НомерДня = 6 Тогда Сб = Истина
		ИначеЕсли НомерДня = 7 Тогда Вс = Истина
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ДеньНеделиВыбран()
	
	Если Не Пн И Не Вт И Не Ср И Не Чт И Не Пт И Не Сб И Не Вс Тогда
		Возврат Ложь
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьДниНедели()
	Пн = Ложь;
	Вт = Ложь;
	Ср = Ложь;
	Чт = Ложь;
	Пт = Ложь;
	Сб = Ложь;
	Вс = Ложь;
КонецПроцедуры

#КонецОбласти

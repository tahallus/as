
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЛимитЧисло      = РаботаСНоменклатуройСлужебныйКлиентСервер.РазмерПорции();
	ЛимитСтрока     = Формат(ЛимитЧисло, "ЧГ=");
	
	ОсновнаяТаблица = РаботаСНоменклатурой.ИмяТаблицыПоТипу(Метаданные.ОпределяемыеТипы.НоменклатураРаботаСНоменклатурой.Тип);
	
	Если ОсновнаяТаблица = "" Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Не удалось определить имя таблицы определяемого типа ""Номенклатура"". Форма не может быть открыта.'"),,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация", Организация);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ТекстЗапроса = РаботаСНоменклатуройСлужебный.ТекстЗапросаВыгружаемаяНоменклатура();
	СвойстваСписка.ОсновнаяТаблица = ОсновнаяТаблица;
	СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	СписокСостояний = РаботаСНоменклатуройСлужебный.СостоянияВыгружаемаяНоменклатура();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СписокСостояний", СписокСостояний);
	
	ПустаяХарактеристика = РаботаСНоменклатурой.ПустаяСсылкаНаХарактеристику();
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокВыгрузкаЗапрещена, "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокВыгрузкаЗапрещена, "ПустаяХарактеристика", ПустаяХарактеристика);
	
	ТекстЗапроса = СвойстваСписка.ТекстЗапроса + Символы.ПС + ";" + Символы.ПС;
	ТекстЗапроса = ТекстЗапроса + СписокВыгрузкаЗапрещена.ТекстЗапроса;
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	Для каждого ЗапросПакета Из СхемаЗапроса.ПакетЗапросов Цикл
		ЗапросПакета.ВыбиратьРазрешенные = Истина;
		ЗапросПакета.Операторы[0].КоличествоПолучаемыхЗаписей = ЛимитЧисло;
	КонецЦикла;
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяХарактеристика", ПустаяХарактеристика);
	Запрос.УстановитьПараметр("СписокСостояний", СписокСостояний);
	Результат             = Запрос.ВыполнитьПакет();
	КоличествоВыгружается = Результат[0].Выбрать().Количество();
	КоличествоИсключения  = Результат[1].Выбрать().Количество();
	
	НастройкаВыгрузки = РаботаСНоменклатуройСлужебный.НастройкаВыгрузкиНоменклатуры(Организация);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НастройкаВыгрузки, "НастройкиОтбора, ОповещатьОНовых");
	
	ТекущиеДелаВстроены = ТекущиеДелаВстроены();
	Элементы.ГруппаОповещение.Видимость = ТекущиеДелаВстроены;
	Если Не ТекущиеДелаВстроены И ОповещатьОНовых Тогда
		ОповещатьОНовых      = Ложь;
		ОбновляемыеПараметры = Новый Структура("ОповещатьОНовых", ОповещатьОНовых);
		РаботаСНоменклатуройСлужебный.ОбновитьПараметрыНастройкиВыгрузки(Организация, ОбновляемыеПараметры);
	КонецЕсли;
	Элементы.ДекорацияОтбор.Доступность = ОповещатьОНовых;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьЗаголовкиЗакладок();
	Элементы.ДекорацияОтбор.Заголовок = РаботаСНоменклатуройСлужебныйКлиент.ЗаголовокДекорацииУсловияОтбора(НастройкиОтбора);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОповещатьОНовыхПриИзменении(Элемент)
	Элементы.ДекорацияОтбор.Доступность = ОповещатьОНовых;
	ОбновляемыеПараметры = Новый Структура("ОповещатьОНовых", ОповещатьОНовых);
	РаботаСНоменклатуройСлужебныйВызовСервера.ОбновитьПараметрыНастройкиВыгрузки(Организация, ОбновляемыеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИзменитьОтбор" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуУсловия(Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	ОткрытьПодбор();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИсключение(Команда)
	ОткрытьПодбор(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	УдалитьЗаписиНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИсключение(Команда)
	УдалитьЗаписиНаКлиенте(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Если КоличествоВыгружается > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоУсловиюЗавершение", ЭтотОбъект),
		НСтр("ru = 'Список выгружаемых позиций будет очищен. Продолжить?'"),
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Да,);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоУсловиюЗавершение(КодВозвратаДиалога.Да, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУсловию(Команда)
	
	Если КоличествоВыгружается > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоУсловиюЗавершение", ЭтотОбъект),
		               НСтр("ru = 'Перед заполнением список выгружаемых позиций будет очищен. Заполнить?'"),
		               РежимДиалогаВопрос.ДаНет,,
		               КодВозвратаДиалога.Да,);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоУсловиюЗавершение(КодВозвратаДиалога.Да, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУсловиюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		ОткрытьФормуУсловия();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьЗаголовкиЗакладок(ОбновитьВыгружается = Истина, ОбновитьИсключения = Истина)
	
	СтрокаДостигнутЛимит = СтрШаблон(НСтр("ru = 'более %1'"), ЛимитСтрока);
	
	Если ОбновитьВыгружается = Истина Тогда
		ВыгружаетсяПредставление = Строка(КоличествоВыгружается);
		Если КоличествоВыгружается >= ЛимитЧисло Тогда
			ВыгружаетсяПредставление = СтрокаДостигнутЛимит;
		ИначеЕсли КоличествоВыгружается = 0 Тогда
			ВыгружаетсяПредставление = НСтр("ru = 'не выбрана'");
		КонецЕсли;
		Элементы.СтраницаВыгружаются.Заголовок = СтрШаблон(НСтр("ru = 'Выгружается (%1)'"), ВыгружаетсяПредставление);
	КонецЕсли;
	
	Если ОбновитьИсключения = Истина Тогда
		ИсключенияПредставление = Строка(КоличествоИсключения);
		Если КоличествоИсключения >= ЛимитЧисло Тогда
			ИсключенияПредставление = СтрокаДостигнутЛимит;
		ИначеЕсли КоличествоИсключения = 0 Тогда
			ИсключенияПредставление = НСтр("ru = 'нет'");
		КонецЕсли;
		Элементы.СтраницаИсключения.Заголовок = СтрШаблон(НСтр("ru = 'Исключения (%1)'"), ИсключенияПредставление);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодбор(Регистрация = Истина)
	ОчиститьСообщения();
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытиеПодбора", ЭтотОбъект, Регистрация);
	ОтборЭлементов     = Новый Структура("ЭтоГруппа", Ложь);
	ПараметрыОткрытия  = Новый Структура;
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Регистрация);
	ПараметрыОткрытия.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыОткрытия.Вставить("Отбор", ОтборЭлементов);
	РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(ПараметрыОткрытия, ЭтотОбъект,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеПодбора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеПараметры = Истина Тогда
	
		ДлительнаяОперация = ДобавитьНовуюНоменклатуру(УникальныйИдентификатор, Организация, РезультатЗакрытия);
		Если ДлительнаяОперация.Статус = "Выполнено" Тогда
			ПослеДобавленияНоменклатурыКВыгрузке(ДлительнаяОперация, ДополнительныеПараметры);
			Возврат
		КонецЕсли;

		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПослеДобавленияНоменклатурыКВыгрузке", ЭтотОбъект);
		ПараметрыОжидания     = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	Иначе 
		РезультатДобавления = ДобавитьИсключениеНоменклатуры(Организация, РезультатЗакрытия, ЛимитСтрока);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатДобавления);
		ОбновитьЗаголовкиЗакладок();
	КонецЕсли;
	Элементы.Список.Обновить();
	Элементы.СписокВыгрузкаЗапрещена.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеДобавленияНоменклатурыКВыгрузке(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Результат.Свойство("Статус")
		И Результат.Статус = "Выполнено" 
		И Результат.Свойство("АдресРезультата")
		И ТипЗнч(Результат.АдресРезультата) = Тип("Строка") 
		И ЭтоАдресВременногоХранилища(Результат.АдресРезультата)) Тогда 
		Возврат
	КонецЕсли;
	
	РезультатДобавления   = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КоличествоВыгружается = КоличествоВыгружается + РезультатДобавления.Добавлено;
	ОбновитьЗаголовкиЗакладок(, Ложь);
	ОчиститьСообщения();
	ТекстСообщения = РезультатДобавления.ТекстЛога;
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДобавитьНовуюНоменклатуру(Знач УникальныйИдентификатор, Знач Организация, Знач МассивНоменклатуры)

	НаименованиеЗадания = НСтр("ru = 'Работа с номенклатурой. Добавление новой номенклатуры по списку.'");
	ИмяМетода           = "Обработки.РаботаСНоменклатурой.ДобавитьКВыгрузкеНоменклатуруПоСписку";
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, Организация, МассивНоменклатуры);

КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьИсключениеНоменклатуры(Организация, Номенклатура, ЛимитЗаписей)
	
	ИмяТаблицыНоменклатура = РаботаСНоменклатурой.ИмяТаблицыПоТипу(Метаданные.ОпределяемыеТипы.НоменклатураРаботаСНоменклатурой.Тип);
	ПустаяХарактеристика   = РаботаСНоменклатурой.ПустаяСсылкаНаХарактеристику();
	СписокСостояний        = РаботаСНоменклатуройСлужебный.СостоянияВыгружаемаяНоменклатура();
	
	НаборЗаписей = РегистрыСведений.СостоянияВыгрузкиНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
	Запись = НаборЗаписей.Добавить();
	Запись.Номенклатура = Номенклатура;
	Запись.Организация  = Организация;
	Запись.Состояние    = Перечисления.СостоянияВыгрузкиНоменклатуры.ВыгрузкаЗапрещена;;
	НаборЗаписей.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1000
	|	СправочникНоменклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.СостоянияВыгрузкиНоменклатуры КАК СостоянияВыгрузкиНоменклатуры
	|			ГДЕ
	|				СостоянияВыгрузкиНоменклатуры.Организация = &Организация
	|				И СостоянияВыгрузкиНоменклатуры.Номенклатура = СправочникНоменклатура.Ссылка
	|				И СостоянияВыгрузкиНоменклатуры.Состояние В (&СписокСостояний))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	СостоянияВыгрузкиНоменклатуры.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.СостоянияВыгрузкиНоменклатуры КАК СостоянияВыгрузкиНоменклатуры
	|ГДЕ
	|	СостоянияВыгрузкиНоменклатуры.Организация = &Организация
	|	И СостоянияВыгрузкиНоменклатуры.ХарактеристикаНоменклатуры = &ПустаяХарактеристика
	|	И СостоянияВыгрузкиНоменклатуры.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияВыгрузкиНоменклатуры.ВыгрузкаЗапрещена)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "1000", ЛимитЗаписей);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Номенклатура", ИмяТаблицыНоменклатура);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяХарактеристика", ПустаяХарактеристика);
	Запрос.УстановитьПараметр("СписокСостояний", СписокСостояний);
	Результат             = Запрос.ВыполнитьПакет();
	КоличествоВыгружается = Результат[0].Выбрать().Количество();
	КоличествоИсключения  = Результат[1].Выбрать().Количество();
	
	Возврат Новый Структура("КоличествоВыгружается, КоличествоИсключения", КоличествоВыгружается, КоличествоИсключения);
	
КонецФункции

&НаКлиенте
Процедура УдалитьЗаписиНаКлиенте(Регистрация = Истина)
	Если Регистрация = Истина Тогда
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Иначе 
		ВыделенныеСтроки = Элементы.СписокВыгрузкаЗапрещена.ВыделенныеСтроки;
	КонецЕсли;
	
	ВыбраноСтрок = ВыделенныеСтроки.Количество();
	Если ВыбраноСтрок = 0 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрана номенклатура для удаления'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("Регистрация, ВыбраноСтрок", Регистрация, ВыбраноСтрок);
	ДлительнаяОперация      = УдалитьЗаписиРегистра(УникальныйИдентификатор, Организация, ВыделенныеСтроки);
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ПослеУдаленияЗаписейРегистра(ДлительнаяОперация, ДополнительныеПараметры);
		Возврат
	КонецЕсли;
	
	ОповещениеОЗавершении   = Новый ОписаниеОповещения("ПослеУдаленияЗаписейРегистра", ЭтотОбъект, ДополнительныеПараметры);
	ПараметрыОжидания       = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьЗаписиРегистра(Знач УникальныйИдентификатор, Знач Организация, Знач МассивДанных)
	
	НаименованиеЗадания = НСтр("ru = 'Работа с номенклатурой. Удаление записей из регистра ""Состояния выгрузки"".'");
	ИмяМетода           = "РаботаСНоменклатуройСлужебный.УдалитьЗаписиРегистраПоСписку";
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, ИмяМетода, Организация, МассивДанных);
	
КонецФункции

&НаКлиенте
Процедура ПослеУдаленияЗаписейРегистра(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Результат.Свойство("Статус") И Результат.Статус = "Выполнено") Тогда 
		Возврат
	КонецЕсли;
	
	Если ДополнительныеПараметры.Регистрация = Истина Тогда
		КоличествоВыгружается = КоличествоВыгружается - ДополнительныеПараметры.ВыбраноСтрок;
		ОбновитьЗаголовкиЗакладок(, Ложь);
		Элементы.Список.Обновить();
	Иначе
		КоличествоИсключения = КоличествоИсключения - ДополнительныеПараметры.ВыбраноСтрок;
		ОбновитьЗаголовкиЗакладок(Ложь);
		Элементы.СписокВыгрузкаЗапрещена.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуУсловия(ОбновитьЗаписиРегистра = Истина)

	Оповещение        = Неопределено;
	ПараметрыОткрытия = РаботаСНоменклатуройКлиент.ПараметрыФормыУсловияОтбораНоменклатуры();
	ПараметрыОткрытия.НастройкиОтбора = НастройкиОтбора;
	Если ОбновитьЗаписиРегистра = Истина Тогда
		Оповещение = Новый ОписаниеОповещения("ОбновитьОтбор", ЭтотОбъект);
	КонецЕсли;
	РаботаСНоменклатуройКлиент.ОткрытьФормуУсловияОтбораНоменклатуры(ПараметрыОткрытия, ЭтотОбъект, Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтбор(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	Если РезультатЗакрытия <> Неопределено Тогда
		НастройкиОтбора = РезультатЗакрытия;
		Элементы.ДекорацияОтбор.Заголовок  = РаботаСНоменклатуройСлужебныйКлиент.ЗаголовокДекорацииУсловияОтбора(НастройкиОтбора);
		ОповещатьОНовых = Истина;
		Элементы.ДекорацияОтбор.Доступность = ОповещатьОНовых;
		
		ДлительнаяОперация = ЗаполнитьРегистрПоОтбору(УникальныйИдентификатор, Организация, НастройкиОтбора);
		Если ДлительнаяОперация.Статус = "Выполнено" Тогда
			ПослеДобавленияНоменклатурыПоОтбору(ДлительнаяОперация, Неопределено);
			Возврат
		КонецЕсли;
		
		ОповещениеОЗавершении   = Новый ОписаниеОповещения("ПослеДобавленияНоменклатурыПоОтбору", ЭтотОбъект);
		ПараметрыОжидания       = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Заполнение по отбору'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеДобавленияНоменклатурыПоОтбору(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Свойство("Статус")
		И Результат.Статус = "Выполнено" 
		И Результат.Свойство("АдресРезультата")
		И ТипЗнч(Результат.АдресРезультата) = Тип("Строка") 
		И ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатДобавления = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатДобавления);
		ОбновитьЗаголовкиЗакладок();
	ИначеЕсли Результат.Статус = "Выполняется" И Результат.Прогресс <> Неопределено Тогда 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьРегистрПоОтбору(Знач УникальныйИдентификатор, Знач Организация, Знач НастройкиОтбора)
	
	ОбновляемыеПараметры = Новый Структура("НастройкиОтбора, ОповещатьОНовых", НастройкиОтбора, Истина);
	РаботаСНоменклатуройСлужебный.ОбновитьПараметрыНастройкиВыгрузки(Организация, ОбновляемыеПараметры);
	
	НаименованиеЗадания = НСтр("ru = 'Работа с номенклатурой. Добавление новой номенклатуры по отбору.'");
	ИмяМетода           = "Обработки.РаботаСНоменклатурой.ДобавитьКВыгрузкеНоменклатуруПоОтбору";
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ИмяМетода, Организация, НастройкиОтбора);
	
КонецФункции

&НаКлиенте
Процедура Готово(Команда)
	Закрыть(КоличествоВыгружается);
КонецПроцедуры

&НаСервере
Функция ТекущиеДелаВстроены()
	
	Результат = Ложь;
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ТекущиеДела") Тогда
		Возврат Результат;
	КонецЕсли;
	
	Попытка
		Обработчики = Новый Массив;
		ОбщийМодульТекущиеДелаПереопределяемый = ОбщегоНазначения.ОбщийМодуль("ТекущиеДелаПереопределяемый");
		ОбщийМодульТекущиеДелаПереопределяемый.ПриОпределенииОбработчиковТекущихДел(Обработчики);
		Результат = (Обработчики.Найти(Обработки.РаботаСНоменклатурой) <> Неопределено);
	Исключение
		ИмяСобытия     = НСтр("ru = 'Электронное взаимодействие.Работа с номенклатурой'", ОбщегоНазначения.КодОсновногоЯзыка());
		ТекстСообщения = НСтр("ru = 'Не удалось проверить встраивание уведомлений через подсистему СтандартныеПодсистемы.ТекущиеДела'");
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
	КонецПопытки;
	
	Возврат Результат
	
КонецФункции

#КонецОбласти
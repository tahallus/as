
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыОбъектовУчета = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПараметрыОбъектовУчета");
	Если Не ЗначениеЗаполнено(ПараметрыОбъектовУчета) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	АдресДанных = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "АдресДанных", "");
	
	ЗаполнитьСтатусыВнутреннихДокументов(АдресДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО()
		Или ИмяСобытия = ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияТекущихДелЭДО() Тогда
				
		ОбновитьСтатусыДокументов();
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтатусыДокументов

&НаКлиенте
Процедура СтатусыДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СтатусыДокументовОжидаемоеДействие Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ЗначениеЗаполнено(ТекущиеДанные.ОжидаемоеДействие) Тогда
			ВыполнитьДействиеПоДокументам(ТекущиеДанные);
		КонецЕсли;
	ИначеЕсли Поле = Элементы.СтатусыДокументовПредставлениеДокумента Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ЭлектронныйДокумент) Тогда
			ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(ТекущиеДанные.ЭлектронныйДокумент);
		Иначе
			ОткрытьЭлектронныйДокументОбъектаУчета(ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСтатусы(Команда)
	
	ОбновитьСтатусыДокументов();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УсловноеОформление

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ОформлениеСтрокиСтатусыДокументов();
	
	ОформлениеПоляОжидаемоеДействие();
	
	ОформлениеПоляПредставлениеСостояния();
	
КонецПроцедуры

&НаСервере
Процедура ОформлениеСтрокиСтатусыДокументов()
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СтатусыДокументов");
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СтатусыДокументов.ЭтоГруппа");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));
	
КонецПроцедуры

&НаСервере
Процедура ОформлениеПоляОжидаемоеДействие()
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элементы.СтатусыДокументовОжидаемоеДействие.Имя);
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СтатусыДокументов.ОжидаемоеДействие");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОформлениеПоляПредставлениеСостояния()
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элементы.СтатусыДокументовПредставлениеСостояния.Имя);
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СтатусыДокументов.ОжидаемоеДействие");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьСтатусыВнутреннихДокументов(АдресДанных = "")
	
	СтатусыДокументов.ПолучитьЭлементы().Очистить();
	
	Если ЗначениеЗаполнено(АдресДанных) Тогда
		ТаблицаДокументов = ПолучитьИзВременногоХранилища(АдресДанных);
		УдалитьИзВременногоХранилища(АдресДанных);
	Иначе
		ТаблицаДокументов = ИнтерфейсДокументовЭДОВызовСервера.СтатусыЭлектронныхДокументовОбъектаУчета(ПараметрыОбъектовУчета);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТаблицаДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДокументов.Сортировать("ОжидаемоеДействие Убыв, ПредставлениеДокумента Возр");
	
	КоллекцииГрупп = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДокументов Цикл
		ДобавитьЭлементДереваСтатусовДокументов(КоллекцииГрупп, СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементДереваСтатусовДокументов(КоллекцииГрупп, СтрокаТаблицы)
	ГруппаДействий = ГруппаСтатусовДокументов(КоллекцииГрупп, СтрокаТаблицы.ОжидаемоеДействие);
	Элемент = ГруппаДействий.ПолучитьЭлементы().Добавить();
	ЗаполнитьЗначенияСвойств(Элемент, СтрокаТаблицы);
КонецПроцедуры

&НаСервере
Функция ГруппаСтатусовДокументов(КоллекцииГрупп, ОжидаемоеДействие)
	
	ГруппаДействий = КоллекцииГрупп[ОжидаемоеДействие];
	Если ГруппаДействий <> Неопределено Тогда
		Возврат ГруппаДействий;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОжидаемоеДействие) Тогда
		ПредставлениеГруппы = НСтр("ru = 'Действий не требуется'");
	ИначеЕсли ОжидаемоеДействие = Перечисления.ДействияПоЭДО.Сформировать Тогда
		ПредставлениеГруппы = НСтр("ru = 'Отправить на подпись'");
	ИначеЕсли ОжидаемоеДействие = Перечисления.ДействияПоЭДО.Подписать Тогда
		ПредставлениеГруппы = НСтр("ru = 'Требуется подписание'");
	Иначе
		ПредставлениеГруппы = Строка(ОжидаемоеДействие);
	КонецЕсли;
	
	ГруппаДействий = СтатусыДокументов.ПолучитьЭлементы().Добавить();
	ГруппаДействий.ПредставлениеДокумента = ПредставлениеГруппы;
	ГруппаДействий.ОжидаемоеДействие = ОжидаемоеДействие;
	ГруппаДействий.ЭтоГруппа = Истина;
	
	КоллекцииГрупп.Вставить(ОжидаемоеДействие, ГруппаДействий);
	
	Возврат ГруппаДействий;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСтатусыДокументов()
	
	ТекущиеДанные = Элементы.СтатусыДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		КлючТекущегоЭлемента = Неопределено;
	Иначе
		КлючТекущегоЭлемента = Новый Структура("ЭтоГруппа, ОжидаемоеДействие, ВидДокумента");
		ЗаполнитьЗначенияСвойств(КлючТекущегоЭлемента, ТекущиеДанные);
	КонецЕсли;
	
	Результат = ОбновитьСтатусыВнутреннихДокументовНаСервере(КлючТекущегоЭлемента);
	
	Для Каждого ИдентификаторГруппы Из Результат.ДобавленныеГруппы Цикл
		Элементы.СтатусыДокументов.Развернуть(ИдентификаторГруппы);
	КонецЦикла;
	
	Элементы.СтатусыДокументов.ТекущаяСтрока = Результат.ИдентификаторСтроки;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьСтатусыВнутреннихДокументовНаСервере(Знач КлючТекущегоЭлемента)
	
	Результат = Новый Структура;
	Результат.Вставить("ДобавленныеГруппы", Новый Массив);
	Результат.Вставить("ИдентификаторСтроки", 0);
	
	ЗаполнитьСтатусыВнутреннихДокументов();
	
	Для Каждого Элемент Из СтатусыДокументов.ПолучитьЭлементы() Цикл
		Результат.ДобавленныеГруппы.Добавить(Элемент.ПолучитьИдентификатор());
	КонецЦикла;
	
	Если ЗначениеЗаполнено(КлючТекущегоЭлемента) Тогда
		Результат.ИдентификаторСтроки = ИдентификаторТекущейСтроки(СтатусыДокументов, КлючТекущегоЭлемента);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Функция ИдентификаторТекущейСтроки(КоллекцияЭлементов, КлючТекущегоЭлемента)
	
	Для Каждого Элемент Из КоллекцияЭлементов.ПолучитьЭлементы() Цикл
		
		Если ЭтоТекущийЭлемент(Элемент, КлючТекущегоЭлемента) Тогда
			Возврат Элемент.ПолучитьИдентификатор();
		КонецЕсли;
		
		Если Элемент.ЭтоГруппа Тогда
			
			Результат = ИдентификаторТекущейСтроки(Элемент, КлючТекущегоЭлемента);
			
			Если ЗначениеЗаполнено(Результат) Тогда
				Возврат Результат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЭтоТекущийЭлемент(Элемент, КлючТекущегоЭлемента)
	Для Каждого КлючЗначение Из КлючТекущегоЭлемента Цикл
		Если Элемент[КлючЗначение.Ключ] <> КлючЗначение.Значение Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция КлючНастройкиВнутреннегоЭДО(ТекущиеДанные)
	
	КлючНастройки = НастройкиЭДОКлиентСервер.НовоеОписаниеПолейКлючаНастройкиВнутреннегоЭДО();
	ЗаполнитьЗначенияСвойств(КлючНастройки, ТекущиеДанные);
	КлючНастройки.ВидВнутреннегоДокумента = ТекущиеДанные.ВидДокумента;
	Возврат КлючНастройки;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьДействиеПоДокументам(ТекущиеДанные)

	МассивОбъектовУчета = Новый Массив;
	МассивЭлектронныхДокументов = Новый Массив;
	КлючиНастроекОбъектов = Новый Соответствие;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда		
		Для Каждого Элемент Из ТекущиеДанные.ПолучитьЭлементы() Цикл	
			Если ТекущиеДанные.ОжидаемоеДействие = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Сформировать") Тогда		
				МассивКлючейНастроек = КлючиНастроекОбъектов[Элемент.ОбъектУчета];
				Если МассивОбъектовУчета.Найти(Элемент.ОбъектУчета) = Неопределено Тогда
					МассивОбъектовУчета.Добавить(Элемент.ОбъектУчета);
					КлючиНастроекОбъектов.Вставить(Элемент.ОбъектУчета,
						ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючНастройкиВнутреннегоЭДО(Элемент)));
				Иначе
					МассивКлючейНастроек.Добавить(КлючНастройкиВнутреннегоЭДО(Элемент));
				КонецЕсли;
			Иначе
				МассивЭлектронныхДокументов.Добавить(Элемент.ЭлектронныйДокумент);
			КонецЕсли;						
		КонецЦикла;		
	Иначе
		Если ТекущиеДанные.ОжидаемоеДействие = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Сформировать") Тогда		
				МассивОбъектовУчета.Добавить(ТекущиеДанные.ОбъектУчета);
				КлючиНастроекОбъектов.Вставить(ТекущиеДанные.ОбъектУчета,
						ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючНастройкиВнутреннегоЭДО(ТекущиеДанные)));
			Иначе
				МассивЭлектронныхДокументов.Добавить(ТекущиеДанные.ЭлектронныйДокумент);
			КонецЕсли;
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОбъектыУчета", МассивОбъектовУчета);
			
	Оповещение = Новый ОписаниеОповещения("ВыполнитьДействиеПоДокументамЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ТекущиеДанные.ОжидаемоеДействие);
	
	ПараметрыВыполненияДействийПоЭДО = ЭлектронныеДокументыЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета = МассивОбъектовУчета;
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ЭлектронныеДокументы = МассивЭлектронныхДокументов;
	ПараметрыВыполненияДействийПоЭДО.КлючиНастроекОбъектов = КлючиНастроекОбъектов;
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);		

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеПоДокументамЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат.Свойство("ОшибкиФормирования") И Результат.ОшибкиФормирования.Количество() Тогда
		
		ПараметрыОбработки = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыПроблемПриОбработкеДокументов();
		ПараметрыОбработки.АдресСведенийОбОшибках = ПоместитьВоВременноеХранилище(Результат.ОшибкиФормирования);
		ПараметрыОбработки.СписокДокументовКОтправке = ПараметрыОповещения.ОбъектыУчета;
		ПараметрыОбработки.ФормаВладелец = ЭтотОбъект;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ОбъектыУчета", ПараметрыОповещения.ОбъектыУчета);
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗавершенияРаботыПомощникаФормирования", ЭтотОбъект, ДополнительныеПараметры);
		ИнтерфейсДокументовЭДОКлиент.ПоказатьПроблемыПриОбработкеДокументов(Оповещение, ПараметрыОбработки);

	ИначеЕсли Результат.Свойство("КонтекстДиагностики")
		И ОбработкаНеисправностейБЭДКлиентСервер.ЕстьОшибки(Результат.КонтекстДиагностики) Тогда
		
		ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Результат.КонтекстДиагностики);

	Иначе
		ОбновитьСтатусыДокументов();
		Оповестить(ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияРаботыПомощникаФормирования(Результат, ДополнительныеПараметры) Экспорт	
	
	Если Результат <> Неопределено Тогда
		ОповещениеЗавершения = Новый ОписаниеОповещения("ВыполнитьДействиеПоДокументамЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(ОповещениеЗавершения, Результат);
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОткрытьЭлектронныйДокументОбъектаУчета(ТекущиеДанные)
		
	Если ЗначениеЗаполнено(ТекущиеДанные.ЭлектронныйДокумент) Тогда 
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(ТекущиеДанные.ЭлектронныйДокумент);
	Иначе
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВидДокумента", ТекущиеДанные.ВидДокумента);
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокументОбъектаУчета(ТекущиеДанные.ОбъектУчета, ДополнительныеПараметры);
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти
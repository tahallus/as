///////////////////////////////////////////////////////////////////////////////////////////////////////
// Форма используется в качестве контейнера эмулированных методов компоненты ГНИВЦ
// для печати машиночитаемых форм со штрихкодом PDF417. Взаимодействие с 32-битной 
// компонентой ГНИВЦ через эмулированные методы выполняется только в режиме 64-битного
// тонкого клиента платформы "1С:Предприятие" в среде Windows. 
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Полный путь в формате Windows к каталогу с шаблонами для печати.
&НаКлиенте
Перем PrintTiffFolder Экспорт;

// Содержит результат проверки доступности компоненты при инициализации.
&НаКлиенте
Перем COMОбъектДоступен Экспорт;

// Содержит дополнительные параметры печати.
&НаКлиенте
Перем ДополнительныеПараметрыПечати;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура устанавливает дополнительный параметр печати.
// Поддерживается только один дополнительный параметр: "Наименование налогового органа-получателя".
//
// Ошибки выполнения (возвращаются из метода компоненты печати):
//   0x80040004 (-2147221500)- Ошибочное название дополнительного параметра печати.
//   0x80040005 (-2147221499)- Ошибочное значение дополнительного параметра печати.
//   0x80040001 (-2147221503)- Другая ошибка.
//
// Параметры:
//   Name  - Строка - Наименование параметра.
//   Value - Произвольный - Значение параметра.
//
&НаКлиенте
Процедура SetPrintTiffParam1C(Name, Value) Экспорт
	
	ОписаниеОшибки = "";
	
	Если ДополнительныеПараметрыПечати[Name] = Неопределено Тогда
		ОписаниеОшибки = "0x80040004" + Символы.ПС + НСтр("ru = 'Ошибочное название дополнительного параметра печати'");
	ИначеЕсли ТипЗнч(Value) <> Тип("Строка") И ТипЗнч(Value) <> Тип("Число") Тогда
		ОписаниеОшибки = "0x80040005" + Символы.ПС + НСтр("ru = 'Ошибочное значение дополнительного параметра печати'");
	ИначеЕсли СодержитНебезопасныеДействия(Строка(Value)) Тогда
		ОписаниеОшибки = "0x80040001" + Символы.ПС + НСтр("ru = 'Другая ошибка'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ВызватьИсключение ОписаниеОшибки;
	Иначе
		ДополнительныеПараметрыПечати.Вставить(Name, СокрЛП(Value));
	КонецЕсли;
	
КонецПроцедуры

// Процедура открывает форму предпросмотра файла формата 2/3 или XML перед печатью на принтере.
//
// Ошибки выполнения (возвращаются из метода компоненты печати):
//   0x80040032 (-2147221454) - Нет указанного файла с данными.
//   0x80040033 (-2147221453) - Нет доступа к указанному файлу с данными.
//   0x8004000A (-2147221494) - Текстовый файл с данными не удовлетворяет даже минимальным требованиям формата 2/3
//     (не удалось идентифицировать его по КНД и ВерсОтч, файл не в кодировке DOS (cp866)).
//   0x8004000B (-2147221493) - XML файл с данными не удовлетворяет даже минимальным требованиям формата XML
//     (не удалось идентифицировать его по КНД и ВерсОтч).
//   0x8004000F (-2147221489) - В данных формата 2/3 или XML указана некорректная ВерсОтч
//     (состоит из 6 или 3 десятичных цифр с точкой, после первой цифры).
//   0x80040010 (-2147221488) - В данных формата 2/3 или XML указан некорректный КНД (состоит из 7 десятичных цифр).
//   0x80040014 (-2147221484) - Нарушена структура данных формата 2/3 или XML (проверяется по спец. схеме,
//     содержащейся в шаблоне печати).
//   0x8004003C (-2147221444) - В каталоге с шаблонами печати нет требуемого шаблона
//     (идентифицируется по КНД и ВерсОтч данных).
//   0x8004003D (-2147221443) - Нет доступа к файлу требуемого шаблона (идентифицируется по КНД и ВерФОтч данных).
//   0x80040046 (-2147221434) - Нет указанного каталога с шаблонами печати (устанавливается свойством PrintTiffFolder).
//   0x80040047 (-2147221433) - Нет доступа к каталогу с шаблонами печати (устанавливается свойством PrintTiffFolder).
//   0x80040050 (-2147221424) - Ошибка подготовки страниц документа из-за подмены шаблона печати
//     (или, что крайне маловероятно, из-за ошибки в шаблоне печати).
//   0x80050030 (-2147155920) - Нарушена целостность пакета "Печать НД с PDF417".
//     Повреждена используемая в печати DLL (GNIVCPDOCc.dll).
//   0x80050035 (-2147155915) - Нарушена целостность пакета "Печать НД с PDF417".
//     Отсутствует или не найдена используемая в печати DLL (GNIVCPDOCc.dll).
//   0x800501C5 (-2147155515) - Нарушена целостность пакета "Печать НД с PDF417".
//     Подменена или устарела используемая в печати DLL (GNIVCPDOCc.dll).
//   0x8004006E (-2147221394) - Отсутствует пакет "Microsoft XML 4.0" или нарушена его целостность.
//   0x80040078 (-2147221384) - Отсутствует пакет "Windows Script" или нарушена его целостность.
//   0x80040082 (-2147221374) - Нарушена целостность пакета "Печать НД с PDF417".
//      Версии используемых при печати DLL (GNIVCPDOCc.dll, TAXDOCPrt.dll) не совпадают с версией пакета.
//   0x80040001 (-2147221503) - Другая ошибка.
//
// Параметры:
//   StrFile - Строка - Полное имя файла данных в формате 2/3 или XML.
//   HWNDParent - Число - Windows-описатель окна-родителя.
//   XMLValidationReport - ДокументDOM (MSXML2.DOMDocument) - Содержит протокол проверки
//      в случае отклонения структуры файла формата 2/3 или XML от стандарта, описанного спец. схемой,
//      содержащейся в файле шаблона печати.
//      Структура протокола: корневой тэг – Errors, тэги второго уровня – Error (по одному тэгу на ошибку).
//
&НаКлиенте
Процедура PreviewFile1C(StrFile, HWNDParent, XMLValidationReport = NULL) Экспорт
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Tiff", PrintTiffFolder);
	
	ДопПараметры.Вставить("File", StrFile);
	ДопПараметры.Вставить("Hwnd", HWNDParent);
	Если XMLValidationReport <> NULL Тогда
		ДопПараметры.Вставить("Vrep", XMLValidationReport);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ДополнительныеПараметрыПечати Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
			ДопПараметры.Вставить("Pkey", КлючИЗначение.Ключ);
			ДопПараметры.Вставить("Pval", КлючИЗначение.Значение);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВыполнитьЗаданиеСкрипта("PreviewFile", ДопПараметры);
	
КонецПроцедуры

// Процедура выводит на принтер файл формата 2/3 или XML.
//
// Ошибки выполнения (возвращаются из метода компоненты печати):
//   0x80040032 (-2147221454) - Нет указанного файла с данными.
//   0x80040033 (-2147221453) - Нет доступа к указанному файлу с данными.
//   0x8004000A (-2147221494) - Текстовый файл с данными не удовлетворяет даже минимальным требованиям формата 2/3
//     (не удалось идентифицировать его по КНД и ВерсОтч, файл не в кодировке DOS (cp866)).
//   0x8004000B (-2147221493) - XML файл с данными не удовлетворяет даже минимальным требованиям формата XML
//     (не удалось идентифицировать его по КНД и ВерсОтч).
//   0x8004000F (-2147221489) - В данных формата 2/3 или XML указана некорректная ВерсОтч
//     (состоит из 6 или 3 десятичных цифр с точкой, после первой цифры).
//   0x80040010 (-2147221488) - В данных формата 2/3 или XML указан некорректный КНД (состоит из 7 десятичных цифр).
//   0x80040014 (-2147221484) - Нарушена структура данных формата 2/3 или XML (проверяется по спец. схеме,
//     содержащейся в шаблоне печати).
//   0x8004003C (-2147221444) - В каталоге с шаблонами печати нет требуемого шаблона
//     (идентифицируется по КНД и ВерсОтч данных).
//   0x8004003D (-2147221443) - Нет доступа к файлу требуемого шаблона (идентифицируется по КНД и ВерФОтч данных).
//   0x80040046 (-2147221434) - Нет указанного каталога с шаблонами печати (устанавливается свойством PrintTiffFolder).
//   0x80040047 (-2147221433) - Нет доступа к каталогу с шаблонами печати (устанавливается свойством PrintTiffFolder).
//   0x80040050 (-2147221424) - Ошибка подготовки страниц документа из-за подмены шаблона печати
//     (или, что крайне маловероятно, из-за ошибки в шаблоне печати).
//   0x80050030 (-2147155920) - Нарушена целостность пакета "Печать НД с PDF417".
//     Повреждена используемая в печати DLL (GNIVCPDOCc.dll).
//   0x80050035 (-2147155915) - Нарушена целостность пакета "Печать НД с PDF417".
//     Отсутствует или не найдена используемая в печати DLL (GNIVCPDOCc.dll).
//   0x800501C5 (-2147155515) - Нарушена целостность пакета "Печать НД с PDF417".
//     Подменена или устарела используемая в печати DLL (GNIVCPDOCc.dll).
//   0x8004006E (-2147221394) - Отсутствует пакет "Microsoft XML 4.0" или нарушена его целостность.
//   0x80040078 (-2147221384) - Отсутствует пакет "Windows Script" или нарушена его целостность.
//   0x80040082 (-2147221374) - Нарушена целостность пакета "Печать НД с PDF417".
//      Версии используемых при печати DLL (GNIVCPDOCc.dll, TAXDOCPrt.dll) не совпадают с версией пакета.
//   0x80040064 (-2147221404) - Печать прервана пользователем.
//   0x80040065 (-2147221403) - На компьютере не установлено ни одного принтера.
//   0x80040066 (-2147221402) - Для печати указано неверное имя принтера.
//   0x80040067 (-2147221401) - Для печати указано неверное число копий.
//   0x80040068 (-2147221400) - Для печати указан неверный список страниц.
//   0x80040001 (-2147221503) - Другая ошибка.
//
// Параметры:
//   StrFile - Строка - Полное имя файла данных в формате 2/3 или XML.
//   StrCopiesAndPagesList - Строка - Число печатаемых копий (от 1 до 100 включительно) и список печатаемых страниц,
//      отделённые друг от друга двоеточием. Число печатаемых копий вместе с разделителем-двоеточием может быть опущено,
//      в таком случае печатается одна копия. Разделитель списка печатаемых страниц – запятая.
//      Элементом списка может быть положительное целое число, диапазон
//      (нижняя граница отделена от верхней знаком минус) или обозначение "чет" и "нечет".
//      Пустой список означает печать всех страниц документа.
//   StrPrinter - Строка - Полное имя принтера, на который будет осуществляться вывод.
//   ShowProgress - Число - Флажок управления окошком прогресса, если установлен (не равен 0),
//      то окошко прогресса печати показывается; иначе (0) – не показывается.
//   XMLValidationReport - ДокументDOM (MSXML2.DOMDocument) - Содержит протокол проверки
//      в случае отклонения структуры файла формата 2/3 или XML от стандарта, описанного спец. схемой,
//      содержащейся в файле шаблона печати.
//      Структура протокола: корневой тэг – Errors, тэги второго уровня – Error (по одному тэгу на ошибку).
//
&НаКлиенте
Процедура PrintFile(StrFile, StrCopiesAndPagesList, StrPrinter, ShowProgress, XMLValidationReport = NULL) Экспорт
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Tiff", PrintTiffFolder);
	
	ДопПараметры.Вставить("File", StrFile);
	ДопПараметры.Вставить("Plst", StrCopiesAndPagesList);
	ДопПараметры.Вставить("Fprn", StrPrinter);
	ДопПараметры.Вставить("Sprg", ShowProgress);
	
	Если XMLValidationReport <> NULL Тогда
		ДопПараметры.Вставить("Vrep", XMLValidationReport);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ДополнительныеПараметрыПечати Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
			ДопПараметры.Вставить("Pkey", КлючИЗначение.Ключ);
			ДопПараметры.Вставить("Pval", КлючИЗначение.Значение);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВыполнитьЗаданиеСкрипта("PrintFile", ДопПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Функция КомпонентаПечатиДоступна() Экспорт
	
	Попытка
		ВыполнитьЗаданиеСкрипта("TestPrint");
	Исключение
		Возврат Ложь;
	КонецПопытки; 
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеМакета = Метаданные.Обработки.ОбщиеОбъектыРеглОтчетности.Макеты.СкриптДляКомпонентыПечатиМашиночитаемыхФорм;
	СкриптДляКомпонентыПечатиМашиночитаемыхФорм.Добавить(
		Обработки.ОбщиеОбъектыРеглОтчетности.ПолучитьМакет(МетаданныеМакета.Имя), МетаданныеМакета.Синоним);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоказатьПредупреждение(, НСтр("ru = 'Служебная форма, не предназначена для отображения на экране!'"));
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьЗаданиеСкрипта(ИмяЗадания, ДопПараметры = Неопределено)
	
	Перем ИмяФайлаСкрипта;
	
#Если ВебКлиент Тогда
	Возврат;
#Иначе
	ИмяФайлаСкрипта = ПолучитьИмяВременногоФайла(СкриптДляКомпонентыПечатиМашиночитаемыхФорм[0].Представление);
#КонецЕсли
	
	СкриптДляКомпонентыПечатиМашиночитаемыхФорм[0].Значение.Записать(ИмяФайлаСкрипта, "UTF-16LE");
	
	Кавычка = """";
	
	КомандаЗапуска = Новый Массив;
	КомандаЗапуска.Добавить(ПапкаСистемныхПриложений_x86() + "wscript.exe");
	КомандаЗапуска.Добавить("//B");
	КомандаЗапуска.Добавить("//Nologo");
	КомандаЗапуска.Добавить("//Job:" + ИмяЗадания);
	
	КомандаЗапуска.Добавить(ИмяФайлаСкрипта);
	
	Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
		Для Каждого КлючИЗначение Из ДопПараметры Цикл
			Значение = КлючИЗначение.Значение;
			Если ТипЗнч(Значение) = Тип("Число") Тогда
				Значение = Формат(Значение, "ЧН=; ЧГ=");
			Иначе
				Значение = Кавычка + СтрЗаменить(СокрЛП(Значение), Кавычка, Кавычка + Кавычка) + Кавычка;
			КонецЕсли;
			
			КомандаЗапуска.Добавить("/" + КлючИЗначение.Ключ + ":");
			КомандаЗапуска.Добавить(Значение);
		КонецЦикла;
	КонецЕсли;
	
	Результат = ЗапуститьПрограммуСинхронно(КомандаЗапуска);
	
	УдалитьФайлы(ИмяФайлаСкрипта); // Удаляем временный файл.
	
	Если Результат = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ПутьКФайлуПротокола = Сред(ИмяФайлаСкрипта, 1, СтрДлина(ИмяФайлаСкрипта) - 4) + ".out";
	СодержимоеФайлаПротокола = ПрочитатьИУдалитьФайлПротокола(ПутьКФайлуПротокола);
	
	ПозицияОписанияОшибки = СтрНайти(СодержимоеФайлаПротокола, "ОШИБКА!");
	Если ПозицияОписанияОшибки > 0 Тогда
		ОписаниеОшибки = СокрЛП(Сред(СодержимоеФайлаПротокола, ПозицияОписанияОшибки + 7));
		
		ПозицияКодаОшибки = СтрНайти(ОписаниеОшибки, "0x");
		Если ПозицияКодаОшибки > 0 Тогда
			ОписаниеОшибки = Сред(ОписаниеОшибки, ПозицияКодаОшибки);
		КонецЕсли;
		
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Все методы компоненты печати явлются синхроными,
// их эмуляция также должна использовать синхронный метод запуска приложения.
//
&НаКлиенте
Функция ЗапуститьПрограммуСинхронно(КомандаЗапуска)
	
	СтрокаКоманды = БезопаснаяСтрокаЗапускаПриложения(КомандаЗапуска);
	СтрокаКоманды = СтрЗаменить(СтрокаКоманды, ": ", ":");
	
	Оболочка = Новый COMОбъект("Wscript.Shell");
	КодВозврата = Оболочка.Run(СтрокаКоманды, 0, Истина); // Окно приложения скрыто.
	Оболочка = Неопределено;
	
	Если КодВозврата = Неопределено Тогда 
		КодВозврата = 0;
	КонецЕсли;
	
	Возврат КодВозврата;
	
КонецФункции

&НаКлиенте
Функция БезопаснаяСтрокаЗапускаПриложения(КомандаЗапуска)

	Возврат ОбщегоНазначенияСлужебныйКлиентСервер.БезопаснаяСтрокаКоманды(КомандаЗапуска);

КонецФункции

&НаКлиенте
Функция СодержитНебезопасныеДействия(Знач СтрокаКоманды)
	
	Возврат СтрНайти(СтрокаКоманды, "$") <> 0
		Или СтрНайти(СтрокаКоманды, "`") <> 0
		Или СтрНайти(СтрокаКоманды, "|") <> 0
		Или СтрНайти(СтрокаКоманды, ";") <> 0
		Или СтрНайти(СтрокаКоманды, "&") <> 0;
	
КонецФункции

&НаКлиенте
Функция ПрочитатьИУдалитьФайлПротокола(ПутьКФайлу)
	
#Если ВебКлиент Тогда
	Возврат "";
#Иначе
	ФайлПротокола = Новый Файл(ПутьКФайлу);
	Если НЕ ФайлПротокола.Существует() Тогда
		Возврат "";
	КонецЕсли;
	
	ЧтениеФайлаПротокола = Новый ЧтениеТекста(ПутьКФайлу);
	Результат = ЧтениеФайлаПротокола.Прочитать();
	ЧтениеФайлаПротокола.Закрыть();
	
	УдалитьФайлы(ПутьКФайлу);
	
	Возврат ?(Результат = Неопределено, "", Результат);
#КонецЕсли
	
КонецФункции

&НаКлиенте
Функция ПапкаСистемныхПриложений_x86()
	
	Shell = Новый COMОбъект("Shell.Application");
	
	// Для 32-битной системы "C:\Windows\System32",
	// для 64-битной системы "C:\Windows\SysWOW64".
	Folder = Shell.Namespace(41);
	
	Возврат Folder.Self.Path + "\";
	
КонецФункции

#КонецОбласти

#Область Инициализация

#Если НаКлиенте Тогда

ДополнительныеПараметрыПечати = Новый Соответствие;
ДополнительныеПараметрыПечати.Вставить("Наименование налогового органа-получателя", "");

COMОбъектДоступен = КомпонентаПечатиДоступна();

#КонецЕсли

#КонецОбласти

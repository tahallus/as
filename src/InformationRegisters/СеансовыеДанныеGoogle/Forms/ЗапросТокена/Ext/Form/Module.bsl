
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Константы.ИдентификацияПриложенияGoogle.Получить()) Тогда
		
		Если Параметры.Свойство("ОписанияОбластейДоступа") Тогда
			ЗаполнитьОбластиДоступа(Параметры.ОписанияОбластейДоступа);
		Иначе
			ЗаполнитьОбластиДоступа(ОписанияВсехОбластейДоступа());
		КонецЕсли;
		
		ИдентификаторАвторизации = Новый УникальныйИдентификатор;
		ИдентификацияПриложения = РегистрыСведений.СеансовыеДанныеGoogle.ИдентификацияПриложения();
		ТекущийЭлемент = Элементы.АвторизоватьсяВGoogle;
		
	Иначе
		
		ОтключитьВозможностьАвторизации();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОбработатьВводТокенаЗапроса(Команда)
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Отправка токена запроса...'"));
	
	ПодключитьОбработчикОжидания("ОбменятьТокенЗапросаНаТокенДоступа", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция АдресЗапросаНаПодтверждениеДоступа(БраузерВОтдельномОкне)
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	"%1?scope=%2&state=%3&redirect_uri=%4&response_type=code&client_id=%5&approval_prompt=force",
	ИдентификацияПриложения.auth_uri,											 // 1
	ПараметрОбластьДоступа(),													 // 2
	ПараметрАвторизации(ИдентификаторАвторизации, БраузерВОтдельномОкне),		 // 3
	ОбменСGoogleКлиентСервер.АдресПеренаправления(ИдентификацияПриложения),		 // 4
	ИдентификацияПриложения.client_id);											 // 5
	
КонецФункции

&НаКлиенте
Функция ПараметрОбластьДоступа()
	
	Результат = Новый Массив;
	
	Для Каждого ТекОбластьДоступа Из ОбластиДоступа Цикл
		
		Если Не ТекОбластьДоступа.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекОбластьДоступа.ОбластьДоступа) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(ТекОбластьДоступа.ОбластьДоступа);
		
	КонецЦикла;
	
	Возврат СтрСоединить(Результат, " ");
	
КонецФункции

// Выполняет заполнение таблицы формы ОбластиДоступа на основании пер
//
// Параметры:
//  ОписанияОбластейДоступа	 - Массив - массив структур,
//  описания полей см. в ОбменСGoogleКлиентСервер.НовоеОписаниеОбластиДоступа()
//
&НаСервере
Процедура ЗаполнитьОбластиДоступа(ОписанияОбластейДоступа)
	
	ОбластиДоступа.Очистить();
	
	Для Индекс = 0 По ОписанияОбластейДоступа.ВГраница() Цикл
		
		ЗаполнитьЗначенияСвойств(ОбластиДоступа.Добавить(), ОписанияОбластейДоступа[Индекс]);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОписанияВсехОбластейДоступа()
	
	Результат = Новый Массив;
	
	ПоддерживаемыеОбласти = Новый Массив;
	ПоддерживаемыеОбласти.Добавить(Перечисления.ОбластиДоступаGoogle.Профиль);
	ПоддерживаемыеОбласти.Добавить(Перечисления.ОбластиДоступаGoogle.Календарь);
	ПоддерживаемыеОбласти.Добавить(Перечисления.ОбластиДоступаGoogle.Почта);
	
	Для Каждого ТекОбластьДоступа Из ПоддерживаемыеОбласти Цикл
		
		ОписаниеОбластиДоступа = ОбменСGoogleКлиентСервер.НовоеОписаниеОбластиДоступа();
		ОписаниеОбластиДоступа.Представление = ТекОбластьДоступа;
		ОписаниеОбластиДоступа.ОбластьДоступа = ОбменСGoogleКлиентСервер.ОбластьДоступа(ТекОбластьДоступа);
		
		Если ТекОбластьДоступа<>Перечисления.ОбластиДоступаGoogle.Профиль Тогда
			ОписаниеОбластиДоступа.Использование = Ложь;
			ОписаниеОбластиДоступа.Редактирование = Истина;
		КонецЕсли;
		
		Результат.Добавить(ОписаниеОбластиДоступа);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрАвторизации(ИдентификаторАвторизации, БраузерВОтдельномОкне)
	
	Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	"id=%1;zone=%2%3",
	ИдентификаторАвторизации,
	Формат(РаботаВМоделиСервиса.ЗначениеРазделителяСеанса(), "ЧГ="),
	?(БраузерВОтдельномОкне, ";closebrowser=true", ""));
	
	Возврат КодироватьСтроку(Результат, СпособКодированияСтроки.КодировкаURL);
	
КонецФункции

&НаКлиенте
Процедура АвторизоватьсяВGoogle(Команда)
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(АдресЗапросаНаПодтверждениеДоступа(Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбменятьТокенЗапросаНаТокенДоступа()
	
	Если Не ЗначениеЗаполнено(ТокенЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
	НСтр("ru = 'Токен запроса получен, выполняется обмен на токен доступа...'"),,,
	БиблиотекаКартинок.Информация32);
	
	СеансовыеДанные = ОбменятьТокенЗапросаНаСеансовыеДанные(
	ТокенЗапроса,
	ИдентификацияПриложения,
	ПараметрОбластьДоступа());
	
	Если ОбменСGoogleКлиентСервер.НеЗаполненТокенДоступа(СеансовыеДанные) Тогда
		ПоказатьОповещениеПользователя(
		НСтр("ru = 'Ошибка при получении токена доступа'"),,,
		БиблиотекаКартинок.Ошибка32);
	Иначе
		ПоказатьОповещениеПользователя(
		НСтр("ru = 'Токен доступа получен успешно'"),,,
		БиблиотекаКартинок.Успешно32);
	КонецЕсли;
	
	Закрыть(СеансовыеДанные);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбменятьТокенЗапросаНаСеансовыеДанные(ТокенЗапроса, ИдентификацияПриложения, ОбластьДанных)
	
	АдресДляПолученияТокенаДоступа = ОбщегоНазначенияКлиентСервер.СтруктураURI(
	ИдентификацияПриложения.token_uri);
	
	ИнтернетПрокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси(АдресДляПолученияТокенаДоступа.Схема);
	
	HTTPСоединение = Новый HTTPСоединение(
	АдресДляПолученияТокенаДоступа.Хост,
	АдресДляПолученияТокенаДоступа.Порт,,,
	ИнтернетПрокси,
	120,
	ОбщегоНазначенияКлиентСервер.НовоеЗащищенноеСоединение());
	
	ЗапросHTTP = Новый HTTPЗапрос;
	ЗапросHTTP.АдресРесурса = АдресДляПолученияТокенаДоступа.ПутьНаСервере;
	ЗапросHTTP.Заголовки["Content-Type"] = "application/x-www-form-urlencoded";
	ЗапросHTTP.УстановитьТелоИзСтроки(
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	"code=%1&client_id=%2&client_secret=%3&redirect_uri=%4&grant_type=authorization_code",
	ТокенЗапроса,
	ИдентификацияПриложения.client_id,
	ИдентификацияПриложения.client_secret,
	ОбменСGoogleКлиентСервер.АдресПеренаправления(ИдентификацияПриложения)));
	
	ОтветHTTP = HTTPСоединение.ОтправитьДляОбработки(ЗапросHTTP);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
	Результат = ПрочитатьJSON(ЧтениеJSON);
	
	Результат.Вставить("scope", СтрЗаменить(ОбластьДанных, " ", "+"));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОтключитьВозможностьАвторизации()
	
	СкрываемыеЭлементы = Новый Массив;
	СкрываемыеЭлементы.Добавить("ДекорацияЗаголовок");
	СкрываемыеЭлементы.Добавить("ГруппаАвторизоваться");
	СкрываемыеЭлементы.Добавить("ДекорацияЛиния");
	СкрываемыеЭлементы.Добавить("ГруппаТокенЗапроса");
	СкрываемыеЭлементы.Добавить("ДекорацияЛиния1");
	СкрываемыеЭлементы.Добавить("ГруппаКнопка");
	СкрываемыеЭлементы.Добавить("ГруппаКнопка");
	
	Для Каждого ТекЭлемент Из СкрываемыеЭлементы Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ТекЭлемент, "Видимость", Ложь);
	КонецЦикла;
	
	Элементы.ДекорацияУведомлениеОбИспользованииДанных.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
	НСтр("ru = 'Идентификация приложения Google не установлена.
	|
	|<a href=https://its.1c.ru/db/metod81#content:7551:hdoc>Узнайте</a>, как синхронизировать 1С:УНФ со службами Google
	|или подключить электронную почту Gmail по протоколу <a href=https://its.1c.ru/db/metod81#content:7494:hdoc>IMAP</a>.
	|'"));
	
	Элементы.ДекорацияУведомлениеОбИспользованииДанных.МаксимальнаяШирина = 0;
	Элементы.ДекорацияУведомлениеОбИспользованииДанных.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;
	
КонецПроцедуры

#КонецОбласти


#Область ОписаниеПеременных

&НаКлиенте
Перем ОтветПередЗакрытием;

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИсточникЗаписи") Тогда
		ИсточникЗаписи = Параметры.ИсточникЗаписи;
	КонецЕсли;
	Если Параметры.Свойство("НовыйСайт") Тогда
		Элементы.УзелОбмена.Видимость =  НЕ Параметры.НовыйСайт;
	Иначе
		Элементы.УзелОбмена.Видимость = (ИсточникЗаписи = Перечисления.ЗаписьНаУслугиИсточник.Сайт);
	КонецЕсли;
	Если Параметры.Свойство("УзелОбмена") Тогда
		УзелОбмена = Параметры.УзелОбмена;
	КонецЕсли;
	Если Параметры.Свойство("Услуга") Тогда
		Услуга = Параметры.Услуга;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиЗаписьНаУслуги.ИсточникЗаписи КАК ИсточникЗаписи,
		|	НастройкиЗаписьНаУслуги.Услуга КАК Услуга,
		|	НастройкиЗаписьНаУслуги.Ресурс КАК Ресурс,
		|	НастройкиЗаписьНаУслуги.УзелОбмена КАК УзелОбмена,
		|	НастройкиЗаписьНаУслуги.Длительность КАК Длительность
		|ИЗ
		|	РегистрСведений.НастройкиЗаписьНаУслуги КАК НастройкиЗаписьНаУслуги
		|ГДЕ
		|	НастройкиЗаписьНаУслуги.Услуга = &Услуга
		|	И НастройкиЗаписьНаУслуги.ИсточникЗаписи = &ИсточникЗаписи
		|	И НастройкиЗаписьНаУслуги.Ресурс.Ссылка <> ЗНАЧЕНИЕ(Справочник.КлючевыеРесурсы.ПустаяСсылка)
		|	// И НастройкиЗаписьНаУслуги.УзелОбмена = &УзелОбмена
		|
		|УПОРЯДОЧИТЬ ПО
		|	НастройкиЗаписьНаУслуги.Ресурс.Наименование";
		
		Если Параметры.Свойство("УзелОбмена") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, 
				"// И НастройкиЗаписьНаУслуги.УзелОбмена = &УзелОбмена", 
				" И НастройкиЗаписьНаУслуги.УзелОбмена = &УзелОбмена");
			Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
		КонецЕсли;

		Запрос.УстановитьПараметр("Услуга", Параметры.Услуга);
		Запрос.УстановитьПараметр("ИсточникЗаписи", ИсточникЗаписи);
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Количество() > 0 Тогда
			Ресурсы.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Ресурс"));
			Длительность = Результат[0].Длительность;
			УзелОбмена = Результат[0].УзелОбмена;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	НЗ = РегистрыСведений.НастройкиЗаписьНаУслуги.СоздатьНаборЗаписей();
	НЗ.Отбор.Услуга.Установить(Услуга);
	НЗ.Отбор.ИсточникЗаписи.Установить(ИсточникЗаписи);
	НЗ.Отбор.УзелОбмена.Установить(УзелОбмена);
	
	РесурсыМассив = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Ресурсы.ВыгрузитьЗначения());
	
	Для каждого ресурс Из РесурсыМассив Цикл
		Если НЕ ЗначениеЗаполнено(ресурс) Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтр = НЗ.Добавить();
		НовСтр.Услуга = Услуга;
		НовСтр.Длительность = Длительность;
		НовСтр.Ресурс = ресурс;
		НовСтр.ИсточникЗаписи = ИсточникЗаписи;
		НовСтр.УзелОбмена = УзелОбмена;
		
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	Если НЕ ДлительностьЗаполнена() Тогда
		Возврат;
	КонецЕсли; 
	Если НЕ РесурсыЗаполнены() Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Услуга) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
		НСтр("ru = 'Услуга не выбрана'"));
		
		Возврат;
	КонецЕсли;
		
	ОтветПередЗакрытием = Истина;
	СохранитьНастройки();
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ОтветПередЗакрытием = Ложь;
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтветПередЗакрытием = Неопределено Тогда
		Отказ = Истина;
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеОЗакрытии, "Сохранить изменения?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ДлительностьЗаполнена()
	
	Если Длительность < 10 Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
		НСтр("ru = 'Длительность услуги не должна быть меньше 10 минут, и должна быть кратной шагу планирования для ресурса (сотрудника, оборудования и т.д.). 
		|Например, шаг планирования - 30, длительность - 60: на услугу длительностью 60 минут можно записаться каждые 30 минут.'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция РесурсыЗаполнены()
	
	СписокЗаполнен = Ложь;
	Для каждого ресурс Из Ресурсы Цикл
		Если ресурс.Значение <> ПредопределенноеЗначение("Справочник.КлючевыеРесурсы.ПустаяСсылка") Тогда
			СписокЗаполнен = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ СписокЗаполнен ИЛИ Ресурсы.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
		НСтр("ru = 'Заполните ресурсы (сотрудников, оборудование и т.д.), которые задействованы в оказании услуги.'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если НЕ ДлительностьЗаполнена() Тогда
			Возврат;
		КонецЕсли;
		Если НЕ РесурсыЗаполнены() Тогда
			Возврат;
		КонецЕсли;
		
		ОтветПередЗакрытием = Истина;
		СохранитьНастройки();
		РезультатЗакрытия = Истина;
	Иначе
		ОтветПередЗакрытием = Ложь;
		РезультатЗакрытия = Ложь;
	КонецЕсли;
	
	Закрыть(РезультатЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура УслугаПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиЗаписьНаУслуги.Ресурс КАК Ресурс
	|ИЗ
	|	РегистрСведений.НастройкиЗаписьНаУслуги КАК НастройкиЗаписьНаУслуги
	|ГДЕ
	|	НастройкиЗаписьНаУслуги.Услуга = &Услуга";
	
	Запрос.УстановитьПараметр("Услуга", Услуга);
	
	Ресурсы.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ресурс"));
	
КонецПроцедуры

&НаКлиенте
Процедура УслугаПриИзменении(Элемент)
	УслугаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИсточникЗаписиПриИзменении(Элемент)
	
	Элементы.УзелОбмена.Видимость = (ИсточникЗаписи = ПредопределенноеЗначение("Перечисление.ЗаписьНаУслугиИсточник.Сайт"));
	
КонецПроцедуры

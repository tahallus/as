#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция КоличествоОшибокПодключения(Знач УчетнаяЗапись) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ) Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОшибкиПодключенияЭлектроннойПочтыУНФ.ДатаОшибки) КАК КоличествоОшибокПодключения
	|ИЗ
	|	РегистрСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ КАК ОшибкиПодключенияЭлектроннойПочтыУНФ
	|ГДЕ
	|	ОшибкиПодключенияЭлектроннойПочтыУНФ.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Если ЗначениеЗаполнено(Выборка.КоличествоОшибокПодключения) Тогда
		Возврат Выборка.КоличествоОшибокПодключения;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Процедура ЗарегистрироватьОшибку(Знач УчетнаяЗапись, Знач ИнформацияОбОшибке) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УчетнаяЗапись = УчетнаяЗапись;
	МенеджерЗаписи.ДатаОшибки = ТекущаяДата();
	МенеджерЗаписи.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция ПревышеноДопустимоеКоличествоОшибок(Знач УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОшибкиПодключенияЭлектроннойПочтыУНФ.ДатаОшибки) КАК КоличествоОшибок
	|ИЗ
	|	РегистрСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ КАК ОшибкиПодключенияЭлектроннойПочтыУНФ
	|ГДЕ
	|	ОшибкиПодключенияЭлектроннойПочтыУНФ.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Если Не ЗначениеЗаполнено(Выборка.КоличествоОшибок) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Выборка.КоличествоОшибок >= МаксимальноеКоличествоОшибокПодключения();
	
КонецФункции

Процедура ОчиститьЗарегистрированныеОшибки(Знач УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОшибкиПодключенияЭлектроннойПочтыУНФ.ДатаОшибки
	|ИЗ
	|	РегистрСведений.ОшибкиПодключенияЭлектроннойПочтыУНФ КАК ОшибкиПодключенияЭлектроннойПочтыУНФ
	|ГДЕ
	|	ОшибкиПодключенияЭлектроннойПочтыУНФ.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МаксимальноеКоличествоОшибокПодключения()
	
	Возврат 100;
	
КонецФункции

#КонецОбласти

#КонецЕсли
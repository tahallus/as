#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользуютсяХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	
	Элементы.ГруппаОтладки.Видимость = ИнтеграцияОбменШтрихМ.РежимОтладкиОбменаШтрихМ();
	
	Если НЕ Параметры.Свойство("Отбор") ИЛИ НЕ Параметры.Отбор.Свойство("КассаККМ") ИЛИ
		(Параметры.Отбор.Свойство("КассаККМ") И НЕ ЗначениеЗаполнено(Параметры.Отбор.КассаККМ)) Тогда
		
		Элементы.ГруппаДанных.Видимость = Ложь;
		Элементы.ГруппаНетДанных.Видимость = Истина;
		
	Иначе
		Элементы.ГруппаДанных.Видимость = Истина;
		Элементы.ГруппаНетДанных.Видимость = Ложь;
		Запись.КассаККМ = Параметры.Отбор.КассаККМ;
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПриЧтенииСозданииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ПерейтиКЗаполнениюЦен(Команда)
	
	ОткрытьФорму("Обработка.ФормированиеЦенНоменклатуры.Форма.ФормаПомощника");
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрационныйНомерПриИзменении(Элемент)
	ЗаписатьЗапись();
КонецПроцедуры

&НаКлиенте
Процедура ТокенПриИзменении(Элемент)
	ЗаписатьЗапись();
КонецПроцедуры

&НаКлиенте
Процедура ПрайсЛистПриИзменении(Элемент)
	ЗаписатьЗапись();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПрайсЛиста(Команда)
	
	ОткрытьФорму("Обработка.ПрайсЛистыОрганизации.Форма", Новый Структура("ПрайсЛист", Запись.ПрайсЛист));
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколОбмена(Команда)
	ОткрытьФорму("РегистрСведений.НастройкиКассыШтрихМ.Форма.ФормаПротокола",Новый Структура("Касса", Запись.КассаККМ));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Подключить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Запись.РегистрационныйНомер) Тогда
		ТекстСообщения = НСтр("ru = 'Введите регистрационный номер, полученный при регистрации ККМ в ФНС.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "Запись.РегистрационныйНомер");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.Токен) Тогда
		ТекстСообщения = НСтр("ru = 'Введите пароль для подключения (token),
		|полученный на ККМ при регистрации у оператора фискальных данных (ОФД).'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ЗаписьТокен");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.ПрайсЛист) Тогда
		ТекстСообщения = НСтр("ru = 'Для работы с кассой необходим прайс-лист для указания цен.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ПрайсЛист");
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОЗаписиОбъекта", ЭтотОбъект);
	
	Если Модифицированность Тогда
		ЗаголовокВопроса = НСтр("ru = 'Подключение кассового аппарата'");
		ТекстВопроса = НСтр("ru = 'Для подключения необходимо сохранить введенные данные. Сохранить?'");
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Сохранить'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отменить'"));
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Да, ЗаголовокВопроса);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

//
&НаКлиенте
Процедура ВыгрузитьТовары(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаВыгрузкаТоваров", ЭтотОбъект);
	
	ЗаголовокВопроса = НСтр("ru = 'Выгрузка товаров и цен для кассового аппарата'");
	ТекстВопроса = НСтр("ru = 'Все товары и цены будут выгружены в кассовый аппарат. Выгрузить?'");
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Выгрузить'"));
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отменить'"));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Да, ЗаголовокВопроса);
КонецПроцедуры

//
&НаКлиенте
Процедура ОчиститьТовары(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаУдалениеТоваров", ЭтотОбъект);
	
	ЗаголовокВопроса = НСтр("ru = 'Удаление товаров и цен с кассового аппарата'");
	ТекстВопроса = НСтр("ru = 'Вы действительно хотите удалить все товары и цены с кассового аппарата?'");
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Удалить'"));
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отменить'"));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Да, ЗаголовокВопроса);
КонецПроцедуры

//
&НаКлиенте
Процедура ЗагрузитьЧеки(Команда)
	
	ВыборПериода = Новый СписокЗначений;
	ВыборПериода.Добавить("ТекущаяНеделя", НСтр("ru='Текущая неделя'"));
	ВыборПериода.Добавить("ТекущийМесяц", НСтр("ru='Текущий месяц'"));
	ВыборПериода.Добавить("ПрошлыйМесяц", НСтр("ru='Прошлый и текущий месяц'"));
	ВыборПериода.Добавить("ТекущийКвартал", НСтр("ru='Текущий квартал'"));
	ВыборПериода.Добавить("ТекущийГод", НСтр("ru='Текущий год'"));
	ВыборПериода.Добавить("Все", НСтр("ru='За все периоды'"));
	
	ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ПослеВыбораПериода", ЭтотОбъект),ВыборПериода,Элементы.ЗагрузитьЧеки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПериода(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ПериодЗагрузки.ДатаОкончания = ТекущаяДата();
		
		Если Результат.Значение = "ТекущаяНеделя" Тогда
			ПериодЗагрузки.ДатаНачала = НачалоНедели(ТекущаяДата());
		ИначеЕсли Результат.Значение = "ТекущийМесяц" Тогда
			ПериодЗагрузки.ДатаНачала = НачалоМесяца(ТекущаяДата());
		ИначеЕсли Результат.Значение = "ПрошлыйМесяц" Тогда
			ПериодЗагрузки.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
		ИначеЕсли Результат.Значение = "ТекущийКвартал" Тогда
			ПериодЗагрузки.ДатаНачала = НачалоКвартала(ТекущаяДата());
		ИначеЕсли Результат.Значение = "ТекущийГод" Тогда
			ПериодЗагрузки.ДатаНачала = НачалоГода(ТекущаяДата());
		ИначеЕсли Результат.Значение = "Все" Тогда
			ПериодЗагрузки.ДатаНачала = Дата(2016,1,1,1,1,1);
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаЗагрузкаЧеков", ЭтотОбъект);
		
		ЗаголовокВопроса = НСтр("ru = 'Загрузка чеков с кассового аппарата'");
		ТекстВопроса = НСтр("ru = 'Будут загружены все кассовые чеки за выбранный период. Загрузить?'");
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Загрузить'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отменить'"));
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Да, ЗаголовокВопроса);
		
	КонецЕсли;
	
КонецПроцедуры
//
&НаКлиенте
Процедура ПослеВопросаВыгрузкаТоваров(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыгрузитьТоварыНаСервере();
		ЗаголовокПредупреждения = НСтр("ru = 'Выгрузка товаров и цен'");
		ТекстПредупреждения = НСтр("ru = 'Выгрузка товаров и цен займет около 3 минут."
			" Вы можете продолжить работу с программой в это время.'");
		ДополнительныеПараметры = Новый Структура("РежимТовары", Истина);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПредупрежденияОРегистрации", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения,, ЗаголовокПредупреждения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаСнятиеСРегистрации(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаголовокПредупреждения = НСтр("ru = 'Отключение кассового аппарата.'");
		ДополнительныеПараметры = Новый Структура("Режим", 2);
		ТекстПредупреждения = НСтр("ru = 'Отключение может занять некоторое время.'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПредупрежденияОРегистрации", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения,, ЗаголовокПредупреждения);
	КонецЕсли;
КонецПроцедуры

//
&НаКлиенте
Процедура ПослеВопросаУдалениеТоваров(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОчиститьТоварыНаСервере();
		ЗаголовокПредупреждения = НСтр("ru = 'Удаление товаров'");
		ТекстПредупреждения = НСтр("ru = 'Удаление товаров займет около 3 мин."
			" Вы можете продолжить работу с программой в это время.'");
		ДополнительныеПараметры = Новый Структура("РежимТоварыОчистка", Истина);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПредупрежденияОРегистрации", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения,, ЗаголовокПредупреждения);
	КонецЕсли;
	
КонецПроцедуры
//
&НаКлиенте
Процедура ПослеВопросаЗагрузкаЧеков(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗагрузитьЧекиНаСервере();
		ЗаголовокПредупреждения = НСтр("ru = 'Загрузка кассовых чеков'");
		ТекстПредупреждения = НСтр("ru = 'Загрузка кассовых чеков может занять продолжительное время."
			" Вы можете продолжить работу с программой в это время.'");
		ДополнительныеПараметры = Новый Структура("РежимДокументы", Истина);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПредупрежденияОРегистрации", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения,, ЗаголовокПредупреждения);
	КонецЕсли;

КонецПроцедуры
//
&НаКлиенте
Процедура ПослеПредупрежденияОРегистрации(Знач ДополнительныеПараметры) Экспорт
	
	ЕстьОшибки = Ложь;
	СообщениеОбОшибке = "";
	
	Если НЕ ДополнительныеПараметры = Неопределено Тогда
		Если ДополнительныеПараметры.Свойство("Режим") Тогда
			ВыполнитьРегистрациюНаСервере(ДополнительныеПараметры.Режим, ЕстьОшибки, СообщениеОбОшибке);
			Если ЕстьОшибки Тогда
				ЗаголовокПредупреждения = НСтр("ru = 'Подключение кассового аппарата.'");
				ПоказатьПредупреждение(, СообщениеОбОшибке,, ЗаголовокПредупреждения);
			Иначе
				ОповеститьОбИзменении(Запись.КассаККМ);
				ПриЧтенииСозданииНаСервере();
			КонецЕсли;
		ИначеЕсли ДополнительныеПараметры.Свойство("РежимТовары") Тогда
			ВыполнитьВыгрузкуТоваровНаСервере(ЕстьОшибки, СообщениеОбОшибке);
			Если ЕстьОшибки Тогда
				ЗаголовокПредупреждения = НСтр("ru = 'Выгрузка товаров на кассовый аппарат.'");
				ПоказатьПредупреждение(, СообщениеОбОшибке,, ЗаголовокПредупреждения);
			Иначе
				ОповеститьОбИзменении(Запись.КассаККМ);
				ПриЧтенииСозданииНаСервере();
			КонецЕсли;
		ИначеЕсли ДополнительныеПараметры.Свойство("РежимТоварыОчистка") Тогда
			ВыполнитьОчисткуТоваровНаСервере(ЕстьОшибки, СообщениеОбОшибке);
			Если ЕстьОшибки Тогда
				ЗаголовокПредупреждения = НСтр("ru = 'Очистка товаров на кассовом аппарате.'");
				ПоказатьПредупреждение(, СообщениеОбОшибке,, ЗаголовокПредупреждения);
			Иначе
				ОповеститьОбИзменении(Запись.КассаККМ);
				ПриЧтенииСозданииНаСервере();
			КонецЕсли;
		ИначеЕсли ДополнительныеПараметры.Свойство("РежимДокументы") Тогда
			ВыполнитьЗагрузкуЧековНаСервере(ЕстьОшибки, СообщениеОбОшибке);
			Если ЕстьОшибки Тогда
				ЗаголовокПредупреждения = НСтр("ru = 'Загрузка чеков с кассового аппарата.'");
				ПоказатьПредупреждение(, СообщениеОбОшибке,, ЗаголовокПредупреждения);
			Иначе
				ОповеститьОбИзменении(Запись.КассаККМ);
				ПриЧтенииСозданииНаСервере();
			КонецЕсли;
		КонецЕсли;
	Иначе
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ПослеВопросаОЗаписиОбъекта(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Успешно = Истина;
		Если Модифицированность Или НЕ ЗначениеЗаполнено(Запись.КассаККМ) Тогда
			ЗаписатьЗапись();
		КонецЕсли;
		Если Успешно И ЗначениеЗаполнено(Запись.КассаККМ) Тогда
			ЗаголовокПредупреждения = НСтр("ru = 'Подключение кассового аппарата'");
			Если СостояниеРегистрации =
					ПредопределенноеЗначение("Перечисление.СостоянияРегистрацииКассовогоАппарата.Подключен") Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаСнятиеСРегистрации", ЭтотОбъект);
				
				ЗаголовокВопроса = НСтр("ru = 'Отключение кассового аппарата'");
				ТекстВопроса = НСтр("ru = 'После отключения данные по чекам не смогут быть загружены. Отключить?'");
				СписокКнопок = Новый СписокЗначений;
				СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Отключить'"));
				СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отменить'"));
				ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Да, ЗаголовокВопроса);
			Иначе
				Результат = ПодключитьОтключитьКассуПоТарифу(Истина);
				Если Результат Тогда
					ДополнительныеПараметры = Новый Структура("Режим", 1);
					ТекстПредупреждения = НСтр("ru = 'Подключение может занять некоторое время.'");
				Иначе
					ТекстПредупреждения = НСтр("ru = 'Закончились свободные лицензии для регистрации касс.
					|Для регистрации кассового аппарата вам необходимо увеличить количество разрешенных касс по тарифу
					|в личном кабинете абонента.'");
				КонецЕсли;
				
				ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПредупрежденияОРегистрации", ЭтотОбъект, ДополнительныеПараметры);
				ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения,, ЗаголовокПредупреждения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	МенеджерЗаписи = РегистрыСведений.НастройкиКассыШтрихМ.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.КассаККМ = Запись.КассаККМ;
	МенеджерЗаписи.Прочитать();
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.КассаККМ = Запись.КассаККМ;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(МенеджерЗаписи,"Запись");
	
	
	Токен = Формат(Запись.Токен, "ЧГ=");
	
	ИнформацияОКассе = Новый Структура("РегистрационныйНомер", Запись.РегистрационныйНомер);
	
	ЗарегистрированнаяКасса = ОбменСКассовымСерверомШтрихМ.ЗарегистрированнаяКассаНаСервере(ИнформацияОКассе, Ложь, "");
	
	УстановитьСостояниеОбъекта();
	
	ПериодЗагрузки.ДатаНачала = Запись.ДатаНачалаЗапросаЧеков;
	ПериодЗагрузки.ДатаОкончания = Запись.ДатаОкончанияЗапросаЧеков;
	
	ОрганизацияККМ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта( Запись.КассаККМ, "Владелец");
	// видимость прайслиста
	Если КоличествоПрайсЛистовОрганизации(ОрганизацияККМ) < 2 Тогда
		Элементы.ПрайсЛист.Видимость = Ложь;
		
		Если НЕ ЗначениеЗаполнено(Запись.ПрайсЛист) Тогда
			
			Запись.ПрайсЛист = ИнтеграцияОбменШтрихМ.ПолучитьПрайсЛистПоУмолчанию(ОрганизацияККМ);
			
		КонецЕсли;
		
	Иначе
		Элементы.ПрайсЛист.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗапись()
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	//Попытка
		НастройкиКассы = РеквизитФормыВЗначение("Запись");
		
		НастройкиКассы.Записать(Истина);
		
		ЗначениеВРеквизитФормы(НастройкиКассы, "Запись");
		
		Модифицированность = Ложь;
	//Исключение
	//	
	//КонецПопытки;
	
КонецПроцедуры

//
&НаСервере
Процедура ЗагрузитьЧекиНаСервере()
	
	МенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	МенеджерЗаписи.ЗапроситьЧекиНаСервереШтрихМ = Истина;
	МенеджерЗаписи.ДатаНачалаЗапросаЧеков = ПериодЗагрузки.ДатаНачала;
	МенеджерЗаписи.ДатаОкончанияЗапросаЧеков = ПериодЗагрузки.ДатаОкончания;
	МенеджерЗаписи.Записать();
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "Запись");
	
	УстановитьСостояниеОбменаЧеки();
	
КонецПроцедуры
//
&НаСервере
Процедура ВыгрузитьТоварыНаСервере()
	
	МенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	МенеджерЗаписи.ЗарегистрироватьТоварыНаСервереШтрихМ = Истина;
	МенеджерЗаписи.Записать();
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "Запись");
	
	УстановитьСостояниеОбменаТовары();
	
КонецПроцедуры
//
&НаСервере
Процедура ВыполнитьРегистрациюНаСервере(Режим, ЕстьОшибки, СообщениеОбОшибке)
	
	РеквизитыКассы = Новый Структура("РегистрационныйНомер, Токен, ИдентификаторОбластиНаСервереШтрихМ",
		Запись.РегистрационныйНомер,запись.Токен, Запись.ИдентификаторОбластиНаСервереШтрихМ);
		
	ОбменСКассовымСерверомШтрихМ.ВыполнитьРегистрациюНаСервере(РеквизитыКассы, Режим,
		ЕстьОшибки, СообщениеОбОшибке);
	
	
КонецПроцедуры
//
&НаСервере
Процедура ОчиститьТоварыНаСервере()
	
	МенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	МенеджерЗаписи.ОчиститьТоварыНаСервереШтрихМ = Истина;
	МенеджерЗаписи.Записать();
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "Запись");
	
	УстановитьСостояниеОбменаТовары();
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеОбменаТовары()
	
	СостояниеПодключен = СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.Подключен;
	
	Ожидание = Ложь;
	Если Запись.ЗарегистрироватьТоварыНаСервереШтрихМ Тогда
		Элементы.ВыгрузитьТовары.Доступность = Ложь;
		Элементы.ВыгрузитьТовары.Заголовок = НСтр("ru = 'Идёт выгрузка товаров и цен'");
		Элементы.ОчиститьТовары.Доступность = Ложь;
		Элементы.ОчиститьТовары.Заголовок = НСтр("ru = 'Удалить товары и цены'");
		
		Ожидание = Истина;
		//Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"),
		//	Запись.КассаККМ.Наименование, Элементы.ВыгрузитьТовары.Заголовок);
	ИначеЕсли Запись.ПроверитьРегистрациюТоваровНаСервереШтрихМ Тогда
		Элементы.ВыгрузитьТовары.Доступность = Ложь;
		Элементы.ВыгрузитьТовары.Заголовок = НСтр("ru = 'Проверка загрузки цен'");
		Элементы.ОчиститьТовары.Доступность = Ложь;
		Элементы.ОчиститьТовары.Заголовок = НСтр("ru = 'Удалить товары и цены'");
		
		Ожидание = Истина;
		//Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"),
		//	Запись.КассаККМ.Наименование, Элементы.ВыгрузитьТовары.Заголовок);
	ИначеЕсли Запись.ОчиститьТоварыНаСервереШтрихМ Тогда
		Элементы.ВыгрузитьТовары.Доступность = Ложь;
		Элементы.ВыгрузитьТовары.Заголовок = НСтр("ru = 'Выгрузить товары и цены'");
		Элементы.ОчиститьТовары.Доступность = Ложь;
		Элементы.ОчиститьТовары.Заголовок = НСтр("ru = 'Идёт удаление товаров и цен'");
		
		Ожидание = Истина;
		//Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"),
		//	Запись.КассаККМ.Наименование, Элементы.ОчиститьТовары.Заголовок);
	Иначе
		Элементы.ВыгрузитьТовары.Заголовок = НСтр("ru = 'Выгрузить товары и цены'");
		Элементы.ОчиститьТовары.Заголовок = НСтр("ru = 'Удалить товары и цены'");
		Элементы.ВыгрузитьТовары.Доступность = СостояниеПодключен;
		Элементы.ОчиститьТовары.Доступность = СостояниеПодключен;
	КонецЕсли;
	
	Элементы.Подключить.Доступность = Элементы.Подключить.Доступность И Не Ожидание;
КонецПроцедуры
//
&НаСервере
Процедура УстановитьСостояниеОбменаЧеки()
	
	СостояниеПодключен = СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.Подключен;
	
	Ожидание = Ложь;
	Если Запись.ЗапроситьЧекиНаСервереШтрихМ Тогда
		Элементы.ЗагрузитьЧеки.Доступность = Ложь;
		Элементы.ЗагрузитьЧеки.Заголовок = НСтр("ru = 'Идёт загрузка чеков'");
		Ожидание = Истина;
		//Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"),
		//	Запись.КассаККМ.Наименование, Элементы.ЗагрузитьЧеки.Заголовок);
	Иначе
		Элементы.ЗагрузитьЧеки.Заголовок = НСтр("ru = 'Загрузить чеки'");
	КонецЕсли;
	
	Элементы.Подключить.Доступность = Элементы.Подключить.Доступность И Не Ожидание;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьВыгрузкуТоваровНаСервере(ЕстьОшибки, СообщениеОбОшибке)
	
	ОбменСКассовымСерверомШтрихМПереопределяемый.ВыполнитьВыгрузкуТоваровНаСервере(Запись.КассаККМ,
		ЕстьОшибки, СообщениеОбОшибке);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОчисткуТоваровНаСервере(ЕстьОшибки, СообщениеОбОшибке)
	
	ИнформацияОКассе = Новый ТаблицаЗначений;
	ИнформацияОКассе.Колонки.Добавить("РегистрационныйНомер");
	ИнформацияОКассе.Колонки.Добавить("Результат");
	ИнформацияОКассе.Колонки.Добавить("СообщениеОбмена");
	ИнформацияОКассе.Колонки.Добавить("СообщениеВыполнения");
	СтрокаИнформации = ИнформацияОКассе.Добавить();
	СтрокаИнформации.РегистрационныйНомер = Запись.РегистрационныйНомер;
	ОбменСКассовымСерверомШтрихМ.ВыполнитьОчисткуТоваровНаКассовыхАппаратах(ИнформацияОКассе,
		ЕстьОшибки, СообщениеОбОшибке);
		
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуЧековНаСервере(ЕстьОшибки, СообщениеОбОшибке)
	
	ПараметрыМетода = Новый Структура();
	ИнформацияОКассе = Новый ТаблицаЗначений;
	ИнформацияОКассе.Колонки.Добавить("РегистрационныйНомер");
	ИнформацияОКассе.Колонки.Добавить("ДатаНачалаЗапросаЧеков");
	ИнформацияОКассе.Колонки.Добавить("ДатаОкончанияЗапросаЧеков");
	ИнформацияОКассе.Колонки.Добавить("Результат");
	ИнформацияОКассе.Колонки.Добавить("СообщениеОбмена");
	СтрокаИнформации = ИнформацияОКассе.Добавить();
	СтрокаИнформации.РегистрационныйНомер = Запись.РегистрационныйНомер;
	СтрокаИнформации.ДатаНачалаЗапросаЧеков = Запись.ДатаНачалаЗапросаЧеков;
	СтрокаИнформации.ДатаОкончанияЗапросаЧеков = Запись.ДатаОкончанияЗапросаЧеков;
	
	ПараметрыМетода.Вставить("ИнформацияОКассе", ИнформацияОКассе);
	ПараметрыМетода.Вставить("ЕстьОшибки", ЕстьОшибки);
	ПараметрыМетода.Вставить("СообщениеОбОшибке", СообщениеОбОшибке);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Фоновое получение кассовых чеков'");
	
	ДлительныеОперации.ВыполнитьВФоне(
		"ОбменСКассовымСерверомШтрихМПереопределяемый.ПолучитьКассовыеДокументыДляКассовыхАппаратов", ПараметрыМетода,
		ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Функция ПодключитьОтключитьКассуПоТарифу(Подключить)
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура УстановитьСостояниеОбъекта()
	
	СостояниеРегистрации = ОбменСКассовымСерверомШтрихМПереопределяемый.СостояниеРегистрацииККМ(Запись.КассаККМ);
	
	Элементы.РегистрационныйНомер.ТолькоПросмотр = Истина;
	Элементы.Токен.ТолькоПросмотр = Истина;
	Подключен = Ложь;
	
	Если СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.НеПодключен Тогда
		Элементы.Подключить.Заголовок = НСтр("ru = 'Подключить'");
		Элементы.Подключить.Доступность = Истина;
		Элементы.РегистрационныйНомер.ТолькоПросмотр = Ложь;
		Элементы.Токен.ТолькоПросмотр = Ложь;
	ИначеЕсли СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.Подключен Тогда
		Элементы.Подключить.Заголовок = НСтр("ru = 'Отключить'");
		Элементы.Подключить.Доступность = Истина;
		Элементы.Токен.ТолькоПросмотр = Ложь;
		Подключен = ЗначениеЗаполнено(Запись.КассаККМ);
	ИначеЕсли СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.ОжидаетПодключение Тогда
		// Скорее всего, произошла ошибка при подключении.
		// Не блокируем повторное подключение и токен.
		Элементы.Подключить.Заголовок = НСтр("ru = 'Переподключить'");
		Элементы.Подключить.Доступность = Истина;
		Элементы.Токен.ТолькоПросмотр = Ложь;
		Подключен = ЗначениеЗаполнено(Запись.КассаККМ);
	ИначеЕсли СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.ОжидаетПереподключение Тогда
		Элементы.Подключить.Заголовок = НСтр("ru = 'Идёт переподключение'");
		Элементы.Подключить.Доступность = Ложь;
	ИначеЕсли СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.ОжидаетОтключение Тогда
		// Скорее всего, произошла ошибка при отключении.
		// Не блокируем повторное подключение и токен.
		Элементы.Подключить.Заголовок = НСтр("ru = 'Переподключить'");
		Элементы.Подключить.Доступность = Истина;
		Элементы.РегистрационныйНомер.ТолькоПросмотр = Ложь;
		Элементы.Токен.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.КассаККМ) Тогда
		Элементы.Подключить.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ЗагрузитьЧеки.Доступность = Подключен;
	
	Заголовок = СтрШаблон(
		НСтр("ru = '%1 (%2)'"),
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта( Запись.КассаККМ,"Наименование"),
		СостояниеРегистрации);
	
	Если Подключен Тогда
		УстановитьСостояниеОбменаТовары();
		УстановитьСостояниеОбменаЧеки();
		УстановитьСостояниеОтключеннаяЛицензия();
	КонецЕсли;
	
	Если СостояниеРегистрации = Перечисления.СостоянияРегистрацииКассовогоАппарата.НеПодключен
			И РаботаВМоделиСервиса.РазделениеВключено() Тогда
		ИнформацияПоТарифам = ОбменСКассовымСерверомШтрихМПереопределяемый.ИнформацияПоТарифам();
		Если ИнформацияПоТарифам = Неопределено Тогда
			Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаНетЛицензий;
			Элементы.ДекорацияНетЛицензий.Заголовок = 
				НСтр("ru = 'Произошла ошибка при получении информации о тарифном плане."
					"Обратитесь к обслуживающему вас партнеру компании 1С.'");
		Иначе
			Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаПодключения;
		КонецЕсли;
	Иначе
		Элементы.СтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаПодключения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗарегистрированнаяКасса) Тогда
		ПротоколОбмена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗарегистрированнаяКасса, "СообщениеПриРегистрации");
	Иначе
		ПротоколОбмена = Запись.СообщениеПриРегистрации;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеОтключеннаяЛицензия()
	
	Возврат;
	
КонецПроцедуры

&НаСервере
Функция КоличествоПрайсЛистовОрганизации(Организация) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПрайсЛисты.Ссылка) КАК КоличествоПрайсов
	|ИЗ
	|	Справочник.ПрайсЛисты КАК ПрайсЛисты
	|ГДЕ
	|	НЕ ПрайсЛисты.ПометкаУдаления");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоПрайсов;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьНастройкиКоманда(Команда)
	ЗаписатьЗапись();
КонецПроцедуры

&НаКлиенте
Процедура ЗапросСостояния(Команда)
	
	Если НЕ ЗначениеЗаполнено(Запись.РегистрационныйНомер) Тогда
		Сообщение = НСтр("ru = 'Введите регистрационный номер.'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиент.СообщитьПользователю(Сообщение,, "РегистрационныйНомер", "Запись.РегистрационныйНомер");
		Возврат;
	КонецЕсли;
	
	ЗапросСостоянияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗапросСостоянияНаСервере()
	
	ЕстьОшибки = Ложь;
	СообщениеОбОшибке = "";
	
	ИнформацияОКассе = Новый ТаблицаЗначений;
	ИнформацияОКассе.Колонки.Добавить("РегистрационныйНомер");
	ИнформацияОКассе.Колонки.Добавить("Результат");
	ИнформацияОКассе.Колонки.Добавить("СообщениеОбмена");
	ИнформацияОКассе.Колонки.Добавить("СостояниеККТ");
	ИнформацияОКассе.Колонки.Добавить("СообщениеВыполнения");
	ИнформацияОКассе.Колонки.Добавить("Ссылка");
	
	СтрокаИнформации = ИнформацияОКассе.Добавить();
	СтрокаИнформации.РегистрационныйНомер = Запись.РегистрационныйНомер;
	
	ЗарегистрированнаяКасса = ОбменСКассовымСерверомШтрихМ.ЗарегистрированнаяКассаНаСервере(СтрокаИнформации, Ложь, СообщениеОбОшибке);
	
	Если ЗарегистрированнаяКасса = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке);
	Иначе
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗарегистрированнаяКасса, "СостояниеПодключения") =
			Перечисления.СостоянияРегистрацииКассовогоАппарата.Подключен Тогда
				СтрокаИнформации.Ссылка = ЗарегистрированнаяКасса;
				ОбменСКассовымСерверомШтрихМ.ВыполнитьЗапросСостоянияКассовыхАппаратов(
					ИнформацияОКассе,
					ЕстьОшибки,
					СообщениеОбОшибке);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

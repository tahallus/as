#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДоступныеВидыПродукции();
	
	РежимВыбора = Параметры.РежимВыбора;
	Элементы.ВыбратьИзСправочника.Видимость    = РежимВыбора;
	Элементы.Список.РежимВыбора                = РежимВыбора;
	Если РежимВыбора Тогда
		Элементы.ВыбратьИзКлассификатора.Заголовок = НСтр("ru = 'Выбрать'");
	Иначе
		Элементы.ВыбратьИзКлассификатора.Заголовок = НСтр("ru = 'Загрузить'");
	КонецЕсли;
	
	Список.ТекстЗапроса = ИнтеграцияИС.ОпределитьТекстЗапросаСопоставлениеКодовТНВЭД();
	
	Если ЗначениеЗаполнено(Параметры.ВидПродукции) Тогда
		
		ВидыПродукцииОтбора = Новый Массив;
		Если ИнтеграцияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(Параметры.ВидПродукции) Тогда
			ВидыПродукцииОтбора.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС);
			ВидыПродукцииОтбора.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС);
		ИначеЕсли ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(Параметры.ВидПродукции) Тогда
			ВидыПродукцииОтбора.Добавить(Перечисления.ВидыПродукцииИС.Табак);
			ВидыПродукцииОтбора.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
		Иначе
			ВидыПродукцииОтбора.Добавить(Параметры.ВидПродукции);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"ВидПродукции",
			ВидыПродукцииОтбора,
			ВидСравненияКомпоновкиДанных.ВСписке,,
			ЗначениеЗаполнено(Параметры.ВидПродукции));
		
		ВидПродукции = Параметры.ВидПродукции;
		
		Элементы.ВидПродукцииИС.Видимость = Ложь;
		Элементы.ВидПродукции.Видимость   = Ложь;
		
	КонецЕсли;
	
	Организация = Параметры.Организация;
	Если Параметры.Свойство("ВозвращатьСсылкуНаЭлементКлассификатора") Тогда
		ВозвращатьСсылкуНаЭлементКлассификатора = Параметры.ВозвращатьСсылкуНаЭлементКлассификатора;
	КонецЕсли;
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидПродукцииПриИзменении(Элемент)
	
	ВидыПродукцииОтбора = Новый Массив;
	Если ИнтеграцияИСКлиентСервер.ЭтоМолочнаяПродукцияИСМП(ВидПродукции) Тогда
		ВидыПродукцииОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС"));
		ВидыПродукцииОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС"));
	ИначеЕсли ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		ВидыПродукцииОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Табак"));
		ВидыПродукцииОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.АльтернативныйТабак"));
	Иначе
		ВидыПродукцииОтбора.Добавить(ВидПродукции);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ВидПродукции",
		ВидыПродукцииОтбора,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		ЗначениеЗаполнено(ВидПродукции));
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначенияСписка(ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначенияСписка(Значение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КодыТНВЭДОнлайнВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначенияОнлайнКлассификатораИзСписка(ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КодыТНВЭДОнлайнВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначенияОнлайнКлассификатораИзСписка(Значение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьИзКлассификатора(Команда)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.КодыТНВЭДОнлайн.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВыбораЗначенияОнлайнКлассификатораИзСписка(ТекущиеДанные.ПолучитьИдентификатор(), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзСправочника(Команда)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВыбораЗначенияСписка(ТекущиеДанные, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиКодыТНВЭД(Команда)
	
	ОчиститьСообщения();
	НайтиКодыТНВЭДНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиКодыТНВЭДНаКлиенте(ВызовПослеАвторизации = Ложь)
	
	ТребуетсяОбновитьКлючСессии = ЗагрузитьКодыТНВЭД(Организация, ВидПродукции);
	
	Если ТребуетсяОбновитьКлючСессии = Истина Тогда
		Если ВызовПослеАвторизации Тогда
			ТекстОшибки = НСтр("ru = 'Не удалось выполнить авторизацию.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Иначе
			ЗапроситьКлючСессииНачало();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗапроситьКлючСессииНачало()
	
	ОповещениеПриЗапросеКлючаСессии = Новый ОписаниеОповещения("ЗапроситьКлючСессииЗавершение", ЭтотОбъект);
	
	Если ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		ПараметрыЗапроса = ИнтерфейсМОТПКлиентСервер.ПараметрыЗапросаКлючаСессии(Организация);
	Иначе
		ПараметрыЗапроса = ИнтерфейсИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии(Организация);
	КонецЕсли;
	
	ИнтерфейсАвторизацииИСМПКлиент.ЗапроситьКлючСессии(
		ПараметрыЗапроса, 
		ОповещениеПриЗапросеКлючаСессии);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьКлючСессииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОтказОтАвторизации = Ложь;
	ОшибкаАвторизации  = Ложь;
	
	Если ТипЗнч(Результат) <> Тип("Соответствие") Тогда
		ОтказОтАвторизации = Истина;
	Иначе
		РезультатАвторизации = Результат[Организация];
		
		Если РезультатАвторизации = Неопределено Тогда
			ОшибкаАвторизации = Истина;
			ТекстОшибки = НСтр("ru = 'Произошла ошибка при авторизации.'");
		ИначеЕсли РезультатАвторизации <> Истина Тогда
			ОшибкаАвторизации = Истина;
			ТекстОшибки = РезультатАвторизации;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтказОтАвторизации Тогда
		Возврат;
	ИначеЕсли ОшибкаАвторизации Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	Иначе
		НайтиКодыТНВЭДНаКлиенте(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьКодыТНВЭД(Организация, ВидПродукции)
	
	РезультатПроверки = ИнтерфейсИСМП.КодыТНВЭДПоВидуПродукции(ВидПродукции);
	
	Если РезультатПроверки.ТребуетсяОбновлениеКлючаСессии Тогда
		Возврат Истина;
	ИначеЕсли РезультатПроверки.КодыТНВЭД = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(РезультатПроверки.ТекстОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	КодыТНВЭДОнлайн.Очистить();
	Для Каждого СтрокаКодаТНВЭД Из РезультатПроверки.КодыТНВЭД Цикл
		
		НоваяСтрока = КодыТНВЭДОнлайн.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКодаТНВЭД);
		
	КонецЦикла;
	
	ОпределитьНаличиеКодаТНВЭД();
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДоступныеВидыПродукции()
	
	ДоступныеВидыПродукции = ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(Истина);
	Элементы.ВидПродукции.СписокВыбора.Очистить();
	Для Каждого ДоступныйВидПродукции Из ДоступныеВидыПродукции Цикл
		
		Если ИнтеграцияИСПовтИсп.ЭтоПродукцияИСМП(ДоступныйВидПродукции, Истина)
			И ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(ДоступныйВидПродукции) Тогда
			Элементы.ВидПродукции.СписокВыбора.Добавить(ДоступныйВидПродукции, Строка(ДоступныйВидПродукции));
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ВидПродукции.СписокВыбора.СортироватьПоПредставлению();
	
	Если Элементы.ВидПродукции.СписокВыбора.Количество() > 0
		И Элементы.ВидПродукции.СписокВыбора.НайтиПоЗначению(ВидПродукции) = Неопределено Тогда
		ВидПродукции = Элементы.ВидПродукции.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

#Область ПроверкаНаличияЭлементовКлассификатораВБазе

&НаСервере
Процедура ОпределитьНаличиеКодаТНВЭД()
	
	ТаблицаФормы = ЭтаФорма.КодыТНВЭДОнлайн;
	Если ТаблицаФормы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивИдентификаторов = ТаблицаФормы.Выгрузить(, "КодТНВЭД").ВыгрузитьКолонку("КодТНВЭД");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КодыТНВЭД.КодТНВЭД     КАК КодТНВЭД,
	|	КодыТНВЭД.ВидПродукции КАК ВидПродукции
	|ИЗ
	|	РегистрСведений.КодыТНВЭДИСМП КАК КодыТНВЭД
	|ГДЕ
	|	КодыТНВЭД.КодТНВЭД В(&МассивИдентификаторов)";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПараметрыПоиска = Новый Структура("КодТНВЭД");
	
	Пока Выборка.Следующий() Цикл
		
		ПараметрыПоиска.КодТНВЭД = Выборка.КодТНВЭД;
		
		НайденныеСтроки = ТаблицаФормы.НайтиСтроки(ПараметрыПоиска);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока.ЕстьВБазе = 1;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбработкаВыбораЗначенияСписка(ВыбраннаяСтрока, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("ДанныеФормыСтруктура") Тогда
		ДанныеСтроки = ВыбраннаяСтрока;
	Иначе
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ВыбраннаяСтрока);
	КонецЕсли;
	
	Если РежимВыбора Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ВозвращатьСсылкуНаЭлементКлассификатора Тогда
			Результат = ОбработкаВыбораЗначенияИзСпискаНаСервере(ДанныеСтроки.КодТНВЭД, ДанныеСтроки.НаименованиеПолное, Ложь);
			ВыбранноеЗначение = Результат.ЭлементСправочника;
		Иначе
			ВыбранноеЗначение = ДанныеСтроки.КодТНВЭД;
		КонецЕсли;
		ОповеститьОВыборе(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗначенияОнлайнКлассификатораИзСписка(ВыбраннаяСтрока, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.КодыТНВЭДОнлайн.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элементы.КодыТНВЭДОнлайн.ДанныеСтроки(ВыбраннаяСтрока);
	КодТНВЭД = ДанныеСтроки.КодТНВЭД;
	Если Не ДанныеСтроки.ЕстьВБазе Тогда
		Наименование = ДанныеСтроки.НаименованиеПолное;
		Результат = ОбработкаВыбораЗначенияИзСпискаНаСервере(КодТНВЭД, Наименование);
		ДанныеСтроки.ЕстьВБазе = 1;
		Если ВозвращатьСсылкуНаЭлементКлассификатора Тогда
			КодТНВЭД = Результат.ЭлементСправочника;
		КонецЕсли;
	КонецЕсли;
	
	Если РежимВыбора Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(КодТНВЭД);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработкаВыбораЗначенияИзСпискаНаСервере(КодТНВЭД, Наименование, Записывать = Истина)
	
	Результат = ИнтеграцияИСМП.ПолучитьДанныеСопоставленногоКлассификатораТНВЭД(КодТНВЭД);
	
	Если Записывать Тогда
		
		Если Результат.НаименованиеПолное <> Неопределено Тогда
			Наименование = Результат.НаименованиеПолное;
		КонецЕсли;
		
		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("КодТНВЭД", КодТНВЭД);
		СтруктураЗаписи.Вставить("ВидПродукции", ВидПродукции);
		СтруктураЗаписи.Вставить("НаименованиеПолное", Наименование);
		
		РегистрыСведений.КодыТНВЭДИСМП.ЗаписатьДанныеКодаТНВЭД(СтруктураЗаписи);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

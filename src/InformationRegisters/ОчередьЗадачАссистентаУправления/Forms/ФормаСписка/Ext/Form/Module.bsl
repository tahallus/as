
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСвойстваЗадания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = Элементы.ЗавершеноСОшибкой.Имя Тогда
		ОткрытьФорму(
			"РегистрСведений.ОчередьЗадачАссистентаУправления.Форма.ОшибкаВыполнения",
			Новый Структура("Ключ", ВыбраннаяСтрока));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОчередь(Команда)
	
	ВыполнитьОчередьНаСервере();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОчередьСообщений(Команда)
	ВыполнитьОчередьСообщенийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОчередь(Команда)
	
	Элементы.Список.Обновить();
	
	ЗаполнитьСвойстваЗадания();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСвойстваЗадания()
	
	Если РаботаВМоделиСервиса.РазделениеВключено() Тогда
		ЗаполнитьСвойстваЗаданияРежимСервиса();
	Иначе
		ЗаполнитьСвойстваЗаданияРежимЛокальный();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСвойстваЗаданияРежимСервиса()
	
	ЗаданиеАссистента = ЗаданиеАссистента();
	Если НЕ ЗначениеЗаполнено(ЗаданиеАссистента) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаданиеВключено = ЗаданиеАссистента.Использование;
	СостояниеЗадания = ЗаданиеАссистента.СостояниеЗадания;
	ЧасовойПояс = ЧасовойПоясСеанса();
	ЗапланированныйМоментЗапускаЗадания = МестноеВремя(
		ЗаданиеАссистента.Идентификатор.ЗапланированныйМоментЗапуска, ЧасовойПояс);
	ДатаЗавершенияПоследнегоЗапуска = МестноеВремя(
		ЗаданиеАссистента.Идентификатор.ДатаЗавершенияПоследнегоЗапуска, ЧасовойПояс);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСвойстваЗаданияРежимЛокальный()
	
	Элементы.ЗапланированныйМоментЗапускаЗадания.Видимость = Ложь;
	
	ЗаданиеАссистента = ЗаданиеАссистента();
	Если ЗаданиеАссистента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаданиеВключено = ЗаданиеАссистента.Использование;
	
	Если ЗаданиеАссистента.ПоследнееЗадание = Неопределено Тогда
		СостояниеЗадания = НСтр("ru='Не определено'");
	Иначе
		СостояниеЗадания = ЗаданиеАссистента.ПоследнееЗадание.Состояние;
		ДатаЗавершенияПоследнегоЗапуска = ЗаданиеАссистента.ПоследнееЗадание.Конец;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОчередьНаСервере()
	
	АссистентУправления.ВыполнитьТекущиеЗадачиСейчас();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОчередьСообщенийНаСервере()
	
	ОбсужденияУНФ.ЗаписатьОтложенныеСообщенияВСистемуВзаимодействия();
	
КонецПроцедуры

&НаСервере
Функция ЗаданиеАссистента()
	
	Возврат РегламентныеЗаданияСервер.Задание(Метаданные.РегламентныеЗадания.ВыполнениеЗадачАссистентаУправления);
	
КонецФункции

#КонецОбласти

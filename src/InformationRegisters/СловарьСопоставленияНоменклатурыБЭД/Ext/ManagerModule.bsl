
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяРегистра = "РегистрСведений.СловарьСопоставленияНоменклатурыБЭД";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки        = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("СсылкаНаОбъект");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("СсылкаНаОбъект");
	
	НачальнаяРегистрацияДанныхСопоставленияДляСловаря(ДополнительныеПараметры, Параметры);

КонецПроцедуры

// Обработчик обновления БЭД 1.7.1
//
// Перебирает ссылки из определяемых типов, разбирает значение переопределяемого поля наименования на отдельные слова
// и записывает в РегистрСведений СловарьНоменклатурыХарактеристикиБЭД.
// 
// Параметры:
//  Параметры - Структура из см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СловарьСопоставленияНоменклатурыБЭД;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);

	ТипНоменклатурыБЭД   = Метаданные.ОпределяемыеТипы.НоменклатураБЭД.Тип;
	ТипХарактеристикиБЭД = Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатурыБЭД.Тип;
	
	НаборНоменклатур   = Новый Массив;
	НаборХарактеристик = Новый Массив;
	Для Каждого Строка Из ОбновляемыеДанные Цикл
		
		СсылкаНаОбъект = Строка.СсылкаНаОбъект;
		ТипСсылки      = ТипЗнч(СсылкаНаОбъект);
		
		Если ТипНоменклатурыБЭД.СодержитТип(ТипСсылки) Тогда
			НаборНоменклатур.Добавить(СсылкаНаОбъект);
		ИначеЕсли ТипХарактеристикиБЭД.СодержитТип(ТипСсылки) Тогда
			НаборХарактеристик.Добавить(СсылкаНаОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
	ЕстьОтработанныеЗаписи = Ложь;
	ПроизошлаОшибка        = Ложь;
	ТекстСообщения         = "";
	
	ОбработатьДанныеДляЗаполненияСловаряСопоставленияНоменклатурыБЭД(НаборНоменклатур, МетаданныеОбъекта, ЕстьОтработанныеЗаписи,
		ПроизошлаОшибка, ТекстСообщения, Перечисления.ТипОбъектаСопоставленияНоменклатурыБЭД.Номенклатура);
	ОбработатьДанныеДляЗаполненияСловаряСопоставленияНоменклатурыБЭД(НаборХарактеристик, МетаданныеОбъекта, ЕстьОтработанныеЗаписи,
		ПроизошлаОшибка, ТекстСообщения, Перечисления.ТипОбъектаСопоставленияНоменклатурыБЭД.Характеристика);
	
	Если НЕ ЕстьОтработанныеЗаписи И ПроизошлаОшибка Тогда
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьДанныеДляЗаполненияСловаряСопоставленияНоменклатурыБЭД(Знач НаборСсылок, Знач МетаданныеОбъекта, ЕстьОтработанныеЗаписи,
		ПроизошлаОшибка, ТекстСообщения, Знач ТипОбъекта)
	
	Результат = СопоставлениеНоменклатурыКонтрагентовСлужебный.ПолучитьСловаДляЗаписиВСловарьСопоставленияНоменклатурыБЭД(НаборСсылок, ТипОбъекта);
	
	Если Результат = Неопределено ИЛИ Результат.Пустой() Тогда
		
		Для Каждого Ссылка Из НаборСсылок Цикл
			
			НачатьТранзакцию();
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки       = Блокировка.Добавить(Метаданные.РегистрыСведений.СловарьСопоставленияНоменклатурыБЭД.ПолноеИмя());
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("СсылкаНаОбъект", Ссылка);
				Блокировка.Заблокировать();

				НаборЗаписей = РегистрыСведений.СловарьСопоставленияНоменклатурыБЭД.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.СсылкаНаОбъект.Установить(Ссылка);
				НаборЗаписей.Прочитать();
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
				
				ЕстьОтработанныеЗаписи = Истина;
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				
				ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по ссылке: %1 по причине:'");
				ТекстСообщения  = СтрШаблон(ШаблонСообщения, Ссылка) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
					МетаданныеОбъекта, Ссылка, ТекстСообщения);
				
				ПроизошлаОшибка = Истина;
				
			КонецПопытки;
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	ВыборкаНаименований = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНаименований.Следующий() Цикл
		
		СсылкаНаОбъект = ВыборкаНаименований.ПолеГруппировкиСсылкаИлиИдентификатор;
		ВсегоСлов      = ВыборкаНаименований.Слово - 1;
		
		НаборСловНаименований  = Новый СписокЗначений;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки       = Блокировка.Добавить(Метаданные.РегистрыСведений.СловарьСопоставленияНоменклатурыБЭД.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("СсылкаНаОбъект", СсылкаНаОбъект);
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СловарьСопоставленияНоменклатурыБЭД.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.СсылкаНаОбъект.Установить(СсылкаНаОбъект);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				НаборЗаписей.Очистить();
			КонецЕсли;
			
			Индекс = 1;
			ВыборкаСлов = ВыборкаНаименований.Выбрать();
			Пока ВыборкаСлов.Следующий() Цикл
				
				Если ВыборкаСлов.ЭтоНаименование Тогда
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.СсылкаНаОбъект = СсылкаНаОбъект;
					НоваяЗапись.Слово          = ВыборкаСлов.Слово;
					НоваяЗапись.ХешСлова       = ВыборкаСлов.ХешНаименования;
					НоваяЗапись.Позиция        = 0;
					НоваяЗапись.ТипОбъекта     = ТипОбъекта;
					НоваяЗапись.ВсегоСлов      = ВсегоСлов;
				Иначе
					
					ХешСлова = ВыборкаСлов.ХешСлова;
					
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.СсылкаНаОбъект = СсылкаНаОбъект;
					НоваяЗапись.Слово          = ВыборкаСлов.Слово;
					НоваяЗапись.ХешСлова       = ХешСлова;
					НоваяЗапись.Позиция        = Индекс;
					НоваяЗапись.ТипОбъекта     = ТипОбъекта;
					НоваяЗапись.ВсегоСлов      = ВсегоСлов;
					
					НаборСловНаименований.Добавить(НоваяЗапись.Слово);
					
					Индекс = Индекс + 1;
				КонецЕсли;
				
			КонецЦикла;
			
			НаборСловНаименований.СортироватьПоЗначению();
			СортированныйНаборСлов = НаборСловНаименований.ВыгрузитьЗначения();

			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Слово          = СтрСоединить(СортированныйНаборСлов, " ");
			НоваяЗапись.ХешСлова       = СопоставлениеНоменклатурыКонтрагентовСлужебный.Хеш_MD5_64(НоваяЗапись.Слово);
			НоваяЗапись.Позиция        = -1;
			НоваяЗапись.ТипОбъекта     = ТипОбъекта;
			НоваяЗапись.ВсегоСлов      = ВсегоСлов;
			НоваяЗапись.СсылкаНаОбъект = СсылкаНаОбъект;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
						
			ЕстьОтработанныеЗаписи = Истина;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			
			ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по ссылке: %1 по причине:'");
			ТекстСообщения  = СтрШаблон(ШаблонСообщения, СсылкаНаОбъект) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, СсылкаНаОбъект, ТекстСообщения);
				
			ПроизошлаОшибка = Истина;

		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура НачальнаяРегистрацияДанныхСопоставленияДляСловаря(ДополнительныеПараметры, Параметры)
	
	ТипыМетаданных = Метаданные.ОпределяемыеТипы.ДанныеСопоставленияБЭД.Тип.Типы();
	Для Каждого ТипМетаданного Из ТипыМетаданных Цикл
		
		СсылкаНаОбъект = "";
		ОтработаныВсеДанные  = Ложь;

		ОбъектТипаМетаданных = Метаданные.НайтиПоТипу(ТипМетаданного);
		
		Запрос = Новый Запрос;
		ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ТаблицаОпределяемогоТипа.Ссылка КАК СсылкаНаОбъект,
		|	0 КАК Позиция
		|ИЗ
		|	#ИмяТаблицыСправочника КАК ТаблицаОпределяемогоТипа
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СловарьСопоставленияНоменклатурыБЭД КАК СловарьСопоставленияНоменклатурыБЭД
		|		ПО ТаблицаОпределяемогоТипа.Ссылка = СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект
		|ГДЕ
		|	ТаблицаОпределяемогоТипа.Ссылка > &Ссылка
		|	И &ИерархическийСправочник
		|	И НЕ ТаблицаОпределяемогоТипа.ПометкаУдаления
		|	И (СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект ЕСТЬ NULL
		|		ИЛИ НЕ ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					РегистрСведений.СловарьСопоставленияНоменклатурыБЭД КАК СловарьСопоставленияНоменклатурыБЭД
		|				ГДЕ
		|					СловарьСопоставленияНоменклатурыБЭД.Позиция < 0
		|					И СловарьСопоставленияНоменклатурыБЭД.СсылкаНаОбъект = ТаблицаОпределяемогоТипа.Ссылка))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяТаблицыСправочника", СтрШаблон("Справочник.%1", ОбъектТипаМетаданных.Имя));
		Если ОбъектТипаМетаданных.Иерархический Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИерархическийСправочник", "НЕ ТаблицаОпределяемогоТипа.ЭтоГруппа");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИерархическийСправочник", "Истина");
		КонецЕсли;
		Запрос.Текст = ТекстЗапроса;
		
		Пока НЕ ОтработаныВсеДанные Цикл
			
			Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
			Выгрузка = Запрос.Выполнить().Выгрузить();
			
			КоличествоСтрок = Выгрузка.Количество();
			Если КоличествоСтрок < 1000 Тогда
				ОтработаныВсеДанные = Истина;
			КонецЕсли;
			
			Если КоличествоСтрок = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если КоличествоСтрок > 0 Тогда
				СсылкаНаОбъект = Выгрузка[КоличествоСтрок - 1].СсылкаНаОбъект;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Выгрузка, ДополнительныеПараметры);
			
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
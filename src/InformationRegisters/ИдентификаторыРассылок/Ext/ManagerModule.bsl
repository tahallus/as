#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает идентификаторы письма, используемые в дальнейшем для привязки входящих писем к рассылкам.
// Сопоставление идентификаторов выполняется по полю ИдентификаторСообщения.
// При отсутствии идентификатора сообщения в поле Идентификатор записывается ИдентификаторСообщения.
//
// Параметры:
//  УчетнаяЗапись			 - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - учетная запись,
//  МассоваяРассылка		 - ДокументСсылка.МассоваяРассылка - массовая рассылка, для которой записываются идентификаторы,
//  ИдентификаторыСообщений	 - Массив - массив строк - идентификаторов письма, как указано в поле заголовка Message-ID.
//
Процедура ЗаписатьИдентификаторы(Знач УчетнаяЗапись, Знач МассоваяРассылка, Знач ИдентификаторыСообщений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
	НаборЗаписей.Отбор.МассоваяРассылка.Установить(МассоваяРассылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого ТекИдентификатор Из ИдентификаторыСообщений Цикл
		
		ИдентификаторСообщения = ЭлектроннаяПочтаУНФКлиентСервер.СократитьУгловыеСкобки(ТекИдентификатор);
		
		Если ИдентификаторЕстьВНаборе(НаборЗаписей, ИдентификаторСообщения) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.УчетнаяЗапись = УчетнаяЗапись;
		НоваяЗапись.МассоваяРассылка = МассоваяРассылка;
		НоваяЗапись.ИдентификаторСообщения = ИдентификаторСообщения;
		
		НоваяЗапись.Ключ = ОбменСGoogle.КлючИзИдентификатора(ИдентификаторСообщения,
		"РС.ИдентификаторыРассылок.ЗаписатьИдентификаторы()");
		
	КонецЦикла;
	
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массовые рассылки по переданным идентификаторам сообщений
//
// Параметры:
//  УчетнаяЗапись			 - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - учетная запись,
//  ИдентификаторыСообщений	 - Массив - массив строк - идентификаторов письма, как указано в поле заголовка Message-ID.
// 
// Возвращаемое значение:
//  Соответствие - здесь Ключ - идентификатор сообщения, Значение - ДокументСсылка.МассоваяРассылка.
//
Функция МассовыеРассылкиПоИдентификаторамСообщений(Знач УчетнаяЗапись, Знач ИдентификаторыСообщений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Соответствие;
	
	ТаблицаИдентификаторов = Новый ТаблицаЗначений;
	ТаблицаИдентификаторов.Колонки.Добавить("ИдентификаторСообщения", Новый ОписаниеТипов("Строка"));
	ТаблицаИдентификаторов.Колонки.Добавить("Ключ", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(64)));
	
	Для Каждого ТекИдентификаторСообщения Из ИдентификаторыСообщений Цикл
		Если Не ЗначениеЗаполнено(ТекИдентификаторСообщения) Тогда
			Продолжить;
		КонецЕсли;
		ТекСтрокаТаблицаИдентификаторов = ТаблицаИдентификаторов.Добавить();
		ТекСтрокаТаблицаИдентификаторов.ИдентификаторСообщения = ТекИдентификаторСообщения;
		ТекСтрокаТаблицаИдентификаторов.Ключ = ОбменСGoogle.КлючИзИдентификатора(
		ТекИдентификаторСообщения,
		"РС.ИдентификаторыРассылок.СобытияПоИдентификаторамСообщений()");
	КонецЦикла;
	
	Если ТаблицаИдентификаторов.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаИдентификаторов.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	ТаблицаИдентификаторов.Ключ КАК Ключ
	|ПОМЕСТИТЬ ИдентификаторыСообщенийНаСервере
	|ИЗ
	|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИдентификаторов.ИдентификаторСообщения,
	|	ИдентификаторыРассылок.МассоваяРассылка
	|ИЗ
	|	РегистрСведений.ИдентификаторыРассылок КАК ИдентификаторыРассылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИдентификаторыСообщенийНаСервере КАК ТаблицаИдентификаторов
	|		ПО ИдентификаторыРассылок.Ключ = ТаблицаИдентификаторов.Ключ
	|ГДЕ
	|	ИдентификаторыРассылок.УчетнаяЗапись = &УчетнаяЗапись");
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Запрос.УстановитьПараметр("ТаблицаИдентификаторов", ТаблицаИдентификаторов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.ИдентификаторСообщения] = Выборка.МассоваяРассылка;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИдентификаторЕстьВНаборе(НаборЗаписей, ИдентификаторСообщения)
	
	Для Каждого ТекЗапись Из НаборЗаписей Цикл
		Если ТекЗапись.ИдентификаторСообщения = ИдентификаторСообщения Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли
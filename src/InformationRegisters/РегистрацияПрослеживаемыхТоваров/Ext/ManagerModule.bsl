
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Выполняет обновления регистра сведений регистрация прослеживаемых товаров
//
// Параметры:
// Регистратор - ДокументСсылка - Документ из которого вызывают процедуру
// ДокументОснования - ДокументСсылка -  Документ основания (первичный документ, по которому сформировано уведомление или не сформировано еще)
// УдалениеПроведения - Булево - флаг, показывающий, что процедуры вызывана при отмене проведения Регистратора
// 
Процедура ОбновитьСостояние(Регистратор, ДокументОснование, УдалениеПроведения = Ложь) Экспорт
	
	ПараметрыДокументаОснования = ПрослеживаемостьПереопределяемый.ПолучитьПараметрыДокументаОснования(ДокументОснование);
	
	Если ПрослеживаемостьПереопределяемый.НеОбновлятьСостояние(ДокументОснование, ПараметрыДокументаОснования.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаЗапроса = ПрослеживаемостьПереопределяемый.ПолучитьТаблицуДляОбновленияРегистрацииПрослеживаемогоТовара(
		Регистратор, ДокументОснование, УдалениеПроведения, ПараметрыДокументаОснования);
		
	Если ТаблицаЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Набор = РегистрыСведений.РегистрацияПрослеживаемыхТоваров.СоздатьНаборЗаписей();
	Набор.Отбор.Основание.Установить(ДокументОснование);
	
	Для каждого ТекущаяСтрока Из ТаблицаЗапроса Цикл
		
		Набор.Отбор.Организация.Установить(ТекущаяСтрока.Организация);
		Набор.Отбор.ВидОперации.Установить(ТекущаяСтрока.ВидОперации);
		
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ТекущаяСтрока);
	
	КонецЦикла;
	
	Набор.Записать(Истина);
	
КонецПроцедуры

// Процедура выполняет удаление записей в регистре при отмене первичного документа
//
// Параметры:
// 
// Регистратор - ДокументСсылка - Первичный документ, из которого вызывают процедуру
// 
Процедура ОбновитьСостояниеУдалениеПроведенияПервичногоДокумента(Регистратор) Экспорт
	
	ПараметрыДокументаОснования = ПрослеживаемостьПереопределяемый.ПолучитьПараметрыДокументаОснования(Регистратор);
	
	Если ПрослеживаемостьПереопределяемый.НеОбновлятьСостояние(Регистратор, ПараметрыДокументаОснования.Дата) Тогда
		Возврат;
	КонецЕсли;

	Набор = РегистрыСведений.РегистрацияПрослеживаемыхТоваров.СоздатьНаборЗаписей();
	Набор.Отбор.Основание.Установить(Регистратор);
	Набор.Отбор.Организация.Установить(ПараметрыДокументаОснования.Организация);
	
	Набор.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Начальное заполнение даты начала обязательного учета маркируемой продукции
// 
// Параметры:
// 	ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - Вид маркируемой продукции.
// Возвращаемое значение:
// 	Дата - Дата начала учета.
Функция ДатаНачалаУчетаМаркируемойПродукции(ВидМаркируемойПродукции) Экспорт
	
	Если ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		Возврат '20190301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		Возврат '20200701';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность Тогда
		
		Возврат '20210101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		
		Возврат '20200301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС Тогда
		
		Возврат '20200301';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Шины Тогда
		
		Возврат '20201101';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		
		Возврат '20201001';
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Велосипеды Тогда
		
		Возврат '20200601';
	
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски Тогда
		
		Возврат '20210601';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		
		Возврат '20201001';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		Возврат '20200701';
		
	ИначеЕсли ВидМаркируемойПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		
		Возврат '20210301';
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаписатьНастройкуУчетаВидаПродукции(НастройкаУчета, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидПродукции.Установить(НастройкаУчета.ВидПродукции);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		СтрокаНабора = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНабора, НастройкаУчета);
		СтрокаНабора.ДатаОбязательнойМаркировки = РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП.ДатаНачалаУчетаМаркируемойПродукции(
			НастройкаУчета.ВидПродукции);
		НастройкаУчета.ДатаОбязательнойМаркировки = СтрокаНабора.ДатаОбязательнойМаркировки;
		
	Иначе
		
		СтрокаНабора = НаборЗаписей.Получить(0);
		ЗаполнитьЗначенияСвойств(СтрокаНабора, НастройкаУчета);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаУчета.ДатаОбязательнойМаркировки) Тогда
		СтрокаНабора.ДатаОбязательнойМаркировки = РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП.ДатаНачалаУчетаМаркируемойПродукции(
			НастройкаУчета.ВидПродукции);
		НастройкаУчета.ДатаОбязательнойМаркировки = СтрокаНабора.ДатаОбязательнойМаркировки;
	КонецЕсли;
	
	Если НЕ НаборЗаписей.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Отказ);
	КонецПопытки;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПродукцииИС.Ссылка КАК ВидПродукции
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|		ПО НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции = ВидыПродукцииИС.Ссылка
	|ГДЕ
	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции ЕСТЬ NULL
	|	И ВидыПродукцииИС.Ссылка В (&ВидыПродукцииИСМП)";
	Запрос.УстановитьПараметр("ВидыПродукцииИСМП", ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(Истина));
	ТаблицаИзмерений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ТаблицаИзмерений, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП";
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("ВидПродукции", Выборка.ВидПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор["ВидПродукции"].Установить(Выборка.ВидПродукции);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				НоваяСтрока = НаборЗаписей.Добавить();
				НоваяСтрока.ВидПродукции               = Выборка.ВидПродукции;
				НоваяСтрока.ДатаОбязательнойМаркировки = ДатаНачалаУчетаМаркируемойПродукции(Выборка.ВидПродукции);
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей, ДополнительныеПараметры);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось дату начала обязательной маркировки по виду продукции: %1 по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ВидПродукции, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение, МетаданныеРегистра,, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
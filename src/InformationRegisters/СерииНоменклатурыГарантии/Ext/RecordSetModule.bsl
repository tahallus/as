#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияСерииНоменклатурыГарантииИзменение") ИЛИ
		СтруктураВременныеТаблицы.Свойство("ДвиженияСерииНоменклатурыГарантииИзменение") И НЕ СтруктураВременныеТаблицы.ДвиженияСерииНоменклатурыГарантииИзменение Тогда
				
		// Если временная таблица "ДвиженияСерииНоменклатурыИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияСерииНоменклатурыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СерииНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	СерииНоменклатуры.Номенклатура КАК Номенклатура,
		|	СерииНоменклатуры.Характеристика КАК Характеристика,
		|	СерииНоменклатуры.Серия КАК Серия,
		|	СерииНоменклатуры.Операция
		|ПОМЕСТИТЬ ДвиженияСерииНоменклатурыГарантииПередЗаписью
		|ИЗ
		|	РегистрСведений.СерииНоменклатурыГарантии КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	Иначе
		
		// Если временная таблица "ДвиженияСерииНоменклатурыИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблицу "ДвиженияСерииНоменклатурыПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияСерииНоменклатурыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСерииНоменклатурыИзменение.Номенклатура КАК Номенклатура,
		|	ДвиженияСерииНоменклатурыИзменение.Характеристика КАК Характеристика,
		|	ДвиженияСерииНоменклатурыИзменение.Серия КАК Серия,
		|	ДвиженияСерииНоменклатурыИзменение.Операция КАК Операция
		|ПОМЕСТИТЬ ДвиженияСерииНоменклатурыГарантииПередЗаписью
		|ИЗ
		|	ДвиженияСерииНоменклатурыГарантииИзменение КАК ДвиженияСерииНоменклатурыИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СерииНоменклатуры.НомерСтроки,
		|	СерииНоменклатуры.Номенклатура,
		|	СерииНоменклатуры.Характеристика,
		|	СерииНоменклатуры.Серия,
		|	СерииНоменклатуры.Операция
		|ИЗ
		|	РегистрСведений.СерииНоменклатурыГарантии КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияСерииНоменклатурыГарантииИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияСерииНоменклатурыГарантииИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияСерииНоменклатурыГарантииИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияСерииНоменклатурыГарантииИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияЗапасыНаСкладахИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Номенклатура КАК Номенклатура,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Характеристика КАК Характеристика,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Операция КАК Операция,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Серия КАК Серия,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Серия.Продан КАК СерияПродан,
	|	СУММА(ДвиженияСерииНоменклатурыГарантииИзменение.ВидИзменения) КАК ВидИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияСерииНоменклатурыГарантииПередЗаписью.Номенклатура КАК Номенклатура,
	|		ДвиженияСерииНоменклатурыГарантииПередЗаписью.Характеристика КАК Характеристика,
	|		ДвиженияСерииНоменклатурыГарантииПередЗаписью.Операция КАК Операция,
	|		ДвиженияСерииНоменклатурыГарантииПередЗаписью.Серия КАК Серия,
	|		-1 КАК ВидИзменения
	|	ИЗ
	|		ДвиженияСерииНоменклатурыГарантииПередЗаписью КАК ДвиженияСерииНоменклатурыГарантииПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияСерииНоменклатурыПриЗаписи.Номенклатура,
	|		ДвиженияСерииНоменклатурыПриЗаписи.Характеристика,
	|		ДвиженияСерииНоменклатурыПриЗаписи.Операция,
	|		ДвиженияСерииНоменклатурыПриЗаписи.Серия,
	|		1
	|	ИЗ
	|		РегистрСведений.СерииНоменклатурыГарантии КАК ДвиженияСерииНоменклатурыПриЗаписи
	|	ГДЕ
	|		ДвиженияСерииНоменклатурыПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияСерииНоменклатурыГарантииИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Номенклатура,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Характеристика,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Операция,
	|	ДвиженияСерииНоменклатурыГарантииИзменение.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияСерииНоменклатурыГарантииИзменение.ВидИзменения) <> 0
	|");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
		
		Если ДополнительныеСвойства.ДляПроведения.Свойство("РежимЗаписи") Тогда
			
			Если ДополнительныеСвойства.ДляПроведения.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
				Если ВыборкаИзРезультатаЗапроса.Операция = Перечисления.ОперацииСерийНоменклатуры.Расход Тогда
				
					УстановитьСостояниеПродан = Истина;
					
				ИначеЕсли ВыборкаИзРезультатаЗапроса.Операция = Перечисления.ОперацииСерийНоменклатуры.Приход Тогда
					
					УстановитьСостояниеПродан = Неопределено;
					
				ИначеЕсли ВыборкаИзРезультатаЗапроса.Операция = Перечисления.ОперацииСерийНоменклатуры.Возврат Тогда	
					
					УстановитьСостояниеПродан = Ложь;
					
				КонецЕсли;
			ИначеЕсли ДополнительныеСвойства.ДляПроведения.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
				Если ВыборкаИзРезультатаЗапроса.Операция = Перечисления.ОперацииСерийНоменклатуры.Расход Тогда
				
					УстановитьСостояниеПродан = Ложь;
					
				ИначеЕсли ВыборкаИзРезультатаЗапроса.Операция = Перечисления.ОперацииСерийНоменклатуры.Приход Тогда
					
					УстановитьСостояниеПродан = Неопределено;
					
				ИначеЕсли ВыборкаИзРезультатаЗапроса.Операция = Перечисления.ОперацииСерийНоменклатуры.Возврат Тогда	
					
					УстановитьСостояниеПродан = Истина;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если УстановитьСостояниеПродан <>Неопределено И УстановитьСостояниеПродан <> ВыборкаИзРезультатаЗапроса.СерияПродан Тогда
			СерияОбъект = ВыборкаИзРезультатаЗапроса.Серия.ПолучитьОбъект();
			СерияОбъект.Продан = УстановитьСостояниеПродан;
			СерияОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	// Новые изменения были помещены во временную таблицу "ДвиженияСерииНоменклатурыГарантииИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	
	// Временная таблица "ДвиженияЗапасыНаСкладахПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияСерииНоменклатурыГарантииПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
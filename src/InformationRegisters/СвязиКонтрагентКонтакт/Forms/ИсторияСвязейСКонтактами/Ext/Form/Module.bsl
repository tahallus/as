
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Контрагент", ВладелецКонтрагент);

	Если ЗначениеЗаполнено(ВладелецКонтрагент) Тогда
		
		УстановитьОтборыСвязей(Справочники.КонтактныеЛица.ПустаяСсылка());
		
		// Контекстное открытие формы с отбором по контакту
		Элементы.Контрагент.Видимость = Ложь;
		
		Список.Параметры.УстановитьЗначениеПараметра("ОсновноеКонтактноеЛицоКонтрагента",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецКонтрагент, "КонтактноеЛицо"));
			
		Список.Параметры.УстановитьЗначениеПараметра("Подписант",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецКонтрагент, "КонтактноеЛицоПодписант"));
		Список.Параметры.УстановитьЗначениеПараметра("Контрагент", ВладелецКонтрагент);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"КонтактНедействителен",
		Ложь,
		,
		,
		Не Элементы.ПоказыватьНедействительных.Пометка);
		
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.КонтактныеЛица);
	Элементы.ФормаГруппаОсновные.Доступность = МожноРедактировать;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Контрагент" ИЛИ ИмяСобытия = "Запись_КонтактноеЛицо" Тогда
		ОбновитьСписок();
		Элементы.Список.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "УстановкаРеквизитаВыполнена" Тогда
		Элементы.Список.ТекущаяСтрока = Параметр;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элемент.ТекущиеДанные) = ТипЗнч(Неопределено) 
		ИЛИ ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") ИЛИ 
		НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Контакт) ИЛИ НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Контакт) Тогда
		
		МассивОтбора = Новый Массив;
		МассивОтбора.Добавить(Элемент.ТекущиеДанные);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвязьКонтактКонтрагент, "Контакт",
			МассивОтбора, ВидСравненияКомпоновкиДанных.ВСписке);
			
		МассивОтбораКонтрагент = Новый Массив;
		МассивОтбораКонтрагент.Добавить(ВладелецКонтрагент);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвязьКонтактКонтрагент, "Контрагент",
			МассивОтбораКонтрагент, ВидСравненияКомпоновкиДанных.ВСписке);
		Возврат;
		
	КонецЕсли;
	
	УстановитьОтборыСвязей(Элементы.Список.ТекущиеДанные.Контакт);
	
	Элементы.СвязьКонтактКонтрагент.ТекущаяСтрока = 1;
	
	КонтактНедействителен = ЭтоНедействительныйКонтакт(Элементы.Список.ТекущиеДанные.Контакт);
	СвязьНедействительна = Элементы.Список.ТекущиеДанные.ИндексПиктограммы = 1 ИЛИ Элементы.Список.ТекущиеДанные.ИндексПиктограммы = 2;
	
	Элементы.ИспользоватьКакОсновной.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновноеКонтактноеЛицо 
		И НЕ СвязьНедействительна И НЕ КонтактНедействителен;
		
	Элементы.ИспользоватьКакПодписанта.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоПодписант 
			И НЕ СвязьНедействительна И НЕ КонтактНедействителен;
			
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ",Элемент.ТекущиеДанные.Контакт);
	ПараметрыФормы.Вставить("ТекущийКонтрагент", ВладелецКонтрагент);
	ОткрытьФорму("Справочник.КонтактныеЛица.ФормаОбъекта",ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСвязиКонтактКонтрагент

&НаКлиенте
Процедура СвязьКонтактКонтрагентПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СвязьКонтактКонтрагентПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СвязьКонтактКонтрагентПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СвязьКонтактКонтрагентВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьКакОсновной(Команда)
	
	ИнициализироватьЗаписьРеквизитаВладельца("КонтактноеЛицо");
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКакПодписанта(Команда)
	
	ИнициализироватьЗаписьРеквизитаВладельца("КонтактноеЛицоПодписант");
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущиеДанные) = ТипЗнч(Неопределено) 
		ИЛИ ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ",Элементы.Список.ТекущиеДанные.Контакт);
	ОткрытьФорму("Справочник.КонтактныеЛица.ФормаОбъекта",ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительных(Команда)
	
	Элементы.ПоказыватьНедействительных.Пометка = Не Элементы.ПоказыватьНедействительных.Пометка;
	Элементы.СписокКонтекстноеМенюПоказыватьНедействительных.Пометка = Не Элементы.СписокКонтекстноеМенюПоказыватьНедействительных.Пометка;
	Элементы.КонтактНедействителен.Видимость = Элементы.ПоказыватьНедействительных.Пометка;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"КонтактНедействителен",
		Ложь,
		,
		,
		Не Элементы.ПоказыватьНедействительных.Пометка);
		
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено ИЛИ Элементы.Список.ТекущаяСтрока = Неопределено
		ИЛИ Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДоСмещения = Элементы.Список.ТекущаяСтрока;
	
	ПорядокЭлементовИзменен = ИзменитьПорядокЗаписей(Элементы.Список.ТекущиеДанные.Контрагент, 
		Элементы.Список.ТекущиеДанные.Контакт,
		-1,
		Элементы.ПоказыватьНедействительных.Пометка);
	
	Если НЕ ПорядокЭлементовИзменен Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	Элементы.Список.ТекущаяСтрока = СтрокаДоСмещения;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено ИЛИ Элементы.Список.ТекущаяСтрока = Неопределено
		ИЛИ Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДоСмещения = Элементы.Список.ТекущаяСтрока;

	ПорядокЭлементовИзменен = ИзменитьПорядокЗаписей(Элементы.Список.ТекущиеДанные.Контрагент, 
		Элементы.Список.ТекущиеДанные.Контакт,
		1,
		Элементы.ПоказыватьНедействительных.Пометка);
	
	Если НЕ ПорядокЭлементовИзменен Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	Элементы.Список.ТекущаяСтрока = СтрокаДоСмещения;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИнициализироватьЗаписьРеквизитаВладельца(ИмяРеквизита)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		
		Или Элементы.Список.ТекущиеДанные = Неопределено
		
		Или (ИмяРеквизита = "КонтактноеЛицо"
			И Элементы.Список.ТекущиеДанные.ЭтоОсновноеКонтактноеЛицо)
		
		Или (ИмяРеквизита = "КонтактноеЛицоПодписант"
			И Элементы.Список.ТекущиеДанные.ЭтоПодписант)
			
	Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// Если открыта форма контрагента, то изменение основного контактного лица выполняем в ней
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Контрагент",		ВладелецКонтрагент);
	СтруктураПараметров.Вставить("КонтактноеЛицо",	Элементы.Список.ТекущиеДанные.Контакт);
	СтруктураПараметров.Вставить("Реквизит", 		ИмяРеквизита);
	
	Оповестить("УстановкаКонтактногоЛица", СтруктураПараметров, ЭтотОбъект);
	
	// Обновим динамический список
	Если ЗначениеЗаполнено(ВладелецКонтрагент) Тогда
		
		СоответствиеПараметровСписка = Новый Соответствие;
		СоответствиеПараметровСписка.Вставить("КонтактноеЛицо",			"ОсновноеКонтактноеЛицоКонтрагента");
		СоответствиеПараметровСписка.Вставить("КонтактноеЛицоПодписант","Подписант");
		
		Список.Параметры.УстановитьЗначениеПараметра(СоответствиеПараметровСписка[ИмяРеквизита],
			СтруктураПараметров.КонтактноеЛицо);
		
	Иначе
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// 1. Недействительные связи выделяем серым
	// a)общий список
	// б)список со связями
	НовоеУсловноеОформлениеСписок = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	
	Оформление = НовоеУсловноеОформлениеСписок.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;
	
	Отбор = НовоеУсловноеОформлениеСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СвязьНедействительна");
	Отбор.ПравоеЗначение 	= Истина;
	
	НовоеУсловноеОформлениеИсторияСвязей = СвязьКонтактКонтрагент.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	
	Оформление = НовоеУсловноеОформлениеИсторияСвязей.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;
	
	Отбор = НовоеУсловноеОформлениеИсторияСвязей.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СвязьНедействительна");
	Отбор.ПравоеЗначение 	= Истина;
	
	// 1. Недействительные контакты/контрагентов выделяем серым
	НовоеУсловноеОформлениеСписок = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	
	Оформление = НовоеУсловноеОформлениеСписок.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;
	
	Отбор = НовоеУсловноеОформлениеСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("КонтактНедействителен");	
	Отбор.ПравоеЗначение 	= Истина;
	

КонецПроцедуры

&НаСервере
Функция ИзменитьПорядокЗаписей(Контрагент, Контакт, Смещение, ВключатьНедействительные)
	
	ПорядокИзменен = Ложь;
	
	РегистрыСведений.СвязиКонтрагентКонтакт.ИзменитьПорядок(Контрагент, Контакт, Смещение, ПорядокИзменен,
		ВключатьНедействительные);
	
	Возврат ПорядокИзменен;
	
КонецФункции

&НаСервере
Процедура ОбновитьСписок()
	
	Список.Параметры.УстановитьЗначениеПараметра("ОсновноеКонтактноеЛицоКонтрагента",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецКонтрагент, "КонтактноеЛицо"));
			
	Список.Параметры.УстановитьЗначениеПараметра("Подписант",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецКонтрагент, "КонтактноеЛицоПодписант"));
			
	
КонецПроцедуры

&НаСервере
Функция ЭтоНедействительныйКонтакт(Контакт)
	
	КонтактНедействителен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контакт, "Недействителен");
	
	Если КонтактНедействителен = Неопределено Тогда
		КонтактНедействителен = Ложь;
	КонецЕсли;
	
	Возврат КонтактНедействителен;
	
КонецФункции

&НаСервере
Процедура УстановитьОтборыСвязей(Контакт)
	
	МассивОтбораКонтрагент = Новый Массив;
	МассивОтбораКонтрагент.Добавить(ВладелецКонтрагент);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвязьКонтактКонтрагент, "Контрагент",
		МассивОтбораКонтрагент, ВидСравненияКомпоновкиДанных.ВСписке);
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить(Контакт);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвязьКонтактКонтрагент, "Контакт",
		МассивОтбора, ВидСравненияКомпоновкиДанных.ВСписке);
	
КонецПроцедуры

#КонецОбласти

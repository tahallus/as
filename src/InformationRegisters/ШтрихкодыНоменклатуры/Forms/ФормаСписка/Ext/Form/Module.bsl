#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Номенклатура") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Номенклатура",
			Параметры.Номенклатура);
		Если Не (Параметры.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас
			Или Параметры.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга
			Или Параметры.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа
			Или Параметры.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат) Тогда
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru = 'Штрихкоды хранятся только для запасов, работ и услуг'");
			Элементы.Список.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Список.Параметры.УстановитьЗначениеПараметра("ШтрихКод", Параметры.Номенклатура.ШтрихКод);
		
	Иначе
		
		ПараметрыСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		ПараметрыСписка.ТекстЗапроса =
		"ВЫБРАТЬ
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.Штрихкод КАК Штрихкод,
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.Номенклатура КАК Номенклатура,
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.Характеристика КАК Характеристика,
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.Партия КАК Партия,
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.Номенклатура.Родитель КАК Группа,
		|	РегистрСведенийШтрихкодыНоменклатурыПереопределяемый.Номенклатура.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
		|	0 КАК ШтрихКодДляПечатныхФорм
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК РегистрСведенийШтрихкодыНоменклатурыПереопределяемый";
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, ПараметрыСписка);
	КонецЕсли;
	
	Элементы.ПраваяПанель.Видимость = Не Параметры.Свойство("Номенклатура");
	Элементы.Характеристика.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики");
	Элементы.Партия.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьПартии");
	Элементы.СписокНоменклатура.Видимость = Не Параметры.Свойство("Номенклатура");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокИспользоватьШтрихКодДляОтчетовИПечатныхФорм", "Видимость", Параметры.Свойство("Номенклатура"));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихКодДляПечатныхФорм", "Видимость", Параметры.Свойство("Номенклатура"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьШтрихКода" Тогда
		
		ФормаВладельца = ЭтаФорма.ВладелецФормы;
		
		Если Не ФормаВладельца = Неопределено И Параметр.Номенклатура = ФормаВладельца.Объект.Ссылка 
			И (Не ЗначениеЗаполнено(ФормаВладельца.Объект.ШтрихКод) Или Параметр.ПерезаписатьЗначениеШтрихКодаВНоменклатуре) Тогда
			
			 Список.Параметры.УстановитьЗначениеПараметра("ШтрихКод", Параметр.ШтрихКод);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДекорацияРазвернутьОтборыНажатие(Элемент)
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьОтборыНажатие(Элемент)
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
КонецПроцедуры

&НаКлиенте
Процедура ОтборНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("ВыборГруппИЭлементов, РежимВыбора", ИспользованиеГруппИЭлементов.ГруппыИЭлементы, Истина);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка", ПараметрыОткрытия, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Номенклатура", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтборХарактеристикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Характеристика", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПартияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Партия", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтборКатегорияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("КатегорияНоменклатуры", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Элементы.СписокИспользоватьШтрихКодДляОтчетовИПечатныхФорм.Доступность = Не ТекущиеДанные = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьШтрихКодДляОтчетовИПечатныхФорм(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат
	КонецЕсли;
	
	ФормаВладельца = ЭтаФорма.ВладелецФормы;
	
	Если ФормаВладельца <> Неопределено Тогда 
		ФормаВладельца.Объект.ШтрихКод = ТекущиеДанные.Штрихкод;
		Список.Параметры.УстановитьЗначениеПараметра("ШтрихКод", ТекущиеДанные.Штрихкод);
		ФормаВладельца.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область МеткиОтборов

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения="" Тогда
		ПредставлениеЗначения=Строка(ВыбранноеЗначение);
	КонецЕсли;
	
	Если ИмяПоляОтбораСписка = "Номенклатура" И ВыбранноеЗначение.ЭтоГруппа Тогда
		 ИмяПоляОтбораСписка = "Группа"
	КонецЕсли;
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка,,Истина);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки,
	СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_")+1);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти